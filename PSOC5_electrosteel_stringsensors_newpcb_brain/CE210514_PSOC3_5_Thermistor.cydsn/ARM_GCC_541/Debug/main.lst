ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	presetArraySection
  54              		.type	presetArraySection, %object
  55              		.size	presetArraySection, 1
  56              	presetArraySection:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 2


  58              		.global	messageArraySendCount
  59              		.align	1
  60              		.type	messageArraySendCount, %object
  61              		.size	messageArraySendCount, 2
  62              	messageArraySendCount:
  63 000a 0000     		.space	2
  64              		.global	messageArraySize
  65              		.align	1
  66              		.type	messageArraySize, %object
  67              		.size	messageArraySize, 2
  68              	messageArraySize:
  69 000c 0000     		.space	2
  70              		.global	sysexMessageInProgress
  71              		.type	sysexMessageInProgress, %object
  72              		.size	sysexMessageInProgress, 1
  73              	sysexMessageInProgress:
  74 000e 00       		.space	1
  75              		.global	bufCount
  76              		.type	bufCount, %object
  77              		.size	bufCount, 1
  78              	bufCount:
  79 000f 00       		.space	1
  80              		.global	sendingMessage
  81              		.type	sendingMessage, %object
  82              		.size	sendingMessage, 1
  83              	sendingMessage:
  84 0010 00       		.space	1
  85              		.global	sendKnobs
  86              		.type	sendKnobs, %object
  87              		.size	sendKnobs, 1
  88              	sendKnobs:
  89 0011 00       		.space	1
  90              		.global	currentFloat
  91 0012 0000     		.align	2
  92              		.type	currentFloat, %object
  93              		.size	currentFloat, 4
  94              	currentFloat:
  95 0014 00000000 		.space	4
  96              		.global	mapCount
  97              		.align	2
  98              		.type	mapCount, %object
  99              		.size	mapCount, 4
 100              	mapCount:
 101 0018 00000000 		.space	4
 102              		.global	valsCount
 103              		.align	1
 104              		.type	valsCount, %object
 105              		.size	valsCount, 2
 106              	valsCount:
 107 001c 0000     		.space	2
 108              		.global	mapCountExpectation
 109              		.align	1
 110              		.type	mapCountExpectation, %object
 111              		.size	mapCountExpectation, 2
 112              	mapCountExpectation:
 113 001e 0000     		.space	2
 114              		.global	numMappings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 3


 115              		.align	1
 116              		.type	numMappings, %object
 117              		.size	numMappings, 2
 118              	numMappings:
 119 0020 0000     		.space	2
 120              		.global	parseThatMF
 121              		.type	parseThatMF, %object
 122              		.size	parseThatMF, 1
 123              	parseThatMF:
 124 0022 00       		.space	1
 125              		.global	valCheck
 126 0023 00       		.align	2
 127              		.type	valCheck, %object
 128              		.size	valCheck, 4
 129              	valCheck:
 130 0024 00000000 		.space	4
 131              		.global	testVal
 132              		.align	2
 133              		.type	testVal, %object
 134              		.size	testVal, 4
 135              	testVal:
 136 0028 00000000 		.space	4
 137              		.global	numStrings
 138              		.data
 139              		.align	2
 140              		.type	numStrings, %object
 141              		.size	numStrings, 4
 142              	numStrings:
 143 0000 0A000000 		.word	10
 144              		.global	usbActivityCounter
 145              		.bss
 146              		.type	usbActivityCounter, %object
 147              		.size	usbActivityCounter, 1
 148              	usbActivityCounter:
 149 002c 00       		.space	1
 150              		.comm	midiMsg,4,4
 151              		.global	currentVBUS
 152              		.type	currentVBUS, %object
 153              		.size	currentVBUS, 1
 154              	currentVBUS:
 155 002d 00       		.space	1
 156              		.global	prevVBUS
 157              		.type	prevVBUS, %object
 158              		.size	prevVBUS, 1
 159              	prevVBUS:
 160 002e 00       		.space	1
 161              		.global	USB_active
 162              		.type	USB_active, %object
 163              		.size	USB_active, 1
 164              	USB_active:
 165 002f 00       		.space	1
 166              		.global	USB_check_flag
 167              		.type	USB_check_flag, %object
 168              		.size	USB_check_flag, 1
 169              	USB_check_flag:
 170 0030 00       		.space	1
 171              		.comm	inBuffer,32,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 4


 172              		.comm	myArray,32,4
 173              		.comm	myInputArray,2,4
 174              		.comm	linearPotValue32Bit,8,4
 175              		.global	i
 176              		.type	i, %object
 177              		.size	i, 1
 178              	i:
 179 0031 00       		.space	1
 180              		.global	counter
 181              		.type	counter, %object
 182              		.size	counter, 1
 183              	counter:
 184 0032 00       		.space	1
 185              		.comm	returnedData,32,4
 186              		.comm	temper,4,4
 187              		.comm	previousButtons,44,4
 188              		.global	octave
 189              		.data
 190              		.align	2
 191              		.type	octave, %object
 192              		.size	octave, 4
 193              	octave:
 194 0004 04000000 		.word	4
 195              		.comm	angle,20,4
 196              		.comm	prevAngle,20,4
 197              		.comm	ADC_values,8,4
 198              		.global	rawAngle
 199              		.bss
 200 0033 00       		.align	1
 201              		.type	rawAngle, %object
 202              		.size	rawAngle, 2
 203              	rawAngle:
 204 0034 0000     		.space	2
 205              		.global	midiSent
 206              		.align	1
 207              		.type	midiSent, %object
 208              		.size	midiSent, 2
 209              	midiSent:
 210 0036 0000     		.space	2
 211              		.global	midiOverflow
 212              		.align	1
 213              		.type	midiOverflow, %object
 214              		.size	midiOverflow, 2
 215              	midiOverflow:
 216 0038 0000     		.space	2
 217              		.comm	macroKnobValues,8,4
 218              		.global	currentCopedent
 219              		.type	currentCopedent, %object
 220              		.size	currentCopedent, 1
 221              	currentCopedent:
 222 003a 00       		.space	1
 223              		.global	necks
 224              		.data
 225              		.align	2
 226              		.type	necks, %object
 227              		.size	necks, 2
 228              	necks:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 5


 229 0008 00       		.byte	0
 230 0009 01       		.byte	1
 231              		.comm	rx1Channel,1,1
 232              		.comm	rx2Channel,1,32
 233              		.comm	rx1TD,2,4
 234              		.comm	rx2TD,2,32
 235              		.comm	txChannel,1,32
 236              		.comm	txTD,1,32
 237              		.comm	rx3Channel,1,32
 238              		.comm	rx3TD,1,32
 239              		.comm	rxBufferPluck,52,32
 240              		.comm	rxBufferBar,16,32
 241              		.comm	strings,24,4
 242              		.comm	prevStrings,24,4
 243              		.comm	bar,4,4
 244              		.comm	prevBar,4,4
 245              		.comm	maxStrings,24,4
 246              		.global	amHere
 247              		.bss
 248              		.type	amHere, %object
 249              		.size	amHere, 1
 250              	amHere:
 251 003b 00       		.space	1
 252              		.global	spiCounter
 253              		.type	spiCounter, %object
 254              		.size	spiCounter, 1
 255              	spiCounter:
 256 003c 00       		.space	1
 257              		.global	newDataFlag
 258              		.type	newDataFlag, %object
 259              		.size	newDataFlag, 1
 260              	newDataFlag:
 261 003d 00       		.space	1
 262              		.global	prevOctave
 263 003e 0000     		.align	2
 264              		.type	prevOctave, %object
 265              		.size	prevOctave, 4
 266              	prevOctave:
 267 0040 00000000 		.space	4
 268              		.global	pluck_index
 269              		.type	pluck_index, %object
 270              		.size	pluck_index, 1
 271              	pluck_index:
 272 0044 00       		.space	1
 273              		.global	amHere2
 274              		.type	amHere2, %object
 275              		.size	amHere2, 1
 276              	amHere2:
 277 0045 00       		.space	1
 278              		.global	spiCounter2
 279              		.type	spiCounter2, %object
 280              		.size	spiCounter2, 1
 281              	spiCounter2:
 282 0046 00       		.space	1
 283              		.global	newDataFlag2
 284              		.type	newDataFlag2, %object
 285              		.size	newDataFlag2, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 6


 286              	newDataFlag2:
 287 0047 00       		.space	1
 288              		.global	currentPluckBuffer
 289              		.type	currentPluckBuffer, %object
 290              		.size	currentPluckBuffer, 1
 291              	currentPluckBuffer:
 292 0048 00       		.space	1
 293              		.global	currentBarBuffer
 294              		.type	currentBarBuffer, %object
 295              		.size	currentBarBuffer, 1
 296              	currentBarBuffer:
 297 0049 00       		.space	1
 298              		.global	pluckErrorCount
 299              		.type	pluckErrorCount, %object
 300              		.size	pluckErrorCount, 1
 301              	pluckErrorCount:
 302 004a 00       		.space	1
 303              		.global	SPI1ErrorCount
 304 004b 00       		.align	1
 305              		.type	SPI1ErrorCount, %object
 306              		.size	SPI1ErrorCount, 2
 307              	SPI1ErrorCount:
 308 004c 0000     		.space	2
 309              		.global	inputData
 310              		.type	inputData, %object
 311              		.size	inputData, 1
 312              	inputData:
 313 004e 00       		.space	1
 314              		.section	.text.spis_1_ss,"ax",%progbits
 315              		.align	2
 316              		.global	spis_1_ss
 317              		.thumb
 318              		.thumb_func
 319              		.type	spis_1_ss, %function
 320              	spis_1_ss:
 321              	.LFB64:
 322              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** 
  18:main.c        **** #define myBufferSize 32
  19:main.c        **** void parseSysex(void);
  20:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 7


  21:main.c        **** uint8_t sysexBuffer[2048];
  22:main.c        **** uint32_t sysexPointer = 0;
  23:main.c        **** uint8_t receivingSysex = 0;
  24:main.c        **** uint8_t parsingSysex = 0;
  25:main.c        **** volatile uint8_t presetArray[2048];
  26:main.c        **** uint8_t presetNumberToWrite = 0;
  27:main.c        **** uint8_t copedentNumberToWrite = 0;
  28:main.c        **** uint8_t sendMessageEnd = 0;
  29:main.c        **** enum presetArraySectionState
  30:main.c        **** {
  31:main.c        ****     presetName = 0,
  32:main.c        ****     macroNames = 1,
  33:main.c        ****     initialVals = 2,
  34:main.c        ****     mapCountNext = 3,
  35:main.c        ****     mapping = 4,
  36:main.c        ****     presetEnd = 5,
  37:main.c        **** };
  38:main.c        **** uint8_t presetArraySection = presetName;
  39:main.c        **** 
  40:main.c        **** uint16_t messageArraySendCount = 0;
  41:main.c        **** uint16_t messageArraySize = 0;
  42:main.c        **** 
  43:main.c        **** uint8_t sysexMessageInProgress = 0;
  44:main.c        **** 
  45:main.c        **** uint8_t bufCount = 0;
  46:main.c        **** volatile uint8_t sendingMessage = 0;
  47:main.c        **** volatile uint8_t sendKnobs = 0;
  48:main.c        **** uint32_t currentFloat = 0;
  49:main.c        **** uint32_t mapCount = 0;
  50:main.c        **** 
  51:main.c        **** uint16_t valsCount = 0;
  52:main.c        **** uint16_t mapCountExpectation = 0;
  53:main.c        **** uint16_t numMappings = 0;
  54:main.c        **** volatile uint8_t parseThatMF = 0;
  55:main.c        **** volatile float valCheck = 0.0f;
  56:main.c        **** volatile float testVal = 0.0f;
  57:main.c        **** 
  58:main.c        **** int numStrings = 10;
  59:main.c        **** /*
  60:main.c        **** #define TUNING_ARRAY_SIZE 258
  61:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  62:main.c        **** */
  63:main.c        **** 
  64:main.c        **** volatile uint8 usbActivityCounter = 0u;
  65:main.c        **** uint8 midiMsg[4];
  66:main.c        **** uint8_t currentVBUS = 0;
  67:main.c        **** uint8_t prevVBUS = 0;
  68:main.c        **** volatile uint8_t USB_active = 0;
  69:main.c        **** volatile uint8_t USB_check_flag = 0;
  70:main.c        **** 
  71:main.c        **** 
  72:main.c        **** uint8 inBuffer[myBufferSize];
  73:main.c        **** 
  74:main.c        **** uint8 myArray[myBufferSize];
  75:main.c        **** uint8 myInputArray[2];
  76:main.c        **** int32_t linearPotValue32Bit[2];
  77:main.c        **** uint8_t i = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 8


  78:main.c        **** uint8_t counter = 0;
  79:main.c        **** uint8_t returnedData[myBufferSize];
  80:main.c        **** int32_t temper;
  81:main.c        **** int previousButtons[11];
  82:main.c        **** int octave = 4;
  83:main.c        **** uint16_t angle[10];
  84:main.c        **** uint16_t prevAngle[10];
  85:main.c        **** 
  86:main.c        **** uint16_t ADC_values[4];
  87:main.c        **** uint16_t rawAngle = 0;
  88:main.c        **** uint16_t midiSent = 0;
  89:main.c        **** uint16_t midiOverflow = 0;
  90:main.c        **** 
  91:main.c        **** uint8_t macroKnobValues[8];
  92:main.c        **** 
  93:main.c        **** uint8_t currentCopedent = 0;
  94:main.c        **** uint8_t necks[2] = {0,1};
  95:main.c        **** 
  96:main.c        **** void checkUSB_Vbus(void);
  97:main.c        **** void sendMIDIAllNotesOff(void);
  98:main.c        **** void sendMIDIPitchBend(int val, int channel);
  99:main.c        **** void firstCheckUSB_Vbus(void);
 100:main.c        **** void restartSystemCheck(void);
 101:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 102:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 103:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 104:main.c        **** void noteEvent(int string);
 105:main.c        **** void I2C_reset(void);
 106:main.c        **** void CCEvent(int cc, int val);
 107:main.c        **** void DmaRxConfiguration(void);
 108:main.c        **** /* DMA Configuration for DMA_RX */
 109:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 110:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 111:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 112:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 113:main.c        **** 
 114:main.c        **** void DmaTxConfiguration(void);
 115:main.c        **** 
 116:main.c        **** /* DMA Configuration for DMA_TX */
 117:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 118:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 119:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 120:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 121:main.c        **** 
 122:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 123:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 124:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 125:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 126:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 127:main.c        **** 
 128:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 129:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 130:main.c        **** 
 131:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 132:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 133:main.c        **** 
 134:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 9


 135:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 136:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 137:main.c        **** 
 138:main.c        **** volatile uint16_t strings[12];
 139:main.c        **** volatile uint16_t prevStrings[12];
 140:main.c        **** volatile uint16_t bar[2];
 141:main.c        **** volatile uint16_t prevBar[2];
 142:main.c        **** volatile uint16_t maxStrings[12];
 143:main.c        **** volatile uint8_t amHere = 0;
 144:main.c        **** volatile uint8_t spiCounter = 0;
 145:main.c        **** volatile uint8_t newDataFlag = 0;
 146:main.c        **** int prevOctave = 0;
 147:main.c        **** uint8_t pluck_index = 0;
 148:main.c        **** volatile uint8_t amHere2 = 0;
 149:main.c        **** volatile uint8_t spiCounter2 = 0;
 150:main.c        **** volatile uint8_t newDataFlag2 = 0;
 151:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 152:main.c        **** volatile uint8_t currentBarBuffer = 0;
 153:main.c        **** volatile uint8_t pluckErrorCount = 0;
 154:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 155:main.c        **** 
 156:main.c        **** 
 157:main.c        **** 
 158:main.c        **** volatile uint8_t inputData = 0;
 159:main.c        **** 
 160:main.c        **** 
 161:main.c        **** union breakFloat {
 162:main.c        ****  float f;
 163:main.c        ****  uint8_t b[4];  
 164:main.c        ****  uint32_t u32;
 165:main.c        **** };
 166:main.c        **** 
 167:main.c        **** 
 168:main.c        **** CY_ISR(spis_1_ss)
 169:main.c        **** {
 323              		.loc 1 169 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 90B5     		push	{r4, r7, lr}
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 170:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 336              		.loc 1 170 0
 337 0006 554B     		ldr	r3, .L5
 338 0008 1B78     		ldrb	r3, [r3]
 339 000a DBB2     		uxtb	r3, r3
 340 000c 002B     		cmp	r3, #0
 341 000e 0CBF     		ite	eq
 342 0010 0123     		moveq	r3, #1
 343 0012 0023     		movne	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 10


 344 0014 DBB2     		uxtb	r3, r3
 345 0016 1A46     		mov	r2, r3
 346 0018 504B     		ldr	r3, .L5
 347 001a 1A70     		strb	r2, [r3]
 171:main.c        **** 
 172:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 348              		.loc 1 172 0
 349 001c 4F4B     		ldr	r3, .L5
 350 001e 1B78     		ldrb	r3, [r3]
 351 0020 DBB2     		uxtb	r3, r3
 352 0022 002B     		cmp	r3, #0
 353 0024 0CBF     		ite	eq
 354 0026 0123     		moveq	r3, #1
 355 0028 0023     		movne	r3, #0
 356 002a DBB2     		uxtb	r3, r3
 357 002c 1946     		mov	r1, r3
 358 002e 4C4A     		ldr	r2, .L5+4
 359 0030 1A23     		movs	r3, #26
 360 0032 03FB01F3 		mul	r3, r3, r1
 361 0036 1344     		add	r3, r3, r2
 362 0038 1B78     		ldrb	r3, [r3]
 363 003a DBB2     		uxtb	r3, r3
 364 003c FE2B     		cmp	r3, #254
 365 003e 4FD1     		bne	.L2
 366              		.loc 1 172 0 is_stmt 0 discriminator 1
 367 0040 464B     		ldr	r3, .L5
 368 0042 1B78     		ldrb	r3, [r3]
 369 0044 DBB2     		uxtb	r3, r3
 370 0046 002B     		cmp	r3, #0
 371 0048 0CBF     		ite	eq
 372 004a 0123     		moveq	r3, #1
 373 004c 0023     		movne	r3, #0
 374 004e DBB2     		uxtb	r3, r3
 375 0050 1946     		mov	r1, r3
 376 0052 434A     		ldr	r2, .L5+4
 377 0054 1A23     		movs	r3, #26
 378 0056 03FB01F3 		mul	r3, r3, r1
 379 005a 1344     		add	r3, r3, r2
 380 005c 1933     		adds	r3, r3, #25
 381 005e 1B78     		ldrb	r3, [r3]
 382 0060 DBB2     		uxtb	r3, r3
 383 0062 FD2B     		cmp	r3, #253
 384 0064 3CD1     		bne	.L2
 385              	.LBB2:
 173:main.c        ****     {
 174:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 386              		.loc 1 174 0 is_stmt 1
 387 0066 0023     		movs	r3, #0
 388 0068 7B60     		str	r3, [r7, #4]
 389 006a 34E0     		b	.L3
 390              	.L4:
 175:main.c        ****         {
 176:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 391              		.loc 1 176 0 discriminator 3
 392 006c 3B4B     		ldr	r3, .L5
 393 006e 1B78     		ldrb	r3, [r3]
 394 0070 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 11


 395 0072 002B     		cmp	r3, #0
 396 0074 0CBF     		ite	eq
 397 0076 0123     		moveq	r3, #1
 398 0078 0023     		movne	r3, #0
 399 007a DBB2     		uxtb	r3, r3
 400 007c 1846     		mov	r0, r3
 401 007e 7B68     		ldr	r3, [r7, #4]
 402 0080 5B00     		lsls	r3, r3, #1
 403 0082 0133     		adds	r3, r3, #1
 404 0084 3649     		ldr	r1, .L5+4
 405 0086 1A22     		movs	r2, #26
 406 0088 02FB00F2 		mul	r2, r2, r0
 407 008c 0A44     		add	r2, r2, r1
 408 008e 1344     		add	r3, r3, r2
 409 0090 1B78     		ldrb	r3, [r3]
 410 0092 DBB2     		uxtb	r3, r3
 411 0094 9BB2     		uxth	r3, r3
 412 0096 1B02     		lsls	r3, r3, #8
 413 0098 9AB2     		uxth	r2, r3
 414 009a 304B     		ldr	r3, .L5
 415 009c 1B78     		ldrb	r3, [r3]
 416 009e DBB2     		uxtb	r3, r3
 417 00a0 002B     		cmp	r3, #0
 418 00a2 0CBF     		ite	eq
 419 00a4 0123     		moveq	r3, #1
 420 00a6 0023     		movne	r3, #0
 421 00a8 DBB2     		uxtb	r3, r3
 422 00aa 1C46     		mov	r4, r3
 423 00ac 7B68     		ldr	r3, [r7, #4]
 424 00ae 0133     		adds	r3, r3, #1
 425 00b0 5B00     		lsls	r3, r3, #1
 426 00b2 2B48     		ldr	r0, .L5+4
 427 00b4 1A21     		movs	r1, #26
 428 00b6 01FB04F1 		mul	r1, r1, r4
 429 00ba 0144     		add	r1, r1, r0
 430 00bc 0B44     		add	r3, r3, r1
 431 00be 1B78     		ldrb	r3, [r3]
 432 00c0 DBB2     		uxtb	r3, r3
 433 00c2 9BB2     		uxth	r3, r3
 434 00c4 1344     		add	r3, r3, r2
 435 00c6 99B2     		uxth	r1, r3
 436 00c8 264A     		ldr	r2, .L5+8
 437 00ca 7B68     		ldr	r3, [r7, #4]
 438 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 174:main.c        ****         {
 439              		.loc 1 174 0 discriminator 3
 440 00d0 7B68     		ldr	r3, [r7, #4]
 441 00d2 0133     		adds	r3, r3, #1
 442 00d4 7B60     		str	r3, [r7, #4]
 443              	.L3:
 174:main.c        ****         {
 444              		.loc 1 174 0 is_stmt 0 discriminator 1
 445 00d6 244B     		ldr	r3, .L5+12
 446 00d8 1B68     		ldr	r3, [r3]
 447 00da 7A68     		ldr	r2, [r7, #4]
 448 00dc 9A42     		cmp	r2, r3
 449 00de C5DB     		blt	.L4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 12


 450              	.L2:
 451              	.LBE2:
 177:main.c        ****         }
 178:main.c        ****     }
 179:main.c        ****     SPIS_1_ClearRxBuffer();
 452              		.loc 1 179 0 is_stmt 1
 453 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 180:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 454              		.loc 1 180 0
 455 00e4 214B     		ldr	r3, .L5+16
 456 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 00e8 1846     		mov	r0, r3
 458 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 181:main.c        **** 
 182:main.c        ****     //set up the next DMA transaction
 183:main.c        **** 
 184:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 459              		.loc 1 184 0
 460 00ee 1B4B     		ldr	r3, .L5
 461 00f0 1B78     		ldrb	r3, [r3]
 462 00f2 DBB2     		uxtb	r3, r3
 463 00f4 1A46     		mov	r2, r3
 464 00f6 1E4B     		ldr	r3, .L5+20
 465 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 466 00fa 0223     		movs	r3, #2
 467 00fc FE22     		movs	r2, #254
 468 00fe 1A21     		movs	r1, #26
 469 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 185:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 470              		.loc 1 185 0
 471 0104 154B     		ldr	r3, .L5
 472 0106 1B78     		ldrb	r3, [r3]
 473 0108 DBB2     		uxtb	r3, r3
 474 010a 1A46     		mov	r2, r3
 475 010c 184B     		ldr	r3, .L5+20
 476 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 477 0110 124B     		ldr	r3, .L5
 478 0112 1B78     		ldrb	r3, [r3]
 479 0114 DBB2     		uxtb	r3, r3
 480 0116 1A46     		mov	r2, r3
 481 0118 1A23     		movs	r3, #26
 482 011a 03FB02F3 		mul	r3, r3, r2
 483 011e 104A     		ldr	r2, .L5+4
 484 0120 1344     		add	r3, r3, r2
 485 0122 9BB2     		uxth	r3, r3
 486 0124 1A46     		mov	r2, r3
 487 0126 46F25441 		movw	r1, #25684
 488 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 186:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 489              		.loc 1 186 0
 490 012e 0F4B     		ldr	r3, .L5+16
 491 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 492 0132 0A4B     		ldr	r3, .L5
 493 0134 1B78     		ldrb	r3, [r3]
 494 0136 DBB2     		uxtb	r3, r3
 495 0138 1946     		mov	r1, r3
 496 013a 0D4B     		ldr	r3, .L5+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 13


 497 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 498 013e 1946     		mov	r1, r3
 499 0140 1046     		mov	r0, r2
 500 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 187:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 501              		.loc 1 187 0
 502 0146 094B     		ldr	r3, .L5+16
 503 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 014a 0121     		movs	r1, #1
 505 014c 1846     		mov	r0, r3
 506 014e FFF7FEFF 		bl	CyDmaChEnable
 188:main.c        **** 
 189:main.c        **** }
 507              		.loc 1 189 0
 508 0152 00BF     		nop
 509 0154 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 12
 511 0156 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0158 90BD     		pop	{r4, r7, pc}
 515              	.L6:
 516 015a 00BF     		.align	2
 517              	.L5:
 518 015c 00000000 		.word	currentPluckBuffer
 519 0160 00000000 		.word	rxBufferPluck
 520 0164 00000000 		.word	strings
 521 0168 00000000 		.word	numStrings
 522 016c 00000000 		.word	rx1Channel
 523 0170 00000000 		.word	rx1TD
 524              		.cfi_endproc
 525              	.LFE64:
 526              		.size	spis_1_ss, .-spis_1_ss
 527              		.global	spiAdjusted
 528              		.bss
 529              		.type	spiAdjusted, %object
 530              		.size	spiAdjusted, 1
 531              	spiAdjusted:
 532 004f 00       		.space	1
 533              		.global	mySpiCounter
 534              		.type	mySpiCounter, %object
 535              		.size	mySpiCounter, 1
 536              	mySpiCounter:
 537 0050 00       		.space	1
 538              		.global	offsetErrorCount
 539 0051 00       		.align	1
 540              		.type	offsetErrorCount, %object
 541              		.size	offsetErrorCount, 2
 542              	offsetErrorCount:
 543 0052 0000     		.space	2
 544              		.global	SPI2errorflag
 545              		.type	SPI2errorflag, %object
 546              		.size	SPI2errorflag, 1
 547              	SPI2errorflag:
 548 0054 00       		.space	1
 549              		.global	bar_index
 550 0055 000000   		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 14


 551              		.type	bar_index, %object
 552              		.size	bar_index, 4
 553              	bar_index:
 554 0058 00000000 		.space	4
 555              		.comm	knobs,4,4
 556              		.comm	prevKnobs,4,4
 557              		.global	SPI2started
 558              		.type	SPI2started, %object
 559              		.size	SPI2started, 1
 560              	SPI2started:
 561 005c 00       		.space	1
 562              		.section	.text.spis_2_ss,"ax",%progbits
 563              		.align	2
 564              		.global	spis_2_ss
 565              		.thumb
 566              		.thumb_func
 567              		.type	spis_2_ss, %function
 568              	spis_2_ss:
 569              	.LFB65:
 190:main.c        **** 
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        **** uint8_t spiAdjusted = 0;
 194:main.c        **** uint8_t mySpiCounter = 0;
 195:main.c        **** volatile uint16_t offsetErrorCount = 0;
 196:main.c        **** volatile uint8_t SPI2errorflag = 0;
 197:main.c        **** volatile int bar_index = 0;
 198:main.c        **** uint8_t knobs[4];
 199:main.c        **** uint8_t prevKnobs[4];
 200:main.c        **** 
 201:main.c        **** volatile uint8_t SPI2started = 0;
 202:main.c        **** 
 203:main.c        **** 
 204:main.c        **** CY_ISR(spis_2_ss)
 205:main.c        **** {
 570              		.loc 1 205 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 80B5     		push	{r7, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 206:main.c        **** 
 207:main.c        ****     currentBarBuffer = !currentBarBuffer;
 580              		.loc 1 207 0
 581 0004 214B     		ldr	r3, .L8
 582 0006 1B78     		ldrb	r3, [r3]
 583 0008 DBB2     		uxtb	r3, r3
 584 000a 002B     		cmp	r3, #0
 585 000c 0CBF     		ite	eq
 586 000e 0123     		moveq	r3, #1
 587 0010 0023     		movne	r3, #0
 588 0012 DBB2     		uxtb	r3, r3
 589 0014 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 15


 590 0016 1D4B     		ldr	r3, .L8
 591 0018 1A70     		strb	r2, [r3]
 208:main.c        ****     SPIS_2_ClearRxBuffer();
 592              		.loc 1 208 0
 593 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 209:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 594              		.loc 1 209 0
 595 001e 1C4B     		ldr	r3, .L8+4
 596 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 0022 1846     		mov	r0, r3
 598 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 210:main.c        **** 
 211:main.c        ****     //set up the next DMA transaction
 212:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 599              		.loc 1 212 0
 600 0028 184B     		ldr	r3, .L8
 601 002a 1B78     		ldrb	r3, [r3]
 602 002c DBB2     		uxtb	r3, r3
 603 002e 1A46     		mov	r2, r3
 604 0030 184B     		ldr	r3, .L8+8
 605 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 606 0034 0623     		movs	r3, #6
 607 0036 FE22     		movs	r2, #254
 608 0038 0821     		movs	r1, #8
 609 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 213:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 610              		.loc 1 213 0
 611 003e 134B     		ldr	r3, .L8
 612 0040 1B78     		ldrb	r3, [r3]
 613 0042 DBB2     		uxtb	r3, r3
 614 0044 1A46     		mov	r2, r3
 615 0046 134B     		ldr	r3, .L8+8
 616 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 617 004a 104B     		ldr	r3, .L8
 618 004c 1B78     		ldrb	r3, [r3]
 619 004e DBB2     		uxtb	r3, r3
 620 0050 DB00     		lsls	r3, r3, #3
 621 0052 114A     		ldr	r2, .L8+12
 622 0054 1344     		add	r3, r3, r2
 623 0056 9BB2     		uxth	r3, r3
 624 0058 1A46     		mov	r2, r3
 625 005a 46F25C41 		movw	r1, #25692
 626 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 214:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 627              		.loc 1 214 0
 628 0062 0B4B     		ldr	r3, .L8+4
 629 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 0066 094B     		ldr	r3, .L8
 631 0068 1B78     		ldrb	r3, [r3]
 632 006a DBB2     		uxtb	r3, r3
 633 006c 1946     		mov	r1, r3
 634 006e 094B     		ldr	r3, .L8+8
 635 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 636 0072 1946     		mov	r1, r3
 637 0074 1046     		mov	r0, r2
 638 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 215:main.c        ****     CyDmaChEnable(rx2Channel, 1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 16


 639              		.loc 1 215 0
 640 007a 054B     		ldr	r3, .L8+4
 641 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 642 007e 0121     		movs	r1, #1
 643 0080 1846     		mov	r0, r3
 644 0082 FFF7FEFF 		bl	CyDmaChEnable
 216:main.c        **** }
 645              		.loc 1 216 0
 646 0086 00BF     		nop
 647 0088 80BD     		pop	{r7, pc}
 648              	.L9:
 649 008a 00BF     		.align	2
 650              	.L8:
 651 008c 00000000 		.word	currentBarBuffer
 652 0090 00000000 		.word	rx2Channel
 653 0094 00000000 		.word	rx2TD
 654 0098 00000000 		.word	rxBufferBar
 655              		.cfi_endproc
 656              	.LFE65:
 657              		.size	spis_2_ss, .-spis_2_ss
 658              		.bss
 659 005d 000000   		.align	2
 660              	eepromArray:
 661 0060 0000     		.space	2
 662              		.global	array
 663 0062 0000     		.align	2
 664              		.type	array, %object
 665              		.size	array, 2
 666              	array:
 667 0064 0000     		.space	2
 668              		.comm	eepromReturnValue,1,1
 669              		.global	Em_EEPROM_em_EepromStorage
 670              		.section	.rodata
 671              		.align	8
 672              		.type	Em_EEPROM_em_EepromStorage, %object
 673              		.size	Em_EEPROM_em_EepromStorage, 1024
 674              	Em_EEPROM_em_EepromStorage:
 675 0000 00000000 		.space	1024
 675      00000000 
 675      00000000 
 675      00000000 
 675      00000000 
 676              		.comm	eeprom_cnt,1,1
 677              		.comm	status,4,4
 678              		.comm	ptr,4,4
 679              		.global	barCount
 680              		.bss
 681 0066 0000     		.align	2
 682              		.type	barCount, %object
 683              		.size	barCount, 4
 684              	barCount:
 685 0068 00000000 		.space	4
 686              		.section	.text.Vbus_function,"ax",%progbits
 687              		.align	2
 688              		.global	Vbus_function
 689              		.thumb
 690              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 17


 691              		.type	Vbus_function, %function
 692              	Vbus_function:
 693              	.LFB66:
 217:main.c        **** 
 218:main.c        **** 
 219:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 220:main.c        ****                                             
 221:main.c        ****     uint8 array[] ={ 0, 0 };
 222:main.c        ****                                 
 223:main.c        ****     /*Return status for EEPROM and UART*/ 
 224:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 225:main.c        **** 
 226:main.c        **** 
 227:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 228:main.c        **** #if defined (__ICCARM__)
 229:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 230:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 231:main.c        **** #else
 232:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 233:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 234:main.c        **** #endif /* defined (__ICCARM__) */
 235:main.c        **** 
 236:main.c        ****     uint8 eeprom_cnt;
 237:main.c        ****     cystatus status;
 238:main.c        ****     volatile const uint8 * ptr;
 239:main.c        **** volatile int barCount = 0;
 240:main.c        **** 
 241:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 242:main.c        ****     
 243:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 244:main.c        **** 
 245:main.c        **** CY_ISR(Vbus_function)
 246:main.c        **** {
 694              		.loc 1 246 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 80B5     		push	{r7, lr}
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 247:main.c        ****     //plug or unplug event
 248:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 249:main.c        ****     //otherwise, restart
 250:main.c        ****     my_Vbus_ISR_ClearPending();
 704              		.loc 1 250 0
 705 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 251:main.c        ****     vBusPin_ClearInterrupt();
 706              		.loc 1 251 0
 707 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 252:main.c        ****     restartSystemCheck();
 708              		.loc 1 252 0
 709 000c FFF7FEFF 		bl	restartSystemCheck
 253:main.c        **** 
 254:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 18


 710              		.loc 1 254 0
 711 0010 00BF     		nop
 712 0012 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE66:
 715              		.size	Vbus_function, .-Vbus_function
 716              		.section	.text.restartSystemCheck,"ax",%progbits
 717              		.align	2
 718              		.global	restartSystemCheck
 719              		.thumb
 720              		.thumb_func
 721              		.type	restartSystemCheck, %function
 722              	restartSystemCheck:
 723              	.LFB67:
 255:main.c        **** 
 256:main.c        **** void restartSystemCheck()
 257:main.c        **** {
 724              		.loc 1 257 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 258:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 734              		.loc 1 258 0
 735 0004 184B     		ldr	r3, .L15
 736 0006 0222     		movs	r2, #2
 737 0008 1849     		ldr	r1, .L15+4
 738 000a 0020     		movs	r0, #0
 739 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 740 0010 0346     		mov	r3, r0
 741 0012 1A46     		mov	r2, r3
 742 0014 164B     		ldr	r3, .L15+8
 743 0016 1A70     		strb	r2, [r3]
 259:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 260:main.c        ****     if (USB_VBusPresent() == 1)
 744              		.loc 1 260 0
 745 0018 FFF7FEFF 		bl	USB_VBusPresent
 746 001c 0346     		mov	r3, r0
 747 001e 012B     		cmp	r3, #1
 748 0020 20D1     		bne	.L14
 261:main.c        ****     {
 262:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 749              		.loc 1 262 0
 750 0022 124B     		ldr	r3, .L15+4
 751 0024 1B78     		ldrb	r3, [r3]
 752 0026 DBB2     		uxtb	r3, r3
 753 0028 012B     		cmp	r3, #1
 754 002a 0CD1     		bne	.L13
 263:main.c        ****         {
 264:main.c        ****             //a flag says we just restarted
 265:main.c        ****             //write a zero so it knows next time that it's OK to restart
 266:main.c        ****             array[0] = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 19


 755              		.loc 1 266 0
 756 002c 114B     		ldr	r3, .L15+12
 757 002e 0022     		movs	r2, #0
 758 0030 1A70     		strb	r2, [r3]
 267:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 759              		.loc 1 267 0
 760 0032 0D4B     		ldr	r3, .L15
 761 0034 0222     		movs	r2, #2
 762 0036 0F49     		ldr	r1, .L15+12
 763 0038 0020     		movs	r0, #0
 764 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 268:main.c        ****             USB_check_flag = 1;
 765              		.loc 1 268 0
 766 003e 0E4B     		ldr	r3, .L15+16
 767 0040 0122     		movs	r2, #1
 768 0042 1A70     		strb	r2, [r3]
 269:main.c        ****         }
 270:main.c        ****         else
 271:main.c        ****         {
 272:main.c        ****            //otherwise, we need to restart
 273:main.c        ****            array[0] = 1;
 274:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 275:main.c        ****             USB_Stop();
 276:main.c        ****             I2C_1_Stop();
 277:main.c        ****             CySoftwareReset();
 278:main.c        ****         }
 279:main.c        ****     }
 280:main.c        **** }
 769              		.loc 1 280 0
 770 0044 0EE0     		b	.L14
 771              	.L13:
 273:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 772              		.loc 1 273 0
 773 0046 0B4B     		ldr	r3, .L15+12
 774 0048 0122     		movs	r2, #1
 775 004a 1A70     		strb	r2, [r3]
 274:main.c        ****             USB_Stop();
 776              		.loc 1 274 0
 777 004c 064B     		ldr	r3, .L15
 778 004e 0222     		movs	r2, #2
 779 0050 0849     		ldr	r1, .L15+12
 780 0052 0020     		movs	r0, #0
 781 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 275:main.c        ****             I2C_1_Stop();
 782              		.loc 1 275 0
 783 0058 FFF7FEFF 		bl	USB_Stop
 276:main.c        ****             CySoftwareReset();
 784              		.loc 1 276 0
 785 005c FFF7FEFF 		bl	I2C_1_Stop
 277:main.c        ****         }
 786              		.loc 1 277 0
 787 0060 FFF7FEFF 		bl	CySoftwareReset
 788              	.L14:
 789              		.loc 1 280 0
 790 0064 00BF     		nop
 791 0066 80BD     		pop	{r7, pc}
 792              	.L16:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 20


 793              		.align	2
 794              	.L15:
 795 0068 00000000 		.word	Em_EEPROM_context
 796 006c 60000000 		.word	eepromArray
 797 0070 00000000 		.word	eepromReturnValue
 798 0074 00000000 		.word	array
 799 0078 00000000 		.word	USB_check_flag
 800              		.cfi_endproc
 801              	.LFE67:
 802              		.size	restartSystemCheck, .-restartSystemCheck
 803              		.global	__aeabi_fcmpgt
 804              		.global	__aeabi_fcmplt
 805              		.section	.text.LEAF_clip,"ax",%progbits
 806              		.align	2
 807              		.global	LEAF_clip
 808              		.thumb
 809              		.thumb_func
 810              		.type	LEAF_clip, %function
 811              	LEAF_clip:
 812              	.LFB68:
 281:main.c        ****     
 282:main.c        **** #define INV_440 0.0022727272727273f
 283:main.c        **** 
 284:main.c        **** float   LEAF_clip(float min, float val, float max)
 285:main.c        **** {
 813              		.loc 1 285 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 24
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 86B0     		sub	sp, sp, #24
 822              		.cfi_def_cfa_offset 32
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 F860     		str	r0, [r7, #12]	@ float
 826 0008 B960     		str	r1, [r7, #8]	@ float
 827 000a 7A60     		str	r2, [r7, #4]	@ float
 286:main.c        ****     float tempmin = min;
 828              		.loc 1 286 0
 829 000c FB68     		ldr	r3, [r7, #12]	@ float
 830 000e 7B61     		str	r3, [r7, #20]	@ float
 287:main.c        ****     float tempmax = max;
 831              		.loc 1 287 0
 832 0010 7B68     		ldr	r3, [r7, #4]	@ float
 833 0012 3B61     		str	r3, [r7, #16]	@ float
 288:main.c        ****     if (min > max)
 834              		.loc 1 288 0
 835 0014 7968     		ldr	r1, [r7, #4]	@ float
 836 0016 F868     		ldr	r0, [r7, #12]	@ float
 837 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 838 001c 0346     		mov	r3, r0
 839 001e 002B     		cmp	r3, #0
 840 0020 03D0     		beq	.L18
 289:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 21


 290:main.c        ****         tempmin = max;
 841              		.loc 1 290 0
 842 0022 7B68     		ldr	r3, [r7, #4]	@ float
 843 0024 7B61     		str	r3, [r7, #20]	@ float
 291:main.c        ****         tempmax = min;
 844              		.loc 1 291 0
 845 0026 FB68     		ldr	r3, [r7, #12]	@ float
 846 0028 3B61     		str	r3, [r7, #16]	@ float
 847              	.L18:
 292:main.c        ****     }
 293:main.c        ****     if (val < tempmin)
 848              		.loc 1 293 0
 849 002a 7969     		ldr	r1, [r7, #20]	@ float
 850 002c B868     		ldr	r0, [r7, #8]	@ float
 851 002e FFF7FEFF 		bl	__aeabi_fcmplt
 852 0032 0346     		mov	r3, r0
 853 0034 002B     		cmp	r3, #0
 854 0036 01D0     		beq	.L28
 294:main.c        ****     {
 295:main.c        ****         return tempmin;
 855              		.loc 1 295 0
 856 0038 7B69     		ldr	r3, [r7, #20]	@ float
 857 003a 09E0     		b	.L22
 858              	.L28:
 296:main.c        ****     }
 297:main.c        ****     else if (val > tempmax)
 859              		.loc 1 297 0
 860 003c 3969     		ldr	r1, [r7, #16]	@ float
 861 003e B868     		ldr	r0, [r7, #8]	@ float
 862 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 863 0044 0346     		mov	r3, r0
 864 0046 002B     		cmp	r3, #0
 865 0048 01D0     		beq	.L29
 298:main.c        ****     {
 299:main.c        ****         return tempmax;
 866              		.loc 1 299 0
 867 004a 3B69     		ldr	r3, [r7, #16]	@ float
 868 004c 00E0     		b	.L22
 869              	.L29:
 300:main.c        ****     }
 301:main.c        ****     else
 302:main.c        ****     {
 303:main.c        ****         return val;
 870              		.loc 1 303 0
 871 004e BB68     		ldr	r3, [r7, #8]	@ float
 872              	.L22:
 304:main.c        ****     }
 305:main.c        **** }
 873              		.loc 1 305 0
 874 0050 1846     		mov	r0, r3
 875 0052 1837     		adds	r7, r7, #24
 876              		.cfi_def_cfa_offset 8
 877 0054 BD46     		mov	sp, r7
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 0056 80BD     		pop	{r7, pc}
 881              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 22


 882              	.LFE68:
 883              		.size	LEAF_clip, .-LEAF_clip
 884              		.global	__aeabi_fcmple
 885              		.global	__aeabi_fmul
 886              		.section	.text.mtof,"ax",%progbits
 887              		.align	2
 888              		.global	mtof
 889              		.thumb
 890              		.thumb_func
 891              		.type	mtof, %function
 892              	mtof:
 893              	.LFB69:
 306:main.c        **** float mtof(float f)
 307:main.c        **** {
 894              		.loc 1 307 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 82B0     		sub	sp, sp, #8
 903              		.cfi_def_cfa_offset 16
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 906 0006 7860     		str	r0, [r7, #4]	@ float
 308:main.c        ****     if (f <= -1500.0f) return(0);
 907              		.loc 1 308 0
 908 0008 1349     		ldr	r1, .L40
 909 000a 7868     		ldr	r0, [r7, #4]	@ float
 910 000c FFF7FEFF 		bl	__aeabi_fcmple
 911 0010 0346     		mov	r3, r0
 912 0012 002B     		cmp	r3, #0
 913 0014 02D0     		beq	.L38
 914              		.loc 1 308 0 is_stmt 0 discriminator 1
 915 0016 4FF00003 		mov	r3, #0
 916 001a 19E0     		b	.L33
 917              	.L38:
 309:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 918              		.loc 1 309 0 is_stmt 1
 919 001c 0F49     		ldr	r1, .L40+4
 920 001e 7868     		ldr	r0, [r7, #4]	@ float
 921 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 922 0024 0346     		mov	r3, r0
 923 0026 002B     		cmp	r3, #0
 924 0028 04D0     		beq	.L39
 925              		.loc 1 309 0 is_stmt 0 discriminator 1
 926 002a 0C48     		ldr	r0, .L40+4
 927 002c FFF7FEFF 		bl	mtof
 928 0030 0346     		mov	r3, r0
 929 0032 0DE0     		b	.L33
 930              	.L39:
 310:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 931              		.loc 1 310 0 is_stmt 1
 932 0034 0A49     		ldr	r1, .L40+8
 933 0036 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 23


 934 0038 FFF7FEFF 		bl	__aeabi_fmul
 935 003c 0346     		mov	r3, r0
 936 003e 1846     		mov	r0, r3
 937 0040 FFF7FEFF 		bl	expf
 938 0044 0346     		mov	r3, r0
 939 0046 0749     		ldr	r1, .L40+12
 940 0048 1846     		mov	r0, r3
 941 004a FFF7FEFF 		bl	__aeabi_fmul
 942 004e 0346     		mov	r3, r0
 943              	.L33:
 311:main.c        **** }
 944              		.loc 1 311 0
 945 0050 1846     		mov	r0, r3
 946 0052 0837     		adds	r7, r7, #8
 947              		.cfi_def_cfa_offset 8
 948 0054 BD46     		mov	sp, r7
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0056 80BD     		pop	{r7, pc}
 952              	.L41:
 953              		.align	2
 954              	.L40:
 955 0058 0080BBC4 		.word	-994344960
 956 005c 0060BB44 		.word	1153130496
 957 0060 20986C3D 		.word	1030527008
 958 0064 13D00241 		.word	1090703379
 959              		.cfi_endproc
 960              	.LFE69:
 961              		.size	mtof, .-mtof
 962              		.section	.text.ftom,"ax",%progbits
 963              		.align	2
 964              		.global	ftom
 965              		.thumb
 966              		.thumb_func
 967              		.type	ftom, %function
 968              	ftom:
 969              	.LFB70:
 312:main.c        **** 
 313:main.c        **** float ftom(float f)
 314:main.c        **** {
 970              		.loc 1 314 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974 0000 80B5     		push	{r7, lr}
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 82B0     		sub	sp, sp, #8
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
 982 0006 7860     		str	r0, [r7, #4]	@ float
 315:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 983              		.loc 1 315 0
 984 0008 4FF00001 		mov	r1, #0
 985 000c 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 24


 986 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 987 0012 0346     		mov	r3, r0
 988 0014 002B     		cmp	r3, #0
 989 0016 0ED0     		beq	.L48
 990              		.loc 1 315 0 is_stmt 0 discriminator 1
 991 0018 0949     		ldr	r1, .L49
 992 001a 7868     		ldr	r0, [r7, #4]	@ float
 993 001c FFF7FEFF 		bl	__aeabi_fmul
 994 0020 0346     		mov	r3, r0
 995 0022 1846     		mov	r0, r3
 996 0024 FFF7FEFF 		bl	logf
 997 0028 0346     		mov	r3, r0
 998 002a 0649     		ldr	r1, .L49+4
 999 002c 1846     		mov	r0, r3
 1000 002e FFF7FEFF 		bl	__aeabi_fmul
 1001 0032 0346     		mov	r3, r0
 1002 0034 00E0     		b	.L46
 1003              	.L48:
 1004              		.loc 1 315 0 discriminator 2
 1005 0036 044B     		ldr	r3, .L49+8
 1006              	.L46:
 316:main.c        **** }
 1007              		.loc 1 316 0 is_stmt 1 discriminator 5
 1008 0038 1846     		mov	r0, r3
 1009 003a 0837     		adds	r7, r7, #8
 1010              		.cfi_def_cfa_offset 8
 1011 003c BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 003e 80BD     		pop	{r7, pc}
 1015              	.L50:
 1016              		.align	2
 1017              	.L49:
 1018 0040 D27EFA3D 		.word	1039826642
 1019 0044 AC7F8A41 		.word	1099595692
 1020 0048 0080BBC4 		.word	-994344960
 1021              		.cfi_endproc
 1022              	.LFE70:
 1023              		.size	ftom, .-ftom
 1024              		.global	__aeabi_fsub
 1025              		.global	__aeabi_fadd
 1026              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1027              		.align	2
 1028              		.global	LEAF_interpolation_linear
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	LEAF_interpolation_linear, %function
 1032              	LEAF_interpolation_linear:
 1033              	.LFB71:
 317:main.c        **** 
 318:main.c        **** // alpha, [0.0, 1.0]
 319:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 320:main.c        **** {
 1034              		.loc 1 320 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 24
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 25


 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 86B0     		sub	sp, sp, #24
 1043              		.cfi_def_cfa_offset 32
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 F860     		str	r0, [r7, #12]	@ float
 1047 0008 B960     		str	r1, [r7, #8]	@ float
 1048 000a 7A60     		str	r2, [r7, #4]	@ float
 321:main.c        ****     float omAlpha = 1.0f - alpha;
 1049              		.loc 1 321 0
 1050 000c 7968     		ldr	r1, [r7, #4]	@ float
 1051 000e 4FF07E50 		mov	r0, #1065353216
 1052 0012 FFF7FEFF 		bl	__aeabi_fsub
 1053 0016 0346     		mov	r3, r0
 1054 0018 7B61     		str	r3, [r7, #20]	@ float
 322:main.c        ****     
 323:main.c        ****     // First 1/2 of interpolation
 324:main.c        ****     float out = A * omAlpha;
 1055              		.loc 1 324 0
 1056 001a 7969     		ldr	r1, [r7, #20]	@ float
 1057 001c F868     		ldr	r0, [r7, #12]	@ float
 1058 001e FFF7FEFF 		bl	__aeabi_fmul
 1059 0022 0346     		mov	r3, r0
 1060 0024 3B61     		str	r3, [r7, #16]	@ float
 325:main.c        ****     
 326:main.c        ****     out += B * alpha;
 1061              		.loc 1 326 0
 1062 0026 7968     		ldr	r1, [r7, #4]	@ float
 1063 0028 B868     		ldr	r0, [r7, #8]	@ float
 1064 002a FFF7FEFF 		bl	__aeabi_fmul
 1065 002e 0346     		mov	r3, r0
 1066 0030 1946     		mov	r1, r3
 1067 0032 3869     		ldr	r0, [r7, #16]	@ float
 1068 0034 FFF7FEFF 		bl	__aeabi_fadd
 1069 0038 0346     		mov	r3, r0
 1070 003a 3B61     		str	r3, [r7, #16]	@ float
 327:main.c        ****     
 328:main.c        ****     return out;
 1071              		.loc 1 328 0
 1072 003c 3B69     		ldr	r3, [r7, #16]	@ float
 329:main.c        **** }
 1073              		.loc 1 329 0
 1074 003e 1846     		mov	r0, r3
 1075 0040 1837     		adds	r7, r7, #24
 1076              		.cfi_def_cfa_offset 8
 1077 0042 BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0044 80BD     		pop	{r7, pc}
 1081              		.cfi_endproc
 1082              	.LFE71:
 1083              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1084              		.comm	I2Cbuff1,256,4
 1085              		.comm	I2Cbuff2,16,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 26


 1086              		.global	send_it
 1087 0046 00BF     		.bss
 1088              		.type	send_it, %object
 1089              		.size	send_it, 1
 1090              	send_it:
 1091 006c 00       		.space	1
 1092              		.global	mux_states
 1093              		.data
 1094 000a 0000     		.align	2
 1095              		.type	mux_states, %object
 1096              		.size	mux_states, 24
 1097              	mux_states:
 1098 000c 05       		.byte	5
 1099 000d 00       		.byte	0
 1100 000e 05       		.byte	5
 1101 000f 01       		.byte	1
 1102 0010 05       		.byte	5
 1103 0011 02       		.byte	2
 1104 0012 05       		.byte	5
 1105 0013 03       		.byte	3
 1106 0014 05       		.byte	5
 1107 0015 04       		.byte	4
 1108 0016 00       		.byte	0
 1109 0017 00       		.byte	0
 1110 0018 01       		.byte	1
 1111 0019 00       		.byte	0
 1112 001a 03       		.byte	3
 1113 001b 00       		.byte	0
 1114 001c 04       		.byte	4
 1115 001d 00       		.byte	0
 1116 001e 02       		.byte	2
 1117 001f 00       		.byte	0
 1118 0020 05       		.byte	5
 1119 0021 05       		.byte	5
 1120 0022 06       		.byte	6
 1121 0023 00       		.byte	0
 1122              		.global	i2c_skipped
 1123              		.align	2
 1124              		.type	i2c_skipped, %object
 1125              		.size	i2c_skipped, 12
 1126              	i2c_skipped:
 1127 0024 00       		.byte	0
 1128 0025 00       		.byte	0
 1129 0026 00       		.byte	0
 1130 0027 00       		.byte	0
 1131 0028 00       		.byte	0
 1132 0029 00       		.byte	0
 1133 002a 00       		.byte	0
 1134 002b 01       		.byte	1
 1135 002c 01       		.byte	1
 1136 002d 01       		.byte	1
 1137 002e 00       		.byte	0
 1138 002f 00       		.byte	0
 1139              		.global	pedals_low
 1140              		.align	2
 1141              		.type	pedals_low, %object
 1142              		.size	pedals_low, 20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 27


 1143              	pedals_low:
 1144 0030 830A     		.short	2691
 1145 0032 0109     		.short	2305
 1146 0034 9909     		.short	2457
 1147 0036 0E02     		.short	526
 1148 0038 9A0E     		.short	3738
 1149 003a 0309     		.short	2307
 1150 003c C60B     		.short	3014
 1151 003e 8E08     		.short	2190
 1152 0040 E90A     		.short	2793
 1153 0042 2605     		.short	1318
 1154              		.global	pedals_high
 1155              		.align	2
 1156              		.type	pedals_high, %object
 1157              		.size	pedals_high, 20
 1158              	pedals_high:
 1159 0044 ED0A     		.short	2797
 1160 0046 6509     		.short	2405
 1161 0048 140A     		.short	2580
 1162 004a 8702     		.short	647
 1163 004c 0E0F     		.short	3854
 1164 004e 9D09     		.short	2461
 1165 0050 450C     		.short	3141
 1166 0052 3109     		.short	2353
 1167 0054 760B     		.short	2934
 1168 0056 E005     		.short	1504
 1169              		.global	deadzone
 1170              		.align	1
 1171              		.type	deadzone, %object
 1172              		.size	deadzone, 2
 1173              	deadzone:
 1174 0058 9600     		.short	150
 1175              		.global	volumePedal
 1176              		.align	1
 1177              		.type	volumePedal, %object
 1178              		.size	volumePedal, 2
 1179              	volumePedal:
 1180 005a FF0F     		.short	4095
 1181              		.comm	processed_pedals,20,4
 1182              		.comm	prev_processed_pedals,20,4
 1183              		.comm	pedals8bit,10,4
 1184              		.comm	prev_processed_volumePedal,2,2
 1185              		.comm	processed_volumePedal,2,2
 1186              		.global	fretMeasurements
 1187              		.align	2
 1188              		.type	fretMeasurements, %object
 1189              		.size	fretMeasurements, 64
 1190              	fretMeasurements:
 1191 005c 001E7547 		.word	1198857728
 1192 0060 00A07047 		.word	1198563328
 1193 0064 0052F846 		.word	1190679040
 1194 0068 00000000 		.word	0
 1195 006c 00B01A47 		.word	1192931328
 1196 0070 001C2247 		.word	1193417728
 1197 0074 00507546 		.word	1182093312
 1198 0078 00000000 		.word	0
 1199 007c 0000D746 		.word	1188495360
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 28


 1200 0080 00F0EB46 		.word	1189867520
 1201 0084 00280446 		.word	1174677504
 1202 0088 00000000 		.word	0
 1203 008c 00481446 		.word	1175734272
 1204 0090 00805446 		.word	1179942912
 1205 0094 00202745 		.word	1160192000
 1206 0098 00000000 		.word	0
 1207              		.global	currentPresetSelection
 1208              		.bss
 1209 006d 000000   		.align	2
 1210              		.type	currentPresetSelection, %object
 1211              		.size	currentPresetSelection, 4
 1212              	currentPresetSelection:
 1213 0070 00000000 		.space	4
 1214              		.comm	presetNamesArray,896,4
 1215              		.global	presetNumberToLoad
 1216              		.type	presetNumberToLoad, %object
 1217              		.size	presetNumberToLoad, 1
 1218              	presetNumberToLoad:
 1219 0074 00       		.space	1
 1220              		.global	presetLoadedResponse
 1221              		.data
 1222              		.align	2
 1223              		.type	presetLoadedResponse, %object
 1224              		.size	presetLoadedResponse, 2
 1225              	presetLoadedResponse:
 1226 009c FF       		.byte	-1
 1227 009d 00       		.byte	0
 1228              		.comm	macroNamesArray,7168,4
 1229              		.global	fretScaling
 1230 009e 0000     		.align	2
 1231              		.type	fretScaling, %object
 1232              		.size	fretScaling, 16
 1233              	fretScaling:
 1234 00a0 0000803F 		.word	1065353216
 1235 00a4 ABAA2A3F 		.word	1059760811
 1236 00a8 0000003F 		.word	1056964608
 1237 00ac 0000803E 		.word	1048576000
 1238              		.comm	pedalRatios,40,4
 1239              		.global	last_mux
 1240              		.type	last_mux, %object
 1241              		.size	last_mux, 1
 1242              	last_mux:
 1243 00b0 01       		.byte	1
 1244              		.global	main_counter
 1245              		.bss
 1246              		.type	main_counter, %object
 1247              		.size	main_counter, 1
 1248              	main_counter:
 1249 0075 00       		.space	1
 1250              		.global	neck
 1251              		.type	neck, %object
 1252              		.size	neck, 1
 1253              	neck:
 1254 0076 00       		.space	1
 1255              		.global	dualSlider
 1256              		.type	dualSlider, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 29


 1257              		.size	dualSlider, 1
 1258              	dualSlider:
 1259 0077 00       		.space	1
 1260              		.global	enterUp
 1261              		.data
 1262              		.type	enterUp, %object
 1263              		.size	enterUp, 1
 1264              	enterUp:
 1265 00b1 01       		.byte	1
 1266              		.global	voice
 1267              		.bss
 1268              		.type	voice, %object
 1269              		.size	voice, 1
 1270              	voice:
 1271 0078 00       		.space	1
 1272              		.global	editUp
 1273              		.data
 1274              		.type	editUp, %object
 1275              		.size	editUp, 1
 1276              	editUp:
 1277 00b2 01       		.byte	1
 1278              		.global	oct1Up
 1279              		.type	oct1Up, %object
 1280              		.size	oct1Up, 1
 1281              	oct1Up:
 1282 00b3 01       		.byte	1
 1283              		.global	oct4Up
 1284              		.type	oct4Up, %object
 1285              		.size	oct4Up, 1
 1286              	oct4Up:
 1287 00b4 01       		.byte	1
 1288              		.comm	encoderVal,16,4
 1289              		.global	encoderNum
 1290              		.bss
 1291 0079 000000   		.align	2
 1292              		.type	encoderNum, %object
 1293              		.size	encoderNum, 4
 1294              	encoderNum:
 1295 007c 00000000 		.space	4
 1296              		.global	button1Up
 1297              		.type	button1Up, %object
 1298              		.size	button1Up, 1
 1299              	button1Up:
 1300 0080 00       		.space	1
 1301              		.global	button2Up
 1302              		.type	button2Up, %object
 1303              		.size	button2Up, 1
 1304              	button2Up:
 1305 0081 00       		.space	1
 1306              		.global	button3Up
 1307              		.type	button3Up, %object
 1308              		.size	button3Up, 1
 1309              	button3Up:
 1310 0082 00       		.space	1
 1311              		.global	button4Up
 1312              		.type	button4Up, %object
 1313              		.size	button4Up, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 30


 1314              	button4Up:
 1315 0083 00       		.space	1
 1316              		.global	patchNum
 1317              		.type	patchNum, %object
 1318              		.size	patchNum, 1
 1319              	patchNum:
 1320 0084 00       		.space	1
 1321              		.comm	copedent,3696,4
 1322              		.comm	copedentNamesArray,98,4
 1323              		.comm	prevStringPitchBend,48,4
 1324              		.comm	pedals,480,4
 1325              		.comm	openStringFrequencies,48,4
 1326              		.comm	stringMappedPositions,48,4
 1327              		.comm	invStringMappedPositions,48,4
 1328              		.comm	stringFrequencies,48,4
 1329              		.comm	stringOctave,48,4
 1330              		.comm	stringPitch,48,4
 1331              		.comm	stringMIDI,48,4
 1332              		.comm	openStringMIDI_Int,48,4
 1333              		.global	OLEDcount
 1334 0085 000000   		.align	2
 1335              		.type	OLEDcount, %object
 1336              		.size	OLEDcount, 4
 1337              	OLEDcount:
 1338 0088 00000000 		.space	4
 1339              		.global	mainOLEDWaitingToSend
 1340              		.align	2
 1341              		.type	mainOLEDWaitingToSend, %object
 1342              		.size	mainOLEDWaitingToSend, 4
 1343              	mainOLEDWaitingToSend:
 1344 008c 00000000 		.space	4
 1345              		.global	macroOLEDWaitingToSend
 1346              		.align	2
 1347              		.type	macroOLEDWaitingToSend, %object
 1348              		.size	macroOLEDWaitingToSend, 4
 1349              	macroOLEDWaitingToSend:
 1350 0090 00000000 		.space	4
 1351              		.comm	presetAlreadyDisplayed,256,4
 1352              		.global	pedals_float
 1353              		.align	2
 1354              		.type	pedals_float, %object
 1355              		.size	pedals_float, 40
 1356              	pedals_float:
 1357 0094 00000000 		.space	40
 1357      00000000 
 1357      00000000 
 1357      00000000 
 1357      00000000 
 1358              		.global	__aeabi_fdiv
 1359              		.section	.text.map,"ax",%progbits
 1360              		.align	2
 1361              		.global	map
 1362              		.thumb
 1363              		.thumb_func
 1364              		.type	map, %function
 1365              	map:
 1366              	.LFB72:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 31


 330:main.c        **** 
 331:main.c        **** 
 332:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 333:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 334:main.c        **** void USB_service(void);
 335:main.c        **** 
 336:main.c        **** volatile uint8_t I2Cbuff1[256];
 337:main.c        **** volatile uint8_t I2Cbuff2[16];
 338:main.c        **** volatile uint8_t send_it = 0;
 339:main.c        **** 
 340:main.c        **** 
 341:main.c        **** //first mux, 0x70 is first element of array. 
 342:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 343:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 344:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 345:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 346:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,1,1,1,0,0}; //so that pedals and levers can be marked as s
 347:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 348:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 349:main.c        **** uint16_t deadzone = 150;
 350:main.c        **** uint16_t volumePedal = 4095;
 351:main.c        **** uint16_t processed_pedals[10];
 352:main.c        **** uint16_t prev_processed_pedals[10];
 353:main.c        **** uint8_t pedals8bit[10];
 354:main.c        **** int16_t prev_processed_volumePedal;
 355:main.c        **** int16_t processed_volumePedal;
 356:main.c        **** 
 357:main.c        **** 
 358:main.c        **** float fretMeasurements[4][4] ={
 359:main.c        **** 
 360:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 361:main.c        **** 
 362:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 363:main.c        **** 
 364:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 365:main.c        **** 
 366:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 367:main.c        **** 
 368:main.c        **** 	};
 369:main.c        **** #define NUM_MACROS 8
 370:main.c        **** #define MAX_NUM_PRESETS 64
 371:main.c        **** int currentPresetSelection = 0;
 372:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 373:main.c        **** uint8_t presetNumberToLoad = 0;
 374:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 375:main.c        **** 
 376:main.c        **** 
 377:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 378:main.c        **** 
 379:main.c        **** 
 380:main.c        **** 
 381:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 382:main.c        **** 
 383:main.c        **** 
 384:main.c        **** #define MAX_ENCODERS 16
 385:main.c        **** 
 386:main.c        **** float pedalRatios[10];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 32


 387:main.c        **** uint8_t last_mux = 1;
 388:main.c        **** volatile uint8_t main_counter = 0;
 389:main.c        **** uint8_t neck = 0;
 390:main.c        **** uint8_t dualSlider = 0;
 391:main.c        **** uint8_t enterUp = 1;
 392:main.c        **** uint8_t voice = 0;
 393:main.c        **** uint8_t editUp = 1;
 394:main.c        **** uint8_t oct1Up = 1;
 395:main.c        **** uint8_t oct4Up = 1;
 396:main.c        **** 
 397:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 398:main.c        **** int encoderNum = 0;
 399:main.c        **** uint8_t button1Up = 0;
 400:main.c        **** uint8_t button2Up = 0;
 401:main.c        **** uint8_t button3Up = 0;
 402:main.c        **** uint8_t button4Up = 0;
 403:main.c        **** uint8_t patchNum = 0;
 404:main.c        **** #define NUM_STRINGS 12
 405:main.c        **** #define NUM_PEDALS 10
 406:main.c        **** 
 407:main.c        **** 
 408:main.c        **** #define MAX_NUM_COPEDENTS 7
 409:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 410:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 411:main.c        **** 
 412:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 413:main.c        **** 
 414:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 415:main.c        **** 
 416:main.c        **** 
 417:main.c        **** float openStringFrequencies[NUM_STRINGS];
 418:main.c        **** float stringMappedPositions[NUM_STRINGS];
 419:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 420:main.c        **** float stringFrequencies[NUM_STRINGS];
 421:main.c        **** float stringOctave[NUM_STRINGS];
 422:main.c        **** float stringPitch[NUM_STRINGS];
 423:main.c        **** float stringMIDI[NUM_STRINGS];
 424:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 425:main.c        **** int OLEDcount = 0;
 426:main.c        **** 
 427:main.c        **** int mainOLEDWaitingToSend = 0;
 428:main.c        **** int macroOLEDWaitingToSend = 0;
 429:main.c        **** 
 430:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 431:main.c        **** 
 432:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 433:main.c        **** 
 434:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 435:main.c        **** {
 1367              		.loc 1 435 0
 1368              		.cfi_startproc
 1369              		@ args = 4, pretend = 0, frame = 16
 1370              		@ frame_needed = 1, uses_anonymous_args = 0
 1371 0000 B0B5     		push	{r4, r5, r7, lr}
 1372              		.cfi_def_cfa_offset 16
 1373              		.cfi_offset 4, -16
 1374              		.cfi_offset 5, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 33


 1375              		.cfi_offset 7, -8
 1376              		.cfi_offset 14, -4
 1377 0002 84B0     		sub	sp, sp, #16
 1378              		.cfi_def_cfa_offset 32
 1379 0004 00AF     		add	r7, sp, #0
 1380              		.cfi_def_cfa_register 7
 1381 0006 F860     		str	r0, [r7, #12]	@ float
 1382 0008 B960     		str	r1, [r7, #8]	@ float
 1383 000a 7A60     		str	r2, [r7, #4]	@ float
 1384 000c 3B60     		str	r3, [r7]	@ float
 436:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1385              		.loc 1 436 0
 1386 000e 3968     		ldr	r1, [r7]	@ float
 1387 0010 386A     		ldr	r0, [r7, #32]	@ float
 1388 0012 FFF7FEFF 		bl	__aeabi_fsub
 1389 0016 0346     		mov	r3, r0
 1390 0018 1C46     		mov	r4, r3
 1391 001a B968     		ldr	r1, [r7, #8]	@ float
 1392 001c F868     		ldr	r0, [r7, #12]	@ float
 1393 001e FFF7FEFF 		bl	__aeabi_fsub
 1394 0022 0346     		mov	r3, r0
 1395 0024 1D46     		mov	r5, r3
 1396 0026 B968     		ldr	r1, [r7, #8]	@ float
 1397 0028 7868     		ldr	r0, [r7, #4]	@ float
 1398 002a FFF7FEFF 		bl	__aeabi_fsub
 1399 002e 0346     		mov	r3, r0
 1400 0030 1946     		mov	r1, r3
 1401 0032 2846     		mov	r0, r5
 1402 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1403 0038 0346     		mov	r3, r0
 1404 003a 1946     		mov	r1, r3
 1405 003c 2046     		mov	r0, r4
 1406 003e FFF7FEFF 		bl	__aeabi_fmul
 1407 0042 0346     		mov	r3, r0
 1408 0044 3968     		ldr	r1, [r7]	@ float
 1409 0046 1846     		mov	r0, r3
 1410 0048 FFF7FEFF 		bl	__aeabi_fadd
 1411 004c 0346     		mov	r3, r0
 437:main.c        **** }
 1412              		.loc 1 437 0
 1413 004e 1846     		mov	r0, r3
 1414 0050 1037     		adds	r7, r7, #16
 1415              		.cfi_def_cfa_offset 16
 1416 0052 BD46     		mov	sp, r7
 1417              		.cfi_def_cfa_register 13
 1418              		@ sp needed
 1419 0054 B0BD     		pop	{r4, r5, r7, pc}
 1420              		.cfi_endproc
 1421              	.LFE72:
 1422              		.size	map, .-map
 1423              		.global	currentNeck
 1424 0056 00BF     		.bss
 1425              		.align	2
 1426              		.type	currentNeck, %object
 1427              		.size	currentNeck, 4
 1428              	currentNeck:
 1429 00bc 00000000 		.space	4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 34


 1430              		.global	editMode
 1431              		.align	2
 1432              		.type	editMode, %object
 1433              		.size	editMode, 4
 1434              	editMode:
 1435 00c0 00000000 		.space	4
 1436              		.global	calibrationMode
 1437              		.align	2
 1438              		.type	calibrationMode, %object
 1439              		.size	calibrationMode, 4
 1440              	calibrationMode:
 1441 00c4 00000000 		.space	4
 1442              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1443              		.align	2
 1444              		.global	burnInitialPedalZeroPositions
 1445              		.thumb
 1446              		.thumb_func
 1447              		.type	burnInitialPedalZeroPositions, %function
 1448              	burnInitialPedalZeroPositions:
 1449              	.LFB73:
 438:main.c        **** void displayCurrentPresetName();
 439:main.c        **** 
 440:main.c        **** int currentNeck = 0;
 441:main.c        **** 
 442:main.c        **** int editMode = 0;
 443:main.c        **** int calibrationMode = 0;
 444:main.c        **** 
 445:main.c        **** void burnInitialPedalZeroPositions()
 446:main.c        **** {
 1450              		.loc 1 446 0
 1451              		.cfi_startproc
 1452              		@ args = 0, pretend = 0, frame = 0
 1453              		@ frame_needed = 1, uses_anonymous_args = 0
 1454              		@ link register save eliminated.
 1455 0000 80B4     		push	{r7}
 1456              		.cfi_def_cfa_offset 4
 1457              		.cfi_offset 7, -4
 1458 0002 00AF     		add	r7, sp, #0
 1459              		.cfi_def_cfa_register 7
 447:main.c        ****     
 448:main.c        **** }
 1460              		.loc 1 448 0
 1461 0004 00BF     		nop
 1462 0006 BD46     		mov	sp, r7
 1463              		.cfi_def_cfa_register 13
 1464              		@ sp needed
 1465 0008 80BC     		pop	{r7}
 1466              		.cfi_restore 7
 1467              		.cfi_def_cfa_offset 0
 1468 000a 7047     		bx	lr
 1469              		.cfi_endproc
 1470              	.LFE73:
 1471              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1472              		.section	.text.calibratePedals,"ax",%progbits
 1473              		.align	2
 1474              		.global	calibratePedals
 1475              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 35


 1476              		.thumb_func
 1477              		.type	calibratePedals, %function
 1478              	calibratePedals:
 1479              	.LFB74:
 449:main.c        **** 
 450:main.c        **** void calibratePedals()
 451:main.c        **** {
 1480              		.loc 1 451 0
 1481              		.cfi_startproc
 1482              		@ args = 0, pretend = 0, frame = 0
 1483              		@ frame_needed = 1, uses_anonymous_args = 0
 1484              		@ link register save eliminated.
 1485 0000 80B4     		push	{r7}
 1486              		.cfi_def_cfa_offset 4
 1487              		.cfi_offset 7, -4
 1488 0002 00AF     		add	r7, sp, #0
 1489              		.cfi_def_cfa_register 7
 452:main.c        **** 
 453:main.c        ****     
 454:main.c        **** }
 1490              		.loc 1 454 0
 1491 0004 00BF     		nop
 1492 0006 BD46     		mov	sp, r7
 1493              		.cfi_def_cfa_register 13
 1494              		@ sp needed
 1495 0008 80BC     		pop	{r7}
 1496              		.cfi_restore 7
 1497              		.cfi_def_cfa_offset 0
 1498 000a 7047     		bx	lr
 1499              		.cfi_endproc
 1500              	.LFE74:
 1501              		.size	calibratePedals, .-calibratePedals
 1502              		.global	__aeabi_ui2f
 1503              		.global	__aeabi_i2f
 1504              		.global	__aeabi_f2uiz
 1505              		.section	.text.calculatePedalRatios,"ax",%progbits
 1506              		.align	2
 1507              		.global	calculatePedalRatios
 1508              		.thumb
 1509              		.thumb_func
 1510              		.type	calculatePedalRatios, %function
 1511              	calculatePedalRatios:
 1512              	.LFB75:
 455:main.c        **** 
 456:main.c        **** void calculatePedalRatios()
 457:main.c        **** {
 1513              		.loc 1 457 0
 1514              		.cfi_startproc
 1515              		@ args = 0, pretend = 0, frame = 8
 1516              		@ frame_needed = 1, uses_anonymous_args = 0
 1517 0000 90B5     		push	{r4, r7, lr}
 1518              		.cfi_def_cfa_offset 12
 1519              		.cfi_offset 4, -12
 1520              		.cfi_offset 7, -8
 1521              		.cfi_offset 14, -4
 1522 0002 83B0     		sub	sp, sp, #12
 1523              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 36


 1524 0004 00AF     		add	r7, sp, #0
 1525              		.cfi_def_cfa_register 7
 1526              	.LBB3:
 458:main.c        **** 
 459:main.c        ****     //add deadzones on edges of pedal sensing
 460:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1527              		.loc 1 460 0
 1528 0006 0023     		movs	r3, #0
 1529 0008 7B60     		str	r3, [r7, #4]
 1530 000a 6EE0     		b	.L58
 1531              	.L59:
 1532              	.LBB4:
 461:main.c        ****     {
 462:main.c        **** 
 463:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1533              		.loc 1 463 0 discriminator 3
 1534 000c 3A4A     		ldr	r2, .L60
 1535 000e 7B68     		ldr	r3, [r7, #4]
 1536 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1537 0014 1846     		mov	r0, r3
 1538 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1539 001a 0446     		mov	r4, r0
 1540 001c 374A     		ldr	r2, .L60+4
 1541 001e 7B68     		ldr	r3, [r7, #4]
 1542 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1543 0024 1846     		mov	r0, r3
 1544 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1545 002a 0346     		mov	r3, r0
 1546 002c 1946     		mov	r1, r3
 1547 002e 2046     		mov	r0, r4
 1548 0030 FFF7FEFF 		bl	__aeabi_fsub
 1549 0034 0346     		mov	r3, r0
 1550 0036 3B60     		str	r3, [r7]	@ float
 464:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1551              		.loc 1 464 0 discriminator 3
 1552 0038 304A     		ldr	r2, .L60+4
 1553 003a 7B68     		ldr	r3, [r7, #4]
 1554 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1555 0040 1846     		mov	r0, r3
 1556 0042 FFF7FEFF 		bl	__aeabi_i2f
 1557 0046 0446     		mov	r4, r0
 1558 0048 2D49     		ldr	r1, .L60+8
 1559 004a 3868     		ldr	r0, [r7]	@ float
 1560 004c FFF7FEFF 		bl	__aeabi_fmul
 1561 0050 0346     		mov	r3, r0
 1562 0052 1946     		mov	r1, r3
 1563 0054 2046     		mov	r0, r4
 1564 0056 FFF7FEFF 		bl	__aeabi_fadd
 1565 005a 0346     		mov	r3, r0
 1566 005c 1846     		mov	r0, r3
 1567 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1568 0062 0346     		mov	r3, r0
 1569 0064 99B2     		uxth	r1, r3
 1570 0066 254A     		ldr	r2, .L60+4
 1571 0068 7B68     		ldr	r3, [r7, #4]
 1572 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 465:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 37


 1573              		.loc 1 465 0 discriminator 3
 1574 006e 224A     		ldr	r2, .L60
 1575 0070 7B68     		ldr	r3, [r7, #4]
 1576 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1577 0076 1846     		mov	r0, r3
 1578 0078 FFF7FEFF 		bl	__aeabi_i2f
 1579 007c 0446     		mov	r4, r0
 1580 007e 2049     		ldr	r1, .L60+8
 1581 0080 3868     		ldr	r0, [r7]	@ float
 1582 0082 FFF7FEFF 		bl	__aeabi_fmul
 1583 0086 0346     		mov	r3, r0
 1584 0088 1946     		mov	r1, r3
 1585 008a 2046     		mov	r0, r4
 1586 008c FFF7FEFF 		bl	__aeabi_fsub
 1587 0090 0346     		mov	r3, r0
 1588 0092 1846     		mov	r0, r3
 1589 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1590 0098 0346     		mov	r3, r0
 1591 009a 99B2     		uxth	r1, r3
 1592 009c 164A     		ldr	r2, .L60
 1593 009e 7B68     		ldr	r3, [r7, #4]
 1594 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 466:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1595              		.loc 1 466 0 discriminator 3
 1596 00a4 144A     		ldr	r2, .L60
 1597 00a6 7B68     		ldr	r3, [r7, #4]
 1598 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1599 00ac 1846     		mov	r0, r3
 1600 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1601 00b2 0446     		mov	r4, r0
 1602 00b4 114A     		ldr	r2, .L60+4
 1603 00b6 7B68     		ldr	r3, [r7, #4]
 1604 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1605 00bc 1846     		mov	r0, r3
 1606 00be FFF7FEFF 		bl	__aeabi_ui2f
 1607 00c2 0346     		mov	r3, r0
 1608 00c4 1946     		mov	r1, r3
 1609 00c6 2046     		mov	r0, r4
 1610 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1611 00cc 0346     		mov	r3, r0
 1612 00ce 3B60     		str	r3, [r7]	@ float
 467:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1613              		.loc 1 467 0 discriminator 3
 1614 00d0 3968     		ldr	r1, [r7]	@ float
 1615 00d2 0C48     		ldr	r0, .L60+12
 1616 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1617 00d8 0346     		mov	r3, r0
 1618 00da 1946     		mov	r1, r3
 1619 00dc 0A4A     		ldr	r2, .L60+16
 1620 00de 7B68     		ldr	r3, [r7, #4]
 1621 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1622              	.LBE4:
 460:main.c        ****     {
 1623              		.loc 1 460 0 discriminator 3
 1624 00e4 7B68     		ldr	r3, [r7, #4]
 1625 00e6 0133     		adds	r3, r3, #1
 1626 00e8 7B60     		str	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 38


 1627              	.L58:
 460:main.c        ****     {
 1628              		.loc 1 460 0 is_stmt 0 discriminator 1
 1629 00ea 7B68     		ldr	r3, [r7, #4]
 1630 00ec 092B     		cmp	r3, #9
 1631 00ee 8DDD     		ble	.L59
 1632              	.LBE3:
 468:main.c        ****     }
 469:main.c        **** }
 1633              		.loc 1 469 0 is_stmt 1
 1634 00f0 00BF     		nop
 1635 00f2 0C37     		adds	r7, r7, #12
 1636              		.cfi_def_cfa_offset 12
 1637 00f4 BD46     		mov	sp, r7
 1638              		.cfi_def_cfa_register 13
 1639              		@ sp needed
 1640 00f6 90BD     		pop	{r4, r7, pc}
 1641              	.L61:
 1642              		.align	2
 1643              	.L60:
 1644 00f8 00000000 		.word	pedals_high
 1645 00fc 00000000 		.word	pedals_low
 1646 0100 CDCCCC3D 		.word	1036831949
 1647 0104 00F07F45 		.word	1166012416
 1648 0108 00000000 		.word	pedalRatios
 1649              		.cfi_endproc
 1650              	.LFE75:
 1651              		.size	calculatePedalRatios, .-calculatePedalRatios
 1652              		.section	.rodata
 1653              		.align	2
 1654              	.LC0:
 1655 0400 2000     		.ascii	" \000"
 1656              		.global	__aeabi_f2iz
 1657              		.global	__aeabi_fcmpge
 1658 0402 0000     		.align	2
 1659              	.LC1:
 1660 0404 43414C49 		.ascii	"CALIBRATION\000"
 1660      42524154 
 1660      494F4E00 
 1661              		.align	2
 1662              	.LC2:
 1663 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1663      20504544 
 1663      414C5300 
 1664              		.align	2
 1665              	.LC3:
 1666 041c 414E4420 		.ascii	"AND LEVERS\000"
 1666      4C455645 
 1666      525300
 1667 0427 00       		.align	2
 1668              	.LC4:
 1669 0428 5448454E 		.ascii	"THEN EXIT\000"
 1669      20455849 
 1669      5400
 1670              		.global	__aeabi_fcmpeq
 1671              		.section	.text.main,"ax",%progbits
 1672              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 39


 1673              		.global	main
 1674              		.thumb
 1675              		.thumb_func
 1676              		.type	main, %function
 1677              	main:
 1678              	.LFB76:
 470:main.c        **** int main(void)
 471:main.c        **** {
 1679              		.loc 1 471 0
 1680              		.cfi_startproc
 1681              		@ args = 0, pretend = 0, frame = 144
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 0000 90B5     		push	{r4, r7, lr}
 1684              		.cfi_def_cfa_offset 12
 1685              		.cfi_offset 4, -12
 1686              		.cfi_offset 7, -8
 1687              		.cfi_offset 14, -4
 1688 0002 A7B0     		sub	sp, sp, #156
 1689              		.cfi_def_cfa_offset 168
 1690 0004 02AF     		add	r7, sp, #8
 1691              		.cfi_def_cfa 7, 160
 472:main.c        ****     
 473:main.c        **** 	CYGlobalIntEnable; 
 1692              		.loc 1 473 0
 1693              		.syntax unified
 1694              	@ 473 "main.c" 1
 1695 0006 62B6     		CPSIE   i
 1696              	@ 0 "" 2
 474:main.c        **** 
 475:main.c        ****     EEPROM_Start();
 1697              		.loc 1 475 0
 1698              		.thumb
 1699              		.syntax unified
 1700 0008 FFF7FEFF 		bl	EEPROM_Start
 476:main.c        **** 
 477:main.c        **** 
 478:main.c        ****     
 479:main.c        ****     //read from eeprom which copedents are loaded on which necks
 480:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1701              		.loc 1 480 0
 1702 000c 0020     		movs	r0, #0
 1703 000e FFF7FEFF 		bl	EEPROM_ReadByte
 1704 0012 0346     		mov	r3, r0
 1705 0014 1A46     		mov	r2, r3
 1706 0016 8F4B     		ldr	r3, .L204
 1707 0018 1A70     		strb	r2, [r3]
 481:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1708              		.loc 1 481 0
 1709 001a 0120     		movs	r0, #1
 1710 001c FFF7FEFF 		bl	EEPROM_ReadByte
 1711 0020 0346     		mov	r3, r0
 1712 0022 1A46     		mov	r2, r3
 1713 0024 8B4B     		ldr	r3, .L204
 1714 0026 5A70     		strb	r2, [r3, #1]
 1715              	.LBB5:
 482:main.c        ****     
 483:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 40


 1716              		.loc 1 483 0
 1717 0028 0023     		movs	r3, #0
 1718 002a C7F88C30 		str	r3, [r7, #140]
 1719 002e BBE0     		b	.L63
 1720              	.L70:
 1721              	.LBB6:
 484:main.c        ****     {
 485:main.c        ****         
 486:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1722              		.loc 1 486 0
 1723 0030 0023     		movs	r3, #0
 1724 0032 C7F88830 		str	r3, [r7, #136]
 1725 0036 29E0     		b	.L64
 1726              	.L65:
 487:main.c        ****         {
 488:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1727              		.loc 1 488 0 discriminator 3
 1728 0038 D7F88C30 		ldr	r3, [r7, #140]
 1729 003c 9BB2     		uxth	r3, r3
 1730 003e 1A46     		mov	r2, r3	@ movhi
 1731 0040 1201     		lsls	r2, r2, #4
 1732 0042 1A44     		add	r2, r2, r3
 1733 0044 9200     		lsls	r2, r2, #2
 1734 0046 1A44     		add	r2, r2, r3
 1735 0048 5200     		lsls	r2, r2, #1
 1736 004a 1344     		add	r3, r3, r2
 1737 004c 5B00     		lsls	r3, r3, #1
 1738 004e 9AB2     		uxth	r2, r3
 1739 0050 D7F88830 		ldr	r3, [r7, #136]
 1740 0054 9BB2     		uxth	r3, r3
 1741 0056 1344     		add	r3, r3, r2
 1742 0058 9BB2     		uxth	r3, r3
 1743 005a 0233     		adds	r3, r3, #2
 1744 005c 9BB2     		uxth	r3, r3
 1745 005e 1846     		mov	r0, r3
 1746 0060 FFF7FEFF 		bl	EEPROM_ReadByte
 1747 0064 0346     		mov	r3, r0
 1748 0066 1846     		mov	r0, r3
 1749 0068 7B49     		ldr	r1, .L204+4
 1750 006a D7F88C20 		ldr	r2, [r7, #140]
 1751 006e 1346     		mov	r3, r2
 1752 0070 DB00     		lsls	r3, r3, #3
 1753 0072 9B1A     		subs	r3, r3, r2
 1754 0074 5B00     		lsls	r3, r3, #1
 1755 0076 CA18     		adds	r2, r1, r3
 1756 0078 D7F88830 		ldr	r3, [r7, #136]
 1757 007c 1344     		add	r3, r3, r2
 1758 007e 0246     		mov	r2, r0
 1759 0080 1A70     		strb	r2, [r3]
 486:main.c        ****         {
 1760              		.loc 1 486 0 discriminator 3
 1761 0082 D7F88830 		ldr	r3, [r7, #136]
 1762 0086 0133     		adds	r3, r3, #1
 1763 0088 C7F88830 		str	r3, [r7, #136]
 1764              	.L64:
 486:main.c        ****         {
 1765              		.loc 1 486 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 41


 1766 008c D7F88830 		ldr	r3, [r7, #136]
 1767 0090 0D2B     		cmp	r3, #13
 1768 0092 D1DD     		ble	.L65
 1769              	.LBE6:
 1770              	.LBB7:
 489:main.c        ****         }
 490:main.c        ****         for (int i = 0; i < 11; i++)
 1771              		.loc 1 490 0 is_stmt 1
 1772 0094 0023     		movs	r3, #0
 1773 0096 C7F88430 		str	r3, [r7, #132]
 1774 009a 7BE0     		b	.L66
 1775              	.L69:
 1776              	.LBB8:
 491:main.c        ****     	{
 492:main.c        ****     		int pedalStartLoc = (i*24);
 1777              		.loc 1 492 0
 1778 009c D7F88420 		ldr	r2, [r7, #132]
 1779 00a0 1346     		mov	r3, r2
 1780 00a2 5B00     		lsls	r3, r3, #1
 1781 00a4 1344     		add	r3, r3, r2
 1782 00a6 DB00     		lsls	r3, r3, #3
 1783 00a8 7B63     		str	r3, [r7, #52]
 1784              	.LBB9:
 493:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1785              		.loc 1 493 0
 1786 00aa 0023     		movs	r3, #0
 1787 00ac C7F88030 		str	r3, [r7, #128]
 1788 00b0 67E0     		b	.L67
 1789              	.L68:
 1790              	.LBB10:
 494:main.c        ****     		{
 495:main.c        ****                 
 496:main.c        ****                 int stringStartLoc = (j*2);
 1791              		.loc 1 496 0 discriminator 3
 1792 00b2 D7F88030 		ldr	r3, [r7, #128]
 1793 00b6 5B00     		lsls	r3, r3, #1
 1794 00b8 3B63     		str	r3, [r7, #48]
 497:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1795              		.loc 1 497 0 discriminator 3
 1796 00ba 3B6B     		ldr	r3, [r7, #48]
 1797 00bc 9AB2     		uxth	r2, r3
 1798 00be 7B6B     		ldr	r3, [r7, #52]
 1799 00c0 9BB2     		uxth	r3, r3
 1800 00c2 1344     		add	r3, r3, r2
 1801 00c4 9AB2     		uxth	r2, r3
 1802 00c6 D7F88C30 		ldr	r3, [r7, #140]
 1803 00ca 9BB2     		uxth	r3, r3
 1804 00cc 1946     		mov	r1, r3	@ movhi
 1805 00ce 0901     		lsls	r1, r1, #4
 1806 00d0 1944     		add	r1, r1, r3
 1807 00d2 8900     		lsls	r1, r1, #2
 1808 00d4 1944     		add	r1, r1, r3
 1809 00d6 4900     		lsls	r1, r1, #1
 1810 00d8 0B44     		add	r3, r3, r1
 1811 00da 5B00     		lsls	r3, r3, #1
 1812 00dc 9BB2     		uxth	r3, r3
 1813 00de 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 42


 1814 00e0 9BB2     		uxth	r3, r3
 1815 00e2 1033     		adds	r3, r3, #16
 1816 00e4 9BB2     		uxth	r3, r3
 1817 00e6 1846     		mov	r0, r3
 1818 00e8 FFF7FEFF 		bl	EEPROM_ReadByte
 1819 00ec 0346     		mov	r3, r0
 1820 00ee FB85     		strh	r3, [r7, #46]	@ movhi
 498:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1821              		.loc 1 498 0 discriminator 3
 1822 00f0 3B6B     		ldr	r3, [r7, #48]
 1823 00f2 9AB2     		uxth	r2, r3
 1824 00f4 7B6B     		ldr	r3, [r7, #52]
 1825 00f6 9BB2     		uxth	r3, r3
 1826 00f8 1344     		add	r3, r3, r2
 1827 00fa 9AB2     		uxth	r2, r3
 1828 00fc D7F88C30 		ldr	r3, [r7, #140]
 1829 0100 9BB2     		uxth	r3, r3
 1830 0102 1946     		mov	r1, r3	@ movhi
 1831 0104 0901     		lsls	r1, r1, #4
 1832 0106 1944     		add	r1, r1, r3
 1833 0108 8900     		lsls	r1, r1, #2
 1834 010a 1944     		add	r1, r1, r3
 1835 010c 4900     		lsls	r1, r1, #1
 1836 010e 0B44     		add	r3, r3, r1
 1837 0110 5B00     		lsls	r3, r3, #1
 1838 0112 9BB2     		uxth	r3, r3
 1839 0114 1344     		add	r3, r3, r2
 1840 0116 9BB2     		uxth	r3, r3
 1841 0118 1133     		adds	r3, r3, #17
 1842 011a 9BB2     		uxth	r3, r3
 1843 011c 1846     		mov	r0, r3
 1844 011e FFF7FEFF 		bl	EEPROM_ReadByte
 1845 0122 0346     		mov	r3, r0
 1846 0124 BB85     		strh	r3, [r7, #44]	@ movhi
 499:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1847              		.loc 1 499 0 discriminator 3
 1848 0126 FB8D     		ldrh	r3, [r7, #46]
 1849 0128 1A02     		lsls	r2, r3, #8
 1850 012a BB8D     		ldrh	r3, [r7, #44]
 1851 012c 1344     		add	r3, r3, r2
 1852 012e 1846     		mov	r0, r3
 1853 0130 FFF7FEFF 		bl	__aeabi_i2f
 1854 0134 0346     		mov	r3, r0
 1855 0136 4FF06E51 		mov	r1, #998244352
 1856 013a 1846     		mov	r0, r3
 1857 013c FFF7FEFF 		bl	__aeabi_fmul
 1858 0140 0346     		mov	r3, r0
 1859 0142 4FF08641 		mov	r1, #1124073472
 1860 0146 1846     		mov	r0, r3
 1861 0148 FFF7FEFF 		bl	__aeabi_fsub
 1862 014c 0346     		mov	r3, r0
 1863 014e 1C46     		mov	r4, r3
 1864 0150 4248     		ldr	r0, .L204+8
 1865 0152 D7F88430 		ldr	r3, [r7, #132]
 1866 0156 D7F88C10 		ldr	r1, [r7, #140]
 1867 015a 1A46     		mov	r2, r3
 1868 015c 5200     		lsls	r2, r2, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 43


 1869 015e 1A44     		add	r2, r2, r3
 1870 0160 9300     		lsls	r3, r2, #2
 1871 0162 1A46     		mov	r2, r3
 1872 0164 0B46     		mov	r3, r1
 1873 0166 5B01     		lsls	r3, r3, #5
 1874 0168 0B44     		add	r3, r3, r1
 1875 016a 9B00     		lsls	r3, r3, #2
 1876 016c 1A44     		add	r2, r2, r3
 1877 016e D7F88030 		ldr	r3, [r7, #128]
 1878 0172 1344     		add	r3, r3, r2
 1879 0174 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1880              	.LBE10:
 493:main.c        ****     		{
 1881              		.loc 1 493 0 discriminator 3
 1882 0178 D7F88030 		ldr	r3, [r7, #128]
 1883 017c 0133     		adds	r3, r3, #1
 1884 017e C7F88030 		str	r3, [r7, #128]
 1885              	.L67:
 493:main.c        ****     		{
 1886              		.loc 1 493 0 is_stmt 0 discriminator 1
 1887 0182 D7F88030 		ldr	r3, [r7, #128]
 1888 0186 0B2B     		cmp	r3, #11
 1889 0188 93DD     		ble	.L68
 1890              	.LBE9:
 1891              	.LBE8:
 490:main.c        ****     	{
 1892              		.loc 1 490 0 is_stmt 1 discriminator 2
 1893 018a D7F88430 		ldr	r3, [r7, #132]
 1894 018e 0133     		adds	r3, r3, #1
 1895 0190 C7F88430 		str	r3, [r7, #132]
 1896              	.L66:
 490:main.c        ****     	{
 1897              		.loc 1 490 0 is_stmt 0 discriminator 1
 1898 0194 D7F88430 		ldr	r3, [r7, #132]
 1899 0198 0A2B     		cmp	r3, #10
 1900 019a 7FF77FAF 		ble	.L69
 1901              	.LBE7:
 483:main.c        ****     {
 1902              		.loc 1 483 0 is_stmt 1 discriminator 2
 1903 019e D7F88C30 		ldr	r3, [r7, #140]
 1904 01a2 0133     		adds	r3, r3, #1
 1905 01a4 C7F88C30 		str	r3, [r7, #140]
 1906              	.L63:
 483:main.c        ****     {
 1907              		.loc 1 483 0 is_stmt 0 discriminator 1
 1908 01a8 D7F88C30 		ldr	r3, [r7, #140]
 1909 01ac 062B     		cmp	r3, #6
 1910 01ae 7FF73FAF 		ble	.L70
 1911              	.LBE5:
 1912              	.LBB11:
 500:main.c        ****             }
 501:main.c        ****     	}
 502:main.c        ****     }
 503:main.c        **** 
 504:main.c        ****     
 505:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1913              		.loc 1 505 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 44


 1914 01b2 0023     		movs	r3, #0
 1915 01b4 FB67     		str	r3, [r7, #124]
 1916 01b6 41E0     		b	.L71
 1917              	.L72:
 506:main.c        ****     {
 507:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1918              		.loc 1 507 0 discriminator 3
 1919 01b8 FB6F     		ldr	r3, [r7, #124]
 1920 01ba 03F2E713 		addw	r3, r3, #487
 1921 01be 9BB2     		uxth	r3, r3
 1922 01c0 9B00     		lsls	r3, r3, #2
 1923 01c2 9BB2     		uxth	r3, r3
 1924 01c4 1846     		mov	r0, r3
 1925 01c6 FFF7FEFF 		bl	EEPROM_ReadByte
 1926 01ca 0346     		mov	r3, r0
 1927 01cc 9BB2     		uxth	r3, r3
 1928 01ce 1B02     		lsls	r3, r3, #8
 1929 01d0 9CB2     		uxth	r4, r3
 1930 01d2 FB6F     		ldr	r3, [r7, #124]
 1931 01d4 9BB2     		uxth	r3, r3
 1932 01d6 9B00     		lsls	r3, r3, #2
 1933 01d8 9BB2     		uxth	r3, r3
 1934 01da 03F29D73 		addw	r3, r3, #1949
 1935 01de 9BB2     		uxth	r3, r3
 1936 01e0 1846     		mov	r0, r3
 1937 01e2 FFF7FEFF 		bl	EEPROM_ReadByte
 1938 01e6 0346     		mov	r3, r0
 1939 01e8 9BB2     		uxth	r3, r3
 1940 01ea 2344     		add	r3, r3, r4
 1941 01ec 99B2     		uxth	r1, r3
 1942 01ee 1C4A     		ldr	r2, .L204+12
 1943 01f0 FB6F     		ldr	r3, [r7, #124]
 1944 01f2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 508:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1945              		.loc 1 508 0 discriminator 3
 1946 01f6 FB6F     		ldr	r3, [r7, #124]
 1947 01f8 9BB2     		uxth	r3, r3
 1948 01fa 9B00     		lsls	r3, r3, #2
 1949 01fc 9BB2     		uxth	r3, r3
 1950 01fe 03F29E73 		addw	r3, r3, #1950
 1951 0202 9BB2     		uxth	r3, r3
 1952 0204 1846     		mov	r0, r3
 1953 0206 FFF7FEFF 		bl	EEPROM_ReadByte
 1954 020a 0346     		mov	r3, r0
 1955 020c 9BB2     		uxth	r3, r3
 1956 020e 1B02     		lsls	r3, r3, #8
 1957 0210 9CB2     		uxth	r4, r3
 1958 0212 FB6F     		ldr	r3, [r7, #124]
 1959 0214 9BB2     		uxth	r3, r3
 1960 0216 9B00     		lsls	r3, r3, #2
 1961 0218 9BB2     		uxth	r3, r3
 1962 021a 03F29F73 		addw	r3, r3, #1951
 1963 021e 9BB2     		uxth	r3, r3
 1964 0220 1846     		mov	r0, r3
 1965 0222 FFF7FEFF 		bl	EEPROM_ReadByte
 1966 0226 0346     		mov	r3, r0
 1967 0228 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 45


 1968 022a 2344     		add	r3, r3, r4
 1969 022c 99B2     		uxth	r1, r3
 1970 022e 0D4A     		ldr	r2, .L204+16
 1971 0230 FB6F     		ldr	r3, [r7, #124]
 1972 0232 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 505:main.c        ****     {
 1973              		.loc 1 505 0 discriminator 3
 1974 0236 FB6F     		ldr	r3, [r7, #124]
 1975 0238 0133     		adds	r3, r3, #1
 1976 023a FB67     		str	r3, [r7, #124]
 1977              	.L71:
 505:main.c        ****     {
 1978              		.loc 1 505 0 is_stmt 0 discriminator 1
 1979 023c FB6F     		ldr	r3, [r7, #124]
 1980 023e 092B     		cmp	r3, #9
 1981 0240 BADD     		ble	.L72
 1982              	.LBE11:
 509:main.c        ****     }
 510:main.c        ****     calculatePedalRatios();
 1983              		.loc 1 510 0 is_stmt 1
 1984 0242 FFF7FEFF 		bl	calculatePedalRatios
 1985              	.LBB12:
 511:main.c        ****                 
 512:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 513:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 1986              		.loc 1 513 0
 1987 0246 0023     		movs	r3, #0
 1988 0248 BB67     		str	r3, [r7, #120]
 1989 024a 26E0     		b	.L73
 1990              	.L76:
 1991              	.LBB13:
 514:main.c        ****     {
 515:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 1992              		.loc 1 515 0
 1993 024c 0023     		movs	r3, #0
 1994 024e 7B67     		str	r3, [r7, #116]
 1995 0250 18E0     		b	.L74
 1996              	.L205:
 1997 0252 00BF     		.align	2
 1998              	.L204:
 1999 0254 00000000 		.word	necks
 2000 0258 00000000 		.word	copedentNamesArray
 2001 025c 00000000 		.word	copedent
 2002 0260 00000000 		.word	pedals_low
 2003 0264 00000000 		.word	pedals_high
 2004              	.L75:
 516:main.c        ****         {
 517:main.c        ****             presetNamesArray[i][j] = 255;
 2005              		.loc 1 517 0 discriminator 3
 2006 0268 BF49     		ldr	r1, .L206
 2007 026a BA6F     		ldr	r2, [r7, #120]
 2008 026c 1346     		mov	r3, r2
 2009 026e DB00     		lsls	r3, r3, #3
 2010 0270 9B1A     		subs	r3, r3, r2
 2011 0272 5B00     		lsls	r3, r3, #1
 2012 0274 CA18     		adds	r2, r1, r3
 2013 0276 7B6F     		ldr	r3, [r7, #116]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 46


 2014 0278 1344     		add	r3, r3, r2
 2015 027a FF22     		movs	r2, #255
 2016 027c 1A70     		strb	r2, [r3]
 515:main.c        ****         {
 2017              		.loc 1 515 0 discriminator 3
 2018 027e 7B6F     		ldr	r3, [r7, #116]
 2019 0280 0133     		adds	r3, r3, #1
 2020 0282 7B67     		str	r3, [r7, #116]
 2021              	.L74:
 515:main.c        ****         {
 2022              		.loc 1 515 0 is_stmt 0 discriminator 1
 2023 0284 7B6F     		ldr	r3, [r7, #116]
 2024 0286 0D2B     		cmp	r3, #13
 2025 0288 EEDD     		ble	.L75
 2026              	.LBE13:
 518:main.c        ****         }
 519:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2027              		.loc 1 519 0 is_stmt 1 discriminator 2
 2028 028a B84A     		ldr	r2, .L206+4
 2029 028c BB6F     		ldr	r3, [r7, #120]
 2030 028e 0021     		movs	r1, #0
 2031 0290 42F82310 		str	r1, [r2, r3, lsl #2]
 513:main.c        ****     {
 2032              		.loc 1 513 0 discriminator 2
 2033 0294 BB6F     		ldr	r3, [r7, #120]
 2034 0296 0133     		adds	r3, r3, #1
 2035 0298 BB67     		str	r3, [r7, #120]
 2036              	.L73:
 513:main.c        ****     {
 2037              		.loc 1 513 0 is_stmt 0 discriminator 1
 2038 029a BB6F     		ldr	r3, [r7, #120]
 2039 029c 3F2B     		cmp	r3, #63
 2040 029e D5DD     		ble	.L76
 2041              	.LBE12:
 520:main.c        ****     }
 521:main.c        ****     
 522:main.c        ****     QuadDec_1_Start();
 2042              		.loc 1 522 0 is_stmt 1
 2043 02a0 FFF7FEFF 		bl	QuadDec_1_Start
 523:main.c        ****     LED_amber1_Write(0);
 2044              		.loc 1 523 0
 2045 02a4 0020     		movs	r0, #0
 2046 02a6 FFF7FEFF 		bl	LED_amber1_Write
 524:main.c        ****     LED_amber2_Write(1);
 2047              		.loc 1 524 0
 2048 02aa 0120     		movs	r0, #1
 2049 02ac FFF7FEFF 		bl	LED_amber2_Write
 525:main.c        ****     LED_amber3_Write(0);
 2050              		.loc 1 525 0
 2051 02b0 0020     		movs	r0, #0
 2052 02b2 FFF7FEFF 		bl	LED_amber3_Write
 526:main.c        ****     LED_amber4_Write(0);
 2053              		.loc 1 526 0
 2054 02b6 0020     		movs	r0, #0
 2055 02b8 FFF7FEFF 		bl	LED_amber4_Write
 527:main.c        **** 
 528:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 47


 529:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2056              		.loc 1 529 0
 2057 02bc AC4B     		ldr	r3, .L206+8
 2058 02be 1846     		mov	r0, r3
 2059 02c0 FFF7FEFF 		bl	Em_EEPROM_Init
 2060 02c4 0346     		mov	r3, r0
 2061 02c6 1A46     		mov	r2, r3
 2062 02c8 AA4B     		ldr	r3, .L206+12
 2063 02ca 1A70     		strb	r2, [r3]
 530:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 531:main.c        ****     {
 532:main.c        ****        // HandleError();
 533:main.c        ****     }
 534:main.c        ****     uint8_t myArrayCounter = 0;
 2064              		.loc 1 534 0
 2065 02cc 0023     		movs	r3, #0
 2066 02ce 87F82B30 		strb	r3, [r7, #43]
 535:main.c        ****   
 536:main.c        ****     I2C_1_Start();  
 2067              		.loc 1 536 0
 2068 02d2 FFF7FEFF 		bl	I2C_1_Start
 537:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2069              		.loc 1 537 0
 2070 02d6 0120     		movs	r0, #1
 2071 02d8 FFF7FEFF 		bl	USB_SetPowerStatus
 538:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2072              		.loc 1 538 0
 2073 02dc A648     		ldr	r0, .L206+16
 2074 02de FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 539:main.c        **** 
 540:main.c        ****     
 541:main.c        ****     LED_red1_Write(0);
 2075              		.loc 1 541 0
 2076 02e2 0020     		movs	r0, #0
 2077 02e4 FFF7FEFF 		bl	LED_red1_Write
 542:main.c        ****     LED_green2_Write(1);
 2078              		.loc 1 542 0
 2079 02e8 0120     		movs	r0, #1
 2080 02ea FFF7FEFF 		bl	LED_green2_Write
 543:main.c        **** 
 544:main.c        ****     
 545:main.c        ****     ADC_SAR_Seq_1_Start();
 2081              		.loc 1 545 0
 2082 02ee FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 546:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2083              		.loc 1 546 0
 2084 02f2 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 547:main.c        **** 
 548:main.c        ****             
 549:main.c        ****     currentCopedent = necks[currentNeck];
 2085              		.loc 1 549 0
 2086 02f6 A14B     		ldr	r3, .L206+20
 2087 02f8 1B68     		ldr	r3, [r3]
 2088 02fa A14A     		ldr	r2, .L206+24
 2089 02fc D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2090 02fe A14B     		ldr	r3, .L206+28
 2091 0300 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 48


 550:main.c        ****     CyDelay(10);
 2092              		.loc 1 550 0
 2093 0302 0A20     		movs	r0, #10
 2094 0304 FFF7FEFF 		bl	CyDelay
 551:main.c        ****     
 552:main.c        ****     //set up for the OLED screen's first write
 553:main.c        ****     I2Cbuff1[0] = 1<<6;
 2095              		.loc 1 553 0
 2096 0308 9F4B     		ldr	r3, .L206+32
 2097 030a 4022     		movs	r2, #64
 2098 030c 1A70     		strb	r2, [r3]
 554:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2099              		.loc 1 554 0
 2100 030e 0022     		movs	r2, #0
 2101 0310 0121     		movs	r1, #1
 2102 0312 7020     		movs	r0, #112
 2103 0314 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2104 0318 0346     		mov	r3, r0
 2105 031a 1A46     		mov	r2, r3
 2106 031c 9B4B     		ldr	r3, .L206+36
 2107 031e 1A60     		str	r2, [r3]
 555:main.c        **** 
 556:main.c        ****     OLED_init();
 2108              		.loc 1 556 0
 2109 0320 FFF7FEFF 		bl	OLED_init
 557:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2110              		.loc 1 557 0
 2111 0324 974B     		ldr	r3, .L206+28
 2112 0326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2113 0328 1846     		mov	r0, r3
 2114 032a 0323     		movs	r3, #3
 2115 032c 0022     		movs	r2, #0
 2116 032e 0221     		movs	r1, #2
 2117 0330 FFF7FEFF 		bl	OLEDwriteInt
 558:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2118              		.loc 1 558 0
 2119 0334 FFF7FEFF 		bl	OLEDgetCursor
 2120 0338 0246     		mov	r2, r0
 2121 033a 0323     		movs	r3, #3
 2122 033c 0121     		movs	r1, #1
 2123 033e 9448     		ldr	r0, .L206+40
 2124 0340 FFF7FEFF 		bl	OLEDwriteString
 559:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OLEDgetC
 2125              		.loc 1 559 0
 2126 0344 8F4B     		ldr	r3, .L206+28
 2127 0346 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2128 0348 1A46     		mov	r2, r3
 2129 034a 1346     		mov	r3, r2
 2130 034c DB00     		lsls	r3, r3, #3
 2131 034e 9B1A     		subs	r3, r3, r2
 2132 0350 5B00     		lsls	r3, r3, #1
 2133 0352 904A     		ldr	r2, .L206+44
 2134 0354 9C18     		adds	r4, r3, r2
 2135 0356 FFF7FEFF 		bl	OLEDgetCursor
 2136 035a 0246     		mov	r2, r0
 2137 035c 0323     		movs	r3, #3
 2138 035e 0E21     		movs	r1, #14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 49


 2139 0360 2046     		mov	r0, r4
 2140 0362 FFF7FEFF 		bl	OLEDwriteString
 560:main.c        ****     OLED_draw();
 2141              		.loc 1 560 0
 2142 0366 FFF7FEFF 		bl	OLED_draw
 561:main.c        ****     
 562:main.c        ****     //initialize the macro knob adc to scan all knobs
 563:main.c        ****     I2Cbuff1[0] = 1<<2;
 2143              		.loc 1 563 0
 2144 036a 874B     		ldr	r3, .L206+32
 2145 036c 0422     		movs	r2, #4
 2146 036e 1A70     		strb	r2, [r3]
 564:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2147              		.loc 1 564 0
 2148 0370 0022     		movs	r2, #0
 2149 0372 0121     		movs	r1, #1
 2150 0374 7020     		movs	r0, #112
 2151 0376 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2152 037a 0346     		mov	r3, r0
 2153 037c 1A46     		mov	r2, r3
 2154 037e 834B     		ldr	r3, .L206+36
 2155 0380 1A60     		str	r2, [r3]
 565:main.c        ****     
 566:main.c        ****     //I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all
 567:main.c        ****     //status = I2C_MasterWriteBlocking(0x13, 1, I2C_1_MODE_COMPLETE_XFER);
 568:main.c        ****     
 569:main.c        **** #if 0
 570:main.c        ****     while(1)
 571:main.c        ****     {
 572:main.c        ****         for (int i=  0; i < 4; i++)
 573:main.c        ****         {
 574:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 575:main.c        ****             if (knobs[i] != prevKnobs[i])
 576:main.c        ****             {
 577:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 578:main.c        ****             }
 579:main.c        ****             prevKnobs[i] = knobs[i];
 580:main.c        ****         }
 581:main.c        ****         
 582:main.c        **** 
 583:main.c        ****         I2Cbuff1[0] = 1<<0;
 584:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 585:main.c        **** 
 586:main.c        ****         //CyDelayUs(100);
 587:main.c        ****         I2Cbuff1[0] = 0x0E;
 588:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 589:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 590:main.c        ****        // CyDelayUs(100);
 591:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 592:main.c        ****         angle[0] +=  I2Cbuff2[1];
 593:main.c        ****         
 594:main.c        ****     }
 595:main.c        ****     #endif
 596:main.c        ****     //OLEDclear();
 597:main.c        ****     /*
 598:main.c        ****     while(1)
 599:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 50


 600:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 601:main.c        ****         OLED_draw();
 602:main.c        ****         CyDelay(1);
 603:main.c        ****         
 604:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 605:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 606:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 607:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 608:main.c        ****         for (int i=  0; i < 4; i++)
 609:main.c        ****         {
 610:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 611:main.c        ****         }
 612:main.c        **** 
 613:main.c        ****     }
 614:main.c        ****     */
 615:main.c        **** #if 0
 616:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 617:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 618:main.c        **** 
 619:main.c        **** 
 620:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 621:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 622:main.c        **** 
 623:main.c        ****     //address 0x48
 624:main.c        ****     I2Cbuff1[0] = 0x1;
 625:main.c        ****     I2Cbuff1[1] = 0b11000000;
 626:main.c        ****     I2Cbuff1[2] = 0b10000011;
 627:main.c        **** 
 628:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 629:main.c        ****     #endif
 630:main.c        ****     
 631:main.c        ****     SPIS_1_Start();  
 2156              		.loc 1 631 0
 2157 0382 FFF7FEFF 		bl	SPIS_1_Start
 632:main.c        ****     SPIM_1_Start();  
 2158              		.loc 1 632 0
 2159 0386 FFF7FEFF 		bl	SPIM_1_Start
 633:main.c        ****     SPIS_2_Start(); 
 2160              		.loc 1 633 0
 2161 038a FFF7FEFF 		bl	SPIS_2_Start
 634:main.c        ****     DmaTxConfiguration();
 2162              		.loc 1 634 0
 2163 038e FFF7FEFF 		bl	DmaTxConfiguration
 635:main.c        ****     DmaRxConfiguration();
 2164              		.loc 1 635 0
 2165 0392 FFF7FEFF 		bl	DmaRxConfiguration
 636:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2166              		.loc 1 636 0
 2167 0396 8048     		ldr	r0, .L206+48
 2168 0398 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 637:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2169              		.loc 1 637 0
 2170 039c 7F48     		ldr	r0, .L206+52
 2171 039e FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 638:main.c        ****     
 639:main.c        ****     myArray[30] = 254;
 2172              		.loc 1 639 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 51


 2173 03a2 7F4B     		ldr	r3, .L206+56
 2174 03a4 FE22     		movs	r2, #254
 2175 03a6 9A77     		strb	r2, [r3, #30]
 640:main.c        ****     myArray[31] = 253;
 2176              		.loc 1 640 0
 2177 03a8 7D4B     		ldr	r3, .L206+56
 2178 03aa FD22     		movs	r2, #253
 2179 03ac DA77     		strb	r2, [r3, #31]
 641:main.c        **** 
 642:main.c        ****     main_counter = 0;
 2180              		.loc 1 642 0
 2181 03ae 7D4B     		ldr	r3, .L206+60
 2182 03b0 0022     		movs	r2, #0
 2183 03b2 1A70     		strb	r2, [r3]
 2184              	.L195:
 643:main.c        **** 
 644:main.c        **** 	for(;;)
 645:main.c        ****     {
 646:main.c        ****         
 647:main.c        ****         if (parseThatMF)
 2185              		.loc 1 647 0
 2186 03b4 7C4B     		ldr	r3, .L206+64
 2187 03b6 1B78     		ldrb	r3, [r3]
 2188 03b8 DBB2     		uxtb	r3, r3
 2189 03ba 002B     		cmp	r3, #0
 2190 03bc 01D0     		beq	.L77
 648:main.c        ****         {
 649:main.c        ****             parseSysex();
 2191              		.loc 1 649 0
 2192 03be FFF7FEFF 		bl	parseSysex
 2193              	.L77:
 650:main.c        ****         }
 651:main.c        ****         
 652:main.c        ****         //if (newDataFlag)
 653:main.c        ****         //{
 654:main.c        ****         //}
 655:main.c        ****             /*
 656:main.c        ****             for (int i = 0; i < 5; i++)
 657:main.c        ****             {
 658:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 659:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 660:main.c        ****                 I2C_1_MasterSendStop(); 
 661:main.c        **** 
 662:main.c        **** 
 663:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 664:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 665:main.c        ****                 //I2C_1_MasterSendStop();
 666:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 667:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 668:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 669:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 670:main.c        ****                  I2C_1_MasterSendStop(); 
 671:main.c        ****                 
 672:main.c        ****                 CyDelay(1);
 673:main.c        **** 
 674:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 675:main.c        ****                 I2C_1_MasterWriteByte(0x01);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 52


 676:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 677:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 678:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 679:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 680:main.c        ****                 I2C_1_MasterSendStop(); 
 681:main.c        ****                 
 682:main.c        ****                 CyDelay(2);
 683:main.c        **** 
 684:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 685:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 686:main.c        ****                I2C_1_MasterWriteByte(0x80);
 687:main.c        ****                 I2C_1_MasterSendStop(); 
 688:main.c        ****                CyDelay(2);
 689:main.c        ****             }
 690:main.c        ****         */
 691:main.c        ****         //set main i2c mux
 692:main.c        ****     
 693:main.c        ****         
 694:main.c        ****         /*
 695:main.c        ****         for (int i = 0; i < 4; i++)
 696:main.c        ****         {
 697:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 698:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 699:main.c        ****             I2C_1_MasterSendStop(); 
 700:main.c        **** 
 701:main.c        **** 
 702:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 703:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 704:main.c        ****             //I2C_1_MasterSendStop();
 705:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 706:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 707:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 708:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 709:main.c        ****              I2C_1_MasterSendStop(); 
 710:main.c        ****             
 711:main.c        ****             CyDelay(1);
 712:main.c        **** 
 713:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 714:main.c        ****             I2C_1_MasterWriteByte(0x01);
 715:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 716:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 717:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 718:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 719:main.c        ****             I2C_1_MasterSendStop(); 
 720:main.c        ****             
 721:main.c        ****             CyDelay(2);
 722:main.c        **** 
 723:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 724:main.c        ****             I2C_1_MasterWriteByte(0xff);
 725:main.c        ****             I2C_1_MasterWriteByte(0x80);
 726:main.c        ****             I2C_1_MasterSendStop(); 
 727:main.c        ****            CyDelay(2);
 728:main.c        ****         }
 729:main.c        ****             */
 730:main.c        ****         /*    
 731:main.c        ****         if (main_counter == 6)
 732:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 53


 733:main.c        ****             main_counter = 8;
 734:main.c        ****         }
 735:main.c        ****         */    
 736:main.c        **** 
 737:main.c        ****        //sense levers and pedals
 738:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2194              		.loc 1 738 0
 2195 03c2 784B     		ldr	r3, .L206+60
 2196 03c4 1B78     		ldrb	r3, [r3]
 2197 03c6 DBB2     		uxtb	r3, r3
 2198 03c8 1A46     		mov	r2, r3
 2199 03ca 784B     		ldr	r3, .L206+68
 2200 03cc 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2201 03d0 774B     		ldr	r3, .L206+72
 2202 03d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2203 03d4 9A42     		cmp	r2, r3
 2204 03d6 14D0     		beq	.L78
 2205              	.LBB14:
 739:main.c        ****         {
 740:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2206              		.loc 1 740 0
 2207 03d8 724B     		ldr	r3, .L206+60
 2208 03da 1B78     		ldrb	r3, [r3]
 2209 03dc DBB2     		uxtb	r3, r3
 2210 03de 1A46     		mov	r2, r3
 2211 03e0 724B     		ldr	r3, .L206+68
 2212 03e2 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2213 03e6 1A46     		mov	r2, r3
 2214 03e8 0123     		movs	r3, #1
 2215 03ea 9340     		lsls	r3, r3, r2
 2216 03ec DAB2     		uxtb	r2, r3
 2217 03ee 664B     		ldr	r3, .L206+32
 2218 03f0 1A70     		strb	r2, [r3]
 741:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2219              		.loc 1 741 0
 2220 03f2 0022     		movs	r2, #0
 2221 03f4 0121     		movs	r1, #1
 2222 03f6 7020     		movs	r0, #112
 2223 03f8 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2224 03fc 0346     		mov	r3, r0
 2225 03fe 87F82A30 		strb	r3, [r7, #42]
 2226              	.L78:
 2227              	.LBE14:
 742:main.c        ****         }
 743:main.c        ****         last_mux = mux_states[main_counter][0];
 2228              		.loc 1 743 0
 2229 0402 684B     		ldr	r3, .L206+60
 2230 0404 1B78     		ldrb	r3, [r3]
 2231 0406 DBB2     		uxtb	r3, r3
 2232 0408 1A46     		mov	r2, r3
 2233 040a 684B     		ldr	r3, .L206+68
 2234 040c 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2235 0410 674B     		ldr	r3, .L206+72
 2236 0412 1A70     		strb	r2, [r3]
 744:main.c        ****         
 745:main.c        ****         
 746:main.c        ****         CyDelayUs(10);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 54


 2237              		.loc 1 746 0
 2238 0414 0A20     		movs	r0, #10
 2239 0416 FFF7FEFF 		bl	CyDelayUs
 747:main.c        ****         if (mux_states[main_counter][0] == 5)
 2240              		.loc 1 747 0
 2241 041a 624B     		ldr	r3, .L206+60
 2242 041c 1B78     		ldrb	r3, [r3]
 2243 041e DBB2     		uxtb	r3, r3
 2244 0420 1A46     		mov	r2, r3
 2245 0422 624B     		ldr	r3, .L206+68
 2246 0424 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2247 0428 052B     		cmp	r3, #5
 2248 042a 1DD1     		bne	.L79
 748:main.c        ****         {
 749:main.c        ****             if (!i2c_skipped[main_counter])
 2249              		.loc 1 749 0
 2250 042c 5D4B     		ldr	r3, .L206+60
 2251 042e 1B78     		ldrb	r3, [r3]
 2252 0430 DBB2     		uxtb	r3, r3
 2253 0432 1A46     		mov	r2, r3
 2254 0434 5F4B     		ldr	r3, .L206+76
 2255 0436 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2256 0438 002B     		cmp	r3, #0
 2257 043a 15D1     		bne	.L79
 750:main.c        ****             {
 751:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2258              		.loc 1 751 0
 2259 043c 594B     		ldr	r3, .L206+60
 2260 043e 1B78     		ldrb	r3, [r3]
 2261 0440 DBB2     		uxtb	r3, r3
 2262 0442 5A4A     		ldr	r2, .L206+68
 2263 0444 5B00     		lsls	r3, r3, #1
 2264 0446 1344     		add	r3, r3, r2
 2265 0448 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2266 044a 1A46     		mov	r2, r3
 2267 044c 0123     		movs	r3, #1
 2268 044e 9340     		lsls	r3, r3, r2
 2269 0450 DAB2     		uxtb	r2, r3
 2270 0452 4D4B     		ldr	r3, .L206+32
 2271 0454 1A70     		strb	r2, [r3]
 752:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2272              		.loc 1 752 0
 2273 0456 0022     		movs	r2, #0
 2274 0458 0121     		movs	r1, #1
 2275 045a 7120     		movs	r0, #113
 2276 045c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2277 0460 0346     		mov	r3, r0
 2278 0462 1A46     		mov	r2, r3
 2279 0464 494B     		ldr	r3, .L206+36
 2280 0466 1A60     		str	r2, [r3]
 2281              	.L79:
 753:main.c        ****             }
 754:main.c        ****         }
 755:main.c        **** 
 756:main.c        ****         CyDelayUs(10);
 2282              		.loc 1 756 0
 2283 0468 0A20     		movs	r0, #10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 55


 2284 046a FFF7FEFF 		bl	CyDelayUs
 757:main.c        ****         //if it's a hall sensor
 758:main.c        **** 
 759:main.c        ****         if (main_counter < 10)
 2285              		.loc 1 759 0
 2286 046e 4D4B     		ldr	r3, .L206+60
 2287 0470 1B78     		ldrb	r3, [r3]
 2288 0472 DBB2     		uxtb	r3, r3
 2289 0474 092B     		cmp	r3, #9
 2290 0476 00F2B080 		bhi	.L80
 760:main.c        ****         {
 761:main.c        ****             if (!i2c_skipped[main_counter])
 2291              		.loc 1 761 0
 2292 047a 4A4B     		ldr	r3, .L206+60
 2293 047c 1B78     		ldrb	r3, [r3]
 2294 047e DBB2     		uxtb	r3, r3
 2295 0480 1A46     		mov	r2, r3
 2296 0482 4C4B     		ldr	r3, .L206+76
 2297 0484 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2298 0486 002B     		cmp	r3, #0
 2299 0488 40F0A780 		bne	.L80
 762:main.c        ****             {
 763:main.c        ****                 //CyDelayUs(100);
 764:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2300              		.loc 1 764 0
 2301 048c 3E4B     		ldr	r3, .L206+32
 2302 048e 0E22     		movs	r2, #14
 2303 0490 1A70     		strb	r2, [r3]
 765:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2304              		.loc 1 765 0
 2305 0492 0222     		movs	r2, #2
 2306 0494 0121     		movs	r1, #1
 2307 0496 3620     		movs	r0, #54
 2308 0498 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2309 049c 0346     		mov	r3, r0
 2310 049e 1A46     		mov	r2, r3
 2311 04a0 3A4B     		ldr	r3, .L206+36
 2312 04a2 1A60     		str	r2, [r3]
 766:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2313              		.loc 1 766 0
 2314 04a4 0122     		movs	r2, #1
 2315 04a6 0221     		movs	r1, #2
 2316 04a8 3620     		movs	r0, #54
 2317 04aa FFF7FEFF 		bl	I2C_MasterReadBlocking
 2318 04ae 0346     		mov	r3, r0
 2319 04b0 1A46     		mov	r2, r3
 2320 04b2 364B     		ldr	r3, .L206+36
 2321 04b4 1A60     		str	r2, [r3]
 767:main.c        ****                // CyDelayUs(100);
 768:main.c        ****                 angle[main_counter] = I2Cbuff2[0] << 8;
 2322              		.loc 1 768 0
 2323 04b6 3B4B     		ldr	r3, .L206+60
 2324 04b8 1B78     		ldrb	r3, [r3]
 2325 04ba DBB2     		uxtb	r3, r3
 2326 04bc 1A46     		mov	r2, r3
 2327 04be 3E4B     		ldr	r3, .L206+80
 2328 04c0 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 56


 2329 04c2 DBB2     		uxtb	r3, r3
 2330 04c4 9BB2     		uxth	r3, r3
 2331 04c6 1B02     		lsls	r3, r3, #8
 2332 04c8 99B2     		uxth	r1, r3
 2333 04ca 3C4B     		ldr	r3, .L206+84
 2334 04cc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 769:main.c        ****                 angle[main_counter] +=  I2Cbuff2[1];
 2335              		.loc 1 769 0
 2336 04d0 394B     		ldr	r3, .L206+80
 2337 04d2 5B78     		ldrb	r3, [r3, #1]
 2338 04d4 D8B2     		uxtb	r0, r3
 2339 04d6 334B     		ldr	r3, .L206+60
 2340 04d8 1B78     		ldrb	r3, [r3]
 2341 04da DBB2     		uxtb	r3, r3
 2342 04dc 1946     		mov	r1, r3
 2343 04de 1A46     		mov	r2, r3
 2344 04e0 364B     		ldr	r3, .L206+84
 2345 04e2 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2346 04e6 83B2     		uxth	r3, r0
 2347 04e8 1344     		add	r3, r3, r2
 2348 04ea 9AB2     		uxth	r2, r3
 2349 04ec 334B     		ldr	r3, .L206+84
 2350 04ee 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 770:main.c        ****                 
 771:main.c        ****                 if (calibrationMode)
 2351              		.loc 1 771 0
 2352 04f2 334B     		ldr	r3, .L206+88
 2353 04f4 1B68     		ldr	r3, [r3]
 2354 04f6 002B     		cmp	r3, #0
 2355 04f8 6FD0     		beq	.L80
 772:main.c        ****                 {
 773:main.c        ****                     if (angle[main_counter] < pedals_low[main_counter])
 2356              		.loc 1 773 0
 2357 04fa 2A4B     		ldr	r3, .L206+60
 2358 04fc 1B78     		ldrb	r3, [r3]
 2359 04fe DBB2     		uxtb	r3, r3
 2360 0500 1A46     		mov	r2, r3
 2361 0502 2E4B     		ldr	r3, .L206+84
 2362 0504 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2363 0508 264B     		ldr	r3, .L206+60
 2364 050a 1B78     		ldrb	r3, [r3]
 2365 050c DBB2     		uxtb	r3, r3
 2366 050e 1946     		mov	r1, r3
 2367 0510 2C4B     		ldr	r3, .L206+92
 2368 0512 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2369 0516 9A42     		cmp	r2, r3
 2370 0518 0DD2     		bcs	.L81
 774:main.c        ****                     {
 775:main.c        ****                         pedals_low[main_counter] = angle[main_counter];
 2371              		.loc 1 775 0
 2372 051a 224B     		ldr	r3, .L206+60
 2373 051c 1B78     		ldrb	r3, [r3]
 2374 051e DBB2     		uxtb	r3, r3
 2375 0520 1A46     		mov	r2, r3
 2376 0522 204B     		ldr	r3, .L206+60
 2377 0524 1B78     		ldrb	r3, [r3]
 2378 0526 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 57


 2379 0528 1946     		mov	r1, r3
 2380 052a 244B     		ldr	r3, .L206+84
 2381 052c 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2382 0530 244B     		ldr	r3, .L206+92
 2383 0532 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2384              	.L81:
 776:main.c        ****                         
 777:main.c        ****                     }
 778:main.c        ****                     if (angle[main_counter] > pedals_high[main_counter])
 2385              		.loc 1 778 0
 2386 0536 1B4B     		ldr	r3, .L206+60
 2387 0538 1B78     		ldrb	r3, [r3]
 2388 053a DBB2     		uxtb	r3, r3
 2389 053c 1A46     		mov	r2, r3
 2390 053e 1F4B     		ldr	r3, .L206+84
 2391 0540 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2392 0544 174B     		ldr	r3, .L206+60
 2393 0546 1B78     		ldrb	r3, [r3]
 2394 0548 DBB2     		uxtb	r3, r3
 2395 054a 1946     		mov	r1, r3
 2396 054c 1E4B     		ldr	r3, .L206+96
 2397 054e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2398 0552 9A42     		cmp	r2, r3
 2399 0554 41D9     		bls	.L80
 779:main.c        ****                     {
 780:main.c        ****                          pedals_high[main_counter] = angle[main_counter];
 2400              		.loc 1 780 0
 2401 0556 134B     		ldr	r3, .L206+60
 2402 0558 1B78     		ldrb	r3, [r3]
 2403 055a DBB2     		uxtb	r3, r3
 2404 055c 1A46     		mov	r2, r3
 2405 055e 114B     		ldr	r3, .L206+60
 2406 0560 1B78     		ldrb	r3, [r3]
 2407 0562 DBB2     		uxtb	r3, r3
 2408 0564 32E0     		b	.L207
 2409              	.L208:
 2410 0566 00BF     		.align	2
 2411              	.L206:
 2412 0568 00000000 		.word	presetNamesArray
 2413 056c 00000000 		.word	presetAlreadyDisplayed
 2414 0570 00000000 		.word	Em_EEPROM_em_EepromStorage
 2415 0574 00000000 		.word	eepromReturnValue
 2416 0578 00000000 		.word	Vbus_function
 2417 057c 00000000 		.word	currentNeck
 2418 0580 00000000 		.word	necks
 2419 0584 00000000 		.word	currentCopedent
 2420 0588 00000000 		.word	I2Cbuff1
 2421 058c 00000000 		.word	status
 2422 0590 00040000 		.word	.LC0
 2423 0594 00000000 		.word	copedentNamesArray
 2424 0598 00000000 		.word	spis_1_ss
 2425 059c 00000000 		.word	spis_2_ss
 2426 05a0 00000000 		.word	myArray
 2427 05a4 00000000 		.word	main_counter
 2428 05a8 00000000 		.word	parseThatMF
 2429 05ac 00000000 		.word	mux_states
 2430 05b0 00000000 		.word	last_mux
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 58


 2431 05b4 00000000 		.word	i2c_skipped
 2432 05b8 00000000 		.word	I2Cbuff2
 2433 05bc 00000000 		.word	angle
 2434 05c0 00000000 		.word	calibrationMode
 2435 05c4 00000000 		.word	pedals_low
 2436 05c8 00000000 		.word	pedals_high
 2437              	.L207:
 2438 05cc 1946     		mov	r1, r3
 2439 05ce 944B     		ldr	r3, .L209
 2440 05d0 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2441 05d4 934B     		ldr	r3, .L209+4
 2442 05d6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2443              	.L80:
 781:main.c        ****                     }
 782:main.c        ****                 }
 783:main.c        ****             }
 784:main.c        ****         }
 785:main.c        ****         
 786:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 787:main.c        ****         if (main_counter == 9)
 2444              		.loc 1 787 0
 2445 05da 934B     		ldr	r3, .L209+8
 2446 05dc 1B78     		ldrb	r3, [r3]
 2447 05de DBB2     		uxtb	r3, r3
 2448 05e0 092B     		cmp	r3, #9
 2449 05e2 32D1     		bne	.L82
 788:main.c        ****         {
 789:main.c        ****             if (!i2c_skipped[main_counter])
 2450              		.loc 1 789 0
 2451 05e4 904B     		ldr	r3, .L209+8
 2452 05e6 1B78     		ldrb	r3, [r3]
 2453 05e8 DBB2     		uxtb	r3, r3
 2454 05ea 1A46     		mov	r2, r3
 2455 05ec 8F4B     		ldr	r3, .L209+12
 2456 05ee 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2457 05f0 002B     		cmp	r3, #0
 2458 05f2 64D1     		bne	.L86
 790:main.c        ****             {
 791:main.c        ****                 //scan the knob adc
 792:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2459              		.loc 1 792 0
 2460 05f4 8E4B     		ldr	r3, .L209+16
 2461 05f6 0022     		movs	r2, #0
 2462 05f8 1A70     		strb	r2, [r3]
 793:main.c        ****                 status = I2C_MasterReadBlocking(0x13, 16, I2C_1_MODE_COMPLETE_XFER);
 2463              		.loc 1 793 0
 2464 05fa 0022     		movs	r2, #0
 2465 05fc 1021     		movs	r1, #16
 2466 05fe 1320     		movs	r0, #19
 2467 0600 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2468 0604 0346     		mov	r3, r0
 2469 0606 1A46     		mov	r2, r3
 2470 0608 8A4B     		ldr	r3, .L209+20
 2471 060a 1A60     		str	r2, [r3]
 2472              	.LBB15:
 794:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2473              		.loc 1 794 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 59


 2474 060c 0023     		movs	r3, #0
 2475 060e 3B67     		str	r3, [r7, #112]
 2476 0610 10E0     		b	.L84
 2477              	.L85:
 795:main.c        ****                 {
 796:main.c        ****                     macroKnobValues[i] = ((I2Cbuff1[i*2] << 8) + (I2Cbuff1[i*2] & 255)) & 4095; // 
 2478              		.loc 1 796 0 discriminator 3
 2479 0612 3B6F     		ldr	r3, [r7, #112]
 2480 0614 5B00     		lsls	r3, r3, #1
 2481 0616 864A     		ldr	r2, .L209+16
 2482 0618 D35C     		ldrb	r3, [r2, r3]
 2483 061a 3B6F     		ldr	r3, [r7, #112]
 2484 061c 5B00     		lsls	r3, r3, #1
 2485 061e 844A     		ldr	r2, .L209+16
 2486 0620 D35C     		ldrb	r3, [r2, r3]
 2487 0622 D9B2     		uxtb	r1, r3
 2488 0624 844A     		ldr	r2, .L209+24
 2489 0626 3B6F     		ldr	r3, [r7, #112]
 2490 0628 1344     		add	r3, r3, r2
 2491 062a 0A46     		mov	r2, r1
 2492 062c 1A70     		strb	r2, [r3]
 794:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2493              		.loc 1 794 0 discriminator 3
 2494 062e 3B6F     		ldr	r3, [r7, #112]
 2495 0630 0133     		adds	r3, r3, #1
 2496 0632 3B67     		str	r3, [r7, #112]
 2497              	.L84:
 794:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2498              		.loc 1 794 0 is_stmt 0 discriminator 1
 2499 0634 3B6F     		ldr	r3, [r7, #112]
 2500 0636 072B     		cmp	r3, #7
 2501 0638 EBDD     		ble	.L85
 2502              	.LBE15:
 797:main.c        ****                 }
 798:main.c        ****                 //
 799:main.c        ****                 if (macroOLEDWaitingToSend)
 2503              		.loc 1 799 0 is_stmt 1
 2504 063a 804B     		ldr	r3, .L209+28
 2505 063c 1B68     		ldr	r3, [r3]
 2506 063e 002B     		cmp	r3, #0
 2507 0640 3DD0     		beq	.L86
 800:main.c        ****                 {
 801:main.c        ****                     //send the data to the little macro OLED screens
 802:main.c        ****                     
 803:main.c        ****                     macroOLEDWaitingToSend = 0;
 2508              		.loc 1 803 0
 2509 0642 7E4B     		ldr	r3, .L209+28
 2510 0644 0022     		movs	r2, #0
 2511 0646 1A60     		str	r2, [r3]
 2512 0648 39E0     		b	.L86
 2513              	.L82:
 804:main.c        ****                 }
 805:main.c        ****             }
 806:main.c        ****             
 807:main.c        ****         }
 808:main.c        ****         //otherwise it's the ADC for the foot pedal
 809:main.c        ****         else if (main_counter == 10)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 60


 2514              		.loc 1 809 0
 2515 064a 774B     		ldr	r3, .L209+8
 2516 064c 1B78     		ldrb	r3, [r3]
 2517 064e DBB2     		uxtb	r3, r3
 2518 0650 0A2B     		cmp	r3, #10
 2519 0652 26D1     		bne	.L87
 810:main.c        ****         {
 811:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 812:main.c        ****             if (!i2c_skipped[main_counter])
 2520              		.loc 1 812 0
 2521 0654 744B     		ldr	r3, .L209+8
 2522 0656 1B78     		ldrb	r3, [r3]
 2523 0658 DBB2     		uxtb	r3, r3
 2524 065a 1A46     		mov	r2, r3
 2525 065c 734B     		ldr	r3, .L209+12
 2526 065e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2527 0660 002B     		cmp	r3, #0
 2528 0662 2CD1     		bne	.L86
 813:main.c        ****             {
 814:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2529              		.loc 1 814 0
 2530 0664 724B     		ldr	r3, .L209+16
 2531 0666 0022     		movs	r2, #0
 2532 0668 1A70     		strb	r2, [r3]
 815:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2533              		.loc 1 815 0
 2534 066a 0022     		movs	r2, #0
 2535 066c 0221     		movs	r1, #2
 2536 066e 4F20     		movs	r0, #79
 2537 0670 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2538 0674 0346     		mov	r3, r0
 2539 0676 1A46     		mov	r2, r3
 2540 0678 6E4B     		ldr	r3, .L209+20
 2541 067a 1A60     		str	r2, [r3]
 816:main.c        ****                 volumePedal = I2Cbuff2[0] << 8;
 2542              		.loc 1 816 0
 2543 067c 704B     		ldr	r3, .L209+32
 2544 067e 1B78     		ldrb	r3, [r3]
 2545 0680 DBB2     		uxtb	r3, r3
 2546 0682 9BB2     		uxth	r3, r3
 2547 0684 1B02     		lsls	r3, r3, #8
 2548 0686 9AB2     		uxth	r2, r3
 2549 0688 6E4B     		ldr	r3, .L209+36
 2550 068a 1A80     		strh	r2, [r3]	@ movhi
 817:main.c        ****                 volumePedal +=  I2Cbuff2[1];
 2551              		.loc 1 817 0
 2552 068c 6C4B     		ldr	r3, .L209+32
 2553 068e 5B78     		ldrb	r3, [r3, #1]
 2554 0690 DBB2     		uxtb	r3, r3
 2555 0692 9AB2     		uxth	r2, r3
 2556 0694 6B4B     		ldr	r3, .L209+36
 2557 0696 1B88     		ldrh	r3, [r3]
 2558 0698 1344     		add	r3, r3, r2
 2559 069a 9AB2     		uxth	r2, r3
 2560 069c 694B     		ldr	r3, .L209+36
 2561 069e 1A80     		strh	r2, [r3]	@ movhi
 2562 06a0 0DE0     		b	.L86
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 61


 2563              	.L87:
 818:main.c        ****             }
 819:main.c        ****         }
 820:main.c        ****         else
 821:main.c        ****         if (main_counter == 11)
 2564              		.loc 1 821 0
 2565 06a2 614B     		ldr	r3, .L209+8
 2566 06a4 1B78     		ldrb	r3, [r3]
 2567 06a6 DBB2     		uxtb	r3, r3
 2568 06a8 0B2B     		cmp	r3, #11
 2569 06aa 08D1     		bne	.L86
 822:main.c        ****         { 
 823:main.c        ****             if (mainOLEDWaitingToSend)
 2570              		.loc 1 823 0
 2571 06ac 664B     		ldr	r3, .L209+40
 2572 06ae 1B68     		ldr	r3, [r3]
 2573 06b0 002B     		cmp	r3, #0
 2574 06b2 04D0     		beq	.L86
 824:main.c        ****             {
 825:main.c        ****                 OLED_draw();
 2575              		.loc 1 825 0
 2576 06b4 FFF7FEFF 		bl	OLED_draw
 826:main.c        ****                 mainOLEDWaitingToSend = 0;
 2577              		.loc 1 826 0
 2578 06b8 634B     		ldr	r3, .L209+40
 2579 06ba 0022     		movs	r2, #0
 2580 06bc 1A60     		str	r2, [r3]
 2581              	.L86:
 827:main.c        ****             }
 828:main.c        ****             
 829:main.c        ****             #if 0
 830:main.c        ****             if (OLEDcount == 0)
 831:main.c        ****             {
 832:main.c        ****                 OLEDclearLine(FirstLine);
 833:main.c        ****             }
 834:main.c        ****             else if (OLEDcount == 1)
 835:main.c        ****             {
 836:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 837:main.c        **** 		    }
 838:main.c        ****             else if (OLEDcount == 2)
 839:main.c        ****             {
 840:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 841:main.c        ****             }
 842:main.c        ****             else if (OLEDcount == 3)
 843:main.c        ****             {
 844:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 845:main.c        ****             }
 846:main.c        ****             else if (OLEDcount == 4)
 847:main.c        ****             {
 848:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 849:main.c        ****             }
 850:main.c        ****             else if (OLEDcount == 5)
 851:main.c        ****             {
 852:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 853:main.c        ****             }
 854:main.c        ****             else if (OLEDcount == 6)
 855:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 62


 856:main.c        ****                 //OLED_drawFirstLine();
 857:main.c        ****                 
 858:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 859:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 860:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 861:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 862:main.c        ****                  //OLED_draw();
 863:main.c        ****             }
 864:main.c        ****             OLEDcount++;
 865:main.c        ****             if (OLEDcount > 6)
 866:main.c        ****             {
 867:main.c        ****                 OLEDcount = 0;
 868:main.c        ****             }
 869:main.c        ****             #endif
 870:main.c        ****         }
 871:main.c        ****         
 872:main.c        ****         /*
 873:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 874:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 875:main.c        **** 
 876:main.c        ****                 for (int i = 0; i < 5; i++)
 877:main.c        ****                 {
 878:main.c        ****                     I2Cbuff1[0] = 1<<i;
 879:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 880:main.c        **** 
 881:main.c        ****                     I2Cbuff1[0] = 0x0E;
 882:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 883:main.c        **** 
 884:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 885:main.c        **** 
 886:main.c        **** 
 887:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 888:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 889:main.c        ****                 }
 890:main.c        ****             if (main_counter == 0)
 891:main.c        ****             {               
 892:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 893:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 894:main.c        **** 
 895:main.c        ****                 for (int i = 0; i < 5; i++)
 896:main.c        ****                 {
 897:main.c        ****                     I2Cbuff1[0] = 1<<i;
 898:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 899:main.c        **** 
 900:main.c        ****                     I2Cbuff1[0] = 0x0E;
 901:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 902:main.c        **** 
 903:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 904:main.c        **** 
 905:main.c        **** 
 906:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 907:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 908:main.c        ****                 }
 909:main.c        ****             }
 910:main.c        ****             else
 911:main.c        ****             {
 912:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 63


 913:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 914:main.c        ****                 I2Cbuff1[0] = 0x0E;
 915:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 916:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 917:main.c        ****                 {
 918:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 919:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 920:main.c        ****                 }
 921:main.c        ****            
 922:main.c        **** 
 923:main.c        **** 
 924:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 925:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 926:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 927:main.c        ****                 {
 928:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 929:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 930:main.c        ****                 }
 931:main.c        ****                 
 932:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
 933:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
 934:main.c        ****             }    
 935:main.c        ****                 
 936:main.c        **** 
 937:main.c        ****             send_it = 1;
 938:main.c        ****         }
 939:main.c        ****         */
 940:main.c        ****         
 941:main.c        ****         if (main_counter < 10)
 2582              		.loc 1 941 0
 2583 06be 5A4B     		ldr	r3, .L209+8
 2584 06c0 1B78     		ldrb	r3, [r3]
 2585 06c2 DBB2     		uxtb	r3, r3
 2586 06c4 092B     		cmp	r3, #9
 2587 06c6 00F29080 		bhi	.L89
 2588              	.LBB16:
 942:main.c        ****         {
 943:main.c        ****             
 944:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 945:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2589              		.loc 1 945 0
 2590 06ca 574B     		ldr	r3, .L209+8
 2591 06cc 1B78     		ldrb	r3, [r3]
 2592 06ce DBB2     		uxtb	r3, r3
 2593 06d0 1A46     		mov	r2, r3
 2594 06d2 534B     		ldr	r3, .L209
 2595 06d4 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2596 06d8 534B     		ldr	r3, .L209+8
 2597 06da 1B78     		ldrb	r3, [r3]
 2598 06dc DBB2     		uxtb	r3, r3
 2599 06de 1946     		mov	r1, r3
 2600 06e0 5A4B     		ldr	r3, .L209+44
 2601 06e2 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2602 06e6 D31A     		subs	r3, r2, r3
 2603 06e8 9BB2     		uxth	r3, r3
 2604 06ea 3B85     		strh	r3, [r7, #40]	@ movhi
 946:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 64


 947:main.c        ****             if (tempangle > 0)
 2605              		.loc 1 947 0
 2606 06ec B7F92830 		ldrsh	r3, [r7, #40]
 2607 06f0 002B     		cmp	r3, #0
 2608 06f2 1CDD     		ble	.L90
 948:main.c        ****             {
 949:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2609              		.loc 1 949 0
 2610 06f4 4C4B     		ldr	r3, .L209+8
 2611 06f6 1B78     		ldrb	r3, [r3]
 2612 06f8 DBB2     		uxtb	r3, r3
 2613 06fa 1C46     		mov	r4, r3
 2614 06fc B7F92830 		ldrsh	r3, [r7, #40]
 2615 0700 1846     		mov	r0, r3
 2616 0702 FFF7FEFF 		bl	__aeabi_i2f
 2617 0706 484B     		ldr	r3, .L209+8
 2618 0708 1B78     		ldrb	r3, [r3]
 2619 070a DBB2     		uxtb	r3, r3
 2620 070c 1A46     		mov	r2, r3
 2621 070e 504B     		ldr	r3, .L209+48
 2622 0710 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2623 0714 1946     		mov	r1, r3
 2624 0716 FFF7FEFF 		bl	__aeabi_fmul
 2625 071a 0346     		mov	r3, r0
 2626 071c 1846     		mov	r0, r3
 2627 071e FFF7FEFF 		bl	__aeabi_f2uiz
 2628 0722 0346     		mov	r3, r0
 2629 0724 9AB2     		uxth	r2, r3
 2630 0726 4B4B     		ldr	r3, .L209+52
 2631 0728 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2632 072c 07E0     		b	.L91
 2633              	.L90:
 950:main.c        ****             }
 951:main.c        ****             else
 952:main.c        ****             {
 953:main.c        ****                 processed_pedals[main_counter] = 0;
 2634              		.loc 1 953 0
 2635 072e 3E4B     		ldr	r3, .L209+8
 2636 0730 1B78     		ldrb	r3, [r3]
 2637 0732 DBB2     		uxtb	r3, r3
 2638 0734 1A46     		mov	r2, r3
 2639 0736 474B     		ldr	r3, .L209+52
 2640 0738 0021     		movs	r1, #0
 2641 073a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2642              	.L91:
 954:main.c        ****             }
 955:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2643              		.loc 1 955 0
 2644 073e 3A4B     		ldr	r3, .L209+8
 2645 0740 1B78     		ldrb	r3, [r3]
 2646 0742 DBB2     		uxtb	r3, r3
 2647 0744 1A46     		mov	r2, r3
 2648 0746 434B     		ldr	r3, .L209+52
 2649 0748 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2650 074c B3F5805F 		cmp	r3, #4096
 2651 0750 08D3     		bcc	.L92
 956:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 65


 957:main.c        ****                 processed_pedals[main_counter] = 4095;
 2652              		.loc 1 957 0
 2653 0752 354B     		ldr	r3, .L209+8
 2654 0754 1B78     		ldrb	r3, [r3]
 2655 0756 DBB2     		uxtb	r3, r3
 2656 0758 1A46     		mov	r2, r3
 2657 075a 3E4B     		ldr	r3, .L209+52
 2658 075c 40F6FF71 		movw	r1, #4095
 2659 0760 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2660              	.L92:
 958:main.c        ****             }
 959:main.c        ****             
 960:main.c        ****             
 961:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 962:main.c        ****             {
 963:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 964:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 965:main.c        ****             }
 966:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2661              		.loc 1 966 0
 2662 0764 304B     		ldr	r3, .L209+8
 2663 0766 1B78     		ldrb	r3, [r3]
 2664 0768 DBB2     		uxtb	r3, r3
 2665 076a 1C46     		mov	r4, r3
 2666 076c 2E4B     		ldr	r3, .L209+8
 2667 076e 1B78     		ldrb	r3, [r3]
 2668 0770 DBB2     		uxtb	r3, r3
 2669 0772 1A46     		mov	r2, r3
 2670 0774 374B     		ldr	r3, .L209+52
 2671 0776 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2672 077a 1846     		mov	r0, r3
 2673 077c FFF7FEFF 		bl	__aeabi_ui2f
 2674 0780 0346     		mov	r3, r0
 2675 0782 3549     		ldr	r1, .L209+56
 2676 0784 1846     		mov	r0, r3
 2677 0786 FFF7FEFF 		bl	__aeabi_fmul
 2678 078a 0346     		mov	r3, r0
 2679 078c 1A46     		mov	r2, r3
 2680 078e 334B     		ldr	r3, .L209+60
 2681 0790 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 967:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[main_counter] * 0.0625f;
 2682              		.loc 1 967 0
 2683 0794 244B     		ldr	r3, .L209+8
 2684 0796 1B78     		ldrb	r3, [r3]
 2685 0798 DBB2     		uxtb	r3, r3
 2686 079a 1C46     		mov	r4, r3
 2687 079c 224B     		ldr	r3, .L209+8
 2688 079e 1B78     		ldrb	r3, [r3]
 2689 07a0 DBB2     		uxtb	r3, r3
 2690 07a2 1A46     		mov	r2, r3
 2691 07a4 2B4B     		ldr	r3, .L209+52
 2692 07a6 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2693 07aa 1846     		mov	r0, r3
 2694 07ac FFF7FEFF 		bl	__aeabi_ui2f
 2695 07b0 0346     		mov	r3, r0
 2696 07b2 4FF07651 		mov	r1, #1031798784
 2697 07b6 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 66


 2698 07b8 FFF7FEFF 		bl	__aeabi_fmul
 2699 07bc 0346     		mov	r3, r0
 2700 07be 1846     		mov	r0, r3
 2701 07c0 FFF7FEFF 		bl	__aeabi_f2uiz
 2702 07c4 0346     		mov	r3, r0
 2703 07c6 DAB2     		uxtb	r2, r3
 2704 07c8 254B     		ldr	r3, .L209+64
 2705 07ca 1A55     		strb	r2, [r3, r4]
 968:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 2706              		.loc 1 968 0
 2707 07cc 164B     		ldr	r3, .L209+8
 2708 07ce 1B78     		ldrb	r3, [r3]
 2709 07d0 DBB2     		uxtb	r3, r3
 2710 07d2 1A46     		mov	r2, r3
 2711 07d4 144B     		ldr	r3, .L209+8
 2712 07d6 1B78     		ldrb	r3, [r3]
 2713 07d8 DBB2     		uxtb	r3, r3
 2714 07da 1946     		mov	r1, r3
 2715 07dc 1D4B     		ldr	r3, .L209+52
 2716 07de 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2717 07e2 204B     		ldr	r3, .L209+68
 2718 07e4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2719              	.LBE16:
 2720 07e8 6DE0     		b	.L93
 2721              	.L89:
 969:main.c        ****         }
 970:main.c        ****         else
 971:main.c        ****         {
 972:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2722              		.loc 1 972 0
 2723 07ea 164B     		ldr	r3, .L209+36
 2724 07ec 1B88     		ldrh	r3, [r3]
 2725 07ee 1846     		mov	r0, r3
 2726 07f0 FFF7FEFF 		bl	__aeabi_ui2f
 2727 07f4 0346     		mov	r3, r0
 2728 07f6 1C49     		ldr	r1, .L209+72
 2729 07f8 1846     		mov	r0, r3
 2730 07fa FFF7FEFF 		bl	__aeabi_fmul
 2731 07fe 0346     		mov	r3, r0
 2732 0800 1846     		mov	r0, r3
 2733 0802 FFF7FEFF 		bl	__aeabi_f2iz
 2734 0806 0346     		mov	r3, r0
 2735 0808 1AB2     		sxth	r2, r3
 2736 080a 184B     		ldr	r3, .L209+76
 2737 080c 1A80     		strh	r2, [r3]	@ movhi
 973:main.c        **** 
 974:main.c        ****             if (processed_volumePedal < 0)
 2738              		.loc 1 974 0
 2739 080e 174B     		ldr	r3, .L209+76
 2740 0810 B3F90030 		ldrsh	r3, [r3]
 2741 0814 002B     		cmp	r3, #0
 2742 0816 2BDA     		bge	.L94
 975:main.c        ****             {
 976:main.c        ****                 processed_volumePedal = 0;
 2743              		.loc 1 976 0
 2744 0818 144B     		ldr	r3, .L209+76
 2745 081a 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 67


 2746 081c 1A80     		strh	r2, [r3]	@ movhi
 2747 081e 31E0     		b	.L95
 2748              	.L210:
 2749              		.align	2
 2750              	.L209:
 2751 0820 00000000 		.word	angle
 2752 0824 00000000 		.word	pedals_high
 2753 0828 00000000 		.word	main_counter
 2754 082c 00000000 		.word	i2c_skipped
 2755 0830 00000000 		.word	I2Cbuff1
 2756 0834 00000000 		.word	status
 2757 0838 00000000 		.word	macroKnobValues
 2758 083c 00000000 		.word	macroOLEDWaitingToSend
 2759 0840 00000000 		.word	I2Cbuff2
 2760 0844 00000000 		.word	volumePedal
 2761 0848 00000000 		.word	mainOLEDWaitingToSend
 2762 084c 00000000 		.word	pedals_low
 2763 0850 00000000 		.word	pedalRatios
 2764 0854 00000000 		.word	processed_pedals
 2765 0858 01088039 		.word	964691969
 2766 085c 00000000 		.word	pedals_float
 2767 0860 00000000 		.word	pedals8bit
 2768 0864 00000000 		.word	prev_processed_pedals
 2769 0868 C5F1803F 		.word	1065415109
 2770 086c 00000000 		.word	processed_volumePedal
 2771              	.L94:
 977:main.c        ****             }
 978:main.c        ****             else if (processed_volumePedal > 4095)
 2772              		.loc 1 978 0
 2773 0870 A34B     		ldr	r3, .L211
 2774 0872 B3F90030 		ldrsh	r3, [r3]
 2775 0876 B3F5805F 		cmp	r3, #4096
 2776 087a 03DB     		blt	.L95
 979:main.c        ****             {
 980:main.c        ****                  processed_volumePedal = 4095;
 2777              		.loc 1 980 0
 2778 087c A04B     		ldr	r3, .L211
 2779 087e 40F6FF72 		movw	r2, #4095
 2780 0882 1A80     		strh	r2, [r3]	@ movhi
 2781              	.L95:
 981:main.c        ****             }
 982:main.c        ****             
 983:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 2782              		.loc 1 983 0
 2783 0884 9E4B     		ldr	r3, .L211
 2784 0886 B3F90020 		ldrsh	r2, [r3]
 2785 088a 9E4B     		ldr	r3, .L211+4
 2786 088c B3F90030 		ldrsh	r3, [r3]
 2787 0890 9A42     		cmp	r2, r3
 2788 0892 13D0     		beq	.L96
 2789              	.LBB17:
 984:main.c        ****             {
 985:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 2790              		.loc 1 985 0
 2791 0894 9A4B     		ldr	r3, .L211
 2792 0896 B3F90030 		ldrsh	r3, [r3]
 2793 089a FB84     		strh	r3, [r7, #38]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 68


 986:main.c        ****                 
 987:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 2794              		.loc 1 987 0
 2795 089c FB8C     		ldrh	r3, [r7, #38]
 2796 089e DB09     		lsrs	r3, r3, #7
 2797 08a0 9BB2     		uxth	r3, r3
 2798 08a2 0022     		movs	r2, #0
 2799 08a4 1946     		mov	r1, r3
 2800 08a6 1520     		movs	r0, #21
 2801 08a8 FFF7FEFF 		bl	sendMIDIControlChange
 988:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 2802              		.loc 1 988 0
 2803 08ac FB8C     		ldrh	r3, [r7, #38]
 2804 08ae 03F07F03 		and	r3, r3, #127
 2805 08b2 0022     		movs	r2, #0
 2806 08b4 1946     		mov	r1, r3
 2807 08b6 1620     		movs	r0, #22
 2808 08b8 FFF7FEFF 		bl	sendMIDIControlChange
 2809              	.L96:
 2810              	.LBE17:
 989:main.c        ****             }
 990:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 2811              		.loc 1 990 0
 2812 08bc 904B     		ldr	r3, .L211
 2813 08be B3F90020 		ldrsh	r2, [r3]
 2814 08c2 904B     		ldr	r3, .L211+4
 2815 08c4 1A80     		strh	r2, [r3]	@ movhi
 2816              	.L93:
 991:main.c        ****         }
 992:main.c        ****         
 993:main.c        ****         main_counter++;
 2817              		.loc 1 993 0
 2818 08c6 904B     		ldr	r3, .L211+8
 2819 08c8 1B78     		ldrb	r3, [r3]
 2820 08ca DBB2     		uxtb	r3, r3
 2821 08cc 0133     		adds	r3, r3, #1
 2822 08ce DAB2     		uxtb	r2, r3
 2823 08d0 8D4B     		ldr	r3, .L211+8
 2824 08d2 1A70     		strb	r2, [r3]
 994:main.c        **** 
 995:main.c        ****         if (main_counter > 11)
 2825              		.loc 1 995 0
 2826 08d4 8C4B     		ldr	r3, .L211+8
 2827 08d6 1B78     		ldrb	r3, [r3]
 2828 08d8 DBB2     		uxtb	r3, r3
 2829 08da 0B2B     		cmp	r3, #11
 2830 08dc 02D9     		bls	.L97
 996:main.c        ****         {
 997:main.c        ****             main_counter = 0;
 2831              		.loc 1 997 0
 2832 08de 8A4B     		ldr	r3, .L211+8
 2833 08e0 0022     		movs	r2, #0
 2834 08e2 1A70     		strb	r2, [r3]
 2835              	.L97:
 998:main.c        ****         }
 999:main.c        ****         
1000:main.c        ****         #if 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 69


1001:main.c        ****             
1002:main.c        ****             
1003:main.c        ****         main_counter++;
1004:main.c        ****         if (main_counter >= 11)
1005:main.c        ****         {
1006:main.c        ****                /*  
1007:main.c        ****             testpin3_Write(1);
1008:main.c        ****             I2Cbuff1[0] = 1<<6;
1009:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1010:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1011:main.c        **** 
1012:main.c        ****         //CyDelay(1);
1013:main.c        ****         
1014:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1015:main.c        **** 
1016:main.c        ****         OLED_draw();
1017:main.c        ****                     I2Cbuff1[0] = 1<<0;
1018:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1019:main.c        ****         testpin3_Write(0);
1020:main.c        ****             */
1021:main.c        ****             main_counter = 0;
1022:main.c        ****         }
1023:main.c        ****         #endif
1024:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 2836              		.loc 1 1024 0
 2837 08e4 894B     		ldr	r3, .L211+12
 2838 08e6 1B78     		ldrb	r3, [r3]
 2839 08e8 DBB2     		uxtb	r3, r3
 2840 08ea 002B     		cmp	r3, #0
 2841 08ec 0CBF     		ite	eq
 2842 08ee 0123     		moveq	r3, #1
 2843 08f0 0023     		movne	r3, #0
 2844 08f2 DBB2     		uxtb	r3, r3
 2845 08f4 864A     		ldr	r2, .L211+16
 2846 08f6 DB00     		lsls	r3, r3, #3
 2847 08f8 1344     		add	r3, r3, r2
 2848 08fa 9B79     		ldrb	r3, [r3, #6]
 2849 08fc DBB2     		uxtb	r3, r3
 2850 08fe FE2B     		cmp	r3, #254
 2851 0900 40F05281 		bne	.L98
 2852              		.loc 1 1024 0 is_stmt 0 discriminator 1
 2853 0904 814B     		ldr	r3, .L211+12
 2854 0906 1B78     		ldrb	r3, [r3]
 2855 0908 DBB2     		uxtb	r3, r3
 2856 090a 002B     		cmp	r3, #0
 2857 090c 0CBF     		ite	eq
 2858 090e 0123     		moveq	r3, #1
 2859 0910 0023     		movne	r3, #0
 2860 0912 DBB2     		uxtb	r3, r3
 2861 0914 7E4A     		ldr	r2, .L211+16
 2862 0916 DB00     		lsls	r3, r3, #3
 2863 0918 1344     		add	r3, r3, r2
 2864 091a DB79     		ldrb	r3, [r3, #7]
 2865 091c DBB2     		uxtb	r3, r3
 2866 091e FD2B     		cmp	r3, #253
 2867 0920 40F04281 		bne	.L98
 2868              	.LBB18:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 70


1025:main.c        ****         {
1026:main.c        ****             for (int i = 0; i < 2; i++)
 2869              		.loc 1 1026 0 is_stmt 1
 2870 0924 0023     		movs	r3, #0
 2871 0926 FB66     		str	r3, [r7, #108]
 2872 0928 3AE1     		b	.L99
 2873              	.L111:
1027:main.c        ****             {
1028:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 2874              		.loc 1 1028 0
 2875 092a 784B     		ldr	r3, .L211+12
 2876 092c 1B78     		ldrb	r3, [r3]
 2877 092e DBB2     		uxtb	r3, r3
 2878 0930 002B     		cmp	r3, #0
 2879 0932 0CBF     		ite	eq
 2880 0934 0123     		moveq	r3, #1
 2881 0936 0023     		movne	r3, #0
 2882 0938 DBB2     		uxtb	r3, r3
 2883 093a 1A46     		mov	r2, r3
 2884 093c FB6E     		ldr	r3, [r7, #108]
 2885 093e 5B00     		lsls	r3, r3, #1
 2886 0940 7349     		ldr	r1, .L211+16
 2887 0942 D200     		lsls	r2, r2, #3
 2888 0944 0A44     		add	r2, r2, r1
 2889 0946 1344     		add	r3, r3, r2
 2890 0948 1B78     		ldrb	r3, [r3]
 2891 094a DBB2     		uxtb	r3, r3
 2892 094c 9BB2     		uxth	r3, r3
 2893 094e 1B02     		lsls	r3, r3, #8
 2894 0950 9AB2     		uxth	r2, r3
 2895 0952 6E4B     		ldr	r3, .L211+12
 2896 0954 1B78     		ldrb	r3, [r3]
 2897 0956 DBB2     		uxtb	r3, r3
 2898 0958 002B     		cmp	r3, #0
 2899 095a 0CBF     		ite	eq
 2900 095c 0123     		moveq	r3, #1
 2901 095e 0023     		movne	r3, #0
 2902 0960 DBB2     		uxtb	r3, r3
 2903 0962 1946     		mov	r1, r3
 2904 0964 FB6E     		ldr	r3, [r7, #108]
 2905 0966 5B00     		lsls	r3, r3, #1
 2906 0968 0133     		adds	r3, r3, #1
 2907 096a 6948     		ldr	r0, .L211+16
 2908 096c C900     		lsls	r1, r1, #3
 2909 096e 0144     		add	r1, r1, r0
 2910 0970 0B44     		add	r3, r3, r1
 2911 0972 1B78     		ldrb	r3, [r3]
 2912 0974 DBB2     		uxtb	r3, r3
 2913 0976 9BB2     		uxth	r3, r3
 2914 0978 1344     		add	r3, r3, r2
 2915 097a 99B2     		uxth	r1, r3
 2916 097c 654A     		ldr	r2, .L211+20
 2917 097e FB6E     		ldr	r3, [r7, #108]
 2918 0980 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1029:main.c        ****     
1030:main.c        ****                 if (bar[i] != prevBar[i])
 2919              		.loc 1 1030 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 71


 2920 0984 634A     		ldr	r2, .L211+20
 2921 0986 FB6E     		ldr	r3, [r7, #108]
 2922 0988 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2923 098c 9AB2     		uxth	r2, r3
 2924 098e 6249     		ldr	r1, .L211+24
 2925 0990 FB6E     		ldr	r3, [r7, #108]
 2926 0992 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2927 0996 9BB2     		uxth	r3, r3
 2928 0998 9A42     		cmp	r2, r3
 2929 099a 00F0F580 		beq	.L100
1031:main.c        ****                 {
1032:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 2930              		.loc 1 1032 0
 2931 099e 5D4A     		ldr	r2, .L211+20
 2932 09a0 FB6E     		ldr	r3, [r7, #108]
 2933 09a2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2934 09a6 9BB2     		uxth	r3, r3
 2935 09a8 4FF6FF72 		movw	r2, #65535
 2936 09ac 9342     		cmp	r3, r2
 2937 09ae 11D0     		beq	.L101
 2938              		.loc 1 1032 0 is_stmt 0 discriminator 1
 2939 09b0 584A     		ldr	r2, .L211+20
 2940 09b2 FB6E     		ldr	r3, [r7, #108]
 2941 09b4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2942 09b8 9BB2     		uxth	r3, r3
 2943 09ba 1846     		mov	r0, r3
 2944 09bc FFF7FEFF 		bl	__aeabi_i2f
 2945 09c0 564A     		ldr	r2, .L211+28
 2946 09c2 FB6E     		ldr	r3, [r7, #108]
 2947 09c4 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2948 09c8 1946     		mov	r1, r3
 2949 09ca FFF7FEFF 		bl	__aeabi_fcmpgt
 2950 09ce 0346     		mov	r3, r0
 2951 09d0 002B     		cmp	r3, #0
 2952 09d2 06D0     		beq	.L202
 2953              	.L101:
1033:main.c        ****     				{
1034:main.c        ****     					stringMappedPositions[i] = 1.0f;
 2954              		.loc 1 1034 0 is_stmt 1
 2955 09d4 524A     		ldr	r2, .L211+32
 2956 09d6 FB6E     		ldr	r3, [r7, #108]
 2957 09d8 4FF07E51 		mov	r1, #1065353216
 2958 09dc 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2959 09e0 C3E0     		b	.L104
 2960              	.L202:
1035:main.c        ****     				}
1036:main.c        **** 
1037:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 2961              		.loc 1 1037 0
 2962 09e2 4C4A     		ldr	r2, .L211+20
 2963 09e4 FB6E     		ldr	r3, [r7, #108]
 2964 09e6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2965 09ea 9BB2     		uxth	r3, r3
 2966 09ec 1846     		mov	r0, r3
 2967 09ee FFF7FEFF 		bl	__aeabi_i2f
 2968 09f2 4A4A     		ldr	r2, .L211+28
 2969 09f4 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 72


 2970 09f6 0433     		adds	r3, r3, #4
 2971 09f8 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2972 09fc 1946     		mov	r1, r3
 2973 09fe FFF7FEFF 		bl	__aeabi_fcmpge
 2974 0a02 0346     		mov	r3, r0
 2975 0a04 002B     		cmp	r3, #0
 2976 0a06 32D0     		beq	.L105
 2977              		.loc 1 1037 0 is_stmt 0 discriminator 1
 2978 0a08 424A     		ldr	r2, .L211+20
 2979 0a0a FB6E     		ldr	r3, [r7, #108]
 2980 0a0c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2981 0a10 9BB2     		uxth	r3, r3
 2982 0a12 1846     		mov	r0, r3
 2983 0a14 FFF7FEFF 		bl	__aeabi_i2f
 2984 0a18 404A     		ldr	r2, .L211+28
 2985 0a1a FB6E     		ldr	r3, [r7, #108]
 2986 0a1c 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2987 0a20 1946     		mov	r1, r3
 2988 0a22 FFF7FEFF 		bl	__aeabi_fcmple
 2989 0a26 0346     		mov	r3, r0
 2990 0a28 002B     		cmp	r3, #0
 2991 0a2a 20D0     		beq	.L105
1038:main.c        ****     				{
1039:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 2992              		.loc 1 1039 0 is_stmt 1
 2993 0a2c 394A     		ldr	r2, .L211+20
 2994 0a2e FB6E     		ldr	r3, [r7, #108]
 2995 0a30 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2996 0a34 9BB2     		uxth	r3, r3
 2997 0a36 1846     		mov	r0, r3
 2998 0a38 FFF7FEFF 		bl	__aeabi_ui2f
 2999 0a3c 0446     		mov	r4, r0
 3000 0a3e 374A     		ldr	r2, .L211+28
 3001 0a40 FB6E     		ldr	r3, [r7, #108]
 3002 0a42 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3003 0a46 354A     		ldr	r2, .L211+28
 3004 0a48 FB6E     		ldr	r3, [r7, #108]
 3005 0a4a 0433     		adds	r3, r3, #4
 3006 0a4c 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3007 0a50 344B     		ldr	r3, .L211+36
 3008 0a52 1868     		ldr	r0, [r3]	@ float
 3009 0a54 334B     		ldr	r3, .L211+36
 3010 0a56 5B68     		ldr	r3, [r3, #4]	@ float
 3011 0a58 0093     		str	r3, [sp]	@ float
 3012 0a5a 0346     		mov	r3, r0
 3013 0a5c 2046     		mov	r0, r4
 3014 0a5e FFF7FEFF 		bl	map
 3015 0a62 0146     		mov	r1, r0
 3016 0a64 2E4A     		ldr	r2, .L211+32
 3017 0a66 FB6E     		ldr	r3, [r7, #108]
 3018 0a68 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3019 0a6c 7DE0     		b	.L104
 3020              	.L105:
1040:main.c        ****     				}
1041:main.c        **** 
1042:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 3021              		.loc 1 1042 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 73


 3022 0a6e 294A     		ldr	r2, .L211+20
 3023 0a70 FB6E     		ldr	r3, [r7, #108]
 3024 0a72 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3025 0a76 9BB2     		uxth	r3, r3
 3026 0a78 1846     		mov	r0, r3
 3027 0a7a FFF7FEFF 		bl	__aeabi_i2f
 3028 0a7e 274A     		ldr	r2, .L211+28
 3029 0a80 FB6E     		ldr	r3, [r7, #108]
 3030 0a82 0833     		adds	r3, r3, #8
 3031 0a84 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3032 0a88 1946     		mov	r1, r3
 3033 0a8a FFF7FEFF 		bl	__aeabi_fcmpge
 3034 0a8e 0346     		mov	r3, r0
 3035 0a90 002B     		cmp	r3, #0
 3036 0a92 49D0     		beq	.L108
 3037              		.loc 1 1042 0 is_stmt 0 discriminator 1
 3038 0a94 1F4A     		ldr	r2, .L211+20
 3039 0a96 FB6E     		ldr	r3, [r7, #108]
 3040 0a98 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3041 0a9c 9BB2     		uxth	r3, r3
 3042 0a9e 1846     		mov	r0, r3
 3043 0aa0 FFF7FEFF 		bl	__aeabi_i2f
 3044 0aa4 1D4A     		ldr	r2, .L211+28
 3045 0aa6 FB6E     		ldr	r3, [r7, #108]
 3046 0aa8 0433     		adds	r3, r3, #4
 3047 0aaa 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3048 0aae 1946     		mov	r1, r3
 3049 0ab0 FFF7FEFF 		bl	__aeabi_fcmplt
 3050 0ab4 0346     		mov	r3, r0
 3051 0ab6 002B     		cmp	r3, #0
 3052 0ab8 36D0     		beq	.L108
1043:main.c        ****     				{
1044:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 3053              		.loc 1 1044 0 is_stmt 1
 3054 0aba 164A     		ldr	r2, .L211+20
 3055 0abc FB6E     		ldr	r3, [r7, #108]
 3056 0abe 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3057 0ac2 9BB2     		uxth	r3, r3
 3058 0ac4 1846     		mov	r0, r3
 3059 0ac6 FFF7FEFF 		bl	__aeabi_ui2f
 3060 0aca 0446     		mov	r4, r0
 3061 0acc 134A     		ldr	r2, .L211+28
 3062 0ace FB6E     		ldr	r3, [r7, #108]
 3063 0ad0 0433     		adds	r3, r3, #4
 3064 0ad2 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3065 0ad6 114A     		ldr	r2, .L211+28
 3066 0ad8 FB6E     		ldr	r3, [r7, #108]
 3067 0ada 0833     		adds	r3, r3, #8
 3068 0adc 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3069 0ae0 104B     		ldr	r3, .L211+36
 3070 0ae2 5868     		ldr	r0, [r3, #4]	@ float
 3071 0ae4 0F4B     		ldr	r3, .L211+36
 3072 0ae6 9B68     		ldr	r3, [r3, #8]	@ float
 3073 0ae8 0093     		str	r3, [sp]	@ float
 3074 0aea 0346     		mov	r3, r0
 3075 0aec 2046     		mov	r0, r4
 3076 0aee FFF7FEFF 		bl	map
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 74


 3077 0af2 0146     		mov	r1, r0
 3078 0af4 0A4A     		ldr	r2, .L211+32
 3079 0af6 FB6E     		ldr	r3, [r7, #108]
 3080 0af8 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3081 0afc 35E0     		b	.L104
 3082              	.L212:
 3083 0afe 00BF     		.align	2
 3084              	.L211:
 3085 0b00 00000000 		.word	processed_volumePedal
 3086 0b04 00000000 		.word	prev_processed_volumePedal
 3087 0b08 00000000 		.word	main_counter
 3088 0b0c 00000000 		.word	currentBarBuffer
 3089 0b10 00000000 		.word	rxBufferBar
 3090 0b14 00000000 		.word	bar
 3091 0b18 00000000 		.word	prevBar
 3092 0b1c 00000000 		.word	fretMeasurements
 3093 0b20 00000000 		.word	stringMappedPositions
 3094 0b24 00000000 		.word	fretScaling
 3095              	.L108:
1045:main.c        ****     				}
1046:main.c        **** 
1047:main.c        ****     				else
1048:main.c        ****     				{
1049:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 3096              		.loc 1 1049 0
 3097 0b28 734A     		ldr	r2, .L213
 3098 0b2a FB6E     		ldr	r3, [r7, #108]
 3099 0b2c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3100 0b30 9BB2     		uxth	r3, r3
 3101 0b32 1846     		mov	r0, r3
 3102 0b34 FFF7FEFF 		bl	__aeabi_ui2f
 3103 0b38 0446     		mov	r4, r0
 3104 0b3a 704A     		ldr	r2, .L213+4
 3105 0b3c FB6E     		ldr	r3, [r7, #108]
 3106 0b3e 0833     		adds	r3, r3, #8
 3107 0b40 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3108 0b44 6D4A     		ldr	r2, .L213+4
 3109 0b46 FB6E     		ldr	r3, [r7, #108]
 3110 0b48 0C33     		adds	r3, r3, #12
 3111 0b4a 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3112 0b4e 6C4B     		ldr	r3, .L213+8
 3113 0b50 9868     		ldr	r0, [r3, #8]	@ float
 3114 0b52 6B4B     		ldr	r3, .L213+8
 3115 0b54 DB68     		ldr	r3, [r3, #12]	@ float
 3116 0b56 0093     		str	r3, [sp]	@ float
 3117 0b58 0346     		mov	r3, r0
 3118 0b5a 2046     		mov	r0, r4
 3119 0b5c FFF7FEFF 		bl	map
 3120 0b60 0146     		mov	r1, r0
 3121 0b62 684A     		ldr	r2, .L213+12
 3122 0b64 FB6E     		ldr	r3, [r7, #108]
 3123 0b66 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3124              	.L104:
1050:main.c        ****     				}
1051:main.c        **** 
1052:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 3125              		.loc 1 1052 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 75


 3126 0b6a 664A     		ldr	r2, .L213+12
 3127 0b6c FB6E     		ldr	r3, [r7, #108]
 3128 0b6e 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3129 0b72 1946     		mov	r1, r3
 3130 0b74 4FF07E50 		mov	r0, #1065353216
 3131 0b78 FFF7FEFF 		bl	__aeabi_fdiv
 3132 0b7c 0346     		mov	r3, r0
 3133 0b7e 1946     		mov	r1, r3
 3134 0b80 614A     		ldr	r2, .L213+16
 3135 0b82 FB6E     		ldr	r3, [r7, #108]
 3136 0b84 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3137              	.L100:
1053:main.c        ****                 }
1054:main.c        ****                 prevBar[i] = bar[i];
 3138              		.loc 1 1054 0 discriminator 2
 3139 0b88 5B4A     		ldr	r2, .L213
 3140 0b8a FB6E     		ldr	r3, [r7, #108]
 3141 0b8c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3142 0b90 99B2     		uxth	r1, r3
 3143 0b92 5E4A     		ldr	r2, .L213+20
 3144 0b94 FB6E     		ldr	r3, [r7, #108]
 3145 0b96 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1026:main.c        ****             {
 3146              		.loc 1 1026 0 discriminator 2
 3147 0b9a FB6E     		ldr	r3, [r7, #108]
 3148 0b9c 0133     		adds	r3, r3, #1
 3149 0b9e FB66     		str	r3, [r7, #108]
 3150              	.L99:
1026:main.c        ****             {
 3151              		.loc 1 1026 0 is_stmt 0 discriminator 1
 3152 0ba0 FB6E     		ldr	r3, [r7, #108]
 3153 0ba2 012B     		cmp	r3, #1
 3154 0ba4 7FF7C1AE 		ble	.L111
 3155              	.L98:
 3156              	.LBE18:
 3157              	.LBB19:
1055:main.c        ****             }
1056:main.c        ****         }
1057:main.c        **** 
1058:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3158              		.loc 1 1058 0 is_stmt 1
 3159 0ba8 0023     		movs	r3, #0
 3160 0baa BB66     		str	r3, [r7, #104]
 3161 0bac 1AE0     		b	.L112
 3162              	.L114:
1059:main.c        ****         {
1060:main.c        ****             if (strings[i] != prevStrings[i])
 3163              		.loc 1 1060 0
 3164 0bae 584A     		ldr	r2, .L213+24
 3165 0bb0 BB6E     		ldr	r3, [r7, #104]
 3166 0bb2 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3167 0bb6 9AB2     		uxth	r2, r3
 3168 0bb8 5649     		ldr	r1, .L213+28
 3169 0bba BB6E     		ldr	r3, [r7, #104]
 3170 0bbc 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3171 0bc0 9BB2     		uxth	r3, r3
 3172 0bc2 9A42     		cmp	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 76


 3173 0bc4 02D0     		beq	.L113
1061:main.c        ****             {
1062:main.c        ****                 noteEvent(i);
 3174              		.loc 1 1062 0
 3175 0bc6 B86E     		ldr	r0, [r7, #104]
 3176 0bc8 FFF7FEFF 		bl	noteEvent
 3177              	.L113:
1063:main.c        ****             }
1064:main.c        ****             prevStrings[i] = strings[i];
 3178              		.loc 1 1064 0 discriminator 2
 3179 0bcc 504A     		ldr	r2, .L213+24
 3180 0bce BB6E     		ldr	r3, [r7, #104]
 3181 0bd0 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3182 0bd4 99B2     		uxth	r1, r3
 3183 0bd6 4F4A     		ldr	r2, .L213+28
 3184 0bd8 BB6E     		ldr	r3, [r7, #104]
 3185 0bda 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1058:main.c        ****         {
 3186              		.loc 1 1058 0 discriminator 2
 3187 0bde BB6E     		ldr	r3, [r7, #104]
 3188 0be0 0133     		adds	r3, r3, #1
 3189 0be2 BB66     		str	r3, [r7, #104]
 3190              	.L112:
1058:main.c        ****         {
 3191              		.loc 1 1058 0 is_stmt 0 discriminator 1
 3192 0be4 4C4B     		ldr	r3, .L213+32
 3193 0be6 1B68     		ldr	r3, [r3]
 3194 0be8 BA6E     		ldr	r2, [r7, #104]
 3195 0bea 9A42     		cmp	r2, r3
 3196 0bec DFDB     		blt	.L114
 3197              	.LBE19:
1065:main.c        ****         }
1066:main.c        ****         
1067:main.c        **** 
1068:main.c        **** 
1069:main.c        ****         
1070:main.c        ****         
1071:main.c        ****         if (!oct1_Read())
 3198              		.loc 1 1071 0 is_stmt 1
 3199 0bee FFF7FEFF 		bl	oct1_Read
 3200 0bf2 0346     		mov	r3, r0
 3201 0bf4 002B     		cmp	r3, #0
 3202 0bf6 24D1     		bne	.L115
1072:main.c        ****         {
1073:main.c        ****             if (octave > 4)
 3203              		.loc 1 1073 0
 3204 0bf8 484B     		ldr	r3, .L213+36
 3205 0bfa 1B68     		ldr	r3, [r3]
 3206 0bfc 042B     		cmp	r3, #4
 3207 0bfe 03DD     		ble	.L116
1074:main.c        ****             {
1075:main.c        ****                 octave = 4;
 3208              		.loc 1 1075 0
 3209 0c00 464B     		ldr	r3, .L213+36
 3210 0c02 0422     		movs	r2, #4
 3211 0c04 1A60     		str	r2, [r3]
 3212 0c06 0CE0     		b	.L117
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 77


 3213              	.L116:
1076:main.c        **** 
1077:main.c        ****             }
1078:main.c        ****             else if ((oct1Up) && (octave > 0))
 3214              		.loc 1 1078 0
 3215 0c08 454B     		ldr	r3, .L213+40
 3216 0c0a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3217 0c0c 002B     		cmp	r3, #0
 3218 0c0e 08D0     		beq	.L117
 3219              		.loc 1 1078 0 is_stmt 0 discriminator 1
 3220 0c10 424B     		ldr	r3, .L213+36
 3221 0c12 1B68     		ldr	r3, [r3]
 3222 0c14 002B     		cmp	r3, #0
 3223 0c16 04DD     		ble	.L117
1079:main.c        ****             {
1080:main.c        ****                 octave--;
 3224              		.loc 1 1080 0 is_stmt 1
 3225 0c18 404B     		ldr	r3, .L213+36
 3226 0c1a 1B68     		ldr	r3, [r3]
 3227 0c1c 013B     		subs	r3, r3, #1
 3228 0c1e 3F4A     		ldr	r2, .L213+36
 3229 0c20 1360     		str	r3, [r2]
 3230              	.L117:
1081:main.c        ****             }
1082:main.c        ****             LED_amber1_Write(1);
 3231              		.loc 1 1082 0
 3232 0c22 0120     		movs	r0, #1
 3233 0c24 FFF7FEFF 		bl	LED_amber1_Write
1083:main.c        ****             LED_amber2_Write(0);
 3234              		.loc 1 1083 0
 3235 0c28 0020     		movs	r0, #0
 3236 0c2a FFF7FEFF 		bl	LED_amber2_Write
1084:main.c        ****             LED_amber3_Write(0);
 3237              		.loc 1 1084 0
 3238 0c2e 0020     		movs	r0, #0
 3239 0c30 FFF7FEFF 		bl	LED_amber3_Write
1085:main.c        ****             LED_amber4_Write(0);
 3240              		.loc 1 1085 0
 3241 0c34 0020     		movs	r0, #0
 3242 0c36 FFF7FEFF 		bl	LED_amber4_Write
1086:main.c        ****             oct1Up = 0;
 3243              		.loc 1 1086 0
 3244 0c3a 394B     		ldr	r3, .L213+40
 3245 0c3c 0022     		movs	r2, #0
 3246 0c3e 1A70     		strb	r2, [r3]
 3247 0c40 07E0     		b	.L118
 3248              	.L115:
1087:main.c        ****         }
1088:main.c        ****         
1089:main.c        ****         else if (oct1_Read())
 3249              		.loc 1 1089 0
 3250 0c42 FFF7FEFF 		bl	oct1_Read
 3251 0c46 0346     		mov	r3, r0
 3252 0c48 002B     		cmp	r3, #0
 3253 0c4a 02D0     		beq	.L118
1090:main.c        ****         {
1091:main.c        ****             oct1Up = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 78


 3254              		.loc 1 1091 0
 3255 0c4c 344B     		ldr	r3, .L213+40
 3256 0c4e 0122     		movs	r2, #1
 3257 0c50 1A70     		strb	r2, [r3]
 3258              	.L118:
1092:main.c        ****         }
1093:main.c        ****         
1094:main.c        ****         if (!oct2_Read())
 3259              		.loc 1 1094 0
 3260 0c52 FFF7FEFF 		bl	oct2_Read
 3261 0c56 0346     		mov	r3, r0
 3262 0c58 002B     		cmp	r3, #0
 3263 0c5a 0ED1     		bne	.L119
1095:main.c        ****         {
1096:main.c        ****             octave = 5;
 3264              		.loc 1 1096 0
 3265 0c5c 2F4B     		ldr	r3, .L213+36
 3266 0c5e 0522     		movs	r2, #5
 3267 0c60 1A60     		str	r2, [r3]
1097:main.c        ****             LED_amber1_Write(0);
 3268              		.loc 1 1097 0
 3269 0c62 0020     		movs	r0, #0
 3270 0c64 FFF7FEFF 		bl	LED_amber1_Write
1098:main.c        ****             LED_amber2_Write(1);
 3271              		.loc 1 1098 0
 3272 0c68 0120     		movs	r0, #1
 3273 0c6a FFF7FEFF 		bl	LED_amber2_Write
1099:main.c        ****             LED_amber3_Write(0);
 3274              		.loc 1 1099 0
 3275 0c6e 0020     		movs	r0, #0
 3276 0c70 FFF7FEFF 		bl	LED_amber3_Write
1100:main.c        ****             LED_amber4_Write(0);
 3277              		.loc 1 1100 0
 3278 0c74 0020     		movs	r0, #0
 3279 0c76 FFF7FEFF 		bl	LED_amber4_Write
 3280              	.L119:
1101:main.c        ****         }
1102:main.c        ****         if (!oct3_Read())
 3281              		.loc 1 1102 0
 3282 0c7a FFF7FEFF 		bl	oct3_Read
 3283 0c7e 0346     		mov	r3, r0
 3284 0c80 002B     		cmp	r3, #0
 3285 0c82 0ED1     		bne	.L120
1103:main.c        ****         {
1104:main.c        ****             octave = 6;
 3286              		.loc 1 1104 0
 3287 0c84 254B     		ldr	r3, .L213+36
 3288 0c86 0622     		movs	r2, #6
 3289 0c88 1A60     		str	r2, [r3]
1105:main.c        ****             LED_amber1_Write(0);
 3290              		.loc 1 1105 0
 3291 0c8a 0020     		movs	r0, #0
 3292 0c8c FFF7FEFF 		bl	LED_amber1_Write
1106:main.c        ****             LED_amber2_Write(0);
 3293              		.loc 1 1106 0
 3294 0c90 0020     		movs	r0, #0
 3295 0c92 FFF7FEFF 		bl	LED_amber2_Write
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 79


1107:main.c        ****             LED_amber3_Write(1);
 3296              		.loc 1 1107 0
 3297 0c96 0120     		movs	r0, #1
 3298 0c98 FFF7FEFF 		bl	LED_amber3_Write
1108:main.c        ****             LED_amber4_Write(0);            
 3299              		.loc 1 1108 0
 3300 0c9c 0020     		movs	r0, #0
 3301 0c9e FFF7FEFF 		bl	LED_amber4_Write
 3302              	.L120:
1109:main.c        ****         }
1110:main.c        ****         if (!oct4_Read())
 3303              		.loc 1 1110 0
 3304 0ca2 FFF7FEFF 		bl	oct4_Read
 3305 0ca6 0346     		mov	r3, r0
 3306 0ca8 002B     		cmp	r3, #0
 3307 0caa 3DD1     		bne	.L121
1111:main.c        ****         {
1112:main.c        ****             if (octave < 7)
 3308              		.loc 1 1112 0
 3309 0cac 1B4B     		ldr	r3, .L213+36
 3310 0cae 1B68     		ldr	r3, [r3]
 3311 0cb0 062B     		cmp	r3, #6
 3312 0cb2 03DC     		bgt	.L122
1113:main.c        ****             {
1114:main.c        ****                 octave = 7;
 3313              		.loc 1 1114 0
 3314 0cb4 194B     		ldr	r3, .L213+36
 3315 0cb6 0722     		movs	r2, #7
 3316 0cb8 1A60     		str	r2, [r3]
 3317 0cba 0CE0     		b	.L123
 3318              	.L122:
1115:main.c        **** 
1116:main.c        ****             }
1117:main.c        ****             else if ((oct4Up) && (octave < 11))
 3319              		.loc 1 1117 0
 3320 0cbc 194B     		ldr	r3, .L213+44
 3321 0cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3322 0cc0 002B     		cmp	r3, #0
 3323 0cc2 08D0     		beq	.L123
 3324              		.loc 1 1117 0 is_stmt 0 discriminator 1
 3325 0cc4 154B     		ldr	r3, .L213+36
 3326 0cc6 1B68     		ldr	r3, [r3]
 3327 0cc8 0A2B     		cmp	r3, #10
 3328 0cca 04DC     		bgt	.L123
1118:main.c        ****             {
1119:main.c        ****                 octave++;
 3329              		.loc 1 1119 0 is_stmt 1
 3330 0ccc 134B     		ldr	r3, .L213+36
 3331 0cce 1B68     		ldr	r3, [r3]
 3332 0cd0 0133     		adds	r3, r3, #1
 3333 0cd2 124A     		ldr	r2, .L213+36
 3334 0cd4 1360     		str	r3, [r2]
 3335              	.L123:
1120:main.c        **** 
1121:main.c        ****             }
1122:main.c        ****             LED_amber1_Write(0);
 3336              		.loc 1 1122 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 80


 3337 0cd6 0020     		movs	r0, #0
 3338 0cd8 FFF7FEFF 		bl	LED_amber1_Write
1123:main.c        ****             LED_amber2_Write(0);
 3339              		.loc 1 1123 0
 3340 0cdc 0020     		movs	r0, #0
 3341 0cde FFF7FEFF 		bl	LED_amber2_Write
1124:main.c        ****             LED_amber3_Write(0);
 3342              		.loc 1 1124 0
 3343 0ce2 0020     		movs	r0, #0
 3344 0ce4 FFF7FEFF 		bl	LED_amber3_Write
1125:main.c        ****             LED_amber4_Write(1);
 3345              		.loc 1 1125 0
 3346 0ce8 0120     		movs	r0, #1
 3347 0cea FFF7FEFF 		bl	LED_amber4_Write
1126:main.c        ****             oct4Up = 0;
 3348              		.loc 1 1126 0
 3349 0cee 0D4B     		ldr	r3, .L213+44
 3350 0cf0 0022     		movs	r2, #0
 3351 0cf2 1A70     		strb	r2, [r3]
 3352 0cf4 20E0     		b	.L124
 3353              	.L214:
 3354 0cf6 00BF     		.align	2
 3355              	.L213:
 3356 0cf8 00000000 		.word	bar
 3357 0cfc 00000000 		.word	fretMeasurements
 3358 0d00 00000000 		.word	fretScaling
 3359 0d04 00000000 		.word	stringMappedPositions
 3360 0d08 00000000 		.word	invStringMappedPositions
 3361 0d0c 00000000 		.word	prevBar
 3362 0d10 00000000 		.word	strings
 3363 0d14 00000000 		.word	prevStrings
 3364 0d18 00000000 		.word	numStrings
 3365 0d1c 00000000 		.word	octave
 3366 0d20 00000000 		.word	oct1Up
 3367 0d24 00000000 		.word	oct4Up
 3368              	.L121:
1127:main.c        ****         }
1128:main.c        ****         
1129:main.c        ****         else if (oct4_Read())
 3369              		.loc 1 1129 0
 3370 0d28 FFF7FEFF 		bl	oct4_Read
 3371 0d2c 0346     		mov	r3, r0
 3372 0d2e 002B     		cmp	r3, #0
 3373 0d30 02D0     		beq	.L124
1130:main.c        ****         {
1131:main.c        ****             oct4Up = 1;
 3374              		.loc 1 1131 0
 3375 0d32 B54B     		ldr	r3, .L215
 3376 0d34 0122     		movs	r2, #1
 3377 0d36 1A70     		strb	r2, [r3]
 3378              	.L124:
1132:main.c        ****         }
1133:main.c        ****         
1134:main.c        ****         if (!neck1_button_Read())
 3379              		.loc 1 1134 0
 3380 0d38 FFF7FEFF 		bl	neck1_button_Read
 3381 0d3c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 81


 3382 0d3e 002B     		cmp	r3, #0
 3383 0d40 32D1     		bne	.L125
1135:main.c        ****         {
1136:main.c        ****             currentNeck = 0;
 3384              		.loc 1 1136 0
 3385 0d42 B24B     		ldr	r3, .L215+4
 3386 0d44 0022     		movs	r2, #0
 3387 0d46 1A60     		str	r2, [r3]
1137:main.c        ****             currentCopedent = necks[currentNeck];
 3388              		.loc 1 1137 0
 3389 0d48 B04B     		ldr	r3, .L215+4
 3390 0d4a 1B68     		ldr	r3, [r3]
 3391 0d4c B04A     		ldr	r2, .L215+8
 3392 0d4e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3393 0d50 B04B     		ldr	r3, .L215+12
 3394 0d52 1A70     		strb	r2, [r3]
1138:main.c        ****             LED_red1_Write(0);
 3395              		.loc 1 1138 0
 3396 0d54 0020     		movs	r0, #0
 3397 0d56 FFF7FEFF 		bl	LED_red1_Write
1139:main.c        ****             LED_green2_Write(1);
 3398              		.loc 1 1139 0
 3399 0d5a 0120     		movs	r0, #1
 3400 0d5c FFF7FEFF 		bl	LED_green2_Write
1140:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3401              		.loc 1 1140 0
 3402 0d60 AC4B     		ldr	r3, .L215+12
 3403 0d62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3404 0d64 1846     		mov	r0, r3
 3405 0d66 0323     		movs	r3, #3
 3406 0d68 0022     		movs	r2, #0
 3407 0d6a 0221     		movs	r1, #2
 3408 0d6c FFF7FEFF 		bl	OLEDwriteInt
1141:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3409              		.loc 1 1141 0
 3410 0d70 FFF7FEFF 		bl	OLEDgetCursor
 3411 0d74 0246     		mov	r2, r0
 3412 0d76 0323     		movs	r3, #3
 3413 0d78 0121     		movs	r1, #1
 3414 0d7a A748     		ldr	r0, .L215+16
 3415 0d7c FFF7FEFF 		bl	OLEDwriteString
1142:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 3416              		.loc 1 1142 0
 3417 0d80 A44B     		ldr	r3, .L215+12
 3418 0d82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3419 0d84 1A46     		mov	r2, r3
 3420 0d86 1346     		mov	r3, r2
 3421 0d88 DB00     		lsls	r3, r3, #3
 3422 0d8a 9B1A     		subs	r3, r3, r2
 3423 0d8c 5B00     		lsls	r3, r3, #1
 3424 0d8e A34A     		ldr	r2, .L215+20
 3425 0d90 9C18     		adds	r4, r3, r2
 3426 0d92 FFF7FEFF 		bl	OLEDgetCursor
 3427 0d96 0246     		mov	r2, r0
 3428 0d98 0323     		movs	r3, #3
 3429 0d9a 0E21     		movs	r1, #14
 3430 0d9c 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 82


 3431 0d9e FFF7FEFF 		bl	OLEDwriteString
1143:main.c        ****             mainOLEDWaitingToSend = 1;
 3432              		.loc 1 1143 0
 3433 0da2 9F4B     		ldr	r3, .L215+24
 3434 0da4 0122     		movs	r2, #1
 3435 0da6 1A60     		str	r2, [r3]
 3436              	.L125:
1144:main.c        ****         }
1145:main.c        ****         if (!neck2_button_Read())
 3437              		.loc 1 1145 0
 3438 0da8 FFF7FEFF 		bl	neck2_button_Read
 3439 0dac 0346     		mov	r3, r0
 3440 0dae 002B     		cmp	r3, #0
 3441 0db0 3BD1     		bne	.L126
1146:main.c        ****         {
1147:main.c        ****             currentNeck = 1;
 3442              		.loc 1 1147 0
 3443 0db2 964B     		ldr	r3, .L215+4
 3444 0db4 0122     		movs	r2, #1
 3445 0db6 1A60     		str	r2, [r3]
1148:main.c        ****             currentCopedent = necks[currentNeck];
 3446              		.loc 1 1148 0
 3447 0db8 944B     		ldr	r3, .L215+4
 3448 0dba 1B68     		ldr	r3, [r3]
 3449 0dbc 944A     		ldr	r2, .L215+8
 3450 0dbe D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3451 0dc0 944B     		ldr	r3, .L215+12
 3452 0dc2 1A70     		strb	r2, [r3]
1149:main.c        ****             
1150:main.c        ****             LED_red1_Write(1);
 3453              		.loc 1 1150 0
 3454 0dc4 0120     		movs	r0, #1
 3455 0dc6 FFF7FEFF 		bl	LED_red1_Write
1151:main.c        ****             LED_green2_Write(0);
 3456              		.loc 1 1151 0
 3457 0dca 0020     		movs	r0, #0
 3458 0dcc FFF7FEFF 		bl	LED_green2_Write
1152:main.c        ****             EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3459              		.loc 1 1152 0
 3460 0dd0 904B     		ldr	r3, .L215+12
 3461 0dd2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3462 0dd4 8D4B     		ldr	r3, .L215+4
 3463 0dd6 1B68     		ldr	r3, [r3]
 3464 0dd8 9BB2     		uxth	r3, r3
 3465 0dda 1946     		mov	r1, r3
 3466 0ddc 1046     		mov	r0, r2
 3467 0dde FFF7FEFF 		bl	EEPROM_WriteByte
1153:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3468              		.loc 1 1153 0
 3469 0de2 8C4B     		ldr	r3, .L215+12
 3470 0de4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3471 0de6 1846     		mov	r0, r3
 3472 0de8 0323     		movs	r3, #3
 3473 0dea 0022     		movs	r2, #0
 3474 0dec 0221     		movs	r1, #2
 3475 0dee FFF7FEFF 		bl	OLEDwriteInt
1154:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 83


 3476              		.loc 1 1154 0
 3477 0df2 FFF7FEFF 		bl	OLEDgetCursor
 3478 0df6 0246     		mov	r2, r0
 3479 0df8 0323     		movs	r3, #3
 3480 0dfa 0121     		movs	r1, #1
 3481 0dfc 8648     		ldr	r0, .L215+16
 3482 0dfe FFF7FEFF 		bl	OLEDwriteString
1155:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 3483              		.loc 1 1155 0
 3484 0e02 844B     		ldr	r3, .L215+12
 3485 0e04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3486 0e06 1A46     		mov	r2, r3
 3487 0e08 1346     		mov	r3, r2
 3488 0e0a DB00     		lsls	r3, r3, #3
 3489 0e0c 9B1A     		subs	r3, r3, r2
 3490 0e0e 5B00     		lsls	r3, r3, #1
 3491 0e10 824A     		ldr	r2, .L215+20
 3492 0e12 9C18     		adds	r4, r3, r2
 3493 0e14 FFF7FEFF 		bl	OLEDgetCursor
 3494 0e18 0246     		mov	r2, r0
 3495 0e1a 0323     		movs	r3, #3
 3496 0e1c 0E21     		movs	r1, #14
 3497 0e1e 2046     		mov	r0, r4
 3498 0e20 FFF7FEFF 		bl	OLEDwriteString
1156:main.c        ****             mainOLEDWaitingToSend = 1;
 3499              		.loc 1 1156 0
 3500 0e24 7E4B     		ldr	r3, .L215+24
 3501 0e26 0122     		movs	r2, #1
 3502 0e28 1A60     		str	r2, [r3]
 3503              	.L126:
1157:main.c        ****         }
1158:main.c        ****         
1159:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3504              		.loc 1 1159 0
 3505 0e2a FFF7FEFF 		bl	enter_button_Read
 3506 0e2e 0346     		mov	r3, r0
 3507 0e30 002B     		cmp	r3, #0
 3508 0e32 16D1     		bne	.L127
 3509              		.loc 1 1159 0 is_stmt 0 discriminator 1
 3510 0e34 7B4B     		ldr	r3, .L215+28
 3511 0e36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3512 0e38 002B     		cmp	r3, #0
 3513 0e3a 12D0     		beq	.L127
1160:main.c        ****         {
1161:main.c        ****             dualSlider = !dualSlider;
 3514              		.loc 1 1161 0 is_stmt 1
 3515 0e3c 7A4B     		ldr	r3, .L215+32
 3516 0e3e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3517 0e40 002B     		cmp	r3, #0
 3518 0e42 0CBF     		ite	eq
 3519 0e44 0123     		moveq	r3, #1
 3520 0e46 0023     		movne	r3, #0
 3521 0e48 DBB2     		uxtb	r3, r3
 3522 0e4a 1A46     		mov	r2, r3
 3523 0e4c 764B     		ldr	r3, .L215+32
 3524 0e4e 1A70     		strb	r2, [r3]
1162:main.c        ****             LED_green1_Write(dualSlider);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 84


 3525              		.loc 1 1162 0
 3526 0e50 754B     		ldr	r3, .L215+32
 3527 0e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3528 0e54 1846     		mov	r0, r3
 3529 0e56 FFF7FEFF 		bl	LED_green1_Write
1163:main.c        ****             enterUp = 0;
 3530              		.loc 1 1163 0
 3531 0e5a 724B     		ldr	r3, .L215+28
 3532 0e5c 0022     		movs	r2, #0
 3533 0e5e 1A70     		strb	r2, [r3]
 3534 0e60 07E0     		b	.L128
 3535              	.L127:
1164:main.c        ****         }
1165:main.c        ****         else if (enter_button_Read())
 3536              		.loc 1 1165 0
 3537 0e62 FFF7FEFF 		bl	enter_button_Read
 3538 0e66 0346     		mov	r3, r0
 3539 0e68 002B     		cmp	r3, #0
 3540 0e6a 02D0     		beq	.L128
1166:main.c        ****         {
1167:main.c        ****             enterUp = 1;
 3541              		.loc 1 1167 0
 3542 0e6c 6D4B     		ldr	r3, .L215+28
 3543 0e6e 0122     		movs	r2, #1
 3544 0e70 1A70     		strb	r2, [r3]
 3545              	.L128:
1168:main.c        ****         }
1169:main.c        ****         
1170:main.c        ****         
1171:main.c        ****         if (!editMode)
 3546              		.loc 1 1171 0
 3547 0e72 6E4B     		ldr	r3, .L215+36
 3548 0e74 1B68     		ldr	r3, [r3]
 3549 0e76 002B     		cmp	r3, #0
 3550 0e78 40F01081 		bne	.L129
1172:main.c        ****         {
1173:main.c        ****         
1174:main.c        ****             if ((!button1_Read()) && (button1Up))
 3551              		.loc 1 1174 0
 3552 0e7c FFF7FEFF 		bl	button1_Read
 3553 0e80 0346     		mov	r3, r0
 3554 0e82 002B     		cmp	r3, #0
 3555 0e84 47D1     		bne	.L130
 3556              		.loc 1 1174 0 is_stmt 0 discriminator 1
 3557 0e86 6A4B     		ldr	r3, .L215+40
 3558 0e88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3559 0e8a 002B     		cmp	r3, #0
 3560 0e8c 43D0     		beq	.L130
1175:main.c        ****             {
1176:main.c        ****                 currentCopedent -= 1;
 3561              		.loc 1 1176 0 is_stmt 1
 3562 0e8e 614B     		ldr	r3, .L215+12
 3563 0e90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3564 0e92 013B     		subs	r3, r3, #1
 3565 0e94 DAB2     		uxtb	r2, r3
 3566 0e96 5F4B     		ldr	r3, .L215+12
 3567 0e98 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 85


1177:main.c        ****                 currentCopedent &= 31;
 3568              		.loc 1 1177 0
 3569 0e9a 5E4B     		ldr	r3, .L215+12
 3570 0e9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3571 0e9e 03F01F03 		and	r3, r3, #31
 3572 0ea2 DAB2     		uxtb	r2, r3
 3573 0ea4 5B4B     		ldr	r3, .L215+12
 3574 0ea6 1A70     		strb	r2, [r3]
1178:main.c        ****                 necks[currentNeck] = currentCopedent;
 3575              		.loc 1 1178 0
 3576 0ea8 584B     		ldr	r3, .L215+4
 3577 0eaa 1B68     		ldr	r3, [r3]
 3578 0eac 594A     		ldr	r2, .L215+12
 3579 0eae 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3580 0eb0 574A     		ldr	r2, .L215+8
 3581 0eb2 D154     		strb	r1, [r2, r3]
1179:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3582              		.loc 1 1179 0
 3583 0eb4 574B     		ldr	r3, .L215+12
 3584 0eb6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3585 0eb8 544B     		ldr	r3, .L215+4
 3586 0eba 1B68     		ldr	r3, [r3]
 3587 0ebc 9BB2     		uxth	r3, r3
 3588 0ebe 1946     		mov	r1, r3
 3589 0ec0 1046     		mov	r0, r2
 3590 0ec2 FFF7FEFF 		bl	EEPROM_WriteByte
1180:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3591              		.loc 1 1180 0
 3592 0ec6 534B     		ldr	r3, .L215+12
 3593 0ec8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3594 0eca 1846     		mov	r0, r3
 3595 0ecc 0323     		movs	r3, #3
 3596 0ece 0022     		movs	r2, #0
 3597 0ed0 0221     		movs	r1, #2
 3598 0ed2 FFF7FEFF 		bl	OLEDwriteInt
1181:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3599              		.loc 1 1181 0
 3600 0ed6 FFF7FEFF 		bl	OLEDgetCursor
 3601 0eda 0246     		mov	r2, r0
 3602 0edc 0323     		movs	r3, #3
 3603 0ede 0121     		movs	r1, #1
 3604 0ee0 4D48     		ldr	r0, .L215+16
 3605 0ee2 FFF7FEFF 		bl	OLEDwriteString
1182:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3606              		.loc 1 1182 0
 3607 0ee6 4B4B     		ldr	r3, .L215+12
 3608 0ee8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3609 0eea 1A46     		mov	r2, r3
 3610 0eec 1346     		mov	r3, r2
 3611 0eee DB00     		lsls	r3, r3, #3
 3612 0ef0 9B1A     		subs	r3, r3, r2
 3613 0ef2 5B00     		lsls	r3, r3, #1
 3614 0ef4 494A     		ldr	r2, .L215+20
 3615 0ef6 9C18     		adds	r4, r3, r2
 3616 0ef8 FFF7FEFF 		bl	OLEDgetCursor
 3617 0efc 0246     		mov	r2, r0
 3618 0efe 0323     		movs	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 86


 3619 0f00 0E21     		movs	r1, #14
 3620 0f02 2046     		mov	r0, r4
 3621 0f04 FFF7FEFF 		bl	OLEDwriteString
1183:main.c        ****                 mainOLEDWaitingToSend = 1;
 3622              		.loc 1 1183 0
 3623 0f08 454B     		ldr	r3, .L215+24
 3624 0f0a 0122     		movs	r2, #1
 3625 0f0c 1A60     		str	r2, [r3]
1184:main.c        ****                 button1Up = 0;
 3626              		.loc 1 1184 0
 3627 0f0e 484B     		ldr	r3, .L215+40
 3628 0f10 0022     		movs	r2, #0
 3629 0f12 1A70     		strb	r2, [r3]
 3630 0f14 07E0     		b	.L131
 3631              	.L130:
1185:main.c        ****             }
1186:main.c        ****             else if (button1_Read())
 3632              		.loc 1 1186 0
 3633 0f16 FFF7FEFF 		bl	button1_Read
 3634 0f1a 0346     		mov	r3, r0
 3635 0f1c 002B     		cmp	r3, #0
 3636 0f1e 02D0     		beq	.L131
1187:main.c        ****             {
1188:main.c        ****                 button1Up = 1;
 3637              		.loc 1 1188 0
 3638 0f20 434B     		ldr	r3, .L215+40
 3639 0f22 0122     		movs	r2, #1
 3640 0f24 1A70     		strb	r2, [r3]
 3641              	.L131:
1189:main.c        ****             }
1190:main.c        ****             
1191:main.c        ****             if ((!button2_Read()) && (button2Up))
 3642              		.loc 1 1191 0
 3643 0f26 FFF7FEFF 		bl	button2_Read
 3644 0f2a 0346     		mov	r3, r0
 3645 0f2c 002B     		cmp	r3, #0
 3646 0f2e 47D1     		bne	.L132
 3647              		.loc 1 1191 0 is_stmt 0 discriminator 1
 3648 0f30 404B     		ldr	r3, .L215+44
 3649 0f32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3650 0f34 002B     		cmp	r3, #0
 3651 0f36 43D0     		beq	.L132
1192:main.c        ****             {
1193:main.c        ****                 currentCopedent += 1;
 3652              		.loc 1 1193 0 is_stmt 1
 3653 0f38 364B     		ldr	r3, .L215+12
 3654 0f3a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3655 0f3c 0133     		adds	r3, r3, #1
 3656 0f3e DAB2     		uxtb	r2, r3
 3657 0f40 344B     		ldr	r3, .L215+12
 3658 0f42 1A70     		strb	r2, [r3]
1194:main.c        ****                 currentCopedent &= 31;
 3659              		.loc 1 1194 0
 3660 0f44 334B     		ldr	r3, .L215+12
 3661 0f46 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3662 0f48 03F01F03 		and	r3, r3, #31
 3663 0f4c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 87


 3664 0f4e 314B     		ldr	r3, .L215+12
 3665 0f50 1A70     		strb	r2, [r3]
1195:main.c        ****                 necks[currentNeck] = currentCopedent;
 3666              		.loc 1 1195 0
 3667 0f52 2E4B     		ldr	r3, .L215+4
 3668 0f54 1B68     		ldr	r3, [r3]
 3669 0f56 2F4A     		ldr	r2, .L215+12
 3670 0f58 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3671 0f5a 2D4A     		ldr	r2, .L215+8
 3672 0f5c D154     		strb	r1, [r2, r3]
1196:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3673              		.loc 1 1196 0
 3674 0f5e 2D4B     		ldr	r3, .L215+12
 3675 0f60 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3676 0f62 2A4B     		ldr	r3, .L215+4
 3677 0f64 1B68     		ldr	r3, [r3]
 3678 0f66 9BB2     		uxth	r3, r3
 3679 0f68 1946     		mov	r1, r3
 3680 0f6a 1046     		mov	r0, r2
 3681 0f6c FFF7FEFF 		bl	EEPROM_WriteByte
1197:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3682              		.loc 1 1197 0
 3683 0f70 284B     		ldr	r3, .L215+12
 3684 0f72 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3685 0f74 1846     		mov	r0, r3
 3686 0f76 0323     		movs	r3, #3
 3687 0f78 0022     		movs	r2, #0
 3688 0f7a 0221     		movs	r1, #2
 3689 0f7c FFF7FEFF 		bl	OLEDwriteInt
1198:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3690              		.loc 1 1198 0
 3691 0f80 FFF7FEFF 		bl	OLEDgetCursor
 3692 0f84 0246     		mov	r2, r0
 3693 0f86 0323     		movs	r3, #3
 3694 0f88 0121     		movs	r1, #1
 3695 0f8a 2348     		ldr	r0, .L215+16
 3696 0f8c FFF7FEFF 		bl	OLEDwriteString
1199:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3697              		.loc 1 1199 0
 3698 0f90 204B     		ldr	r3, .L215+12
 3699 0f92 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3700 0f94 1A46     		mov	r2, r3
 3701 0f96 1346     		mov	r3, r2
 3702 0f98 DB00     		lsls	r3, r3, #3
 3703 0f9a 9B1A     		subs	r3, r3, r2
 3704 0f9c 5B00     		lsls	r3, r3, #1
 3705 0f9e 1F4A     		ldr	r2, .L215+20
 3706 0fa0 9C18     		adds	r4, r3, r2
 3707 0fa2 FFF7FEFF 		bl	OLEDgetCursor
 3708 0fa6 0246     		mov	r2, r0
 3709 0fa8 0323     		movs	r3, #3
 3710 0faa 0E21     		movs	r1, #14
 3711 0fac 2046     		mov	r0, r4
 3712 0fae FFF7FEFF 		bl	OLEDwriteString
1200:main.c        ****                 mainOLEDWaitingToSend = 1;
 3713              		.loc 1 1200 0
 3714 0fb2 1B4B     		ldr	r3, .L215+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 88


 3715 0fb4 0122     		movs	r2, #1
 3716 0fb6 1A60     		str	r2, [r3]
1201:main.c        ****                 button2Up = 0;
 3717              		.loc 1 1201 0
 3718 0fb8 1E4B     		ldr	r3, .L215+44
 3719 0fba 0022     		movs	r2, #0
 3720 0fbc 1A70     		strb	r2, [r3]
 3721 0fbe 07E0     		b	.L133
 3722              	.L132:
1202:main.c        ****             }
1203:main.c        ****             else if (button2_Read())
 3723              		.loc 1 1203 0
 3724 0fc0 FFF7FEFF 		bl	button2_Read
 3725 0fc4 0346     		mov	r3, r0
 3726 0fc6 002B     		cmp	r3, #0
 3727 0fc8 02D0     		beq	.L133
1204:main.c        ****             {
1205:main.c        ****                 button2Up = 1;
 3728              		.loc 1 1205 0
 3729 0fca 1A4B     		ldr	r3, .L215+44
 3730 0fcc 0122     		movs	r2, #1
 3731 0fce 1A70     		strb	r2, [r3]
 3732              	.L133:
1206:main.c        ****             }
1207:main.c        ****             
1208:main.c        ****             if ((!button3_Read()) && (button3Up))
 3733              		.loc 1 1208 0
 3734 0fd0 FFF7FEFF 		bl	button3_Read
 3735 0fd4 0346     		mov	r3, r0
 3736 0fd6 002B     		cmp	r3, #0
 3737 0fd8 32D1     		bne	.L134
 3738              		.loc 1 1208 0 is_stmt 0 discriminator 1
 3739 0fda 174B     		ldr	r3, .L215+48
 3740 0fdc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3741 0fde 002B     		cmp	r3, #0
 3742 0fe0 2ED0     		beq	.L134
1209:main.c        ****             {
1210:main.c        ****                 patchNum -= 1;
 3743              		.loc 1 1210 0 is_stmt 1
 3744 0fe2 164B     		ldr	r3, .L215+52
 3745 0fe4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3746 0fe6 013B     		subs	r3, r3, #1
 3747 0fe8 DAB2     		uxtb	r2, r3
 3748 0fea 144B     		ldr	r3, .L215+52
 3749 0fec 1A70     		strb	r2, [r3]
1211:main.c        ****                 patchNum &= 63;
 3750              		.loc 1 1211 0
 3751 0fee 134B     		ldr	r3, .L215+52
 3752 0ff0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3753 0ff2 03F03F03 		and	r3, r3, #63
 3754 0ff6 DAB2     		uxtb	r2, r3
 3755 0ff8 104B     		ldr	r3, .L215+52
 3756 0ffa 1A70     		strb	r2, [r3]
1212:main.c        ****                         displayCurrentPresetName();
 3757              		.loc 1 1212 0
 3758 0ffc FFF7FEFF 		bl	displayCurrentPresetName
1213:main.c        ****                 button3Up = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 89


 3759              		.loc 1 1213 0
 3760 1000 0D4B     		ldr	r3, .L215+48
 3761 1002 0022     		movs	r2, #0
 3762 1004 1A70     		strb	r2, [r3]
 3763 1006 23E0     		b	.L135
 3764              	.L216:
 3765              		.align	2
 3766              	.L215:
 3767 1008 00000000 		.word	oct4Up
 3768 100c 00000000 		.word	currentNeck
 3769 1010 00000000 		.word	necks
 3770 1014 00000000 		.word	currentCopedent
 3771 1018 00040000 		.word	.LC0
 3772 101c 00000000 		.word	copedentNamesArray
 3773 1020 00000000 		.word	mainOLEDWaitingToSend
 3774 1024 00000000 		.word	enterUp
 3775 1028 00000000 		.word	dualSlider
 3776 102c 00000000 		.word	editMode
 3777 1030 00000000 		.word	button1Up
 3778 1034 00000000 		.word	button2Up
 3779 1038 00000000 		.word	button3Up
 3780 103c 00000000 		.word	patchNum
 3781              	.L134:
1214:main.c        ****             }
1215:main.c        ****             else if (button3_Read())
 3782              		.loc 1 1215 0
 3783 1040 FFF7FEFF 		bl	button3_Read
 3784 1044 0346     		mov	r3, r0
 3785 1046 002B     		cmp	r3, #0
 3786 1048 02D0     		beq	.L135
1216:main.c        ****             {
1217:main.c        ****                 button3Up = 1;
 3787              		.loc 1 1217 0
 3788 104a 894B     		ldr	r3, .L217
 3789 104c 0122     		movs	r2, #1
 3790 104e 1A70     		strb	r2, [r3]
 3791              	.L135:
1218:main.c        ****             }
1219:main.c        ****             
1220:main.c        ****             if ((!button4_Read()) && (button4Up))
 3792              		.loc 1 1220 0
 3793 1050 FFF7FEFF 		bl	button4_Read
 3794 1054 0346     		mov	r3, r0
 3795 1056 002B     		cmp	r3, #0
 3796 1058 16D1     		bne	.L136
 3797              		.loc 1 1220 0 is_stmt 0 discriminator 1
 3798 105a 864B     		ldr	r3, .L217+4
 3799 105c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3800 105e 002B     		cmp	r3, #0
 3801 1060 12D0     		beq	.L136
1221:main.c        ****             {
1222:main.c        ****                 patchNum += 1;
 3802              		.loc 1 1222 0 is_stmt 1
 3803 1062 854B     		ldr	r3, .L217+8
 3804 1064 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3805 1066 0133     		adds	r3, r3, #1
 3806 1068 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 90


 3807 106a 834B     		ldr	r3, .L217+8
 3808 106c 1A70     		strb	r2, [r3]
1223:main.c        ****                 patchNum &= 63;
 3809              		.loc 1 1223 0
 3810 106e 824B     		ldr	r3, .L217+8
 3811 1070 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3812 1072 03F03F03 		and	r3, r3, #63
 3813 1076 DAB2     		uxtb	r2, r3
 3814 1078 7F4B     		ldr	r3, .L217+8
 3815 107a 1A70     		strb	r2, [r3]
1224:main.c        ****                 displayCurrentPresetName();
 3816              		.loc 1 1224 0
 3817 107c FFF7FEFF 		bl	displayCurrentPresetName
1225:main.c        ****                 button4Up = 0;
 3818              		.loc 1 1225 0
 3819 1080 7C4B     		ldr	r3, .L217+4
 3820 1082 0022     		movs	r2, #0
 3821 1084 1A70     		strb	r2, [r3]
 3822 1086 11E1     		b	.L138
 3823              	.L136:
1226:main.c        ****             }
1227:main.c        ****             else if (button4_Read())
 3824              		.loc 1 1227 0
 3825 1088 FFF7FEFF 		bl	button4_Read
 3826 108c 0346     		mov	r3, r0
 3827 108e 002B     		cmp	r3, #0
 3828 1090 00F00C81 		beq	.L138
1228:main.c        ****             {
1229:main.c        ****                 button4Up = 1;
 3829              		.loc 1 1229 0
 3830 1094 774B     		ldr	r3, .L217+4
 3831 1096 0122     		movs	r2, #1
 3832 1098 1A70     		strb	r2, [r3]
 3833 109a 07E1     		b	.L138
 3834              	.L129:
1230:main.c        ****             }
1231:main.c        ****         }
1232:main.c        ****         //if in edit mode, then /left right up down work differently
1233:main.c        ****         else
1234:main.c        ****         {
1235:main.c        ****         
1236:main.c        ****             if ((!button1_Read()) && (button1Up))
 3835              		.loc 1 1236 0
 3836 109c FFF7FEFF 		bl	button1_Read
 3837 10a0 0346     		mov	r3, r0
 3838 10a2 002B     		cmp	r3, #0
 3839 10a4 47D1     		bne	.L139
 3840              		.loc 1 1236 0 is_stmt 0 discriminator 1
 3841 10a6 754B     		ldr	r3, .L217+12
 3842 10a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3843 10aa 002B     		cmp	r3, #0
 3844 10ac 43D0     		beq	.L139
1237:main.c        ****             {
1238:main.c        ****                 currentCopedent -= 1;
 3845              		.loc 1 1238 0 is_stmt 1
 3846 10ae 744B     		ldr	r3, .L217+16
 3847 10b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 91


 3848 10b2 013B     		subs	r3, r3, #1
 3849 10b4 DAB2     		uxtb	r2, r3
 3850 10b6 724B     		ldr	r3, .L217+16
 3851 10b8 1A70     		strb	r2, [r3]
1239:main.c        ****                 currentCopedent &= 31;
 3852              		.loc 1 1239 0
 3853 10ba 714B     		ldr	r3, .L217+16
 3854 10bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3855 10be 03F01F03 		and	r3, r3, #31
 3856 10c2 DAB2     		uxtb	r2, r3
 3857 10c4 6E4B     		ldr	r3, .L217+16
 3858 10c6 1A70     		strb	r2, [r3]
1240:main.c        ****                 necks[currentNeck] = currentCopedent;
 3859              		.loc 1 1240 0
 3860 10c8 6E4B     		ldr	r3, .L217+20
 3861 10ca 1B68     		ldr	r3, [r3]
 3862 10cc 6C4A     		ldr	r2, .L217+16
 3863 10ce 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3864 10d0 6D4A     		ldr	r2, .L217+24
 3865 10d2 D154     		strb	r1, [r2, r3]
1241:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3866              		.loc 1 1241 0
 3867 10d4 6A4B     		ldr	r3, .L217+16
 3868 10d6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3869 10d8 6A4B     		ldr	r3, .L217+20
 3870 10da 1B68     		ldr	r3, [r3]
 3871 10dc 9BB2     		uxth	r3, r3
 3872 10de 1946     		mov	r1, r3
 3873 10e0 1046     		mov	r0, r2
 3874 10e2 FFF7FEFF 		bl	EEPROM_WriteByte
1242:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3875              		.loc 1 1242 0
 3876 10e6 664B     		ldr	r3, .L217+16
 3877 10e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3878 10ea 1846     		mov	r0, r3
 3879 10ec 0323     		movs	r3, #3
 3880 10ee 0022     		movs	r2, #0
 3881 10f0 0221     		movs	r1, #2
 3882 10f2 FFF7FEFF 		bl	OLEDwriteInt
1243:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3883              		.loc 1 1243 0
 3884 10f6 FFF7FEFF 		bl	OLEDgetCursor
 3885 10fa 0246     		mov	r2, r0
 3886 10fc 0323     		movs	r3, #3
 3887 10fe 0121     		movs	r1, #1
 3888 1100 6248     		ldr	r0, .L217+28
 3889 1102 FFF7FEFF 		bl	OLEDwriteString
1244:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3890              		.loc 1 1244 0
 3891 1106 5E4B     		ldr	r3, .L217+16
 3892 1108 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3893 110a 1A46     		mov	r2, r3
 3894 110c 1346     		mov	r3, r2
 3895 110e DB00     		lsls	r3, r3, #3
 3896 1110 9B1A     		subs	r3, r3, r2
 3897 1112 5B00     		lsls	r3, r3, #1
 3898 1114 5E4A     		ldr	r2, .L217+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 92


 3899 1116 9C18     		adds	r4, r3, r2
 3900 1118 FFF7FEFF 		bl	OLEDgetCursor
 3901 111c 0246     		mov	r2, r0
 3902 111e 0323     		movs	r3, #3
 3903 1120 0E21     		movs	r1, #14
 3904 1122 2046     		mov	r0, r4
 3905 1124 FFF7FEFF 		bl	OLEDwriteString
1245:main.c        ****                 mainOLEDWaitingToSend = 1;
 3906              		.loc 1 1245 0
 3907 1128 5A4B     		ldr	r3, .L217+36
 3908 112a 0122     		movs	r2, #1
 3909 112c 1A60     		str	r2, [r3]
1246:main.c        ****                 button1Up = 0;
 3910              		.loc 1 1246 0
 3911 112e 534B     		ldr	r3, .L217+12
 3912 1130 0022     		movs	r2, #0
 3913 1132 1A70     		strb	r2, [r3]
 3914 1134 07E0     		b	.L140
 3915              	.L139:
1247:main.c        ****             }
1248:main.c        ****             else if (button1_Read())
 3916              		.loc 1 1248 0
 3917 1136 FFF7FEFF 		bl	button1_Read
 3918 113a 0346     		mov	r3, r0
 3919 113c 002B     		cmp	r3, #0
 3920 113e 02D0     		beq	.L140
1249:main.c        ****             {
1250:main.c        ****                 button1Up = 1;
 3921              		.loc 1 1250 0
 3922 1140 4E4B     		ldr	r3, .L217+12
 3923 1142 0122     		movs	r2, #1
 3924 1144 1A70     		strb	r2, [r3]
 3925              	.L140:
1251:main.c        ****             }
1252:main.c        ****             
1253:main.c        ****             if ((!button2_Read()) && (button2Up))
 3926              		.loc 1 1253 0
 3927 1146 FFF7FEFF 		bl	button2_Read
 3928 114a 0346     		mov	r3, r0
 3929 114c 002B     		cmp	r3, #0
 3930 114e 47D1     		bne	.L141
 3931              		.loc 1 1253 0 is_stmt 0 discriminator 1
 3932 1150 514B     		ldr	r3, .L217+40
 3933 1152 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3934 1154 002B     		cmp	r3, #0
 3935 1156 43D0     		beq	.L141
1254:main.c        ****             {
1255:main.c        ****                 currentCopedent += 1;
 3936              		.loc 1 1255 0 is_stmt 1
 3937 1158 494B     		ldr	r3, .L217+16
 3938 115a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3939 115c 0133     		adds	r3, r3, #1
 3940 115e DAB2     		uxtb	r2, r3
 3941 1160 474B     		ldr	r3, .L217+16
 3942 1162 1A70     		strb	r2, [r3]
1256:main.c        ****                 currentCopedent &= 31;
 3943              		.loc 1 1256 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 93


 3944 1164 464B     		ldr	r3, .L217+16
 3945 1166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3946 1168 03F01F03 		and	r3, r3, #31
 3947 116c DAB2     		uxtb	r2, r3
 3948 116e 444B     		ldr	r3, .L217+16
 3949 1170 1A70     		strb	r2, [r3]
1257:main.c        ****                 necks[currentNeck] = currentCopedent;
 3950              		.loc 1 1257 0
 3951 1172 444B     		ldr	r3, .L217+20
 3952 1174 1B68     		ldr	r3, [r3]
 3953 1176 424A     		ldr	r2, .L217+16
 3954 1178 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3955 117a 434A     		ldr	r2, .L217+24
 3956 117c D154     		strb	r1, [r2, r3]
1258:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3957              		.loc 1 1258 0
 3958 117e 404B     		ldr	r3, .L217+16
 3959 1180 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3960 1182 404B     		ldr	r3, .L217+20
 3961 1184 1B68     		ldr	r3, [r3]
 3962 1186 9BB2     		uxth	r3, r3
 3963 1188 1946     		mov	r1, r3
 3964 118a 1046     		mov	r0, r2
 3965 118c FFF7FEFF 		bl	EEPROM_WriteByte
1259:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3966              		.loc 1 1259 0
 3967 1190 3B4B     		ldr	r3, .L217+16
 3968 1192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3969 1194 1846     		mov	r0, r3
 3970 1196 0323     		movs	r3, #3
 3971 1198 0022     		movs	r2, #0
 3972 119a 0221     		movs	r1, #2
 3973 119c FFF7FEFF 		bl	OLEDwriteInt
1260:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3974              		.loc 1 1260 0
 3975 11a0 FFF7FEFF 		bl	OLEDgetCursor
 3976 11a4 0246     		mov	r2, r0
 3977 11a6 0323     		movs	r3, #3
 3978 11a8 0121     		movs	r1, #1
 3979 11aa 3848     		ldr	r0, .L217+28
 3980 11ac FFF7FEFF 		bl	OLEDwriteString
1261:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3981              		.loc 1 1261 0
 3982 11b0 334B     		ldr	r3, .L217+16
 3983 11b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3984 11b4 1A46     		mov	r2, r3
 3985 11b6 1346     		mov	r3, r2
 3986 11b8 DB00     		lsls	r3, r3, #3
 3987 11ba 9B1A     		subs	r3, r3, r2
 3988 11bc 5B00     		lsls	r3, r3, #1
 3989 11be 344A     		ldr	r2, .L217+32
 3990 11c0 9C18     		adds	r4, r3, r2
 3991 11c2 FFF7FEFF 		bl	OLEDgetCursor
 3992 11c6 0246     		mov	r2, r0
 3993 11c8 0323     		movs	r3, #3
 3994 11ca 0E21     		movs	r1, #14
 3995 11cc 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 94


 3996 11ce FFF7FEFF 		bl	OLEDwriteString
1262:main.c        ****                 mainOLEDWaitingToSend = 1;
 3997              		.loc 1 1262 0
 3998 11d2 304B     		ldr	r3, .L217+36
 3999 11d4 0122     		movs	r2, #1
 4000 11d6 1A60     		str	r2, [r3]
1263:main.c        ****                 button2Up = 0;
 4001              		.loc 1 1263 0
 4002 11d8 2F4B     		ldr	r3, .L217+40
 4003 11da 0022     		movs	r2, #0
 4004 11dc 1A70     		strb	r2, [r3]
 4005 11de 07E0     		b	.L142
 4006              	.L141:
1264:main.c        ****             }
1265:main.c        ****             else if (button2_Read())
 4007              		.loc 1 1265 0
 4008 11e0 FFF7FEFF 		bl	button2_Read
 4009 11e4 0346     		mov	r3, r0
 4010 11e6 002B     		cmp	r3, #0
 4011 11e8 02D0     		beq	.L142
1266:main.c        ****             {
1267:main.c        ****                 button2Up = 1;
 4012              		.loc 1 1267 0
 4013 11ea 2B4B     		ldr	r3, .L217+40
 4014 11ec 0122     		movs	r2, #1
 4015 11ee 1A70     		strb	r2, [r3]
 4016              	.L142:
1268:main.c        ****             }
1269:main.c        ****             
1270:main.c        ****             if ((!button3_Read()) && (button3Up))
 4017              		.loc 1 1270 0
 4018 11f0 FFF7FEFF 		bl	button3_Read
 4019 11f4 0346     		mov	r3, r0
 4020 11f6 002B     		cmp	r3, #0
 4021 11f8 16D1     		bne	.L143
 4022              		.loc 1 1270 0 is_stmt 0 discriminator 1
 4023 11fa 1D4B     		ldr	r3, .L217
 4024 11fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4025 11fe 002B     		cmp	r3, #0
 4026 1200 12D0     		beq	.L143
1271:main.c        ****             {
1272:main.c        ****                 patchNum -= 1;
 4027              		.loc 1 1272 0 is_stmt 1
 4028 1202 1D4B     		ldr	r3, .L217+8
 4029 1204 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4030 1206 013B     		subs	r3, r3, #1
 4031 1208 DAB2     		uxtb	r2, r3
 4032 120a 1B4B     		ldr	r3, .L217+8
 4033 120c 1A70     		strb	r2, [r3]
1273:main.c        ****                 patchNum &= 63;
 4034              		.loc 1 1273 0
 4035 120e 1A4B     		ldr	r3, .L217+8
 4036 1210 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4037 1212 03F03F03 		and	r3, r3, #63
 4038 1216 DAB2     		uxtb	r2, r3
 4039 1218 174B     		ldr	r3, .L217+8
 4040 121a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 95


1274:main.c        ****                         displayCurrentPresetName();
 4041              		.loc 1 1274 0
 4042 121c FFF7FEFF 		bl	displayCurrentPresetName
1275:main.c        ****                 button3Up = 0;
 4043              		.loc 1 1275 0
 4044 1220 134B     		ldr	r3, .L217
 4045 1222 0022     		movs	r2, #0
 4046 1224 1A70     		strb	r2, [r3]
 4047 1226 07E0     		b	.L144
 4048              	.L143:
1276:main.c        ****             }
1277:main.c        ****             else if (button3_Read())
 4049              		.loc 1 1277 0
 4050 1228 FFF7FEFF 		bl	button3_Read
 4051 122c 0346     		mov	r3, r0
 4052 122e 002B     		cmp	r3, #0
 4053 1230 02D0     		beq	.L144
1278:main.c        ****             {
1279:main.c        ****                 button3Up = 1;
 4054              		.loc 1 1279 0
 4055 1232 0F4B     		ldr	r3, .L217
 4056 1234 0122     		movs	r2, #1
 4057 1236 1A70     		strb	r2, [r3]
 4058              	.L144:
1280:main.c        ****             }
1281:main.c        ****             
1282:main.c        ****             if ((!button4_Read()) && (button4Up))
 4059              		.loc 1 1282 0
 4060 1238 FFF7FEFF 		bl	button4_Read
 4061 123c 0346     		mov	r3, r0
 4062 123e 002B     		cmp	r3, #0
 4063 1240 2CD1     		bne	.L145
 4064              		.loc 1 1282 0 is_stmt 0 discriminator 1
 4065 1242 0C4B     		ldr	r3, .L217+4
 4066 1244 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4067 1246 002B     		cmp	r3, #0
 4068 1248 28D0     		beq	.L145
1283:main.c        ****             {
1284:main.c        ****                 patchNum += 1;
 4069              		.loc 1 1284 0 is_stmt 1
 4070 124a 0B4B     		ldr	r3, .L217+8
 4071 124c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4072 124e 0133     		adds	r3, r3, #1
 4073 1250 DAB2     		uxtb	r2, r3
 4074 1252 094B     		ldr	r3, .L217+8
 4075 1254 1A70     		strb	r2, [r3]
1285:main.c        ****                 patchNum &= 63;
 4076              		.loc 1 1285 0
 4077 1256 084B     		ldr	r3, .L217+8
 4078 1258 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4079 125a 03F03F03 		and	r3, r3, #63
 4080 125e DAB2     		uxtb	r2, r3
 4081 1260 054B     		ldr	r3, .L217+8
 4082 1262 1A70     		strb	r2, [r3]
1286:main.c        ****                 displayCurrentPresetName();
 4083              		.loc 1 1286 0
 4084 1264 FFF7FEFF 		bl	displayCurrentPresetName
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 96


1287:main.c        ****                 button4Up = 0;
 4085              		.loc 1 1287 0
 4086 1268 024B     		ldr	r3, .L217+4
 4087 126a 0022     		movs	r2, #0
 4088 126c 1A70     		strb	r2, [r3]
 4089 126e 1DE0     		b	.L138
 4090              	.L218:
 4091              		.align	2
 4092              	.L217:
 4093 1270 00000000 		.word	button3Up
 4094 1274 00000000 		.word	button4Up
 4095 1278 00000000 		.word	patchNum
 4096 127c 00000000 		.word	button1Up
 4097 1280 00000000 		.word	currentCopedent
 4098 1284 00000000 		.word	currentNeck
 4099 1288 00000000 		.word	necks
 4100 128c 00040000 		.word	.LC0
 4101 1290 00000000 		.word	copedentNamesArray
 4102 1294 00000000 		.word	mainOLEDWaitingToSend
 4103 1298 00000000 		.word	button2Up
 4104              	.L145:
1288:main.c        ****             }
1289:main.c        ****             else if (button4_Read())
 4105              		.loc 1 1289 0
 4106 129c FFF7FEFF 		bl	button4_Read
 4107 12a0 0346     		mov	r3, r0
 4108 12a2 002B     		cmp	r3, #0
 4109 12a4 02D0     		beq	.L138
1290:main.c        ****             {
1291:main.c        ****                 button4Up = 1;
 4110              		.loc 1 1291 0
 4111 12a6 994B     		ldr	r3, .L219
 4112 12a8 0122     		movs	r2, #1
 4113 12aa 1A70     		strb	r2, [r3]
 4114              	.L138:
1292:main.c        ****             }
1293:main.c        ****         }
1294:main.c        ****         if ((!edit_button_Read()) && (editUp))
 4115              		.loc 1 1294 0
 4116 12ac FFF7FEFF 		bl	edit_button_Read
 4117 12b0 0346     		mov	r3, r0
 4118 12b2 002B     		cmp	r3, #0
 4119 12b4 40F0D580 		bne	.L146
 4120              		.loc 1 1294 0 is_stmt 0 discriminator 1
 4121 12b8 954B     		ldr	r3, .L219+4
 4122 12ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4123 12bc 002B     		cmp	r3, #0
 4124 12be 00F0D080 		beq	.L146
1295:main.c        ****         {
1296:main.c        ****             editMode = !editMode;
 4125              		.loc 1 1296 0 is_stmt 1
 4126 12c2 944B     		ldr	r3, .L219+8
 4127 12c4 1B68     		ldr	r3, [r3]
 4128 12c6 002B     		cmp	r3, #0
 4129 12c8 0CBF     		ite	eq
 4130 12ca 0123     		moveq	r3, #1
 4131 12cc 0023     		movne	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 97


 4132 12ce DBB2     		uxtb	r3, r3
 4133 12d0 1A46     		mov	r2, r3
 4134 12d2 904B     		ldr	r3, .L219+8
 4135 12d4 1A60     		str	r2, [r3]
1297:main.c        ****             //for now edit mode is calibration mode
1298:main.c        ****             calibrationMode = !calibrationMode;
 4136              		.loc 1 1298 0
 4137 12d6 904B     		ldr	r3, .L219+12
 4138 12d8 1B68     		ldr	r3, [r3]
 4139 12da 002B     		cmp	r3, #0
 4140 12dc 0CBF     		ite	eq
 4141 12de 0123     		moveq	r3, #1
 4142 12e0 0023     		movne	r3, #0
 4143 12e2 DBB2     		uxtb	r3, r3
 4144 12e4 1A46     		mov	r2, r3
 4145 12e6 8C4B     		ldr	r3, .L219+12
 4146 12e8 1A60     		str	r2, [r3]
1299:main.c        ****             LED_red2_Write(editMode);
 4147              		.loc 1 1299 0
 4148 12ea 8A4B     		ldr	r3, .L219+8
 4149 12ec 1B68     		ldr	r3, [r3]
 4150 12ee DBB2     		uxtb	r3, r3
 4151 12f0 1846     		mov	r0, r3
 4152 12f2 FFF7FEFF 		bl	LED_red2_Write
1300:main.c        ****             editUp = 0;
 4153              		.loc 1 1300 0
 4154 12f6 864B     		ldr	r3, .L219+4
 4155 12f8 0022     		movs	r2, #0
 4156 12fa 1A70     		strb	r2, [r3]
1301:main.c        ****             if (editMode)
 4157              		.loc 1 1301 0
 4158 12fc 854B     		ldr	r3, .L219+8
 4159 12fe 1B68     		ldr	r3, [r3]
 4160 1300 002B     		cmp	r3, #0
 4161 1302 31D0     		beq	.L147
1302:main.c        ****             {
1303:main.c        ****                 OLEDclear();
 4162              		.loc 1 1303 0
 4163 1304 FFF7FEFF 		bl	OLEDclear
1304:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 2, FirstLine);
 4164              		.loc 1 1304 0
 4165 1308 0023     		movs	r3, #0
 4166 130a 0222     		movs	r2, #2
 4167 130c 0B21     		movs	r1, #11
 4168 130e 8348     		ldr	r0, .L219+16
 4169 1310 FFF7FEFF 		bl	OLEDwriteString
1305:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 2, SecondLine);
 4170              		.loc 1 1305 0
 4171 1314 0123     		movs	r3, #1
 4172 1316 0222     		movs	r2, #2
 4173 1318 0B21     		movs	r1, #11
 4174 131a 8148     		ldr	r0, .L219+20
 4175 131c FFF7FEFF 		bl	OLEDwriteString
1306:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 2, ThirdLine);
 4176              		.loc 1 1306 0
 4177 1320 0223     		movs	r3, #2
 4178 1322 0222     		movs	r2, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 98


 4179 1324 0B21     		movs	r1, #11
 4180 1326 7F48     		ldr	r0, .L219+24
 4181 1328 FFF7FEFF 		bl	OLEDwriteString
1307:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 2, FourthLine);
 4182              		.loc 1 1307 0
 4183 132c 0323     		movs	r3, #3
 4184 132e 0222     		movs	r2, #2
 4185 1330 0B21     		movs	r1, #11
 4186 1332 7D48     		ldr	r0, .L219+28
 4187 1334 FFF7FEFF 		bl	OLEDwriteString
1308:main.c        ****                 mainOLEDWaitingToSend = 1;
 4188              		.loc 1 1308 0
 4189 1338 7C4B     		ldr	r3, .L219+32
 4190 133a 0122     		movs	r2, #1
 4191 133c 1A60     		str	r2, [r3]
 4192              	.LBB20:
1309:main.c        ****                 
1310:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1311:main.c        ****                 for (int i = 0; i < 10; i++)
 4193              		.loc 1 1311 0
 4194 133e 0023     		movs	r3, #0
 4195 1340 7B66     		str	r3, [r7, #100]
 4196 1342 0DE0     		b	.L148
 4197              	.L149:
1312:main.c        ****                 {
1313:main.c        ****                     pedals_low[i] = 4095;
 4198              		.loc 1 1313 0 discriminator 3
 4199 1344 7A4A     		ldr	r2, .L219+36
 4200 1346 7B6E     		ldr	r3, [r7, #100]
 4201 1348 40F6FF71 		movw	r1, #4095
 4202 134c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1314:main.c        ****                     pedals_high[i] = 0;
 4203              		.loc 1 1314 0 discriminator 3
 4204 1350 784A     		ldr	r2, .L219+40
 4205 1352 7B6E     		ldr	r3, [r7, #100]
 4206 1354 0021     		movs	r1, #0
 4207 1356 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1311:main.c        ****                 {
 4208              		.loc 1 1311 0 discriminator 3
 4209 135a 7B6E     		ldr	r3, [r7, #100]
 4210 135c 0133     		adds	r3, r3, #1
 4211 135e 7B66     		str	r3, [r7, #100]
 4212              	.L148:
1311:main.c        ****                 {
 4213              		.loc 1 1311 0 is_stmt 0 discriminator 1
 4214 1360 7B6E     		ldr	r3, [r7, #100]
 4215 1362 092B     		cmp	r3, #9
 4216 1364 EEDD     		ble	.L149
 4217              	.LBE20:
1301:main.c        ****             {
 4218              		.loc 1 1301 0 is_stmt 1
 4219 1366 84E0     		b	.L153
 4220              	.L147:
1315:main.c        ****                 }
1316:main.c        ****             }
1317:main.c        ****             else
1318:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 99


1319:main.c        ****                 //draw normal screen
1320:main.c        ****                 OLEDclear();
 4221              		.loc 1 1320 0
 4222 1368 FFF7FEFF 		bl	OLEDclear
1321:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 4223              		.loc 1 1321 0
 4224 136c 724B     		ldr	r3, .L219+44
 4225 136e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4226 1370 1846     		mov	r0, r3
 4227 1372 0323     		movs	r3, #3
 4228 1374 0022     		movs	r2, #0
 4229 1376 0221     		movs	r1, #2
 4230 1378 FFF7FEFF 		bl	OLEDwriteInt
1322:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 4231              		.loc 1 1322 0
 4232 137c FFF7FEFF 		bl	OLEDgetCursor
 4233 1380 0246     		mov	r2, r0
 4234 1382 0323     		movs	r3, #3
 4235 1384 0121     		movs	r1, #1
 4236 1386 6D48     		ldr	r0, .L219+48
 4237 1388 FFF7FEFF 		bl	OLEDwriteString
1323:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 4238              		.loc 1 1323 0
 4239 138c 6A4B     		ldr	r3, .L219+44
 4240 138e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4241 1390 1A46     		mov	r2, r3
 4242 1392 1346     		mov	r3, r2
 4243 1394 DB00     		lsls	r3, r3, #3
 4244 1396 9B1A     		subs	r3, r3, r2
 4245 1398 5B00     		lsls	r3, r3, #1
 4246 139a 694A     		ldr	r2, .L219+52
 4247 139c 9C18     		adds	r4, r3, r2
 4248 139e FFF7FEFF 		bl	OLEDgetCursor
 4249 13a2 0246     		mov	r2, r0
 4250 13a4 0323     		movs	r3, #3
 4251 13a6 0E21     		movs	r1, #14
 4252 13a8 2046     		mov	r0, r4
 4253 13aa FFF7FEFF 		bl	OLEDwriteString
1324:main.c        ****                 displayCurrentPresetName();
 4254              		.loc 1 1324 0
 4255 13ae FFF7FEFF 		bl	displayCurrentPresetName
1325:main.c        ****                 calculatePedalRatios();
 4256              		.loc 1 1325 0
 4257 13b2 FFF7FEFF 		bl	calculatePedalRatios
1326:main.c        ****                 //TODO: now need to store this in EEPROM. 
1327:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4258              		.loc 1 1327 0
 4259 13b6 604B     		ldr	r3, .L219+44
 4260 13b8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4261 13ba 624B     		ldr	r3, .L219+56
 4262 13bc 1B68     		ldr	r3, [r3]
 4263 13be 9BB2     		uxth	r3, r3
 4264 13c0 1946     		mov	r1, r3
 4265 13c2 1046     		mov	r0, r2
 4266 13c4 FFF7FEFF 		bl	EEPROM_WriteByte
 4267              	.LBB21:
1328:main.c        ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 100


1329:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 4268              		.loc 1 1329 0
 4269 13c8 0023     		movs	r3, #0
 4270 13ca 3B66     		str	r3, [r7, #96]
 4271 13cc 45E0     		b	.L151
 4272              	.L152:
1330:main.c        ****                 {
1331:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 4273              		.loc 1 1331 0 discriminator 3
 4274 13ce 584A     		ldr	r2, .L219+36
 4275 13d0 3B6E     		ldr	r3, [r7, #96]
 4276 13d2 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4277 13d6 1B0A     		lsrs	r3, r3, #8
 4278 13d8 9BB2     		uxth	r3, r3
 4279 13da DAB2     		uxtb	r2, r3
 4280 13dc 3B6E     		ldr	r3, [r7, #96]
 4281 13de 03F2E713 		addw	r3, r3, #487
 4282 13e2 9BB2     		uxth	r3, r3
 4283 13e4 9B00     		lsls	r3, r3, #2
 4284 13e6 9BB2     		uxth	r3, r3
 4285 13e8 1946     		mov	r1, r3
 4286 13ea 1046     		mov	r0, r2
 4287 13ec FFF7FEFF 		bl	EEPROM_WriteByte
1332:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 4288              		.loc 1 1332 0 discriminator 3
 4289 13f0 4F4A     		ldr	r2, .L219+36
 4290 13f2 3B6E     		ldr	r3, [r7, #96]
 4291 13f4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4292 13f8 DAB2     		uxtb	r2, r3
 4293 13fa 3B6E     		ldr	r3, [r7, #96]
 4294 13fc 9BB2     		uxth	r3, r3
 4295 13fe 9B00     		lsls	r3, r3, #2
 4296 1400 9BB2     		uxth	r3, r3
 4297 1402 03F29D73 		addw	r3, r3, #1949
 4298 1406 9BB2     		uxth	r3, r3
 4299 1408 1946     		mov	r1, r3
 4300 140a 1046     		mov	r0, r2
 4301 140c FFF7FEFF 		bl	EEPROM_WriteByte
1333:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4302              		.loc 1 1333 0 discriminator 3
 4303 1410 484A     		ldr	r2, .L219+40
 4304 1412 3B6E     		ldr	r3, [r7, #96]
 4305 1414 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4306 1418 1B0A     		lsrs	r3, r3, #8
 4307 141a 9BB2     		uxth	r3, r3
 4308 141c DAB2     		uxtb	r2, r3
 4309 141e 3B6E     		ldr	r3, [r7, #96]
 4310 1420 9BB2     		uxth	r3, r3
 4311 1422 9B00     		lsls	r3, r3, #2
 4312 1424 9BB2     		uxth	r3, r3
 4313 1426 03F29E73 		addw	r3, r3, #1950
 4314 142a 9BB2     		uxth	r3, r3
 4315 142c 1946     		mov	r1, r3
 4316 142e 1046     		mov	r0, r2
 4317 1430 FFF7FEFF 		bl	EEPROM_WriteByte
1334:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4318              		.loc 1 1334 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 101


 4319 1434 3F4A     		ldr	r2, .L219+40
 4320 1436 3B6E     		ldr	r3, [r7, #96]
 4321 1438 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4322 143c DAB2     		uxtb	r2, r3
 4323 143e 3B6E     		ldr	r3, [r7, #96]
 4324 1440 9BB2     		uxth	r3, r3
 4325 1442 9B00     		lsls	r3, r3, #2
 4326 1444 9BB2     		uxth	r3, r3
 4327 1446 03F29F73 		addw	r3, r3, #1951
 4328 144a 9BB2     		uxth	r3, r3
 4329 144c 1946     		mov	r1, r3
 4330 144e 1046     		mov	r0, r2
 4331 1450 FFF7FEFF 		bl	EEPROM_WriteByte
1329:main.c        ****                 {
 4332              		.loc 1 1329 0 discriminator 3
 4333 1454 3B6E     		ldr	r3, [r7, #96]
 4334 1456 0133     		adds	r3, r3, #1
 4335 1458 3B66     		str	r3, [r7, #96]
 4336              	.L151:
1329:main.c        ****                 {
 4337              		.loc 1 1329 0 is_stmt 0 discriminator 1
 4338 145a 3B6E     		ldr	r3, [r7, #96]
 4339 145c 092B     		cmp	r3, #9
 4340 145e B6DD     		ble	.L152
 4341              	.LBE21:
1301:main.c        ****             {
 4342              		.loc 1 1301 0 is_stmt 1
 4343 1460 07E0     		b	.L153
 4344              	.L146:
1335:main.c        ****                 }
1336:main.c        **** 
1337:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1338:main.c        ****             }
1339:main.c        ****         }
1340:main.c        ****         else if (edit_button_Read())
 4345              		.loc 1 1340 0
 4346 1462 FFF7FEFF 		bl	edit_button_Read
 4347 1466 0346     		mov	r3, r0
 4348 1468 002B     		cmp	r3, #0
 4349 146a 02D0     		beq	.L153
1341:main.c        ****         {
1342:main.c        ****             editUp = 1;
 4350              		.loc 1 1342 0
 4351 146c 284B     		ldr	r3, .L219+4
 4352 146e 0122     		movs	r2, #1
 4353 1470 1A70     		strb	r2, [r3]
 4354              	.L153:
1343:main.c        ****         }
1344:main.c        ****         
1345:main.c        ****         if (octave != prevOctave)
1346:main.c        ****         {
1347:main.c        ****             //sendMIDIControlChange(90, octave);
1348:main.c        ****         }
1349:main.c        ****         prevOctave = octave;
 4355              		.loc 1 1349 0
 4356 1472 354B     		ldr	r3, .L219+60
 4357 1474 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 102


 4358 1476 354A     		ldr	r2, .L219+64
 4359 1478 1360     		str	r3, [r2]
 4360              	.LBB22:
1350:main.c        ****         
1351:main.c        ****         
1352:main.c        ****         for (int i=  0; i < 4; i++)
 4361              		.loc 1 1352 0
 4362 147a 0023     		movs	r3, #0
 4363 147c FB65     		str	r3, [r7, #92]
 4364 147e 3EE0     		b	.L154
 4365              	.L157:
1353:main.c        ****         {
1354:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4366              		.loc 1 1354 0
 4367 1480 FB6D     		ldr	r3, [r7, #92]
 4368 1482 9BB2     		uxth	r3, r3
 4369 1484 1846     		mov	r0, r3
 4370 1486 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4371 148a 0346     		mov	r3, r0
 4372 148c 002B     		cmp	r3, #0
 4373 148e 00DA     		bge	.L155
 4374 1490 0F33     		adds	r3, r3, #15
 4375              	.L155:
 4376 1492 1B11     		asrs	r3, r3, #4
 4377 1494 1BB2     		sxth	r3, r3
 4378 1496 D9B2     		uxtb	r1, r3
 4379 1498 2D4A     		ldr	r2, .L219+68
 4380 149a FB6D     		ldr	r3, [r7, #92]
 4381 149c 1344     		add	r3, r3, r2
 4382 149e 0A46     		mov	r2, r1
 4383 14a0 1A70     		strb	r2, [r3]
1355:main.c        ****             
1356:main.c        ****             knobs[i] = 255 - knobs[i];
 4384              		.loc 1 1356 0
 4385 14a2 2B4A     		ldr	r2, .L219+68
 4386 14a4 FB6D     		ldr	r3, [r7, #92]
 4387 14a6 1344     		add	r3, r3, r2
 4388 14a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4389 14aa DB43     		mvns	r3, r3
 4390 14ac D9B2     		uxtb	r1, r3
 4391 14ae 284A     		ldr	r2, .L219+68
 4392 14b0 FB6D     		ldr	r3, [r7, #92]
 4393 14b2 1344     		add	r3, r3, r2
 4394 14b4 0A46     		mov	r2, r1
 4395 14b6 1A70     		strb	r2, [r3]
1357:main.c        ****             
1358:main.c        ****             if (knobs[i] != prevKnobs[i])
 4396              		.loc 1 1358 0
 4397 14b8 254A     		ldr	r2, .L219+68
 4398 14ba FB6D     		ldr	r3, [r7, #92]
 4399 14bc 1344     		add	r3, r3, r2
 4400 14be 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4401 14c0 2449     		ldr	r1, .L219+72
 4402 14c2 FB6D     		ldr	r3, [r7, #92]
 4403 14c4 0B44     		add	r3, r3, r1
 4404 14c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4405 14c8 9A42     		cmp	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 103


 4406 14ca 0CD0     		beq	.L156
1359:main.c        ****             {
1360:main.c        ****                 sendMIDIControlChange(i+17, knobs[i]/2, 0);
 4407              		.loc 1 1360 0
 4408 14cc FB6D     		ldr	r3, [r7, #92]
 4409 14ce 03F11100 		add	r0, r3, #17
 4410 14d2 1F4A     		ldr	r2, .L219+68
 4411 14d4 FB6D     		ldr	r3, [r7, #92]
 4412 14d6 1344     		add	r3, r3, r2
 4413 14d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4414 14da 5B08     		lsrs	r3, r3, #1
 4415 14dc DBB2     		uxtb	r3, r3
 4416 14de 0022     		movs	r2, #0
 4417 14e0 1946     		mov	r1, r3
 4418 14e2 FFF7FEFF 		bl	sendMIDIControlChange
 4419              	.L156:
1361:main.c        ****             }
1362:main.c        ****             prevKnobs[i] = knobs[i];
 4420              		.loc 1 1362 0 discriminator 2
 4421 14e6 1A4A     		ldr	r2, .L219+68
 4422 14e8 FB6D     		ldr	r3, [r7, #92]
 4423 14ea 1344     		add	r3, r3, r2
 4424 14ec 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4425 14ee 194A     		ldr	r2, .L219+72
 4426 14f0 FB6D     		ldr	r3, [r7, #92]
 4427 14f2 1344     		add	r3, r3, r2
 4428 14f4 0A46     		mov	r2, r1
 4429 14f6 1A70     		strb	r2, [r3]
1352:main.c        ****         {
 4430              		.loc 1 1352 0 discriminator 2
 4431 14f8 FB6D     		ldr	r3, [r7, #92]
 4432 14fa 0133     		adds	r3, r3, #1
 4433 14fc FB65     		str	r3, [r7, #92]
 4434              	.L154:
1352:main.c        ****         {
 4435              		.loc 1 1352 0 is_stmt 0 discriminator 1
 4436 14fe FB6D     		ldr	r3, [r7, #92]
 4437 1500 032B     		cmp	r3, #3
 4438 1502 BDDD     		ble	.L157
 4439              	.LBE22:
 4440              	.LBB23:
1363:main.c        ****         }
1364:main.c        ****         
1365:main.c        ****        
1366:main.c        ****         //calculate the pitch of each string based on the current Copedent
1367:main.c        ****         for (int i = 0; i < numStrings; i++)
 4441              		.loc 1 1367 0 is_stmt 1
 4442 1504 0023     		movs	r3, #0
 4443 1506 BB65     		str	r3, [r7, #88]
 4444 1508 B5E1     		b	.L158
 4445              	.L220:
 4446 150a 00BF     		.align	2
 4447              	.L219:
 4448 150c 00000000 		.word	button4Up
 4449 1510 00000000 		.word	editUp
 4450 1514 00000000 		.word	editMode
 4451 1518 00000000 		.word	calibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 104


 4452 151c 04040000 		.word	.LC1
 4453 1520 10040000 		.word	.LC2
 4454 1524 1C040000 		.word	.LC3
 4455 1528 28040000 		.word	.LC4
 4456 152c 00000000 		.word	mainOLEDWaitingToSend
 4457 1530 00000000 		.word	pedals_low
 4458 1534 00000000 		.word	pedals_high
 4459 1538 00000000 		.word	currentCopedent
 4460 153c 00040000 		.word	.LC0
 4461 1540 00000000 		.word	copedentNamesArray
 4462 1544 00000000 		.word	currentNeck
 4463 1548 00000000 		.word	octave
 4464 154c 00000000 		.word	prevOctave
 4465 1550 00000000 		.word	knobs
 4466 1554 00000000 		.word	prevKnobs
 4467              	.L163:
 4468              	.LBB24:
1368:main.c        ****     	{
1369:main.c        ****     		//interpolate ratios for each of the strings
1370:main.c        ****            /*
1371:main.c        ****             float myMappedPos;
1372:main.c        ****             if (dualSlider)
1373:main.c        ****             {
1374:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1375:main.c        ****             }
1376:main.c        ****             else
1377:main.c        ****             {
1378:main.c        ****                 myMappedPos = stringMappedPositions[0];
1379:main.c        ****             }
1380:main.c        **** 
1381:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1382:main.c        ****             */
1383:main.c        ****     		//then apply those ratios to the fundamental frequencies
1384:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4469              		.loc 1 1384 0
 4470 1558 AA4B     		ldr	r3, .L221
 4471 155a 1B68     		ldr	r3, [r3]
 4472 155c AA4A     		ldr	r2, .L221+4
 4473 155e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4474 1560 1A46     		mov	r2, r3
 4475 1562 AA49     		ldr	r1, .L221+8
 4476 1564 1346     		mov	r3, r2
 4477 1566 5B01     		lsls	r3, r3, #5
 4478 1568 1344     		add	r3, r3, r2
 4479 156a 9B00     		lsls	r3, r3, #2
 4480 156c BA6D     		ldr	r2, [r7, #88]
 4481 156e 1344     		add	r3, r3, r2
 4482 1570 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1385:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4483              		.loc 1 1385 0
 4484 1574 A64B     		ldr	r3, .L221+12
 4485 1576 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4486 1578 1A46     		mov	r2, r3
 4487 157a A449     		ldr	r1, .L221+8
 4488 157c 1346     		mov	r3, r2
 4489 157e 5B01     		lsls	r3, r3, #5
 4490 1580 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 105


 4491 1582 9B00     		lsls	r3, r3, #2
 4492 1584 BA6D     		ldr	r2, [r7, #88]
 4493 1586 1344     		add	r3, r3, r2
 4494 1588 3033     		adds	r3, r3, #48
 4495 158a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4496 158e A14B     		ldr	r3, .L221+16
 4497 1590 1B68     		ldr	r3, [r3]	@ float
 4498 1592 1946     		mov	r1, r3
 4499 1594 1046     		mov	r0, r2
 4500 1596 FFF7FEFF 		bl	__aeabi_fmul
 4501 159a 0346     		mov	r3, r0
1384:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4502              		.loc 1 1384 0
 4503 159c 1946     		mov	r1, r3
 4504 159e 2046     		mov	r0, r4
 4505 15a0 FFF7FEFF 		bl	__aeabi_fadd
 4506 15a4 0346     		mov	r3, r0
 4507 15a6 1C46     		mov	r4, r3
1386:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4508              		.loc 1 1386 0
 4509 15a8 994B     		ldr	r3, .L221+12
 4510 15aa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4511 15ac 1A46     		mov	r2, r3
 4512 15ae 9749     		ldr	r1, .L221+8
 4513 15b0 1346     		mov	r3, r2
 4514 15b2 5B01     		lsls	r3, r3, #5
 4515 15b4 1344     		add	r3, r3, r2
 4516 15b6 9B00     		lsls	r3, r3, #2
 4517 15b8 BA6D     		ldr	r2, [r7, #88]
 4518 15ba 1344     		add	r3, r3, r2
 4519 15bc 3C33     		adds	r3, r3, #60
 4520 15be 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4521 15c2 944B     		ldr	r3, .L221+16
 4522 15c4 5B68     		ldr	r3, [r3, #4]	@ float
 4523 15c6 1946     		mov	r1, r3
 4524 15c8 1046     		mov	r0, r2
 4525 15ca FFF7FEFF 		bl	__aeabi_fmul
 4526 15ce 0346     		mov	r3, r0
1385:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4527              		.loc 1 1385 0
 4528 15d0 1946     		mov	r1, r3
 4529 15d2 2046     		mov	r0, r4
 4530 15d4 FFF7FEFF 		bl	__aeabi_fadd
 4531 15d8 0346     		mov	r3, r0
 4532 15da 1C46     		mov	r4, r3
1387:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4533              		.loc 1 1387 0
 4534 15dc 8C4B     		ldr	r3, .L221+12
 4535 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4536 15e0 1A46     		mov	r2, r3
 4537 15e2 8A49     		ldr	r1, .L221+8
 4538 15e4 1346     		mov	r3, r2
 4539 15e6 5B01     		lsls	r3, r3, #5
 4540 15e8 1344     		add	r3, r3, r2
 4541 15ea 9B00     		lsls	r3, r3, #2
 4542 15ec BA6D     		ldr	r2, [r7, #88]
 4543 15ee 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 106


 4544 15f0 4833     		adds	r3, r3, #72
 4545 15f2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4546 15f6 874B     		ldr	r3, .L221+16
 4547 15f8 9B68     		ldr	r3, [r3, #8]	@ float
 4548 15fa 1946     		mov	r1, r3
 4549 15fc 1046     		mov	r0, r2
 4550 15fe FFF7FEFF 		bl	__aeabi_fmul
 4551 1602 0346     		mov	r3, r0
1386:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4552              		.loc 1 1386 0
 4553 1604 1946     		mov	r1, r3
 4554 1606 2046     		mov	r0, r4
 4555 1608 FFF7FEFF 		bl	__aeabi_fadd
 4556 160c 0346     		mov	r3, r0
 4557 160e 1C46     		mov	r4, r3
1388:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4558              		.loc 1 1388 0
 4559 1610 7F4B     		ldr	r3, .L221+12
 4560 1612 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4561 1614 1A46     		mov	r2, r3
 4562 1616 7D49     		ldr	r1, .L221+8
 4563 1618 1346     		mov	r3, r2
 4564 161a 5B01     		lsls	r3, r3, #5
 4565 161c 1344     		add	r3, r3, r2
 4566 161e 9B00     		lsls	r3, r3, #2
 4567 1620 BA6D     		ldr	r2, [r7, #88]
 4568 1622 1344     		add	r3, r3, r2
 4569 1624 5433     		adds	r3, r3, #84
 4570 1626 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4571 162a 7A4B     		ldr	r3, .L221+16
 4572 162c DB68     		ldr	r3, [r3, #12]	@ float
 4573 162e 1946     		mov	r1, r3
 4574 1630 1046     		mov	r0, r2
 4575 1632 FFF7FEFF 		bl	__aeabi_fmul
 4576 1636 0346     		mov	r3, r0
1387:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4577              		.loc 1 1387 0
 4578 1638 1946     		mov	r1, r3
 4579 163a 2046     		mov	r0, r4
 4580 163c FFF7FEFF 		bl	__aeabi_fadd
 4581 1640 0346     		mov	r3, r0
 4582 1642 1C46     		mov	r4, r3
1389:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4583              		.loc 1 1389 0
 4584 1644 724B     		ldr	r3, .L221+12
 4585 1646 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4586 1648 1A46     		mov	r2, r3
 4587 164a 7049     		ldr	r1, .L221+8
 4588 164c 1346     		mov	r3, r2
 4589 164e 5B01     		lsls	r3, r3, #5
 4590 1650 1344     		add	r3, r3, r2
 4591 1652 9B00     		lsls	r3, r3, #2
 4592 1654 BA6D     		ldr	r2, [r7, #88]
 4593 1656 1344     		add	r3, r3, r2
 4594 1658 6033     		adds	r3, r3, #96
 4595 165a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4596 165e 6D4B     		ldr	r3, .L221+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 107


 4597 1660 1B69     		ldr	r3, [r3, #16]	@ float
 4598 1662 1946     		mov	r1, r3
 4599 1664 1046     		mov	r0, r2
 4600 1666 FFF7FEFF 		bl	__aeabi_fmul
 4601 166a 0346     		mov	r3, r0
1388:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4602              		.loc 1 1388 0
 4603 166c 1946     		mov	r1, r3
 4604 166e 2046     		mov	r0, r4
 4605 1670 FFF7FEFF 		bl	__aeabi_fadd
 4606 1674 0346     		mov	r3, r0
 4607 1676 1C46     		mov	r4, r3
1390:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4608              		.loc 1 1390 0
 4609 1678 654B     		ldr	r3, .L221+12
 4610 167a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4611 167c 1A46     		mov	r2, r3
 4612 167e 6349     		ldr	r1, .L221+8
 4613 1680 1346     		mov	r3, r2
 4614 1682 5B01     		lsls	r3, r3, #5
 4615 1684 1344     		add	r3, r3, r2
 4616 1686 9B00     		lsls	r3, r3, #2
 4617 1688 BA6D     		ldr	r2, [r7, #88]
 4618 168a 1344     		add	r3, r3, r2
 4619 168c 7833     		adds	r3, r3, #120
 4620 168e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4621 1692 604B     		ldr	r3, .L221+16
 4622 1694 5B69     		ldr	r3, [r3, #20]	@ float
 4623 1696 1946     		mov	r1, r3
 4624 1698 1046     		mov	r0, r2
 4625 169a FFF7FEFF 		bl	__aeabi_fmul
 4626 169e 0346     		mov	r3, r0
1389:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4627              		.loc 1 1389 0
 4628 16a0 1946     		mov	r1, r3
 4629 16a2 2046     		mov	r0, r4
 4630 16a4 FFF7FEFF 		bl	__aeabi_fadd
 4631 16a8 0346     		mov	r3, r0
 4632 16aa 1C46     		mov	r4, r3
1391:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4633              		.loc 1 1391 0
 4634 16ac 584B     		ldr	r3, .L221+12
 4635 16ae 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4636 16b0 1A46     		mov	r2, r3
 4637 16b2 5649     		ldr	r1, .L221+8
 4638 16b4 1346     		mov	r3, r2
 4639 16b6 5B01     		lsls	r3, r3, #5
 4640 16b8 1344     		add	r3, r3, r2
 4641 16ba 9B00     		lsls	r3, r3, #2
 4642 16bc BA6D     		ldr	r2, [r7, #88]
 4643 16be 1344     		add	r3, r3, r2
 4644 16c0 6C33     		adds	r3, r3, #108
 4645 16c2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4646 16c6 534B     		ldr	r3, .L221+16
 4647 16c8 9B69     		ldr	r3, [r3, #24]	@ float
 4648 16ca 1946     		mov	r1, r3
 4649 16cc 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 108


 4650 16ce FFF7FEFF 		bl	__aeabi_fmul
 4651 16d2 0346     		mov	r3, r0
1390:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4652              		.loc 1 1390 0
 4653 16d4 1946     		mov	r1, r3
 4654 16d6 2046     		mov	r0, r4
 4655 16d8 FFF7FEFF 		bl	__aeabi_fadd
 4656 16dc 0346     		mov	r3, r0
 4657 16de 1C46     		mov	r4, r3
1392:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4658              		.loc 1 1392 0
 4659 16e0 4B4B     		ldr	r3, .L221+12
 4660 16e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4661 16e4 1A46     		mov	r2, r3
 4662 16e6 4949     		ldr	r1, .L221+8
 4663 16e8 1346     		mov	r3, r2
 4664 16ea 5B01     		lsls	r3, r3, #5
 4665 16ec 1344     		add	r3, r3, r2
 4666 16ee 9B00     		lsls	r3, r3, #2
 4667 16f0 BA6D     		ldr	r2, [r7, #88]
 4668 16f2 1344     		add	r3, r3, r2
 4669 16f4 2433     		adds	r3, r3, #36
 4670 16f6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4671 16fa 464B     		ldr	r3, .L221+16
 4672 16fc DB69     		ldr	r3, [r3, #28]	@ float
 4673 16fe 1946     		mov	r1, r3
 4674 1700 1046     		mov	r0, r2
 4675 1702 FFF7FEFF 		bl	__aeabi_fmul
 4676 1706 0346     		mov	r3, r0
1391:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4677              		.loc 1 1391 0
 4678 1708 1946     		mov	r1, r3
 4679 170a 2046     		mov	r0, r4
 4680 170c FFF7FEFF 		bl	__aeabi_fadd
 4681 1710 0346     		mov	r3, r0
 4682 1712 1C46     		mov	r4, r3
1393:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4683              		.loc 1 1393 0
 4684 1714 3E4B     		ldr	r3, .L221+12
 4685 1716 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4686 1718 1A46     		mov	r2, r3
 4687 171a 3C49     		ldr	r1, .L221+8
 4688 171c 1346     		mov	r3, r2
 4689 171e 5B01     		lsls	r3, r3, #5
 4690 1720 1344     		add	r3, r3, r2
 4691 1722 9B00     		lsls	r3, r3, #2
 4692 1724 BA6D     		ldr	r2, [r7, #88]
 4693 1726 1344     		add	r3, r3, r2
 4694 1728 0C33     		adds	r3, r3, #12
 4695 172a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4696 172e 394B     		ldr	r3, .L221+16
 4697 1730 1B6A     		ldr	r3, [r3, #32]	@ float
 4698 1732 1946     		mov	r1, r3
 4699 1734 1046     		mov	r0, r2
 4700 1736 FFF7FEFF 		bl	__aeabi_fmul
 4701 173a 0346     		mov	r3, r0
1392:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 109


 4702              		.loc 1 1392 0
 4703 173c 1946     		mov	r1, r3
 4704 173e 2046     		mov	r0, r4
 4705 1740 FFF7FEFF 		bl	__aeabi_fadd
 4706 1744 0346     		mov	r3, r0
 4707 1746 1C46     		mov	r4, r3
1394:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4708              		.loc 1 1394 0
 4709 1748 314B     		ldr	r3, .L221+12
 4710 174a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4711 174c 1A46     		mov	r2, r3
 4712 174e 2F49     		ldr	r1, .L221+8
 4713 1750 1346     		mov	r3, r2
 4714 1752 5B01     		lsls	r3, r3, #5
 4715 1754 1344     		add	r3, r3, r2
 4716 1756 9B00     		lsls	r3, r3, #2
 4717 1758 BA6D     		ldr	r2, [r7, #88]
 4718 175a 1344     		add	r3, r3, r2
 4719 175c 1833     		adds	r3, r3, #24
 4720 175e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4721 1762 2C4B     		ldr	r3, .L221+16
 4722 1764 5B6A     		ldr	r3, [r3, #36]	@ float
 4723 1766 1946     		mov	r1, r3
 4724 1768 1046     		mov	r0, r2
 4725 176a FFF7FEFF 		bl	__aeabi_fmul
 4726 176e 0346     		mov	r3, r0
1384:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4727              		.loc 1 1384 0
 4728 1770 1946     		mov	r1, r3
 4729 1772 2046     		mov	r0, r4
 4730 1774 FFF7FEFF 		bl	__aeabi_fadd
 4731 1778 0346     		mov	r3, r0
 4732 177a 3B62     		str	r3, [r7, #32]	@ float
1395:main.c        **** 
1396:main.c        ****             
1397:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4733              		.loc 1 1397 0
 4734 177c 244B     		ldr	r3, .L221+12
 4735 177e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4736 1780 1A46     		mov	r2, r3
 4737 1782 2249     		ldr	r1, .L221+8
 4738 1784 1346     		mov	r3, r2
 4739 1786 5B01     		lsls	r3, r3, #5
 4740 1788 1344     		add	r3, r3, r2
 4741 178a 9B00     		lsls	r3, r3, #2
 4742 178c BA6D     		ldr	r2, [r7, #88]
 4743 178e 1344     		add	r3, r3, r2
 4744 1790 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4745 1794 FB61     		str	r3, [r7, #28]	@ float
1398:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4746              		.loc 1 1398 0
 4747 1796 F869     		ldr	r0, [r7, #28]	@ float
 4748 1798 FFF7FEFF 		bl	__aeabi_f2iz
 4749 179c 0146     		mov	r1, r0
 4750 179e 1E4A     		ldr	r2, .L221+20
 4751 17a0 BB6D     		ldr	r3, [r7, #88]
 4752 17a2 42F82310 		str	r1, [r2, r3, lsl #2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 110


1399:main.c        ****             
1400:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 4753              		.loc 1 1400 0
 4754 17a6 1D4B     		ldr	r3, .L221+24
 4755 17a8 1C68     		ldr	r4, [r3]	@ float
 4756 17aa 386A     		ldr	r0, [r7, #32]	@ float
 4757 17ac FFF7FEFF 		bl	mtof
 4758 17b0 0346     		mov	r3, r0
 4759 17b2 1946     		mov	r1, r3
 4760 17b4 2046     		mov	r0, r4
 4761 17b6 FFF7FEFF 		bl	__aeabi_fmul
 4762 17ba 0346     		mov	r3, r0
 4763 17bc 1846     		mov	r0, r3
 4764 17be FFF7FEFF 		bl	ftom
 4765 17c2 B861     		str	r0, [r7, #24]	@ float
1401:main.c        ****             
1402:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 4766              		.loc 1 1402 0
 4767 17c4 144A     		ldr	r2, .L221+20
 4768 17c6 BB6D     		ldr	r3, [r7, #88]
 4769 17c8 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4770 17cc 1846     		mov	r0, r3
 4771 17ce FFF7FEFF 		bl	__aeabi_i2f
 4772 17d2 0346     		mov	r3, r0
 4773 17d4 1946     		mov	r1, r3
 4774 17d6 B869     		ldr	r0, [r7, #24]	@ float
 4775 17d8 FFF7FEFF 		bl	__aeabi_fsub
 4776 17dc 0346     		mov	r3, r0
 4777 17de 7B61     		str	r3, [r7, #20]	@ float
1403:main.c        ****             
1404:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 4778              		.loc 1 1404 0
 4779 17e0 0F49     		ldr	r1, .L221+28
 4780 17e2 7869     		ldr	r0, [r7, #20]	@ float
 4781 17e4 FFF7FEFF 		bl	__aeabi_fmul
 4782 17e8 0346     		mov	r3, r0
 4783 17ea 4FF08C41 		mov	r1, #1174405120
 4784 17ee 1846     		mov	r0, r3
 4785 17f0 FFF7FEFF 		bl	__aeabi_fadd
 4786 17f4 0346     		mov	r3, r0
 4787 17f6 3B61     		str	r3, [r7, #16]	@ float
1405:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 4788              		.loc 1 1405 0
 4789 17f8 0A4A     		ldr	r2, .L221+32
 4790 17fa BB6D     		ldr	r3, [r7, #88]
 4791 17fc 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4792 1800 12E0     		b	.L222
 4793              	.L223:
 4794 1802 00BF     		.align	2
 4795              	.L221:
 4796 1804 00000000 		.word	currentNeck
 4797 1808 00000000 		.word	necks
 4798 180c 00000000 		.word	copedent
 4799 1810 00000000 		.word	currentCopedent
 4800 1814 00000000 		.word	pedals_float
 4801 1818 00000000 		.word	openStringMIDI_Int
 4802 181c 00000000 		.word	invStringMappedPositions
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 111


 4803 1820 ABAA2A43 		.word	1126869675
 4804 1824 00000000 		.word	prevStringPitchBend
 4805              	.L222:
 4806 1828 3969     		ldr	r1, [r7, #16]	@ float
 4807 182a 1846     		mov	r0, r3
 4808 182c FFF7FEFF 		bl	__aeabi_fcmpeq
 4809 1830 0346     		mov	r3, r0
 4810 1832 002B     		cmp	r3, #0
 4811 1834 0AD1     		bne	.L159
1406:main.c        ****             {
1407:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 4812              		.loc 1 1407 0
 4813 1836 3869     		ldr	r0, [r7, #16]	@ float
 4814 1838 FFF7FEFF 		bl	__aeabi_f2uiz
 4815 183c 0346     		mov	r3, r0
 4816 183e 1A46     		mov	r2, r3
 4817 1840 BB6D     		ldr	r3, [r7, #88]
 4818 1842 0133     		adds	r3, r3, #1
 4819 1844 1946     		mov	r1, r3
 4820 1846 1046     		mov	r0, r2
 4821 1848 FFF7FEFF 		bl	sendMIDIPitchBend
 4822              	.L159:
1408:main.c        ****             }
1409:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 4823              		.loc 1 1409 0
 4824 184c A449     		ldr	r1, .L224
 4825 184e BB6D     		ldr	r3, [r7, #88]
 4826 1850 3A69     		ldr	r2, [r7, #16]	@ float
 4827 1852 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1410:main.c        ****             if (tempMIDI > 0.0f)
 4828              		.loc 1 1410 0
 4829 1856 4FF00001 		mov	r1, #0
 4830 185a 386A     		ldr	r0, [r7, #32]	@ float
 4831 185c FFF7FEFF 		bl	__aeabi_fcmpgt
 4832 1860 0346     		mov	r3, r0
 4833 1862 002B     		cmp	r3, #0
 4834 1864 04D0     		beq	.L161
1411:main.c        ****             {
1412:main.c        ****                 stringMIDI[i] = tempMIDI;
 4835              		.loc 1 1412 0
 4836 1866 9F49     		ldr	r1, .L224+4
 4837 1868 BB6D     		ldr	r3, [r7, #88]
 4838 186a 3A6A     		ldr	r2, [r7, #32]	@ float
 4839 186c 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4840              	.L161:
 4841              	.LBE24:
1367:main.c        ****     	{
 4842              		.loc 1 1367 0 discriminator 2
 4843 1870 BB6D     		ldr	r3, [r7, #88]
 4844 1872 0133     		adds	r3, r3, #1
 4845 1874 BB65     		str	r3, [r7, #88]
 4846              	.L158:
1367:main.c        ****     	{
 4847              		.loc 1 1367 0 is_stmt 0 discriminator 1
 4848 1876 9C4B     		ldr	r3, .L224+8
 4849 1878 1B68     		ldr	r3, [r3]
 4850 187a BA6D     		ldr	r2, [r7, #88]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 112


 4851 187c 9A42     		cmp	r2, r3
 4852 187e FFF66BAE 		blt	.L163
 4853              	.LBE23:
1413:main.c        ****             }
1414:main.c        ****     	}
1415:main.c        **** 
1416:main.c        ****         if (encoder_button_Read())
 4854              		.loc 1 1416 0 is_stmt 1
 4855 1882 FFF7FEFF 		bl	encoder_button_Read
 4856 1886 0346     		mov	r3, r0
 4857 1888 002B     		cmp	r3, #0
 4858 188a 10D0     		beq	.L164
1417:main.c        ****         {
1418:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 4859              		.loc 1 1418 0
 4860 188c FFF7FEFF 		bl	QuadDec_1_GetCounter
 4861 1890 0346     		mov	r3, r0
 4862 1892 9800     		lsls	r0, r3, #2
 4863 1894 954B     		ldr	r3, .L224+12
 4864 1896 1B68     		ldr	r3, [r3]
 4865 1898 944A     		ldr	r2, .L224+12
 4866 189a 1268     		ldr	r2, [r2]
 4867 189c 9449     		ldr	r1, .L224+16
 4868 189e 8A5C     		ldrb	r2, [r1, r2]
 4869 18a0 D1B2     		uxtb	r1, r2
 4870 18a2 C2B2     		uxtb	r2, r0
 4871 18a4 0A44     		add	r2, r2, r1
 4872 18a6 D1B2     		uxtb	r1, r2
 4873 18a8 914A     		ldr	r2, .L224+16
 4874 18aa D154     		strb	r1, [r2, r3]
 4875 18ac 0FE0     		b	.L165
 4876              	.L164:
1419:main.c        ****         }
1420:main.c        ****         else
1421:main.c        ****         {
1422:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 4877              		.loc 1 1422 0
 4878 18ae FFF7FEFF 		bl	QuadDec_1_GetCounter
 4879 18b2 0346     		mov	r3, r0
 4880 18b4 1846     		mov	r0, r3
 4881 18b6 8D4B     		ldr	r3, .L224+12
 4882 18b8 1B68     		ldr	r3, [r3]
 4883 18ba 8C4A     		ldr	r2, .L224+12
 4884 18bc 1268     		ldr	r2, [r2]
 4885 18be 8C49     		ldr	r1, .L224+16
 4886 18c0 8A5C     		ldrb	r2, [r1, r2]
 4887 18c2 D1B2     		uxtb	r1, r2
 4888 18c4 C2B2     		uxtb	r2, r0
 4889 18c6 0A44     		add	r2, r2, r1
 4890 18c8 D1B2     		uxtb	r1, r2
 4891 18ca 894A     		ldr	r2, .L224+16
 4892 18cc D154     		strb	r1, [r2, r3]
 4893              	.L165:
1423:main.c        ****         }
1424:main.c        ****         QuadDec_1_SetCounter(0);
 4894              		.loc 1 1424 0
 4895 18ce 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 113


 4896 18d0 FFF7FEFF 		bl	QuadDec_1_SetCounter
1425:main.c        ****         
1426:main.c        **** 
1427:main.c        ****         
1428:main.c        ****         if (USB_check_flag)
 4897              		.loc 1 1428 0
 4898 18d4 874B     		ldr	r3, .L224+20
 4899 18d6 1B78     		ldrb	r3, [r3]
 4900 18d8 DBB2     		uxtb	r3, r3
 4901 18da 002B     		cmp	r3, #0
 4902 18dc 01D0     		beq	.L166
1429:main.c        ****         {
1430:main.c        ****             checkUSB_Vbus();
 4903              		.loc 1 1430 0
 4904 18de FFF7FEFF 		bl	checkUSB_Vbus
 4905              	.L166:
1431:main.c        ****         }
1432:main.c        ****         //only service the USB bus if there is a computer plugged in
1433:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4906              		.loc 1 1433 0
 4907 18e2 854B     		ldr	r3, .L224+24
 4908 18e4 1B78     		ldrb	r3, [r3]
 4909 18e6 DBB2     		uxtb	r3, r3
 4910 18e8 002B     		cmp	r3, #0
 4911 18ea 13D0     		beq	.L203
 4912              		.loc 1 1433 0 is_stmt 0 discriminator 1
 4913 18ec FFF7FEFF 		bl	USB_VBusPresent
 4914 18f0 0346     		mov	r3, r0
 4915 18f2 002B     		cmp	r3, #0
 4916 18f4 0ED0     		beq	.L203
1434:main.c        ****         {
1435:main.c        ****             if (midiSent > 64)
 4917              		.loc 1 1435 0 is_stmt 1
 4918 18f6 814B     		ldr	r3, .L224+28
 4919 18f8 1B88     		ldrh	r3, [r3]
 4920 18fa 402B     		cmp	r3, #64
 4921 18fc 05D9     		bls	.L168
1436:main.c        ****             {
1437:main.c        ****                 midiOverflow++;
 4922              		.loc 1 1437 0
 4923 18fe 804B     		ldr	r3, .L224+32
 4924 1900 1B88     		ldrh	r3, [r3]
 4925 1902 0133     		adds	r3, r3, #1
 4926 1904 9AB2     		uxth	r2, r3
 4927 1906 7E4B     		ldr	r3, .L224+32
 4928 1908 1A80     		strh	r2, [r3]	@ movhi
 4929              	.L168:
1438:main.c        ****             }
1439:main.c        ****             midiSent = 0;
 4930              		.loc 1 1439 0
 4931 190a 7C4B     		ldr	r3, .L224+28
 4932 190c 0022     		movs	r2, #0
 4933 190e 1A80     		strh	r2, [r3]	@ movhi
1440:main.c        ****             USB_service();
 4934              		.loc 1 1440 0
 4935 1910 FFF7FEFF 		bl	USB_service
 4936              	.L203:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 114


1441:main.c        ****         }
1442:main.c        **** 
1443:main.c        ****         
1444:main.c        ****         /*
1445:main.c        ****         for (int i = 0; i < 10; i++)
1446:main.c        ****         {
1447:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1448:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1449:main.c        ****         }
1450:main.c        ****         
1451:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1452:main.c        ****         for (int i = 0; i < 4; i++)
1453:main.c        ****         {
1454:main.c        ****             myArray[i+21] = knobs[i];
1455:main.c        ****         }
1456:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1457:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1458:main.c        ****         */
1459:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1460:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4937              		.loc 1 1460 0
 4938 1914 00BF     		nop
 4939              	.L172:
 4940              		.loc 1 1460 0 is_stmt 0 discriminator 7
 4941 1916 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4942 191a 0346     		mov	r3, r0
 4943 191c 03F00103 		and	r3, r3, #1
 4944 1920 002B     		cmp	r3, #0
 4945 1922 06D1     		bne	.L169
 4946              		.loc 1 1460 0 discriminator 2
 4947 1924 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4948 1928 0346     		mov	r3, r0
 4949 192a 03F01003 		and	r3, r3, #16
 4950 192e 002B     		cmp	r3, #0
 4951 1930 01D0     		beq	.L170
 4952              	.L169:
 4953              		.loc 1 1460 0 discriminator 3
 4954 1932 0123     		movs	r3, #1
 4955 1934 00E0     		b	.L171
 4956              	.L170:
 4957              		.loc 1 1460 0 discriminator 4
 4958 1936 0023     		movs	r3, #0
 4959              	.L171:
 4960              		.loc 1 1460 0 discriminator 6
 4961 1938 002B     		cmp	r3, #0
 4962 193a ECD0     		beq	.L172
1461:main.c        ****         {
1462:main.c        ****             ;
1463:main.c        ****         }
1464:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 4963              		.loc 1 1464 0 is_stmt 1
 4964 193c 714B     		ldr	r3, .L224+36
 4965 193e 1B78     		ldrb	r3, [r3]
 4966 1940 DBB2     		uxtb	r3, r3
 4967 1942 012B     		cmp	r3, #1
 4968 1944 56D1     		bne	.L173
1465:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 115


1466:main.c        ****             if (sendMessageEnd) //send end message
 4969              		.loc 1 1466 0
 4970 1946 704B     		ldr	r3, .L224+40
 4971 1948 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4972 194a 002B     		cmp	r3, #0
 4973 194c 1DD0     		beq	.L174
1467:main.c        ****             {
1468:main.c        ****                 myArray[0] = 253;
 4974              		.loc 1 1468 0
 4975 194e 6F4B     		ldr	r3, .L224+44
 4976 1950 FD22     		movs	r2, #253
 4977 1952 1A70     		strb	r2, [r3]
1469:main.c        ****                 myArray[1] = presetNumberToWrite;
 4978              		.loc 1 1469 0
 4979 1954 6E4B     		ldr	r3, .L224+48
 4980 1956 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4981 1958 6C4B     		ldr	r3, .L224+44
 4982 195a 5A70     		strb	r2, [r3, #1]
1470:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4983              		.loc 1 1470 0
 4984 195c 6C4B     		ldr	r3, .L224+48
 4985 195e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4986 1960 1A46     		mov	r2, r3
 4987 1962 6C4B     		ldr	r3, .L224+52
 4988 1964 1A60     		str	r2, [r3]
1471:main.c        ****                 //display previous preset as loaded
1472:main.c        ****                 displayCurrentPresetName();
 4989              		.loc 1 1472 0
 4990 1966 FFF7FEFF 		bl	displayCurrentPresetName
1473:main.c        ****                 //OLED_invert(0);
1474:main.c        ****                 sendMessageEnd = 0;
 4991              		.loc 1 1474 0
 4992 196a 674B     		ldr	r3, .L224+40
 4993 196c 0022     		movs	r2, #0
 4994 196e 1A70     		strb	r2, [r3]
1475:main.c        ****                 sendingMessage = 0;
 4995              		.loc 1 1475 0
 4996 1970 644B     		ldr	r3, .L224+36
 4997 1972 0022     		movs	r2, #0
 4998 1974 1A70     		strb	r2, [r3]
1476:main.c        ****                 messageArraySendCount = 0;
 4999              		.loc 1 1476 0
 5000 1976 684B     		ldr	r3, .L224+56
 5001 1978 0022     		movs	r2, #0
 5002 197a 1A80     		strh	r2, [r3]	@ movhi
1477:main.c        ****                 myArray[30] = 254;
 5003              		.loc 1 1477 0
 5004 197c 634B     		ldr	r3, .L224+44
 5005 197e FE22     		movs	r2, #254
 5006 1980 9A77     		strb	r2, [r3, #30]
1478:main.c        ****                 myArray[31] = 253;
 5007              		.loc 1 1478 0
 5008 1982 624B     		ldr	r3, .L224+44
 5009 1984 FD22     		movs	r2, #253
 5010 1986 DA77     		strb	r2, [r3, #31]
 5011 1988 3BE1     		b	.L180
 5012              	.L174:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 116


1479:main.c        ****                 
1480:main.c        ****             }
1481:main.c        ****             else //send chunks
1482:main.c        ****             {
1483:main.c        ****                 //send the next preset Chunkkkkk
1484:main.c        ****                 myArray[0] = 2;
 5013              		.loc 1 1484 0
 5014 198a 604B     		ldr	r3, .L224+44
 5015 198c 0222     		movs	r2, #2
 5016 198e 1A70     		strb	r2, [r3]
1485:main.c        ****                 myArray[1] = presetNumberToWrite;
 5017              		.loc 1 1485 0
 5018 1990 5F4B     		ldr	r3, .L224+48
 5019 1992 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5020 1994 5D4B     		ldr	r3, .L224+44
 5021 1996 5A70     		strb	r2, [r3, #1]
 5022              	.LBB25:
1486:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5023              		.loc 1 1486 0
 5024 1998 0223     		movs	r3, #2
 5025 199a 7B65     		str	r3, [r7, #84]
 5026 199c 20E0     		b	.L176
 5027              	.L179:
1487:main.c        ****                 {
1488:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5028              		.loc 1 1488 0
 5029 199e 5E4B     		ldr	r3, .L224+56
 5030 19a0 1A88     		ldrh	r2, [r3]
 5031 19a2 5E4B     		ldr	r3, .L224+60
 5032 19a4 1B88     		ldrh	r3, [r3]
 5033 19a6 9A42     		cmp	r2, r3
 5034 19a8 0FD2     		bcs	.L177
1489:main.c        ****                     {
1490:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5035              		.loc 1 1490 0
 5036 19aa 5B4B     		ldr	r3, .L224+56
 5037 19ac 1B88     		ldrh	r3, [r3]
 5038 19ae 5A1C     		adds	r2, r3, #1
 5039 19b0 91B2     		uxth	r1, r2
 5040 19b2 594A     		ldr	r2, .L224+56
 5041 19b4 1180     		strh	r1, [r2]	@ movhi
 5042 19b6 1A46     		mov	r2, r3
 5043 19b8 594B     		ldr	r3, .L224+64
 5044 19ba 9B5C     		ldrb	r3, [r3, r2]
 5045 19bc D9B2     		uxtb	r1, r3
 5046 19be 534A     		ldr	r2, .L224+44
 5047 19c0 7B6D     		ldr	r3, [r7, #84]
 5048 19c2 1344     		add	r3, r3, r2
 5049 19c4 0A46     		mov	r2, r1
 5050 19c6 1A70     		strb	r2, [r3]
 5051 19c8 07E0     		b	.L178
 5052              	.L177:
1491:main.c        ****                     }
1492:main.c        ****                     else
1493:main.c        ****                     {
1494:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5053              		.loc 1 1494 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 117


 5054 19ca 504A     		ldr	r2, .L224+44
 5055 19cc 7B6D     		ldr	r3, [r7, #84]
 5056 19ce 1344     		add	r3, r3, r2
 5057 19d0 EE22     		movs	r2, #238
 5058 19d2 1A70     		strb	r2, [r3]
1495:main.c        ****                         sendMessageEnd = 1;
 5059              		.loc 1 1495 0
 5060 19d4 4C4B     		ldr	r3, .L224+40
 5061 19d6 0122     		movs	r2, #1
 5062 19d8 1A70     		strb	r2, [r3]
 5063              	.L178:
1486:main.c        ****                 {
 5064              		.loc 1 1486 0 discriminator 2
 5065 19da 7B6D     		ldr	r3, [r7, #84]
 5066 19dc 0133     		adds	r3, r3, #1
 5067 19de 7B65     		str	r3, [r7, #84]
 5068              	.L176:
1486:main.c        ****                 {
 5069              		.loc 1 1486 0 is_stmt 0 discriminator 1
 5070 19e0 7B6D     		ldr	r3, [r7, #84]
 5071 19e2 1D2B     		cmp	r3, #29
 5072 19e4 DBD9     		bls	.L179
 5073              	.LBE25:
1496:main.c        ****                     }
1497:main.c        ****                 }
1498:main.c        ****                 myArray[30] = 254;
 5074              		.loc 1 1498 0 is_stmt 1
 5075 19e6 494B     		ldr	r3, .L224+44
 5076 19e8 FE22     		movs	r2, #254
 5077 19ea 9A77     		strb	r2, [r3, #30]
1499:main.c        ****                 myArray[31] = 253;
 5078              		.loc 1 1499 0
 5079 19ec 474B     		ldr	r3, .L224+44
 5080 19ee FD22     		movs	r2, #253
 5081 19f0 DA77     		strb	r2, [r3, #31]
 5082 19f2 06E1     		b	.L180
 5083              	.L173:
1500:main.c        ****             }    
1501:main.c        ****         }
1502:main.c        ****         else if (sendKnobs)
 5084              		.loc 1 1502 0
 5085 19f4 4B4B     		ldr	r3, .L224+68
 5086 19f6 1B78     		ldrb	r3, [r3]
 5087 19f8 DBB2     		uxtb	r3, r3
 5088 19fa 002B     		cmp	r3, #0
 5089 19fc 69D0     		beq	.L181
1503:main.c        ****         {
1504:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 5090              		.loc 1 1504 0
 5091 19fe 434B     		ldr	r3, .L224+44
 5092 1a00 0322     		movs	r2, #3
 5093 1a02 1A70     		strb	r2, [r3]
 5094              	.LBB26:
1505:main.c        ****             for (int i = 0; i < 8; i++)
 5095              		.loc 1 1505 0
 5096 1a04 0023     		movs	r3, #0
 5097 1a06 3B65     		str	r3, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 118


 5098 1a08 0AE0     		b	.L182
 5099              	.L183:
1506:main.c        ****             {
1507:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 5100              		.loc 1 1507 0 discriminator 3
 5101 1a0a 3B6D     		ldr	r3, [r7, #80]
 5102 1a0c 0133     		adds	r3, r3, #1
 5103 1a0e 4649     		ldr	r1, .L224+72
 5104 1a10 3A6D     		ldr	r2, [r7, #80]
 5105 1a12 0A44     		add	r2, r2, r1
 5106 1a14 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5107 1a16 3D4A     		ldr	r2, .L224+44
 5108 1a18 D154     		strb	r1, [r2, r3]
1505:main.c        ****             for (int i = 0; i < 8; i++)
 5109              		.loc 1 1505 0 discriminator 3
 5110 1a1a 3B6D     		ldr	r3, [r7, #80]
 5111 1a1c 0133     		adds	r3, r3, #1
 5112 1a1e 3B65     		str	r3, [r7, #80]
 5113              	.L182:
1505:main.c        ****             for (int i = 0; i < 8; i++)
 5114              		.loc 1 1505 0 is_stmt 0 discriminator 1
 5115 1a20 3B6D     		ldr	r3, [r7, #80]
 5116 1a22 072B     		cmp	r3, #7
 5117 1a24 F1DD     		ble	.L183
 5118              	.LBE26:
 5119              	.LBB27:
1508:main.c        ****             }
1509:main.c        ****             for (int i = 0; i < 4; i++)
 5120              		.loc 1 1509 0 is_stmt 1
 5121 1a26 0023     		movs	r3, #0
 5122 1a28 FB64     		str	r3, [r7, #76]
 5123 1a2a 0AE0     		b	.L184
 5124              	.L185:
1510:main.c        ****             {
1511:main.c        ****                 myArray[i + 9] = knobs[i];
 5125              		.loc 1 1511 0 discriminator 3
 5126 1a2c FB6C     		ldr	r3, [r7, #76]
 5127 1a2e 0933     		adds	r3, r3, #9
 5128 1a30 3E49     		ldr	r1, .L224+76
 5129 1a32 FA6C     		ldr	r2, [r7, #76]
 5130 1a34 0A44     		add	r2, r2, r1
 5131 1a36 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5132 1a38 344A     		ldr	r2, .L224+44
 5133 1a3a D154     		strb	r1, [r2, r3]
1509:main.c        ****             {
 5134              		.loc 1 1509 0 discriminator 3
 5135 1a3c FB6C     		ldr	r3, [r7, #76]
 5136 1a3e 0133     		adds	r3, r3, #1
 5137 1a40 FB64     		str	r3, [r7, #76]
 5138              	.L184:
1509:main.c        ****             {
 5139              		.loc 1 1509 0 is_stmt 0 discriminator 1
 5140 1a42 FB6C     		ldr	r3, [r7, #76]
 5141 1a44 032B     		cmp	r3, #3
 5142 1a46 F1DD     		ble	.L185
 5143              	.LBE27:
 5144              	.LBB28:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 119


1512:main.c        ****             }
1513:main.c        ****             for (int i = 0; i < 10; i++)
 5145              		.loc 1 1513 0 is_stmt 1
 5146 1a48 0023     		movs	r3, #0
 5147 1a4a BB64     		str	r3, [r7, #72]
 5148 1a4c 0AE0     		b	.L186
 5149              	.L187:
1514:main.c        ****             {
1515:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5150              		.loc 1 1515 0 discriminator 3
 5151 1a4e BB6C     		ldr	r3, [r7, #72]
 5152 1a50 0D33     		adds	r3, r3, #13
 5153 1a52 3749     		ldr	r1, .L224+80
 5154 1a54 BA6C     		ldr	r2, [r7, #72]
 5155 1a56 0A44     		add	r2, r2, r1
 5156 1a58 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5157 1a5a 2C4A     		ldr	r2, .L224+44
 5158 1a5c D154     		strb	r1, [r2, r3]
1513:main.c        ****             {
 5159              		.loc 1 1513 0 discriminator 3
 5160 1a5e BB6C     		ldr	r3, [r7, #72]
 5161 1a60 0133     		adds	r3, r3, #1
 5162 1a62 BB64     		str	r3, [r7, #72]
 5163              	.L186:
1513:main.c        ****             {
 5164              		.loc 1 1513 0 is_stmt 0 discriminator 1
 5165 1a64 BB6C     		ldr	r3, [r7, #72]
 5166 1a66 092B     		cmp	r3, #9
 5167 1a68 F1DD     		ble	.L187
 5168              	.LBE28:
1516:main.c        ****             }
1517:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5169              		.loc 1 1517 0 is_stmt 1
 5170 1a6a 324B     		ldr	r3, .L224+84
 5171 1a6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5172 1a6e 1B01     		lsls	r3, r3, #4
 5173 1a70 5AB2     		sxtb	r2, r3
 5174 1a72 314B     		ldr	r3, .L224+88
 5175 1a74 1B68     		ldr	r3, [r3]
 5176 1a76 5BB2     		sxtb	r3, r3
 5177 1a78 1343     		orrs	r3, r3, r2
 5178 1a7a 5AB2     		sxtb	r2, r3
 5179 1a7c 2F4B     		ldr	r3, .L224+92
 5180 1a7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5181 1a80 5B01     		lsls	r3, r3, #5
 5182 1a82 5BB2     		sxtb	r3, r3
 5183 1a84 1343     		orrs	r3, r3, r2
 5184 1a86 5AB2     		sxtb	r2, r3
 5185 1a88 2D4B     		ldr	r3, .L224+96
 5186 1a8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5187 1a8c 9B01     		lsls	r3, r3, #6
 5188 1a8e 5BB2     		sxtb	r3, r3
 5189 1a90 1343     		orrs	r3, r3, r2
 5190 1a92 5BB2     		sxtb	r3, r3
 5191 1a94 DAB2     		uxtb	r2, r3
 5192 1a96 1D4B     		ldr	r3, .L224+44
 5193 1a98 1A76     		strb	r2, [r3, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 120


1518:main.c        ****             myArray[25] = patchNum;
 5194              		.loc 1 1518 0
 5195 1a9a 2A4B     		ldr	r3, .L224+100
 5196 1a9c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5197 1a9e 1B4B     		ldr	r3, .L224+44
 5198 1aa0 5A76     		strb	r2, [r3, #25]
1519:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5199              		.loc 1 1519 0
 5200 1aa2 294B     		ldr	r3, .L224+104
 5201 1aa4 B3F90030 		ldrsh	r3, [r3]
 5202 1aa8 1B12     		asrs	r3, r3, #8
 5203 1aaa 1BB2     		sxth	r3, r3
 5204 1aac DAB2     		uxtb	r2, r3
 5205 1aae 174B     		ldr	r3, .L224+44
 5206 1ab0 9A76     		strb	r2, [r3, #26]
1520:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5207              		.loc 1 1520 0
 5208 1ab2 254B     		ldr	r3, .L224+104
 5209 1ab4 B3F90030 		ldrsh	r3, [r3]
 5210 1ab8 DAB2     		uxtb	r2, r3
 5211 1aba 144B     		ldr	r3, .L224+44
 5212 1abc DA76     		strb	r2, [r3, #27]
1521:main.c        ****             myArray[30] = 254;
 5213              		.loc 1 1521 0
 5214 1abe 134B     		ldr	r3, .L224+44
 5215 1ac0 FE22     		movs	r2, #254
 5216 1ac2 9A77     		strb	r2, [r3, #30]
1522:main.c        ****             myArray[31] = 253;
 5217              		.loc 1 1522 0
 5218 1ac4 114B     		ldr	r3, .L224+44
 5219 1ac6 FD22     		movs	r2, #253
 5220 1ac8 DA77     		strb	r2, [r3, #31]
1523:main.c        ****             
1524:main.c        ****             
1525:main.c        ****             sendKnobs = 0;
 5221              		.loc 1 1525 0
 5222 1aca 164B     		ldr	r3, .L224+68
 5223 1acc 0022     		movs	r2, #0
 5224 1ace 1A70     		strb	r2, [r3]
 5225 1ad0 97E0     		b	.L180
 5226              	.L181:
1526:main.c        ****         }
1527:main.c        ****         else
1528:main.c        ****         {
1529:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5227              		.loc 1 1529 0
 5228 1ad2 0E4B     		ldr	r3, .L224+44
 5229 1ad4 0122     		movs	r2, #1
 5230 1ad6 1A70     		strb	r2, [r3]
 5231              	.LBB29:
1530:main.c        ****             for (int i = 0; i < 12; i++)
 5232              		.loc 1 1530 0
 5233 1ad8 0023     		movs	r3, #0
 5234 1ada 7B64     		str	r3, [r7, #68]
 5235 1adc 5BE0     		b	.L188
 5236              	.L225:
 5237 1ade 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 121


 5238              	.L224:
 5239 1ae0 00000000 		.word	prevStringPitchBend
 5240 1ae4 00000000 		.word	stringMIDI
 5241 1ae8 00000000 		.word	numStrings
 5242 1aec 00000000 		.word	encoderNum
 5243 1af0 00000000 		.word	encoderVal
 5244 1af4 00000000 		.word	USB_check_flag
 5245 1af8 00000000 		.word	USB_active
 5246 1afc 00000000 		.word	midiSent
 5247 1b00 00000000 		.word	midiOverflow
 5248 1b04 00000000 		.word	sendingMessage
 5249 1b08 00000000 		.word	sendMessageEnd
 5250 1b0c 00000000 		.word	myArray
 5251 1b10 00000000 		.word	presetNumberToWrite
 5252 1b14 00000000 		.word	currentPresetSelection
 5253 1b18 00000000 		.word	messageArraySendCount
 5254 1b1c 00000000 		.word	messageArraySize
 5255 1b20 00000000 		.word	presetArray
 5256 1b24 00000000 		.word	sendKnobs
 5257 1b28 00000000 		.word	macroKnobValues
 5258 1b2c 00000000 		.word	knobs
 5259 1b30 00000000 		.word	pedals8bit
 5260 1b34 00000000 		.word	voice
 5261 1b38 00000000 		.word	octave
 5262 1b3c 00000000 		.word	dualSlider
 5263 1b40 00000000 		.word	neck
 5264 1b44 00000000 		.word	patchNum
 5265 1b48 00000000 		.word	processed_volumePedal
 5266              	.L189:
 5267              	.LBB30:
1531:main.c        ****             {
1532:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5268              		.loc 1 1532 0 discriminator 3
 5269 1b4c 664A     		ldr	r2, .L226
 5270 1b4e 7B6C     		ldr	r3, [r7, #68]
 5271 1b50 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5272 1b54 4FF08841 		mov	r1, #1140850688
 5273 1b58 1846     		mov	r0, r3
 5274 1b5a FFF7FEFF 		bl	__aeabi_fmul
 5275 1b5e 0346     		mov	r3, r0
 5276 1b60 1846     		mov	r0, r3
 5277 1b62 FFF7FEFF 		bl	roundf
 5278 1b66 0346     		mov	r3, r0
 5279 1b68 1846     		mov	r0, r3
 5280 1b6a FFF7FEFF 		bl	__aeabi_f2iz
 5281 1b6e 0346     		mov	r3, r0
 5282 1b70 FB60     		str	r3, [r7, #12]
1533:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5283              		.loc 1 1533 0 discriminator 3
 5284 1b72 7B6C     		ldr	r3, [r7, #68]
 5285 1b74 5B00     		lsls	r3, r3, #1
 5286 1b76 0133     		adds	r3, r3, #1
 5287 1b78 FA68     		ldr	r2, [r7, #12]
 5288 1b7a 1212     		asrs	r2, r2, #8
 5289 1b7c D1B2     		uxtb	r1, r2
 5290 1b7e 5B4A     		ldr	r2, .L226+4
 5291 1b80 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 122


1534:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5292              		.loc 1 1534 0 discriminator 3
 5293 1b82 7B6C     		ldr	r3, [r7, #68]
 5294 1b84 0133     		adds	r3, r3, #1
 5295 1b86 5B00     		lsls	r3, r3, #1
 5296 1b88 FA68     		ldr	r2, [r7, #12]
 5297 1b8a D1B2     		uxtb	r1, r2
 5298 1b8c 574A     		ldr	r2, .L226+4
 5299 1b8e D154     		strb	r1, [r2, r3]
 5300              	.LBE30:
1530:main.c        ****             {
 5301              		.loc 1 1530 0 discriminator 3
 5302 1b90 7B6C     		ldr	r3, [r7, #68]
 5303 1b92 0133     		adds	r3, r3, #1
 5304 1b94 7B64     		str	r3, [r7, #68]
 5305              	.L188:
1530:main.c        ****             {
 5306              		.loc 1 1530 0 is_stmt 0 discriminator 1
 5307 1b96 7B6C     		ldr	r3, [r7, #68]
 5308 1b98 0B2B     		cmp	r3, #11
 5309 1b9a D7DD     		ble	.L189
 5310              	.LBE29:
1535:main.c        ****             }
1536:main.c        ****             
1537:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5311              		.loc 1 1537 0 is_stmt 1
 5312 1b9c 544B     		ldr	r3, .L226+8
 5313 1b9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5314 1ba0 1B01     		lsls	r3, r3, #4
 5315 1ba2 5AB2     		sxtb	r2, r3
 5316 1ba4 534B     		ldr	r3, .L226+12
 5317 1ba6 1B68     		ldr	r3, [r3]
 5318 1ba8 5BB2     		sxtb	r3, r3
 5319 1baa 1343     		orrs	r3, r3, r2
 5320 1bac 5AB2     		sxtb	r2, r3
 5321 1bae 524B     		ldr	r3, .L226+16
 5322 1bb0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5323 1bb2 5B01     		lsls	r3, r3, #5
 5324 1bb4 5BB2     		sxtb	r3, r3
 5325 1bb6 1343     		orrs	r3, r3, r2
 5326 1bb8 5AB2     		sxtb	r2, r3
 5327 1bba 504B     		ldr	r3, .L226+20
 5328 1bbc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5329 1bbe 9B01     		lsls	r3, r3, #6
 5330 1bc0 5BB2     		sxtb	r3, r3
 5331 1bc2 1343     		orrs	r3, r3, r2
 5332 1bc4 5BB2     		sxtb	r3, r3
 5333 1bc6 DAB2     		uxtb	r2, r3
 5334 1bc8 484B     		ldr	r3, .L226+4
 5335 1bca 1A76     		strb	r2, [r3, #24]
1538:main.c        ****             /*
1539:main.c        ****             for (int i = 0; i < 4; i++)
1540:main.c        ****             {
1541:main.c        ****                 myArray[i+49] = knobs[i];
1542:main.c        ****             }
1543:main.c        ****             */
1544:main.c        ****             myArray[25] = patchNum;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 123


 5336              		.loc 1 1544 0
 5337 1bcc 4C4B     		ldr	r3, .L226+24
 5338 1bce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5339 1bd0 464B     		ldr	r3, .L226+4
 5340 1bd2 5A76     		strb	r2, [r3, #25]
1545:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5341              		.loc 1 1545 0
 5342 1bd4 4B4B     		ldr	r3, .L226+28
 5343 1bd6 B3F90030 		ldrsh	r3, [r3]
 5344 1bda 1B12     		asrs	r3, r3, #8
 5345 1bdc 1BB2     		sxth	r3, r3
 5346 1bde DAB2     		uxtb	r2, r3
 5347 1be0 424B     		ldr	r3, .L226+4
 5348 1be2 9A76     		strb	r2, [r3, #26]
1546:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5349              		.loc 1 1546 0
 5350 1be4 474B     		ldr	r3, .L226+28
 5351 1be6 B3F90030 		ldrsh	r3, [r3]
 5352 1bea DAB2     		uxtb	r2, r3
 5353 1bec 3F4B     		ldr	r3, .L226+4
 5354 1bee DA76     		strb	r2, [r3, #27]
1547:main.c        ****             myArray[30] = 254;
 5355              		.loc 1 1547 0
 5356 1bf0 3E4B     		ldr	r3, .L226+4
 5357 1bf2 FE22     		movs	r2, #254
 5358 1bf4 9A77     		strb	r2, [r3, #30]
1548:main.c        ****             myArray[31] = 253;
 5359              		.loc 1 1548 0
 5360 1bf6 3D4B     		ldr	r3, .L226+4
 5361 1bf8 FD22     		movs	r2, #253
 5362 1bfa DA77     		strb	r2, [r3, #31]
1549:main.c        ****             
1550:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5363              		.loc 1 1550 0
 5364 1bfc 424B     		ldr	r3, .L226+32
 5365 1bfe 0122     		movs	r2, #1
 5366 1c00 1A70     		strb	r2, [r3]
 5367              	.L180:
1551:main.c        ****             /*
1552:main.c        ****             for (int i = 0; i < 16; i++)
1553:main.c        ****             {
1554:main.c        ****                 myArray[i+56] = encoderVal[i];
1555:main.c        ****             }
1556:main.c        ****             */
1557:main.c        ****         }
1558:main.c        ****         
1559:main.c        ****         
1560:main.c        **** 
1561:main.c        **** /*
1562:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1563:main.c        ****         {
1564:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1565:main.c        ****         }
1566:main.c        ****     */    
1567:main.c        ****         
1568:main.c        **** 
1569:main.c        ****        
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 124


1570:main.c        ****         
1571:main.c        ****         
1572:main.c        ****         //parse input from synth board (names)
1573:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5368              		.loc 1 1573 0
 5369 1c02 424B     		ldr	r3, .L226+36
 5370 1c04 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5371 1c06 FD2B     		cmp	r3, #253
 5372 1c08 5BD1     		bne	.L190
 5373              		.loc 1 1573 0 is_stmt 0 discriminator 1
 5374 1c0a 404B     		ldr	r3, .L226+36
 5375 1c0c DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5376 1c0e FE2B     		cmp	r3, #254
 5377 1c10 57D1     		bne	.L190
 5378              	.LBB31:
1574:main.c        ****         {
1575:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5379              		.loc 1 1575 0 is_stmt 1
 5380 1c12 3E4B     		ldr	r3, .L226+36
 5381 1c14 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5382 1c16 BB60     		str	r3, [r7, #8]
1576:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5383              		.loc 1 1576 0
 5384 1c18 3C4B     		ldr	r3, .L226+36
 5385 1c1a 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5386 1c1c 7B60     		str	r3, [r7, #4]
1577:main.c        ****             int bufferPointer = 2;
 5387              		.loc 1 1577 0
 5388 1c1e 0223     		movs	r3, #2
 5389 1c20 3B64     		str	r3, [r7, #64]
 5390              	.LBB32:
1578:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5391              		.loc 1 1578 0
 5392 1c22 0023     		movs	r3, #0
 5393 1c24 FB63     		str	r3, [r7, #60]
 5394 1c26 14E0     		b	.L191
 5395              	.L192:
1579:main.c        ****             {
1580:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5396              		.loc 1 1580 0 discriminator 3
 5397 1c28 384A     		ldr	r2, .L226+36
 5398 1c2a 3B6C     		ldr	r3, [r7, #64]
 5399 1c2c 1344     		add	r3, r3, r2
 5400 1c2e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5401 1c30 3749     		ldr	r1, .L226+40
 5402 1c32 BA68     		ldr	r2, [r7, #8]
 5403 1c34 1346     		mov	r3, r2
 5404 1c36 DB00     		lsls	r3, r3, #3
 5405 1c38 9B1A     		subs	r3, r3, r2
 5406 1c3a 5B00     		lsls	r3, r3, #1
 5407 1c3c CA18     		adds	r2, r1, r3
 5408 1c3e FB6B     		ldr	r3, [r7, #60]
 5409 1c40 1344     		add	r3, r3, r2
 5410 1c42 0246     		mov	r2, r0
 5411 1c44 1A70     		strb	r2, [r3]
1581:main.c        ****                 bufferPointer++;
 5412              		.loc 1 1581 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 125


 5413 1c46 3B6C     		ldr	r3, [r7, #64]
 5414 1c48 0133     		adds	r3, r3, #1
 5415 1c4a 3B64     		str	r3, [r7, #64]
1578:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5416              		.loc 1 1578 0 discriminator 3
 5417 1c4c FB6B     		ldr	r3, [r7, #60]
 5418 1c4e 0133     		adds	r3, r3, #1
 5419 1c50 FB63     		str	r3, [r7, #60]
 5420              	.L191:
1578:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5421              		.loc 1 1578 0 is_stmt 0 discriminator 1
 5422 1c52 FB6B     		ldr	r3, [r7, #60]
 5423 1c54 0D2B     		cmp	r3, #13
 5424 1c56 E7DD     		ble	.L192
 5425              	.LBE32:
1582:main.c        ****             }
1583:main.c        ****             bufferPointer = 17;
 5426              		.loc 1 1583 0 is_stmt 1
 5427 1c58 1123     		movs	r3, #17
 5428 1c5a 3B64     		str	r3, [r7, #64]
 5429              	.LBB33:
1584:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5430              		.loc 1 1584 0
 5431 1c5c 0023     		movs	r3, #0
 5432 1c5e BB63     		str	r3, [r7, #56]
 5433 1c60 1BE0     		b	.L193
 5434              	.L194:
1585:main.c        ****             {
1586:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5435              		.loc 1 1586 0 discriminator 3
 5436 1c62 2A4A     		ldr	r2, .L226+36
 5437 1c64 3B6C     		ldr	r3, [r7, #64]
 5438 1c66 1344     		add	r3, r3, r2
 5439 1c68 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5440 1c6a 2A48     		ldr	r0, .L226+44
 5441 1c6c 7B68     		ldr	r3, [r7, #4]
 5442 1c6e B968     		ldr	r1, [r7, #8]
 5443 1c70 1A46     		mov	r2, r3
 5444 1c72 D200     		lsls	r2, r2, #3
 5445 1c74 D21A     		subs	r2, r2, r3
 5446 1c76 5300     		lsls	r3, r2, #1
 5447 1c78 1A46     		mov	r2, r3
 5448 1c7a 0B46     		mov	r3, r1
 5449 1c7c DB00     		lsls	r3, r3, #3
 5450 1c7e 5B1A     		subs	r3, r3, r1
 5451 1c80 1B01     		lsls	r3, r3, #4
 5452 1c82 1344     		add	r3, r3, r2
 5453 1c84 C218     		adds	r2, r0, r3
 5454 1c86 BB6B     		ldr	r3, [r7, #56]
 5455 1c88 1344     		add	r3, r3, r2
 5456 1c8a 2246     		mov	r2, r4
 5457 1c8c 1A70     		strb	r2, [r3]
1587:main.c        ****                 bufferPointer++;
 5458              		.loc 1 1587 0 discriminator 3
 5459 1c8e 3B6C     		ldr	r3, [r7, #64]
 5460 1c90 0133     		adds	r3, r3, #1
 5461 1c92 3B64     		str	r3, [r7, #64]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 126


1584:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5462              		.loc 1 1584 0 discriminator 3
 5463 1c94 BB6B     		ldr	r3, [r7, #56]
 5464 1c96 0133     		adds	r3, r3, #1
 5465 1c98 BB63     		str	r3, [r7, #56]
 5466              	.L193:
1584:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5467              		.loc 1 1584 0 is_stmt 0 discriminator 1
 5468 1c9a BB6B     		ldr	r3, [r7, #56]
 5469 1c9c 0D2B     		cmp	r3, #13
 5470 1c9e E0DD     		ble	.L194
 5471              	.LBE33:
1588:main.c        ****             }
1589:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5472              		.loc 1 1589 0 is_stmt 1
 5473 1ca0 174B     		ldr	r3, .L226+24
 5474 1ca2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5475 1ca4 1A46     		mov	r2, r3
 5476 1ca6 BB68     		ldr	r3, [r7, #8]
 5477 1ca8 9A42     		cmp	r2, r3
 5478 1caa 0AD1     		bne	.L190
 5479              		.loc 1 1589 0 is_stmt 0 discriminator 1
 5480 1cac 7B68     		ldr	r3, [r7, #4]
 5481 1cae 072B     		cmp	r3, #7
 5482 1cb0 07D1     		bne	.L190
 5483              		.loc 1 1589 0 discriminator 2
 5484 1cb2 194A     		ldr	r2, .L226+48
 5485 1cb4 BB68     		ldr	r3, [r7, #8]
 5486 1cb6 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5487 1cba 002B     		cmp	r3, #0
 5488 1cbc 01D1     		bne	.L190
1590:main.c        ****             {
1591:main.c        ****                 displayCurrentPresetName();
 5489              		.loc 1 1591 0 is_stmt 1
 5490 1cbe FFF7FEFF 		bl	displayCurrentPresetName
 5491              	.L190:
 5492              	.LBE31:
1592:main.c        ****             }
1593:main.c        ****         }
1594:main.c        ****         
1595:main.c        ****         SPIM_1_ClearRxBuffer();
 5493              		.loc 1 1595 0
 5494 1cc2 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1596:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5495              		.loc 1 1596 0
 5496 1cc6 154B     		ldr	r3, .L226+52
 5497 1cc8 1B78     		ldrb	r3, [r3]
 5498 1cca DBB2     		uxtb	r3, r3
 5499 1ccc 0121     		movs	r1, #1
 5500 1cce 1846     		mov	r0, r3
 5501 1cd0 FFF7FEFF 		bl	CyDmaChEnable
1597:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5502              		.loc 1 1597 0
 5503 1cd4 124B     		ldr	r3, .L226+56
 5504 1cd6 1B78     		ldrb	r3, [r3]
 5505 1cd8 DBB2     		uxtb	r3, r3
 5506 1cda 0121     		movs	r1, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 127


 5507 1cdc 1846     		mov	r0, r3
 5508 1cde FFF7FEFF 		bl	CyDmaChEnable
1598:main.c        ****         
1599:main.c        **** 
1600:main.c        ****        
1601:main.c        **** 
1602:main.c        ****      }
 5509              		.loc 1 1602 0
 5510 1ce2 FEF767BB 		b	.L195
 5511              	.L227:
 5512 1ce6 00BF     		.align	2
 5513              	.L226:
 5514 1ce8 00000000 		.word	stringMIDI
 5515 1cec 00000000 		.word	myArray
 5516 1cf0 00000000 		.word	voice
 5517 1cf4 00000000 		.word	octave
 5518 1cf8 00000000 		.word	dualSlider
 5519 1cfc 00000000 		.word	neck
 5520 1d00 00000000 		.word	patchNum
 5521 1d04 00000000 		.word	processed_volumePedal
 5522 1d08 00000000 		.word	sendKnobs
 5523 1d0c 00000000 		.word	inBuffer
 5524 1d10 00000000 		.word	presetNamesArray
 5525 1d14 00000000 		.word	macroNamesArray
 5526 1d18 00000000 		.word	presetAlreadyDisplayed
 5527 1d1c 00000000 		.word	rx3Channel
 5528 1d20 00000000 		.word	txChannel
 5529              		.cfi_endproc
 5530              	.LFE76:
 5531              		.size	main, .-main
 5532              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5533              		.align	2
 5534              		.global	DmaTxConfiguration
 5535              		.thumb
 5536              		.thumb_func
 5537              		.type	DmaTxConfiguration, %function
 5538              	DmaTxConfiguration:
 5539              	.LFB77:
1603:main.c        **** }
1604:main.c        **** 
1605:main.c        **** void DmaTxConfiguration()
1606:main.c        **** {
 5540              		.loc 1 1606 0
 5541              		.cfi_startproc
 5542              		@ args = 0, pretend = 0, frame = 0
 5543              		@ frame_needed = 1, uses_anonymous_args = 0
 5544 0000 80B5     		push	{r7, lr}
 5545              		.cfi_def_cfa_offset 8
 5546              		.cfi_offset 7, -8
 5547              		.cfi_offset 14, -4
 5548 0002 00AF     		add	r7, sp, #0
 5549              		.cfi_def_cfa_register 7
1607:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1608:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5550              		.loc 1 1608 0
 5551 0004 4FF48043 		mov	r3, #16384
 5552 0008 41F6FF72 		movw	r2, #8191
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 128


 5553 000c 0121     		movs	r1, #1
 5554 000e 0120     		movs	r0, #1
 5555 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5556 0014 0346     		mov	r3, r0
 5557 0016 1A46     		mov	r2, r3
 5558 0018 124B     		ldr	r3, .L229
 5559 001a 1A70     		strb	r2, [r3]
1609:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1610:main.c        **** 
1611:main.c        ****     txTD = CyDmaTdAllocate();
 5560              		.loc 1 1611 0
 5561 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5562 0020 0346     		mov	r3, r0
 5563 0022 1A46     		mov	r2, r3
 5564 0024 104B     		ldr	r3, .L229+4
 5565 0026 1A70     		strb	r2, [r3]
1612:main.c        **** 
1613:main.c        ****     /* Configure this Td as follows:
1614:main.c        ****     *  - Increment the source address, but not the destination address   
1615:main.c        ****     */
1616:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5566              		.loc 1 1616 0
 5567 0028 0F4B     		ldr	r3, .L229+4
 5568 002a 1B78     		ldrb	r3, [r3]
 5569 002c D8B2     		uxtb	r0, r3
 5570 002e 0123     		movs	r3, #1
 5571 0030 FE22     		movs	r2, #254
 5572 0032 2021     		movs	r1, #32
 5573 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1617:main.c        **** 
1618:main.c        ****     /* From the memory to the SPIM */
1619:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5574              		.loc 1 1619 0
 5575 0038 0B4B     		ldr	r3, .L229+4
 5576 003a 1B78     		ldrb	r3, [r3]
 5577 003c DBB2     		uxtb	r3, r3
 5578 003e 0B4A     		ldr	r2, .L229+8
 5579 0040 91B2     		uxth	r1, r2
 5580 0042 46F24952 		movw	r2, #25929
 5581 0046 1846     		mov	r0, r3
 5582 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1620:main.c        ****     
1621:main.c        ****     /* Associate the TD with the channel */
1622:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5583              		.loc 1 1622 0
 5584 004c 054B     		ldr	r3, .L229
 5585 004e 1B78     		ldrb	r3, [r3]
 5586 0050 DAB2     		uxtb	r2, r3
 5587 0052 054B     		ldr	r3, .L229+4
 5588 0054 1B78     		ldrb	r3, [r3]
 5589 0056 DBB2     		uxtb	r3, r3
 5590 0058 1946     		mov	r1, r3
 5591 005a 1046     		mov	r0, r2
 5592 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1623:main.c        ****    
1624:main.c        **** } 
 5593              		.loc 1 1624 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 129


 5594 0060 00BF     		nop
 5595 0062 80BD     		pop	{r7, pc}
 5596              	.L230:
 5597              		.align	2
 5598              	.L229:
 5599 0064 00000000 		.word	txChannel
 5600 0068 00000000 		.word	txTD
 5601 006c 00000000 		.word	myArray
 5602              		.cfi_endproc
 5603              	.LFE77:
 5604              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5605              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5606              		.align	2
 5607              		.global	DmaRxConfiguration
 5608              		.thumb
 5609              		.thumb_func
 5610              		.type	DmaRxConfiguration, %function
 5611              	DmaRxConfiguration:
 5612              	.LFB78:
1625:main.c        **** 
1626:main.c        **** void DmaRxConfiguration()
1627:main.c        **** { 
 5613              		.loc 1 1627 0
 5614              		.cfi_startproc
 5615              		@ args = 0, pretend = 0, frame = 0
 5616              		@ frame_needed = 1, uses_anonymous_args = 0
 5617 0000 80B5     		push	{r7, lr}
 5618              		.cfi_def_cfa_offset 8
 5619              		.cfi_offset 7, -8
 5620              		.cfi_offset 14, -4
 5621 0002 00AF     		add	r7, sp, #0
 5622              		.cfi_def_cfa_register 7
1628:main.c        ****     //pluck dma
1629:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5623              		.loc 1 1629 0
 5624 0004 41F6FF73 		movw	r3, #8191
 5625 0008 4FF48042 		mov	r2, #16384
 5626 000c 0121     		movs	r1, #1
 5627 000e 0120     		movs	r0, #1
 5628 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5629 0014 0346     		mov	r3, r0
 5630 0016 1A46     		mov	r2, r3
 5631 0018 4A4B     		ldr	r3, .L232
 5632 001a 1A70     		strb	r2, [r3]
1630:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1631:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5633              		.loc 1 1631 0
 5634 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5635 0020 0346     		mov	r3, r0
 5636 0022 1A46     		mov	r2, r3
 5637 0024 484B     		ldr	r3, .L232+4
 5638 0026 1A70     		strb	r2, [r3]
1632:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5639              		.loc 1 1632 0
 5640 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5641 002c 0346     		mov	r3, r0
 5642 002e 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 130


 5643 0030 454B     		ldr	r3, .L232+4
 5644 0032 5A70     		strb	r2, [r3, #1]
1633:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5645              		.loc 1 1633 0
 5646 0034 444B     		ldr	r3, .L232+4
 5647 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5648 0038 0223     		movs	r3, #2
 5649 003a FE22     		movs	r2, #254
 5650 003c 1A21     		movs	r1, #26
 5651 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1634:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5652              		.loc 1 1634 0
 5653 0042 414B     		ldr	r3, .L232+4
 5654 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5655 0046 0223     		movs	r3, #2
 5656 0048 FE22     		movs	r2, #254
 5657 004a 1A21     		movs	r1, #26
 5658 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1635:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5659              		.loc 1 1635 0
 5660 0050 3D4B     		ldr	r3, .L232+4
 5661 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5662 0054 3D4A     		ldr	r2, .L232+8
 5663 0056 92B2     		uxth	r2, r2
 5664 0058 46F25441 		movw	r1, #25684
 5665 005c 1846     		mov	r0, r3
 5666 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1636:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5667              		.loc 1 1636 0
 5668 0062 394B     		ldr	r3, .L232+4
 5669 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5670 0066 3A4A     		ldr	r2, .L232+12
 5671 0068 92B2     		uxth	r2, r2
 5672 006a 46F25441 		movw	r1, #25684
 5673 006e 1846     		mov	r0, r3
 5674 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1637:main.c        **** 
1638:main.c        ****     //bar dma
1639:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5675              		.loc 1 1639 0
 5676 0074 41F6FF73 		movw	r3, #8191
 5677 0078 4FF48042 		mov	r2, #16384
 5678 007c 0121     		movs	r1, #1
 5679 007e 0120     		movs	r0, #1
 5680 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5681 0084 0346     		mov	r3, r0
 5682 0086 1A46     		mov	r2, r3
 5683 0088 324B     		ldr	r3, .L232+16
 5684 008a 1A70     		strb	r2, [r3]
1640:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1641:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5685              		.loc 1 1641 0
 5686 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5687 0090 0346     		mov	r3, r0
 5688 0092 1A46     		mov	r2, r3
 5689 0094 304B     		ldr	r3, .L232+20
 5690 0096 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 131


1642:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5691              		.loc 1 1642 0
 5692 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5693 009c 0346     		mov	r3, r0
 5694 009e 1A46     		mov	r2, r3
 5695 00a0 2D4B     		ldr	r3, .L232+20
 5696 00a2 5A70     		strb	r2, [r3, #1]
1643:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5697              		.loc 1 1643 0
 5698 00a4 2C4B     		ldr	r3, .L232+20
 5699 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5700 00a8 0623     		movs	r3, #6
 5701 00aa FE22     		movs	r2, #254
 5702 00ac 0821     		movs	r1, #8
 5703 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1644:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5704              		.loc 1 1644 0
 5705 00b2 294B     		ldr	r3, .L232+20
 5706 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5707 00b6 0623     		movs	r3, #6
 5708 00b8 FE22     		movs	r2, #254
 5709 00ba 0821     		movs	r1, #8
 5710 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1645:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5711              		.loc 1 1645 0
 5712 00c0 254B     		ldr	r3, .L232+20
 5713 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5714 00c4 254A     		ldr	r2, .L232+24
 5715 00c6 92B2     		uxth	r2, r2
 5716 00c8 46F25C41 		movw	r1, #25692
 5717 00cc 1846     		mov	r0, r3
 5718 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1646:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5719              		.loc 1 1646 0
 5720 00d2 214B     		ldr	r3, .L232+20
 5721 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5722 00d6 224A     		ldr	r2, .L232+28
 5723 00d8 92B2     		uxth	r2, r2
 5724 00da 46F25C41 		movw	r1, #25692
 5725 00de 1846     		mov	r0, r3
 5726 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1647:main.c        ****     
1648:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1649:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5727              		.loc 1 1649 0
 5728 00e4 41F6FF73 		movw	r3, #8191
 5729 00e8 4FF48042 		mov	r2, #16384
 5730 00ec 0121     		movs	r1, #1
 5731 00ee 0120     		movs	r0, #1
 5732 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5733 00f4 0346     		mov	r3, r0
 5734 00f6 1A46     		mov	r2, r3
 5735 00f8 1A4B     		ldr	r3, .L232+32
 5736 00fa 1A70     		strb	r2, [r3]
1650:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1651:main.c        **** 
1652:main.c        ****     rx3TD = CyDmaTdAllocate();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 132


 5737              		.loc 1 1652 0
 5738 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5739 0100 0346     		mov	r3, r0
 5740 0102 1A46     		mov	r2, r3
 5741 0104 184B     		ldr	r3, .L232+36
 5742 0106 1A70     		strb	r2, [r3]
1653:main.c        ****     
1654:main.c        ****     /* Configure this Td as follows:
1655:main.c        ****     *  - Increment the destination address, but not the source address
1656:main.c        ****     */
1657:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5743              		.loc 1 1657 0
 5744 0108 174B     		ldr	r3, .L232+36
 5745 010a 1B78     		ldrb	r3, [r3]
 5746 010c D8B2     		uxtb	r0, r3
 5747 010e 0223     		movs	r3, #2
 5748 0110 FE22     		movs	r2, #254
 5749 0112 2021     		movs	r1, #32
 5750 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1658:main.c        **** 
1659:main.c        ****     /* From the SPIM to the memory */
1660:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5751              		.loc 1 1660 0
 5752 0118 134B     		ldr	r3, .L232+36
 5753 011a 1B78     		ldrb	r3, [r3]
 5754 011c DBB2     		uxtb	r3, r3
 5755 011e 134A     		ldr	r2, .L232+40
 5756 0120 92B2     		uxth	r2, r2
 5757 0122 46F25951 		movw	r1, #25945
 5758 0126 1846     		mov	r0, r3
 5759 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1661:main.c        **** 
1662:main.c        ****     /* Associate the TD with the channel */
1663:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5760              		.loc 1 1663 0
 5761 012c 0D4B     		ldr	r3, .L232+32
 5762 012e 1B78     		ldrb	r3, [r3]
 5763 0130 DAB2     		uxtb	r2, r3
 5764 0132 0D4B     		ldr	r3, .L232+36
 5765 0134 1B78     		ldrb	r3, [r3]
 5766 0136 DBB2     		uxtb	r3, r3
 5767 0138 1946     		mov	r1, r3
 5768 013a 1046     		mov	r0, r2
 5769 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1664:main.c        **** }
 5770              		.loc 1 1664 0
 5771 0140 00BF     		nop
 5772 0142 80BD     		pop	{r7, pc}
 5773              	.L233:
 5774              		.align	2
 5775              	.L232:
 5776 0144 00000000 		.word	rx1Channel
 5777 0148 00000000 		.word	rx1TD
 5778 014c 00000000 		.word	rxBufferPluck
 5779 0150 1A000000 		.word	rxBufferPluck+26
 5780 0154 00000000 		.word	rx2Channel
 5781 0158 00000000 		.word	rx2TD
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 133


 5782 015c 00000000 		.word	rxBufferBar
 5783 0160 08000000 		.word	rxBufferBar+8
 5784 0164 00000000 		.word	rx3Channel
 5785 0168 00000000 		.word	rx3TD
 5786 016c 00000000 		.word	inBuffer
 5787              		.cfi_endproc
 5788              	.LFE78:
 5789              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 5790              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 5791              		.align	2
 5792              		.global	I2C_MasterWriteBlocking
 5793              		.thumb
 5794              		.thumb_func
 5795              		.type	I2C_MasterWriteBlocking, %function
 5796              	I2C_MasterWriteBlocking:
 5797              	.LFB79:
1665:main.c        **** 
1666:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1667:main.c        **** {
 5798              		.loc 1 1667 0
 5799              		.cfi_startproc
 5800              		@ args = 0, pretend = 0, frame = 16
 5801              		@ frame_needed = 1, uses_anonymous_args = 0
 5802 0000 80B5     		push	{r7, lr}
 5803              		.cfi_def_cfa_offset 8
 5804              		.cfi_offset 7, -8
 5805              		.cfi_offset 14, -4
 5806 0002 84B0     		sub	sp, sp, #16
 5807              		.cfi_def_cfa_offset 24
 5808 0004 00AF     		add	r7, sp, #0
 5809              		.cfi_def_cfa_register 7
 5810 0006 0346     		mov	r3, r0
 5811 0008 FB71     		strb	r3, [r7, #7]
 5812 000a 0B46     		mov	r3, r1	@ movhi
 5813 000c BB80     		strh	r3, [r7, #4]	@ movhi
 5814 000e 1346     		mov	r3, r2
 5815 0010 BB71     		strb	r3, [r7, #6]
1668:main.c        ****     uint8 volatile status;
1669:main.c        ****     uint32_t timeout = 50000;
 5816              		.loc 1 1669 0
 5817 0012 4CF25033 		movw	r3, #50000
 5818 0016 FB60     		str	r3, [r7, #12]
1670:main.c        ****     status = I2C_1_MasterClearStatus();
 5819              		.loc 1 1670 0
 5820 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5821 001c 0346     		mov	r3, r0
 5822 001e FB72     		strb	r3, [r7, #11]
1671:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5823              		.loc 1 1671 0
 5824 0020 FB7A     		ldrb	r3, [r7, #11]
 5825 0022 DBB2     		uxtb	r3, r3
 5826 0024 5BB2     		sxtb	r3, r3
 5827 0026 002B     		cmp	r3, #0
 5828 0028 3ADB     		blt	.L235
1672:main.c        ****     {
1673:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 5829              		.loc 1 1673 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 134


 5830 002a BB88     		ldrh	r3, [r7, #4]	@ movhi
 5831 002c DAB2     		uxtb	r2, r3
 5832 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5833 0030 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5834 0032 2849     		ldr	r1, .L244
 5835 0034 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 5836 0038 0346     		mov	r3, r0
 5837 003a FB72     		strb	r3, [r7, #11]
1674:main.c        ****                                      mode);
1675:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5838              		.loc 1 1675 0
 5839 003c FB7A     		ldrb	r3, [r7, #11]
 5840 003e DBB2     		uxtb	r3, r3
 5841 0040 002B     		cmp	r3, #0
 5842 0042 29D1     		bne	.L236
 5843              	.L240:
1676:main.c        ****         {
1677:main.c        ****             /* wait for write complete and no error */
1678:main.c        ****             do
1679:main.c        ****             {
1680:main.c        ****                 status = I2C_1_MasterStatus();
 5844              		.loc 1 1680 0
 5845 0044 FFF7FEFF 		bl	I2C_1_MasterStatus
 5846 0048 0346     		mov	r3, r0
 5847 004a FB72     		strb	r3, [r7, #11]
1681:main.c        ****                 timeout--;
 5848              		.loc 1 1681 0
 5849 004c FB68     		ldr	r3, [r7, #12]
 5850 004e 013B     		subs	r3, r3, #1
 5851 0050 FB60     		str	r3, [r7, #12]
1682:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5852              		.loc 1 1682 0
 5853 0052 FB7A     		ldrb	r3, [r7, #11]
 5854 0054 DBB2     		uxtb	r3, r3
 5855 0056 802B     		cmp	r3, #128
 5856 0058 01D1     		bne	.L237
1683:main.c        ****                 {
1684:main.c        ****                     I2C_reset();
 5857              		.loc 1 1684 0
 5858 005a FFF7FEFF 		bl	I2C_reset
 5859              	.L237:
1685:main.c        ****                 }
1686:main.c        ****                 if (timeout == 0)
 5860              		.loc 1 1686 0
 5861 005e FB68     		ldr	r3, [r7, #12]
 5862 0060 002B     		cmp	r3, #0
 5863 0062 03D1     		bne	.L238
1687:main.c        ****                 {
1688:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5864              		.loc 1 1688 0
 5865 0064 8023     		movs	r3, #128
 5866 0066 FB72     		strb	r3, [r7, #11]
1689:main.c        ****                     I2C_reset();
 5867              		.loc 1 1689 0
 5868 0068 FFF7FEFF 		bl	I2C_reset
 5869              	.L238:
1690:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 135


1691:main.c        ****                 
1692:main.c        ****                 if (status == 0)
 5870              		.loc 1 1692 0
 5871 006c FB7A     		ldrb	r3, [r7, #11]
 5872 006e DBB2     		uxtb	r3, r3
 5873 0070 002B     		cmp	r3, #0
 5874 0072 03D1     		bne	.L239
1693:main.c        ****                 {
1694:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5875              		.loc 1 1694 0
 5876 0074 8023     		movs	r3, #128
 5877 0076 FB72     		strb	r3, [r7, #11]
1695:main.c        ****                     I2C_reset();
 5878              		.loc 1 1695 0
 5879 0078 FFF7FEFF 		bl	I2C_reset
 5880              	.L239:
1696:main.c        ****                 }
1697:main.c        ****                 
1698:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5881              		.loc 1 1698 0
 5882 007c FB7A     		ldrb	r3, [r7, #11]
 5883 007e DBB2     		uxtb	r3, r3
 5884 0080 03F08203 		and	r3, r3, #130
 5885 0084 002B     		cmp	r3, #0
 5886 0086 0BD1     		bne	.L235
 5887              		.loc 1 1698 0 is_stmt 0 discriminator 1
 5888 0088 FB7A     		ldrb	r3, [r7, #11]
 5889 008a DBB2     		uxtb	r3, r3
 5890 008c 002B     		cmp	r3, #0
 5891 008e 07D0     		beq	.L235
 5892              		.loc 1 1698 0 discriminator 2
 5893 0090 FB68     		ldr	r3, [r7, #12]
 5894 0092 002B     		cmp	r3, #0
 5895 0094 D6D1     		bne	.L240
 5896 0096 03E0     		b	.L235
 5897              	.L236:
1699:main.c        ****         }
1700:main.c        ****         else
1701:main.c        ****         {
1702:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1703:main.c        ****             *  I2CM_MasterStatus() error output */
1704:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5898              		.loc 1 1704 0 is_stmt 1
 5899 0098 8023     		movs	r3, #128
 5900 009a FB72     		strb	r3, [r7, #11]
1705:main.c        ****             I2C_reset();
 5901              		.loc 1 1705 0
 5902 009c FFF7FEFF 		bl	I2C_reset
 5903              	.L235:
1706:main.c        ****         } 
1707:main.c        ****     }  
1708:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5904              		.loc 1 1708 0
 5905 00a0 FB7A     		ldrb	r3, [r7, #11]
 5906 00a2 DBB2     		uxtb	r3, r3
 5907 00a4 03F02003 		and	r3, r3, #32
 5908 00a8 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 136


 5909 00aa 04D1     		bne	.L241
 5910              		.loc 1 1708 0 is_stmt 0 discriminator 1
 5911 00ac FB7A     		ldrb	r3, [r7, #11]
 5912 00ae DBB2     		uxtb	r3, r3
 5913 00b0 5BB2     		sxtb	r3, r3
 5914 00b2 002B     		cmp	r3, #0
 5915 00b4 08DA     		bge	.L242
 5916              	.L241:
1709:main.c        ****     {
1710:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1711:main.c        ****         i2c_skipped[main_counter] = 1;
 5917              		.loc 1 1711 0 is_stmt 1
 5918 00b6 084B     		ldr	r3, .L244+4
 5919 00b8 1B78     		ldrb	r3, [r3]
 5920 00ba DBB2     		uxtb	r3, r3
 5921 00bc 1A46     		mov	r2, r3
 5922 00be 074B     		ldr	r3, .L244+8
 5923 00c0 0121     		movs	r1, #1
 5924 00c2 9954     		strb	r1, [r3, r2]
1712:main.c        ****         I2C_reset();
 5925              		.loc 1 1712 0
 5926 00c4 FFF7FEFF 		bl	I2C_reset
 5927              	.L242:
1713:main.c        ****     }
1714:main.c        ****     return status;
 5928              		.loc 1 1714 0
 5929 00c8 FB7A     		ldrb	r3, [r7, #11]
 5930 00ca DBB2     		uxtb	r3, r3
1715:main.c        **** }
 5931              		.loc 1 1715 0
 5932 00cc 1846     		mov	r0, r3
 5933 00ce 1037     		adds	r7, r7, #16
 5934              		.cfi_def_cfa_offset 8
 5935 00d0 BD46     		mov	sp, r7
 5936              		.cfi_def_cfa_register 13
 5937              		@ sp needed
 5938 00d2 80BD     		pop	{r7, pc}
 5939              	.L245:
 5940              		.align	2
 5941              	.L244:
 5942 00d4 00000000 		.word	I2Cbuff1
 5943 00d8 00000000 		.word	main_counter
 5944 00dc 00000000 		.word	i2c_skipped
 5945              		.cfi_endproc
 5946              	.LFE79:
 5947              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 5948              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 5949              		.align	2
 5950              		.global	I2C_MasterReadBlocking
 5951              		.thumb
 5952              		.thumb_func
 5953              		.type	I2C_MasterReadBlocking, %function
 5954              	I2C_MasterReadBlocking:
 5955              	.LFB80:
1716:main.c        **** 
1717:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1718:main.c        **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 137


 5956              		.loc 1 1718 0
 5957              		.cfi_startproc
 5958              		@ args = 0, pretend = 0, frame = 16
 5959              		@ frame_needed = 1, uses_anonymous_args = 0
 5960 0000 80B5     		push	{r7, lr}
 5961              		.cfi_def_cfa_offset 8
 5962              		.cfi_offset 7, -8
 5963              		.cfi_offset 14, -4
 5964 0002 84B0     		sub	sp, sp, #16
 5965              		.cfi_def_cfa_offset 24
 5966 0004 00AF     		add	r7, sp, #0
 5967              		.cfi_def_cfa_register 7
 5968 0006 0346     		mov	r3, r0
 5969 0008 FB71     		strb	r3, [r7, #7]
 5970 000a 0B46     		mov	r3, r1
 5971 000c BB71     		strb	r3, [r7, #6]
 5972 000e 1346     		mov	r3, r2
 5973 0010 7B71     		strb	r3, [r7, #5]
1719:main.c        ****     uint8 volatile status;
1720:main.c        ****     uint32_t timeout = 50000;
 5974              		.loc 1 1720 0
 5975 0012 4CF25033 		movw	r3, #50000
 5976 0016 FB60     		str	r3, [r7, #12]
1721:main.c        ****     status = I2C_1_MasterClearStatus();
 5977              		.loc 1 1721 0
 5978 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5979 001c 0346     		mov	r3, r0
 5980 001e FB72     		strb	r3, [r7, #11]
1722:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5981              		.loc 1 1722 0
 5982 0020 FB7A     		ldrb	r3, [r7, #11]
 5983 0022 DBB2     		uxtb	r3, r3
 5984 0024 5BB2     		sxtb	r3, r3
 5985 0026 002B     		cmp	r3, #0
 5986 0028 37DB     		blt	.L247
1723:main.c        ****     {
1724:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 5987              		.loc 1 1724 0
 5988 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5989 002c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5990 002e F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5991 0030 1D49     		ldr	r1, .L253
 5992 0032 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 5993 0036 0346     		mov	r3, r0
 5994 0038 FB72     		strb	r3, [r7, #11]
1725:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1726:main.c        ****                                     nbytes, mode); 
1727:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5995              		.loc 1 1727 0
 5996 003a FB7A     		ldrb	r3, [r7, #11]
 5997 003c DBB2     		uxtb	r3, r3
 5998 003e 002B     		cmp	r3, #0
 5999 0040 27D1     		bne	.L248
 6000              	.L251:
1728:main.c        ****         {
1729:main.c        ****             /* wait for read complete and no error */
1730:main.c        ****             do
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 138


1731:main.c        ****             {
1732:main.c        ****                 status = I2C_1_MasterStatus();
 6001              		.loc 1 1732 0
 6002 0042 FFF7FEFF 		bl	I2C_1_MasterStatus
 6003 0046 0346     		mov	r3, r0
 6004 0048 FB72     		strb	r3, [r7, #11]
1733:main.c        ****                 timeout--;
 6005              		.loc 1 1733 0
 6006 004a FB68     		ldr	r3, [r7, #12]
 6007 004c 013B     		subs	r3, r3, #1
 6008 004e FB60     		str	r3, [r7, #12]
1734:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6009              		.loc 1 1734 0
 6010 0050 FB7A     		ldrb	r3, [r7, #11]
 6011 0052 DBB2     		uxtb	r3, r3
 6012 0054 802B     		cmp	r3, #128
 6013 0056 07D1     		bne	.L249
1735:main.c        ****                 {
1736:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6014              		.loc 1 1736 0
 6015 0058 144B     		ldr	r3, .L253+4
 6016 005a 1022     		movs	r2, #16
 6017 005c 1A70     		strb	r2, [r3]
 6018 005e 144B     		ldr	r3, .L253+8
 6019 0060 0422     		movs	r2, #4
 6020 0062 1A70     		strb	r2, [r3]
1737:main.c        ****                     I2C_reset();
 6021              		.loc 1 1737 0
 6022 0064 FFF7FEFF 		bl	I2C_reset
 6023              	.L249:
1738:main.c        ****                 }
1739:main.c        ****                 if (timeout == 0)
 6024              		.loc 1 1739 0
 6025 0068 FB68     		ldr	r3, [r7, #12]
 6026 006a 002B     		cmp	r3, #0
 6027 006c 03D1     		bne	.L250
1740:main.c        ****                 {
1741:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6028              		.loc 1 1741 0
 6029 006e 8023     		movs	r3, #128
 6030 0070 FB72     		strb	r3, [r7, #11]
1742:main.c        ****                     I2C_reset();
 6031              		.loc 1 1742 0
 6032 0072 FFF7FEFF 		bl	I2C_reset
 6033              	.L250:
1743:main.c        ****                 }
1744:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6034              		.loc 1 1744 0
 6035 0076 FB7A     		ldrb	r3, [r7, #11]
 6036 0078 DBB2     		uxtb	r3, r3
 6037 007a 03F08103 		and	r3, r3, #129
 6038 007e 002B     		cmp	r3, #0
 6039 0080 0BD1     		bne	.L247
 6040              		.loc 1 1744 0 is_stmt 0 discriminator 1
 6041 0082 FB7A     		ldrb	r3, [r7, #11]
 6042 0084 DBB2     		uxtb	r3, r3
 6043 0086 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 139


 6044 0088 07D0     		beq	.L247
 6045              		.loc 1 1744 0 discriminator 2
 6046 008a FB68     		ldr	r3, [r7, #12]
 6047 008c 002B     		cmp	r3, #0
 6048 008e D8D1     		bne	.L251
 6049 0090 03E0     		b	.L247
 6050              	.L248:
1745:main.c        ****         }
1746:main.c        ****         else
1747:main.c        ****         {
1748:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1749:main.c        ****             *  I2CM_MasterStatus() error output */
1750:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6051              		.loc 1 1750 0 is_stmt 1
 6052 0092 8023     		movs	r3, #128
 6053 0094 FB72     		strb	r3, [r7, #11]
1751:main.c        ****             I2C_reset();
 6054              		.loc 1 1751 0
 6055 0096 FFF7FEFF 		bl	I2C_reset
 6056              	.L247:
1752:main.c        ****         }
1753:main.c        ****     }
1754:main.c        ****     return status;
 6057              		.loc 1 1754 0
 6058 009a FB7A     		ldrb	r3, [r7, #11]
 6059 009c DBB2     		uxtb	r3, r3
1755:main.c        **** }
 6060              		.loc 1 1755 0
 6061 009e 1846     		mov	r0, r3
 6062 00a0 1037     		adds	r7, r7, #16
 6063              		.cfi_def_cfa_offset 8
 6064 00a2 BD46     		mov	sp, r7
 6065              		.cfi_def_cfa_register 13
 6066              		@ sp needed
 6067 00a4 80BD     		pop	{r7, pc}
 6068              	.L254:
 6069 00a6 00BF     		.align	2
 6070              	.L253:
 6071 00a8 00000000 		.word	I2Cbuff2
 6072 00ac D9490040 		.word	1073760729
 6073 00b0 D7490040 		.word	1073760727
 6074              		.cfi_endproc
 6075              	.LFE80:
 6076              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6077              		.section	.text.I2C_reset,"ax",%progbits
 6078              		.align	2
 6079              		.global	I2C_reset
 6080              		.thumb
 6081              		.thumb_func
 6082              		.type	I2C_reset, %function
 6083              	I2C_reset:
 6084              	.LFB81:
1756:main.c        **** 
1757:main.c        **** void I2C_reset(void)
1758:main.c        **** {
 6085              		.loc 1 1758 0
 6086              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 140


 6087              		@ args = 0, pretend = 0, frame = 0
 6088              		@ frame_needed = 1, uses_anonymous_args = 0
 6089 0000 80B5     		push	{r7, lr}
 6090              		.cfi_def_cfa_offset 8
 6091              		.cfi_offset 7, -8
 6092              		.cfi_offset 14, -4
 6093 0002 00AF     		add	r7, sp, #0
 6094              		.cfi_def_cfa_register 7
1759:main.c        ****   I2C_1_Stop();
 6095              		.loc 1 1759 0
 6096 0004 FFF7FEFF 		bl	I2C_1_Stop
1760:main.c        **** 
1761:main.c        ****   /* Disable/clear everything, then reinitialize. */
1762:main.c        **** 
1763:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6097              		.loc 1 1763 0
 6098 0008 064B     		ldr	r3, .L256
 6099 000a 0022     		movs	r2, #0
 6100 000c 1A70     		strb	r2, [r3]
1764:main.c        **** 
1765:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 6101              		.loc 1 1765 0
 6102 000e 064B     		ldr	r3, .L256+4
 6103 0010 0022     		movs	r2, #0
 6104 0012 1A70     		strb	r2, [r3]
1766:main.c        **** 
1767:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6105              		.loc 1 1767 0
 6106 0014 054B     		ldr	r3, .L256+8
 6107 0016 0022     		movs	r2, #0
 6108 0018 1A70     		strb	r2, [r3]
1768:main.c        **** 
1769:main.c        ****   I2C_1_Start();
 6109              		.loc 1 1769 0
 6110 001a FFF7FEFF 		bl	I2C_1_Start
1770:main.c        **** }
 6111              		.loc 1 1770 0
 6112 001e 00BF     		nop
 6113 0020 80BD     		pop	{r7, pc}
 6114              	.L257:
 6115 0022 00BF     		.align	2
 6116              	.L256:
 6117 0024 D6490040 		.word	1073760726
 6118 0028 C8490040 		.word	1073760712
 6119 002c 00000000 		.word	I2C_1_initVar
 6120              		.cfi_endproc
 6121              	.LFE81:
 6122              		.size	I2C_reset, .-I2C_reset
 6123              		.section	.text.displayCurrentPresetName,"ax",%progbits
 6124              		.align	2
 6125              		.global	displayCurrentPresetName
 6126              		.thumb
 6127              		.thumb_func
 6128              		.type	displayCurrentPresetName, %function
 6129              	displayCurrentPresetName:
 6130              	.LFB82:
1771:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 141


1772:main.c        **** void displayCurrentPresetName()
1773:main.c        **** {
 6131              		.loc 1 1773 0
 6132              		.cfi_startproc
 6133              		@ args = 0, pretend = 0, frame = 0
 6134              		@ frame_needed = 1, uses_anonymous_args = 0
 6135 0000 80B5     		push	{r7, lr}
 6136              		.cfi_def_cfa_offset 8
 6137              		.cfi_offset 7, -8
 6138              		.cfi_offset 14, -4
 6139 0002 00AF     		add	r7, sp, #0
 6140              		.cfi_def_cfa_register 7
1774:main.c        ****     if (presetNamesArray[patchNum][0] != 255) //don't display if the name data still hasn't been re
 6141              		.loc 1 1774 0
 6142 0004 184B     		ldr	r3, .L261
 6143 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6144 0008 1946     		mov	r1, r3
 6145 000a 184A     		ldr	r2, .L261+4
 6146 000c 0B46     		mov	r3, r1
 6147 000e DB00     		lsls	r3, r3, #3
 6148 0010 5B1A     		subs	r3, r3, r1
 6149 0012 5B00     		lsls	r3, r3, #1
 6150 0014 1344     		add	r3, r3, r2
 6151 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6152 0018 FF2B     		cmp	r3, #255
 6153 001a 22D0     		beq	.L260
1775:main.c        ****     {
1776:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6154              		.loc 1 1776 0
 6155 001c 124B     		ldr	r3, .L261
 6156 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6157 0020 1846     		mov	r0, r3
 6158 0022 0023     		movs	r3, #0
 6159 0024 0022     		movs	r2, #0
 6160 0026 0221     		movs	r1, #2
 6161 0028 FFF7FEFF 		bl	OLEDwriteInt
1777:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1778:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_LENGTH_IN_BYTES, 0, SecondLine
 6162              		.loc 1 1778 0
 6163 002c 0E4B     		ldr	r3, .L261
 6164 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6165 0030 1A46     		mov	r2, r3
 6166 0032 1346     		mov	r3, r2
 6167 0034 DB00     		lsls	r3, r3, #3
 6168 0036 9B1A     		subs	r3, r3, r2
 6169 0038 5B00     		lsls	r3, r3, #1
 6170 003a 0C4A     		ldr	r2, .L261+4
 6171 003c 9818     		adds	r0, r3, r2
 6172 003e 0123     		movs	r3, #1
 6173 0040 0022     		movs	r2, #0
 6174 0042 0E21     		movs	r1, #14
 6175 0044 FFF7FEFF 		bl	OLEDwriteString
1779:main.c        ****         mainOLEDWaitingToSend = 1;
 6176              		.loc 1 1779 0
 6177 0048 094B     		ldr	r3, .L261+8
 6178 004a 0122     		movs	r2, #1
 6179 004c 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 142


1780:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 6180              		.loc 1 1780 0
 6181 004e 064B     		ldr	r3, .L261
 6182 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6183 0052 1946     		mov	r1, r3
 6184 0054 074B     		ldr	r3, .L261+12
 6185 0056 0122     		movs	r2, #1
 6186 0058 43F82120 		str	r2, [r3, r1, lsl #2]
1781:main.c        ****         //and update the macro OLED screens
1782:main.c        ****         macroOLEDWaitingToSend = 1;
 6187              		.loc 1 1782 0
 6188 005c 064B     		ldr	r3, .L261+16
 6189 005e 0122     		movs	r2, #1
 6190 0060 1A60     		str	r2, [r3]
 6191              	.L260:
1783:main.c        ****     }
1784:main.c        **** }
 6192              		.loc 1 1784 0
 6193 0062 00BF     		nop
 6194 0064 80BD     		pop	{r7, pc}
 6195              	.L262:
 6196 0066 00BF     		.align	2
 6197              	.L261:
 6198 0068 00000000 		.word	patchNum
 6199 006c 00000000 		.word	presetNamesArray
 6200 0070 00000000 		.word	mainOLEDWaitingToSend
 6201 0074 00000000 		.word	presetAlreadyDisplayed
 6202 0078 00000000 		.word	macroOLEDWaitingToSend
 6203              		.cfi_endproc
 6204              	.LFE82:
 6205              		.size	displayCurrentPresetName, .-displayCurrentPresetName
 6206              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6207              		.align	2
 6208              		.global	checkUSB_Vbus
 6209              		.thumb
 6210              		.thumb_func
 6211              		.type	checkUSB_Vbus, %function
 6212              	checkUSB_Vbus:
 6213              	.LFB83:
1785:main.c        ****     
1786:main.c        **** void checkUSB_Vbus(void)
1787:main.c        **** {
 6214              		.loc 1 1787 0
 6215              		.cfi_startproc
 6216              		@ args = 0, pretend = 0, frame = 0
 6217              		@ frame_needed = 1, uses_anonymous_args = 0
 6218 0000 80B5     		push	{r7, lr}
 6219              		.cfi_def_cfa_offset 8
 6220              		.cfi_offset 7, -8
 6221              		.cfi_offset 14, -4
 6222 0002 00AF     		add	r7, sp, #0
 6223              		.cfi_def_cfa_register 7
1788:main.c        ****    if (USB_VBusPresent() == 0)
 6224              		.loc 1 1788 0
 6225 0004 FFF7FEFF 		bl	USB_VBusPresent
 6226 0008 0346     		mov	r3, r0
 6227 000a 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 143


 6228 000c 05D1     		bne	.L264
1789:main.c        ****    {
1790:main.c        ****        USB_Stop();
 6229              		.loc 1 1790 0
 6230 000e FFF7FEFF 		bl	USB_Stop
1791:main.c        ****        USB_active = 0; 
 6231              		.loc 1 1791 0
 6232 0012 0E4B     		ldr	r3, .L267
 6233 0014 0022     		movs	r2, #0
 6234 0016 1A70     		strb	r2, [r3]
 6235 0018 13E0     		b	.L265
 6236              	.L264:
1792:main.c        ****    }
1793:main.c        ****    else if (USB_active == 0 )
 6237              		.loc 1 1793 0
 6238 001a 0C4B     		ldr	r3, .L267
 6239 001c 1B78     		ldrb	r3, [r3]
 6240 001e DBB2     		uxtb	r3, r3
 6241 0020 002B     		cmp	r3, #0
 6242 0022 0ED1     		bne	.L265
1794:main.c        ****    {
1795:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6243              		.loc 1 1795 0
 6244 0024 0021     		movs	r1, #0
 6245 0026 0020     		movs	r0, #0
 6246 0028 FFF7FEFF 		bl	USB_Start
1796:main.c        ****         while (0u == USB_GetConfiguration());
 6247              		.loc 1 1796 0
 6248 002c 00BF     		nop
 6249              	.L266:
 6250              		.loc 1 1796 0 is_stmt 0 discriminator 1
 6251 002e FFF7FEFF 		bl	USB_GetConfiguration
 6252 0032 0346     		mov	r3, r0
 6253 0034 002B     		cmp	r3, #0
 6254 0036 FAD0     		beq	.L266
1797:main.c        ****         USB_MIDI_EP_Init();
 6255              		.loc 1 1797 0 is_stmt 1
 6256 0038 FFF7FEFF 		bl	USB_MIDI_Init
1798:main.c        ****        USB_active = 1;
 6257              		.loc 1 1798 0
 6258 003c 034B     		ldr	r3, .L267
 6259 003e 0122     		movs	r2, #1
 6260 0040 1A70     		strb	r2, [r3]
 6261              	.L265:
1799:main.c        ****    }
1800:main.c        ****    USB_check_flag = 0;
 6262              		.loc 1 1800 0
 6263 0042 034B     		ldr	r3, .L267+4
 6264 0044 0022     		movs	r2, #0
 6265 0046 1A70     		strb	r2, [r3]
1801:main.c        **** }
 6266              		.loc 1 1801 0
 6267 0048 00BF     		nop
 6268 004a 80BD     		pop	{r7, pc}
 6269              	.L268:
 6270              		.align	2
 6271              	.L267:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 144


 6272 004c 00000000 		.word	USB_active
 6273 0050 00000000 		.word	USB_check_flag
 6274              		.cfi_endproc
 6275              	.LFE83:
 6276              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6277              		.section	.text.USB_service,"ax",%progbits
 6278              		.align	2
 6279              		.global	USB_service
 6280              		.thumb
 6281              		.thumb_func
 6282              		.type	USB_service, %function
 6283              	USB_service:
 6284              	.LFB84:
1802:main.c        **** 
1803:main.c        **** 
1804:main.c        **** 
1805:main.c        **** void USB_service(void)
1806:main.c        **** {
 6285              		.loc 1 1806 0
 6286              		.cfi_startproc
 6287              		@ args = 0, pretend = 0, frame = 0
 6288              		@ frame_needed = 1, uses_anonymous_args = 0
 6289 0000 80B5     		push	{r7, lr}
 6290              		.cfi_def_cfa_offset 8
 6291              		.cfi_offset 7, -8
 6292              		.cfi_offset 14, -4
 6293 0002 00AF     		add	r7, sp, #0
 6294              		.cfi_def_cfa_register 7
1807:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6295              		.loc 1 1807 0
 6296 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6297 0008 0346     		mov	r3, r0
 6298 000a 002B     		cmp	r3, #0
 6299 000c 10D0     		beq	.L270
1808:main.c        ****     {
1809:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6300              		.loc 1 1809 0
 6301 000e FFF7FEFF 		bl	USB_GetConfiguration
 6302 0012 0346     		mov	r3, r0
 6303 0014 002B     		cmp	r3, #0
 6304 0016 0BD0     		beq	.L270
1810:main.c        ****         {
1811:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1812:main.c        ****             
1813:main.c        ****             //SleepTimer_Start();
1814:main.c        ****         	
1815:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 6305              		.loc 1 1815 0
 6306 0018 244B     		ldr	r3, .L276
 6307 001a 1B78     		ldrb	r3, [r3]
 6308 001c DBB2     		uxtb	r3, r3
 6309 001e 002B     		cmp	r3, #0
 6310 0020 06D0     		beq	.L270
 6311              		.loc 1 1815 0 is_stmt 0 discriminator 1
 6312 0022 FFF7FEFF 		bl	USB_VBusPresent
 6313 0026 0346     		mov	r3, r0
 6314 0028 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 145


 6315 002a 01D0     		beq	.L270
1816:main.c        ****             {
1817:main.c        ****                 USB_MIDI_EP_Init();
 6316              		.loc 1 1817 0 is_stmt 1
 6317 002c FFF7FEFF 		bl	USB_MIDI_Init
 6318              	.L270:
1818:main.c        ****             }
1819:main.c        ****         }
1820:main.c        ****         else
1821:main.c        ****         {
1822:main.c        ****             //SleepTimer_Stop();
1823:main.c        ****         }    
1824:main.c        ****     }        
1825:main.c        ****     
1826:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6319              		.loc 1 1826 0
 6320 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6321 0034 0346     		mov	r3, r0
 6322 0036 002B     		cmp	r3, #0
 6323 0038 35D0     		beq	.L275
1827:main.c        ****     {
1828:main.c        **** 
1829:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1830:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6324              		.loc 1 1830 0
 6325 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6326 003e 0346     		mov	r3, r0
 6327 0040 002B     		cmp	r3, #0
 6328 0042 18D0     		beq	.L273
1831:main.c        ****         {
1832:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6329              		.loc 1 1832 0
 6330 0044 1A4B     		ldr	r3, .L276+4
 6331 0046 1B78     		ldrb	r3, [r3]
 6332 0048 D8B2     		uxtb	r0, r3
 6333 004a 1A4B     		ldr	r3, .L276+8
 6334 004c 1B78     		ldrb	r3, [r3]
 6335 004e DBB2     		uxtb	r3, r3
 6336 0050 9BB2     		uxth	r3, r3
 6337 0052 1A46     		mov	r2, r3
 6338 0054 1849     		ldr	r1, .L276+12
 6339 0056 FFF7FEFF 		bl	USB_LoadInEP
1833:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1834:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6340              		.loc 1 1834 0
 6341 005a 184B     		ldr	r3, .L276+16
 6342 005c 1B78     		ldrb	r3, [r3]
 6343 005e DBB2     		uxtb	r3, r3
 6344 0060 4022     		movs	r2, #64
 6345 0062 1749     		ldr	r1, .L276+20
 6346 0064 1846     		mov	r0, r3
 6347 0066 FFF7FEFF 		bl	USB_ReadOutEP
1835:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1836:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1837:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6348              		.loc 1 1837 0
 6349 006a 144B     		ldr	r3, .L276+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 146


 6350 006c 1B78     		ldrb	r3, [r3]
 6351 006e DBB2     		uxtb	r3, r3
 6352 0070 1846     		mov	r0, r3
 6353 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6354              	.L273:
1838:main.c        ****         }
1839:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6355              		.loc 1 1839 0
 6356 0076 0D4B     		ldr	r3, .L276
 6357 0078 1B78     		ldrb	r3, [r3]
 6358 007a DBB2     		uxtb	r3, r3
 6359 007c 002B     		cmp	r3, #0
 6360 007e 06D0     		beq	.L274
 6361              		.loc 1 1839 0 is_stmt 0 discriminator 1
 6362 0080 FFF7FEFF 		bl	USB_VBusPresent
 6363 0084 0346     		mov	r3, r0
 6364 0086 002B     		cmp	r3, #0
 6365 0088 01D0     		beq	.L274
1840:main.c        ****         {
1841:main.c        ****             USB_MIDI_IN_Service();
 6366              		.loc 1 1841 0 is_stmt 1
 6367 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6368              	.L274:
1842:main.c        ****         }
1843:main.c        **** 
1844:main.c        **** 
1845:main.c        **** 
1846:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6369              		.loc 1 1846 0
 6370 008e 074B     		ldr	r3, .L276
 6371 0090 1B78     		ldrb	r3, [r3]
 6372 0092 DBB2     		uxtb	r3, r3
 6373 0094 002B     		cmp	r3, #0
 6374 0096 06D0     		beq	.L275
 6375              		.loc 1 1846 0 is_stmt 0 discriminator 1
 6376 0098 FFF7FEFF 		bl	USB_VBusPresent
 6377 009c 0346     		mov	r3, r0
 6378 009e 002B     		cmp	r3, #0
 6379 00a0 01D0     		beq	.L275
1847:main.c        ****         {
1848:main.c        ****             USB_MIDI_OUT_Service();
 6380              		.loc 1 1848 0 is_stmt 1
 6381 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6382              	.L275:
1849:main.c        ****         }
1850:main.c        ****     }
1851:main.c        ****         
1852:main.c        **** }
 6383              		.loc 1 1852 0
 6384 00a6 00BF     		nop
 6385 00a8 80BD     		pop	{r7, pc}
 6386              	.L277:
 6387 00aa 00BF     		.align	2
 6388              	.L276:
 6389 00ac 00000000 		.word	USB_active
 6390 00b0 00000000 		.word	USB_midi_in_ep
 6391 00b4 00000000 		.word	USB_midiInPointer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 147


 6392 00b8 00000000 		.word	USB_midiInBuffer
 6393 00bc 00000000 		.word	USB_midi_out_ep
 6394 00c0 00000000 		.word	USB_midiOutBuffer
 6395              		.cfi_endproc
 6396              	.LFE84:
 6397              		.size	USB_service, .-USB_service
 6398              		.section	.text.log2f_approx,"ax",%progbits
 6399              		.align	2
 6400              		.global	log2f_approx
 6401              		.thumb
 6402              		.thumb_func
 6403              		.type	log2f_approx, %function
 6404              	log2f_approx:
 6405              	.LFB85:
1853:main.c        **** 
1854:main.c        **** // This is a fast approximation to log2()
1855:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1856:main.c        **** float log2f_approx(float X) {
 6406              		.loc 1 1856 0
 6407              		.cfi_startproc
 6408              		@ args = 0, pretend = 0, frame = 24
 6409              		@ frame_needed = 1, uses_anonymous_args = 0
 6410 0000 80B5     		push	{r7, lr}
 6411              		.cfi_def_cfa_offset 8
 6412              		.cfi_offset 7, -8
 6413              		.cfi_offset 14, -4
 6414 0002 86B0     		sub	sp, sp, #24
 6415              		.cfi_def_cfa_offset 32
 6416 0004 00AF     		add	r7, sp, #0
 6417              		.cfi_def_cfa_register 7
 6418 0006 7860     		str	r0, [r7, #4]	@ float
1857:main.c        ****   float Y, F;
1858:main.c        ****   int E;
1859:main.c        ****   F = frexpf(fabsf(X), &E);
 6419              		.loc 1 1859 0
 6420 0008 7B68     		ldr	r3, [r7, #4]
 6421 000a 23F00043 		bic	r3, r3, #-2147483648
 6422 000e 07F10C02 		add	r2, r7, #12
 6423 0012 1146     		mov	r1, r2
 6424 0014 1846     		mov	r0, r3
 6425 0016 FFF7FEFF 		bl	frexpf
 6426 001a 7861     		str	r0, [r7, #20]	@ float
1860:main.c        ****   Y = 1.23149591368684f;
 6427              		.loc 1 1860 0
 6428 001c 1A4B     		ldr	r3, .L280
 6429 001e 3B61     		str	r3, [r7, #16]	@ float
1861:main.c        ****   Y *= F;
 6430              		.loc 1 1861 0
 6431 0020 7969     		ldr	r1, [r7, #20]	@ float
 6432 0022 3869     		ldr	r0, [r7, #16]	@ float
 6433 0024 FFF7FEFF 		bl	__aeabi_fmul
 6434 0028 0346     		mov	r3, r0
 6435 002a 3B61     		str	r3, [r7, #16]	@ float
1862:main.c        ****   Y += -4.11852516267426f;
 6436              		.loc 1 1862 0
 6437 002c 1749     		ldr	r1, .L280+4
 6438 002e 3869     		ldr	r0, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 148


 6439 0030 FFF7FEFF 		bl	__aeabi_fsub
 6440 0034 0346     		mov	r3, r0
 6441 0036 3B61     		str	r3, [r7, #16]	@ float
1863:main.c        ****   Y *= F;
 6442              		.loc 1 1863 0
 6443 0038 7969     		ldr	r1, [r7, #20]	@ float
 6444 003a 3869     		ldr	r0, [r7, #16]	@ float
 6445 003c FFF7FEFF 		bl	__aeabi_fmul
 6446 0040 0346     		mov	r3, r0
 6447 0042 3B61     		str	r3, [r7, #16]	@ float
1864:main.c        ****   Y += 6.02197014179219f;
 6448              		.loc 1 1864 0
 6449 0044 1249     		ldr	r1, .L280+8
 6450 0046 3869     		ldr	r0, [r7, #16]	@ float
 6451 0048 FFF7FEFF 		bl	__aeabi_fadd
 6452 004c 0346     		mov	r3, r0
 6453 004e 3B61     		str	r3, [r7, #16]	@ float
1865:main.c        ****   Y *= F;
 6454              		.loc 1 1865 0
 6455 0050 7969     		ldr	r1, [r7, #20]	@ float
 6456 0052 3869     		ldr	r0, [r7, #16]	@ float
 6457 0054 FFF7FEFF 		bl	__aeabi_fmul
 6458 0058 0346     		mov	r3, r0
 6459 005a 3B61     		str	r3, [r7, #16]	@ float
1866:main.c        ****   Y += -3.13396450166353f;
 6460              		.loc 1 1866 0
 6461 005c 0D49     		ldr	r1, .L280+12
 6462 005e 3869     		ldr	r0, [r7, #16]	@ float
 6463 0060 FFF7FEFF 		bl	__aeabi_fsub
 6464 0064 0346     		mov	r3, r0
 6465 0066 3B61     		str	r3, [r7, #16]	@ float
1867:main.c        ****   Y += E;
 6466              		.loc 1 1867 0
 6467 0068 FB68     		ldr	r3, [r7, #12]
 6468 006a 1846     		mov	r0, r3
 6469 006c FFF7FEFF 		bl	__aeabi_i2f
 6470 0070 0346     		mov	r3, r0
 6471 0072 1946     		mov	r1, r3
 6472 0074 3869     		ldr	r0, [r7, #16]	@ float
 6473 0076 FFF7FEFF 		bl	__aeabi_fadd
 6474 007a 0346     		mov	r3, r0
 6475 007c 3B61     		str	r3, [r7, #16]	@ float
1868:main.c        ****   return(Y);
 6476              		.loc 1 1868 0
 6477 007e 3B69     		ldr	r3, [r7, #16]	@ float
1869:main.c        **** }
 6478              		.loc 1 1869 0
 6479 0080 1846     		mov	r0, r3
 6480 0082 1837     		adds	r7, r7, #24
 6481              		.cfi_def_cfa_offset 8
 6482 0084 BD46     		mov	sp, r7
 6483              		.cfi_def_cfa_register 13
 6484              		@ sp needed
 6485 0086 80BD     		pop	{r7, pc}
 6486              	.L281:
 6487              		.align	2
 6488              	.L280:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 149


 6489 0088 A8A19D3F 		.word	1067295144
 6490 008c F5CA8340 		.word	1082378997
 6491 0090 FBB3C040 		.word	1086370811
 6492 0094 E0924840 		.word	1078498016
 6493              		.cfi_endproc
 6494              	.LFE85:
 6495              		.size	log2f_approx, .-log2f_approx
 6496              		.global	prevNotes
 6497              		.bss
 6498              		.align	2
 6499              		.type	prevNotes, %object
 6500              		.size	prevNotes, 48
 6501              	prevNotes:
 6502 00c8 00000000 		.space	48
 6502      00000000 
 6502      00000000 
 6502      00000000 
 6502      00000000 
 6503              		.section	.text.noteEvent,"ax",%progbits
 6504              		.align	2
 6505              		.global	noteEvent
 6506              		.thumb
 6507              		.thumb_func
 6508              		.type	noteEvent, %function
 6509              	noteEvent:
 6510              	.LFB86:
1870:main.c        **** 
1871:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1872:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1873:main.c        **** 
1874:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1875:main.c        **** 
1876:main.c        **** void noteEvent(int string)
1877:main.c        **** {
 6511              		.loc 1 1877 0
 6512              		.cfi_startproc
 6513              		@ args = 0, pretend = 0, frame = 24
 6514              		@ frame_needed = 1, uses_anonymous_args = 0
 6515 0000 80B5     		push	{r7, lr}
 6516              		.cfi_def_cfa_offset 8
 6517              		.cfi_offset 7, -8
 6518              		.cfi_offset 14, -4
 6519 0002 86B0     		sub	sp, sp, #24
 6520              		.cfi_def_cfa_offset 32
 6521 0004 00AF     		add	r7, sp, #0
 6522              		.cfi_def_cfa_register 7
 6523 0006 7860     		str	r0, [r7, #4]
1878:main.c        ****     
1879:main.c        ****     /*
1880:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1881:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1882:main.c        ****     int vInt  = (int) (v*4.0f);
1883:main.c        ****     if (vInt > 127)
1884:main.c        ****     {
1885:main.c        ****         vInt = 127;
1886:main.c        ****     }
1887:main.c        ****     */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 150


1888:main.c        ****     uint16_t velocity = strings[string];
 6524              		.loc 1 1888 0
 6525 0008 2C4A     		ldr	r2, .L287
 6526 000a 7B68     		ldr	r3, [r7, #4]
 6527 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6528 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1889:main.c        ****     if (velocity > 0)
 6529              		.loc 1 1889 0
 6530 0012 FB8A     		ldrh	r3, [r7, #22]
 6531 0014 002B     		cmp	r3, #0
 6532 0016 43D0     		beq	.L283
 6533              	.LBB34:
1890:main.c        ****     {
1891:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1892:main.c        ****         float tempVel = (float)velocity;
 6534              		.loc 1 1892 0
 6535 0018 FB8A     		ldrh	r3, [r7, #22]
 6536 001a 1846     		mov	r0, r3
 6537 001c FFF7FEFF 		bl	__aeabi_ui2f
 6538 0020 0346     		mov	r3, r0
 6539 0022 3B61     		str	r3, [r7, #16]	@ float
1893:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6540              		.loc 1 1893 0
 6541 0024 4FF05E51 		mov	r1, #931135488
 6542 0028 3869     		ldr	r0, [r7, #16]	@ float
 6543 002a FFF7FEFF 		bl	__aeabi_fmul
 6544 002e 0346     		mov	r3, r0
 6545 0030 3B61     		str	r3, [r7, #16]	@ float
1894:main.c        ****         tempVel = sqrtf(tempVel);
 6546              		.loc 1 1894 0
 6547 0032 3869     		ldr	r0, [r7, #16]	@ float
 6548 0034 FFF7FEFF 		bl	sqrtf
 6549 0038 3861     		str	r0, [r7, #16]	@ float
1895:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6550              		.loc 1 1895 0
 6551 003a 2149     		ldr	r1, .L287+4
 6552 003c 3869     		ldr	r0, [r7, #16]	@ float
 6553 003e FFF7FEFF 		bl	__aeabi_fsub
 6554 0042 0346     		mov	r3, r0
 6555 0044 3B61     		str	r3, [r7, #16]	@ float
1896:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6556              		.loc 1 1896 0
 6557 0046 1F49     		ldr	r1, .L287+8
 6558 0048 3869     		ldr	r0, [r7, #16]	@ float
 6559 004a FFF7FEFF 		bl	__aeabi_fmul
 6560 004e 0346     		mov	r3, r0
 6561 0050 3B61     		str	r3, [r7, #16]	@ float
1897:main.c        ****         velocity = (int)tempVel;
 6562              		.loc 1 1897 0
 6563 0052 3869     		ldr	r0, [r7, #16]	@ float
 6564 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6565 0058 0346     		mov	r3, r0
 6566 005a FB82     		strh	r3, [r7, #22]	@ movhi
1898:main.c        ****         
1899:main.c        **** 
1900:main.c        ****         if (velocity > 127)
 6567              		.loc 1 1900 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 151


 6568 005c FB8A     		ldrh	r3, [r7, #22]
 6569 005e 7F2B     		cmp	r3, #127
 6570 0060 01D9     		bls	.L284
1901:main.c        ****         {
1902:main.c        ****             velocity = 127;
 6571              		.loc 1 1902 0
 6572 0062 7F23     		movs	r3, #127
 6573 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6574              	.L284:
1903:main.c        ****         }
1904:main.c        ****         
1905:main.c        ****         //only update octave on note-ons
1906:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1907:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6575              		.loc 1 1907 0
 6576 0066 184B     		ldr	r3, .L287+12
 6577 0068 1B68     		ldr	r3, [r3]
 6578 006a 1A1F     		subs	r2, r3, #4
 6579 006c 1346     		mov	r3, r2
 6580 006e 5B00     		lsls	r3, r3, #1
 6581 0070 1344     		add	r3, r3, r2
 6582 0072 9B00     		lsls	r3, r3, #2
 6583 0074 1946     		mov	r1, r3
 6584 0076 154A     		ldr	r2, .L287+16
 6585 0078 7B68     		ldr	r3, [r7, #4]
 6586 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6587 007e 0B44     		add	r3, r3, r1
 6588 0080 FB60     		str	r3, [r7, #12]
1908:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6589              		.loc 1 1908 0
 6590 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6591 0084 DBB2     		uxtb	r3, r3
 6592 0086 1946     		mov	r1, r3
 6593 0088 7B68     		ldr	r3, [r7, #4]
 6594 008a 0133     		adds	r3, r3, #1
 6595 008c 1A46     		mov	r2, r3
 6596 008e F868     		ldr	r0, [r7, #12]
 6597 0090 FFF7FEFF 		bl	sendMIDINoteOn
1909:main.c        ****         prevNotes[string] = noteToSend;
 6598              		.loc 1 1909 0
 6599 0094 0E49     		ldr	r1, .L287+20
 6600 0096 7B68     		ldr	r3, [r7, #4]
 6601 0098 FA68     		ldr	r2, [r7, #12]
 6602 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6603              	.LBE34:
1910:main.c        ****             
1911:main.c        ****     }
1912:main.c        ****     else
1913:main.c        ****     {
1914:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1915:main.c        ****     }
1916:main.c        **** 
1917:main.c        **** }
 6604              		.loc 1 1917 0
 6605 009e 09E0     		b	.L286
 6606              	.L283:
1914:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 152


 6607              		.loc 1 1914 0
 6608 00a0 0B4A     		ldr	r2, .L287+20
 6609 00a2 7B68     		ldr	r3, [r7, #4]
 6610 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6611 00a8 7B68     		ldr	r3, [r7, #4]
 6612 00aa 0133     		adds	r3, r3, #1
 6613 00ac 1A46     		mov	r2, r3
 6614 00ae 0021     		movs	r1, #0
 6615 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6616              	.L286:
 6617              		.loc 1 1917 0
 6618 00b4 00BF     		nop
 6619 00b6 1837     		adds	r7, r7, #24
 6620              		.cfi_def_cfa_offset 8
 6621 00b8 BD46     		mov	sp, r7
 6622              		.cfi_def_cfa_register 13
 6623              		@ sp needed
 6624 00ba 80BD     		pop	{r7, pc}
 6625              	.L288:
 6626              		.align	2
 6627              	.L287:
 6628 00bc 00000000 		.word	strings
 6629 00c0 0918C43C 		.word	1019484169
 6630 00c4 551D0243 		.word	1124212053
 6631 00c8 00000000 		.word	octave
 6632 00cc 00000000 		.word	openStringMIDI_Int
 6633 00d0 00000000 		.word	prevNotes
 6634              		.cfi_endproc
 6635              	.LFE86:
 6636              		.size	noteEvent, .-noteEvent
 6637              		.section	.text.CCEvent,"ax",%progbits
 6638              		.align	2
 6639              		.global	CCEvent
 6640              		.thumb
 6641              		.thumb_func
 6642              		.type	CCEvent, %function
 6643              	CCEvent:
 6644              	.LFB87:
1918:main.c        **** 
1919:main.c        **** void CCEvent(int cc, int val)
1920:main.c        **** {
 6645              		.loc 1 1920 0
 6646              		.cfi_startproc
 6647              		@ args = 0, pretend = 0, frame = 8
 6648              		@ frame_needed = 1, uses_anonymous_args = 0
 6649 0000 80B5     		push	{r7, lr}
 6650              		.cfi_def_cfa_offset 8
 6651              		.cfi_offset 7, -8
 6652              		.cfi_offset 14, -4
 6653 0002 82B0     		sub	sp, sp, #8
 6654              		.cfi_def_cfa_offset 16
 6655 0004 00AF     		add	r7, sp, #0
 6656              		.cfi_def_cfa_register 7
 6657 0006 7860     		str	r0, [r7, #4]
 6658 0008 3960     		str	r1, [r7]
1921:main.c        ****     
1922:main.c        ****     sendMIDIControlChange(cc, val, 0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 153


 6659              		.loc 1 1922 0
 6660 000a 0022     		movs	r2, #0
 6661 000c 3968     		ldr	r1, [r7]
 6662 000e 7868     		ldr	r0, [r7, #4]
 6663 0010 FFF7FEFF 		bl	sendMIDIControlChange
1923:main.c        **** }
 6664              		.loc 1 1923 0
 6665 0014 00BF     		nop
 6666 0016 0837     		adds	r7, r7, #8
 6667              		.cfi_def_cfa_offset 8
 6668 0018 BD46     		mov	sp, r7
 6669              		.cfi_def_cfa_register 13
 6670              		@ sp needed
 6671 001a 80BD     		pop	{r7, pc}
 6672              		.cfi_endproc
 6673              	.LFE87:
 6674              		.size	CCEvent, .-CCEvent
 6675              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6676              		.align	2
 6677              		.global	sendMIDINoteOn
 6678              		.thumb
 6679              		.thumb_func
 6680              		.type	sendMIDINoteOn, %function
 6681              	sendMIDINoteOn:
 6682              	.LFB88:
1924:main.c        **** 
1925:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1926:main.c        **** {  
 6683              		.loc 1 1926 0
 6684              		.cfi_startproc
 6685              		@ args = 0, pretend = 0, frame = 16
 6686              		@ frame_needed = 1, uses_anonymous_args = 0
 6687 0000 80B5     		push	{r7, lr}
 6688              		.cfi_def_cfa_offset 8
 6689              		.cfi_offset 7, -8
 6690              		.cfi_offset 14, -4
 6691 0002 84B0     		sub	sp, sp, #16
 6692              		.cfi_def_cfa_offset 24
 6693 0004 00AF     		add	r7, sp, #0
 6694              		.cfi_def_cfa_register 7
 6695 0006 F860     		str	r0, [r7, #12]
 6696 0008 B960     		str	r1, [r7, #8]
 6697 000a 7A60     		str	r2, [r7, #4]
1927:main.c        ****    
1928:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6698              		.loc 1 1928 0
 6699 000c 7B68     		ldr	r3, [r7, #4]
 6700 000e DBB2     		uxtb	r3, r3
 6701 0010 703B     		subs	r3, r3, #112
 6702 0012 DAB2     		uxtb	r2, r3
 6703 0014 114B     		ldr	r3, .L292
 6704 0016 1A70     		strb	r2, [r3]
1929:main.c        ****     midiMsg[1] = MIDInoteNum;
 6705              		.loc 1 1929 0
 6706 0018 FB68     		ldr	r3, [r7, #12]
 6707 001a DAB2     		uxtb	r2, r3
 6708 001c 0F4B     		ldr	r3, .L292
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 154


 6709 001e 5A70     		strb	r2, [r3, #1]
1930:main.c        ****     midiMsg[2] = velocity;	
 6710              		.loc 1 1930 0
 6711 0020 BB68     		ldr	r3, [r7, #8]
 6712 0022 DAB2     		uxtb	r2, r3
 6713 0024 0D4B     		ldr	r3, .L292
 6714 0026 9A70     		strb	r2, [r3, #2]
1931:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6715              		.loc 1 1931 0
 6716 0028 0D4B     		ldr	r3, .L292+4
 6717 002a 1B78     		ldrb	r3, [r3]
 6718 002c DBB2     		uxtb	r3, r3
 6719 002e 002B     		cmp	r3, #0
 6720 0030 09D0     		beq	.L291
 6721              		.loc 1 1931 0 is_stmt 0 discriminator 1
 6722 0032 FFF7FEFF 		bl	USB_VBusPresent
 6723 0036 0346     		mov	r3, r0
 6724 0038 002B     		cmp	r3, #0
 6725 003a 04D0     		beq	.L291
1932:main.c        ****     {
1933:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6726              		.loc 1 1933 0 is_stmt 1
 6727 003c 0022     		movs	r2, #0
 6728 003e 0749     		ldr	r1, .L292
 6729 0040 0320     		movs	r0, #3
 6730 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6731              	.L291:
1934:main.c        ****     } 
1935:main.c        ****     midiSent += 4;
 6732              		.loc 1 1935 0
 6733 0046 074B     		ldr	r3, .L292+8
 6734 0048 1B88     		ldrh	r3, [r3]
 6735 004a 0433     		adds	r3, r3, #4
 6736 004c 9AB2     		uxth	r2, r3
 6737 004e 054B     		ldr	r3, .L292+8
 6738 0050 1A80     		strh	r2, [r3]	@ movhi
1936:main.c        **** }
 6739              		.loc 1 1936 0
 6740 0052 00BF     		nop
 6741 0054 1037     		adds	r7, r7, #16
 6742              		.cfi_def_cfa_offset 8
 6743 0056 BD46     		mov	sp, r7
 6744              		.cfi_def_cfa_register 13
 6745              		@ sp needed
 6746 0058 80BD     		pop	{r7, pc}
 6747              	.L293:
 6748 005a 00BF     		.align	2
 6749              	.L292:
 6750 005c 00000000 		.word	midiMsg
 6751 0060 00000000 		.word	USB_active
 6752 0064 00000000 		.word	midiSent
 6753              		.cfi_endproc
 6754              	.LFE88:
 6755              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6756              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6757              		.align	2
 6758              		.global	sendMIDIPolyKeyPressure
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 155


 6759              		.thumb
 6760              		.thumb_func
 6761              		.type	sendMIDIPolyKeyPressure, %function
 6762              	sendMIDIPolyKeyPressure:
 6763              	.LFB89:
1937:main.c        **** 
1938:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1939:main.c        **** {
 6764              		.loc 1 1939 0
 6765              		.cfi_startproc
 6766              		@ args = 0, pretend = 0, frame = 16
 6767              		@ frame_needed = 1, uses_anonymous_args = 0
 6768 0000 80B5     		push	{r7, lr}
 6769              		.cfi_def_cfa_offset 8
 6770              		.cfi_offset 7, -8
 6771              		.cfi_offset 14, -4
 6772 0002 84B0     		sub	sp, sp, #16
 6773              		.cfi_def_cfa_offset 24
 6774 0004 00AF     		add	r7, sp, #0
 6775              		.cfi_def_cfa_register 7
 6776 0006 F860     		str	r0, [r7, #12]
 6777 0008 B960     		str	r1, [r7, #8]
 6778 000a 7A60     		str	r2, [r7, #4]
1940:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6779              		.loc 1 1940 0
 6780 000c 7B68     		ldr	r3, [r7, #4]
 6781 000e DBB2     		uxtb	r3, r3
 6782 0010 603B     		subs	r3, r3, #96
 6783 0012 DAB2     		uxtb	r2, r3
 6784 0014 114B     		ldr	r3, .L296
 6785 0016 1A70     		strb	r2, [r3]
1941:main.c        ****     midiMsg[1] = MIDInoteNum;
 6786              		.loc 1 1941 0
 6787 0018 FB68     		ldr	r3, [r7, #12]
 6788 001a DAB2     		uxtb	r2, r3
 6789 001c 0F4B     		ldr	r3, .L296
 6790 001e 5A70     		strb	r2, [r3, #1]
1942:main.c        ****     midiMsg[2] = pressure;		
 6791              		.loc 1 1942 0
 6792 0020 BB68     		ldr	r3, [r7, #8]
 6793 0022 DAB2     		uxtb	r2, r3
 6794 0024 0D4B     		ldr	r3, .L296
 6795 0026 9A70     		strb	r2, [r3, #2]
1943:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6796              		.loc 1 1943 0
 6797 0028 0D4B     		ldr	r3, .L296+4
 6798 002a 1B78     		ldrb	r3, [r3]
 6799 002c DBB2     		uxtb	r3, r3
 6800 002e 002B     		cmp	r3, #0
 6801 0030 09D0     		beq	.L295
 6802              		.loc 1 1943 0 is_stmt 0 discriminator 1
 6803 0032 FFF7FEFF 		bl	USB_VBusPresent
 6804 0036 0346     		mov	r3, r0
 6805 0038 002B     		cmp	r3, #0
 6806 003a 04D0     		beq	.L295
1944:main.c        ****     {
1945:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 156


 6807              		.loc 1 1945 0 is_stmt 1
 6808 003c 0022     		movs	r2, #0
 6809 003e 0749     		ldr	r1, .L296
 6810 0040 0320     		movs	r0, #3
 6811 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6812              	.L295:
1946:main.c        ****     } 
1947:main.c        ****     midiSent += 4;
 6813              		.loc 1 1947 0
 6814 0046 074B     		ldr	r3, .L296+8
 6815 0048 1B88     		ldrh	r3, [r3]
 6816 004a 0433     		adds	r3, r3, #4
 6817 004c 9AB2     		uxth	r2, r3
 6818 004e 054B     		ldr	r3, .L296+8
 6819 0050 1A80     		strh	r2, [r3]	@ movhi
1948:main.c        **** }
 6820              		.loc 1 1948 0
 6821 0052 00BF     		nop
 6822 0054 1037     		adds	r7, r7, #16
 6823              		.cfi_def_cfa_offset 8
 6824 0056 BD46     		mov	sp, r7
 6825              		.cfi_def_cfa_register 13
 6826              		@ sp needed
 6827 0058 80BD     		pop	{r7, pc}
 6828              	.L297:
 6829 005a 00BF     		.align	2
 6830              	.L296:
 6831 005c 00000000 		.word	midiMsg
 6832 0060 00000000 		.word	USB_active
 6833 0064 00000000 		.word	midiSent
 6834              		.cfi_endproc
 6835              	.LFE89:
 6836              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 6837              		.section	.text.sendMIDIControlChange,"ax",%progbits
 6838              		.align	2
 6839              		.global	sendMIDIControlChange
 6840              		.thumb
 6841              		.thumb_func
 6842              		.type	sendMIDIControlChange, %function
 6843              	sendMIDIControlChange:
 6844              	.LFB90:
1949:main.c        **** 
1950:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1951:main.c        **** {
 6845              		.loc 1 1951 0
 6846              		.cfi_startproc
 6847              		@ args = 0, pretend = 0, frame = 16
 6848              		@ frame_needed = 1, uses_anonymous_args = 0
 6849 0000 80B5     		push	{r7, lr}
 6850              		.cfi_def_cfa_offset 8
 6851              		.cfi_offset 7, -8
 6852              		.cfi_offset 14, -4
 6853 0002 84B0     		sub	sp, sp, #16
 6854              		.cfi_def_cfa_offset 24
 6855 0004 00AF     		add	r7, sp, #0
 6856              		.cfi_def_cfa_register 7
 6857 0006 F860     		str	r0, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 157


 6858 0008 B960     		str	r1, [r7, #8]
 6859 000a 7A60     		str	r2, [r7, #4]
1952:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 6860              		.loc 1 1952 0
 6861 000c 7B68     		ldr	r3, [r7, #4]
 6862 000e DBB2     		uxtb	r3, r3
 6863 0010 503B     		subs	r3, r3, #80
 6864 0012 DAB2     		uxtb	r2, r3
 6865 0014 114B     		ldr	r3, .L300
 6866 0016 1A70     		strb	r2, [r3]
1953:main.c        ****     midiMsg[1] = CCnum;
 6867              		.loc 1 1953 0
 6868 0018 FB68     		ldr	r3, [r7, #12]
 6869 001a DAB2     		uxtb	r2, r3
 6870 001c 0F4B     		ldr	r3, .L300
 6871 001e 5A70     		strb	r2, [r3, #1]
1954:main.c        ****     midiMsg[2] = CCval;			
 6872              		.loc 1 1954 0
 6873 0020 BB68     		ldr	r3, [r7, #8]
 6874 0022 DAB2     		uxtb	r2, r3
 6875 0024 0D4B     		ldr	r3, .L300
 6876 0026 9A70     		strb	r2, [r3, #2]
1955:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6877              		.loc 1 1955 0
 6878 0028 0D4B     		ldr	r3, .L300+4
 6879 002a 1B78     		ldrb	r3, [r3]
 6880 002c DBB2     		uxtb	r3, r3
 6881 002e 002B     		cmp	r3, #0
 6882 0030 09D0     		beq	.L299
 6883              		.loc 1 1955 0 is_stmt 0 discriminator 1
 6884 0032 FFF7FEFF 		bl	USB_VBusPresent
 6885 0036 0346     		mov	r3, r0
 6886 0038 002B     		cmp	r3, #0
 6887 003a 04D0     		beq	.L299
1956:main.c        ****     {
1957:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6888              		.loc 1 1957 0 is_stmt 1
 6889 003c 0022     		movs	r2, #0
 6890 003e 0749     		ldr	r1, .L300
 6891 0040 0320     		movs	r0, #3
 6892 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6893              	.L299:
1958:main.c        ****     } 
1959:main.c        ****     midiSent += 4;
 6894              		.loc 1 1959 0
 6895 0046 074B     		ldr	r3, .L300+8
 6896 0048 1B88     		ldrh	r3, [r3]
 6897 004a 0433     		adds	r3, r3, #4
 6898 004c 9AB2     		uxth	r2, r3
 6899 004e 054B     		ldr	r3, .L300+8
 6900 0050 1A80     		strh	r2, [r3]	@ movhi
1960:main.c        **** }
 6901              		.loc 1 1960 0
 6902 0052 00BF     		nop
 6903 0054 1037     		adds	r7, r7, #16
 6904              		.cfi_def_cfa_offset 8
 6905 0056 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 158


 6906              		.cfi_def_cfa_register 13
 6907              		@ sp needed
 6908 0058 80BD     		pop	{r7, pc}
 6909              	.L301:
 6910 005a 00BF     		.align	2
 6911              	.L300:
 6912 005c 00000000 		.word	midiMsg
 6913 0060 00000000 		.word	USB_active
 6914 0064 00000000 		.word	midiSent
 6915              		.cfi_endproc
 6916              	.LFE90:
 6917              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 6918              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 6919              		.align	2
 6920              		.global	sendMIDIPitchBend
 6921              		.thumb
 6922              		.thumb_func
 6923              		.type	sendMIDIPitchBend, %function
 6924              	sendMIDIPitchBend:
 6925              	.LFB91:
1961:main.c        **** 
1962:main.c        **** void sendMIDIPitchBend(int val, int channel)
1963:main.c        **** {
 6926              		.loc 1 1963 0
 6927              		.cfi_startproc
 6928              		@ args = 0, pretend = 0, frame = 8
 6929              		@ frame_needed = 1, uses_anonymous_args = 0
 6930 0000 80B5     		push	{r7, lr}
 6931              		.cfi_def_cfa_offset 8
 6932              		.cfi_offset 7, -8
 6933              		.cfi_offset 14, -4
 6934 0002 82B0     		sub	sp, sp, #8
 6935              		.cfi_def_cfa_offset 16
 6936 0004 00AF     		add	r7, sp, #0
 6937              		.cfi_def_cfa_register 7
 6938 0006 7860     		str	r0, [r7, #4]
 6939 0008 3960     		str	r1, [r7]
1964:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 6940              		.loc 1 1964 0
 6941 000a 3B68     		ldr	r3, [r7]
 6942 000c DBB2     		uxtb	r3, r3
 6943 000e 203B     		subs	r3, r3, #32
 6944 0010 DAB2     		uxtb	r2, r3
 6945 0012 134B     		ldr	r3, .L304
 6946 0014 1A70     		strb	r2, [r3]
1965:main.c        ****     midiMsg[1] = (val & 127); //LSB
 6947              		.loc 1 1965 0
 6948 0016 7B68     		ldr	r3, [r7, #4]
 6949 0018 DBB2     		uxtb	r3, r3
 6950 001a 03F07F03 		and	r3, r3, #127
 6951 001e DAB2     		uxtb	r2, r3
 6952 0020 0F4B     		ldr	r3, .L304
 6953 0022 5A70     		strb	r2, [r3, #1]
1966:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 6954              		.loc 1 1966 0
 6955 0024 7B68     		ldr	r3, [r7, #4]
 6956 0026 DB11     		asrs	r3, r3, #7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 159


 6957 0028 DAB2     		uxtb	r2, r3
 6958 002a 0D4B     		ldr	r3, .L304
 6959 002c 9A70     		strb	r2, [r3, #2]
1967:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6960              		.loc 1 1967 0
 6961 002e 0D4B     		ldr	r3, .L304+4
 6962 0030 1B78     		ldrb	r3, [r3]
 6963 0032 DBB2     		uxtb	r3, r3
 6964 0034 002B     		cmp	r3, #0
 6965 0036 09D0     		beq	.L303
 6966              		.loc 1 1967 0 is_stmt 0 discriminator 1
 6967 0038 FFF7FEFF 		bl	USB_VBusPresent
 6968 003c 0346     		mov	r3, r0
 6969 003e 002B     		cmp	r3, #0
 6970 0040 04D0     		beq	.L303
1968:main.c        ****     {
1969:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6971              		.loc 1 1969 0 is_stmt 1
 6972 0042 0022     		movs	r2, #0
 6973 0044 0649     		ldr	r1, .L304
 6974 0046 0320     		movs	r0, #3
 6975 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6976              	.L303:
1970:main.c        ****     } 
1971:main.c        ****     midiSent += 4;
 6977              		.loc 1 1971 0
 6978 004c 064B     		ldr	r3, .L304+8
 6979 004e 1B88     		ldrh	r3, [r3]
 6980 0050 0433     		adds	r3, r3, #4
 6981 0052 9AB2     		uxth	r2, r3
 6982 0054 044B     		ldr	r3, .L304+8
 6983 0056 1A80     		strh	r2, [r3]	@ movhi
1972:main.c        **** }
 6984              		.loc 1 1972 0
 6985 0058 00BF     		nop
 6986 005a 0837     		adds	r7, r7, #8
 6987              		.cfi_def_cfa_offset 8
 6988 005c BD46     		mov	sp, r7
 6989              		.cfi_def_cfa_register 13
 6990              		@ sp needed
 6991 005e 80BD     		pop	{r7, pc}
 6992              	.L305:
 6993              		.align	2
 6994              	.L304:
 6995 0060 00000000 		.word	midiMsg
 6996 0064 00000000 		.word	USB_active
 6997 0068 00000000 		.word	midiSent
 6998              		.cfi_endproc
 6999              	.LFE91:
 7000              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7001              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7002              		.align	2
 7003              		.global	sendMIDIAllNotesOff
 7004              		.thumb
 7005              		.thumb_func
 7006              		.type	sendMIDIAllNotesOff, %function
 7007              	sendMIDIAllNotesOff:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 160


 7008              	.LFB92:
1973:main.c        **** 
1974:main.c        **** void sendMIDIAllNotesOff(void)
1975:main.c        **** {   
 7009              		.loc 1 1975 0
 7010              		.cfi_startproc
 7011              		@ args = 0, pretend = 0, frame = 0
 7012              		@ frame_needed = 1, uses_anonymous_args = 0
 7013 0000 80B5     		push	{r7, lr}
 7014              		.cfi_def_cfa_offset 8
 7015              		.cfi_offset 7, -8
 7016              		.cfi_offset 14, -4
 7017 0002 00AF     		add	r7, sp, #0
 7018              		.cfi_def_cfa_register 7
1976:main.c        ****     for (i = 0; i < 128; i++)
 7019              		.loc 1 1976 0
 7020 0004 144B     		ldr	r3, .L310
 7021 0006 0022     		movs	r2, #0
 7022 0008 1A70     		strb	r2, [r3]
 7023 000a 1EE0     		b	.L307
 7024              	.L309:
1977:main.c        ****     {
1978:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7025              		.loc 1 1978 0
 7026 000c 134B     		ldr	r3, .L310+4
 7027 000e 9022     		movs	r2, #144
 7028 0010 1A70     		strb	r2, [r3]
1979:main.c        ****         midiMsg[1] = i;
 7029              		.loc 1 1979 0
 7030 0012 114B     		ldr	r3, .L310
 7031 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7032 0016 114B     		ldr	r3, .L310+4
 7033 0018 5A70     		strb	r2, [r3, #1]
1980:main.c        ****         midiMsg[2] = 0;	
 7034              		.loc 1 1980 0
 7035 001a 104B     		ldr	r3, .L310+4
 7036 001c 0022     		movs	r2, #0
 7037 001e 9A70     		strb	r2, [r3, #2]
1981:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7038              		.loc 1 1981 0
 7039 0020 0F4B     		ldr	r3, .L310+8
 7040 0022 1B78     		ldrb	r3, [r3]
 7041 0024 DBB2     		uxtb	r3, r3
 7042 0026 002B     		cmp	r3, #0
 7043 0028 09D0     		beq	.L308
 7044              		.loc 1 1981 0 is_stmt 0 discriminator 1
 7045 002a FFF7FEFF 		bl	USB_VBusPresent
 7046 002e 0346     		mov	r3, r0
 7047 0030 002B     		cmp	r3, #0
 7048 0032 04D0     		beq	.L308
1982:main.c        ****         {       
1983:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7049              		.loc 1 1983 0 is_stmt 1
 7050 0034 0022     		movs	r2, #0
 7051 0036 0949     		ldr	r1, .L310+4
 7052 0038 0320     		movs	r0, #3
 7053 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 161


 7054              	.L308:
1976:main.c        ****     {
 7055              		.loc 1 1976 0 discriminator 2
 7056 003e 064B     		ldr	r3, .L310
 7057 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7058 0042 0133     		adds	r3, r3, #1
 7059 0044 DAB2     		uxtb	r2, r3
 7060 0046 044B     		ldr	r3, .L310
 7061 0048 1A70     		strb	r2, [r3]
 7062              	.L307:
1976:main.c        ****     {
 7063              		.loc 1 1976 0 is_stmt 0 discriminator 1
 7064 004a 034B     		ldr	r3, .L310
 7065 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7066 004e 5BB2     		sxtb	r3, r3
 7067 0050 002B     		cmp	r3, #0
 7068 0052 DBDA     		bge	.L309
1984:main.c        ****         }
1985:main.c        ****     }
1986:main.c        **** }
 7069              		.loc 1 1986 0 is_stmt 1
 7070 0054 00BF     		nop
 7071 0056 80BD     		pop	{r7, pc}
 7072              	.L311:
 7073              		.align	2
 7074              	.L310:
 7075 0058 00000000 		.word	i
 7076 005c 00000000 		.word	midiMsg
 7077 0060 00000000 		.word	USB_active
 7078              		.cfi_endproc
 7079              	.LFE92:
 7080              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7081              		.global	checkStatus
 7082              		.bss
 7083              		.type	checkStatus, %object
 7084              		.size	checkStatus, 1
 7085              	checkStatus:
 7086 00f8 00       		.space	1
 7087              		.global	checkBase
 7088 00f9 00       		.align	1
 7089              		.type	checkBase, %object
 7090              		.size	checkBase, 2
 7091              	checkBase:
 7092 00fa 0000     		.space	2
 7093              		.global	SPI_errors
 7094              		.align	2
 7095              		.type	SPI_errors, %object
 7096              		.size	SPI_errors, 4
 7097              	SPI_errors:
 7098 00fc 00000000 		.space	4
 7099              		.section	.text.parseSysex,"ax",%progbits
 7100              		.align	2
 7101              		.global	parseSysex
 7102              		.thumb
 7103              		.thumb_func
 7104              		.type	parseSysex, %function
 7105              	parseSysex:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 162


 7106              	.LFB93:
1987:main.c        **** 
1988:main.c        **** 
1989:main.c        **** 
1990:main.c        **** 
1991:main.c        **** volatile uint8_t checkStatus = 0;
1992:main.c        **** volatile uint16_t checkBase = 0;
1993:main.c        **** 
1994:main.c        **** 
1995:main.c        **** 
1996:main.c        **** int SPI_errors = 0;
1997:main.c        **** 
1998:main.c        **** void parseSysex(void)
1999:main.c        **** {
 7107              		.loc 1 1999 0
 7108              		.cfi_startproc
 7109              		@ args = 0, pretend = 0, frame = 56
 7110              		@ frame_needed = 1, uses_anonymous_args = 0
 7111 0000 90B5     		push	{r4, r7, lr}
 7112              		.cfi_def_cfa_offset 12
 7113              		.cfi_offset 4, -12
 7114              		.cfi_offset 7, -8
 7115              		.cfi_offset 14, -4
 7116 0002 8FB0     		sub	sp, sp, #60
 7117              		.cfi_def_cfa_offset 72
 7118 0004 00AF     		add	r7, sp, #0
 7119              		.cfi_def_cfa_register 7
2000:main.c        ****     parsingSysex = 1;
 7120              		.loc 1 2000 0
 7121 0006 864B     		ldr	r3, .L359
 7122 0008 0122     		movs	r2, #1
 7123 000a 1A70     		strb	r2, [r3]
2001:main.c        ****     //0 = it's a preset
2002:main.c        ****     if (sysexBuffer[0] == 0)
 7124              		.loc 1 2002 0
 7125 000c 854B     		ldr	r3, .L359+4
 7126 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7127 0010 002B     		cmp	r3, #0
 7128 0012 40F09E82 		bne	.L313
 7129              	.LBB35:
2003:main.c        ****     {
2004:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7130              		.loc 1 2004 0
 7131 0016 844B     		ldr	r3, .L359+8
 7132 0018 0122     		movs	r2, #1
 7133 001a 1A70     		strb	r2, [r3]
2005:main.c        ****         currentFloat = 0;
 7134              		.loc 1 2005 0
 7135 001c 834B     		ldr	r3, .L359+12
 7136 001e 0022     		movs	r2, #0
 7137 0020 1A60     		str	r2, [r3]
2006:main.c        ****         presetArraySection = presetName;
 7138              		.loc 1 2006 0
 7139 0022 834B     		ldr	r3, .L359+16
 7140 0024 0022     		movs	r2, #0
 7141 0026 1A70     		strb	r2, [r3]
2007:main.c        ****         presetNumberToWrite = sysexBuffer[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 163


 7142              		.loc 1 2007 0
 7143 0028 7E4B     		ldr	r3, .L359+4
 7144 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7145 002c 814B     		ldr	r3, .L359+20
 7146 002e 1A70     		strb	r2, [r3]
2008:main.c        ****         
2009:main.c        ****         union breakFloat theVal;
2010:main.c        ****         uint32_t i = 2;
 7147              		.loc 1 2010 0
 7148 0030 0223     		movs	r3, #2
 7149 0032 7B63     		str	r3, [r7, #52]
2011:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 7150              		.loc 1 2011 0
 7151 0034 1023     		movs	r3, #16
 7152 0036 FB77     		strb	r3, [r7, #31]
2012:main.c        ****         for (; i < stoppingPoint; i++)
 7153              		.loc 1 2012 0
 7154 0038 22E0     		b	.L314
 7155              	.L315:
2013:main.c        ****         {
2014:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7156              		.loc 1 2014 0 discriminator 2
 7157 003a 7B6B     		ldr	r3, [r7, #52]
 7158 003c 023B     		subs	r3, r3, #2
 7159 003e 7949     		ldr	r1, .L359+4
 7160 0040 7A6B     		ldr	r2, [r7, #52]
 7161 0042 0A44     		add	r2, r2, r1
 7162 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7163 0046 02F07F02 		and	r2, r2, #127
 7164 004a D1B2     		uxtb	r1, r2
 7165 004c 7A4A     		ldr	r2, .L359+24
 7166 004e D154     		strb	r1, [r2, r3]
2015:main.c        ****             presetNamesArray[presetNumberToWrite][i-2] = sysexBuffer[i] & 127;
 7167              		.loc 1 2015 0 discriminator 2
 7168 0050 784B     		ldr	r3, .L359+20
 7169 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7170 0054 1846     		mov	r0, r3
 7171 0056 7B6B     		ldr	r3, [r7, #52]
 7172 0058 9A1E     		subs	r2, r3, #2
 7173 005a 7249     		ldr	r1, .L359+4
 7174 005c 7B6B     		ldr	r3, [r7, #52]
 7175 005e 0B44     		add	r3, r3, r1
 7176 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7177 0062 03F07F03 		and	r3, r3, #127
 7178 0066 DCB2     		uxtb	r4, r3
 7179 0068 7449     		ldr	r1, .L359+28
 7180 006a 0346     		mov	r3, r0
 7181 006c DB00     		lsls	r3, r3, #3
 7182 006e 1B1A     		subs	r3, r3, r0
 7183 0070 5B00     		lsls	r3, r3, #1
 7184 0072 0B44     		add	r3, r3, r1
 7185 0074 1344     		add	r3, r3, r2
 7186 0076 2246     		mov	r2, r4
 7187 0078 1A70     		strb	r2, [r3]
2012:main.c        ****         for (; i < stoppingPoint; i++)
 7188              		.loc 1 2012 0 discriminator 2
 7189 007a 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 164


 7190 007c 0133     		adds	r3, r3, #1
 7191 007e 7B63     		str	r3, [r7, #52]
 7192              	.L314:
2012:main.c        ****         for (; i < stoppingPoint; i++)
 7193              		.loc 1 2012 0 is_stmt 0 discriminator 1
 7194 0080 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 7195 0082 7B6B     		ldr	r3, [r7, #52]
 7196 0084 9A42     		cmp	r2, r3
 7197 0086 D8D8     		bhi	.L315
2016:main.c        ****         }
2017:main.c        ****         
2018:main.c        ****         presetArraySection = macroNames;
 7198              		.loc 1 2018 0 is_stmt 1
 7199 0088 694B     		ldr	r3, .L359+16
 7200 008a 0122     		movs	r2, #1
 7201 008c 1A70     		strb	r2, [r3]
 7202              	.LBB36:
2019:main.c        **** 
2020:main.c        ****         
2021:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7203              		.loc 1 2021 0
 7204 008e 0023     		movs	r3, #0
 7205 0090 3B63     		str	r3, [r7, #48]
 7206 0092 34E0     		b	.L316
 7207              	.L319:
 7208              	.LBB37:
2022:main.c        ****         {
2023:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7209              		.loc 1 2023 0
 7210 0094 0023     		movs	r3, #0
 7211 0096 FB62     		str	r3, [r7, #44]
 7212 0098 2BE0     		b	.L317
 7213              	.L318:
2024:main.c        ****             {
2025:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7214              		.loc 1 2025 0 discriminator 3
 7215 009a 7B6B     		ldr	r3, [r7, #52]
 7216 009c 023B     		subs	r3, r3, #2
 7217 009e 6149     		ldr	r1, .L359+4
 7218 00a0 7A6B     		ldr	r2, [r7, #52]
 7219 00a2 0A44     		add	r2, r2, r1
 7220 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7221 00a6 02F07F02 		and	r2, r2, #127
 7222 00aa D1B2     		uxtb	r1, r2
 7223 00ac 624A     		ldr	r2, .L359+24
 7224 00ae D154     		strb	r1, [r2, r3]
2026:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7225              		.loc 1 2026 0 discriminator 3
 7226 00b0 604B     		ldr	r3, .L359+20
 7227 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7228 00b4 1846     		mov	r0, r3
 7229 00b6 5B4A     		ldr	r2, .L359+4
 7230 00b8 7B6B     		ldr	r3, [r7, #52]
 7231 00ba 1344     		add	r3, r3, r2
 7232 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7233 00be 03F07F03 		and	r3, r3, #127
 7234 00c2 DCB2     		uxtb	r4, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 165


 7235 00c4 5E49     		ldr	r1, .L359+32
 7236 00c6 3B6B     		ldr	r3, [r7, #48]
 7237 00c8 1A46     		mov	r2, r3
 7238 00ca D200     		lsls	r2, r2, #3
 7239 00cc D21A     		subs	r2, r2, r3
 7240 00ce 5300     		lsls	r3, r2, #1
 7241 00d0 1A46     		mov	r2, r3
 7242 00d2 0346     		mov	r3, r0
 7243 00d4 DB00     		lsls	r3, r3, #3
 7244 00d6 1B1A     		subs	r3, r3, r0
 7245 00d8 1B01     		lsls	r3, r3, #4
 7246 00da 1344     		add	r3, r3, r2
 7247 00dc CA18     		adds	r2, r1, r3
 7248 00de FB6A     		ldr	r3, [r7, #44]
 7249 00e0 1344     		add	r3, r3, r2
 7250 00e2 2246     		mov	r2, r4
 7251 00e4 1A70     		strb	r2, [r3]
2027:main.c        ****                 i++;
 7252              		.loc 1 2027 0 discriminator 3
 7253 00e6 7B6B     		ldr	r3, [r7, #52]
 7254 00e8 0133     		adds	r3, r3, #1
 7255 00ea 7B63     		str	r3, [r7, #52]
2023:main.c        ****             {
 7256              		.loc 1 2023 0 discriminator 3
 7257 00ec FB6A     		ldr	r3, [r7, #44]
 7258 00ee 0133     		adds	r3, r3, #1
 7259 00f0 FB62     		str	r3, [r7, #44]
 7260              	.L317:
2023:main.c        ****             {
 7261              		.loc 1 2023 0 is_stmt 0 discriminator 1
 7262 00f2 FB6A     		ldr	r3, [r7, #44]
 7263 00f4 0D2B     		cmp	r3, #13
 7264 00f6 D0DD     		ble	.L318
 7265              	.LBE37:
2021:main.c        ****         {
 7266              		.loc 1 2021 0 is_stmt 1 discriminator 2
 7267 00f8 3B6B     		ldr	r3, [r7, #48]
 7268 00fa 0133     		adds	r3, r3, #1
 7269 00fc 3B63     		str	r3, [r7, #48]
 7270              	.L316:
2021:main.c        ****         {
 7271              		.loc 1 2021 0 is_stmt 0 discriminator 1
 7272 00fe 3B6B     		ldr	r3, [r7, #48]
 7273 0100 072B     		cmp	r3, #7
 7274 0102 C7DD     		ble	.L319
 7275              	.LBE36:
2028:main.c        ****             }
2029:main.c        ****         }
2030:main.c        ****         
2031:main.c        ****         uint16_t valsStart = NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7276              		.loc 1 2031 0 is_stmt 1
 7277 0104 7E23     		movs	r3, #126
 7278 0106 BB83     		strh	r3, [r7, #28]	@ movhi
2032:main.c        ****         
2033:main.c        ****         presetArraySection = initialVals;
 7279              		.loc 1 2033 0
 7280 0108 494B     		ldr	r3, .L359+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 166


 7281 010a 0222     		movs	r2, #2
 7282 010c 1A70     		strb	r2, [r3]
2034:main.c        ****         
2035:main.c        ****         for (; i < sysexPointer; i = i+5)
 7283              		.loc 1 2035 0
 7284 010e 19E2     		b	.L320
 7285              	.L341:
2036:main.c        ****         {
2037:main.c        ****             theVal.u32 = 0;
 7286              		.loc 1 2037 0
 7287 0110 0023     		movs	r3, #0
 7288 0112 BB60     		str	r3, [r7, #8]
2038:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7289              		.loc 1 2038 0
 7290 0114 BB68     		ldr	r3, [r7, #8]
 7291 0116 4349     		ldr	r1, .L359+4
 7292 0118 7A6B     		ldr	r2, [r7, #52]
 7293 011a 0A44     		add	r2, r2, r1
 7294 011c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7295 011e 1207     		lsls	r2, r2, #28
 7296 0120 1343     		orrs	r3, r3, r2
 7297 0122 BB60     		str	r3, [r7, #8]
2039:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 7298              		.loc 1 2039 0
 7299 0124 BB68     		ldr	r3, [r7, #8]
 7300 0126 7A6B     		ldr	r2, [r7, #52]
 7301 0128 0132     		adds	r2, r2, #1
 7302 012a 3E49     		ldr	r1, .L359+4
 7303 012c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7304 012e 5205     		lsls	r2, r2, #21
 7305 0130 1343     		orrs	r3, r3, r2
 7306 0132 BB60     		str	r3, [r7, #8]
2040:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7307              		.loc 1 2040 0
 7308 0134 BB68     		ldr	r3, [r7, #8]
 7309 0136 7A6B     		ldr	r2, [r7, #52]
 7310 0138 0232     		adds	r2, r2, #2
 7311 013a 3A49     		ldr	r1, .L359+4
 7312 013c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7313 013e 9203     		lsls	r2, r2, #14
 7314 0140 1343     		orrs	r3, r3, r2
 7315 0142 BB60     		str	r3, [r7, #8]
2041:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7316              		.loc 1 2041 0
 7317 0144 BB68     		ldr	r3, [r7, #8]
 7318 0146 7A6B     		ldr	r2, [r7, #52]
 7319 0148 0332     		adds	r2, r2, #3
 7320 014a 3649     		ldr	r1, .L359+4
 7321 014c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7322 014e D201     		lsls	r2, r2, #7
 7323 0150 1343     		orrs	r3, r3, r2
 7324 0152 BB60     		str	r3, [r7, #8]
2042:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7325              		.loc 1 2042 0
 7326 0154 BA68     		ldr	r2, [r7, #8]
 7327 0156 7B6B     		ldr	r3, [r7, #52]
 7328 0158 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 167


 7329 015a 3249     		ldr	r1, .L359+4
 7330 015c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7331 015e 03F07F03 		and	r3, r3, #127
 7332 0162 1343     		orrs	r3, r3, r2
 7333 0164 BB60     		str	r3, [r7, #8]
2043:main.c        ****             testVal = theVal.f;
 7334              		.loc 1 2043 0
 7335 0166 BB68     		ldr	r3, [r7, #8]	@ float
 7336 0168 364A     		ldr	r2, .L359+36
 7337 016a 1360     		str	r3, [r2]	@ float
2044:main.c        ****             if (presetArraySection == initialVals)
 7338              		.loc 1 2044 0
 7339 016c 304B     		ldr	r3, .L359+16
 7340 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7341 0170 022B     		cmp	r3, #2
 7342 0172 40F0B980 		bne	.L321
2045:main.c        ****             {
2046:main.c        **** 
2047:main.c        ****                 if (currentFloat == 0)
 7343              		.loc 1 2047 0
 7344 0176 2D4B     		ldr	r3, .L359+12
 7345 0178 1B68     		ldr	r3, [r3]
 7346 017a 002B     		cmp	r3, #0
 7347 017c 22D1     		bne	.L322
2048:main.c        ****                 {
2049:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7348              		.loc 1 2049 0
 7349 017e BB68     		ldr	r3, [r7, #8]	@ float
 7350 0180 1846     		mov	r0, r3
 7351 0182 FFF7FEFF 		bl	__aeabi_f2uiz
 7352 0186 0346     		mov	r3, r0
 7353 0188 9AB2     		uxth	r2, r3
 7354 018a 2F4B     		ldr	r3, .L359+40
 7355 018c 1A80     		strh	r2, [r3]	@ movhi
2050:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7356              		.loc 1 2050 0
 7357 018e BA8B     		ldrh	r2, [r7, #28]
 7358 0190 264B     		ldr	r3, .L359+12
 7359 0192 1B68     		ldr	r3, [r3]
 7360 0194 591C     		adds	r1, r3, #1
 7361 0196 2548     		ldr	r0, .L359+12
 7362 0198 0160     		str	r1, [r0]
 7363 019a 1344     		add	r3, r3, r2
 7364 019c 2A4A     		ldr	r2, .L359+40
 7365 019e 1288     		ldrh	r2, [r2]
 7366 01a0 120A     		lsrs	r2, r2, #8
 7367 01a2 92B2     		uxth	r2, r2
 7368 01a4 D1B2     		uxtb	r1, r2
 7369 01a6 244A     		ldr	r2, .L359+24
 7370 01a8 D154     		strb	r1, [r2, r3]
2051:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7371              		.loc 1 2051 0
 7372 01aa BA8B     		ldrh	r2, [r7, #28]
 7373 01ac 1F4B     		ldr	r3, .L359+12
 7374 01ae 1B68     		ldr	r3, [r3]
 7375 01b0 591C     		adds	r1, r3, #1
 7376 01b2 1E48     		ldr	r0, .L359+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 168


 7377 01b4 0160     		str	r1, [r0]
 7378 01b6 1344     		add	r3, r3, r2
 7379 01b8 234A     		ldr	r2, .L359+40
 7380 01ba 1288     		ldrh	r2, [r2]
 7381 01bc D1B2     		uxtb	r1, r2
 7382 01be 1E4A     		ldr	r2, .L359+24
 7383 01c0 D154     		strb	r1, [r2, r3]
 7384 01c2 BCE1     		b	.L328
 7385              	.L322:
2052:main.c        ****                 }
2053:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7386              		.loc 1 2053 0
 7387 01c4 204B     		ldr	r3, .L359+40
 7388 01c6 1B88     		ldrh	r3, [r3]
 7389 01c8 0133     		adds	r3, r3, #1
 7390 01ca 5B00     		lsls	r3, r3, #1
 7391 01cc 1A46     		mov	r2, r3
 7392 01ce 174B     		ldr	r3, .L359+12
 7393 01d0 1B68     		ldr	r3, [r3]
 7394 01d2 9A42     		cmp	r2, r3
 7395 01d4 3CD9     		bls	.L324
 7396              	.LBB38:
2054:main.c        ****                 { 
2055:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7397              		.loc 1 2055 0
 7398 01d6 BB68     		ldr	r3, [r7, #8]	@ float
 7399 01d8 1C49     		ldr	r1, .L359+44
 7400 01da 1846     		mov	r0, r3
 7401 01dc FFF7FEFF 		bl	__aeabi_fmul
 7402 01e0 0346     		mov	r3, r0
 7403 01e2 1846     		mov	r0, r3
 7404 01e4 FFF7FEFF 		bl	__aeabi_f2uiz
 7405 01e8 0346     		mov	r3, r0
 7406 01ea 7B83     		strh	r3, [r7, #26]	@ movhi
2056:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7407              		.loc 1 2056 0
 7408 01ec BA8B     		ldrh	r2, [r7, #28]
 7409 01ee 0F4B     		ldr	r3, .L359+12
 7410 01f0 1B68     		ldr	r3, [r3]
 7411 01f2 591C     		adds	r1, r3, #1
 7412 01f4 0D48     		ldr	r0, .L359+12
 7413 01f6 0160     		str	r1, [r0]
 7414 01f8 1344     		add	r3, r3, r2
 7415 01fa 7A8B     		ldrh	r2, [r7, #26]
 7416 01fc 120A     		lsrs	r2, r2, #8
 7417 01fe 92B2     		uxth	r2, r2
 7418 0200 D1B2     		uxtb	r1, r2
 7419 0202 0D4A     		ldr	r2, .L359+24
 7420 0204 D154     		strb	r1, [r2, r3]
2057:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7421              		.loc 1 2057 0
 7422 0206 BA8B     		ldrh	r2, [r7, #28]
 7423 0208 084B     		ldr	r3, .L359+12
 7424 020a 1B68     		ldr	r3, [r3]
 7425 020c 591C     		adds	r1, r3, #1
 7426 020e 0748     		ldr	r0, .L359+12
 7427 0210 0160     		str	r1, [r0]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 169


 7428 0212 1344     		add	r3, r3, r2
 7429 0214 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 7430 0216 D1B2     		uxtb	r1, r2
 7431 0218 074A     		ldr	r2, .L359+24
 7432 021a D154     		strb	r1, [r2, r3]
 7433              	.LBE38:
 7434 021c 8FE1     		b	.L328
 7435              	.L360:
 7436 021e 00BF     		.align	2
 7437              	.L359:
 7438 0220 00000000 		.word	parsingSysex
 7439 0224 00000000 		.word	sysexBuffer
 7440 0228 00000000 		.word	sysexMessageInProgress
 7441 022c 00000000 		.word	currentFloat
 7442 0230 00000000 		.word	presetArraySection
 7443 0234 00000000 		.word	presetNumberToWrite
 7444 0238 00000000 		.word	presetArray
 7445 023c 00000000 		.word	presetNamesArray
 7446 0240 00000000 		.word	macroNamesArray
 7447 0244 00000000 		.word	testVal
 7448 0248 00000000 		.word	valsCount
 7449 024c 00FF7F47 		.word	1199570688
 7450              	.L324:
2058:main.c        ****                 }
2059:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7451              		.loc 1 2059 0
 7452 0250 854B     		ldr	r3, .L361
 7453 0252 1B88     		ldrh	r3, [r3]
 7454 0254 0133     		adds	r3, r3, #1
 7455 0256 5B00     		lsls	r3, r3, #1
 7456 0258 1A46     		mov	r2, r3
 7457 025a 844B     		ldr	r3, .L361+4
 7458 025c 1B68     		ldr	r3, [r3]
 7459 025e 9A42     		cmp	r2, r3
 7460 0260 40F06D81 		bne	.L328
2060:main.c        ****                 {
2061:main.c        ****                     valCheck = theVal.f;
 7461              		.loc 1 2061 0
 7462 0264 BB68     		ldr	r3, [r7, #8]	@ float
 7463 0266 824A     		ldr	r2, .L361+8
 7464 0268 1360     		str	r3, [r2]	@ float
2062:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7465              		.loc 1 2062 0
 7466 026a 814B     		ldr	r3, .L361+8
 7467 026c 1B68     		ldr	r3, [r3]	@ float
 7468 026e 8149     		ldr	r1, .L361+12
 7469 0270 1846     		mov	r0, r3
 7470 0272 FFF7FEFF 		bl	__aeabi_fcmplt
 7471 0276 0346     		mov	r3, r0
 7472 0278 002B     		cmp	r3, #0
 7473 027a 23D0     		beq	.L325
 7474              		.loc 1 2062 0 is_stmt 0 discriminator 1
 7475 027c 7C4B     		ldr	r3, .L361+8
 7476 027e 1B68     		ldr	r3, [r3]	@ float
 7477 0280 7D49     		ldr	r1, .L361+16
 7478 0282 1846     		mov	r0, r3
 7479 0284 FFF7FEFF 		bl	__aeabi_fcmpgt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 170


 7480 0288 0346     		mov	r3, r0
 7481 028a 002B     		cmp	r3, #0
 7482 028c 1AD0     		beq	.L325
2063:main.c        ****                     {
2064:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7483              		.loc 1 2064 0 is_stmt 1
 7484 028e BA8B     		ldrh	r2, [r7, #28]
 7485 0290 764B     		ldr	r3, .L361+4
 7486 0292 1B68     		ldr	r3, [r3]
 7487 0294 591C     		adds	r1, r3, #1
 7488 0296 7548     		ldr	r0, .L361+4
 7489 0298 0160     		str	r1, [r0]
 7490 029a 1344     		add	r3, r3, r2
 7491 029c 774A     		ldr	r2, .L361+20
 7492 029e EF21     		movs	r1, #239
 7493 02a0 D154     		strb	r1, [r2, r3]
2065:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7494              		.loc 1 2065 0
 7495 02a2 BA8B     		ldrh	r2, [r7, #28]
 7496 02a4 714B     		ldr	r3, .L361+4
 7497 02a6 1B68     		ldr	r3, [r3]
 7498 02a8 591C     		adds	r1, r3, #1
 7499 02aa 7048     		ldr	r0, .L361+4
 7500 02ac 0160     		str	r1, [r0]
 7501 02ae 1344     		add	r3, r3, r2
 7502 02b0 724A     		ldr	r2, .L361+20
 7503 02b2 EF21     		movs	r1, #239
 7504 02b4 D154     		strb	r1, [r2, r3]
2066:main.c        ****                         presetArraySection = mapCountNext;
 7505              		.loc 1 2066 0
 7506 02b6 724B     		ldr	r3, .L361+24
 7507 02b8 0322     		movs	r2, #3
 7508 02ba 1A70     		strb	r2, [r3]
2067:main.c        ****                         mapCount = 0;
 7509              		.loc 1 2067 0
 7510 02bc 714B     		ldr	r3, .L361+28
 7511 02be 0022     		movs	r2, #0
 7512 02c0 1A60     		str	r2, [r3]
 7513 02c2 3CE1     		b	.L328
 7514              	.L325:
2068:main.c        ****                     }
2069:main.c        ****                     else
2070:main.c        ****                     {
2071:main.c        ****                         //error state
2072:main.c        ****                         SPI_errors++;
 7515              		.loc 1 2072 0
 7516 02c4 704B     		ldr	r3, .L361+32
 7517 02c6 1B68     		ldr	r3, [r3]
 7518 02c8 0133     		adds	r3, r3, #1
 7519 02ca 6F4A     		ldr	r2, .L361+32
 7520 02cc 1360     		str	r3, [r2]
2073:main.c        ****                         sysexMessageInProgress = 0;
 7521              		.loc 1 2073 0
 7522 02ce 6F4B     		ldr	r3, .L361+36
 7523 02d0 0022     		movs	r2, #0
 7524 02d2 1A70     		strb	r2, [r3]
2074:main.c        ****                         sysexPointer = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 171


 7525              		.loc 1 2074 0
 7526 02d4 6E4B     		ldr	r3, .L361+40
 7527 02d6 0022     		movs	r2, #0
 7528 02d8 1A60     		str	r2, [r3]
2075:main.c        ****                         sendingMessage = 0;
 7529              		.loc 1 2075 0
 7530 02da 6E4B     		ldr	r3, .L361+44
 7531 02dc 0022     		movs	r2, #0
 7532 02de 1A70     		strb	r2, [r3]
2076:main.c        ****                         parseThatMF = 0;
 7533              		.loc 1 2076 0
 7534 02e0 6D4B     		ldr	r3, .L361+48
 7535 02e2 0022     		movs	r2, #0
 7536 02e4 1A70     		strb	r2, [r3]
 7537 02e6 2AE1     		b	.L328
 7538              	.L321:
2077:main.c        ****                     }
2078:main.c        ****                 }
2079:main.c        ****             }
2080:main.c        ****             else if (presetArraySection == mapCountNext)
 7539              		.loc 1 2080 0
 7540 02e8 654B     		ldr	r3, .L361+24
 7541 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7542 02ec 032B     		cmp	r3, #3
 7543 02ee 28D1     		bne	.L329
2081:main.c        ****             {
2082:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7544              		.loc 1 2082 0
 7545 02f0 BB68     		ldr	r3, [r7, #8]	@ float
 7546 02f2 1846     		mov	r0, r3
 7547 02f4 FFF7FEFF 		bl	__aeabi_f2uiz
 7548 02f8 0346     		mov	r3, r0
 7549 02fa 9AB2     		uxth	r2, r3
 7550 02fc 674B     		ldr	r3, .L361+52
 7551 02fe 1A80     		strh	r2, [r3]	@ movhi
2083:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7552              		.loc 1 2083 0
 7553 0300 BA8B     		ldrh	r2, [r7, #28]
 7554 0302 5A4B     		ldr	r3, .L361+4
 7555 0304 1B68     		ldr	r3, [r3]
 7556 0306 591C     		adds	r1, r3, #1
 7557 0308 5848     		ldr	r0, .L361+4
 7558 030a 0160     		str	r1, [r0]
 7559 030c 1344     		add	r3, r3, r2
 7560 030e 634A     		ldr	r2, .L361+52
 7561 0310 1288     		ldrh	r2, [r2]
 7562 0312 120A     		lsrs	r2, r2, #8
 7563 0314 92B2     		uxth	r2, r2
 7564 0316 D1B2     		uxtb	r1, r2
 7565 0318 584A     		ldr	r2, .L361+20
 7566 031a D154     		strb	r1, [r2, r3]
2084:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7567              		.loc 1 2084 0
 7568 031c BA8B     		ldrh	r2, [r7, #28]
 7569 031e 534B     		ldr	r3, .L361+4
 7570 0320 1B68     		ldr	r3, [r3]
 7571 0322 591C     		adds	r1, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 172


 7572 0324 5148     		ldr	r0, .L361+4
 7573 0326 0160     		str	r1, [r0]
 7574 0328 1344     		add	r3, r3, r2
 7575 032a 5C4A     		ldr	r2, .L361+52
 7576 032c 1288     		ldrh	r2, [r2]
 7577 032e D1B2     		uxtb	r1, r2
 7578 0330 524A     		ldr	r2, .L361+20
 7579 0332 D154     		strb	r1, [r2, r3]
2085:main.c        ****                 presetArraySection = mapping;
 7580              		.loc 1 2085 0
 7581 0334 524B     		ldr	r3, .L361+24
 7582 0336 0422     		movs	r2, #4
 7583 0338 1A70     		strb	r2, [r3]
2086:main.c        ****                 numMappings = 0;
 7584              		.loc 1 2086 0
 7585 033a 594B     		ldr	r3, .L361+56
 7586 033c 0022     		movs	r2, #0
 7587 033e 1A80     		strh	r2, [r3]	@ movhi
 7588 0340 FDE0     		b	.L328
 7589              	.L329:
2087:main.c        ****             }
2088:main.c        ****             else if (presetArraySection == mapping)
 7590              		.loc 1 2088 0
 7591 0342 4F4B     		ldr	r3, .L361+24
 7592 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7593 0346 042B     		cmp	r3, #4
 7594 0348 40F0F980 		bne	.L328
2089:main.c        ****             {
2090:main.c        ****                 // this is the order
2091:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2092:main.c        ****                 if (numMappings < mapCountExpectation)
 7595              		.loc 1 2092 0
 7596 034c 544B     		ldr	r3, .L361+56
 7597 034e 1A88     		ldrh	r2, [r3]
 7598 0350 524B     		ldr	r3, .L361+52
 7599 0352 1B88     		ldrh	r3, [r3]
 7600 0354 9A42     		cmp	r2, r3
 7601 0356 80F0A780 		bcs	.L330
2093:main.c        ****                 {
2094:main.c        ****                     if ((mapCount % 4) == 0)
 7602              		.loc 1 2094 0
 7603 035a 4A4B     		ldr	r3, .L361+28
 7604 035c 1B68     		ldr	r3, [r3]
 7605 035e 03F00303 		and	r3, r3, #3
 7606 0362 002B     		cmp	r3, #0
 7607 0364 0FD1     		bne	.L331
2095:main.c        ****                     {
2096:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7608              		.loc 1 2096 0
 7609 0366 BA8B     		ldrh	r2, [r7, #28]
 7610 0368 404B     		ldr	r3, .L361+4
 7611 036a 1B68     		ldr	r3, [r3]
 7612 036c 591C     		adds	r1, r3, #1
 7613 036e 3F48     		ldr	r0, .L361+4
 7614 0370 0160     		str	r1, [r0]
 7615 0372 D418     		adds	r4, r2, r3
 7616 0374 BB68     		ldr	r3, [r7, #8]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 173


 7617 0376 1846     		mov	r0, r3
 7618 0378 FFF7FEFF 		bl	__aeabi_f2uiz
 7619 037c 0346     		mov	r3, r0
 7620 037e DAB2     		uxtb	r2, r3
 7621 0380 3E4B     		ldr	r3, .L361+20
 7622 0382 1A55     		strb	r2, [r3, r4]
 7623 0384 69E0     		b	.L332
 7624              	.L331:
2097:main.c        ****                     }
2098:main.c        ****                     else if  (mapCount % 4 == 1)
 7625              		.loc 1 2098 0
 7626 0386 3F4B     		ldr	r3, .L361+28
 7627 0388 1B68     		ldr	r3, [r3]
 7628 038a 03F00303 		and	r3, r3, #3
 7629 038e 012B     		cmp	r3, #1
 7630 0390 0FD1     		bne	.L333
2099:main.c        ****                     {
2100:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7631              		.loc 1 2100 0
 7632 0392 BA8B     		ldrh	r2, [r7, #28]
 7633 0394 354B     		ldr	r3, .L361+4
 7634 0396 1B68     		ldr	r3, [r3]
 7635 0398 591C     		adds	r1, r3, #1
 7636 039a 3448     		ldr	r0, .L361+4
 7637 039c 0160     		str	r1, [r0]
 7638 039e D418     		adds	r4, r2, r3
 7639 03a0 BB68     		ldr	r3, [r7, #8]	@ float
 7640 03a2 1846     		mov	r0, r3
 7641 03a4 FFF7FEFF 		bl	__aeabi_f2uiz
 7642 03a8 0346     		mov	r3, r0
 7643 03aa DAB2     		uxtb	r2, r3
 7644 03ac 334B     		ldr	r3, .L361+20
 7645 03ae 1A55     		strb	r2, [r3, r4]
 7646 03b0 53E0     		b	.L332
 7647              	.L333:
2101:main.c        ****                     }
2102:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 7648              		.loc 1 2102 0
 7649 03b2 344B     		ldr	r3, .L361+28
 7650 03b4 1B68     		ldr	r3, [r3]
 7651 03b6 03F00303 		and	r3, r3, #3
 7652 03ba 022B     		cmp	r3, #2
 7653 03bc 23D1     		bne	.L334
2103:main.c        ****                     {
2104:main.c        ****                         if (theVal.f < 0.0f)
 7654              		.loc 1 2104 0
 7655 03be BB68     		ldr	r3, [r7, #8]	@ float
 7656 03c0 4FF00001 		mov	r1, #0
 7657 03c4 1846     		mov	r0, r3
 7658 03c6 FFF7FEFF 		bl	__aeabi_fcmplt
 7659 03ca 0346     		mov	r3, r0
 7660 03cc 002B     		cmp	r3, #0
 7661 03ce 0AD0     		beq	.L358
2105:main.c        ****                         {
2106:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7662              		.loc 1 2106 0
 7663 03d0 BA8B     		ldrh	r2, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 174


 7664 03d2 264B     		ldr	r3, .L361+4
 7665 03d4 1B68     		ldr	r3, [r3]
 7666 03d6 591C     		adds	r1, r3, #1
 7667 03d8 2448     		ldr	r0, .L361+4
 7668 03da 0160     		str	r1, [r0]
 7669 03dc 1344     		add	r3, r3, r2
 7670 03de 274A     		ldr	r2, .L361+20
 7671 03e0 FF21     		movs	r1, #255
 7672 03e2 D154     		strb	r1, [r2, r3]
 7673 03e4 39E0     		b	.L332
 7674              	.L358:
2107:main.c        ****                         }
2108:main.c        ****                         else
2109:main.c        ****                         {
2110:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7675              		.loc 1 2110 0
 7676 03e6 BA8B     		ldrh	r2, [r7, #28]
 7677 03e8 204B     		ldr	r3, .L361+4
 7678 03ea 1B68     		ldr	r3, [r3]
 7679 03ec 591C     		adds	r1, r3, #1
 7680 03ee 1F48     		ldr	r0, .L361+4
 7681 03f0 0160     		str	r1, [r0]
 7682 03f2 D418     		adds	r4, r2, r3
 7683 03f4 BB68     		ldr	r3, [r7, #8]	@ float
 7684 03f6 1846     		mov	r0, r3
 7685 03f8 FFF7FEFF 		bl	__aeabi_f2uiz
 7686 03fc 0346     		mov	r3, r0
 7687 03fe DAB2     		uxtb	r2, r3
 7688 0400 1E4B     		ldr	r3, .L361+20
 7689 0402 1A55     		strb	r2, [r3, r4]
 7690 0404 29E0     		b	.L332
 7691              	.L334:
 7692              	.LBB39:
2111:main.c        ****                         }
2112:main.c        ****                     }
2113:main.c        ****                     else
2114:main.c        ****                     {
2115:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 7693              		.loc 1 2115 0
 7694 0406 BB68     		ldr	r3, [r7, #8]	@ float
 7695 0408 2649     		ldr	r1, .L361+60
 7696 040a 1846     		mov	r0, r3
 7697 040c FFF7FEFF 		bl	__aeabi_fmul
 7698 0410 0346     		mov	r3, r0
 7699 0412 1846     		mov	r0, r3
 7700 0414 FFF7FEFF 		bl	__aeabi_f2iz
 7701 0418 0346     		mov	r3, r0
 7702 041a 3B83     		strh	r3, [r7, #24]	@ movhi
2116:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7703              		.loc 1 2116 0
 7704 041c BA8B     		ldrh	r2, [r7, #28]
 7705 041e 134B     		ldr	r3, .L361+4
 7706 0420 1B68     		ldr	r3, [r3]
 7707 0422 591C     		adds	r1, r3, #1
 7708 0424 1148     		ldr	r0, .L361+4
 7709 0426 0160     		str	r1, [r0]
 7710 0428 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 175


 7711 042a B7F91820 		ldrsh	r2, [r7, #24]
 7712 042e 1212     		asrs	r2, r2, #8
 7713 0430 12B2     		sxth	r2, r2
 7714 0432 D1B2     		uxtb	r1, r2
 7715 0434 114A     		ldr	r2, .L361+20
 7716 0436 D154     		strb	r1, [r2, r3]
2117:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7717              		.loc 1 2117 0
 7718 0438 BA8B     		ldrh	r2, [r7, #28]
 7719 043a 0C4B     		ldr	r3, .L361+4
 7720 043c 1B68     		ldr	r3, [r3]
 7721 043e 591C     		adds	r1, r3, #1
 7722 0440 0A48     		ldr	r0, .L361+4
 7723 0442 0160     		str	r1, [r0]
 7724 0444 1344     		add	r3, r3, r2
 7725 0446 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 7726 0448 D1B2     		uxtb	r1, r2
 7727 044a 0C4A     		ldr	r2, .L361+20
 7728 044c D154     		strb	r1, [r2, r3]
2118:main.c        ****                         numMappings++;
 7729              		.loc 1 2118 0
 7730 044e 144B     		ldr	r3, .L361+56
 7731 0450 1B88     		ldrh	r3, [r3]
 7732 0452 0133     		adds	r3, r3, #1
 7733 0454 9AB2     		uxth	r2, r3
 7734 0456 124B     		ldr	r3, .L361+56
 7735 0458 1A80     		strh	r2, [r3]	@ movhi
 7736              	.L332:
 7737              	.LBE39:
2119:main.c        ****                     }
2120:main.c        ****                     mapCount++;
 7738              		.loc 1 2120 0
 7739 045a 0A4B     		ldr	r3, .L361+28
 7740 045c 1B68     		ldr	r3, [r3]
 7741 045e 0133     		adds	r3, r3, #1
 7742 0460 084A     		ldr	r2, .L361+28
 7743 0462 1360     		str	r3, [r2]
 7744 0464 6BE0     		b	.L328
 7745              	.L362:
 7746 0466 00BF     		.align	2
 7747              	.L361:
 7748 0468 00000000 		.word	valsCount
 7749 046c 00000000 		.word	currentFloat
 7750 0470 00000000 		.word	valCheck
 7751 0474 0000C0BF 		.word	-1077936128
 7752 0478 000020C0 		.word	-1071644672
 7753 047c 00000000 		.word	presetArray
 7754 0480 00000000 		.word	presetArraySection
 7755 0484 00000000 		.word	mapCount
 7756 0488 00000000 		.word	SPI_errors
 7757 048c 00000000 		.word	sysexMessageInProgress
 7758 0490 00000000 		.word	sysexPointer
 7759 0494 00000000 		.word	sendingMessage
 7760 0498 00000000 		.word	parseThatMF
 7761 049c 00000000 		.word	mapCountExpectation
 7762 04a0 00000000 		.word	numMappings
 7763 04a4 00FEFF46 		.word	1191181824
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 176


 7764              	.L330:
2121:main.c        ****                 }
2122:main.c        ****                 
2123:main.c        **** 
2124:main.c        ****                 else
2125:main.c        ****                 {
2126:main.c        ****                     //mapcount ended
2127:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 7765              		.loc 1 2127 0
 7766 04a8 BB68     		ldr	r3, [r7, #8]	@ float
 7767 04aa 6349     		ldr	r1, .L363
 7768 04ac 1846     		mov	r0, r3
 7769 04ae FFF7FEFF 		bl	__aeabi_fcmplt
 7770 04b2 0346     		mov	r3, r0
 7771 04b4 002B     		cmp	r3, #0
 7772 04b6 31D0     		beq	.L338
 7773              		.loc 1 2127 0 is_stmt 0 discriminator 1
 7774 04b8 BB68     		ldr	r3, [r7, #8]	@ float
 7775 04ba 6049     		ldr	r1, .L363+4
 7776 04bc 1846     		mov	r0, r3
 7777 04be FFF7FEFF 		bl	__aeabi_fcmpgt
 7778 04c2 0346     		mov	r3, r0
 7779 04c4 002B     		cmp	r3, #0
 7780 04c6 29D0     		beq	.L338
2128:main.c        ****                     {
2129:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7781              		.loc 1 2129 0 is_stmt 1
 7782 04c8 BA8B     		ldrh	r2, [r7, #28]
 7783 04ca 5D4B     		ldr	r3, .L363+8
 7784 04cc 1B68     		ldr	r3, [r3]
 7785 04ce 591C     		adds	r1, r3, #1
 7786 04d0 5B48     		ldr	r0, .L363+8
 7787 04d2 0160     		str	r1, [r0]
 7788 04d4 1344     		add	r3, r3, r2
 7789 04d6 5B4A     		ldr	r2, .L363+12
 7790 04d8 FE21     		movs	r1, #254
 7791 04da D154     		strb	r1, [r2, r3]
2130:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7792              		.loc 1 2130 0
 7793 04dc BA8B     		ldrh	r2, [r7, #28]
 7794 04de 584B     		ldr	r3, .L363+8
 7795 04e0 1B68     		ldr	r3, [r3]
 7796 04e2 591C     		adds	r1, r3, #1
 7797 04e4 5648     		ldr	r0, .L363+8
 7798 04e6 0160     		str	r1, [r0]
 7799 04e8 1344     		add	r3, r3, r2
 7800 04ea 564A     		ldr	r2, .L363+12
 7801 04ec FE21     		movs	r1, #254
 7802 04ee D154     		strb	r1, [r2, r3]
2131:main.c        ****                         presetArraySection = presetEnd;
 7803              		.loc 1 2131 0
 7804 04f0 554B     		ldr	r3, .L363+16
 7805 04f2 0522     		movs	r2, #5
 7806 04f4 1A70     		strb	r2, [r3]
2132:main.c        ****                         sysexMessageInProgress = 0;
 7807              		.loc 1 2132 0
 7808 04f6 554B     		ldr	r3, .L363+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 177


 7809 04f8 0022     		movs	r2, #0
 7810 04fa 1A70     		strb	r2, [r3]
2133:main.c        ****                         sendingMessage = 1;
 7811              		.loc 1 2133 0
 7812 04fc 544B     		ldr	r3, .L363+24
 7813 04fe 0122     		movs	r2, #1
 7814 0500 1A70     		strb	r2, [r3]
2134:main.c        ****                         patchNum = presetNumberToWrite;
 7815              		.loc 1 2134 0
 7816 0502 544B     		ldr	r3, .L363+28
 7817 0504 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7818 0506 544B     		ldr	r3, .L363+32
 7819 0508 1A70     		strb	r2, [r3]
2135:main.c        ****                         messageArraySize = valsStart + currentFloat;
 7820              		.loc 1 2135 0
 7821 050a 4D4B     		ldr	r3, .L363+8
 7822 050c 1B68     		ldr	r3, [r3]
 7823 050e 9AB2     		uxth	r2, r3
 7824 0510 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 7825 0512 1344     		add	r3, r3, r2
 7826 0514 9AB2     		uxth	r2, r3
 7827 0516 514B     		ldr	r3, .L363+36
 7828 0518 1A80     		strh	r2, [r3]	@ movhi
 7829 051a 10E0     		b	.L328
 7830              	.L338:
2136:main.c        ****                     }
2137:main.c        ****                     else
2138:main.c        ****                     {
2139:main.c        ****                         //error state
2140:main.c        ****                         SPI_errors++;
 7831              		.loc 1 2140 0
 7832 051c 504B     		ldr	r3, .L363+40
 7833 051e 1B68     		ldr	r3, [r3]
 7834 0520 0133     		adds	r3, r3, #1
 7835 0522 4F4A     		ldr	r2, .L363+40
 7836 0524 1360     		str	r3, [r2]
2141:main.c        ****                         sysexMessageInProgress = 0;
 7837              		.loc 1 2141 0
 7838 0526 494B     		ldr	r3, .L363+20
 7839 0528 0022     		movs	r2, #0
 7840 052a 1A70     		strb	r2, [r3]
2142:main.c        ****                         sysexPointer = 0;
 7841              		.loc 1 2142 0
 7842 052c 4D4B     		ldr	r3, .L363+44
 7843 052e 0022     		movs	r2, #0
 7844 0530 1A60     		str	r2, [r3]
2143:main.c        ****                         sendingMessage = 0;
 7845              		.loc 1 2143 0
 7846 0532 474B     		ldr	r3, .L363+24
 7847 0534 0022     		movs	r2, #0
 7848 0536 1A70     		strb	r2, [r3]
2144:main.c        ****                         parseThatMF = 0;
 7849              		.loc 1 2144 0
 7850 0538 4B4B     		ldr	r3, .L363+48
 7851 053a 0022     		movs	r2, #0
 7852 053c 1A70     		strb	r2, [r3]
 7853              	.L328:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 178


2035:main.c        ****         {
 7854              		.loc 1 2035 0
 7855 053e 7B6B     		ldr	r3, [r7, #52]
 7856 0540 0533     		adds	r3, r3, #5
 7857 0542 7B63     		str	r3, [r7, #52]
 7858              	.L320:
2035:main.c        ****         {
 7859              		.loc 1 2035 0 is_stmt 0 discriminator 1
 7860 0544 474B     		ldr	r3, .L363+44
 7861 0546 1B68     		ldr	r3, [r3]
 7862 0548 7A6B     		ldr	r2, [r7, #52]
 7863 054a 9A42     		cmp	r2, r3
 7864 054c FFF4E0AD 		bcc	.L341
 7865 0550 85E1     		b	.L342
 7866              	.L313:
 7867              	.LBE35:
2145:main.c        ****                     }
2146:main.c        ****                 }
2147:main.c        ****             }
2148:main.c        ****             
2149:main.c        ****         }
2150:main.c        ****     }
2151:main.c        ****     #if 0
2152:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2153:main.c        ****     {
2154:main.c        ****         
2155:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2156:main.c        ****         currentFloat = 0;
2157:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2158:main.c        ****         union breakFloat theVal;
2159:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2160:main.c        ****         {
2161:main.c        ****             theVal.u32 = 0;
2162:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2163:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2164:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2165:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2166:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2167:main.c        ****             testVal = theVal.f;
2168:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2169:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2170:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2171:main.c        ****         }
2172:main.c        ****         
2173:main.c        ****         tuningArray[currentFloat++] = 0xef;
2174:main.c        ****         tuningArray[currentFloat++] = 0xef;
2175:main.c        ****                         
2176:main.c        ****         
2177:main.c        ****         messageArraySize = currentFloat;
2178:main.c        ****                     
2179:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2180:main.c        ****         {
2181:main.c        ****             //error state
2182:main.c        ****             SPI_errors++;
2183:main.c        ****             sysexMessageInProgress = 0;
2184:main.c        ****             sysexPointer = 0;
2185:main.c        ****             sendingMessage = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 179


2186:main.c        ****             parseThatMF = 0;
2187:main.c        ****         } else 
2188:main.c        ****         {
2189:main.c        ****             sysexMessageInProgress = 0;
2190:main.c        ****             sendingMessage = 2;
2191:main.c        ****         }
2192:main.c        ****     }
2193:main.c        ****     #endif
2194:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 7868              		.loc 1 2194 0 is_stmt 1
 7869 0552 464B     		ldr	r3, .L363+52
 7870 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7871 0556 022B     		cmp	r3, #2
 7872 0558 40F08181 		bne	.L342
 7873              	.LBB40:
2195:main.c        ****     {
2196:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7874              		.loc 1 2196 0
 7875 055c 3B4B     		ldr	r3, .L363+20
 7876 055e 0122     		movs	r2, #1
 7877 0560 1A70     		strb	r2, [r3]
2197:main.c        ****         currentFloat = 0;
 7878              		.loc 1 2197 0
 7879 0562 374B     		ldr	r3, .L363+8
 7880 0564 0022     		movs	r2, #0
 7881 0566 1A60     		str	r2, [r3]
2198:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 7882              		.loc 1 2198 0
 7883 0568 404B     		ldr	r3, .L363+52
 7884 056a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7885 056c 404B     		ldr	r3, .L363+56
 7886 056e 1A70     		strb	r2, [r3]
2199:main.c        ****         currentCopedent = copedentNumberToWrite;
 7887              		.loc 1 2199 0
 7888 0570 3F4B     		ldr	r3, .L363+56
 7889 0572 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7890 0574 3F4B     		ldr	r3, .L363+60
 7891 0576 1A70     		strb	r2, [r3]
2200:main.c        ****         necks[currentNeck] = currentCopedent;
 7892              		.loc 1 2200 0
 7893 0578 3F4B     		ldr	r3, .L363+64
 7894 057a 1B68     		ldr	r3, [r3]
 7895 057c 3D4A     		ldr	r2, .L363+60
 7896 057e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 7897 0580 3E4A     		ldr	r2, .L363+68
 7898 0582 D154     		strb	r1, [r2, r3]
2201:main.c        **** 
2202:main.c        ****               
2203:main.c        ****         
2204:main.c        ****         union breakFloat theVal;
2205:main.c        ****         uint32_t i = 2;
 7899              		.loc 1 2205 0
 7900 0584 0223     		movs	r3, #2
 7901 0586 BB62     		str	r3, [r7, #40]
2206:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 7902              		.loc 1 2206 0
 7903 0588 1023     		movs	r3, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 180


 7904 058a FB75     		strb	r3, [r7, #23]
2207:main.c        ****         for (; i < stoppingPoint; i++)
 7905              		.loc 1 2207 0
 7906 058c 40E0     		b	.L343
 7907              	.L344:
 7908              	.LBB41:
2208:main.c        ****         {
2209:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2210:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 7909              		.loc 1 2210 0 discriminator 2
 7910 058e 374A     		ldr	r2, .L363+52
 7911 0590 BB6A     		ldr	r3, [r7, #40]
 7912 0592 1344     		add	r3, r3, r2
 7913 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7914 0596 03F07F03 		and	r3, r3, #127
 7915 059a BB75     		strb	r3, [r7, #22]
2211:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 7916              		.loc 1 2211 0 discriminator 2
 7917 059c 344B     		ldr	r3, .L363+56
 7918 059e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7919 05a0 1846     		mov	r0, r3
 7920 05a2 BB6A     		ldr	r3, [r7, #40]
 7921 05a4 9A1E     		subs	r2, r3, #2
 7922 05a6 3649     		ldr	r1, .L363+72
 7923 05a8 0346     		mov	r3, r0
 7924 05aa DB00     		lsls	r3, r3, #3
 7925 05ac 1B1A     		subs	r3, r3, r0
 7926 05ae 5B00     		lsls	r3, r3, #1
 7927 05b0 0B44     		add	r3, r3, r1
 7928 05b2 1344     		add	r3, r3, r2
 7929 05b4 BA7D     		ldrb	r2, [r7, #22]
 7930 05b6 1A70     		strb	r2, [r3]
2212:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 7931              		.loc 1 2212 0 discriminator 2
 7932 05b8 2D4B     		ldr	r3, .L363+56
 7933 05ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7934 05bc 9BB2     		uxth	r3, r3
 7935 05be 1A46     		mov	r2, r3	@ movhi
 7936 05c0 1201     		lsls	r2, r2, #4
 7937 05c2 1A44     		add	r2, r2, r3
 7938 05c4 9200     		lsls	r2, r2, #2
 7939 05c6 1A44     		add	r2, r2, r3
 7940 05c8 5200     		lsls	r2, r2, #1
 7941 05ca 1344     		add	r3, r3, r2
 7942 05cc 5B00     		lsls	r3, r3, #1
 7943 05ce 9BB2     		uxth	r3, r3
 7944 05d0 0233     		adds	r3, r3, #2
 7945 05d2 9AB2     		uxth	r2, r3
 7946 05d4 2B4B     		ldr	r3, .L363+76
 7947 05d6 1A80     		strh	r2, [r3]	@ movhi
2213:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 7948              		.loc 1 2213 0 discriminator 2
 7949 05d8 254B     		ldr	r3, .L363+56
 7950 05da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7951 05dc 9BB2     		uxth	r3, r3
 7952 05de 1A46     		mov	r2, r3	@ movhi
 7953 05e0 1201     		lsls	r2, r2, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 181


 7954 05e2 1A44     		add	r2, r2, r3
 7955 05e4 9200     		lsls	r2, r2, #2
 7956 05e6 1A44     		add	r2, r2, r3
 7957 05e8 5200     		lsls	r2, r2, #1
 7958 05ea 1344     		add	r3, r3, r2
 7959 05ec 5B00     		lsls	r3, r3, #1
 7960 05ee 9AB2     		uxth	r2, r3
 7961 05f0 BB6A     		ldr	r3, [r7, #40]
 7962 05f2 9BB2     		uxth	r3, r3
 7963 05f4 1344     		add	r3, r3, r2
 7964 05f6 9AB2     		uxth	r2, r3
 7965 05f8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7966 05fa 1146     		mov	r1, r2
 7967 05fc 1846     		mov	r0, r3
 7968 05fe FFF7FEFF 		bl	EEPROM_WriteByte
 7969 0602 0346     		mov	r3, r0
 7970 0604 DAB2     		uxtb	r2, r3
 7971 0606 204B     		ldr	r3, .L363+80
 7972 0608 1A70     		strb	r2, [r3]
 7973              	.LBE41:
2207:main.c        ****         {
 7974              		.loc 1 2207 0 discriminator 2
 7975 060a BB6A     		ldr	r3, [r7, #40]
 7976 060c 0133     		adds	r3, r3, #1
 7977 060e BB62     		str	r3, [r7, #40]
 7978              	.L343:
2207:main.c        ****         {
 7979              		.loc 1 2207 0 is_stmt 0 discriminator 1
 7980 0610 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7981 0612 BB6A     		ldr	r3, [r7, #40]
 7982 0614 9A42     		cmp	r2, r3
 7983 0616 BAD8     		bhi	.L344
2214:main.c        ****         }
2215:main.c        ****         
2216:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 7984              		.loc 1 2216 0 is_stmt 1
 7985 0618 1023     		movs	r3, #16
 7986 061a BB62     		str	r3, [r7, #40]
2217:main.c        **** 
2218:main.c        ****  
2219:main.c        ****         while(i < sysexPointer)
 7987              		.loc 1 2219 0
 7988 061c D7E0     		b	.L345
 7989              	.L350:
 7990              	.LBB42:
2220:main.c        ****         {
2221:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 7991              		.loc 1 2221 0
 7992 061e 0023     		movs	r3, #0
 7993 0620 7B62     		str	r3, [r7, #36]
 7994 0622 D0E0     		b	.L346
 7995              	.L349:
 7996              	.LBB43:
2222:main.c        ****             {
2223:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 7997              		.loc 1 2223 0
 7998 0624 7B6A     		ldr	r3, [r7, #36]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 182


 7999 0626 9BB2     		uxth	r3, r3
 8000 0628 1A46     		mov	r2, r3	@ movhi
 8001 062a 5200     		lsls	r2, r2, #1
 8002 062c 1344     		add	r3, r3, r2
 8003 062e DB00     		lsls	r3, r3, #3
 8004 0630 BB82     		strh	r3, [r7, #20]	@ movhi
 8005              	.LBB44:
2224:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8006              		.loc 1 2224 0
 8007 0632 0023     		movs	r3, #0
 8008 0634 3B62     		str	r3, [r7, #32]
 8009 0636 BFE0     		b	.L347
 8010              	.L364:
 8011              		.align	2
 8012              	.L363:
 8013 0638 000020C0 		.word	-1071644672
 8014 063c 000060C0 		.word	-1067450368
 8015 0640 00000000 		.word	currentFloat
 8016 0644 00000000 		.word	presetArray
 8017 0648 00000000 		.word	presetArraySection
 8018 064c 00000000 		.word	sysexMessageInProgress
 8019 0650 00000000 		.word	sendingMessage
 8020 0654 00000000 		.word	presetNumberToWrite
 8021 0658 00000000 		.word	patchNum
 8022 065c 00000000 		.word	messageArraySize
 8023 0660 00000000 		.word	SPI_errors
 8024 0664 00000000 		.word	sysexPointer
 8025 0668 00000000 		.word	parseThatMF
 8026 066c 00000000 		.word	sysexBuffer
 8027 0670 00000000 		.word	copedentNumberToWrite
 8028 0674 00000000 		.word	currentCopedent
 8029 0678 00000000 		.word	currentNeck
 8030 067c 00000000 		.word	necks
 8031 0680 00000000 		.word	copedentNamesArray
 8032 0684 00000000 		.word	checkBase
 8033 0688 00000000 		.word	checkStatus
 8034              	.L348:
 8035              	.LBB45:
2225:main.c        ****                 {
2226:main.c        ****                     
2227:main.c        ****                     theVal.u32 = 0;
 8036              		.loc 1 2227 0 discriminator 3
 8037 068c 0023     		movs	r3, #0
 8038 068e 7B60     		str	r3, [r7, #4]
2228:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8039              		.loc 1 2228 0 discriminator 3
 8040 0690 7B68     		ldr	r3, [r7, #4]
 8041 0692 7949     		ldr	r1, .L365
 8042 0694 BA6A     		ldr	r2, [r7, #40]
 8043 0696 0A44     		add	r2, r2, r1
 8044 0698 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8045 069a 1207     		lsls	r2, r2, #28
 8046 069c 1343     		orrs	r3, r3, r2
 8047 069e 7B60     		str	r3, [r7, #4]
2229:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8048              		.loc 1 2229 0 discriminator 3
 8049 06a0 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 183


 8050 06a2 BA6A     		ldr	r2, [r7, #40]
 8051 06a4 0132     		adds	r2, r2, #1
 8052 06a6 7449     		ldr	r1, .L365
 8053 06a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8054 06aa 5205     		lsls	r2, r2, #21
 8055 06ac 1343     		orrs	r3, r3, r2
 8056 06ae 7B60     		str	r3, [r7, #4]
2230:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8057              		.loc 1 2230 0 discriminator 3
 8058 06b0 7B68     		ldr	r3, [r7, #4]
 8059 06b2 BA6A     		ldr	r2, [r7, #40]
 8060 06b4 0232     		adds	r2, r2, #2
 8061 06b6 7049     		ldr	r1, .L365
 8062 06b8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8063 06ba 9203     		lsls	r2, r2, #14
 8064 06bc 1343     		orrs	r3, r3, r2
 8065 06be 7B60     		str	r3, [r7, #4]
2231:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8066              		.loc 1 2231 0 discriminator 3
 8067 06c0 7B68     		ldr	r3, [r7, #4]
 8068 06c2 BA6A     		ldr	r2, [r7, #40]
 8069 06c4 0332     		adds	r2, r2, #3
 8070 06c6 6C49     		ldr	r1, .L365
 8071 06c8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8072 06ca D201     		lsls	r2, r2, #7
 8073 06cc 1343     		orrs	r3, r3, r2
 8074 06ce 7B60     		str	r3, [r7, #4]
2232:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8075              		.loc 1 2232 0 discriminator 3
 8076 06d0 7A68     		ldr	r2, [r7, #4]
 8077 06d2 BB6A     		ldr	r3, [r7, #40]
 8078 06d4 0433     		adds	r3, r3, #4
 8079 06d6 6849     		ldr	r1, .L365
 8080 06d8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8081 06da 03F07F03 		and	r3, r3, #127
 8082 06de 1343     		orrs	r3, r3, r2
 8083 06e0 7B60     		str	r3, [r7, #4]
2233:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8084              		.loc 1 2233 0 discriminator 3
 8085 06e2 664B     		ldr	r3, .L365+4
 8086 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8087 06e6 1C46     		mov	r4, r3
 8088 06e8 7968     		ldr	r1, [r7, #4]	@ float
 8089 06ea 6548     		ldr	r0, .L365+8
 8090 06ec 7B6A     		ldr	r3, [r7, #36]
 8091 06ee 1A46     		mov	r2, r3
 8092 06f0 5200     		lsls	r2, r2, #1
 8093 06f2 1A44     		add	r2, r2, r3
 8094 06f4 9300     		lsls	r3, r2, #2
 8095 06f6 1A46     		mov	r2, r3
 8096 06f8 2346     		mov	r3, r4
 8097 06fa 5B01     		lsls	r3, r3, #5
 8098 06fc 2344     		add	r3, r3, r4
 8099 06fe 9B00     		lsls	r3, r3, #2
 8100 0700 1A44     		add	r2, r2, r3
 8101 0702 3B6A     		ldr	r3, [r7, #32]
 8102 0704 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 184


 8103 0706 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2234:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8104              		.loc 1 2234 0 discriminator 3
 8105 070a 7B68     		ldr	r3, [r7, #4]	@ float
 8106 070c 4FF08741 		mov	r1, #1132462080
 8107 0710 1846     		mov	r0, r3
 8108 0712 FFF7FEFF 		bl	__aeabi_fmul
 8109 0716 0346     		mov	r3, r0
 8110 0718 4FF08E41 		mov	r1, #1191182336
 8111 071c 1846     		mov	r0, r3
 8112 071e FFF7FEFF 		bl	__aeabi_fadd
 8113 0722 0346     		mov	r3, r0
 8114 0724 1846     		mov	r0, r3
 8115 0726 FFF7FEFF 		bl	__aeabi_f2uiz
 8116 072a 0346     		mov	r3, r0
 8117 072c 7B82     		strh	r3, [r7, #18]	@ movhi
2235:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8118              		.loc 1 2235 0 discriminator 3
 8119 072e 7B8A     		ldrh	r3, [r7, #18]
 8120 0730 1B0A     		lsrs	r3, r3, #8
 8121 0732 9BB2     		uxth	r3, r3
 8122 0734 7B74     		strb	r3, [r7, #17]
2236:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8123              		.loc 1 2236 0 discriminator 3
 8124 0736 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 8125 0738 3B74     		strb	r3, [r7, #16]
2237:main.c        ****                     
2238:main.c        ****                     
2239:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8126              		.loc 1 2239 0 discriminator 3
 8127 073a 3B6A     		ldr	r3, [r7, #32]
 8128 073c 9BB2     		uxth	r3, r3
 8129 073e 5B00     		lsls	r3, r3, #1
 8130 0740 FB81     		strh	r3, [r7, #14]	@ movhi
2240:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8131              		.loc 1 2240 0 discriminator 3
 8132 0742 FA89     		ldrh	r2, [r7, #14]	@ movhi
 8133 0744 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 8134 0746 1344     		add	r3, r3, r2
 8135 0748 9AB2     		uxth	r2, r3
 8136 074a 4C4B     		ldr	r3, .L365+4
 8137 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8138 074e 9BB2     		uxth	r3, r3
 8139 0750 1946     		mov	r1, r3	@ movhi
 8140 0752 0901     		lsls	r1, r1, #4
 8141 0754 1944     		add	r1, r1, r3
 8142 0756 8900     		lsls	r1, r1, #2
 8143 0758 1944     		add	r1, r1, r3
 8144 075a 4900     		lsls	r1, r1, #1
 8145 075c 0B44     		add	r3, r3, r1
 8146 075e 5B00     		lsls	r3, r3, #1
 8147 0760 9BB2     		uxth	r3, r3
 8148 0762 1344     		add	r3, r3, r2
 8149 0764 9BB2     		uxth	r3, r3
 8150 0766 1033     		adds	r3, r3, #16
 8151 0768 9AB2     		uxth	r2, r3
 8152 076a 464B     		ldr	r3, .L365+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 185


 8153 076c 1A80     		strh	r2, [r3]	@ movhi
2241:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8154              		.loc 1 2241 0 discriminator 3
 8155 076e 454B     		ldr	r3, .L365+12
 8156 0770 1B88     		ldrh	r3, [r3]	@ movhi
 8157 0772 9AB2     		uxth	r2, r3
 8158 0774 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 8159 0776 1146     		mov	r1, r2
 8160 0778 1846     		mov	r0, r3
 8161 077a FFF7FEFF 		bl	EEPROM_WriteByte
 8162 077e 0346     		mov	r3, r0
 8163 0780 DAB2     		uxtb	r2, r3
 8164 0782 414B     		ldr	r3, .L365+16
 8165 0784 1A70     		strb	r2, [r3]
2242:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8166              		.loc 1 2242 0 discriminator 3
 8167 0786 3F4B     		ldr	r3, .L365+12
 8168 0788 1B88     		ldrh	r3, [r3]	@ movhi
 8169 078a 9BB2     		uxth	r3, r3
 8170 078c 0133     		adds	r3, r3, #1
 8171 078e 9AB2     		uxth	r2, r3
 8172 0790 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 8173 0792 1146     		mov	r1, r2
 8174 0794 1846     		mov	r0, r3
 8175 0796 FFF7FEFF 		bl	EEPROM_WriteByte
 8176 079a 0346     		mov	r3, r0
 8177 079c DAB2     		uxtb	r2, r3
 8178 079e 3A4B     		ldr	r3, .L365+16
 8179 07a0 1A70     		strb	r2, [r3]
2243:main.c        ****                     currentFloat++;
 8180              		.loc 1 2243 0 discriminator 3
 8181 07a2 3A4B     		ldr	r3, .L365+20
 8182 07a4 1B68     		ldr	r3, [r3]
 8183 07a6 0133     		adds	r3, r3, #1
 8184 07a8 384A     		ldr	r2, .L365+20
 8185 07aa 1360     		str	r3, [r2]
2244:main.c        ****                     i = i+5;
 8186              		.loc 1 2244 0 discriminator 3
 8187 07ac BB6A     		ldr	r3, [r7, #40]
 8188 07ae 0533     		adds	r3, r3, #5
 8189 07b0 BB62     		str	r3, [r7, #40]
 8190              	.LBE45:
2224:main.c        ****                 {
 8191              		.loc 1 2224 0 discriminator 3
 8192 07b2 3B6A     		ldr	r3, [r7, #32]
 8193 07b4 0133     		adds	r3, r3, #1
 8194 07b6 3B62     		str	r3, [r7, #32]
 8195              	.L347:
2224:main.c        ****                 {
 8196              		.loc 1 2224 0 is_stmt 0 discriminator 1
 8197 07b8 3B6A     		ldr	r3, [r7, #32]
 8198 07ba 0B2B     		cmp	r3, #11
 8199 07bc 7FF666AF 		bls	.L348
 8200              	.LBE44:
 8201              	.LBE43:
2221:main.c        ****             {
 8202              		.loc 1 2221 0 is_stmt 1 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 186


 8203 07c0 7B6A     		ldr	r3, [r7, #36]
 8204 07c2 0133     		adds	r3, r3, #1
 8205 07c4 7B62     		str	r3, [r7, #36]
 8206              	.L346:
2221:main.c        ****             {
 8207              		.loc 1 2221 0 is_stmt 0 discriminator 1
 8208 07c6 7B6A     		ldr	r3, [r7, #36]
 8209 07c8 0A2B     		cmp	r3, #10
 8210 07ca 7FF62BAF 		bls	.L349
 8211              	.L345:
 8212              	.LBE42:
2219:main.c        ****         {
 8213              		.loc 1 2219 0 is_stmt 1
 8214 07ce 304B     		ldr	r3, .L365+24
 8215 07d0 1B68     		ldr	r3, [r3]
 8216 07d2 BA6A     		ldr	r2, [r7, #40]
 8217 07d4 9A42     		cmp	r2, r3
 8218 07d6 FFF422AF 		bcc	.L350
2245:main.c        ****                 }
2246:main.c        ****                 
2247:main.c        ****             }
2248:main.c        ****         }
2249:main.c        ****                         
2250:main.c        ****         
2251:main.c        ****         messageArraySize = currentFloat;
 8219              		.loc 1 2251 0
 8220 07da 2C4B     		ldr	r3, .L365+20
 8221 07dc 1B68     		ldr	r3, [r3]
 8222 07de 9AB2     		uxth	r2, r3
 8223 07e0 2C4B     		ldr	r3, .L365+28
 8224 07e2 1A80     		strh	r2, [r3]	@ movhi
2252:main.c        ****                     
2253:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8225              		.loc 1 2253 0
 8226 07e4 2B4B     		ldr	r3, .L365+28
 8227 07e6 1B88     		ldrh	r3, [r3]
 8228 07e8 842B     		cmp	r3, #132
 8229 07ea 11D0     		beq	.L351
2254:main.c        ****         {
2255:main.c        ****             //error state
2256:main.c        ****             SPI_errors++;
 8230              		.loc 1 2256 0
 8231 07ec 2A4B     		ldr	r3, .L365+32
 8232 07ee 1B68     		ldr	r3, [r3]
 8233 07f0 0133     		adds	r3, r3, #1
 8234 07f2 294A     		ldr	r2, .L365+32
 8235 07f4 1360     		str	r3, [r2]
2257:main.c        ****             sysexMessageInProgress = 0;
 8236              		.loc 1 2257 0
 8237 07f6 294B     		ldr	r3, .L365+36
 8238 07f8 0022     		movs	r2, #0
 8239 07fa 1A70     		strb	r2, [r3]
2258:main.c        ****             sysexPointer = 0;
 8240              		.loc 1 2258 0
 8241 07fc 244B     		ldr	r3, .L365+24
 8242 07fe 0022     		movs	r2, #0
 8243 0800 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 187


2259:main.c        ****             sendingMessage = 0;
 8244              		.loc 1 2259 0
 8245 0802 274B     		ldr	r3, .L365+40
 8246 0804 0022     		movs	r2, #0
 8247 0806 1A70     		strb	r2, [r3]
2260:main.c        ****             parseThatMF = 0;
 8248              		.loc 1 2260 0
 8249 0808 264B     		ldr	r3, .L365+44
 8250 080a 0022     		movs	r2, #0
 8251 080c 1A70     		strb	r2, [r3]
 8252 080e 26E0     		b	.L342
 8253              	.L351:
2261:main.c        ****         } 
2262:main.c        ****         else 
2263:main.c        ****         {
2264:main.c        ****             sysexMessageInProgress = 0;
 8254              		.loc 1 2264 0
 8255 0810 224B     		ldr	r3, .L365+36
 8256 0812 0022     		movs	r2, #0
 8257 0814 1A70     		strb	r2, [r3]
2265:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2266:main.c        ****             
2267:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 8258              		.loc 1 2267 0
 8259 0816 244B     		ldr	r3, .L365+48
 8260 0818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8261 081a 1846     		mov	r0, r3
 8262 081c 0323     		movs	r3, #3
 8263 081e 0022     		movs	r2, #0
 8264 0820 0221     		movs	r1, #2
 8265 0822 FFF7FEFF 		bl	OLEDwriteInt
2268:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 8266              		.loc 1 2268 0
 8267 0826 FFF7FEFF 		bl	OLEDgetCursor
 8268 082a 0246     		mov	r2, r0
 8269 082c 0323     		movs	r3, #3
 8270 082e 0121     		movs	r1, #1
 8271 0830 1E48     		ldr	r0, .L365+52
 8272 0832 FFF7FEFF 		bl	OLEDwriteString
2269:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 8273              		.loc 1 2269 0
 8274 0836 1C4B     		ldr	r3, .L365+48
 8275 0838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8276 083a 1A46     		mov	r2, r3
 8277 083c 1346     		mov	r3, r2
 8278 083e DB00     		lsls	r3, r3, #3
 8279 0840 9B1A     		subs	r3, r3, r2
 8280 0842 5B00     		lsls	r3, r3, #1
 8281 0844 1A4A     		ldr	r2, .L365+56
 8282 0846 9C18     		adds	r4, r3, r2
 8283 0848 FFF7FEFF 		bl	OLEDgetCursor
 8284 084c 0246     		mov	r2, r0
 8285 084e 0323     		movs	r3, #3
 8286 0850 0E21     		movs	r1, #14
 8287 0852 2046     		mov	r0, r4
 8288 0854 FFF7FEFF 		bl	OLEDwriteString
2270:main.c        ****             mainOLEDWaitingToSend = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 188


 8289              		.loc 1 2270 0
 8290 0858 164B     		ldr	r3, .L365+60
 8291 085a 0122     		movs	r2, #1
 8292 085c 1A60     		str	r2, [r3]
 8293              	.L342:
 8294              	.LBE40:
2271:main.c        ****         }
2272:main.c        ****     }
2273:main.c        ****     
2274:main.c        **** 
2275:main.c        ****     parsingSysex = 0;
 8295              		.loc 1 2275 0
 8296 085e 164B     		ldr	r3, .L365+64
 8297 0860 0022     		movs	r2, #0
 8298 0862 1A70     		strb	r2, [r3]
2276:main.c        ****     sysexPointer = 0;
 8299              		.loc 1 2276 0
 8300 0864 0A4B     		ldr	r3, .L365+24
 8301 0866 0022     		movs	r2, #0
 8302 0868 1A60     		str	r2, [r3]
2277:main.c        ****     parseThatMF = 0;
 8303              		.loc 1 2277 0
 8304 086a 0E4B     		ldr	r3, .L365+44
 8305 086c 0022     		movs	r2, #0
 8306 086e 1A70     		strb	r2, [r3]
2278:main.c        **** }
 8307              		.loc 1 2278 0
 8308 0870 00BF     		nop
 8309 0872 3C37     		adds	r7, r7, #60
 8310              		.cfi_def_cfa_offset 12
 8311 0874 BD46     		mov	sp, r7
 8312              		.cfi_def_cfa_register 13
 8313              		@ sp needed
 8314 0876 90BD     		pop	{r4, r7, pc}
 8315              	.L366:
 8316              		.align	2
 8317              	.L365:
 8318 0878 00000000 		.word	sysexBuffer
 8319 087c 00000000 		.word	copedentNumberToWrite
 8320 0880 00000000 		.word	copedent
 8321 0884 00000000 		.word	checkBase
 8322 0888 00000000 		.word	checkStatus
 8323 088c 00000000 		.word	currentFloat
 8324 0890 00000000 		.word	sysexPointer
 8325 0894 00000000 		.word	messageArraySize
 8326 0898 00000000 		.word	SPI_errors
 8327 089c 00000000 		.word	sysexMessageInProgress
 8328 08a0 00000000 		.word	sendingMessage
 8329 08a4 00000000 		.word	parseThatMF
 8330 08a8 00000000 		.word	currentCopedent
 8331 08ac 00040000 		.word	.LC0
 8332 08b0 00000000 		.word	copedentNamesArray
 8333 08b4 00000000 		.word	mainOLEDWaitingToSend
 8334 08b8 00000000 		.word	parsingSysex
 8335              		.cfi_endproc
 8336              	.LFE93:
 8337              		.size	parseSysex, .-parseSysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 189


 8338              		.comm	tempMIDI,4,4
 8339              		.global	firstSysex
 8340              		.bss
 8341              		.type	firstSysex, %object
 8342              		.size	firstSysex, 1
 8343              	firstSysex:
 8344 0100 00       		.space	1
 8345              		.global	sysexPointerMask
 8346              		.section	.rodata
 8347              		.align	1
 8348              		.type	sysexPointerMask, %object
 8349              		.size	sysexPointerMask, 2
 8350              	sysexPointerMask:
 8351 0432 FF07     		.short	2047
 8352              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 8353              		.align	2
 8354              		.global	USB_callbackLocalMidiEvent
 8355              		.thumb
 8356              		.thumb_func
 8357              		.type	USB_callbackLocalMidiEvent, %function
 8358              	USB_callbackLocalMidiEvent:
 8359              	.LFB94:
2279:main.c        **** 
2280:main.c        **** volatile uint8_t tempMIDI[4];
2281:main.c        **** volatile uint8_t firstSysex = 0;
2282:main.c        **** const uint16_t sysexPointerMask = 2047;
2283:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2284:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2285:main.c        **** {   
 8360              		.loc 1 2285 0
 8361              		.cfi_startproc
 8362              		@ args = 0, pretend = 0, frame = 16
 8363              		@ frame_needed = 1, uses_anonymous_args = 0
 8364 0000 80B5     		push	{r7, lr}
 8365              		.cfi_def_cfa_offset 8
 8366              		.cfi_offset 7, -8
 8367              		.cfi_offset 14, -4
 8368 0002 84B0     		sub	sp, sp, #16
 8369              		.cfi_def_cfa_offset 24
 8370 0004 00AF     		add	r7, sp, #0
 8371              		.cfi_def_cfa_register 7
 8372 0006 0346     		mov	r3, r0
 8373 0008 3960     		str	r1, [r7]
 8374 000a FB71     		strb	r3, [r7, #7]
2286:main.c        ****     tempMIDI[0] = midiMsg[0];
 8375              		.loc 1 2286 0
 8376 000c 3B68     		ldr	r3, [r7]
 8377 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8378 0010 434B     		ldr	r3, .L377
 8379 0012 1A70     		strb	r2, [r3]
2287:main.c        ****     tempMIDI[1] = midiMsg[1];
 8380              		.loc 1 2287 0
 8381 0014 3B68     		ldr	r3, [r7]
 8382 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8383 0018 414B     		ldr	r3, .L377
 8384 001a 5A70     		strb	r2, [r3, #1]
2288:main.c        ****      tempMIDI[2] = midiMsg[2];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 190


 8385              		.loc 1 2288 0
 8386 001c 3B68     		ldr	r3, [r7]
 8387 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 8388 0020 3F4B     		ldr	r3, .L377
 8389 0022 9A70     		strb	r2, [r3, #2]
2289:main.c        ****      tempMIDI[3] = midiMsg[3];
 8390              		.loc 1 2289 0
 8391 0024 3B68     		ldr	r3, [r7]
 8392 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 8393 0028 3D4B     		ldr	r3, .L377
 8394 002a DA70     		strb	r2, [r3, #3]
2290:main.c        ****     //check that we got here
2291:main.c        ****     
2292:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8395              		.loc 1 2292 0
 8396 002c 3D4B     		ldr	r3, .L377+4
 8397 002e 1B78     		ldrb	r3, [r3]
 8398 0030 DBB2     		uxtb	r3, r3
 8399 0032 002B     		cmp	r3, #0
 8400 0034 71D0     		beq	.L367
 8401              		.loc 1 2292 0 is_stmt 0 discriminator 1
 8402 0036 FFF7FEFF 		bl	USB_VBusPresent
 8403 003a 0346     		mov	r3, r0
 8404 003c 002B     		cmp	r3, #0
 8405 003e 6CD0     		beq	.L367
2293:main.c        ****     {
2294:main.c        ****         if (receivingSysex)
 8406              		.loc 1 2294 0 is_stmt 1
 8407 0040 394B     		ldr	r3, .L377+8
 8408 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8409 0044 002B     		cmp	r3, #0
 8410 0046 29D0     		beq	.L369
 8411              	.LBB46:
2295:main.c        ****         {
2296:main.c        ****             for (int i = 0; i < 3; i++)
 8412              		.loc 1 2296 0
 8413 0048 0023     		movs	r3, #0
 8414 004a FB60     		str	r3, [r7, #12]
 8415 004c 22E0     		b	.L370
 8416              	.L373:
2297:main.c        ****             {
2298:main.c        ****                 if (midiMsg[i] < 128)
 8417              		.loc 1 2298 0
 8418 004e FB68     		ldr	r3, [r7, #12]
 8419 0050 3A68     		ldr	r2, [r7]
 8420 0052 1344     		add	r3, r3, r2
 8421 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8422 0056 5BB2     		sxtb	r3, r3
 8423 0058 002B     		cmp	r3, #0
 8424 005a 0EDB     		blt	.L371
2299:main.c        ****                 {
2300:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 8425              		.loc 1 2300 0
 8426 005c 334B     		ldr	r3, .L377+12
 8427 005e 1B68     		ldr	r3, [r3]
 8428 0060 5A1C     		adds	r2, r3, #1
 8429 0062 3249     		ldr	r1, .L377+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 191


 8430 0064 0A60     		str	r2, [r1]
 8431 0066 40F2FF72 		movw	r2, #2047
 8432 006a 1340     		ands	r3, r3, r2
 8433 006c FA68     		ldr	r2, [r7, #12]
 8434 006e 3968     		ldr	r1, [r7]
 8435 0070 0A44     		add	r2, r2, r1
 8436 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8437 0074 2E4A     		ldr	r2, .L377+16
 8438 0076 D154     		strb	r1, [r2, r3]
 8439 0078 09E0     		b	.L372
 8440              	.L371:
2301:main.c        ****                 }
2302:main.c        ****                 else
2303:main.c        ****                 {
2304:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 8441              		.loc 1 2304 0
 8442 007a FB68     		ldr	r3, [r7, #12]
 8443 007c 3A68     		ldr	r2, [r7]
 8444 007e 1344     		add	r3, r3, r2
 8445 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8446 0082 F72B     		cmp	r3, #247
 8447 0084 03D1     		bne	.L372
2305:main.c        ****                     {
2306:main.c        ****                         receivingSysex = 0;
 8448              		.loc 1 2306 0
 8449 0086 284B     		ldr	r3, .L377+8
 8450 0088 0022     		movs	r2, #0
 8451 008a 1A70     		strb	r2, [r3]
2307:main.c        ****                         //parseSysex();
2308:main.c        ****                         return;
 8452              		.loc 1 2308 0
 8453 008c 45E0     		b	.L367
 8454              	.L372:
2296:main.c        ****             {
 8455              		.loc 1 2296 0 discriminator 2
 8456 008e FB68     		ldr	r3, [r7, #12]
 8457 0090 0133     		adds	r3, r3, #1
 8458 0092 FB60     		str	r3, [r7, #12]
 8459              	.L370:
2296:main.c        ****             {
 8460              		.loc 1 2296 0 is_stmt 0 discriminator 1
 8461 0094 FB68     		ldr	r3, [r7, #12]
 8462 0096 022B     		cmp	r3, #2
 8463 0098 D9DD     		ble	.L373
 8464 009a 3EE0     		b	.L367
 8465              	.L369:
 8466              	.LBE46:
2309:main.c        ****                      }
2310:main.c        ****                 }
2311:main.c        ****             }
2312:main.c        ****         }
2313:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 8467              		.loc 1 2313 0 is_stmt 1
 8468 009c 3B68     		ldr	r3, [r7]
 8469 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8470 00a0 F02B     		cmp	r3, #240
 8471 00a2 3AD1     		bne	.L367
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 192


2314:main.c        ****         {
2315:main.c        ****             if (!parsingSysex)
 8472              		.loc 1 2315 0
 8473 00a4 234B     		ldr	r3, .L377+20
 8474 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8475 00a8 002B     		cmp	r3, #0
 8476 00aa 36D1     		bne	.L367
2316:main.c        ****             {
2317:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 8477              		.loc 1 2317 0
 8478 00ac 3B68     		ldr	r3, [r7]
 8479 00ae 0133     		adds	r3, r3, #1
 8480 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8481 00b2 7E2B     		cmp	r3, #126
 8482 00b4 03D1     		bne	.L375
2318:main.c        ****                 {
2319:main.c        ****                     parseThatMF = 1;
 8483              		.loc 1 2319 0
 8484 00b6 204B     		ldr	r3, .L377+24
 8485 00b8 0122     		movs	r2, #1
 8486 00ba 1A70     		strb	r2, [r3]
 8487 00bc 2DE0     		b	.L367
 8488              	.L375:
2320:main.c        **** 
2321:main.c        ****                     //sysexPointer = 0;
2322:main.c        ****                 }
2323:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2)
 8489              		.loc 1 2323 0
 8490 00be 3B68     		ldr	r3, [r7]
 8491 00c0 0133     		adds	r3, r3, #1
 8492 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8493 00c4 002B     		cmp	r3, #0
 8494 00c6 09D0     		beq	.L376
 8495              		.loc 1 2323 0 is_stmt 0 discriminator 1
 8496 00c8 3B68     		ldr	r3, [r7]
 8497 00ca 0133     		adds	r3, r3, #1
 8498 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8499 00ce 012B     		cmp	r3, #1
 8500 00d0 04D0     		beq	.L376
 8501              		.loc 1 2323 0 discriminator 2
 8502 00d2 3B68     		ldr	r3, [r7]
 8503 00d4 0133     		adds	r3, r3, #1
 8504 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8505 00d8 022B     		cmp	r3, #2
 8506 00da 1ED1     		bne	.L367
 8507              	.L376:
2324:main.c        ****                 {
2325:main.c        ****                     receivingSysex = 1;
 8508              		.loc 1 2325 0 is_stmt 1
 8509 00dc 124B     		ldr	r3, .L377+8
 8510 00de 0122     		movs	r2, #1
 8511 00e0 1A70     		strb	r2, [r3]
2326:main.c        ****                     
2327:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2328:main.c        ****                     if (sysexPointer == 0)
 8512              		.loc 1 2328 0
 8513 00e2 124B     		ldr	r3, .L377+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 193


 8514 00e4 1B68     		ldr	r3, [r3]
 8515 00e6 002B     		cmp	r3, #0
 8516 00e8 17D1     		bne	.L367
2329:main.c        ****                     {
2330:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 8517              		.loc 1 2330 0
 8518 00ea 104B     		ldr	r3, .L377+12
 8519 00ec 1B68     		ldr	r3, [r3]
 8520 00ee 5A1C     		adds	r2, r3, #1
 8521 00f0 0E49     		ldr	r1, .L377+12
 8522 00f2 0A60     		str	r2, [r1]
 8523 00f4 40F2FF72 		movw	r2, #2047
 8524 00f8 1340     		ands	r3, r3, r2
 8525 00fa 3A68     		ldr	r2, [r7]
 8526 00fc 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 8527 00fe 0C4A     		ldr	r2, .L377+16
 8528 0100 D154     		strb	r1, [r2, r3]
2331:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 8529              		.loc 1 2331 0
 8530 0102 0A4B     		ldr	r3, .L377+12
 8531 0104 1B68     		ldr	r3, [r3]
 8532 0106 5A1C     		adds	r2, r3, #1
 8533 0108 0849     		ldr	r1, .L377+12
 8534 010a 0A60     		str	r2, [r1]
 8535 010c 40F2FF72 		movw	r2, #2047
 8536 0110 1340     		ands	r3, r3, r2
 8537 0112 3A68     		ldr	r2, [r7]
 8538 0114 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 8539 0116 064A     		ldr	r2, .L377+16
 8540 0118 D154     		strb	r1, [r2, r3]
 8541              	.L367:
2332:main.c        ****                     }
2333:main.c        ****                 }
2334:main.c        ****             }
2335:main.c        ****         }
2336:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2337:main.c        ****     }
2338:main.c        **** }    
 8542              		.loc 1 2338 0
 8543 011a 1037     		adds	r7, r7, #16
 8544              		.cfi_def_cfa_offset 8
 8545 011c BD46     		mov	sp, r7
 8546              		.cfi_def_cfa_register 13
 8547              		@ sp needed
 8548 011e 80BD     		pop	{r7, pc}
 8549              	.L378:
 8550              		.align	2
 8551              	.L377:
 8552 0120 00000000 		.word	tempMIDI
 8553 0124 00000000 		.word	USB_active
 8554 0128 00000000 		.word	receivingSysex
 8555 012c 00000000 		.word	sysexPointer
 8556 0130 00000000 		.word	sysexBuffer
 8557 0134 00000000 		.word	parsingSysex
 8558 0138 00000000 		.word	parseThatMF
 8559              		.cfi_endproc
 8560              	.LFE94:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 194


 8561              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 8562              		.text
 8563              	.Letext0:
 8564              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8565              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8566              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8567              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 8568              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8569              		.file 7 "oled.h"
 8570              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 8571              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 8572              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 8573              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 8574              		.section	.debug_info,"",%progbits
 8575              	.Ldebug_info0:
 8576 0000 C41B0000 		.4byte	0x1bc4
 8577 0004 0400     		.2byte	0x4
 8578 0006 00000000 		.4byte	.Ldebug_abbrev0
 8579 000a 04       		.byte	0x4
 8580 000b 01       		.uleb128 0x1
 8581 000c BC080000 		.4byte	.LASF301
 8582 0010 0C       		.byte	0xc
 8583 0011 2F0A0000 		.4byte	.LASF302
 8584 0015 D3060000 		.4byte	.LASF303
 8585 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8586 001d 00000000 		.4byte	0
 8587 0021 00000000 		.4byte	.Ldebug_line0
 8588 0025 02       		.uleb128 0x2
 8589 0026 01       		.byte	0x1
 8590 0027 06       		.byte	0x6
 8591 0028 68030000 		.4byte	.LASF0
 8592 002c 03       		.uleb128 0x3
 8593 002d 12020000 		.4byte	.LASF2
 8594 0031 02       		.byte	0x2
 8595 0032 1D       		.byte	0x1d
 8596 0033 37000000 		.4byte	0x37
 8597 0037 02       		.uleb128 0x2
 8598 0038 01       		.byte	0x1
 8599 0039 08       		.byte	0x8
 8600 003a EF030000 		.4byte	.LASF1
 8601 003e 03       		.uleb128 0x3
 8602 003f FC0C0000 		.4byte	.LASF3
 8603 0043 02       		.byte	0x2
 8604 0044 29       		.byte	0x29
 8605 0045 49000000 		.4byte	0x49
 8606 0049 02       		.uleb128 0x2
 8607 004a 02       		.byte	0x2
 8608 004b 05       		.byte	0x5
 8609 004c B20D0000 		.4byte	.LASF4
 8610 0050 03       		.uleb128 0x3
 8611 0051 1B050000 		.4byte	.LASF5
 8612 0055 02       		.byte	0x2
 8613 0056 2B       		.byte	0x2b
 8614 0057 5B000000 		.4byte	0x5b
 8615 005b 02       		.uleb128 0x2
 8616 005c 02       		.byte	0x2
 8617 005d 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 195


 8618 005e 6C0F0000 		.4byte	.LASF6
 8619 0062 03       		.uleb128 0x3
 8620 0063 970F0000 		.4byte	.LASF7
 8621 0067 02       		.byte	0x2
 8622 0068 3F       		.byte	0x3f
 8623 0069 6D000000 		.4byte	0x6d
 8624 006d 02       		.uleb128 0x2
 8625 006e 04       		.byte	0x4
 8626 006f 05       		.byte	0x5
 8627 0070 65020000 		.4byte	.LASF8
 8628 0074 03       		.uleb128 0x3
 8629 0075 B3090000 		.4byte	.LASF9
 8630 0079 02       		.byte	0x2
 8631 007a 41       		.byte	0x41
 8632 007b 7F000000 		.4byte	0x7f
 8633 007f 02       		.uleb128 0x2
 8634 0080 04       		.byte	0x4
 8635 0081 07       		.byte	0x7
 8636 0082 B0070000 		.4byte	.LASF10
 8637 0086 02       		.uleb128 0x2
 8638 0087 08       		.byte	0x8
 8639 0088 05       		.byte	0x5
 8640 0089 BE090000 		.4byte	.LASF11
 8641 008d 02       		.uleb128 0x2
 8642 008e 08       		.byte	0x8
 8643 008f 07       		.byte	0x7
 8644 0090 200C0000 		.4byte	.LASF12
 8645 0094 04       		.uleb128 0x4
 8646 0095 04       		.byte	0x4
 8647 0096 05       		.byte	0x5
 8648 0097 696E7400 		.ascii	"int\000"
 8649 009b 02       		.uleb128 0x2
 8650 009c 04       		.byte	0x4
 8651 009d 07       		.byte	0x7
 8652 009e BD0A0000 		.4byte	.LASF13
 8653 00a2 03       		.uleb128 0x3
 8654 00a3 74030000 		.4byte	.LASF14
 8655 00a7 03       		.byte	0x3
 8656 00a8 18       		.byte	0x18
 8657 00a9 2C000000 		.4byte	0x2c
 8658 00ad 03       		.uleb128 0x3
 8659 00ae 0B0E0000 		.4byte	.LASF15
 8660 00b2 03       		.byte	0x3
 8661 00b3 20       		.byte	0x20
 8662 00b4 3E000000 		.4byte	0x3e
 8663 00b8 03       		.uleb128 0x3
 8664 00b9 370C0000 		.4byte	.LASF16
 8665 00bd 03       		.byte	0x3
 8666 00be 24       		.byte	0x24
 8667 00bf 50000000 		.4byte	0x50
 8668 00c3 03       		.uleb128 0x3
 8669 00c4 99000000 		.4byte	.LASF17
 8670 00c8 03       		.byte	0x3
 8671 00c9 2C       		.byte	0x2c
 8672 00ca 62000000 		.4byte	0x62
 8673 00ce 03       		.uleb128 0x3
 8674 00cf 180F0000 		.4byte	.LASF18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 196


 8675 00d3 03       		.byte	0x3
 8676 00d4 30       		.byte	0x30
 8677 00d5 74000000 		.4byte	0x74
 8678 00d9 05       		.uleb128 0x5
 8679 00da 860D0000 		.4byte	.LASF19
 8680 00de 04       		.byte	0x4
 8681 00df E901     		.2byte	0x1e9
 8682 00e1 37000000 		.4byte	0x37
 8683 00e5 05       		.uleb128 0x5
 8684 00e6 04100000 		.4byte	.LASF20
 8685 00ea 04       		.byte	0x4
 8686 00eb EA01     		.2byte	0x1ea
 8687 00ed 5B000000 		.4byte	0x5b
 8688 00f1 05       		.uleb128 0x5
 8689 00f2 D5000000 		.4byte	.LASF21
 8690 00f6 04       		.byte	0x4
 8691 00f7 EB01     		.2byte	0x1eb
 8692 00f9 7F000000 		.4byte	0x7f
 8693 00fd 02       		.uleb128 0x2
 8694 00fe 04       		.byte	0x4
 8695 00ff 04       		.byte	0x4
 8696 0100 680A0000 		.4byte	.LASF22
 8697 0104 02       		.uleb128 0x2
 8698 0105 08       		.byte	0x8
 8699 0106 04       		.byte	0x4
 8700 0107 280A0000 		.4byte	.LASF23
 8701 010b 02       		.uleb128 0x2
 8702 010c 01       		.byte	0x1
 8703 010d 08       		.byte	0x8
 8704 010e CF040000 		.4byte	.LASF24
 8705 0112 05       		.uleb128 0x5
 8706 0113 020B0000 		.4byte	.LASF25
 8707 0117 04       		.byte	0x4
 8708 0118 8B02     		.2byte	0x28b
 8709 011a 7F000000 		.4byte	0x7f
 8710 011e 05       		.uleb128 0x5
 8711 011f 980C0000 		.4byte	.LASF26
 8712 0123 04       		.byte	0x4
 8713 0124 9302     		.2byte	0x293
 8714 0126 2A010000 		.4byte	0x12a
 8715 012a 06       		.uleb128 0x6
 8716 012b D9000000 		.4byte	0xd9
 8717 012f 02       		.uleb128 0x2
 8718 0130 08       		.byte	0x8
 8719 0131 04       		.byte	0x4
 8720 0132 9F0B0000 		.4byte	.LASF27
 8721 0136 02       		.uleb128 0x2
 8722 0137 04       		.byte	0x4
 8723 0138 07       		.byte	0x7
 8724 0139 2A000000 		.4byte	.LASF28
 8725 013d 07       		.uleb128 0x7
 8726 013e D9000000 		.4byte	0xd9
 8727 0142 4D010000 		.4byte	0x14d
 8728 0146 08       		.uleb128 0x8
 8729 0147 36010000 		.4byte	0x136
 8730 014b 03       		.byte	0x3
 8731 014c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 197


 8732 014d 09       		.uleb128 0x9
 8733 014e 1C       		.byte	0x1c
 8734 014f 05       		.byte	0x5
 8735 0150 1601     		.2byte	0x116
 8736 0152 BF010000 		.4byte	0x1bf
 8737 0156 0A       		.uleb128 0xa
 8738 0157 7C030000 		.4byte	.LASF29
 8739 015b 05       		.byte	0x5
 8740 015c 1B01     		.2byte	0x11b
 8741 015e F1000000 		.4byte	0xf1
 8742 0162 00       		.byte	0
 8743 0163 0A       		.uleb128 0xa
 8744 0164 D8010000 		.4byte	.LASF30
 8745 0168 05       		.byte	0x5
 8746 0169 2001     		.2byte	0x120
 8747 016b F1000000 		.4byte	0xf1
 8748 016f 04       		.byte	0x4
 8749 0170 0A       		.uleb128 0xa
 8750 0171 D50F0000 		.4byte	.LASF31
 8751 0175 05       		.byte	0x5
 8752 0176 2301     		.2byte	0x123
 8753 0178 F1000000 		.4byte	0xf1
 8754 017c 08       		.byte	0x8
 8755 017d 0A       		.uleb128 0xa
 8756 017e 200E0000 		.4byte	.LASF32
 8757 0182 05       		.byte	0x5
 8758 0183 2601     		.2byte	0x126
 8759 0185 F1000000 		.4byte	0xf1
 8760 0189 0C       		.byte	0xc
 8761 018a 0A       		.uleb128 0xa
 8762 018b 590E0000 		.4byte	.LASF33
 8763 018f 05       		.byte	0x5
 8764 0190 2B01     		.2byte	0x12b
 8765 0192 F1000000 		.4byte	0xf1
 8766 0196 10       		.byte	0x10
 8767 0197 0A       		.uleb128 0xa
 8768 0198 04020000 		.4byte	.LASF34
 8769 019c 05       		.byte	0x5
 8770 019d 2E01     		.2byte	0x12e
 8771 019f D9000000 		.4byte	0xd9
 8772 01a3 14       		.byte	0x14
 8773 01a4 0A       		.uleb128 0xa
 8774 01a5 0F0A0000 		.4byte	.LASF35
 8775 01a9 05       		.byte	0x5
 8776 01aa 3301     		.2byte	0x133
 8777 01ac D9000000 		.4byte	0xd9
 8778 01b0 15       		.byte	0x15
 8779 01b1 0A       		.uleb128 0xa
 8780 01b2 C5010000 		.4byte	.LASF36
 8781 01b6 05       		.byte	0x5
 8782 01b7 3601     		.2byte	0x136
 8783 01b9 F1000000 		.4byte	0xf1
 8784 01bd 18       		.byte	0x18
 8785 01be 00       		.byte	0
 8786 01bf 05       		.uleb128 0x5
 8787 01c0 98070000 		.4byte	.LASF37
 8788 01c4 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 198


 8789 01c5 3701     		.2byte	0x137
 8790 01c7 4D010000 		.4byte	0x14d
 8791 01cb 0B       		.uleb128 0xb
 8792 01cc 01       		.byte	0x1
 8793 01cd 37000000 		.4byte	0x37
 8794 01d1 05       		.byte	0x5
 8795 01d2 5401     		.2byte	0x154
 8796 01d4 F7010000 		.4byte	0x1f7
 8797 01d8 0C       		.uleb128 0xc
 8798 01d9 84000000 		.4byte	.LASF38
 8799 01dd 00       		.byte	0
 8800 01de 0C       		.uleb128 0xc
 8801 01df FE050000 		.4byte	.LASF39
 8802 01e3 01       		.byte	0x1
 8803 01e4 0C       		.uleb128 0xc
 8804 01e5 AB010000 		.4byte	.LASF40
 8805 01e9 02       		.byte	0x2
 8806 01ea 0C       		.uleb128 0xc
 8807 01eb AB030000 		.4byte	.LASF41
 8808 01ef 03       		.byte	0x3
 8809 01f0 0C       		.uleb128 0xc
 8810 01f1 5C080000 		.4byte	.LASF42
 8811 01f5 04       		.byte	0x4
 8812 01f6 00       		.byte	0
 8813 01f7 05       		.uleb128 0x5
 8814 01f8 3E010000 		.4byte	.LASF43
 8815 01fc 05       		.byte	0x5
 8816 01fd 5A01     		.2byte	0x15a
 8817 01ff CB010000 		.4byte	0x1cb
 8818 0203 06       		.uleb128 0x6
 8819 0204 A2000000 		.4byte	0xa2
 8820 0208 06       		.uleb128 0x6
 8821 0209 B8000000 		.4byte	0xb8
 8822 020d 03       		.uleb128 0x3
 8823 020e 75050000 		.4byte	.LASF44
 8824 0212 06       		.byte	0x6
 8825 0213 6C       		.byte	0x6c
 8826 0214 9B000000 		.4byte	0x9b
 8827 0218 0D       		.uleb128 0xd
 8828 0219 C1030000 		.4byte	.LASF50
 8829 021d 01       		.byte	0x1
 8830 021e 37000000 		.4byte	0x37
 8831 0222 07       		.byte	0x7
 8832 0223 1C       		.byte	0x1c
 8833 0224 47020000 		.4byte	0x247
 8834 0228 0C       		.uleb128 0xc
 8835 0229 66090000 		.4byte	.LASF45
 8836 022d 00       		.byte	0
 8837 022e 0C       		.uleb128 0xc
 8838 022f 05030000 		.4byte	.LASF46
 8839 0233 01       		.byte	0x1
 8840 0234 0C       		.uleb128 0xc
 8841 0235 B3000000 		.4byte	.LASF47
 8842 0239 02       		.byte	0x2
 8843 023a 0C       		.uleb128 0xc
 8844 023b 59060000 		.4byte	.LASF48
 8845 023f 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 199


 8846 0240 0C       		.uleb128 0xc
 8847 0241 36010000 		.4byte	.LASF49
 8848 0245 04       		.byte	0x4
 8849 0246 00       		.byte	0
 8850 0247 0D       		.uleb128 0xd
 8851 0248 26030000 		.4byte	.LASF51
 8852 024c 01       		.byte	0x1
 8853 024d 37000000 		.4byte	0x37
 8854 0251 01       		.byte	0x1
 8855 0252 1D       		.byte	0x1d
 8856 0253 7C020000 		.4byte	0x27c
 8857 0257 0C       		.uleb128 0xc
 8858 0258 34060000 		.4byte	.LASF52
 8859 025c 00       		.byte	0
 8860 025d 0C       		.uleb128 0xc
 8861 025e B8040000 		.4byte	.LASF53
 8862 0262 01       		.byte	0x1
 8863 0263 0C       		.uleb128 0xc
 8864 0264 060D0000 		.4byte	.LASF54
 8865 0268 02       		.byte	0x2
 8866 0269 0C       		.uleb128 0xc
 8867 026a B30C0000 		.4byte	.LASF55
 8868 026e 03       		.byte	0x3
 8869 026f 0C       		.uleb128 0xc
 8870 0270 7F0F0000 		.4byte	.LASF56
 8871 0274 04       		.byte	0x4
 8872 0275 0C       		.uleb128 0xc
 8873 0276 22020000 		.4byte	.LASF57
 8874 027a 05       		.byte	0x5
 8875 027b 00       		.byte	0
 8876 027c 0E       		.uleb128 0xe
 8877 027d 570C0000 		.4byte	.LASF304
 8878 0281 04       		.byte	0x4
 8879 0282 01       		.byte	0x1
 8880 0283 A1       		.byte	0xa1
 8881 0284 A6020000 		.4byte	0x2a6
 8882 0288 0F       		.uleb128 0xf
 8883 0289 6600     		.ascii	"f\000"
 8884 028b 01       		.byte	0x1
 8885 028c A2       		.byte	0xa2
 8886 028d FD000000 		.4byte	0xfd
 8887 0291 0F       		.uleb128 0xf
 8888 0292 6200     		.ascii	"b\000"
 8889 0294 01       		.byte	0x1
 8890 0295 A3       		.byte	0xa3
 8891 0296 A6020000 		.4byte	0x2a6
 8892 029a 0F       		.uleb128 0xf
 8893 029b 75333200 		.ascii	"u32\000"
 8894 029f 01       		.byte	0x1
 8895 02a0 A4       		.byte	0xa4
 8896 02a1 CE000000 		.4byte	0xce
 8897 02a5 00       		.byte	0
 8898 02a6 07       		.uleb128 0x7
 8899 02a7 A2000000 		.4byte	0xa2
 8900 02ab B6020000 		.4byte	0x2b6
 8901 02af 08       		.uleb128 0x8
 8902 02b0 36010000 		.4byte	0x136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 200


 8903 02b4 03       		.byte	0x3
 8904 02b5 00       		.byte	0
 8905 02b6 10       		.uleb128 0x10
 8906 02b7 A1030000 		.4byte	.LASF110
 8907 02bb 01       		.byte	0x1
 8908 02bc A8       		.byte	0xa8
 8909 02bd 00000000 		.4byte	.LFB64
 8910 02c1 74010000 		.4byte	.LFE64-.LFB64
 8911 02c5 01       		.uleb128 0x1
 8912 02c6 9C       		.byte	0x9c
 8913 02c7 E2020000 		.4byte	0x2e2
 8914 02cb 11       		.uleb128 0x11
 8915 02cc 66000000 		.4byte	.LBB2
 8916 02d0 7A000000 		.4byte	.LBE2-.LBB2
 8917 02d4 12       		.uleb128 0x12
 8918 02d5 6900     		.ascii	"i\000"
 8919 02d7 01       		.byte	0x1
 8920 02d8 AE       		.byte	0xae
 8921 02d9 94000000 		.4byte	0x94
 8922 02dd 02       		.uleb128 0x2
 8923 02de 91       		.byte	0x91
 8924 02df 6C       		.sleb128 -20
 8925 02e0 00       		.byte	0
 8926 02e1 00       		.byte	0
 8927 02e2 13       		.uleb128 0x13
 8928 02e3 6C0C0000 		.4byte	.LASF58
 8929 02e7 01       		.byte	0x1
 8930 02e8 CC       		.byte	0xcc
 8931 02e9 00000000 		.4byte	.LFB65
 8932 02ed 9C000000 		.4byte	.LFE65-.LFB65
 8933 02f1 01       		.uleb128 0x1
 8934 02f2 9C       		.byte	0x9c
 8935 02f3 13       		.uleb128 0x13
 8936 02f4 DF0A0000 		.4byte	.LASF59
 8937 02f8 01       		.byte	0x1
 8938 02f9 F5       		.byte	0xf5
 8939 02fa 00000000 		.4byte	.LFB66
 8940 02fe 14000000 		.4byte	.LFE66-.LFB66
 8941 0302 01       		.uleb128 0x1
 8942 0303 9C       		.byte	0x9c
 8943 0304 14       		.uleb128 0x14
 8944 0305 7B090000 		.4byte	.LASF60
 8945 0309 01       		.byte	0x1
 8946 030a 0001     		.2byte	0x100
 8947 030c 00000000 		.4byte	.LFB67
 8948 0310 7C000000 		.4byte	.LFE67-.LFB67
 8949 0314 01       		.uleb128 0x1
 8950 0315 9C       		.byte	0x9c
 8951 0316 15       		.uleb128 0x15
 8952 0317 F9040000 		.4byte	.LASF63
 8953 031b 01       		.byte	0x1
 8954 031c 1C01     		.2byte	0x11c
 8955 031e FD000000 		.4byte	0xfd
 8956 0322 00000000 		.4byte	.LFB68
 8957 0326 58000000 		.4byte	.LFE68-.LFB68
 8958 032a 01       		.uleb128 0x1
 8959 032b 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 201


 8960 032c 7C030000 		.4byte	0x37c
 8961 0330 16       		.uleb128 0x16
 8962 0331 6D696E00 		.ascii	"min\000"
 8963 0335 01       		.byte	0x1
 8964 0336 1C01     		.2byte	0x11c
 8965 0338 FD000000 		.4byte	0xfd
 8966 033c 02       		.uleb128 0x2
 8967 033d 91       		.byte	0x91
 8968 033e 6C       		.sleb128 -20
 8969 033f 16       		.uleb128 0x16
 8970 0340 76616C00 		.ascii	"val\000"
 8971 0344 01       		.byte	0x1
 8972 0345 1C01     		.2byte	0x11c
 8973 0347 FD000000 		.4byte	0xfd
 8974 034b 02       		.uleb128 0x2
 8975 034c 91       		.byte	0x91
 8976 034d 68       		.sleb128 -24
 8977 034e 16       		.uleb128 0x16
 8978 034f 6D617800 		.ascii	"max\000"
 8979 0353 01       		.byte	0x1
 8980 0354 1C01     		.2byte	0x11c
 8981 0356 FD000000 		.4byte	0xfd
 8982 035a 02       		.uleb128 0x2
 8983 035b 91       		.byte	0x91
 8984 035c 64       		.sleb128 -28
 8985 035d 17       		.uleb128 0x17
 8986 035e 070A0000 		.4byte	.LASF61
 8987 0362 01       		.byte	0x1
 8988 0363 1E01     		.2byte	0x11e
 8989 0365 FD000000 		.4byte	0xfd
 8990 0369 02       		.uleb128 0x2
 8991 036a 91       		.byte	0x91
 8992 036b 74       		.sleb128 -12
 8993 036c 17       		.uleb128 0x17
 8994 036d 68040000 		.4byte	.LASF62
 8995 0371 01       		.byte	0x1
 8996 0372 1F01     		.2byte	0x11f
 8997 0374 FD000000 		.4byte	0xfd
 8998 0378 02       		.uleb128 0x2
 8999 0379 91       		.byte	0x91
 9000 037a 70       		.sleb128 -16
 9001 037b 00       		.byte	0
 9002 037c 15       		.uleb128 0x15
 9003 037d B60F0000 		.4byte	.LASF64
 9004 0381 01       		.byte	0x1
 9005 0382 3201     		.2byte	0x132
 9006 0384 FD000000 		.4byte	0xfd
 9007 0388 00000000 		.4byte	.LFB69
 9008 038c 68000000 		.4byte	.LFE69-.LFB69
 9009 0390 01       		.uleb128 0x1
 9010 0391 9C       		.byte	0x9c
 9011 0392 A4030000 		.4byte	0x3a4
 9012 0396 16       		.uleb128 0x16
 9013 0397 6600     		.ascii	"f\000"
 9014 0399 01       		.byte	0x1
 9015 039a 3201     		.2byte	0x132
 9016 039c FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 202


 9017 03a0 02       		.uleb128 0x2
 9018 03a1 91       		.byte	0x91
 9019 03a2 74       		.sleb128 -12
 9020 03a3 00       		.byte	0
 9021 03a4 15       		.uleb128 0x15
 9022 03a5 DE0B0000 		.4byte	.LASF65
 9023 03a9 01       		.byte	0x1
 9024 03aa 3901     		.2byte	0x139
 9025 03ac FD000000 		.4byte	0xfd
 9026 03b0 00000000 		.4byte	.LFB70
 9027 03b4 4C000000 		.4byte	.LFE70-.LFB70
 9028 03b8 01       		.uleb128 0x1
 9029 03b9 9C       		.byte	0x9c
 9030 03ba CC030000 		.4byte	0x3cc
 9031 03be 16       		.uleb128 0x16
 9032 03bf 6600     		.ascii	"f\000"
 9033 03c1 01       		.byte	0x1
 9034 03c2 3901     		.2byte	0x139
 9035 03c4 FD000000 		.4byte	0xfd
 9036 03c8 02       		.uleb128 0x2
 9037 03c9 91       		.byte	0x91
 9038 03ca 74       		.sleb128 -12
 9039 03cb 00       		.byte	0
 9040 03cc 15       		.uleb128 0x15
 9041 03cd 74070000 		.4byte	.LASF66
 9042 03d1 01       		.byte	0x1
 9043 03d2 3F01     		.2byte	0x13f
 9044 03d4 FD000000 		.4byte	0xfd
 9045 03d8 00000000 		.4byte	.LFB71
 9046 03dc 46000000 		.4byte	.LFE71-.LFB71
 9047 03e0 01       		.uleb128 0x1
 9048 03e1 9C       		.byte	0x9c
 9049 03e2 2E040000 		.4byte	0x42e
 9050 03e6 16       		.uleb128 0x16
 9051 03e7 4100     		.ascii	"A\000"
 9052 03e9 01       		.byte	0x1
 9053 03ea 3F01     		.2byte	0x13f
 9054 03ec FD000000 		.4byte	0xfd
 9055 03f0 02       		.uleb128 0x2
 9056 03f1 91       		.byte	0x91
 9057 03f2 6C       		.sleb128 -20
 9058 03f3 16       		.uleb128 0x16
 9059 03f4 4200     		.ascii	"B\000"
 9060 03f6 01       		.byte	0x1
 9061 03f7 3F01     		.2byte	0x13f
 9062 03f9 FD000000 		.4byte	0xfd
 9063 03fd 02       		.uleb128 0x2
 9064 03fe 91       		.byte	0x91
 9065 03ff 68       		.sleb128 -24
 9066 0400 18       		.uleb128 0x18
 9067 0401 1C020000 		.4byte	.LASF67
 9068 0405 01       		.byte	0x1
 9069 0406 3F01     		.2byte	0x13f
 9070 0408 FD000000 		.4byte	0xfd
 9071 040c 02       		.uleb128 0x2
 9072 040d 91       		.byte	0x91
 9073 040e 64       		.sleb128 -28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 203


 9074 040f 17       		.uleb128 0x17
 9075 0410 51030000 		.4byte	.LASF68
 9076 0414 01       		.byte	0x1
 9077 0415 4101     		.2byte	0x141
 9078 0417 FD000000 		.4byte	0xfd
 9079 041b 02       		.uleb128 0x2
 9080 041c 91       		.byte	0x91
 9081 041d 74       		.sleb128 -12
 9082 041e 19       		.uleb128 0x19
 9083 041f 6F757400 		.ascii	"out\000"
 9084 0423 01       		.byte	0x1
 9085 0424 4401     		.2byte	0x144
 9086 0426 FD000000 		.4byte	0xfd
 9087 042a 02       		.uleb128 0x2
 9088 042b 91       		.byte	0x91
 9089 042c 70       		.sleb128 -16
 9090 042d 00       		.byte	0
 9091 042e 1A       		.uleb128 0x1a
 9092 042f 6D617000 		.ascii	"map\000"
 9093 0433 01       		.byte	0x1
 9094 0434 B201     		.2byte	0x1b2
 9095 0436 FD000000 		.4byte	0xfd
 9096 043a 00000000 		.4byte	.LFB72
 9097 043e 56000000 		.4byte	.LFE72-.LFB72
 9098 0442 01       		.uleb128 0x1
 9099 0443 9C       		.byte	0x9c
 9100 0444 94040000 		.4byte	0x494
 9101 0448 18       		.uleb128 0x18
 9102 0449 7E040000 		.4byte	.LASF69
 9103 044d 01       		.byte	0x1
 9104 044e B201     		.2byte	0x1b2
 9105 0450 FD000000 		.4byte	0xfd
 9106 0454 02       		.uleb128 0x2
 9107 0455 91       		.byte	0x91
 9108 0456 6C       		.sleb128 -20
 9109 0457 18       		.uleb128 0x18
 9110 0458 EC010000 		.4byte	.LASF70
 9111 045c 01       		.byte	0x1
 9112 045d B201     		.2byte	0x1b2
 9113 045f FD000000 		.4byte	0xfd
 9114 0463 02       		.uleb128 0x2
 9115 0464 91       		.byte	0x91
 9116 0465 68       		.sleb128 -24
 9117 0466 18       		.uleb128 0x18
 9118 0467 A5080000 		.4byte	.LASF71
 9119 046b 01       		.byte	0x1
 9120 046c B201     		.2byte	0x1b2
 9121 046e FD000000 		.4byte	0xfd
 9122 0472 02       		.uleb128 0x2
 9123 0473 91       		.byte	0x91
 9124 0474 64       		.sleb128 -28
 9125 0475 18       		.uleb128 0x18
 9126 0476 74080000 		.4byte	.LASF72
 9127 047a 01       		.byte	0x1
 9128 047b B201     		.2byte	0x1b2
 9129 047d FD000000 		.4byte	0xfd
 9130 0481 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 204


 9131 0482 91       		.byte	0x91
 9132 0483 60       		.sleb128 -32
 9133 0484 18       		.uleb128 0x18
 9134 0485 5A0A0000 		.4byte	.LASF73
 9135 0489 01       		.byte	0x1
 9136 048a B201     		.2byte	0x1b2
 9137 048c FD000000 		.4byte	0xfd
 9138 0490 02       		.uleb128 0x2
 9139 0491 91       		.byte	0x91
 9140 0492 00       		.sleb128 0
 9141 0493 00       		.byte	0
 9142 0494 1B       		.uleb128 0x1b
 9143 0495 87050000 		.4byte	.LASF74
 9144 0499 01       		.byte	0x1
 9145 049a BD01     		.2byte	0x1bd
 9146 049c 00000000 		.4byte	.LFB73
 9147 04a0 0C000000 		.4byte	.LFE73-.LFB73
 9148 04a4 01       		.uleb128 0x1
 9149 04a5 9C       		.byte	0x9c
 9150 04a6 1B       		.uleb128 0x1b
 9151 04a7 600D0000 		.4byte	.LASF75
 9152 04ab 01       		.byte	0x1
 9153 04ac C201     		.2byte	0x1c2
 9154 04ae 00000000 		.4byte	.LFB74
 9155 04b2 0C000000 		.4byte	.LFE74-.LFB74
 9156 04b6 01       		.uleb128 0x1
 9157 04b7 9C       		.byte	0x9c
 9158 04b8 1C       		.uleb128 0x1c
 9159 04b9 4D0F0000 		.4byte	.LASF305
 9160 04bd 01       		.byte	0x1
 9161 04be C801     		.2byte	0x1c8
 9162 04c0 00000000 		.4byte	.LFB75
 9163 04c4 0C010000 		.4byte	.LFE75-.LFB75
 9164 04c8 01       		.uleb128 0x1
 9165 04c9 9C       		.byte	0x9c
 9166 04ca FF040000 		.4byte	0x4ff
 9167 04ce 11       		.uleb128 0x11
 9168 04cf 06000000 		.4byte	.LBB3
 9169 04d3 EA000000 		.4byte	.LBE3-.LBB3
 9170 04d7 19       		.uleb128 0x19
 9171 04d8 6900     		.ascii	"i\000"
 9172 04da 01       		.byte	0x1
 9173 04db CC01     		.2byte	0x1cc
 9174 04dd 94000000 		.4byte	0x94
 9175 04e1 02       		.uleb128 0x2
 9176 04e2 91       		.byte	0x91
 9177 04e3 6C       		.sleb128 -20
 9178 04e4 11       		.uleb128 0x11
 9179 04e5 0C000000 		.4byte	.LBB4
 9180 04e9 D8000000 		.4byte	.LBE4-.LBB4
 9181 04ed 17       		.uleb128 0x17
 9182 04ee F3010000 		.4byte	.LASF76
 9183 04f2 01       		.byte	0x1
 9184 04f3 CF01     		.2byte	0x1cf
 9185 04f5 FD000000 		.4byte	0xfd
 9186 04f9 02       		.uleb128 0x2
 9187 04fa 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 205


 9188 04fb 68       		.sleb128 -24
 9189 04fc 00       		.byte	0
 9190 04fd 00       		.byte	0
 9191 04fe 00       		.byte	0
 9192 04ff 15       		.uleb128 0x15
 9193 0500 CC020000 		.4byte	.LASF77
 9194 0504 01       		.byte	0x1
 9195 0505 D601     		.2byte	0x1d6
 9196 0507 94000000 		.4byte	0x94
 9197 050b 00000000 		.4byte	.LFB76
 9198 050f 241D0000 		.4byte	.LFE76-.LFB76
 9199 0513 01       		.uleb128 0x1
 9200 0514 9C       		.byte	0x9c
 9201 0515 BA080000 		.4byte	0x8ba
 9202 0519 17       		.uleb128 0x17
 9203 051a E30F0000 		.4byte	.LASF78
 9204 051e 01       		.byte	0x1
 9205 051f 1602     		.2byte	0x216
 9206 0521 A2000000 		.4byte	0xa2
 9207 0525 03       		.uleb128 0x3
 9208 0526 91       		.byte	0x91
 9209 0527 8B7F     		.sleb128 -117
 9210 0529 1D       		.uleb128 0x1d
 9211 052a 28000000 		.4byte	.LBB5
 9212 052e 8A010000 		.4byte	.LBE5-.LBB5
 9213 0532 E5050000 		.4byte	0x5e5
 9214 0536 17       		.uleb128 0x17
 9215 0537 10040000 		.4byte	.LASF79
 9216 053b 01       		.byte	0x1
 9217 053c E301     		.2byte	0x1e3
 9218 053e 94000000 		.4byte	0x94
 9219 0542 02       		.uleb128 0x2
 9220 0543 91       		.byte	0x91
 9221 0544 6C       		.sleb128 -20
 9222 0545 1D       		.uleb128 0x1d
 9223 0546 30000000 		.4byte	.LBB6
 9224 054a 64000000 		.4byte	.LBE6-.LBB6
 9225 054e 62050000 		.4byte	0x562
 9226 0552 17       		.uleb128 0x17
 9227 0553 AA0E0000 		.4byte	.LASF80
 9228 0557 01       		.byte	0x1
 9229 0558 E601     		.2byte	0x1e6
 9230 055a 94000000 		.4byte	0x94
 9231 055e 02       		.uleb128 0x2
 9232 055f 91       		.byte	0x91
 9233 0560 68       		.sleb128 -24
 9234 0561 00       		.byte	0
 9235 0562 11       		.uleb128 0x11
 9236 0563 94000000 		.4byte	.LBB7
 9237 0567 0A010000 		.4byte	.LBE7-.LBB7
 9238 056b 19       		.uleb128 0x19
 9239 056c 6900     		.ascii	"i\000"
 9240 056e 01       		.byte	0x1
 9241 056f EA01     		.2byte	0x1ea
 9242 0571 94000000 		.4byte	0x94
 9243 0575 02       		.uleb128 0x2
 9244 0576 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 206


 9245 0577 64       		.sleb128 -28
 9246 0578 11       		.uleb128 0x11
 9247 0579 9C000000 		.4byte	.LBB8
 9248 057d EE000000 		.4byte	.LBE8-.LBB8
 9249 0581 17       		.uleb128 0x17
 9250 0582 21040000 		.4byte	.LASF81
 9251 0586 01       		.byte	0x1
 9252 0587 EC01     		.2byte	0x1ec
 9253 0589 94000000 		.4byte	0x94
 9254 058d 03       		.uleb128 0x3
 9255 058e 91       		.byte	0x91
 9256 058f 947F     		.sleb128 -108
 9257 0591 11       		.uleb128 0x11
 9258 0592 AA000000 		.4byte	.LBB9
 9259 0596 E0000000 		.4byte	.LBE9-.LBB9
 9260 059a 19       		.uleb128 0x19
 9261 059b 6A00     		.ascii	"j\000"
 9262 059d 01       		.byte	0x1
 9263 059e ED01     		.2byte	0x1ed
 9264 05a0 94000000 		.4byte	0x94
 9265 05a4 02       		.uleb128 0x2
 9266 05a5 91       		.byte	0x91
 9267 05a6 60       		.sleb128 -32
 9268 05a7 11       		.uleb128 0x11
 9269 05a8 B2000000 		.4byte	.LBB10
 9270 05ac C6000000 		.4byte	.LBE10-.LBB10
 9271 05b0 17       		.uleb128 0x17
 9272 05b1 59030000 		.4byte	.LASF82
 9273 05b5 01       		.byte	0x1
 9274 05b6 F001     		.2byte	0x1f0
 9275 05b8 94000000 		.4byte	0x94
 9276 05bc 03       		.uleb128 0x3
 9277 05bd 91       		.byte	0x91
 9278 05be 907F     		.sleb128 -112
 9279 05c0 17       		.uleb128 0x17
 9280 05c1 C20F0000 		.4byte	.LASF83
 9281 05c5 01       		.byte	0x1
 9282 05c6 F101     		.2byte	0x1f1
 9283 05c8 B8000000 		.4byte	0xb8
 9284 05cc 03       		.uleb128 0x3
 9285 05cd 91       		.byte	0x91
 9286 05ce 8E7F     		.sleb128 -114
 9287 05d0 17       		.uleb128 0x17
 9288 05d1 FC090000 		.4byte	.LASF84
 9289 05d5 01       		.byte	0x1
 9290 05d6 F201     		.2byte	0x1f2
 9291 05d8 B8000000 		.4byte	0xb8
 9292 05dc 03       		.uleb128 0x3
 9293 05dd 91       		.byte	0x91
 9294 05de 8C7F     		.sleb128 -116
 9295 05e0 00       		.byte	0
 9296 05e1 00       		.byte	0
 9297 05e2 00       		.byte	0
 9298 05e3 00       		.byte	0
 9299 05e4 00       		.byte	0
 9300 05e5 1D       		.uleb128 0x1d
 9301 05e6 B2010000 		.4byte	.LBB11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 207


 9302 05ea 90000000 		.4byte	.LBE11-.LBB11
 9303 05ee 00060000 		.4byte	0x600
 9304 05f2 19       		.uleb128 0x19
 9305 05f3 6900     		.ascii	"i\000"
 9306 05f5 01       		.byte	0x1
 9307 05f6 F901     		.2byte	0x1f9
 9308 05f8 94000000 		.4byte	0x94
 9309 05fc 02       		.uleb128 0x2
 9310 05fd 91       		.byte	0x91
 9311 05fe 5C       		.sleb128 -36
 9312 05ff 00       		.byte	0
 9313 0600 1D       		.uleb128 0x1d
 9314 0601 46020000 		.4byte	.LBB12
 9315 0605 5A000000 		.4byte	.LBE12-.LBB12
 9316 0609 32060000 		.4byte	0x632
 9317 060d 19       		.uleb128 0x19
 9318 060e 6900     		.ascii	"i\000"
 9319 0610 01       		.byte	0x1
 9320 0611 0102     		.2byte	0x201
 9321 0613 94000000 		.4byte	0x94
 9322 0617 02       		.uleb128 0x2
 9323 0618 91       		.byte	0x91
 9324 0619 58       		.sleb128 -40
 9325 061a 11       		.uleb128 0x11
 9326 061b 4C020000 		.4byte	.LBB13
 9327 061f 3E000000 		.4byte	.LBE13-.LBB13
 9328 0623 19       		.uleb128 0x19
 9329 0624 6A00     		.ascii	"j\000"
 9330 0626 01       		.byte	0x1
 9331 0627 0302     		.2byte	0x203
 9332 0629 94000000 		.4byte	0x94
 9333 062d 02       		.uleb128 0x2
 9334 062e 91       		.byte	0x91
 9335 062f 54       		.sleb128 -44
 9336 0630 00       		.byte	0
 9337 0631 00       		.byte	0
 9338 0632 1D       		.uleb128 0x1d
 9339 0633 D8030000 		.4byte	.LBB14
 9340 0637 2A000000 		.4byte	.LBE14-.LBB14
 9341 063b 50060000 		.4byte	0x650
 9342 063f 17       		.uleb128 0x17
 9343 0640 08080000 		.4byte	.LASF85
 9344 0644 01       		.byte	0x1
 9345 0645 E502     		.2byte	0x2e5
 9346 0647 A2000000 		.4byte	0xa2
 9347 064b 03       		.uleb128 0x3
 9348 064c 91       		.byte	0x91
 9349 064d 8A7F     		.sleb128 -118
 9350 064f 00       		.byte	0
 9351 0650 1D       		.uleb128 0x1d
 9352 0651 0C060000 		.4byte	.LBB15
 9353 0655 2E000000 		.4byte	.LBE15-.LBB15
 9354 0659 6B060000 		.4byte	0x66b
 9355 065d 19       		.uleb128 0x19
 9356 065e 6900     		.ascii	"i\000"
 9357 0660 01       		.byte	0x1
 9358 0661 1A03     		.2byte	0x31a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 208


 9359 0663 94000000 		.4byte	0x94
 9360 0667 02       		.uleb128 0x2
 9361 0668 91       		.byte	0x91
 9362 0669 50       		.sleb128 -48
 9363 066a 00       		.byte	0
 9364 066b 1D       		.uleb128 0x1d
 9365 066c CA060000 		.4byte	.LBB16
 9366 0670 1E010000 		.4byte	.LBE16-.LBB16
 9367 0674 89060000 		.4byte	0x689
 9368 0678 17       		.uleb128 0x17
 9369 0679 5D000000 		.4byte	.LASF86
 9370 067d 01       		.byte	0x1
 9371 067e B103     		.2byte	0x3b1
 9372 0680 AD000000 		.4byte	0xad
 9373 0684 03       		.uleb128 0x3
 9374 0685 91       		.byte	0x91
 9375 0686 887F     		.sleb128 -120
 9376 0688 00       		.byte	0
 9377 0689 1D       		.uleb128 0x1d
 9378 068a 94080000 		.4byte	.LBB17
 9379 068e 28000000 		.4byte	.LBE17-.LBB17
 9380 0692 A7060000 		.4byte	0x6a7
 9381 0696 17       		.uleb128 0x17
 9382 0697 4F050000 		.4byte	.LASF87
 9383 069b 01       		.byte	0x1
 9384 069c D903     		.2byte	0x3d9
 9385 069e B8000000 		.4byte	0xb8
 9386 06a2 03       		.uleb128 0x3
 9387 06a3 91       		.byte	0x91
 9388 06a4 867F     		.sleb128 -122
 9389 06a6 00       		.byte	0
 9390 06a7 1D       		.uleb128 0x1d
 9391 06a8 24090000 		.4byte	.LBB18
 9392 06ac 84020000 		.4byte	.LBE18-.LBB18
 9393 06b0 C2060000 		.4byte	0x6c2
 9394 06b4 19       		.uleb128 0x19
 9395 06b5 6900     		.ascii	"i\000"
 9396 06b7 01       		.byte	0x1
 9397 06b8 0204     		.2byte	0x402
 9398 06ba 94000000 		.4byte	0x94
 9399 06be 02       		.uleb128 0x2
 9400 06bf 91       		.byte	0x91
 9401 06c0 4C       		.sleb128 -52
 9402 06c1 00       		.byte	0
 9403 06c2 1D       		.uleb128 0x1d
 9404 06c3 A80B0000 		.4byte	.LBB19
 9405 06c7 46000000 		.4byte	.LBE19-.LBB19
 9406 06cb DD060000 		.4byte	0x6dd
 9407 06cf 19       		.uleb128 0x19
 9408 06d0 6900     		.ascii	"i\000"
 9409 06d2 01       		.byte	0x1
 9410 06d3 2204     		.2byte	0x422
 9411 06d5 94000000 		.4byte	0x94
 9412 06d9 02       		.uleb128 0x2
 9413 06da 91       		.byte	0x91
 9414 06db 48       		.sleb128 -56
 9415 06dc 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 209


 9416 06dd 1D       		.uleb128 0x1d
 9417 06de 3E130000 		.4byte	.LBB20
 9418 06e2 28000000 		.4byte	.LBE20-.LBB20
 9419 06e6 F8060000 		.4byte	0x6f8
 9420 06ea 19       		.uleb128 0x19
 9421 06eb 6900     		.ascii	"i\000"
 9422 06ed 01       		.byte	0x1
 9423 06ee 1F05     		.2byte	0x51f
 9424 06f0 94000000 		.4byte	0x94
 9425 06f4 02       		.uleb128 0x2
 9426 06f5 91       		.byte	0x91
 9427 06f6 44       		.sleb128 -60
 9428 06f7 00       		.byte	0
 9429 06f8 1D       		.uleb128 0x1d
 9430 06f9 C8130000 		.4byte	.LBB21
 9431 06fd 98000000 		.4byte	.LBE21-.LBB21
 9432 0701 13070000 		.4byte	0x713
 9433 0705 19       		.uleb128 0x19
 9434 0706 6900     		.ascii	"i\000"
 9435 0708 01       		.byte	0x1
 9436 0709 3105     		.2byte	0x531
 9437 070b 94000000 		.4byte	0x94
 9438 070f 02       		.uleb128 0x2
 9439 0710 91       		.byte	0x91
 9440 0711 40       		.sleb128 -64
 9441 0712 00       		.byte	0
 9442 0713 1D       		.uleb128 0x1d
 9443 0714 7A140000 		.4byte	.LBB22
 9444 0718 8A000000 		.4byte	.LBE22-.LBB22
 9445 071c 2F070000 		.4byte	0x72f
 9446 0720 19       		.uleb128 0x19
 9447 0721 6900     		.ascii	"i\000"
 9448 0723 01       		.byte	0x1
 9449 0724 4805     		.2byte	0x548
 9450 0726 94000000 		.4byte	0x94
 9451 072a 03       		.uleb128 0x3
 9452 072b 91       		.byte	0x91
 9453 072c BC7F     		.sleb128 -68
 9454 072e 00       		.byte	0
 9455 072f 1D       		.uleb128 0x1d
 9456 0730 04150000 		.4byte	.LBB23
 9457 0734 7E030000 		.4byte	.LBE23-.LBB23
 9458 0738 A5070000 		.4byte	0x7a5
 9459 073c 19       		.uleb128 0x19
 9460 073d 6900     		.ascii	"i\000"
 9461 073f 01       		.byte	0x1
 9462 0740 5705     		.2byte	0x557
 9463 0742 94000000 		.4byte	0x94
 9464 0746 03       		.uleb128 0x3
 9465 0747 91       		.byte	0x91
 9466 0748 B87F     		.sleb128 -72
 9467 074a 11       		.uleb128 0x11
 9468 074b 58150000 		.4byte	.LBB24
 9469 074f 18030000 		.4byte	.LBE24-.LBB24
 9470 0753 17       		.uleb128 0x17
 9471 0754 430B0000 		.4byte	.LASF88
 9472 0758 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 210


 9473 0759 6805     		.2byte	0x568
 9474 075b FD000000 		.4byte	0xfd
 9475 075f 03       		.uleb128 0x3
 9476 0760 91       		.byte	0x91
 9477 0761 807F     		.sleb128 -128
 9478 0763 17       		.uleb128 0x17
 9479 0764 FC0D0000 		.4byte	.LASF89
 9480 0768 01       		.byte	0x1
 9481 0769 7505     		.2byte	0x575
 9482 076b FD000000 		.4byte	0xfd
 9483 076f 03       		.uleb128 0x3
 9484 0770 91       		.byte	0x91
 9485 0771 FC7E     		.sleb128 -132
 9486 0773 17       		.uleb128 0x17
 9487 0774 A30A0000 		.4byte	.LASF90
 9488 0778 01       		.byte	0x1
 9489 0779 7805     		.2byte	0x578
 9490 077b FD000000 		.4byte	0xfd
 9491 077f 03       		.uleb128 0x3
 9492 0780 91       		.byte	0x91
 9493 0781 F87E     		.sleb128 -136
 9494 0783 17       		.uleb128 0x17
 9495 0784 CA050000 		.4byte	.LASF91
 9496 0788 01       		.byte	0x1
 9497 0789 7A05     		.2byte	0x57a
 9498 078b FD000000 		.4byte	0xfd
 9499 078f 03       		.uleb128 0x3
 9500 0790 91       		.byte	0x91
 9501 0791 F47E     		.sleb128 -140
 9502 0793 17       		.uleb128 0x17
 9503 0794 970D0000 		.4byte	.LASF92
 9504 0798 01       		.byte	0x1
 9505 0799 7C05     		.2byte	0x57c
 9506 079b FD000000 		.4byte	0xfd
 9507 079f 03       		.uleb128 0x3
 9508 07a0 91       		.byte	0x91
 9509 07a1 F07E     		.sleb128 -144
 9510 07a3 00       		.byte	0
 9511 07a4 00       		.byte	0
 9512 07a5 1D       		.uleb128 0x1d
 9513 07a6 98190000 		.4byte	.LBB25
 9514 07aa 4E000000 		.4byte	.LBE25-.LBB25
 9515 07ae C1070000 		.4byte	0x7c1
 9516 07b2 19       		.uleb128 0x19
 9517 07b3 6900     		.ascii	"i\000"
 9518 07b5 01       		.byte	0x1
 9519 07b6 CE05     		.2byte	0x5ce
 9520 07b8 0D020000 		.4byte	0x20d
 9521 07bc 03       		.uleb128 0x3
 9522 07bd 91       		.byte	0x91
 9523 07be B47F     		.sleb128 -76
 9524 07c0 00       		.byte	0
 9525 07c1 1D       		.uleb128 0x1d
 9526 07c2 041A0000 		.4byte	.LBB26
 9527 07c6 22000000 		.4byte	.LBE26-.LBB26
 9528 07ca DD070000 		.4byte	0x7dd
 9529 07ce 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 211


 9530 07cf 6900     		.ascii	"i\000"
 9531 07d1 01       		.byte	0x1
 9532 07d2 E105     		.2byte	0x5e1
 9533 07d4 94000000 		.4byte	0x94
 9534 07d8 03       		.uleb128 0x3
 9535 07d9 91       		.byte	0x91
 9536 07da B07F     		.sleb128 -80
 9537 07dc 00       		.byte	0
 9538 07dd 1D       		.uleb128 0x1d
 9539 07de 261A0000 		.4byte	.LBB27
 9540 07e2 22000000 		.4byte	.LBE27-.LBB27
 9541 07e6 F9070000 		.4byte	0x7f9
 9542 07ea 19       		.uleb128 0x19
 9543 07eb 6900     		.ascii	"i\000"
 9544 07ed 01       		.byte	0x1
 9545 07ee E505     		.2byte	0x5e5
 9546 07f0 94000000 		.4byte	0x94
 9547 07f4 03       		.uleb128 0x3
 9548 07f5 91       		.byte	0x91
 9549 07f6 AC7F     		.sleb128 -84
 9550 07f8 00       		.byte	0
 9551 07f9 1D       		.uleb128 0x1d
 9552 07fa 481A0000 		.4byte	.LBB28
 9553 07fe 22000000 		.4byte	.LBE28-.LBB28
 9554 0802 15080000 		.4byte	0x815
 9555 0806 19       		.uleb128 0x19
 9556 0807 6900     		.ascii	"i\000"
 9557 0809 01       		.byte	0x1
 9558 080a E905     		.2byte	0x5e9
 9559 080c 94000000 		.4byte	0x94
 9560 0810 03       		.uleb128 0x3
 9561 0811 91       		.byte	0x91
 9562 0812 A87F     		.sleb128 -88
 9563 0814 00       		.byte	0
 9564 0815 1D       		.uleb128 0x1d
 9565 0816 D81A0000 		.4byte	.LBB29
 9566 081a C4000000 		.4byte	.LBE29-.LBB29
 9567 081e 4B080000 		.4byte	0x84b
 9568 0822 19       		.uleb128 0x19
 9569 0823 6900     		.ascii	"i\000"
 9570 0825 01       		.byte	0x1
 9571 0826 FA05     		.2byte	0x5fa
 9572 0828 94000000 		.4byte	0x94
 9573 082c 03       		.uleb128 0x3
 9574 082d 91       		.byte	0x91
 9575 082e A47F     		.sleb128 -92
 9576 0830 11       		.uleb128 0x11
 9577 0831 4C1B0000 		.4byte	.LBB30
 9578 0835 44000000 		.4byte	.LBE30-.LBB30
 9579 0839 17       		.uleb128 0x17
 9580 083a 8D0C0000 		.4byte	.LASF93
 9581 083e 01       		.byte	0x1
 9582 083f FC05     		.2byte	0x5fc
 9583 0841 94000000 		.4byte	0x94
 9584 0845 03       		.uleb128 0x3
 9585 0846 91       		.byte	0x91
 9586 0847 EC7E     		.sleb128 -148
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 212


 9587 0849 00       		.byte	0
 9588 084a 00       		.byte	0
 9589 084b 11       		.uleb128 0x11
 9590 084c 121C0000 		.4byte	.LBB31
 9591 0850 B0000000 		.4byte	.LBE31-.LBB31
 9592 0854 17       		.uleb128 0x17
 9593 0855 A4020000 		.4byte	.LASF94
 9594 0859 01       		.byte	0x1
 9595 085a 2706     		.2byte	0x627
 9596 085c 94000000 		.4byte	0x94
 9597 0860 03       		.uleb128 0x3
 9598 0861 91       		.byte	0x91
 9599 0862 E87E     		.sleb128 -152
 9600 0864 17       		.uleb128 0x17
 9601 0865 DC000000 		.4byte	.LASF95
 9602 0869 01       		.byte	0x1
 9603 086a 2806     		.2byte	0x628
 9604 086c 94000000 		.4byte	0x94
 9605 0870 03       		.uleb128 0x3
 9606 0871 91       		.byte	0x91
 9607 0872 E47E     		.sleb128 -156
 9608 0874 17       		.uleb128 0x17
 9609 0875 E30D0000 		.4byte	.LASF96
 9610 0879 01       		.byte	0x1
 9611 087a 2906     		.2byte	0x629
 9612 087c 94000000 		.4byte	0x94
 9613 0880 03       		.uleb128 0x3
 9614 0881 91       		.byte	0x91
 9615 0882 A07F     		.sleb128 -96
 9616 0884 1D       		.uleb128 0x1d
 9617 0885 221C0000 		.4byte	.LBB32
 9618 0889 36000000 		.4byte	.LBE32-.LBB32
 9619 088d A0080000 		.4byte	0x8a0
 9620 0891 19       		.uleb128 0x19
 9621 0892 6900     		.ascii	"i\000"
 9622 0894 01       		.byte	0x1
 9623 0895 2A06     		.2byte	0x62a
 9624 0897 94000000 		.4byte	0x94
 9625 089b 03       		.uleb128 0x3
 9626 089c 91       		.byte	0x91
 9627 089d 9C7F     		.sleb128 -100
 9628 089f 00       		.byte	0
 9629 08a0 11       		.uleb128 0x11
 9630 08a1 5C1C0000 		.4byte	.LBB33
 9631 08a5 44000000 		.4byte	.LBE33-.LBB33
 9632 08a9 19       		.uleb128 0x19
 9633 08aa 6900     		.ascii	"i\000"
 9634 08ac 01       		.byte	0x1
 9635 08ad 3006     		.2byte	0x630
 9636 08af 94000000 		.4byte	0x94
 9637 08b3 03       		.uleb128 0x3
 9638 08b4 91       		.byte	0x91
 9639 08b5 987F     		.sleb128 -104
 9640 08b7 00       		.byte	0
 9641 08b8 00       		.byte	0
 9642 08b9 00       		.byte	0
 9643 08ba 14       		.uleb128 0x14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 213


 9644 08bb 03050000 		.4byte	.LASF97
 9645 08bf 01       		.byte	0x1
 9646 08c0 4506     		.2byte	0x645
 9647 08c2 00000000 		.4byte	.LFB77
 9648 08c6 70000000 		.4byte	.LFE77-.LFB77
 9649 08ca 01       		.uleb128 0x1
 9650 08cb 9C       		.byte	0x9c
 9651 08cc 14       		.uleb128 0x14
 9652 08cd 050F0000 		.4byte	.LASF98
 9653 08d1 01       		.byte	0x1
 9654 08d2 5A06     		.2byte	0x65a
 9655 08d4 00000000 		.4byte	.LFB78
 9656 08d8 70010000 		.4byte	.LFE78-.LFB78
 9657 08dc 01       		.uleb128 0x1
 9658 08dd 9C       		.byte	0x9c
 9659 08de 15       		.uleb128 0x15
 9660 08df 33080000 		.4byte	.LASF99
 9661 08e3 01       		.byte	0x1
 9662 08e4 8206     		.2byte	0x682
 9663 08e6 D9000000 		.4byte	0xd9
 9664 08ea 00000000 		.4byte	.LFB79
 9665 08ee E0000000 		.4byte	.LFE79-.LFB79
 9666 08f2 01       		.uleb128 0x1
 9667 08f3 9C       		.byte	0x9c
 9668 08f4 44090000 		.4byte	0x944
 9669 08f8 18       		.uleb128 0x18
 9670 08f9 8E0E0000 		.4byte	.LASF100
 9671 08fd 01       		.byte	0x1
 9672 08fe 8206     		.2byte	0x682
 9673 0900 D9000000 		.4byte	0xd9
 9674 0904 02       		.uleb128 0x2
 9675 0905 91       		.byte	0x91
 9676 0906 6F       		.sleb128 -17
 9677 0907 18       		.uleb128 0x18
 9678 0908 7A010000 		.4byte	.LASF101
 9679 090c 01       		.byte	0x1
 9680 090d 8206     		.2byte	0x682
 9681 090f E5000000 		.4byte	0xe5
 9682 0913 02       		.uleb128 0x2
 9683 0914 91       		.byte	0x91
 9684 0915 6C       		.sleb128 -20
 9685 0916 18       		.uleb128 0x18
 9686 0917 DE0D0000 		.4byte	.LASF102
 9687 091b 01       		.byte	0x1
 9688 091c 8206     		.2byte	0x682
 9689 091e A2000000 		.4byte	0xa2
 9690 0922 02       		.uleb128 0x2
 9691 0923 91       		.byte	0x91
 9692 0924 6E       		.sleb128 -18
 9693 0925 17       		.uleb128 0x17
 9694 0926 08080000 		.4byte	.LASF85
 9695 092a 01       		.byte	0x1
 9696 092b 8406     		.2byte	0x684
 9697 092d 2A010000 		.4byte	0x12a
 9698 0931 02       		.uleb128 0x2
 9699 0932 91       		.byte	0x91
 9700 0933 73       		.sleb128 -13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 214


 9701 0934 17       		.uleb128 0x17
 9702 0935 600A0000 		.4byte	.LASF103
 9703 0939 01       		.byte	0x1
 9704 093a 8506     		.2byte	0x685
 9705 093c CE000000 		.4byte	0xce
 9706 0940 02       		.uleb128 0x2
 9707 0941 91       		.byte	0x91
 9708 0942 74       		.sleb128 -12
 9709 0943 00       		.byte	0
 9710 0944 15       		.uleb128 0x15
 9711 0945 AB0B0000 		.4byte	.LASF104
 9712 0949 01       		.byte	0x1
 9713 094a B506     		.2byte	0x6b5
 9714 094c D9000000 		.4byte	0xd9
 9715 0950 00000000 		.4byte	.LFB80
 9716 0954 B4000000 		.4byte	.LFE80-.LFB80
 9717 0958 01       		.uleb128 0x1
 9718 0959 9C       		.byte	0x9c
 9719 095a AA090000 		.4byte	0x9aa
 9720 095e 18       		.uleb128 0x18
 9721 095f 8E0E0000 		.4byte	.LASF100
 9722 0963 01       		.byte	0x1
 9723 0964 B506     		.2byte	0x6b5
 9724 0966 D9000000 		.4byte	0xd9
 9725 096a 02       		.uleb128 0x2
 9726 096b 91       		.byte	0x91
 9727 096c 6F       		.sleb128 -17
 9728 096d 18       		.uleb128 0x18
 9729 096e 7A010000 		.4byte	.LASF101
 9730 0972 01       		.byte	0x1
 9731 0973 B506     		.2byte	0x6b5
 9732 0975 D9000000 		.4byte	0xd9
 9733 0979 02       		.uleb128 0x2
 9734 097a 91       		.byte	0x91
 9735 097b 6E       		.sleb128 -18
 9736 097c 18       		.uleb128 0x18
 9737 097d DE0D0000 		.4byte	.LASF102
 9738 0981 01       		.byte	0x1
 9739 0982 B506     		.2byte	0x6b5
 9740 0984 A2000000 		.4byte	0xa2
 9741 0988 02       		.uleb128 0x2
 9742 0989 91       		.byte	0x91
 9743 098a 6D       		.sleb128 -19
 9744 098b 17       		.uleb128 0x17
 9745 098c 08080000 		.4byte	.LASF85
 9746 0990 01       		.byte	0x1
 9747 0991 B706     		.2byte	0x6b7
 9748 0993 2A010000 		.4byte	0x12a
 9749 0997 02       		.uleb128 0x2
 9750 0998 91       		.byte	0x91
 9751 0999 73       		.sleb128 -13
 9752 099a 17       		.uleb128 0x17
 9753 099b 600A0000 		.4byte	.LASF103
 9754 099f 01       		.byte	0x1
 9755 09a0 B806     		.2byte	0x6b8
 9756 09a2 CE000000 		.4byte	0xce
 9757 09a6 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 215


 9758 09a7 91       		.byte	0x91
 9759 09a8 74       		.sleb128 -12
 9760 09a9 00       		.byte	0
 9761 09aa 14       		.uleb128 0x14
 9762 09ab 59050000 		.4byte	.LASF105
 9763 09af 01       		.byte	0x1
 9764 09b0 DD06     		.2byte	0x6dd
 9765 09b2 00000000 		.4byte	.LFB81
 9766 09b6 30000000 		.4byte	.LFE81-.LFB81
 9767 09ba 01       		.uleb128 0x1
 9768 09bb 9C       		.byte	0x9c
 9769 09bc 1E       		.uleb128 0x1e
 9770 09bd C2070000 		.4byte	.LASF106
 9771 09c1 01       		.byte	0x1
 9772 09c2 EC06     		.2byte	0x6ec
 9773 09c4 00000000 		.4byte	.LFB82
 9774 09c8 7C000000 		.4byte	.LFE82-.LFB82
 9775 09cc 01       		.uleb128 0x1
 9776 09cd 9C       		.byte	0x9c
 9777 09ce 14       		.uleb128 0x14
 9778 09cf 26050000 		.4byte	.LASF107
 9779 09d3 01       		.byte	0x1
 9780 09d4 FA06     		.2byte	0x6fa
 9781 09d6 00000000 		.4byte	.LFB83
 9782 09da 54000000 		.4byte	.LFE83-.LFB83
 9783 09de 01       		.uleb128 0x1
 9784 09df 9C       		.byte	0x9c
 9785 09e0 14       		.uleb128 0x14
 9786 09e1 48040000 		.4byte	.LASF108
 9787 09e5 01       		.byte	0x1
 9788 09e6 0D07     		.2byte	0x70d
 9789 09e8 00000000 		.4byte	.LFB84
 9790 09ec C4000000 		.4byte	.LFE84-.LFB84
 9791 09f0 01       		.uleb128 0x1
 9792 09f1 9C       		.byte	0x9c
 9793 09f2 15       		.uleb128 0x15
 9794 09f3 400A0000 		.4byte	.LASF109
 9795 09f7 01       		.byte	0x1
 9796 09f8 4007     		.2byte	0x740
 9797 09fa FD000000 		.4byte	0xfd
 9798 09fe 00000000 		.4byte	.LFB85
 9799 0a02 98000000 		.4byte	.LFE85-.LFB85
 9800 0a06 01       		.uleb128 0x1
 9801 0a07 9C       		.byte	0x9c
 9802 0a08 410A0000 		.4byte	0xa41
 9803 0a0c 16       		.uleb128 0x16
 9804 0a0d 5800     		.ascii	"X\000"
 9805 0a0f 01       		.byte	0x1
 9806 0a10 4007     		.2byte	0x740
 9807 0a12 FD000000 		.4byte	0xfd
 9808 0a16 02       		.uleb128 0x2
 9809 0a17 91       		.byte	0x91
 9810 0a18 64       		.sleb128 -28
 9811 0a19 19       		.uleb128 0x19
 9812 0a1a 5900     		.ascii	"Y\000"
 9813 0a1c 01       		.byte	0x1
 9814 0a1d 4107     		.2byte	0x741
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 216


 9815 0a1f FD000000 		.4byte	0xfd
 9816 0a23 02       		.uleb128 0x2
 9817 0a24 91       		.byte	0x91
 9818 0a25 70       		.sleb128 -16
 9819 0a26 19       		.uleb128 0x19
 9820 0a27 4600     		.ascii	"F\000"
 9821 0a29 01       		.byte	0x1
 9822 0a2a 4107     		.2byte	0x741
 9823 0a2c FD000000 		.4byte	0xfd
 9824 0a30 02       		.uleb128 0x2
 9825 0a31 91       		.byte	0x91
 9826 0a32 74       		.sleb128 -12
 9827 0a33 19       		.uleb128 0x19
 9828 0a34 4500     		.ascii	"E\000"
 9829 0a36 01       		.byte	0x1
 9830 0a37 4207     		.2byte	0x742
 9831 0a39 94000000 		.4byte	0x94
 9832 0a3d 02       		.uleb128 0x2
 9833 0a3e 91       		.byte	0x91
 9834 0a3f 6C       		.sleb128 -20
 9835 0a40 00       		.byte	0
 9836 0a41 1F       		.uleb128 0x1f
 9837 0a42 BD000000 		.4byte	.LASF111
 9838 0a46 01       		.byte	0x1
 9839 0a47 5407     		.2byte	0x754
 9840 0a49 00000000 		.4byte	.LFB86
 9841 0a4d D4000000 		.4byte	.LFE86-.LFB86
 9842 0a51 01       		.uleb128 0x1
 9843 0a52 9C       		.byte	0x9c
 9844 0a53 9E0A0000 		.4byte	0xa9e
 9845 0a57 18       		.uleb128 0x18
 9846 0a58 150B0000 		.4byte	.LASF112
 9847 0a5c 01       		.byte	0x1
 9848 0a5d 5407     		.2byte	0x754
 9849 0a5f 94000000 		.4byte	0x94
 9850 0a63 02       		.uleb128 0x2
 9851 0a64 91       		.byte	0x91
 9852 0a65 64       		.sleb128 -28
 9853 0a66 17       		.uleb128 0x17
 9854 0a67 ED0A0000 		.4byte	.LASF113
 9855 0a6b 01       		.byte	0x1
 9856 0a6c 6007     		.2byte	0x760
 9857 0a6e B8000000 		.4byte	0xb8
 9858 0a72 02       		.uleb128 0x2
 9859 0a73 91       		.byte	0x91
 9860 0a74 76       		.sleb128 -10
 9861 0a75 11       		.uleb128 0x11
 9862 0a76 18000000 		.4byte	.LBB34
 9863 0a7a 86000000 		.4byte	.LBE34-.LBB34
 9864 0a7e 17       		.uleb128 0x17
 9865 0a7f CC0C0000 		.4byte	.LASF114
 9866 0a83 01       		.byte	0x1
 9867 0a84 6407     		.2byte	0x764
 9868 0a86 FD000000 		.4byte	0xfd
 9869 0a8a 02       		.uleb128 0x2
 9870 0a8b 91       		.byte	0x91
 9871 0a8c 70       		.sleb128 -16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 217


 9872 0a8d 17       		.uleb128 0x17
 9873 0a8e 870F0000 		.4byte	.LASF115
 9874 0a92 01       		.byte	0x1
 9875 0a93 7307     		.2byte	0x773
 9876 0a95 94000000 		.4byte	0x94
 9877 0a99 02       		.uleb128 0x2
 9878 0a9a 91       		.byte	0x91
 9879 0a9b 6C       		.sleb128 -20
 9880 0a9c 00       		.byte	0
 9881 0a9d 00       		.byte	0
 9882 0a9e 1F       		.uleb128 0x1f
 9883 0a9f C0060000 		.4byte	.LASF116
 9884 0aa3 01       		.byte	0x1
 9885 0aa4 7F07     		.2byte	0x77f
 9886 0aa6 00000000 		.4byte	.LFB87
 9887 0aaa 1C000000 		.4byte	.LFE87-.LFB87
 9888 0aae 01       		.uleb128 0x1
 9889 0aaf 9C       		.byte	0x9c
 9890 0ab0 D20A0000 		.4byte	0xad2
 9891 0ab4 16       		.uleb128 0x16
 9892 0ab5 636300   		.ascii	"cc\000"
 9893 0ab8 01       		.byte	0x1
 9894 0ab9 7F07     		.2byte	0x77f
 9895 0abb 94000000 		.4byte	0x94
 9896 0abf 02       		.uleb128 0x2
 9897 0ac0 91       		.byte	0x91
 9898 0ac1 74       		.sleb128 -12
 9899 0ac2 16       		.uleb128 0x16
 9900 0ac3 76616C00 		.ascii	"val\000"
 9901 0ac7 01       		.byte	0x1
 9902 0ac8 7F07     		.2byte	0x77f
 9903 0aca 94000000 		.4byte	0x94
 9904 0ace 02       		.uleb128 0x2
 9905 0acf 91       		.byte	0x91
 9906 0ad0 70       		.sleb128 -16
 9907 0ad1 00       		.byte	0
 9908 0ad2 1F       		.uleb128 0x1f
 9909 0ad3 4A090000 		.4byte	.LASF117
 9910 0ad7 01       		.byte	0x1
 9911 0ad8 8507     		.2byte	0x785
 9912 0ada 00000000 		.4byte	.LFB88
 9913 0ade 68000000 		.4byte	.LFE88-.LFB88
 9914 0ae2 01       		.uleb128 0x1
 9915 0ae3 9C       		.byte	0x9c
 9916 0ae4 160B0000 		.4byte	0xb16
 9917 0ae8 18       		.uleb128 0x18
 9918 0ae9 E5020000 		.4byte	.LASF118
 9919 0aed 01       		.byte	0x1
 9920 0aee 8507     		.2byte	0x785
 9921 0af0 94000000 		.4byte	0x94
 9922 0af4 02       		.uleb128 0x2
 9923 0af5 91       		.byte	0x91
 9924 0af6 74       		.sleb128 -12
 9925 0af7 18       		.uleb128 0x18
 9926 0af8 ED0A0000 		.4byte	.LASF113
 9927 0afc 01       		.byte	0x1
 9928 0afd 8507     		.2byte	0x785
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 218


 9929 0aff 94000000 		.4byte	0x94
 9930 0b03 02       		.uleb128 0x2
 9931 0b04 91       		.byte	0x91
 9932 0b05 70       		.sleb128 -16
 9933 0b06 18       		.uleb128 0x18
 9934 0b07 2B080000 		.4byte	.LASF119
 9935 0b0b 01       		.byte	0x1
 9936 0b0c 8507     		.2byte	0x785
 9937 0b0e 94000000 		.4byte	0x94
 9938 0b12 02       		.uleb128 0x2
 9939 0b13 91       		.byte	0x91
 9940 0b14 6C       		.sleb128 -20
 9941 0b15 00       		.byte	0
 9942 0b16 1F       		.uleb128 0x1f
 9943 0b17 A5050000 		.4byte	.LASF120
 9944 0b1b 01       		.byte	0x1
 9945 0b1c 9207     		.2byte	0x792
 9946 0b1e 00000000 		.4byte	.LFB89
 9947 0b22 68000000 		.4byte	.LFE89-.LFB89
 9948 0b26 01       		.uleb128 0x1
 9949 0b27 9C       		.byte	0x9c
 9950 0b28 5A0B0000 		.4byte	0xb5a
 9951 0b2c 18       		.uleb128 0x18
 9952 0b2d E5020000 		.4byte	.LASF118
 9953 0b31 01       		.byte	0x1
 9954 0b32 9207     		.2byte	0x792
 9955 0b34 94000000 		.4byte	0x94
 9956 0b38 02       		.uleb128 0x2
 9957 0b39 91       		.byte	0x91
 9958 0b3a 74       		.sleb128 -12
 9959 0b3b 18       		.uleb128 0x18
 9960 0b3c 98040000 		.4byte	.LASF121
 9961 0b40 01       		.byte	0x1
 9962 0b41 9207     		.2byte	0x792
 9963 0b43 94000000 		.4byte	0x94
 9964 0b47 02       		.uleb128 0x2
 9965 0b48 91       		.byte	0x91
 9966 0b49 70       		.sleb128 -16
 9967 0b4a 18       		.uleb128 0x18
 9968 0b4b 2B080000 		.4byte	.LASF119
 9969 0b4f 01       		.byte	0x1
 9970 0b50 9207     		.2byte	0x792
 9971 0b52 94000000 		.4byte	0x94
 9972 0b56 02       		.uleb128 0x2
 9973 0b57 91       		.byte	0x91
 9974 0b58 6C       		.sleb128 -20
 9975 0b59 00       		.byte	0
 9976 0b5a 1F       		.uleb128 0x1f
 9977 0b5b DD050000 		.4byte	.LASF122
 9978 0b5f 01       		.byte	0x1
 9979 0b60 9E07     		.2byte	0x79e
 9980 0b62 00000000 		.4byte	.LFB90
 9981 0b66 68000000 		.4byte	.LFE90-.LFB90
 9982 0b6a 01       		.uleb128 0x1
 9983 0b6b 9C       		.byte	0x9c
 9984 0b6c 9E0B0000 		.4byte	0xb9e
 9985 0b70 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 219


 9986 0b71 A5010000 		.4byte	.LASF123
 9987 0b75 01       		.byte	0x1
 9988 0b76 9E07     		.2byte	0x79e
 9989 0b78 94000000 		.4byte	0x94
 9990 0b7c 02       		.uleb128 0x2
 9991 0b7d 91       		.byte	0x91
 9992 0b7e 74       		.sleb128 -12
 9993 0b7f 18       		.uleb128 0x18
 9994 0b80 F2000000 		.4byte	.LASF124
 9995 0b84 01       		.byte	0x1
 9996 0b85 9E07     		.2byte	0x79e
 9997 0b87 94000000 		.4byte	0x94
 9998 0b8b 02       		.uleb128 0x2
 9999 0b8c 91       		.byte	0x91
 10000 0b8d 70       		.sleb128 -16
 10001 0b8e 18       		.uleb128 0x18
 10002 0b8f 2B080000 		.4byte	.LASF119
 10003 0b93 01       		.byte	0x1
 10004 0b94 9E07     		.2byte	0x79e
 10005 0b96 94000000 		.4byte	0x94
 10006 0b9a 02       		.uleb128 0x2
 10007 0b9b 91       		.byte	0x91
 10008 0b9c 6C       		.sleb128 -20
 10009 0b9d 00       		.byte	0
 10010 0b9e 1F       		.uleb128 0x1f
 10011 0b9f AB0A0000 		.4byte	.LASF125
 10012 0ba3 01       		.byte	0x1
 10013 0ba4 AA07     		.2byte	0x7aa
 10014 0ba6 00000000 		.4byte	.LFB91
 10015 0baa 6C000000 		.4byte	.LFE91-.LFB91
 10016 0bae 01       		.uleb128 0x1
 10017 0baf 9C       		.byte	0x9c
 10018 0bb0 D30B0000 		.4byte	0xbd3
 10019 0bb4 16       		.uleb128 0x16
 10020 0bb5 76616C00 		.ascii	"val\000"
 10021 0bb9 01       		.byte	0x1
 10022 0bba AA07     		.2byte	0x7aa
 10023 0bbc 94000000 		.4byte	0x94
 10024 0bc0 02       		.uleb128 0x2
 10025 0bc1 91       		.byte	0x91
 10026 0bc2 74       		.sleb128 -12
 10027 0bc3 18       		.uleb128 0x18
 10028 0bc4 2B080000 		.4byte	.LASF119
 10029 0bc8 01       		.byte	0x1
 10030 0bc9 AA07     		.2byte	0x7aa
 10031 0bcb 94000000 		.4byte	0x94
 10032 0bcf 02       		.uleb128 0x2
 10033 0bd0 91       		.byte	0x91
 10034 0bd1 70       		.sleb128 -16
 10035 0bd2 00       		.byte	0
 10036 0bd3 14       		.uleb128 0x14
 10037 0bd4 F1020000 		.4byte	.LASF126
 10038 0bd8 01       		.byte	0x1
 10039 0bd9 B607     		.2byte	0x7b6
 10040 0bdb 00000000 		.4byte	.LFB92
 10041 0bdf 64000000 		.4byte	.LFE92-.LFB92
 10042 0be3 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 220


 10043 0be4 9C       		.byte	0x9c
 10044 0be5 1F       		.uleb128 0x1f
 10045 0be6 C8060000 		.4byte	.LASF127
 10046 0bea 01       		.byte	0x1
 10047 0beb CE07     		.2byte	0x7ce
 10048 0bed 00000000 		.4byte	.LFB93
 10049 0bf1 BC080000 		.4byte	.LFE93-.LFB93
 10050 0bf5 01       		.uleb128 0x1
 10051 0bf6 9C       		.byte	0x9c
 10052 0bf7 900D0000 		.4byte	0xd90
 10053 0bfb 1D       		.uleb128 0x1d
 10054 0bfc 16000000 		.4byte	.LBB35
 10055 0c00 3C050000 		.4byte	.LBE35-.LBB35
 10056 0c04 AB0C0000 		.4byte	0xcab
 10057 0c08 17       		.uleb128 0x17
 10058 0c09 FD010000 		.4byte	.LASF128
 10059 0c0d 01       		.byte	0x1
 10060 0c0e D907     		.2byte	0x7d9
 10061 0c10 7C020000 		.4byte	0x27c
 10062 0c14 02       		.uleb128 0x2
 10063 0c15 91       		.byte	0x91
 10064 0c16 40       		.sleb128 -64
 10065 0c17 19       		.uleb128 0x19
 10066 0c18 6900     		.ascii	"i\000"
 10067 0c1a 01       		.byte	0x1
 10068 0c1b DA07     		.2byte	0x7da
 10069 0c1d CE000000 		.4byte	0xce
 10070 0c21 02       		.uleb128 0x2
 10071 0c22 91       		.byte	0x91
 10072 0c23 6C       		.sleb128 -20
 10073 0c24 17       		.uleb128 0x17
 10074 0c25 70040000 		.4byte	.LASF129
 10075 0c29 01       		.byte	0x1
 10076 0c2a DB07     		.2byte	0x7db
 10077 0c2c A2000000 		.4byte	0xa2
 10078 0c30 02       		.uleb128 0x2
 10079 0c31 91       		.byte	0x91
 10080 0c32 57       		.sleb128 -41
 10081 0c33 17       		.uleb128 0x17
 10082 0c34 06040000 		.4byte	.LASF130
 10083 0c38 01       		.byte	0x1
 10084 0c39 EF07     		.2byte	0x7ef
 10085 0c3b B8000000 		.4byte	0xb8
 10086 0c3f 02       		.uleb128 0x2
 10087 0c40 91       		.byte	0x91
 10088 0c41 54       		.sleb128 -44
 10089 0c42 1D       		.uleb128 0x1d
 10090 0c43 8E000000 		.4byte	.LBB36
 10091 0c47 76000000 		.4byte	.LBE36-.LBB36
 10092 0c4b 740C0000 		.4byte	0xc74
 10093 0c4f 19       		.uleb128 0x19
 10094 0c50 6A00     		.ascii	"j\000"
 10095 0c52 01       		.byte	0x1
 10096 0c53 E507     		.2byte	0x7e5
 10097 0c55 94000000 		.4byte	0x94
 10098 0c59 02       		.uleb128 0x2
 10099 0c5a 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 221


 10100 0c5b 68       		.sleb128 -24
 10101 0c5c 11       		.uleb128 0x11
 10102 0c5d 94000000 		.4byte	.LBB37
 10103 0c61 64000000 		.4byte	.LBE37-.LBB37
 10104 0c65 19       		.uleb128 0x19
 10105 0c66 6B00     		.ascii	"k\000"
 10106 0c68 01       		.byte	0x1
 10107 0c69 E707     		.2byte	0x7e7
 10108 0c6b 94000000 		.4byte	0x94
 10109 0c6f 02       		.uleb128 0x2
 10110 0c70 91       		.byte	0x91
 10111 0c71 64       		.sleb128 -28
 10112 0c72 00       		.byte	0
 10113 0c73 00       		.byte	0
 10114 0c74 1D       		.uleb128 0x1d
 10115 0c75 D6010000 		.4byte	.LBB38
 10116 0c79 46000000 		.4byte	.LBE38-.LBB38
 10117 0c7d 910C0000 		.4byte	0xc91
 10118 0c81 17       		.uleb128 0x17
 10119 0c82 E5010000 		.4byte	.LASF131
 10120 0c86 01       		.byte	0x1
 10121 0c87 0708     		.2byte	0x807
 10122 0c89 B8000000 		.4byte	0xb8
 10123 0c8d 02       		.uleb128 0x2
 10124 0c8e 91       		.byte	0x91
 10125 0c8f 52       		.sleb128 -46
 10126 0c90 00       		.byte	0
 10127 0c91 11       		.uleb128 0x11
 10128 0c92 06040000 		.4byte	.LBB39
 10129 0c96 54000000 		.4byte	.LBE39-.LBB39
 10130 0c9a 17       		.uleb128 0x17
 10131 0c9b E5010000 		.4byte	.LASF131
 10132 0c9f 01       		.byte	0x1
 10133 0ca0 4308     		.2byte	0x843
 10134 0ca2 AD000000 		.4byte	0xad
 10135 0ca6 02       		.uleb128 0x2
 10136 0ca7 91       		.byte	0x91
 10137 0ca8 50       		.sleb128 -48
 10138 0ca9 00       		.byte	0
 10139 0caa 00       		.byte	0
 10140 0cab 11       		.uleb128 0x11
 10141 0cac 5C050000 		.4byte	.LBB40
 10142 0cb0 02030000 		.4byte	.LBE40-.LBB40
 10143 0cb4 17       		.uleb128 0x17
 10144 0cb5 FD010000 		.4byte	.LASF128
 10145 0cb9 01       		.byte	0x1
 10146 0cba 9C08     		.2byte	0x89c
 10147 0cbc 7C020000 		.4byte	0x27c
 10148 0cc0 03       		.uleb128 0x3
 10149 0cc1 91       		.byte	0x91
 10150 0cc2 BC7F     		.sleb128 -68
 10151 0cc4 19       		.uleb128 0x19
 10152 0cc5 6900     		.ascii	"i\000"
 10153 0cc7 01       		.byte	0x1
 10154 0cc8 9D08     		.2byte	0x89d
 10155 0cca CE000000 		.4byte	0xce
 10156 0cce 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 222


 10157 0ccf 91       		.byte	0x91
 10158 0cd0 60       		.sleb128 -32
 10159 0cd1 17       		.uleb128 0x17
 10160 0cd2 70040000 		.4byte	.LASF129
 10161 0cd6 01       		.byte	0x1
 10162 0cd7 9E08     		.2byte	0x89e
 10163 0cd9 A2000000 		.4byte	0xa2
 10164 0cdd 02       		.uleb128 0x2
 10165 0cde 91       		.byte	0x91
 10166 0cdf 4F       		.sleb128 -49
 10167 0ce0 1D       		.uleb128 0x1d
 10168 0ce1 8E050000 		.4byte	.LBB41
 10169 0ce5 7C000000 		.4byte	.LBE41-.LBB41
 10170 0ce9 FD0C0000 		.4byte	0xcfd
 10171 0ced 17       		.uleb128 0x17
 10172 0cee 4D0D0000 		.4byte	.LASF132
 10173 0cf2 01       		.byte	0x1
 10174 0cf3 A208     		.2byte	0x8a2
 10175 0cf5 A2000000 		.4byte	0xa2
 10176 0cf9 02       		.uleb128 0x2
 10177 0cfa 91       		.byte	0x91
 10178 0cfb 4E       		.sleb128 -50
 10179 0cfc 00       		.byte	0
 10180 0cfd 11       		.uleb128 0x11
 10181 0cfe 1E060000 		.4byte	.LBB42
 10182 0d02 B0010000 		.4byte	.LBE42-.LBB42
 10183 0d06 17       		.uleb128 0x17
 10184 0d07 130E0000 		.4byte	.LASF133
 10185 0d0b 01       		.byte	0x1
 10186 0d0c AD08     		.2byte	0x8ad
 10187 0d0e CE000000 		.4byte	0xce
 10188 0d12 02       		.uleb128 0x2
 10189 0d13 91       		.byte	0x91
 10190 0d14 5C       		.sleb128 -36
 10191 0d15 11       		.uleb128 0x11
 10192 0d16 24060000 		.4byte	.LBB43
 10193 0d1a 9C010000 		.4byte	.LBE43-.LBB43
 10194 0d1e 17       		.uleb128 0x17
 10195 0d1f 21040000 		.4byte	.LASF81
 10196 0d23 01       		.byte	0x1
 10197 0d24 AF08     		.2byte	0x8af
 10198 0d26 B8000000 		.4byte	0xb8
 10199 0d2a 02       		.uleb128 0x2
 10200 0d2b 91       		.byte	0x91
 10201 0d2c 4C       		.sleb128 -52
 10202 0d2d 11       		.uleb128 0x11
 10203 0d2e 32060000 		.4byte	.LBB44
 10204 0d32 8E010000 		.4byte	.LBE44-.LBB44
 10205 0d36 17       		.uleb128 0x17
 10206 0d37 BD050000 		.4byte	.LASF134
 10207 0d3b 01       		.byte	0x1
 10208 0d3c B008     		.2byte	0x8b0
 10209 0d3e CE000000 		.4byte	0xce
 10210 0d42 02       		.uleb128 0x2
 10211 0d43 91       		.byte	0x91
 10212 0d44 58       		.sleb128 -40
 10213 0d45 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 223


 10214 0d46 8C060000 		.4byte	.LBB45
 10215 0d4a 26010000 		.4byte	.LBE45-.LBB45
 10216 0d4e 17       		.uleb128 0x17
 10217 0d4f D4030000 		.4byte	.LASF135
 10218 0d53 01       		.byte	0x1
 10219 0d54 BA08     		.2byte	0x8ba
 10220 0d56 B8000000 		.4byte	0xb8
 10221 0d5a 02       		.uleb128 0x2
 10222 0d5b 91       		.byte	0x91
 10223 0d5c 4A       		.sleb128 -54
 10224 0d5d 17       		.uleb128 0x17
 10225 0d5e 400C0000 		.4byte	.LASF136
 10226 0d62 01       		.byte	0x1
 10227 0d63 BB08     		.2byte	0x8bb
 10228 0d65 A2000000 		.4byte	0xa2
 10229 0d69 02       		.uleb128 0x2
 10230 0d6a 91       		.byte	0x91
 10231 0d6b 49       		.sleb128 -55
 10232 0d6c 17       		.uleb128 0x17
 10233 0d6d 21010000 		.4byte	.LASF137
 10234 0d71 01       		.byte	0x1
 10235 0d72 BC08     		.2byte	0x8bc
 10236 0d74 A2000000 		.4byte	0xa2
 10237 0d78 02       		.uleb128 0x2
 10238 0d79 91       		.byte	0x91
 10239 0d7a 48       		.sleb128 -56
 10240 0d7b 17       		.uleb128 0x17
 10241 0d7c 59030000 		.4byte	.LASF82
 10242 0d80 01       		.byte	0x1
 10243 0d81 BF08     		.2byte	0x8bf
 10244 0d83 B8000000 		.4byte	0xb8
 10245 0d87 02       		.uleb128 0x2
 10246 0d88 91       		.byte	0x91
 10247 0d89 46       		.sleb128 -58
 10248 0d8a 00       		.byte	0
 10249 0d8b 00       		.byte	0
 10250 0d8c 00       		.byte	0
 10251 0d8d 00       		.byte	0
 10252 0d8e 00       		.byte	0
 10253 0d8f 00       		.byte	0
 10254 0d90 1F       		.uleb128 0x1f
 10255 0d91 86030000 		.4byte	.LASF138
 10256 0d95 01       		.byte	0x1
 10257 0d96 EC08     		.2byte	0x8ec
 10258 0d98 00000000 		.4byte	.LFB94
 10259 0d9c 3C010000 		.4byte	.LFE94-.LFB94
 10260 0da0 01       		.uleb128 0x1
 10261 0da1 9C       		.byte	0x9c
 10262 0da2 DC0D0000 		.4byte	0xddc
 10263 0da6 18       		.uleb128 0x18
 10264 0da7 D90A0000 		.4byte	.LASF139
 10265 0dab 01       		.byte	0x1
 10266 0dac EC08     		.2byte	0x8ec
 10267 0dae D9000000 		.4byte	0xd9
 10268 0db2 02       		.uleb128 0x2
 10269 0db3 91       		.byte	0x91
 10270 0db4 6F       		.sleb128 -17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 224


 10271 0db5 18       		.uleb128 0x18
 10272 0db6 030C0000 		.4byte	.LASF140
 10273 0dba 01       		.byte	0x1
 10274 0dbb EC08     		.2byte	0x8ec
 10275 0dbd DC0D0000 		.4byte	0xddc
 10276 0dc1 02       		.uleb128 0x2
 10277 0dc2 91       		.byte	0x91
 10278 0dc3 68       		.sleb128 -24
 10279 0dc4 11       		.uleb128 0x11
 10280 0dc5 48000000 		.4byte	.LBB46
 10281 0dc9 54000000 		.4byte	.LBE46-.LBB46
 10282 0dcd 19       		.uleb128 0x19
 10283 0dce 6900     		.ascii	"i\000"
 10284 0dd0 01       		.byte	0x1
 10285 0dd1 F808     		.2byte	0x8f8
 10286 0dd3 94000000 		.4byte	0x94
 10287 0dd7 02       		.uleb128 0x2
 10288 0dd8 91       		.byte	0x91
 10289 0dd9 74       		.sleb128 -12
 10290 0dda 00       		.byte	0
 10291 0ddb 00       		.byte	0
 10292 0ddc 20       		.uleb128 0x20
 10293 0ddd 04       		.byte	0x4
 10294 0dde D9000000 		.4byte	0xd9
 10295 0de2 07       		.uleb128 0x7
 10296 0de3 D9000000 		.4byte	0xd9
 10297 0de7 F20D0000 		.4byte	0xdf2
 10298 0deb 08       		.uleb128 0x8
 10299 0dec 36010000 		.4byte	0x136
 10300 0df0 01       		.byte	0x1
 10301 0df1 00       		.byte	0
 10302 0df2 21       		.uleb128 0x21
 10303 0df3 D4040000 		.4byte	.LASF141
 10304 0df7 01       		.byte	0x1
 10305 0df8 DB       		.byte	0xdb
 10306 0df9 E20D0000 		.4byte	0xde2
 10307 0dfd 05       		.uleb128 0x5
 10308 0dfe 03       		.byte	0x3
 10309 0dff 60000000 		.4byte	eepromArray
 10310 0e03 22       		.uleb128 0x22
 10311 0e04 6C0E0000 		.4byte	.LASF142
 10312 0e08 08       		.byte	0x8
 10313 0e09 F3       		.byte	0xf3
 10314 0e0a 2A010000 		.4byte	0x12a
 10315 0e0e 22       		.uleb128 0x22
 10316 0e0f F60E0000 		.4byte	.LASF143
 10317 0e13 08       		.byte	0x8
 10318 0e14 F9       		.byte	0xf9
 10319 0e15 2A010000 		.4byte	0x12a
 10320 0e19 07       		.uleb128 0x7
 10321 0e1a D9000000 		.4byte	0xd9
 10322 0e1e 290E0000 		.4byte	0xe29
 10323 0e22 08       		.uleb128 0x8
 10324 0e23 36010000 		.4byte	0x136
 10325 0e27 3F       		.byte	0x3f
 10326 0e28 00       		.byte	0
 10327 0e29 22       		.uleb128 0x22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 225


 10328 0e2a AB080000 		.4byte	.LASF144
 10329 0e2e 08       		.byte	0x8
 10330 0e2f FA       		.byte	0xfa
 10331 0e30 190E0000 		.4byte	0xe19
 10332 0e34 22       		.uleb128 0x22
 10333 0e35 3F050000 		.4byte	.LASF145
 10334 0e39 08       		.byte	0x8
 10335 0e3a FE       		.byte	0xfe
 10336 0e3b 2A010000 		.4byte	0x12a
 10337 0e3f 22       		.uleb128 0x22
 10338 0e40 B10E0000 		.4byte	.LASF146
 10339 0e44 08       		.byte	0x8
 10340 0e45 FF       		.byte	0xff
 10341 0e46 190E0000 		.4byte	0xe19
 10342 0e4a 22       		.uleb128 0x22
 10343 0e4b A1000000 		.4byte	.LASF147
 10344 0e4f 09       		.byte	0x9
 10345 0e50 82       		.byte	0x82
 10346 0e51 BF010000 		.4byte	0x1bf
 10347 0e55 07       		.uleb128 0x7
 10348 0e56 660E0000 		.4byte	0xe66
 10349 0e5a 660E0000 		.4byte	0xe66
 10350 0e5e 23       		.uleb128 0x23
 10351 0e5f 36010000 		.4byte	0x136
 10352 0e63 FF03     		.2byte	0x3ff
 10353 0e65 00       		.byte	0
 10354 0e66 24       		.uleb128 0x24
 10355 0e67 A2000000 		.4byte	0xa2
 10356 0e6b 25       		.uleb128 0x25
 10357 0e6c DB070000 		.4byte	.LASF148
 10358 0e70 01       		.byte	0x1
 10359 0e71 E8       		.byte	0xe8
 10360 0e72 7C0E0000 		.4byte	0xe7c
 10361 0e76 05       		.uleb128 0x5
 10362 0e77 03       		.byte	0x3
 10363 0e78 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 10364 0e7c 24       		.uleb128 0x24
 10365 0e7d 550E0000 		.4byte	0xe55
 10366 0e81 22       		.uleb128 0x22
 10367 0e82 26060000 		.4byte	.LASF149
 10368 0e86 0A       		.byte	0xa
 10369 0e87 F9       		.byte	0xf9
 10370 0e88 D9000000 		.4byte	0xd9
 10371 0e8c 26       		.uleb128 0x26
 10372 0e8d 4D0A0000 		.4byte	.LASF150
 10373 0e91 0B       		.byte	0xb
 10374 0e92 1207     		.2byte	0x712
 10375 0e94 980E0000 		.4byte	0xe98
 10376 0e98 06       		.uleb128 0x6
 10377 0e99 C3000000 		.4byte	0xc3
 10378 0e9d 07       		.uleb128 0x7
 10379 0e9e 03020000 		.4byte	0x203
 10380 0ea2 AD0E0000 		.4byte	0xead
 10381 0ea6 08       		.uleb128 0x8
 10382 0ea7 36010000 		.4byte	0x136
 10383 0eab FF       		.byte	0xff
 10384 0eac 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 226


 10385 0ead 27       		.uleb128 0x27
 10386 0eae 04010000 		.4byte	.LASF151
 10387 0eb2 01       		.byte	0x1
 10388 0eb3 5001     		.2byte	0x150
 10389 0eb5 BF0E0000 		.4byte	0xebf
 10390 0eb9 05       		.uleb128 0x5
 10391 0eba 03       		.byte	0x3
 10392 0ebb 00000000 		.4byte	I2Cbuff1
 10393 0ebf 06       		.uleb128 0x6
 10394 0ec0 9D0E0000 		.4byte	0xe9d
 10395 0ec4 07       		.uleb128 0x7
 10396 0ec5 A2000000 		.4byte	0xa2
 10397 0ec9 D50E0000 		.4byte	0xed5
 10398 0ecd 23       		.uleb128 0x23
 10399 0ece 36010000 		.4byte	0x136
 10400 0ed2 FF07     		.2byte	0x7ff
 10401 0ed4 00       		.byte	0
 10402 0ed5 25       		.uleb128 0x25
 10403 0ed6 280D0000 		.4byte	.LASF152
 10404 0eda 01       		.byte	0x1
 10405 0edb 15       		.byte	0x15
 10406 0edc C40E0000 		.4byte	0xec4
 10407 0ee0 05       		.uleb128 0x5
 10408 0ee1 03       		.byte	0x3
 10409 0ee2 00000000 		.4byte	sysexBuffer
 10410 0ee6 25       		.uleb128 0x25
 10411 0ee7 44030000 		.4byte	.LASF153
 10412 0eeb 01       		.byte	0x1
 10413 0eec 16       		.byte	0x16
 10414 0eed CE000000 		.4byte	0xce
 10415 0ef1 05       		.uleb128 0x5
 10416 0ef2 03       		.byte	0x3
 10417 0ef3 00000000 		.4byte	sysexPointer
 10418 0ef7 25       		.uleb128 0x25
 10419 0ef8 CA0A0000 		.4byte	.LASF154
 10420 0efc 01       		.byte	0x1
 10421 0efd 17       		.byte	0x17
 10422 0efe A2000000 		.4byte	0xa2
 10423 0f02 05       		.uleb128 0x5
 10424 0f03 03       		.byte	0x3
 10425 0f04 00000000 		.4byte	receivingSysex
 10426 0f08 25       		.uleb128 0x25
 10427 0f09 3F060000 		.4byte	.LASF155
 10428 0f0d 01       		.byte	0x1
 10429 0f0e 18       		.byte	0x18
 10430 0f0f A2000000 		.4byte	0xa2
 10431 0f13 05       		.uleb128 0x5
 10432 0f14 03       		.byte	0x3
 10433 0f15 00000000 		.4byte	parsingSysex
 10434 0f19 07       		.uleb128 0x7
 10435 0f1a 03020000 		.4byte	0x203
 10436 0f1e 2A0F0000 		.4byte	0xf2a
 10437 0f22 23       		.uleb128 0x23
 10438 0f23 36010000 		.4byte	0x136
 10439 0f27 FF07     		.2byte	0x7ff
 10440 0f29 00       		.byte	0
 10441 0f2a 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 227


 10442 0f2b 13000000 		.4byte	.LASF156
 10443 0f2f 01       		.byte	0x1
 10444 0f30 19       		.byte	0x19
 10445 0f31 3B0F0000 		.4byte	0xf3b
 10446 0f35 05       		.uleb128 0x5
 10447 0f36 03       		.byte	0x3
 10448 0f37 00000000 		.4byte	presetArray
 10449 0f3b 06       		.uleb128 0x6
 10450 0f3c 190F0000 		.4byte	0xf19
 10451 0f40 25       		.uleb128 0x25
 10452 0f41 90020000 		.4byte	.LASF157
 10453 0f45 01       		.byte	0x1
 10454 0f46 1A       		.byte	0x1a
 10455 0f47 A2000000 		.4byte	0xa2
 10456 0f4b 05       		.uleb128 0x5
 10457 0f4c 03       		.byte	0x3
 10458 0f4d 00000000 		.4byte	presetNumberToWrite
 10459 0f51 25       		.uleb128 0x25
 10460 0f52 9D0C0000 		.4byte	.LASF158
 10461 0f56 01       		.byte	0x1
 10462 0f57 1B       		.byte	0x1b
 10463 0f58 A2000000 		.4byte	0xa2
 10464 0f5c 05       		.uleb128 0x5
 10465 0f5d 03       		.byte	0x3
 10466 0f5e 00000000 		.4byte	copedentNumberToWrite
 10467 0f62 25       		.uleb128 0x25
 10468 0f63 35020000 		.4byte	.LASF159
 10469 0f67 01       		.byte	0x1
 10470 0f68 1C       		.byte	0x1c
 10471 0f69 A2000000 		.4byte	0xa2
 10472 0f6d 05       		.uleb128 0x5
 10473 0f6e 03       		.byte	0x3
 10474 0f6f 00000000 		.4byte	sendMessageEnd
 10475 0f73 25       		.uleb128 0x25
 10476 0f74 00000000 		.4byte	.LASF160
 10477 0f78 01       		.byte	0x1
 10478 0f79 26       		.byte	0x26
 10479 0f7a A2000000 		.4byte	0xa2
 10480 0f7e 05       		.uleb128 0x5
 10481 0f7f 03       		.byte	0x3
 10482 0f80 00000000 		.4byte	presetArraySection
 10483 0f84 25       		.uleb128 0x25
 10484 0f85 9D090000 		.4byte	.LASF161
 10485 0f89 01       		.byte	0x1
 10486 0f8a 28       		.byte	0x28
 10487 0f8b B8000000 		.4byte	0xb8
 10488 0f8f 05       		.uleb128 0x5
 10489 0f90 03       		.byte	0x3
 10490 0f91 00000000 		.4byte	messageArraySendCount
 10491 0f95 25       		.uleb128 0x25
 10492 0f96 BC0D0000 		.4byte	.LASF162
 10493 0f9a 01       		.byte	0x1
 10494 0f9b 29       		.byte	0x29
 10495 0f9c B8000000 		.4byte	0xb8
 10496 0fa0 05       		.uleb128 0x5
 10497 0fa1 03       		.byte	0x3
 10498 0fa2 00000000 		.4byte	messageArraySize
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 228


 10499 0fa6 25       		.uleb128 0x25
 10500 0fa7 A9060000 		.4byte	.LASF163
 10501 0fab 01       		.byte	0x1
 10502 0fac 2B       		.byte	0x2b
 10503 0fad A2000000 		.4byte	0xa2
 10504 0fb1 05       		.uleb128 0x5
 10505 0fb2 03       		.byte	0x3
 10506 0fb3 00000000 		.4byte	sysexMessageInProgress
 10507 0fb7 25       		.uleb128 0x25
 10508 0fb8 340D0000 		.4byte	.LASF164
 10509 0fbc 01       		.byte	0x1
 10510 0fbd 2D       		.byte	0x2d
 10511 0fbe A2000000 		.4byte	0xa2
 10512 0fc2 05       		.uleb128 0x5
 10513 0fc3 03       		.byte	0x3
 10514 0fc4 00000000 		.4byte	bufCount
 10515 0fc8 25       		.uleb128 0x25
 10516 0fc9 33000000 		.4byte	.LASF165
 10517 0fcd 01       		.byte	0x1
 10518 0fce 2E       		.byte	0x2e
 10519 0fcf 03020000 		.4byte	0x203
 10520 0fd3 05       		.uleb128 0x5
 10521 0fd4 03       		.byte	0x3
 10522 0fd5 00000000 		.4byte	sendingMessage
 10523 0fd9 25       		.uleb128 0x25
 10524 0fda 1C030000 		.4byte	.LASF166
 10525 0fde 01       		.byte	0x1
 10526 0fdf 2F       		.byte	0x2f
 10527 0fe0 03020000 		.4byte	0x203
 10528 0fe4 05       		.uleb128 0x5
 10529 0fe5 03       		.byte	0x3
 10530 0fe6 00000000 		.4byte	sendKnobs
 10531 0fea 25       		.uleb128 0x25
 10532 0feb 6E020000 		.4byte	.LASF167
 10533 0fef 01       		.byte	0x1
 10534 0ff0 30       		.byte	0x30
 10535 0ff1 CE000000 		.4byte	0xce
 10536 0ff5 05       		.uleb128 0x5
 10537 0ff6 03       		.byte	0x3
 10538 0ff7 00000000 		.4byte	currentFloat
 10539 0ffb 25       		.uleb128 0x25
 10540 0ffc CB030000 		.4byte	.LASF168
 10541 1000 01       		.byte	0x1
 10542 1001 31       		.byte	0x31
 10543 1002 CE000000 		.4byte	0xce
 10544 1006 05       		.uleb128 0x5
 10545 1007 03       		.byte	0x3
 10546 1008 00000000 		.4byte	mapCount
 10547 100c 25       		.uleb128 0x25
 10548 100d 94010000 		.4byte	.LASF169
 10549 1011 01       		.byte	0x1
 10550 1012 33       		.byte	0x33
 10551 1013 B8000000 		.4byte	0xb8
 10552 1017 05       		.uleb128 0x5
 10553 1018 03       		.byte	0x3
 10554 1019 00000000 		.4byte	valsCount
 10555 101d 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 229


 10556 101e 54040000 		.4byte	.LASF170
 10557 1022 01       		.byte	0x1
 10558 1023 34       		.byte	0x34
 10559 1024 B8000000 		.4byte	0xb8
 10560 1028 05       		.uleb128 0x5
 10561 1029 03       		.byte	0x3
 10562 102a 00000000 		.4byte	mapCountExpectation
 10563 102e 25       		.uleb128 0x25
 10564 102f F8000000 		.4byte	.LASF171
 10565 1033 01       		.byte	0x1
 10566 1034 35       		.byte	0x35
 10567 1035 B8000000 		.4byte	0xb8
 10568 1039 05       		.uleb128 0x5
 10569 103a 03       		.byte	0x3
 10570 103b 00000000 		.4byte	numMappings
 10571 103f 25       		.uleb128 0x25
 10572 1040 F00C0000 		.4byte	.LASF172
 10573 1044 01       		.byte	0x1
 10574 1045 36       		.byte	0x36
 10575 1046 03020000 		.4byte	0x203
 10576 104a 05       		.uleb128 0x5
 10577 104b 03       		.byte	0x3
 10578 104c 00000000 		.4byte	parseThatMF
 10579 1050 25       		.uleb128 0x25
 10580 1051 FD030000 		.4byte	.LASF173
 10581 1055 01       		.byte	0x1
 10582 1056 37       		.byte	0x37
 10583 1057 61100000 		.4byte	0x1061
 10584 105b 05       		.uleb128 0x5
 10585 105c 03       		.byte	0x3
 10586 105d 00000000 		.4byte	valCheck
 10587 1061 06       		.uleb128 0x6
 10588 1062 FD000000 		.4byte	0xfd
 10589 1066 25       		.uleb128 0x25
 10590 1067 490C0000 		.4byte	.LASF174
 10591 106b 01       		.byte	0x1
 10592 106c 38       		.byte	0x38
 10593 106d 61100000 		.4byte	0x1061
 10594 1071 05       		.uleb128 0x5
 10595 1072 03       		.byte	0x3
 10596 1073 00000000 		.4byte	testVal
 10597 1077 25       		.uleb128 0x25
 10598 1078 51080000 		.4byte	.LASF175
 10599 107c 01       		.byte	0x1
 10600 107d 3A       		.byte	0x3a
 10601 107e 94000000 		.4byte	0x94
 10602 1082 05       		.uleb128 0x5
 10603 1083 03       		.byte	0x3
 10604 1084 00000000 		.4byte	numStrings
 10605 1088 25       		.uleb128 0x25
 10606 1089 D40C0000 		.4byte	.LASF176
 10607 108d 01       		.byte	0x1
 10608 108e 40       		.byte	0x40
 10609 108f 2A010000 		.4byte	0x12a
 10610 1093 05       		.uleb128 0x5
 10611 1094 03       		.byte	0x3
 10612 1095 00000000 		.4byte	usbActivityCounter
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 230


 10613 1099 25       		.uleb128 0x25
 10614 109a 030C0000 		.4byte	.LASF140
 10615 109e 01       		.byte	0x1
 10616 109f 41       		.byte	0x41
 10617 10a0 3D010000 		.4byte	0x13d
 10618 10a4 05       		.uleb128 0x5
 10619 10a5 03       		.byte	0x3
 10620 10a6 00000000 		.4byte	midiMsg
 10621 10aa 25       		.uleb128 0x25
 10622 10ab 3A0F0000 		.4byte	.LASF177
 10623 10af 01       		.byte	0x1
 10624 10b0 42       		.byte	0x42
 10625 10b1 A2000000 		.4byte	0xa2
 10626 10b5 05       		.uleb128 0x5
 10627 10b6 03       		.byte	0x3
 10628 10b7 00000000 		.4byte	currentVBUS
 10629 10bb 25       		.uleb128 0x25
 10630 10bc 2B0F0000 		.4byte	.LASF178
 10631 10c0 01       		.byte	0x1
 10632 10c1 43       		.byte	0x43
 10633 10c2 A2000000 		.4byte	0xa2
 10634 10c6 05       		.uleb128 0x5
 10635 10c7 03       		.byte	0x3
 10636 10c8 00000000 		.4byte	prevVBUS
 10637 10cc 25       		.uleb128 0x25
 10638 10cd 120D0000 		.4byte	.LASF179
 10639 10d1 01       		.byte	0x1
 10640 10d2 44       		.byte	0x44
 10641 10d3 03020000 		.4byte	0x203
 10642 10d7 05       		.uleb128 0x5
 10643 10d8 03       		.byte	0x3
 10644 10d9 00000000 		.4byte	USB_active
 10645 10dd 25       		.uleb128 0x25
 10646 10de 8E090000 		.4byte	.LASF180
 10647 10e2 01       		.byte	0x1
 10648 10e3 45       		.byte	0x45
 10649 10e4 03020000 		.4byte	0x203
 10650 10e8 05       		.uleb128 0x5
 10651 10e9 03       		.byte	0x3
 10652 10ea 00000000 		.4byte	USB_check_flag
 10653 10ee 07       		.uleb128 0x7
 10654 10ef D9000000 		.4byte	0xd9
 10655 10f3 FE100000 		.4byte	0x10fe
 10656 10f7 08       		.uleb128 0x8
 10657 10f8 36010000 		.4byte	0x136
 10658 10fc 1F       		.byte	0x1f
 10659 10fd 00       		.byte	0
 10660 10fe 25       		.uleb128 0x25
 10661 10ff 960E0000 		.4byte	.LASF181
 10662 1103 01       		.byte	0x1
 10663 1104 48       		.byte	0x48
 10664 1105 EE100000 		.4byte	0x10ee
 10665 1109 05       		.uleb128 0x5
 10666 110a 03       		.byte	0x3
 10667 110b 00000000 		.4byte	inBuffer
 10668 110f 25       		.uleb128 0x25
 10669 1110 0B100000 		.4byte	.LASF182
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 231


 10670 1114 01       		.byte	0x1
 10671 1115 4A       		.byte	0x4a
 10672 1116 EE100000 		.4byte	0x10ee
 10673 111a 05       		.uleb128 0x5
 10674 111b 03       		.byte	0x3
 10675 111c 00000000 		.4byte	myArray
 10676 1120 25       		.uleb128 0x25
 10677 1121 A90F0000 		.4byte	.LASF183
 10678 1125 01       		.byte	0x1
 10679 1126 4B       		.byte	0x4b
 10680 1127 E20D0000 		.4byte	0xde2
 10681 112b 05       		.uleb128 0x5
 10682 112c 03       		.byte	0x3
 10683 112d 00000000 		.4byte	myInputArray
 10684 1131 07       		.uleb128 0x7
 10685 1132 C3000000 		.4byte	0xc3
 10686 1136 41110000 		.4byte	0x1141
 10687 113a 08       		.uleb128 0x8
 10688 113b 36010000 		.4byte	0x136
 10689 113f 01       		.byte	0x1
 10690 1140 00       		.byte	0
 10691 1141 25       		.uleb128 0x25
 10692 1142 17080000 		.4byte	.LASF184
 10693 1146 01       		.byte	0x1
 10694 1147 4C       		.byte	0x4c
 10695 1148 31110000 		.4byte	0x1131
 10696 114c 05       		.uleb128 0x5
 10697 114d 03       		.byte	0x3
 10698 114e 00000000 		.4byte	linearPotValue32Bit
 10699 1152 28       		.uleb128 0x28
 10700 1153 6900     		.ascii	"i\000"
 10701 1155 01       		.byte	0x1
 10702 1156 4D       		.byte	0x4d
 10703 1157 A2000000 		.4byte	0xa2
 10704 115b 05       		.uleb128 0x5
 10705 115c 03       		.byte	0x3
 10706 115d 00000000 		.4byte	i
 10707 1161 25       		.uleb128 0x25
 10708 1162 CC090000 		.4byte	.LASF185
 10709 1166 01       		.byte	0x1
 10710 1167 4E       		.byte	0x4e
 10711 1168 A2000000 		.4byte	0xa2
 10712 116c 05       		.uleb128 0x5
 10713 116d 03       		.byte	0x3
 10714 116e 00000000 		.4byte	counter
 10715 1172 07       		.uleb128 0x7
 10716 1173 A2000000 		.4byte	0xa2
 10717 1177 82110000 		.4byte	0x1182
 10718 117b 08       		.uleb128 0x8
 10719 117c 36010000 		.4byte	0x136
 10720 1180 1F       		.byte	0x1f
 10721 1181 00       		.byte	0
 10722 1182 25       		.uleb128 0x25
 10723 1183 4C060000 		.4byte	.LASF186
 10724 1187 01       		.byte	0x1
 10725 1188 4F       		.byte	0x4f
 10726 1189 72110000 		.4byte	0x1172
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 232


 10727 118d 05       		.uleb128 0x5
 10728 118e 03       		.byte	0x3
 10729 118f 00000000 		.4byte	returnedData
 10730 1193 25       		.uleb128 0x25
 10731 1194 9E010000 		.4byte	.LASF187
 10732 1198 01       		.byte	0x1
 10733 1199 50       		.byte	0x50
 10734 119a C3000000 		.4byte	0xc3
 10735 119e 05       		.uleb128 0x5
 10736 119f 03       		.byte	0x3
 10737 11a0 00000000 		.4byte	temper
 10738 11a4 07       		.uleb128 0x7
 10739 11a5 94000000 		.4byte	0x94
 10740 11a9 B4110000 		.4byte	0x11b4
 10741 11ad 08       		.uleb128 0x8
 10742 11ae 36010000 		.4byte	0x136
 10743 11b2 0A       		.byte	0xa
 10744 11b3 00       		.byte	0
 10745 11b4 25       		.uleb128 0x25
 10746 11b5 490E0000 		.4byte	.LASF188
 10747 11b9 01       		.byte	0x1
 10748 11ba 51       		.byte	0x51
 10749 11bb A4110000 		.4byte	0x11a4
 10750 11bf 05       		.uleb128 0x5
 10751 11c0 03       		.byte	0x3
 10752 11c1 00000000 		.4byte	previousButtons
 10753 11c5 25       		.uleb128 0x25
 10754 11c6 2F010000 		.4byte	.LASF189
 10755 11ca 01       		.byte	0x1
 10756 11cb 52       		.byte	0x52
 10757 11cc 94000000 		.4byte	0x94
 10758 11d0 05       		.uleb128 0x5
 10759 11d1 03       		.byte	0x3
 10760 11d2 00000000 		.4byte	octave
 10761 11d6 07       		.uleb128 0x7
 10762 11d7 B8000000 		.4byte	0xb8
 10763 11db E6110000 		.4byte	0x11e6
 10764 11df 08       		.uleb128 0x8
 10765 11e0 36010000 		.4byte	0x136
 10766 11e4 09       		.byte	0x9
 10767 11e5 00       		.byte	0
 10768 11e6 25       		.uleb128 0x25
 10769 11e7 4B080000 		.4byte	.LASF190
 10770 11eb 01       		.byte	0x1
 10771 11ec 53       		.byte	0x53
 10772 11ed D6110000 		.4byte	0x11d6
 10773 11f1 05       		.uleb128 0x5
 10774 11f2 03       		.byte	0x3
 10775 11f3 00000000 		.4byte	angle
 10776 11f7 25       		.uleb128 0x25
 10777 11f8 890B0000 		.4byte	.LASF191
 10778 11fc 01       		.byte	0x1
 10779 11fd 54       		.byte	0x54
 10780 11fe D6110000 		.4byte	0x11d6
 10781 1202 05       		.uleb128 0x5
 10782 1203 03       		.byte	0x3
 10783 1204 00000000 		.4byte	prevAngle
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 233


 10784 1208 07       		.uleb128 0x7
 10785 1209 B8000000 		.4byte	0xb8
 10786 120d 18120000 		.4byte	0x1218
 10787 1211 08       		.uleb128 0x8
 10788 1212 36010000 		.4byte	0x136
 10789 1216 03       		.byte	0x3
 10790 1217 00       		.byte	0
 10791 1218 25       		.uleb128 0x25
 10792 1219 D30B0000 		.4byte	.LASF192
 10793 121d 01       		.byte	0x1
 10794 121e 56       		.byte	0x56
 10795 121f 08120000 		.4byte	0x1208
 10796 1223 05       		.uleb128 0x5
 10797 1224 03       		.byte	0x3
 10798 1225 00000000 		.4byte	ADC_values
 10799 1229 25       		.uleb128 0x25
 10800 122a F0040000 		.4byte	.LASF193
 10801 122e 01       		.byte	0x1
 10802 122f 57       		.byte	0x57
 10803 1230 B8000000 		.4byte	0xb8
 10804 1234 05       		.uleb128 0x5
 10805 1235 03       		.byte	0x3
 10806 1236 00000000 		.4byte	rawAngle
 10807 123a 25       		.uleb128 0x25
 10808 123b FA0B0000 		.4byte	.LASF194
 10809 123f 01       		.byte	0x1
 10810 1240 58       		.byte	0x58
 10811 1241 B8000000 		.4byte	0xb8
 10812 1245 05       		.uleb128 0x5
 10813 1246 03       		.byte	0x3
 10814 1247 00000000 		.4byte	midiSent
 10815 124b 25       		.uleb128 0x25
 10816 124c 7A050000 		.4byte	.LASF195
 10817 1250 01       		.byte	0x1
 10818 1251 59       		.byte	0x59
 10819 1252 B8000000 		.4byte	0xb8
 10820 1256 05       		.uleb128 0x5
 10821 1257 03       		.byte	0x3
 10822 1258 00000000 		.4byte	midiOverflow
 10823 125c 07       		.uleb128 0x7
 10824 125d A2000000 		.4byte	0xa2
 10825 1261 6C120000 		.4byte	0x126c
 10826 1265 08       		.uleb128 0x8
 10827 1266 36010000 		.4byte	0x136
 10828 126a 07       		.byte	0x7
 10829 126b 00       		.byte	0
 10830 126c 25       		.uleb128 0x25
 10831 126d C30E0000 		.4byte	.LASF196
 10832 1271 01       		.byte	0x1
 10833 1272 5B       		.byte	0x5b
 10834 1273 5C120000 		.4byte	0x125c
 10835 1277 05       		.uleb128 0x5
 10836 1278 03       		.byte	0x3
 10837 1279 00000000 		.4byte	macroKnobValues
 10838 127d 25       		.uleb128 0x25
 10839 127e E0040000 		.4byte	.LASF197
 10840 1282 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 234


 10841 1283 5D       		.byte	0x5d
 10842 1284 A2000000 		.4byte	0xa2
 10843 1288 05       		.uleb128 0x5
 10844 1289 03       		.byte	0x3
 10845 128a 00000000 		.4byte	currentCopedent
 10846 128e 07       		.uleb128 0x7
 10847 128f A2000000 		.4byte	0xa2
 10848 1293 9E120000 		.4byte	0x129e
 10849 1297 08       		.uleb128 0x8
 10850 1298 36010000 		.4byte	0x136
 10851 129c 01       		.byte	0x1
 10852 129d 00       		.byte	0
 10853 129e 25       		.uleb128 0x25
 10854 129f 29010000 		.4byte	.LASF198
 10855 12a3 01       		.byte	0x1
 10856 12a4 5E       		.byte	0x5e
 10857 12a5 8E120000 		.4byte	0x128e
 10858 12a9 05       		.uleb128 0x5
 10859 12aa 03       		.byte	0x3
 10860 12ab 00000000 		.4byte	necks
 10861 12af 25       		.uleb128 0x25
 10862 12b0 16040000 		.4byte	.LASF199
 10863 12b4 01       		.byte	0x1
 10864 12b5 7D       		.byte	0x7d
 10865 12b6 D9000000 		.4byte	0xd9
 10866 12ba 05       		.uleb128 0x5
 10867 12bb 03       		.byte	0x3
 10868 12bc 00000000 		.4byte	rx1Channel
 10869 12c0 25       		.uleb128 0x25
 10870 12c1 EB0E0000 		.4byte	.LASF200
 10871 12c5 01       		.byte	0x1
 10872 12c6 7D       		.byte	0x7d
 10873 12c7 D9000000 		.4byte	0xd9
 10874 12cb 05       		.uleb128 0x5
 10875 12cc 03       		.byte	0x3
 10876 12cd 00000000 		.4byte	rx2Channel
 10877 12d1 25       		.uleb128 0x25
 10878 12d2 E0090000 		.4byte	.LASF201
 10879 12d6 01       		.byte	0x1
 10880 12d7 7E       		.byte	0x7e
 10881 12d8 E20D0000 		.4byte	0xde2
 10882 12dc 05       		.uleb128 0x5
 10883 12dd 03       		.byte	0x3
 10884 12de 00000000 		.4byte	rx1TD
 10885 12e2 25       		.uleb128 0x25
 10886 12e3 510C0000 		.4byte	.LASF202
 10887 12e7 01       		.byte	0x1
 10888 12e8 7E       		.byte	0x7e
 10889 12e9 E20D0000 		.4byte	0xde2
 10890 12ed 05       		.uleb128 0x5
 10891 12ee 03       		.byte	0x3
 10892 12ef 00000000 		.4byte	rx2TD
 10893 12f3 25       		.uleb128 0x25
 10894 12f4 580B0000 		.4byte	.LASF203
 10895 12f8 01       		.byte	0x1
 10896 12f9 80       		.byte	0x80
 10897 12fa 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 235


 10898 12fe 05       		.uleb128 0x5
 10899 12ff 03       		.byte	0x3
 10900 1300 00000000 		.4byte	txChannel
 10901 1304 25       		.uleb128 0x25
 10902 1305 920F0000 		.4byte	.LASF204
 10903 1309 01       		.byte	0x1
 10904 130a 81       		.byte	0x81
 10905 130b 2A010000 		.4byte	0x12a
 10906 130f 05       		.uleb128 0x5
 10907 1310 03       		.byte	0x3
 10908 1311 00000000 		.4byte	txTD
 10909 1315 25       		.uleb128 0x25
 10910 1316 1D0A0000 		.4byte	.LASF205
 10911 131a 01       		.byte	0x1
 10912 131b 83       		.byte	0x83
 10913 131c 2A010000 		.4byte	0x12a
 10914 1320 05       		.uleb128 0x5
 10915 1321 03       		.byte	0x3
 10916 1322 00000000 		.4byte	rx3Channel
 10917 1326 25       		.uleb128 0x25
 10918 1327 340F0000 		.4byte	.LASF206
 10919 132b 01       		.byte	0x1
 10920 132c 84       		.byte	0x84
 10921 132d 2A010000 		.4byte	0x12a
 10922 1331 05       		.uleb128 0x5
 10923 1332 03       		.byte	0x3
 10924 1333 00000000 		.4byte	rx3TD
 10925 1337 07       		.uleb128 0x7
 10926 1338 2A010000 		.4byte	0x12a
 10927 133c 4D130000 		.4byte	0x134d
 10928 1340 08       		.uleb128 0x8
 10929 1341 36010000 		.4byte	0x136
 10930 1345 01       		.byte	0x1
 10931 1346 08       		.uleb128 0x8
 10932 1347 36010000 		.4byte	0x136
 10933 134b 19       		.byte	0x19
 10934 134c 00       		.byte	0
 10935 134d 25       		.uleb128 0x25
 10936 134e 70060000 		.4byte	.LASF207
 10937 1352 01       		.byte	0x1
 10938 1353 87       		.byte	0x87
 10939 1354 5E130000 		.4byte	0x135e
 10940 1358 05       		.uleb128 0x5
 10941 1359 03       		.byte	0x3
 10942 135a 00000000 		.4byte	rxBufferPluck
 10943 135e 06       		.uleb128 0x6
 10944 135f 37130000 		.4byte	0x1337
 10945 1363 07       		.uleb128 0x7
 10946 1364 2A010000 		.4byte	0x12a
 10947 1368 79130000 		.4byte	0x1379
 10948 136c 08       		.uleb128 0x8
 10949 136d 36010000 		.4byte	0x136
 10950 1371 01       		.byte	0x1
 10951 1372 08       		.uleb128 0x8
 10952 1373 36010000 		.4byte	0x136
 10953 1377 07       		.byte	0x7
 10954 1378 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 236


 10955 1379 25       		.uleb128 0x25
 10956 137a 4C0B0000 		.4byte	.LASF208
 10957 137e 01       		.byte	0x1
 10958 137f 88       		.byte	0x88
 10959 1380 8A130000 		.4byte	0x138a
 10960 1384 05       		.uleb128 0x5
 10961 1385 03       		.byte	0x3
 10962 1386 00000000 		.4byte	rxBufferBar
 10963 138a 06       		.uleb128 0x6
 10964 138b 63130000 		.4byte	0x1363
 10965 138f 07       		.uleb128 0x7
 10966 1390 08020000 		.4byte	0x208
 10967 1394 9F130000 		.4byte	0x139f
 10968 1398 08       		.uleb128 0x8
 10969 1399 36010000 		.4byte	0x136
 10970 139d 0B       		.byte	0xb
 10971 139e 00       		.byte	0
 10972 139f 25       		.uleb128 0x25
 10973 13a0 5D020000 		.4byte	.LASF209
 10974 13a4 01       		.byte	0x1
 10975 13a5 8A       		.byte	0x8a
 10976 13a6 B0130000 		.4byte	0x13b0
 10977 13aa 05       		.uleb128 0x5
 10978 13ab 03       		.byte	0x3
 10979 13ac 00000000 		.4byte	strings
 10980 13b0 06       		.uleb128 0x6
 10981 13b1 8F130000 		.4byte	0x138f
 10982 13b5 25       		.uleb128 0x25
 10983 13b6 C3040000 		.4byte	.LASF210
 10984 13ba 01       		.byte	0x1
 10985 13bb 8B       		.byte	0x8b
 10986 13bc C6130000 		.4byte	0x13c6
 10987 13c0 05       		.uleb128 0x5
 10988 13c1 03       		.byte	0x3
 10989 13c2 00000000 		.4byte	prevStrings
 10990 13c6 06       		.uleb128 0x6
 10991 13c7 8F130000 		.4byte	0x138f
 10992 13cb 07       		.uleb128 0x7
 10993 13cc 08020000 		.4byte	0x208
 10994 13d0 DB130000 		.4byte	0x13db
 10995 13d4 08       		.uleb128 0x8
 10996 13d5 36010000 		.4byte	0x136
 10997 13d9 01       		.byte	0x1
 10998 13da 00       		.byte	0
 10999 13db 28       		.uleb128 0x28
 11000 13dc 62617200 		.ascii	"bar\000"
 11001 13e0 01       		.byte	0x1
 11002 13e1 8C       		.byte	0x8c
 11003 13e2 EC130000 		.4byte	0x13ec
 11004 13e6 05       		.uleb128 0x5
 11005 13e7 03       		.byte	0x3
 11006 13e8 00000000 		.4byte	bar
 11007 13ec 06       		.uleb128 0x6
 11008 13ed CB130000 		.4byte	0x13cb
 11009 13f1 25       		.uleb128 0x25
 11010 13f2 A10F0000 		.4byte	.LASF211
 11011 13f6 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 237


 11012 13f7 8D       		.byte	0x8d
 11013 13f8 02140000 		.4byte	0x1402
 11014 13fc 05       		.uleb128 0x5
 11015 13fd 03       		.byte	0x3
 11016 13fe 00000000 		.4byte	prevBar
 11017 1402 06       		.uleb128 0x6
 11018 1403 CB130000 		.4byte	0x13cb
 11019 1407 25       		.uleb128 0x25
 11020 1408 9F0E0000 		.4byte	.LASF212
 11021 140c 01       		.byte	0x1
 11022 140d 8E       		.byte	0x8e
 11023 140e 18140000 		.4byte	0x1418
 11024 1412 05       		.uleb128 0x5
 11025 1413 03       		.byte	0x3
 11026 1414 00000000 		.4byte	maxStrings
 11027 1418 06       		.uleb128 0x6
 11028 1419 8F130000 		.4byte	0x138f
 11029 141d 25       		.uleb128 0x25
 11030 141e 800C0000 		.4byte	.LASF213
 11031 1422 01       		.byte	0x1
 11032 1423 8F       		.byte	0x8f
 11033 1424 03020000 		.4byte	0x203
 11034 1428 05       		.uleb128 0x5
 11035 1429 03       		.byte	0x3
 11036 142a 00000000 		.4byte	amHere
 11037 142e 25       		.uleb128 0x25
 11038 142f F3050000 		.4byte	.LASF214
 11039 1433 01       		.byte	0x1
 11040 1434 90       		.byte	0x90
 11041 1435 03020000 		.4byte	0x203
 11042 1439 05       		.uleb128 0x5
 11043 143a 03       		.byte	0x3
 11044 143b 00000000 		.4byte	spiCounter
 11045 143f 25       		.uleb128 0x25
 11046 1440 2F040000 		.4byte	.LASF215
 11047 1444 01       		.byte	0x1
 11048 1445 91       		.byte	0x91
 11049 1446 03020000 		.4byte	0x203
 11050 144a 05       		.uleb128 0x5
 11051 144b 03       		.byte	0x3
 11052 144c 00000000 		.4byte	newDataFlag
 11053 1450 25       		.uleb128 0x25
 11054 1451 A70D0000 		.4byte	.LASF216
 11055 1455 01       		.byte	0x1
 11056 1456 92       		.byte	0x92
 11057 1457 94000000 		.4byte	0x94
 11058 145b 05       		.uleb128 0x5
 11059 145c 03       		.byte	0x3
 11060 145d 00000000 		.4byte	prevOctave
 11061 1461 25       		.uleb128 0x25
 11062 1462 930B0000 		.4byte	.LASF217
 11063 1466 01       		.byte	0x1
 11064 1467 93       		.byte	0x93
 11065 1468 A2000000 		.4byte	0xa2
 11066 146c 05       		.uleb128 0x5
 11067 146d 03       		.byte	0x3
 11068 146e 00000000 		.4byte	pluck_index
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 238


 11069 1472 25       		.uleb128 0x25
 11070 1473 2B0E0000 		.4byte	.LASF218
 11071 1477 01       		.byte	0x1
 11072 1478 94       		.byte	0x94
 11073 1479 03020000 		.4byte	0x203
 11074 147d 05       		.uleb128 0x5
 11075 147e 03       		.byte	0x3
 11076 147f 00000000 		.4byte	amHere2
 11077 1483 25       		.uleb128 0x25
 11078 1484 C00C0000 		.4byte	.LASF219
 11079 1488 01       		.byte	0x1
 11080 1489 95       		.byte	0x95
 11081 148a 03020000 		.4byte	0x203
 11082 148e 05       		.uleb128 0x5
 11083 148f 03       		.byte	0x3
 11084 1490 00000000 		.4byte	spiCounter2
 11085 1494 25       		.uleb128 0x25
 11086 1495 67000000 		.4byte	.LASF220
 11087 1499 01       		.byte	0x1
 11088 149a 96       		.byte	0x96
 11089 149b 03020000 		.4byte	0x203
 11090 149f 05       		.uleb128 0x5
 11091 14a0 03       		.byte	0x3
 11092 14a1 00000000 		.4byte	newDataFlag2
 11093 14a5 25       		.uleb128 0x25
 11094 14a6 900A0000 		.4byte	.LASF221
 11095 14aa 01       		.byte	0x1
 11096 14ab 97       		.byte	0x97
 11097 14ac 03020000 		.4byte	0x203
 11098 14b0 05       		.uleb128 0x5
 11099 14b1 03       		.byte	0x3
 11100 14b2 00000000 		.4byte	currentPluckBuffer
 11101 14b6 25       		.uleb128 0x25
 11102 14b7 C20B0000 		.4byte	.LASF222
 11103 14bb 01       		.byte	0x1
 11104 14bc 98       		.byte	0x98
 11105 14bd 03020000 		.4byte	0x203
 11106 14c1 05       		.uleb128 0x5
 11107 14c2 03       		.byte	0x3
 11108 14c3 00000000 		.4byte	currentBarBuffer
 11109 14c7 25       		.uleb128 0x25
 11110 14c8 3D0D0000 		.4byte	.LASF223
 11111 14cc 01       		.byte	0x1
 11112 14cd 99       		.byte	0x99
 11113 14ce 03020000 		.4byte	0x203
 11114 14d2 05       		.uleb128 0x5
 11115 14d3 03       		.byte	0x3
 11116 14d4 00000000 		.4byte	pluckErrorCount
 11117 14d8 25       		.uleb128 0x25
 11118 14d9 EB0B0000 		.4byte	.LASF224
 11119 14dd 01       		.byte	0x1
 11120 14de 9A       		.byte	0x9a
 11121 14df 08020000 		.4byte	0x208
 11122 14e3 05       		.uleb128 0x5
 11123 14e4 03       		.byte	0x3
 11124 14e5 00000000 		.4byte	SPI1ErrorCount
 11125 14e9 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 239


 11126 14ea 6A070000 		.4byte	.LASF225
 11127 14ee 01       		.byte	0x1
 11128 14ef 9E       		.byte	0x9e
 11129 14f0 03020000 		.4byte	0x203
 11130 14f4 05       		.uleb128 0x5
 11131 14f5 03       		.byte	0x3
 11132 14f6 00000000 		.4byte	inputData
 11133 14fa 25       		.uleb128 0x25
 11134 14fb DF0E0000 		.4byte	.LASF226
 11135 14ff 01       		.byte	0x1
 11136 1500 C1       		.byte	0xc1
 11137 1501 A2000000 		.4byte	0xa2
 11138 1505 05       		.uleb128 0x5
 11139 1506 03       		.byte	0x3
 11140 1507 00000000 		.4byte	spiAdjusted
 11141 150b 25       		.uleb128 0x25
 11142 150c 9C060000 		.4byte	.LASF227
 11143 1510 01       		.byte	0x1
 11144 1511 C2       		.byte	0xc2
 11145 1512 A2000000 		.4byte	0xa2
 11146 1516 05       		.uleb128 0x5
 11147 1517 03       		.byte	0x3
 11148 1518 00000000 		.4byte	mySpiCounter
 11149 151c 25       		.uleb128 0x25
 11150 151d 1C0B0000 		.4byte	.LASF228
 11151 1521 01       		.byte	0x1
 11152 1522 C3       		.byte	0xc3
 11153 1523 08020000 		.4byte	0x208
 11154 1527 05       		.uleb128 0x5
 11155 1528 03       		.byte	0x3
 11156 1529 00000000 		.4byte	offsetErrorCount
 11157 152d 25       		.uleb128 0x25
 11158 152e C7000000 		.4byte	.LASF229
 11159 1532 01       		.byte	0x1
 11160 1533 C4       		.byte	0xc4
 11161 1534 03020000 		.4byte	0x203
 11162 1538 05       		.uleb128 0x5
 11163 1539 03       		.byte	0x3
 11164 153a 00000000 		.4byte	SPI2errorflag
 11165 153e 25       		.uleb128 0x25
 11166 153f 0B0B0000 		.4byte	.LASF230
 11167 1543 01       		.byte	0x1
 11168 1544 C5       		.byte	0xc5
 11169 1545 4F150000 		.4byte	0x154f
 11170 1549 05       		.uleb128 0x5
 11171 154a 03       		.byte	0x3
 11172 154b 00000000 		.4byte	bar_index
 11173 154f 06       		.uleb128 0x6
 11174 1550 94000000 		.4byte	0x94
 11175 1554 25       		.uleb128 0x25
 11176 1555 3E030000 		.4byte	.LASF231
 11177 1559 01       		.byte	0x1
 11178 155a C6       		.byte	0xc6
 11179 155b A6020000 		.4byte	0x2a6
 11180 155f 05       		.uleb128 0x5
 11181 1560 03       		.byte	0x3
 11182 1561 00000000 		.4byte	knobs
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 240


 11183 1565 25       		.uleb128 0x25
 11184 1566 92060000 		.4byte	.LASF232
 11185 156a 01       		.byte	0x1
 11186 156b C7       		.byte	0xc7
 11187 156c A6020000 		.4byte	0x2a6
 11188 1570 05       		.uleb128 0x5
 11189 1571 03       		.byte	0x3
 11190 1572 00000000 		.4byte	prevKnobs
 11191 1576 25       		.uleb128 0x25
 11192 1577 840A0000 		.4byte	.LASF233
 11193 157b 01       		.byte	0x1
 11194 157c C9       		.byte	0xc9
 11195 157d 03020000 		.4byte	0x203
 11196 1581 05       		.uleb128 0x5
 11197 1582 03       		.byte	0x3
 11198 1583 00000000 		.4byte	SPI2started
 11199 1587 25       		.uleb128 0x25
 11200 1588 870C0000 		.4byte	.LASF234
 11201 158c 01       		.byte	0x1
 11202 158d DD       		.byte	0xdd
 11203 158e E20D0000 		.4byte	0xde2
 11204 1592 05       		.uleb128 0x5
 11205 1593 03       		.byte	0x3
 11206 1594 00000000 		.4byte	array
 11207 1598 25       		.uleb128 0x25
 11208 1599 F6070000 		.4byte	.LASF235
 11209 159d 01       		.byte	0x1
 11210 159e E0       		.byte	0xe0
 11211 159f F7010000 		.4byte	0x1f7
 11212 15a3 05       		.uleb128 0x5
 11213 15a4 03       		.byte	0x3
 11214 15a5 00000000 		.4byte	eepromReturnValue
 11215 15a9 25       		.uleb128 0x25
 11216 15aa 34050000 		.4byte	.LASF236
 11217 15ae 01       		.byte	0x1
 11218 15af EC       		.byte	0xec
 11219 15b0 D9000000 		.4byte	0xd9
 11220 15b4 05       		.uleb128 0x5
 11221 15b5 03       		.byte	0x3
 11222 15b6 00000000 		.4byte	eeprom_cnt
 11223 15ba 25       		.uleb128 0x25
 11224 15bb 08080000 		.4byte	.LASF85
 11225 15bf 01       		.byte	0x1
 11226 15c0 ED       		.byte	0xed
 11227 15c1 12010000 		.4byte	0x112
 11228 15c5 05       		.uleb128 0x5
 11229 15c6 03       		.byte	0x3
 11230 15c7 00000000 		.4byte	status
 11231 15cb 28       		.uleb128 0x28
 11232 15cc 70747200 		.ascii	"ptr\000"
 11233 15d0 01       		.byte	0x1
 11234 15d1 EE       		.byte	0xee
 11235 15d2 DC150000 		.4byte	0x15dc
 11236 15d6 05       		.uleb128 0x5
 11237 15d7 03       		.byte	0x3
 11238 15d8 00000000 		.4byte	ptr
 11239 15dc 20       		.uleb128 0x20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 241


 11240 15dd 04       		.byte	0x4
 11241 15de E7150000 		.4byte	0x15e7
 11242 15e2 24       		.uleb128 0x24
 11243 15e3 D9000000 		.4byte	0xd9
 11244 15e7 06       		.uleb128 0x6
 11245 15e8 E2150000 		.4byte	0x15e2
 11246 15ec 25       		.uleb128 0x25
 11247 15ed 2C020000 		.4byte	.LASF237
 11248 15f1 01       		.byte	0x1
 11249 15f2 EF       		.byte	0xef
 11250 15f3 4F150000 		.4byte	0x154f
 11251 15f7 05       		.uleb128 0x5
 11252 15f8 03       		.byte	0x3
 11253 15f9 00000000 		.4byte	barCount
 11254 15fd 07       		.uleb128 0x7
 11255 15fe 03020000 		.4byte	0x203
 11256 1602 0D160000 		.4byte	0x160d
 11257 1606 08       		.uleb128 0x8
 11258 1607 36010000 		.4byte	0x136
 11259 160b 0F       		.byte	0xf
 11260 160c 00       		.byte	0
 11261 160d 27       		.uleb128 0x27
 11262 160e 0D010000 		.4byte	.LASF238
 11263 1612 01       		.byte	0x1
 11264 1613 5101     		.2byte	0x151
 11265 1615 1F160000 		.4byte	0x161f
 11266 1619 05       		.uleb128 0x5
 11267 161a 03       		.byte	0x3
 11268 161b 00000000 		.4byte	I2Cbuff2
 11269 161f 06       		.uleb128 0x6
 11270 1620 FD150000 		.4byte	0x15fd
 11271 1624 27       		.uleb128 0x27
 11272 1625 0F080000 		.4byte	.LASF239
 11273 1629 01       		.byte	0x1
 11274 162a 5201     		.2byte	0x152
 11275 162c 03020000 		.4byte	0x203
 11276 1630 05       		.uleb128 0x5
 11277 1631 03       		.byte	0x3
 11278 1632 00000000 		.4byte	send_it
 11279 1636 07       		.uleb128 0x7
 11280 1637 A2000000 		.4byte	0xa2
 11281 163b 4C160000 		.4byte	0x164c
 11282 163f 08       		.uleb128 0x8
 11283 1640 36010000 		.4byte	0x136
 11284 1644 0B       		.byte	0xb
 11285 1645 08       		.uleb128 0x8
 11286 1646 36010000 		.4byte	0x136
 11287 164a 01       		.byte	0x1
 11288 164b 00       		.byte	0
 11289 164c 27       		.uleb128 0x27
 11290 164d 16010000 		.4byte	.LASF240
 11291 1651 01       		.byte	0x1
 11292 1652 5901     		.2byte	0x159
 11293 1654 36160000 		.4byte	0x1636
 11294 1658 05       		.uleb128 0x5
 11295 1659 03       		.byte	0x3
 11296 165a 00000000 		.4byte	mux_states
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 242


 11297 165e 07       		.uleb128 0x7
 11298 165f A2000000 		.4byte	0xa2
 11299 1663 6E160000 		.4byte	0x166e
 11300 1667 08       		.uleb128 0x8
 11301 1668 36010000 		.4byte	0x136
 11302 166c 0B       		.byte	0xb
 11303 166d 00       		.byte	0
 11304 166e 27       		.uleb128 0x27
 11305 166f D30E0000 		.4byte	.LASF241
 11306 1673 01       		.byte	0x1
 11307 1674 5A01     		.2byte	0x15a
 11308 1676 5E160000 		.4byte	0x165e
 11309 167a 05       		.uleb128 0x5
 11310 167b 03       		.byte	0x3
 11311 167c 00000000 		.4byte	i2c_skipped
 11312 1680 27       		.uleb128 0x27
 11313 1681 8C0D0000 		.4byte	.LASF242
 11314 1685 01       		.byte	0x1
 11315 1686 5B01     		.2byte	0x15b
 11316 1688 D6110000 		.4byte	0x11d6
 11317 168c 05       		.uleb128 0x5
 11318 168d 03       		.byte	0x3
 11319 168e 00000000 		.4byte	pedals_low
 11320 1692 27       		.uleb128 0x27
 11321 1693 6E010000 		.4byte	.LASF243
 11322 1697 01       		.byte	0x1
 11323 1698 5C01     		.2byte	0x15c
 11324 169a D6110000 		.4byte	0x11d6
 11325 169e 05       		.uleb128 0x5
 11326 169f 03       		.byte	0x3
 11327 16a0 00000000 		.4byte	pedals_high
 11328 16a4 27       		.uleb128 0x27
 11329 16a5 E70C0000 		.4byte	.LASF244
 11330 16a9 01       		.byte	0x1
 11331 16aa 5D01     		.2byte	0x15d
 11332 16ac B8000000 		.4byte	0xb8
 11333 16b0 05       		.uleb128 0x5
 11334 16b1 03       		.byte	0x3
 11335 16b2 00000000 		.4byte	deadzone
 11336 16b6 27       		.uleb128 0x27
 11337 16b7 64060000 		.4byte	.LASF245
 11338 16bb 01       		.byte	0x1
 11339 16bc 5E01     		.2byte	0x15e
 11340 16be B8000000 		.4byte	0xb8
 11341 16c2 05       		.uleb128 0x5
 11342 16c3 03       		.byte	0x3
 11343 16c4 00000000 		.4byte	volumePedal
 11344 16c8 27       		.uleb128 0x27
 11345 16c9 620B0000 		.4byte	.LASF246
 11346 16cd 01       		.byte	0x1
 11347 16ce 5F01     		.2byte	0x15f
 11348 16d0 D6110000 		.4byte	0x11d6
 11349 16d4 05       		.uleb128 0x5
 11350 16d5 03       		.byte	0x3
 11351 16d6 00000000 		.4byte	processed_pedals
 11352 16da 27       		.uleb128 0x27
 11353 16db 6E0A0000 		.4byte	.LASF247
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 243


 11354 16df 01       		.byte	0x1
 11355 16e0 6001     		.2byte	0x160
 11356 16e2 D6110000 		.4byte	0x11d6
 11357 16e6 05       		.uleb128 0x5
 11358 16e7 03       		.byte	0x3
 11359 16e8 00000000 		.4byte	prev_processed_pedals
 11360 16ec 07       		.uleb128 0x7
 11361 16ed A2000000 		.4byte	0xa2
 11362 16f1 FC160000 		.4byte	0x16fc
 11363 16f5 08       		.uleb128 0x8
 11364 16f6 36010000 		.4byte	0x136
 11365 16fa 09       		.byte	0x9
 11366 16fb 00       		.byte	0
 11367 16fc 27       		.uleb128 0x27
 11368 16fd 87060000 		.4byte	.LASF248
 11369 1701 01       		.byte	0x1
 11370 1702 6101     		.2byte	0x161
 11371 1704 EC160000 		.4byte	0x16ec
 11372 1708 05       		.uleb128 0x5
 11373 1709 03       		.byte	0x3
 11374 170a 00000000 		.4byte	pedals8bit
 11375 170e 27       		.uleb128 0x27
 11376 170f 42000000 		.4byte	.LASF249
 11377 1713 01       		.byte	0x1
 11378 1714 6201     		.2byte	0x162
 11379 1716 AD000000 		.4byte	0xad
 11380 171a 05       		.uleb128 0x5
 11381 171b 03       		.byte	0x3
 11382 171c 00000000 		.4byte	prev_processed_volumePedal
 11383 1720 27       		.uleb128 0x27
 11384 1721 2D0B0000 		.4byte	.LASF250
 11385 1725 01       		.byte	0x1
 11386 1726 6301     		.2byte	0x163
 11387 1728 AD000000 		.4byte	0xad
 11388 172c 05       		.uleb128 0x5
 11389 172d 03       		.byte	0x3
 11390 172e 00000000 		.4byte	processed_volumePedal
 11391 1732 07       		.uleb128 0x7
 11392 1733 FD000000 		.4byte	0xfd
 11393 1737 48170000 		.4byte	0x1748
 11394 173b 08       		.uleb128 0x8
 11395 173c 36010000 		.4byte	0x136
 11396 1740 03       		.byte	0x3
 11397 1741 08       		.uleb128 0x8
 11398 1742 36010000 		.4byte	0x136
 11399 1746 03       		.byte	0x3
 11400 1747 00       		.byte	0
 11401 1748 27       		.uleb128 0x27
 11402 1749 CD0D0000 		.4byte	.LASF251
 11403 174d 01       		.byte	0x1
 11404 174e 6601     		.2byte	0x166
 11405 1750 32170000 		.4byte	0x1732
 11406 1754 05       		.uleb128 0x5
 11407 1755 03       		.byte	0x3
 11408 1756 00000000 		.4byte	fretMeasurements
 11409 175a 27       		.uleb128 0x27
 11410 175b 7B080000 		.4byte	.LASF252
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 244


 11411 175f 01       		.byte	0x1
 11412 1760 7301     		.2byte	0x173
 11413 1762 94000000 		.4byte	0x94
 11414 1766 05       		.uleb128 0x5
 11415 1767 03       		.byte	0x3
 11416 1768 00000000 		.4byte	currentPresetSelection
 11417 176c 07       		.uleb128 0x7
 11418 176d A2000000 		.4byte	0xa2
 11419 1771 82170000 		.4byte	0x1782
 11420 1775 08       		.uleb128 0x8
 11421 1776 36010000 		.4byte	0x136
 11422 177a 3F       		.byte	0x3f
 11423 177b 08       		.uleb128 0x8
 11424 177c 36010000 		.4byte	0x136
 11425 1780 0D       		.byte	0xd
 11426 1781 00       		.byte	0
 11427 1782 27       		.uleb128 0x27
 11428 1783 BB020000 		.4byte	.LASF253
 11429 1787 01       		.byte	0x1
 11430 1788 7401     		.2byte	0x174
 11431 178a 6C170000 		.4byte	0x176c
 11432 178e 05       		.uleb128 0x5
 11433 178f 03       		.byte	0x3
 11434 1790 00000000 		.4byte	presetNamesArray
 11435 1794 27       		.uleb128 0x27
 11436 1795 44020000 		.4byte	.LASF254
 11437 1799 01       		.byte	0x1
 11438 179a 7501     		.2byte	0x175
 11439 179c A2000000 		.4byte	0xa2
 11440 17a0 05       		.uleb128 0x5
 11441 17a1 03       		.byte	0x3
 11442 17a2 00000000 		.4byte	presetNumberToLoad
 11443 17a6 27       		.uleb128 0x27
 11444 17a7 7B020000 		.4byte	.LASF255
 11445 17ab 01       		.byte	0x1
 11446 17ac 7601     		.2byte	0x176
 11447 17ae 8E120000 		.4byte	0x128e
 11448 17b2 05       		.uleb128 0x5
 11449 17b3 03       		.byte	0x3
 11450 17b4 00000000 		.4byte	presetLoadedResponse
 11451 17b8 07       		.uleb128 0x7
 11452 17b9 A2000000 		.4byte	0xa2
 11453 17bd D4170000 		.4byte	0x17d4
 11454 17c1 08       		.uleb128 0x8
 11455 17c2 36010000 		.4byte	0x136
 11456 17c6 3F       		.byte	0x3f
 11457 17c7 08       		.uleb128 0x8
 11458 17c8 36010000 		.4byte	0x136
 11459 17cc 07       		.byte	0x7
 11460 17cd 08       		.uleb128 0x8
 11461 17ce 36010000 		.4byte	0x136
 11462 17d2 0D       		.byte	0xd
 11463 17d3 00       		.byte	0
 11464 17d4 27       		.uleb128 0x27
 11465 17d5 74000000 		.4byte	.LASF256
 11466 17d9 01       		.byte	0x1
 11467 17da 7901     		.2byte	0x179
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 245


 11468 17dc B8170000 		.4byte	0x17b8
 11469 17e0 05       		.uleb128 0x5
 11470 17e1 03       		.byte	0x3
 11471 17e2 00000000 		.4byte	macroNamesArray
 11472 17e6 07       		.uleb128 0x7
 11473 17e7 FD000000 		.4byte	0xfd
 11474 17eb F6170000 		.4byte	0x17f6
 11475 17ef 08       		.uleb128 0x8
 11476 17f0 36010000 		.4byte	0x136
 11477 17f4 03       		.byte	0x3
 11478 17f5 00       		.byte	0
 11479 17f6 27       		.uleb128 0x27
 11480 17f7 10030000 		.4byte	.LASF257
 11481 17fb 01       		.byte	0x1
 11482 17fc 7D01     		.2byte	0x17d
 11483 17fe E6170000 		.4byte	0x17e6
 11484 1802 05       		.uleb128 0x5
 11485 1803 03       		.byte	0x3
 11486 1804 00000000 		.4byte	fretScaling
 11487 1808 07       		.uleb128 0x7
 11488 1809 FD000000 		.4byte	0xfd
 11489 180d 18180000 		.4byte	0x1818
 11490 1811 08       		.uleb128 0x8
 11491 1812 36010000 		.4byte	0x136
 11492 1816 09       		.byte	0x9
 11493 1817 00       		.byte	0
 11494 1818 27       		.uleb128 0x27
 11495 1819 E3030000 		.4byte	.LASF258
 11496 181d 01       		.byte	0x1
 11497 181e 8201     		.2byte	0x182
 11498 1820 08180000 		.4byte	0x1808
 11499 1824 05       		.uleb128 0x5
 11500 1825 03       		.byte	0x3
 11501 1826 00000000 		.4byte	pedalRatios
 11502 182a 27       		.uleb128 0x27
 11503 182b 84040000 		.4byte	.LASF259
 11504 182f 01       		.byte	0x1
 11505 1830 8301     		.2byte	0x183
 11506 1832 A2000000 		.4byte	0xa2
 11507 1836 05       		.uleb128 0x5
 11508 1837 03       		.byte	0x3
 11509 1838 00000000 		.4byte	last_mux
 11510 183c 27       		.uleb128 0x27
 11511 183d 59090000 		.4byte	.LASF260
 11512 1841 01       		.byte	0x1
 11513 1842 8401     		.2byte	0x184
 11514 1844 03020000 		.4byte	0x203
 11515 1848 05       		.uleb128 0x5
 11516 1849 03       		.byte	0x3
 11517 184a 00000000 		.4byte	main_counter
 11518 184e 27       		.uleb128 0x27
 11519 184f 16050000 		.4byte	.LASF261
 11520 1853 01       		.byte	0x1
 11521 1854 8501     		.2byte	0x185
 11522 1856 A2000000 		.4byte	0xa2
 11523 185a 05       		.uleb128 0x5
 11524 185b 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 246


 11525 185c 00000000 		.4byte	neck
 11526 1860 27       		.uleb128 0x27
 11527 1861 70090000 		.4byte	.LASF262
 11528 1865 01       		.byte	0x1
 11529 1866 8601     		.2byte	0x186
 11530 1868 A2000000 		.4byte	0xa2
 11531 186c 05       		.uleb128 0x5
 11532 186d 03       		.byte	0x3
 11533 186e 00000000 		.4byte	dualSlider
 11534 1872 27       		.uleb128 0x27
 11535 1873 E30B0000 		.4byte	.LASF263
 11536 1877 01       		.byte	0x1
 11537 1878 8701     		.2byte	0x187
 11538 187a A2000000 		.4byte	0xa2
 11539 187e 05       		.uleb128 0x5
 11540 187f 03       		.byte	0x3
 11541 1880 00000000 		.4byte	enterUp
 11542 1884 27       		.uleb128 0x27
 11543 1885 57020000 		.4byte	.LASF264
 11544 1889 01       		.byte	0x1
 11545 188a 8801     		.2byte	0x188
 11546 188c A2000000 		.4byte	0xa2
 11547 1890 05       		.uleb128 0x5
 11548 1891 03       		.byte	0x3
 11549 1892 00000000 		.4byte	voice
 11550 1896 27       		.uleb128 0x27
 11551 1897 CE0F0000 		.4byte	.LASF265
 11552 189b 01       		.byte	0x1
 11553 189c 8901     		.2byte	0x189
 11554 189e A2000000 		.4byte	0xa2
 11555 18a2 05       		.uleb128 0x5
 11556 18a3 03       		.byte	0x3
 11557 18a4 00000000 		.4byte	editUp
 11558 18a8 27       		.uleb128 0x27
 11559 18a9 6E050000 		.4byte	.LASF266
 11560 18ad 01       		.byte	0x1
 11561 18ae 8A01     		.2byte	0x18a
 11562 18b0 A2000000 		.4byte	0xa2
 11563 18b4 05       		.uleb128 0x5
 11564 18b5 03       		.byte	0x3
 11565 18b6 00000000 		.4byte	oct1Up
 11566 18ba 27       		.uleb128 0x27
 11567 18bb 460F0000 		.4byte	.LASF267
 11568 18bf 01       		.byte	0x1
 11569 18c0 8B01     		.2byte	0x18b
 11570 18c2 A2000000 		.4byte	0xa2
 11571 18c6 05       		.uleb128 0x5
 11572 18c7 03       		.byte	0x3
 11573 18c8 00000000 		.4byte	oct4Up
 11574 18cc 27       		.uleb128 0x27
 11575 18cd 8D040000 		.4byte	.LASF268
 11576 18d1 01       		.byte	0x1
 11577 18d2 8D01     		.2byte	0x18d
 11578 18d4 DE180000 		.4byte	0x18de
 11579 18d8 05       		.uleb128 0x5
 11580 18d9 03       		.byte	0x3
 11581 18da 00000000 		.4byte	encoderVal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 247


 11582 18de 06       		.uleb128 0x6
 11583 18df FD150000 		.4byte	0x15fd
 11584 18e3 27       		.uleb128 0x27
 11585 18e4 63050000 		.4byte	.LASF269
 11586 18e8 01       		.byte	0x1
 11587 18e9 8E01     		.2byte	0x18e
 11588 18eb 94000000 		.4byte	0x94
 11589 18ef 05       		.uleb128 0x5
 11590 18f0 03       		.byte	0x3
 11591 18f1 00000000 		.4byte	encoderNum
 11592 18f5 27       		.uleb128 0x27
 11593 18f6 360A0000 		.4byte	.LASF270
 11594 18fa 01       		.byte	0x1
 11595 18fb 8F01     		.2byte	0x18f
 11596 18fd A2000000 		.4byte	0xa2
 11597 1901 05       		.uleb128 0x5
 11598 1902 03       		.byte	0x3
 11599 1903 00000000 		.4byte	button1Up
 11600 1907 27       		.uleb128 0x27
 11601 1908 760C0000 		.4byte	.LASF271
 11602 190c 01       		.byte	0x1
 11603 190d 9001     		.2byte	0x190
 11604 190f A2000000 		.4byte	0xa2
 11605 1913 05       		.uleb128 0x5
 11606 1914 03       		.byte	0x3
 11607 1915 00000000 		.4byte	button2Up
 11608 1919 27       		.uleb128 0x27
 11609 191a 620F0000 		.4byte	.LASF272
 11610 191e 01       		.byte	0x1
 11611 191f 9101     		.2byte	0x191
 11612 1921 A2000000 		.4byte	0xa2
 11613 1925 05       		.uleb128 0x5
 11614 1926 03       		.byte	0x3
 11615 1927 00000000 		.4byte	button3Up
 11616 192b 27       		.uleb128 0x27
 11617 192c 210F0000 		.4byte	.LASF273
 11618 1930 01       		.byte	0x1
 11619 1931 9201     		.2byte	0x192
 11620 1933 A2000000 		.4byte	0xa2
 11621 1937 05       		.uleb128 0x5
 11622 1938 03       		.byte	0x3
 11623 1939 00000000 		.4byte	button4Up
 11624 193d 27       		.uleb128 0x27
 11625 193e 700D0000 		.4byte	.LASF274
 11626 1942 01       		.byte	0x1
 11627 1943 9301     		.2byte	0x193
 11628 1945 A2000000 		.4byte	0xa2
 11629 1949 05       		.uleb128 0x5
 11630 194a 03       		.byte	0x3
 11631 194b 00000000 		.4byte	patchNum
 11632 194f 07       		.uleb128 0x7
 11633 1950 FD000000 		.4byte	0xfd
 11634 1954 6B190000 		.4byte	0x196b
 11635 1958 08       		.uleb128 0x8
 11636 1959 36010000 		.4byte	0x136
 11637 195d 06       		.byte	0x6
 11638 195e 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 248


 11639 195f 36010000 		.4byte	0x136
 11640 1963 0A       		.byte	0xa
 11641 1964 08       		.uleb128 0x8
 11642 1965 36010000 		.4byte	0x136
 11643 1969 0B       		.byte	0xb
 11644 196a 00       		.byte	0
 11645 196b 27       		.uleb128 0x27
 11646 196c 7E060000 		.4byte	.LASF275
 11647 1970 01       		.byte	0x1
 11648 1971 9901     		.2byte	0x199
 11649 1973 4F190000 		.4byte	0x194f
 11650 1977 05       		.uleb128 0x5
 11651 1978 03       		.byte	0x3
 11652 1979 00000000 		.4byte	copedent
 11653 197d 07       		.uleb128 0x7
 11654 197e A2000000 		.4byte	0xa2
 11655 1982 93190000 		.4byte	0x1993
 11656 1986 08       		.uleb128 0x8
 11657 1987 36010000 		.4byte	0x136
 11658 198b 06       		.byte	0x6
 11659 198c 08       		.uleb128 0x8
 11660 198d 36010000 		.4byte	0x136
 11661 1991 0D       		.byte	0xd
 11662 1992 00       		.byte	0
 11663 1993 27       		.uleb128 0x27
 11664 1994 81010000 		.4byte	.LASF276
 11665 1998 01       		.byte	0x1
 11666 1999 9A01     		.2byte	0x19a
 11667 199b 7D190000 		.4byte	0x197d
 11668 199f 05       		.uleb128 0x5
 11669 19a0 03       		.byte	0x3
 11670 19a1 00000000 		.4byte	copedentNamesArray
 11671 19a5 07       		.uleb128 0x7
 11672 19a6 FD000000 		.4byte	0xfd
 11673 19aa B5190000 		.4byte	0x19b5
 11674 19ae 08       		.uleb128 0x8
 11675 19af 36010000 		.4byte	0x136
 11676 19b3 0B       		.byte	0xb
 11677 19b4 00       		.byte	0
 11678 19b5 27       		.uleb128 0x27
 11679 19b6 D1020000 		.4byte	.LASF277
 11680 19ba 01       		.byte	0x1
 11681 19bb 9C01     		.2byte	0x19c
 11682 19bd A5190000 		.4byte	0x19a5
 11683 19c1 05       		.uleb128 0x5
 11684 19c2 03       		.byte	0x3
 11685 19c3 00000000 		.4byte	prevStringPitchBend
 11686 19c7 07       		.uleb128 0x7
 11687 19c8 FD000000 		.4byte	0xfd
 11688 19cc DD190000 		.4byte	0x19dd
 11689 19d0 08       		.uleb128 0x8
 11690 19d1 36010000 		.4byte	0x136
 11691 19d5 09       		.byte	0x9
 11692 19d6 08       		.uleb128 0x8
 11693 19d7 36010000 		.4byte	0x136
 11694 19db 0B       		.byte	0xb
 11695 19dc 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 249


 11696 19dd 27       		.uleb128 0x27
 11697 19de BB0F0000 		.4byte	.LASF278
 11698 19e2 01       		.byte	0x1
 11699 19e3 9E01     		.2byte	0x19e
 11700 19e5 C7190000 		.4byte	0x19c7
 11701 19e9 05       		.uleb128 0x5
 11702 19ea 03       		.byte	0x3
 11703 19eb 00000000 		.4byte	pedals
 11704 19ef 27       		.uleb128 0x27
 11705 19f0 730B0000 		.4byte	.LASF279
 11706 19f4 01       		.byte	0x1
 11707 19f5 A101     		.2byte	0x1a1
 11708 19f7 A5190000 		.4byte	0x19a5
 11709 19fb 05       		.uleb128 0x5
 11710 19fc 03       		.byte	0x3
 11711 19fd 00000000 		.4byte	openStringFrequencies
 11712 1a01 27       		.uleb128 0x27
 11713 1a02 330E0000 		.4byte	.LASF280
 11714 1a06 01       		.byte	0x1
 11715 1a07 A201     		.2byte	0x1a2
 11716 1a09 A5190000 		.4byte	0x19a5
 11717 1a0d 05       		.uleb128 0x5
 11718 1a0e 03       		.byte	0x3
 11719 1a0f 00000000 		.4byte	stringMappedPositions
 11720 1a13 27       		.uleb128 0x27
 11721 1a14 51070000 		.4byte	.LASF281
 11722 1a18 01       		.byte	0x1
 11723 1a19 A301     		.2byte	0x1a3
 11724 1a1b A5190000 		.4byte	0x19a5
 11725 1a1f 05       		.uleb128 0x5
 11726 1a20 03       		.byte	0x3
 11727 1a21 00000000 		.4byte	invStringMappedPositions
 11728 1a25 27       		.uleb128 0x27
 11729 1a26 F20F0000 		.4byte	.LASF282
 11730 1a2a 01       		.byte	0x1
 11731 1a2b A401     		.2byte	0x1a4
 11732 1a2d A5190000 		.4byte	0x19a5
 11733 1a31 05       		.uleb128 0x5
 11734 1a32 03       		.byte	0x3
 11735 1a33 00000000 		.4byte	stringFrequencies
 11736 1a37 27       		.uleb128 0x27
 11737 1a38 3B040000 		.4byte	.LASF283
 11738 1a3c 01       		.byte	0x1
 11739 1a3d A501     		.2byte	0x1a5
 11740 1a3f A5190000 		.4byte	0x19a5
 11741 1a43 05       		.uleb128 0x5
 11742 1a44 03       		.byte	0x3
 11743 1a45 00000000 		.4byte	stringOctave
 11744 1a49 27       		.uleb128 0x27
 11745 1a4a D4090000 		.4byte	.LASF284
 11746 1a4e 01       		.byte	0x1
 11747 1a4f A601     		.2byte	0x1a6
 11748 1a51 A5190000 		.4byte	0x19a5
 11749 1a55 05       		.uleb128 0x5
 11750 1a56 03       		.byte	0x3
 11751 1a57 00000000 		.4byte	stringPitch
 11752 1a5b 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 250


 11753 1a5c F10D0000 		.4byte	.LASF285
 11754 1a60 01       		.byte	0x1
 11755 1a61 A701     		.2byte	0x1a7
 11756 1a63 A5190000 		.4byte	0x19a5
 11757 1a67 05       		.uleb128 0x5
 11758 1a68 03       		.byte	0x3
 11759 1a69 00000000 		.4byte	stringMIDI
 11760 1a6d 07       		.uleb128 0x7
 11761 1a6e 94000000 		.4byte	0x94
 11762 1a72 7D1A0000 		.4byte	0x1a7d
 11763 1a76 08       		.uleb128 0x8
 11764 1a77 36010000 		.4byte	0x136
 11765 1a7b 0B       		.byte	0xb
 11766 1a7c 00       		.byte	0
 11767 1a7d 27       		.uleb128 0x27
 11768 1a7e 92080000 		.4byte	.LASF286
 11769 1a82 01       		.byte	0x1
 11770 1a83 A801     		.2byte	0x1a8
 11771 1a85 6D1A0000 		.4byte	0x1a6d
 11772 1a89 05       		.uleb128 0x5
 11773 1a8a 03       		.byte	0x3
 11774 1a8b 00000000 		.4byte	openStringMIDI_Int
 11775 1a8f 27       		.uleb128 0x27
 11776 1a90 560D0000 		.4byte	.LASF287
 11777 1a94 01       		.byte	0x1
 11778 1a95 A901     		.2byte	0x1a9
 11779 1a97 94000000 		.4byte	0x94
 11780 1a9b 05       		.uleb128 0x5
 11781 1a9c 03       		.byte	0x3
 11782 1a9d 00000000 		.4byte	OLEDcount
 11783 1aa1 27       		.uleb128 0x27
 11784 1aa2 E6090000 		.4byte	.LASF288
 11785 1aa6 01       		.byte	0x1
 11786 1aa7 AB01     		.2byte	0x1ab
 11787 1aa9 94000000 		.4byte	0x94
 11788 1aad 05       		.uleb128 0x5
 11789 1aae 03       		.byte	0x3
 11790 1aaf 00000000 		.4byte	mainOLEDWaitingToSend
 11791 1ab3 27       		.uleb128 0x27
 11792 1ab4 57010000 		.4byte	.LASF289
 11793 1ab8 01       		.byte	0x1
 11794 1ab9 AC01     		.2byte	0x1ac
 11795 1abb 94000000 		.4byte	0x94
 11796 1abf 05       		.uleb128 0x5
 11797 1ac0 03       		.byte	0x3
 11798 1ac1 00000000 		.4byte	macroOLEDWaitingToSend
 11799 1ac5 07       		.uleb128 0x7
 11800 1ac6 94000000 		.4byte	0x94
 11801 1aca D51A0000 		.4byte	0x1ad5
 11802 1ace 08       		.uleb128 0x8
 11803 1acf 36010000 		.4byte	0x136
 11804 1ad3 3F       		.byte	0x3f
 11805 1ad4 00       		.byte	0
 11806 1ad5 27       		.uleb128 0x27
 11807 1ad6 A1040000 		.4byte	.LASF290
 11808 1ada 01       		.byte	0x1
 11809 1adb AE01     		.2byte	0x1ae
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 251


 11810 1add C51A0000 		.4byte	0x1ac5
 11811 1ae1 05       		.uleb128 0x5
 11812 1ae2 03       		.byte	0x3
 11813 1ae3 00000000 		.4byte	presetAlreadyDisplayed
 11814 1ae7 27       		.uleb128 0x27
 11815 1ae8 790D0000 		.4byte	.LASF291
 11816 1aec 01       		.byte	0x1
 11817 1aed B001     		.2byte	0x1b0
 11818 1aef 08180000 		.4byte	0x1808
 11819 1af3 05       		.uleb128 0x5
 11820 1af4 03       		.byte	0x3
 11821 1af5 00000000 		.4byte	pedals_float
 11822 1af9 27       		.uleb128 0x27
 11823 1afa 0B0C0000 		.4byte	.LASF292
 11824 1afe 01       		.byte	0x1
 11825 1aff B801     		.2byte	0x1b8
 11826 1b01 94000000 		.4byte	0x94
 11827 1b05 05       		.uleb128 0x5
 11828 1b06 03       		.byte	0x3
 11829 1b07 00000000 		.4byte	currentNeck
 11830 1b0b 27       		.uleb128 0x27
 11831 1b0c 170C0000 		.4byte	.LASF293
 11832 1b10 01       		.byte	0x1
 11833 1b11 BA01     		.2byte	0x1ba
 11834 1b13 94000000 		.4byte	0x94
 11835 1b17 05       		.uleb128 0x5
 11836 1b18 03       		.byte	0x3
 11837 1b19 00000000 		.4byte	editMode
 11838 1b1d 27       		.uleb128 0x27
 11839 1b1e 7E0E0000 		.4byte	.LASF294
 11840 1b22 01       		.byte	0x1
 11841 1b23 BB01     		.2byte	0x1bb
 11842 1b25 94000000 		.4byte	0x94
 11843 1b29 05       		.uleb128 0x5
 11844 1b2a 03       		.byte	0x3
 11845 1b2b 00000000 		.4byte	calibrationMode
 11846 1b2f 27       		.uleb128 0x27
 11847 1b30 8E070000 		.4byte	.LASF295
 11848 1b34 01       		.byte	0x1
 11849 1b35 5207     		.2byte	0x752
 11850 1b37 6D1A0000 		.4byte	0x1a6d
 11851 1b3b 05       		.uleb128 0x5
 11852 1b3c 03       		.byte	0x3
 11853 1b3d 00000000 		.4byte	prevNotes
 11854 1b41 27       		.uleb128 0x27
 11855 1b42 F60A0000 		.4byte	.LASF296
 11856 1b46 01       		.byte	0x1
 11857 1b47 C707     		.2byte	0x7c7
 11858 1b49 03020000 		.4byte	0x203
 11859 1b4d 05       		.uleb128 0x5
 11860 1b4e 03       		.byte	0x3
 11861 1b4f 00000000 		.4byte	checkStatus
 11862 1b53 27       		.uleb128 0x27
 11863 1b54 620C0000 		.4byte	.LASF297
 11864 1b58 01       		.byte	0x1
 11865 1b59 C807     		.2byte	0x7c8
 11866 1b5b 08020000 		.4byte	0x208
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 252


 11867 1b5f 05       		.uleb128 0x5
 11868 1b60 03       		.byte	0x3
 11869 1b61 00000000 		.4byte	checkBase
 11870 1b65 27       		.uleb128 0x27
 11871 1b66 1D0D0000 		.4byte	.LASF298
 11872 1b6a 01       		.byte	0x1
 11873 1b6b CC07     		.2byte	0x7cc
 11874 1b6d 94000000 		.4byte	0x94
 11875 1b71 05       		.uleb128 0x5
 11876 1b72 03       		.byte	0x3
 11877 1b73 00000000 		.4byte	SPI_errors
 11878 1b77 07       		.uleb128 0x7
 11879 1b78 03020000 		.4byte	0x203
 11880 1b7c 871B0000 		.4byte	0x1b87
 11881 1b80 08       		.uleb128 0x8
 11882 1b81 36010000 		.4byte	0x136
 11883 1b85 03       		.byte	0x3
 11884 1b86 00       		.byte	0
 11885 1b87 27       		.uleb128 0x27
 11886 1b88 430B0000 		.4byte	.LASF88
 11887 1b8c 01       		.byte	0x1
 11888 1b8d E808     		.2byte	0x8e8
 11889 1b8f 991B0000 		.4byte	0x1b99
 11890 1b93 05       		.uleb128 0x5
 11891 1b94 03       		.byte	0x3
 11892 1b95 00000000 		.4byte	tempMIDI
 11893 1b99 06       		.uleb128 0x6
 11894 1b9a 771B0000 		.4byte	0x1b77
 11895 1b9e 27       		.uleb128 0x27
 11896 1b9f 1F000000 		.4byte	.LASF299
 11897 1ba3 01       		.byte	0x1
 11898 1ba4 E908     		.2byte	0x8e9
 11899 1ba6 03020000 		.4byte	0x203
 11900 1baa 05       		.uleb128 0x5
 11901 1bab 03       		.byte	0x3
 11902 1bac 00000000 		.4byte	firstSysex
 11903 1bb0 27       		.uleb128 0x27
 11904 1bb1 15060000 		.4byte	.LASF300
 11905 1bb5 01       		.byte	0x1
 11906 1bb6 EA08     		.2byte	0x8ea
 11907 1bb8 C21B0000 		.4byte	0x1bc2
 11908 1bbc 05       		.uleb128 0x5
 11909 1bbd 03       		.byte	0x3
 11910 1bbe 00000000 		.4byte	sysexPointerMask
 11911 1bc2 24       		.uleb128 0x24
 11912 1bc3 B8000000 		.4byte	0xb8
 11913 1bc7 00       		.byte	0
 11914              		.section	.debug_abbrev,"",%progbits
 11915              	.Ldebug_abbrev0:
 11916 0000 01       		.uleb128 0x1
 11917 0001 11       		.uleb128 0x11
 11918 0002 01       		.byte	0x1
 11919 0003 25       		.uleb128 0x25
 11920 0004 0E       		.uleb128 0xe
 11921 0005 13       		.uleb128 0x13
 11922 0006 0B       		.uleb128 0xb
 11923 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 253


 11924 0008 0E       		.uleb128 0xe
 11925 0009 1B       		.uleb128 0x1b
 11926 000a 0E       		.uleb128 0xe
 11927 000b 55       		.uleb128 0x55
 11928 000c 17       		.uleb128 0x17
 11929 000d 11       		.uleb128 0x11
 11930 000e 01       		.uleb128 0x1
 11931 000f 10       		.uleb128 0x10
 11932 0010 17       		.uleb128 0x17
 11933 0011 00       		.byte	0
 11934 0012 00       		.byte	0
 11935 0013 02       		.uleb128 0x2
 11936 0014 24       		.uleb128 0x24
 11937 0015 00       		.byte	0
 11938 0016 0B       		.uleb128 0xb
 11939 0017 0B       		.uleb128 0xb
 11940 0018 3E       		.uleb128 0x3e
 11941 0019 0B       		.uleb128 0xb
 11942 001a 03       		.uleb128 0x3
 11943 001b 0E       		.uleb128 0xe
 11944 001c 00       		.byte	0
 11945 001d 00       		.byte	0
 11946 001e 03       		.uleb128 0x3
 11947 001f 16       		.uleb128 0x16
 11948 0020 00       		.byte	0
 11949 0021 03       		.uleb128 0x3
 11950 0022 0E       		.uleb128 0xe
 11951 0023 3A       		.uleb128 0x3a
 11952 0024 0B       		.uleb128 0xb
 11953 0025 3B       		.uleb128 0x3b
 11954 0026 0B       		.uleb128 0xb
 11955 0027 49       		.uleb128 0x49
 11956 0028 13       		.uleb128 0x13
 11957 0029 00       		.byte	0
 11958 002a 00       		.byte	0
 11959 002b 04       		.uleb128 0x4
 11960 002c 24       		.uleb128 0x24
 11961 002d 00       		.byte	0
 11962 002e 0B       		.uleb128 0xb
 11963 002f 0B       		.uleb128 0xb
 11964 0030 3E       		.uleb128 0x3e
 11965 0031 0B       		.uleb128 0xb
 11966 0032 03       		.uleb128 0x3
 11967 0033 08       		.uleb128 0x8
 11968 0034 00       		.byte	0
 11969 0035 00       		.byte	0
 11970 0036 05       		.uleb128 0x5
 11971 0037 16       		.uleb128 0x16
 11972 0038 00       		.byte	0
 11973 0039 03       		.uleb128 0x3
 11974 003a 0E       		.uleb128 0xe
 11975 003b 3A       		.uleb128 0x3a
 11976 003c 0B       		.uleb128 0xb
 11977 003d 3B       		.uleb128 0x3b
 11978 003e 05       		.uleb128 0x5
 11979 003f 49       		.uleb128 0x49
 11980 0040 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 254


 11981 0041 00       		.byte	0
 11982 0042 00       		.byte	0
 11983 0043 06       		.uleb128 0x6
 11984 0044 35       		.uleb128 0x35
 11985 0045 00       		.byte	0
 11986 0046 49       		.uleb128 0x49
 11987 0047 13       		.uleb128 0x13
 11988 0048 00       		.byte	0
 11989 0049 00       		.byte	0
 11990 004a 07       		.uleb128 0x7
 11991 004b 01       		.uleb128 0x1
 11992 004c 01       		.byte	0x1
 11993 004d 49       		.uleb128 0x49
 11994 004e 13       		.uleb128 0x13
 11995 004f 01       		.uleb128 0x1
 11996 0050 13       		.uleb128 0x13
 11997 0051 00       		.byte	0
 11998 0052 00       		.byte	0
 11999 0053 08       		.uleb128 0x8
 12000 0054 21       		.uleb128 0x21
 12001 0055 00       		.byte	0
 12002 0056 49       		.uleb128 0x49
 12003 0057 13       		.uleb128 0x13
 12004 0058 2F       		.uleb128 0x2f
 12005 0059 0B       		.uleb128 0xb
 12006 005a 00       		.byte	0
 12007 005b 00       		.byte	0
 12008 005c 09       		.uleb128 0x9
 12009 005d 13       		.uleb128 0x13
 12010 005e 01       		.byte	0x1
 12011 005f 0B       		.uleb128 0xb
 12012 0060 0B       		.uleb128 0xb
 12013 0061 3A       		.uleb128 0x3a
 12014 0062 0B       		.uleb128 0xb
 12015 0063 3B       		.uleb128 0x3b
 12016 0064 05       		.uleb128 0x5
 12017 0065 01       		.uleb128 0x1
 12018 0066 13       		.uleb128 0x13
 12019 0067 00       		.byte	0
 12020 0068 00       		.byte	0
 12021 0069 0A       		.uleb128 0xa
 12022 006a 0D       		.uleb128 0xd
 12023 006b 00       		.byte	0
 12024 006c 03       		.uleb128 0x3
 12025 006d 0E       		.uleb128 0xe
 12026 006e 3A       		.uleb128 0x3a
 12027 006f 0B       		.uleb128 0xb
 12028 0070 3B       		.uleb128 0x3b
 12029 0071 05       		.uleb128 0x5
 12030 0072 49       		.uleb128 0x49
 12031 0073 13       		.uleb128 0x13
 12032 0074 38       		.uleb128 0x38
 12033 0075 0B       		.uleb128 0xb
 12034 0076 00       		.byte	0
 12035 0077 00       		.byte	0
 12036 0078 0B       		.uleb128 0xb
 12037 0079 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 255


 12038 007a 01       		.byte	0x1
 12039 007b 0B       		.uleb128 0xb
 12040 007c 0B       		.uleb128 0xb
 12041 007d 49       		.uleb128 0x49
 12042 007e 13       		.uleb128 0x13
 12043 007f 3A       		.uleb128 0x3a
 12044 0080 0B       		.uleb128 0xb
 12045 0081 3B       		.uleb128 0x3b
 12046 0082 05       		.uleb128 0x5
 12047 0083 01       		.uleb128 0x1
 12048 0084 13       		.uleb128 0x13
 12049 0085 00       		.byte	0
 12050 0086 00       		.byte	0
 12051 0087 0C       		.uleb128 0xc
 12052 0088 28       		.uleb128 0x28
 12053 0089 00       		.byte	0
 12054 008a 03       		.uleb128 0x3
 12055 008b 0E       		.uleb128 0xe
 12056 008c 1C       		.uleb128 0x1c
 12057 008d 0B       		.uleb128 0xb
 12058 008e 00       		.byte	0
 12059 008f 00       		.byte	0
 12060 0090 0D       		.uleb128 0xd
 12061 0091 04       		.uleb128 0x4
 12062 0092 01       		.byte	0x1
 12063 0093 03       		.uleb128 0x3
 12064 0094 0E       		.uleb128 0xe
 12065 0095 0B       		.uleb128 0xb
 12066 0096 0B       		.uleb128 0xb
 12067 0097 49       		.uleb128 0x49
 12068 0098 13       		.uleb128 0x13
 12069 0099 3A       		.uleb128 0x3a
 12070 009a 0B       		.uleb128 0xb
 12071 009b 3B       		.uleb128 0x3b
 12072 009c 0B       		.uleb128 0xb
 12073 009d 01       		.uleb128 0x1
 12074 009e 13       		.uleb128 0x13
 12075 009f 00       		.byte	0
 12076 00a0 00       		.byte	0
 12077 00a1 0E       		.uleb128 0xe
 12078 00a2 17       		.uleb128 0x17
 12079 00a3 01       		.byte	0x1
 12080 00a4 03       		.uleb128 0x3
 12081 00a5 0E       		.uleb128 0xe
 12082 00a6 0B       		.uleb128 0xb
 12083 00a7 0B       		.uleb128 0xb
 12084 00a8 3A       		.uleb128 0x3a
 12085 00a9 0B       		.uleb128 0xb
 12086 00aa 3B       		.uleb128 0x3b
 12087 00ab 0B       		.uleb128 0xb
 12088 00ac 01       		.uleb128 0x1
 12089 00ad 13       		.uleb128 0x13
 12090 00ae 00       		.byte	0
 12091 00af 00       		.byte	0
 12092 00b0 0F       		.uleb128 0xf
 12093 00b1 0D       		.uleb128 0xd
 12094 00b2 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 256


 12095 00b3 03       		.uleb128 0x3
 12096 00b4 08       		.uleb128 0x8
 12097 00b5 3A       		.uleb128 0x3a
 12098 00b6 0B       		.uleb128 0xb
 12099 00b7 3B       		.uleb128 0x3b
 12100 00b8 0B       		.uleb128 0xb
 12101 00b9 49       		.uleb128 0x49
 12102 00ba 13       		.uleb128 0x13
 12103 00bb 00       		.byte	0
 12104 00bc 00       		.byte	0
 12105 00bd 10       		.uleb128 0x10
 12106 00be 2E       		.uleb128 0x2e
 12107 00bf 01       		.byte	0x1
 12108 00c0 3F       		.uleb128 0x3f
 12109 00c1 19       		.uleb128 0x19
 12110 00c2 03       		.uleb128 0x3
 12111 00c3 0E       		.uleb128 0xe
 12112 00c4 3A       		.uleb128 0x3a
 12113 00c5 0B       		.uleb128 0xb
 12114 00c6 3B       		.uleb128 0x3b
 12115 00c7 0B       		.uleb128 0xb
 12116 00c8 27       		.uleb128 0x27
 12117 00c9 19       		.uleb128 0x19
 12118 00ca 11       		.uleb128 0x11
 12119 00cb 01       		.uleb128 0x1
 12120 00cc 12       		.uleb128 0x12
 12121 00cd 06       		.uleb128 0x6
 12122 00ce 40       		.uleb128 0x40
 12123 00cf 18       		.uleb128 0x18
 12124 00d0 9642     		.uleb128 0x2116
 12125 00d2 19       		.uleb128 0x19
 12126 00d3 01       		.uleb128 0x1
 12127 00d4 13       		.uleb128 0x13
 12128 00d5 00       		.byte	0
 12129 00d6 00       		.byte	0
 12130 00d7 11       		.uleb128 0x11
 12131 00d8 0B       		.uleb128 0xb
 12132 00d9 01       		.byte	0x1
 12133 00da 11       		.uleb128 0x11
 12134 00db 01       		.uleb128 0x1
 12135 00dc 12       		.uleb128 0x12
 12136 00dd 06       		.uleb128 0x6
 12137 00de 00       		.byte	0
 12138 00df 00       		.byte	0
 12139 00e0 12       		.uleb128 0x12
 12140 00e1 34       		.uleb128 0x34
 12141 00e2 00       		.byte	0
 12142 00e3 03       		.uleb128 0x3
 12143 00e4 08       		.uleb128 0x8
 12144 00e5 3A       		.uleb128 0x3a
 12145 00e6 0B       		.uleb128 0xb
 12146 00e7 3B       		.uleb128 0x3b
 12147 00e8 0B       		.uleb128 0xb
 12148 00e9 49       		.uleb128 0x49
 12149 00ea 13       		.uleb128 0x13
 12150 00eb 02       		.uleb128 0x2
 12151 00ec 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 257


 12152 00ed 00       		.byte	0
 12153 00ee 00       		.byte	0
 12154 00ef 13       		.uleb128 0x13
 12155 00f0 2E       		.uleb128 0x2e
 12156 00f1 00       		.byte	0
 12157 00f2 3F       		.uleb128 0x3f
 12158 00f3 19       		.uleb128 0x19
 12159 00f4 03       		.uleb128 0x3
 12160 00f5 0E       		.uleb128 0xe
 12161 00f6 3A       		.uleb128 0x3a
 12162 00f7 0B       		.uleb128 0xb
 12163 00f8 3B       		.uleb128 0x3b
 12164 00f9 0B       		.uleb128 0xb
 12165 00fa 27       		.uleb128 0x27
 12166 00fb 19       		.uleb128 0x19
 12167 00fc 11       		.uleb128 0x11
 12168 00fd 01       		.uleb128 0x1
 12169 00fe 12       		.uleb128 0x12
 12170 00ff 06       		.uleb128 0x6
 12171 0100 40       		.uleb128 0x40
 12172 0101 18       		.uleb128 0x18
 12173 0102 9642     		.uleb128 0x2116
 12174 0104 19       		.uleb128 0x19
 12175 0105 00       		.byte	0
 12176 0106 00       		.byte	0
 12177 0107 14       		.uleb128 0x14
 12178 0108 2E       		.uleb128 0x2e
 12179 0109 00       		.byte	0
 12180 010a 3F       		.uleb128 0x3f
 12181 010b 19       		.uleb128 0x19
 12182 010c 03       		.uleb128 0x3
 12183 010d 0E       		.uleb128 0xe
 12184 010e 3A       		.uleb128 0x3a
 12185 010f 0B       		.uleb128 0xb
 12186 0110 3B       		.uleb128 0x3b
 12187 0111 05       		.uleb128 0x5
 12188 0112 27       		.uleb128 0x27
 12189 0113 19       		.uleb128 0x19
 12190 0114 11       		.uleb128 0x11
 12191 0115 01       		.uleb128 0x1
 12192 0116 12       		.uleb128 0x12
 12193 0117 06       		.uleb128 0x6
 12194 0118 40       		.uleb128 0x40
 12195 0119 18       		.uleb128 0x18
 12196 011a 9642     		.uleb128 0x2116
 12197 011c 19       		.uleb128 0x19
 12198 011d 00       		.byte	0
 12199 011e 00       		.byte	0
 12200 011f 15       		.uleb128 0x15
 12201 0120 2E       		.uleb128 0x2e
 12202 0121 01       		.byte	0x1
 12203 0122 3F       		.uleb128 0x3f
 12204 0123 19       		.uleb128 0x19
 12205 0124 03       		.uleb128 0x3
 12206 0125 0E       		.uleb128 0xe
 12207 0126 3A       		.uleb128 0x3a
 12208 0127 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 258


 12209 0128 3B       		.uleb128 0x3b
 12210 0129 05       		.uleb128 0x5
 12211 012a 27       		.uleb128 0x27
 12212 012b 19       		.uleb128 0x19
 12213 012c 49       		.uleb128 0x49
 12214 012d 13       		.uleb128 0x13
 12215 012e 11       		.uleb128 0x11
 12216 012f 01       		.uleb128 0x1
 12217 0130 12       		.uleb128 0x12
 12218 0131 06       		.uleb128 0x6
 12219 0132 40       		.uleb128 0x40
 12220 0133 18       		.uleb128 0x18
 12221 0134 9642     		.uleb128 0x2116
 12222 0136 19       		.uleb128 0x19
 12223 0137 01       		.uleb128 0x1
 12224 0138 13       		.uleb128 0x13
 12225 0139 00       		.byte	0
 12226 013a 00       		.byte	0
 12227 013b 16       		.uleb128 0x16
 12228 013c 05       		.uleb128 0x5
 12229 013d 00       		.byte	0
 12230 013e 03       		.uleb128 0x3
 12231 013f 08       		.uleb128 0x8
 12232 0140 3A       		.uleb128 0x3a
 12233 0141 0B       		.uleb128 0xb
 12234 0142 3B       		.uleb128 0x3b
 12235 0143 05       		.uleb128 0x5
 12236 0144 49       		.uleb128 0x49
 12237 0145 13       		.uleb128 0x13
 12238 0146 02       		.uleb128 0x2
 12239 0147 18       		.uleb128 0x18
 12240 0148 00       		.byte	0
 12241 0149 00       		.byte	0
 12242 014a 17       		.uleb128 0x17
 12243 014b 34       		.uleb128 0x34
 12244 014c 00       		.byte	0
 12245 014d 03       		.uleb128 0x3
 12246 014e 0E       		.uleb128 0xe
 12247 014f 3A       		.uleb128 0x3a
 12248 0150 0B       		.uleb128 0xb
 12249 0151 3B       		.uleb128 0x3b
 12250 0152 05       		.uleb128 0x5
 12251 0153 49       		.uleb128 0x49
 12252 0154 13       		.uleb128 0x13
 12253 0155 02       		.uleb128 0x2
 12254 0156 18       		.uleb128 0x18
 12255 0157 00       		.byte	0
 12256 0158 00       		.byte	0
 12257 0159 18       		.uleb128 0x18
 12258 015a 05       		.uleb128 0x5
 12259 015b 00       		.byte	0
 12260 015c 03       		.uleb128 0x3
 12261 015d 0E       		.uleb128 0xe
 12262 015e 3A       		.uleb128 0x3a
 12263 015f 0B       		.uleb128 0xb
 12264 0160 3B       		.uleb128 0x3b
 12265 0161 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 259


 12266 0162 49       		.uleb128 0x49
 12267 0163 13       		.uleb128 0x13
 12268 0164 02       		.uleb128 0x2
 12269 0165 18       		.uleb128 0x18
 12270 0166 00       		.byte	0
 12271 0167 00       		.byte	0
 12272 0168 19       		.uleb128 0x19
 12273 0169 34       		.uleb128 0x34
 12274 016a 00       		.byte	0
 12275 016b 03       		.uleb128 0x3
 12276 016c 08       		.uleb128 0x8
 12277 016d 3A       		.uleb128 0x3a
 12278 016e 0B       		.uleb128 0xb
 12279 016f 3B       		.uleb128 0x3b
 12280 0170 05       		.uleb128 0x5
 12281 0171 49       		.uleb128 0x49
 12282 0172 13       		.uleb128 0x13
 12283 0173 02       		.uleb128 0x2
 12284 0174 18       		.uleb128 0x18
 12285 0175 00       		.byte	0
 12286 0176 00       		.byte	0
 12287 0177 1A       		.uleb128 0x1a
 12288 0178 2E       		.uleb128 0x2e
 12289 0179 01       		.byte	0x1
 12290 017a 3F       		.uleb128 0x3f
 12291 017b 19       		.uleb128 0x19
 12292 017c 03       		.uleb128 0x3
 12293 017d 08       		.uleb128 0x8
 12294 017e 3A       		.uleb128 0x3a
 12295 017f 0B       		.uleb128 0xb
 12296 0180 3B       		.uleb128 0x3b
 12297 0181 05       		.uleb128 0x5
 12298 0182 27       		.uleb128 0x27
 12299 0183 19       		.uleb128 0x19
 12300 0184 49       		.uleb128 0x49
 12301 0185 13       		.uleb128 0x13
 12302 0186 11       		.uleb128 0x11
 12303 0187 01       		.uleb128 0x1
 12304 0188 12       		.uleb128 0x12
 12305 0189 06       		.uleb128 0x6
 12306 018a 40       		.uleb128 0x40
 12307 018b 18       		.uleb128 0x18
 12308 018c 9642     		.uleb128 0x2116
 12309 018e 19       		.uleb128 0x19
 12310 018f 01       		.uleb128 0x1
 12311 0190 13       		.uleb128 0x13
 12312 0191 00       		.byte	0
 12313 0192 00       		.byte	0
 12314 0193 1B       		.uleb128 0x1b
 12315 0194 2E       		.uleb128 0x2e
 12316 0195 00       		.byte	0
 12317 0196 3F       		.uleb128 0x3f
 12318 0197 19       		.uleb128 0x19
 12319 0198 03       		.uleb128 0x3
 12320 0199 0E       		.uleb128 0xe
 12321 019a 3A       		.uleb128 0x3a
 12322 019b 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 260


 12323 019c 3B       		.uleb128 0x3b
 12324 019d 05       		.uleb128 0x5
 12325 019e 11       		.uleb128 0x11
 12326 019f 01       		.uleb128 0x1
 12327 01a0 12       		.uleb128 0x12
 12328 01a1 06       		.uleb128 0x6
 12329 01a2 40       		.uleb128 0x40
 12330 01a3 18       		.uleb128 0x18
 12331 01a4 9742     		.uleb128 0x2117
 12332 01a6 19       		.uleb128 0x19
 12333 01a7 00       		.byte	0
 12334 01a8 00       		.byte	0
 12335 01a9 1C       		.uleb128 0x1c
 12336 01aa 2E       		.uleb128 0x2e
 12337 01ab 01       		.byte	0x1
 12338 01ac 3F       		.uleb128 0x3f
 12339 01ad 19       		.uleb128 0x19
 12340 01ae 03       		.uleb128 0x3
 12341 01af 0E       		.uleb128 0xe
 12342 01b0 3A       		.uleb128 0x3a
 12343 01b1 0B       		.uleb128 0xb
 12344 01b2 3B       		.uleb128 0x3b
 12345 01b3 05       		.uleb128 0x5
 12346 01b4 11       		.uleb128 0x11
 12347 01b5 01       		.uleb128 0x1
 12348 01b6 12       		.uleb128 0x12
 12349 01b7 06       		.uleb128 0x6
 12350 01b8 40       		.uleb128 0x40
 12351 01b9 18       		.uleb128 0x18
 12352 01ba 9642     		.uleb128 0x2116
 12353 01bc 19       		.uleb128 0x19
 12354 01bd 01       		.uleb128 0x1
 12355 01be 13       		.uleb128 0x13
 12356 01bf 00       		.byte	0
 12357 01c0 00       		.byte	0
 12358 01c1 1D       		.uleb128 0x1d
 12359 01c2 0B       		.uleb128 0xb
 12360 01c3 01       		.byte	0x1
 12361 01c4 11       		.uleb128 0x11
 12362 01c5 01       		.uleb128 0x1
 12363 01c6 12       		.uleb128 0x12
 12364 01c7 06       		.uleb128 0x6
 12365 01c8 01       		.uleb128 0x1
 12366 01c9 13       		.uleb128 0x13
 12367 01ca 00       		.byte	0
 12368 01cb 00       		.byte	0
 12369 01cc 1E       		.uleb128 0x1e
 12370 01cd 2E       		.uleb128 0x2e
 12371 01ce 00       		.byte	0
 12372 01cf 3F       		.uleb128 0x3f
 12373 01d0 19       		.uleb128 0x19
 12374 01d1 03       		.uleb128 0x3
 12375 01d2 0E       		.uleb128 0xe
 12376 01d3 3A       		.uleb128 0x3a
 12377 01d4 0B       		.uleb128 0xb
 12378 01d5 3B       		.uleb128 0x3b
 12379 01d6 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 261


 12380 01d7 11       		.uleb128 0x11
 12381 01d8 01       		.uleb128 0x1
 12382 01d9 12       		.uleb128 0x12
 12383 01da 06       		.uleb128 0x6
 12384 01db 40       		.uleb128 0x40
 12385 01dc 18       		.uleb128 0x18
 12386 01dd 9642     		.uleb128 0x2116
 12387 01df 19       		.uleb128 0x19
 12388 01e0 00       		.byte	0
 12389 01e1 00       		.byte	0
 12390 01e2 1F       		.uleb128 0x1f
 12391 01e3 2E       		.uleb128 0x2e
 12392 01e4 01       		.byte	0x1
 12393 01e5 3F       		.uleb128 0x3f
 12394 01e6 19       		.uleb128 0x19
 12395 01e7 03       		.uleb128 0x3
 12396 01e8 0E       		.uleb128 0xe
 12397 01e9 3A       		.uleb128 0x3a
 12398 01ea 0B       		.uleb128 0xb
 12399 01eb 3B       		.uleb128 0x3b
 12400 01ec 05       		.uleb128 0x5
 12401 01ed 27       		.uleb128 0x27
 12402 01ee 19       		.uleb128 0x19
 12403 01ef 11       		.uleb128 0x11
 12404 01f0 01       		.uleb128 0x1
 12405 01f1 12       		.uleb128 0x12
 12406 01f2 06       		.uleb128 0x6
 12407 01f3 40       		.uleb128 0x40
 12408 01f4 18       		.uleb128 0x18
 12409 01f5 9642     		.uleb128 0x2116
 12410 01f7 19       		.uleb128 0x19
 12411 01f8 01       		.uleb128 0x1
 12412 01f9 13       		.uleb128 0x13
 12413 01fa 00       		.byte	0
 12414 01fb 00       		.byte	0
 12415 01fc 20       		.uleb128 0x20
 12416 01fd 0F       		.uleb128 0xf
 12417 01fe 00       		.byte	0
 12418 01ff 0B       		.uleb128 0xb
 12419 0200 0B       		.uleb128 0xb
 12420 0201 49       		.uleb128 0x49
 12421 0202 13       		.uleb128 0x13
 12422 0203 00       		.byte	0
 12423 0204 00       		.byte	0
 12424 0205 21       		.uleb128 0x21
 12425 0206 34       		.uleb128 0x34
 12426 0207 00       		.byte	0
 12427 0208 03       		.uleb128 0x3
 12428 0209 0E       		.uleb128 0xe
 12429 020a 3A       		.uleb128 0x3a
 12430 020b 0B       		.uleb128 0xb
 12431 020c 3B       		.uleb128 0x3b
 12432 020d 0B       		.uleb128 0xb
 12433 020e 49       		.uleb128 0x49
 12434 020f 13       		.uleb128 0x13
 12435 0210 02       		.uleb128 0x2
 12436 0211 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 262


 12437 0212 00       		.byte	0
 12438 0213 00       		.byte	0
 12439 0214 22       		.uleb128 0x22
 12440 0215 34       		.uleb128 0x34
 12441 0216 00       		.byte	0
 12442 0217 03       		.uleb128 0x3
 12443 0218 0E       		.uleb128 0xe
 12444 0219 3A       		.uleb128 0x3a
 12445 021a 0B       		.uleb128 0xb
 12446 021b 3B       		.uleb128 0x3b
 12447 021c 0B       		.uleb128 0xb
 12448 021d 49       		.uleb128 0x49
 12449 021e 13       		.uleb128 0x13
 12450 021f 3F       		.uleb128 0x3f
 12451 0220 19       		.uleb128 0x19
 12452 0221 3C       		.uleb128 0x3c
 12453 0222 19       		.uleb128 0x19
 12454 0223 00       		.byte	0
 12455 0224 00       		.byte	0
 12456 0225 23       		.uleb128 0x23
 12457 0226 21       		.uleb128 0x21
 12458 0227 00       		.byte	0
 12459 0228 49       		.uleb128 0x49
 12460 0229 13       		.uleb128 0x13
 12461 022a 2F       		.uleb128 0x2f
 12462 022b 05       		.uleb128 0x5
 12463 022c 00       		.byte	0
 12464 022d 00       		.byte	0
 12465 022e 24       		.uleb128 0x24
 12466 022f 26       		.uleb128 0x26
 12467 0230 00       		.byte	0
 12468 0231 49       		.uleb128 0x49
 12469 0232 13       		.uleb128 0x13
 12470 0233 00       		.byte	0
 12471 0234 00       		.byte	0
 12472 0235 25       		.uleb128 0x25
 12473 0236 34       		.uleb128 0x34
 12474 0237 00       		.byte	0
 12475 0238 03       		.uleb128 0x3
 12476 0239 0E       		.uleb128 0xe
 12477 023a 3A       		.uleb128 0x3a
 12478 023b 0B       		.uleb128 0xb
 12479 023c 3B       		.uleb128 0x3b
 12480 023d 0B       		.uleb128 0xb
 12481 023e 49       		.uleb128 0x49
 12482 023f 13       		.uleb128 0x13
 12483 0240 3F       		.uleb128 0x3f
 12484 0241 19       		.uleb128 0x19
 12485 0242 02       		.uleb128 0x2
 12486 0243 18       		.uleb128 0x18
 12487 0244 00       		.byte	0
 12488 0245 00       		.byte	0
 12489 0246 26       		.uleb128 0x26
 12490 0247 34       		.uleb128 0x34
 12491 0248 00       		.byte	0
 12492 0249 03       		.uleb128 0x3
 12493 024a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 263


 12494 024b 3A       		.uleb128 0x3a
 12495 024c 0B       		.uleb128 0xb
 12496 024d 3B       		.uleb128 0x3b
 12497 024e 05       		.uleb128 0x5
 12498 024f 49       		.uleb128 0x49
 12499 0250 13       		.uleb128 0x13
 12500 0251 3F       		.uleb128 0x3f
 12501 0252 19       		.uleb128 0x19
 12502 0253 3C       		.uleb128 0x3c
 12503 0254 19       		.uleb128 0x19
 12504 0255 00       		.byte	0
 12505 0256 00       		.byte	0
 12506 0257 27       		.uleb128 0x27
 12507 0258 34       		.uleb128 0x34
 12508 0259 00       		.byte	0
 12509 025a 03       		.uleb128 0x3
 12510 025b 0E       		.uleb128 0xe
 12511 025c 3A       		.uleb128 0x3a
 12512 025d 0B       		.uleb128 0xb
 12513 025e 3B       		.uleb128 0x3b
 12514 025f 05       		.uleb128 0x5
 12515 0260 49       		.uleb128 0x49
 12516 0261 13       		.uleb128 0x13
 12517 0262 3F       		.uleb128 0x3f
 12518 0263 19       		.uleb128 0x19
 12519 0264 02       		.uleb128 0x2
 12520 0265 18       		.uleb128 0x18
 12521 0266 00       		.byte	0
 12522 0267 00       		.byte	0
 12523 0268 28       		.uleb128 0x28
 12524 0269 34       		.uleb128 0x34
 12525 026a 00       		.byte	0
 12526 026b 03       		.uleb128 0x3
 12527 026c 08       		.uleb128 0x8
 12528 026d 3A       		.uleb128 0x3a
 12529 026e 0B       		.uleb128 0xb
 12530 026f 3B       		.uleb128 0x3b
 12531 0270 0B       		.uleb128 0xb
 12532 0271 49       		.uleb128 0x49
 12533 0272 13       		.uleb128 0x13
 12534 0273 3F       		.uleb128 0x3f
 12535 0274 19       		.uleb128 0x19
 12536 0275 02       		.uleb128 0x2
 12537 0276 18       		.uleb128 0x18
 12538 0277 00       		.byte	0
 12539 0278 00       		.byte	0
 12540 0279 00       		.byte	0
 12541              		.section	.debug_aranges,"",%progbits
 12542 0000 0C010000 		.4byte	0x10c
 12543 0004 0200     		.2byte	0x2
 12544 0006 00000000 		.4byte	.Ldebug_info0
 12545 000a 04       		.byte	0x4
 12546 000b 00       		.byte	0
 12547 000c 0000     		.2byte	0
 12548 000e 0000     		.2byte	0
 12549 0010 00000000 		.4byte	.LFB64
 12550 0014 74010000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 264


 12551 0018 00000000 		.4byte	.LFB65
 12552 001c 9C000000 		.4byte	.LFE65-.LFB65
 12553 0020 00000000 		.4byte	.LFB66
 12554 0024 14000000 		.4byte	.LFE66-.LFB66
 12555 0028 00000000 		.4byte	.LFB67
 12556 002c 7C000000 		.4byte	.LFE67-.LFB67
 12557 0030 00000000 		.4byte	.LFB68
 12558 0034 58000000 		.4byte	.LFE68-.LFB68
 12559 0038 00000000 		.4byte	.LFB69
 12560 003c 68000000 		.4byte	.LFE69-.LFB69
 12561 0040 00000000 		.4byte	.LFB70
 12562 0044 4C000000 		.4byte	.LFE70-.LFB70
 12563 0048 00000000 		.4byte	.LFB71
 12564 004c 46000000 		.4byte	.LFE71-.LFB71
 12565 0050 00000000 		.4byte	.LFB72
 12566 0054 56000000 		.4byte	.LFE72-.LFB72
 12567 0058 00000000 		.4byte	.LFB73
 12568 005c 0C000000 		.4byte	.LFE73-.LFB73
 12569 0060 00000000 		.4byte	.LFB74
 12570 0064 0C000000 		.4byte	.LFE74-.LFB74
 12571 0068 00000000 		.4byte	.LFB75
 12572 006c 0C010000 		.4byte	.LFE75-.LFB75
 12573 0070 00000000 		.4byte	.LFB76
 12574 0074 241D0000 		.4byte	.LFE76-.LFB76
 12575 0078 00000000 		.4byte	.LFB77
 12576 007c 70000000 		.4byte	.LFE77-.LFB77
 12577 0080 00000000 		.4byte	.LFB78
 12578 0084 70010000 		.4byte	.LFE78-.LFB78
 12579 0088 00000000 		.4byte	.LFB79
 12580 008c E0000000 		.4byte	.LFE79-.LFB79
 12581 0090 00000000 		.4byte	.LFB80
 12582 0094 B4000000 		.4byte	.LFE80-.LFB80
 12583 0098 00000000 		.4byte	.LFB81
 12584 009c 30000000 		.4byte	.LFE81-.LFB81
 12585 00a0 00000000 		.4byte	.LFB82
 12586 00a4 7C000000 		.4byte	.LFE82-.LFB82
 12587 00a8 00000000 		.4byte	.LFB83
 12588 00ac 54000000 		.4byte	.LFE83-.LFB83
 12589 00b0 00000000 		.4byte	.LFB84
 12590 00b4 C4000000 		.4byte	.LFE84-.LFB84
 12591 00b8 00000000 		.4byte	.LFB85
 12592 00bc 98000000 		.4byte	.LFE85-.LFB85
 12593 00c0 00000000 		.4byte	.LFB86
 12594 00c4 D4000000 		.4byte	.LFE86-.LFB86
 12595 00c8 00000000 		.4byte	.LFB87
 12596 00cc 1C000000 		.4byte	.LFE87-.LFB87
 12597 00d0 00000000 		.4byte	.LFB88
 12598 00d4 68000000 		.4byte	.LFE88-.LFB88
 12599 00d8 00000000 		.4byte	.LFB89
 12600 00dc 68000000 		.4byte	.LFE89-.LFB89
 12601 00e0 00000000 		.4byte	.LFB90
 12602 00e4 68000000 		.4byte	.LFE90-.LFB90
 12603 00e8 00000000 		.4byte	.LFB91
 12604 00ec 6C000000 		.4byte	.LFE91-.LFB91
 12605 00f0 00000000 		.4byte	.LFB92
 12606 00f4 64000000 		.4byte	.LFE92-.LFB92
 12607 00f8 00000000 		.4byte	.LFB93
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 265


 12608 00fc BC080000 		.4byte	.LFE93-.LFB93
 12609 0100 00000000 		.4byte	.LFB94
 12610 0104 3C010000 		.4byte	.LFE94-.LFB94
 12611 0108 00000000 		.4byte	0
 12612 010c 00000000 		.4byte	0
 12613              		.section	.debug_ranges,"",%progbits
 12614              	.Ldebug_ranges0:
 12615 0000 00000000 		.4byte	.LFB64
 12616 0004 74010000 		.4byte	.LFE64
 12617 0008 00000000 		.4byte	.LFB65
 12618 000c 9C000000 		.4byte	.LFE65
 12619 0010 00000000 		.4byte	.LFB66
 12620 0014 14000000 		.4byte	.LFE66
 12621 0018 00000000 		.4byte	.LFB67
 12622 001c 7C000000 		.4byte	.LFE67
 12623 0020 00000000 		.4byte	.LFB68
 12624 0024 58000000 		.4byte	.LFE68
 12625 0028 00000000 		.4byte	.LFB69
 12626 002c 68000000 		.4byte	.LFE69
 12627 0030 00000000 		.4byte	.LFB70
 12628 0034 4C000000 		.4byte	.LFE70
 12629 0038 00000000 		.4byte	.LFB71
 12630 003c 46000000 		.4byte	.LFE71
 12631 0040 00000000 		.4byte	.LFB72
 12632 0044 56000000 		.4byte	.LFE72
 12633 0048 00000000 		.4byte	.LFB73
 12634 004c 0C000000 		.4byte	.LFE73
 12635 0050 00000000 		.4byte	.LFB74
 12636 0054 0C000000 		.4byte	.LFE74
 12637 0058 00000000 		.4byte	.LFB75
 12638 005c 0C010000 		.4byte	.LFE75
 12639 0060 00000000 		.4byte	.LFB76
 12640 0064 241D0000 		.4byte	.LFE76
 12641 0068 00000000 		.4byte	.LFB77
 12642 006c 70000000 		.4byte	.LFE77
 12643 0070 00000000 		.4byte	.LFB78
 12644 0074 70010000 		.4byte	.LFE78
 12645 0078 00000000 		.4byte	.LFB79
 12646 007c E0000000 		.4byte	.LFE79
 12647 0080 00000000 		.4byte	.LFB80
 12648 0084 B4000000 		.4byte	.LFE80
 12649 0088 00000000 		.4byte	.LFB81
 12650 008c 30000000 		.4byte	.LFE81
 12651 0090 00000000 		.4byte	.LFB82
 12652 0094 7C000000 		.4byte	.LFE82
 12653 0098 00000000 		.4byte	.LFB83
 12654 009c 54000000 		.4byte	.LFE83
 12655 00a0 00000000 		.4byte	.LFB84
 12656 00a4 C4000000 		.4byte	.LFE84
 12657 00a8 00000000 		.4byte	.LFB85
 12658 00ac 98000000 		.4byte	.LFE85
 12659 00b0 00000000 		.4byte	.LFB86
 12660 00b4 D4000000 		.4byte	.LFE86
 12661 00b8 00000000 		.4byte	.LFB87
 12662 00bc 1C000000 		.4byte	.LFE87
 12663 00c0 00000000 		.4byte	.LFB88
 12664 00c4 68000000 		.4byte	.LFE88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 266


 12665 00c8 00000000 		.4byte	.LFB89
 12666 00cc 68000000 		.4byte	.LFE89
 12667 00d0 00000000 		.4byte	.LFB90
 12668 00d4 68000000 		.4byte	.LFE90
 12669 00d8 00000000 		.4byte	.LFB91
 12670 00dc 6C000000 		.4byte	.LFE91
 12671 00e0 00000000 		.4byte	.LFB92
 12672 00e4 64000000 		.4byte	.LFE92
 12673 00e8 00000000 		.4byte	.LFB93
 12674 00ec BC080000 		.4byte	.LFE93
 12675 00f0 00000000 		.4byte	.LFB94
 12676 00f4 3C010000 		.4byte	.LFE94
 12677 00f8 00000000 		.4byte	0
 12678 00fc 00000000 		.4byte	0
 12679              		.section	.debug_line,"",%progbits
 12680              	.Ldebug_line0:
 12681 0000 2B0B0000 		.section	.debug_str,"MS",%progbits,1
 12681      02009B01 
 12681      00000201 
 12681      FB0E0D00 
 12681      01010101 
 12682              	.LASF160:
 12683 0000 70726573 		.ascii	"presetArraySection\000"
 12683      65744172 
 12683      72617953 
 12683      65637469 
 12683      6F6E00
 12684              	.LASF156:
 12685 0013 70726573 		.ascii	"presetArray\000"
 12685      65744172 
 12685      72617900 
 12686              	.LASF299:
 12687 001f 66697273 		.ascii	"firstSysex\000"
 12687      74537973 
 12687      657800
 12688              	.LASF28:
 12689 002a 73697A65 		.ascii	"sizetype\000"
 12689      74797065 
 12689      00
 12690              	.LASF165:
 12691 0033 73656E64 		.ascii	"sendingMessage\000"
 12691      696E674D 
 12691      65737361 
 12691      676500
 12692              	.LASF249:
 12693 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 12693      5F70726F 
 12693      63657373 
 12693      65645F76 
 12693      6F6C756D 
 12694              	.LASF86:
 12695 005d 74656D70 		.ascii	"tempangle\000"
 12695      616E676C 
 12695      6500
 12696              	.LASF220:
 12697 0067 6E657744 		.ascii	"newDataFlag2\000"
 12697      61746146 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 267


 12697      6C616732 
 12697      00
 12698              	.LASF256:
 12699 0074 6D616372 		.ascii	"macroNamesArray\000"
 12699      6F4E616D 
 12699      65734172 
 12699      72617900 
 12700              	.LASF38:
 12701 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 12701      4D5F4545 
 12701      50524F4D 
 12701      5F535543 
 12701      43455353 
 12702              	.LASF17:
 12703 0099 696E7433 		.ascii	"int32_t\000"
 12703      325F7400 
 12704              	.LASF147:
 12705 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 12705      4550524F 
 12705      4D5F636F 
 12705      6E746578 
 12705      7400
 12706              	.LASF47:
 12707 00b3 54686972 		.ascii	"ThirdLine\000"
 12707      644C696E 
 12707      6500
 12708              	.LASF111:
 12709 00bd 6E6F7465 		.ascii	"noteEvent\000"
 12709      4576656E 
 12709      7400
 12710              	.LASF229:
 12711 00c7 53504932 		.ascii	"SPI2errorflag\000"
 12711      6572726F 
 12711      72666C61 
 12711      6700
 12712              	.LASF21:
 12713 00d5 75696E74 		.ascii	"uint32\000"
 12713      333200
 12714              	.LASF95:
 12715 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 12715      684D6163 
 12715      726F546F 
 12715      53746F72 
 12715      654E616D 
 12716              	.LASF124:
 12717 00f2 43437661 		.ascii	"CCval\000"
 12717      6C00
 12718              	.LASF171:
 12719 00f8 6E756D4D 		.ascii	"numMappings\000"
 12719      61707069 
 12719      6E677300 
 12720              	.LASF151:
 12721 0104 49324362 		.ascii	"I2Cbuff1\000"
 12721      75666631 
 12721      00
 12722              	.LASF238:
 12723 010d 49324362 		.ascii	"I2Cbuff2\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 268


 12723      75666632 
 12723      00
 12724              	.LASF240:
 12725 0116 6D75785F 		.ascii	"mux_states\000"
 12725      73746174 
 12725      657300
 12726              	.LASF137:
 12727 0121 74656D70 		.ascii	"tempLow\000"
 12727      4C6F7700 
 12728              	.LASF198:
 12729 0129 6E65636B 		.ascii	"necks\000"
 12729      7300
 12730              	.LASF189:
 12731 012f 6F637461 		.ascii	"octave\000"
 12731      766500
 12732              	.LASF49:
 12733 0136 4E696C4C 		.ascii	"NilLine\000"
 12733      696E6500 
 12734              	.LASF43:
 12735 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 12735      6E5F656D 
 12735      5F656570 
 12735      726F6D5F 
 12735      73746174 
 12736              	.LASF289:
 12737 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 12737      6F4F4C45 
 12737      44576169 
 12737      74696E67 
 12737      546F5365 
 12738              	.LASF243:
 12739 016e 70656461 		.ascii	"pedals_high\000"
 12739      6C735F68 
 12739      69676800 
 12740              	.LASF101:
 12741 017a 6E627974 		.ascii	"nbytes\000"
 12741      657300
 12742              	.LASF276:
 12743 0181 636F7065 		.ascii	"copedentNamesArray\000"
 12743      64656E74 
 12743      4E616D65 
 12743      73417272 
 12743      617900
 12744              	.LASF169:
 12745 0194 76616C73 		.ascii	"valsCount\000"
 12745      436F756E 
 12745      7400
 12746              	.LASF187:
 12747 019e 74656D70 		.ascii	"temper\000"
 12747      657200
 12748              	.LASF123:
 12749 01a5 43436E75 		.ascii	"CCnum\000"
 12749      6D00
 12750              	.LASF40:
 12751 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 12751      4D5F4545 
 12751      50524F4D 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 269


 12751      5F424144 
 12751      5F434845 
 12752              	.LASF36:
 12753 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 12753      466C6173 
 12753      68537461 
 12753      72744164 
 12753      647200
 12754              	.LASF30:
 12755 01d8 6E756D62 		.ascii	"numberOfRows\000"
 12755      65724F66 
 12755      526F7773 
 12755      00
 12756              	.LASF131:
 12757 01e5 696E7456 		.ascii	"intVal\000"
 12757      616C00
 12758              	.LASF70:
 12759 01ec 69737461 		.ascii	"istart\000"
 12759      727400
 12760              	.LASF76:
 12761 01f3 70656461 		.ascii	"pedalDiff\000"
 12761      6C446966 
 12761      6600
 12762              	.LASF128:
 12763 01fd 74686556 		.ascii	"theVal\000"
 12763      616C00
 12764              	.LASF34:
 12765 0204 72656475 		.ascii	"redundantCopy\000"
 12765      6E64616E 
 12765      74436F70 
 12765      7900
 12766              	.LASF2:
 12767 0212 5F5F7569 		.ascii	"__uint8_t\000"
 12767      6E74385F 
 12767      7400
 12768              	.LASF67:
 12769 021c 616C7068 		.ascii	"alpha\000"
 12769      6100
 12770              	.LASF57:
 12771 0222 70726573 		.ascii	"presetEnd\000"
 12771      6574456E 
 12771      6400
 12772              	.LASF237:
 12773 022c 62617243 		.ascii	"barCount\000"
 12773      6F756E74 
 12773      00
 12774              	.LASF159:
 12775 0235 73656E64 		.ascii	"sendMessageEnd\000"
 12775      4D657373 
 12775      61676545 
 12775      6E6400
 12776              	.LASF254:
 12777 0244 70726573 		.ascii	"presetNumberToLoad\000"
 12777      65744E75 
 12777      6D626572 
 12777      546F4C6F 
 12777      616400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 270


 12778              	.LASF264:
 12779 0257 766F6963 		.ascii	"voice\000"
 12779      6500
 12780              	.LASF209:
 12781 025d 73747269 		.ascii	"strings\000"
 12781      6E677300 
 12782              	.LASF8:
 12783 0265 6C6F6E67 		.ascii	"long int\000"
 12783      20696E74 
 12783      00
 12784              	.LASF167:
 12785 026e 63757272 		.ascii	"currentFloat\000"
 12785      656E7446 
 12785      6C6F6174 
 12785      00
 12786              	.LASF255:
 12787 027b 70726573 		.ascii	"presetLoadedResponse\000"
 12787      65744C6F 
 12787      61646564 
 12787      52657370 
 12787      6F6E7365 
 12788              	.LASF157:
 12789 0290 70726573 		.ascii	"presetNumberToWrite\000"
 12789      65744E75 
 12789      6D626572 
 12789      546F5772 
 12789      69746500 
 12790              	.LASF94:
 12791 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 12791      68507265 
 12791      73657454 
 12791      6F53746F 
 12791      72654E61 
 12792              	.LASF253:
 12793 02bb 70726573 		.ascii	"presetNamesArray\000"
 12793      65744E61 
 12793      6D657341 
 12793      72726179 
 12793      00
 12794              	.LASF77:
 12795 02cc 6D61696E 		.ascii	"main\000"
 12795      00
 12796              	.LASF277:
 12797 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 12797      53747269 
 12797      6E675069 
 12797      74636842 
 12797      656E6400 
 12798              	.LASF118:
 12799 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 12799      6E6F7465 
 12799      4E756D00 
 12800              	.LASF126:
 12801 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 12801      4D494449 
 12801      416C6C4E 
 12801      6F746573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 271


 12801      4F666600 
 12802              	.LASF46:
 12803 0305 5365636F 		.ascii	"SecondLine\000"
 12803      6E644C69 
 12803      6E6500
 12804              	.LASF257:
 12805 0310 66726574 		.ascii	"fretScaling\000"
 12805      5363616C 
 12805      696E6700 
 12806              	.LASF166:
 12807 031c 73656E64 		.ascii	"sendKnobs\000"
 12807      4B6E6F62 
 12807      7300
 12808              	.LASF51:
 12809 0326 70726573 		.ascii	"presetArraySectionState\000"
 12809      65744172 
 12809      72617953 
 12809      65637469 
 12809      6F6E5374 
 12810              	.LASF231:
 12811 033e 6B6E6F62 		.ascii	"knobs\000"
 12811      7300
 12812              	.LASF153:
 12813 0344 73797365 		.ascii	"sysexPointer\000"
 12813      78506F69 
 12813      6E746572 
 12813      00
 12814              	.LASF68:
 12815 0351 6F6D416C 		.ascii	"omAlpha\000"
 12815      70686100 
 12816              	.LASF82:
 12817 0359 73747269 		.ascii	"stringStartLoc\000"
 12817      6E675374 
 12817      6172744C 
 12817      6F6300
 12818              	.LASF0:
 12819 0368 7369676E 		.ascii	"signed char\000"
 12819      65642063 
 12819      68617200 
 12820              	.LASF14:
 12821 0374 75696E74 		.ascii	"uint8_t\000"
 12821      385F7400 
 12822              	.LASF29:
 12823 037c 776C456E 		.ascii	"wlEndAddr\000"
 12823      64416464 
 12823      7200
 12824              	.LASF138:
 12825 0386 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 12825      63616C6C 
 12825      6261636B 
 12825      4C6F6361 
 12825      6C4D6964 
 12826              	.LASF110:
 12827 03a1 73706973 		.ascii	"spis_1_ss\000"
 12827      5F315F73 
 12827      7300
 12828              	.LASF41:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 272


 12829 03ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 12829      4D5F4545 
 12829      50524F4D 
 12829      5F424144 
 12829      5F444154 
 12830              	.LASF50:
 12831 03c1 5F4F4C45 		.ascii	"_OLEDLine\000"
 12831      444C696E 
 12831      6500
 12832              	.LASF168:
 12833 03cb 6D617043 		.ascii	"mapCount\000"
 12833      6F756E74 
 12833      00
 12834              	.LASF135:
 12835 03d4 74656D70 		.ascii	"tempIntVersion\000"
 12835      496E7456 
 12835      65727369 
 12835      6F6E00
 12836              	.LASF258:
 12837 03e3 70656461 		.ascii	"pedalRatios\000"
 12837      6C526174 
 12837      696F7300 
 12838              	.LASF1:
 12839 03ef 756E7369 		.ascii	"unsigned char\000"
 12839      676E6564 
 12839      20636861 
 12839      7200
 12840              	.LASF173:
 12841 03fd 76616C43 		.ascii	"valCheck\000"
 12841      6865636B 
 12841      00
 12842              	.LASF130:
 12843 0406 76616C73 		.ascii	"valsStart\000"
 12843      53746172 
 12843      7400
 12844              	.LASF79:
 12845 0410 636F7065 		.ascii	"coped\000"
 12845      6400
 12846              	.LASF199:
 12847 0416 72783143 		.ascii	"rx1Channel\000"
 12847      68616E6E 
 12847      656C00
 12848              	.LASF81:
 12849 0421 70656461 		.ascii	"pedalStartLoc\000"
 12849      6C537461 
 12849      72744C6F 
 12849      6300
 12850              	.LASF215:
 12851 042f 6E657744 		.ascii	"newDataFlag\000"
 12851      61746146 
 12851      6C616700 
 12852              	.LASF283:
 12853 043b 73747269 		.ascii	"stringOctave\000"
 12853      6E674F63 
 12853      74617665 
 12853      00
 12854              	.LASF108:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 273


 12855 0448 5553425F 		.ascii	"USB_service\000"
 12855      73657276 
 12855      69636500 
 12856              	.LASF170:
 12857 0454 6D617043 		.ascii	"mapCountExpectation\000"
 12857      6F756E74 
 12857      45787065 
 12857      63746174 
 12857      696F6E00 
 12858              	.LASF62:
 12859 0468 74656D70 		.ascii	"tempmax\000"
 12859      6D617800 
 12860              	.LASF129:
 12861 0470 73746F70 		.ascii	"stoppingPoint\000"
 12861      70696E67 
 12861      506F696E 
 12861      7400
 12862              	.LASF69:
 12863 047e 76616C75 		.ascii	"value\000"
 12863      6500
 12864              	.LASF259:
 12865 0484 6C617374 		.ascii	"last_mux\000"
 12865      5F6D7578 
 12865      00
 12866              	.LASF268:
 12867 048d 656E636F 		.ascii	"encoderVal\000"
 12867      64657256 
 12867      616C00
 12868              	.LASF121:
 12869 0498 70726573 		.ascii	"pressure\000"
 12869      73757265 
 12869      00
 12870              	.LASF290:
 12871 04a1 70726573 		.ascii	"presetAlreadyDisplayed\000"
 12871      6574416C 
 12871      72656164 
 12871      79446973 
 12871      706C6179 
 12872              	.LASF53:
 12873 04b8 6D616372 		.ascii	"macroNames\000"
 12873      6F4E616D 
 12873      657300
 12874              	.LASF210:
 12875 04c3 70726576 		.ascii	"prevStrings\000"
 12875      53747269 
 12875      6E677300 
 12876              	.LASF24:
 12877 04cf 63686172 		.ascii	"char\000"
 12877      00
 12878              	.LASF141:
 12879 04d4 65657072 		.ascii	"eepromArray\000"
 12879      6F6D4172 
 12879      72617900 
 12880              	.LASF197:
 12881 04e0 63757272 		.ascii	"currentCopedent\000"
 12881      656E7443 
 12881      6F706564 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 274


 12881      656E7400 
 12882              	.LASF193:
 12883 04f0 72617741 		.ascii	"rawAngle\000"
 12883      6E676C65 
 12883      00
 12884              	.LASF63:
 12885 04f9 4C454146 		.ascii	"LEAF_clip\000"
 12885      5F636C69 
 12885      7000
 12886              	.LASF97:
 12887 0503 446D6154 		.ascii	"DmaTxConfiguration\000"
 12887      78436F6E 
 12887      66696775 
 12887      72617469 
 12887      6F6E00
 12888              	.LASF261:
 12889 0516 6E65636B 		.ascii	"neck\000"
 12889      00
 12890              	.LASF5:
 12891 051b 5F5F7569 		.ascii	"__uint16_t\000"
 12891      6E743136 
 12891      5F7400
 12892              	.LASF107:
 12893 0526 63686563 		.ascii	"checkUSB_Vbus\000"
 12893      6B555342 
 12893      5F566275 
 12893      7300
 12894              	.LASF236:
 12895 0534 65657072 		.ascii	"eeprom_cnt\000"
 12895      6F6D5F63 
 12895      6E7400
 12896              	.LASF145:
 12897 053f 5553425F 		.ascii	"USB_midi_out_ep\000"
 12897      6D696469 
 12897      5F6F7574 
 12897      5F657000 
 12898              	.LASF87:
 12899 054f 74656D70 		.ascii	"tempPedal\000"
 12899      50656461 
 12899      6C00
 12900              	.LASF105:
 12901 0559 4932435F 		.ascii	"I2C_reset\000"
 12901      72657365 
 12901      7400
 12902              	.LASF269:
 12903 0563 656E636F 		.ascii	"encoderNum\000"
 12903      6465724E 
 12903      756D00
 12904              	.LASF266:
 12905 056e 6F637431 		.ascii	"oct1Up\000"
 12905      557000
 12906              	.LASF44:
 12907 0575 75696E74 		.ascii	"uint\000"
 12907      00
 12908              	.LASF195:
 12909 057a 6D696469 		.ascii	"midiOverflow\000"
 12909      4F766572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 275


 12909      666C6F77 
 12909      00
 12910              	.LASF74:
 12911 0587 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 12911      496E6974 
 12911      69616C50 
 12911      6564616C 
 12911      5A65726F 
 12912              	.LASF120:
 12913 05a5 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 12913      4D494449 
 12913      506F6C79 
 12913      4B657950 
 12913      72657373 
 12914              	.LASF134:
 12915 05bd 73747269 		.ascii	"stringChange\000"
 12915      6E674368 
 12915      616E6765 
 12915      00
 12916              	.LASF91:
 12917 05ca 636F6D70 		.ascii	"computerMIDIOffset\000"
 12917      75746572 
 12917      4D494449 
 12917      4F666673 
 12917      657400
 12918              	.LASF122:
 12919 05dd 73656E64 		.ascii	"sendMIDIControlChange\000"
 12919      4D494449 
 12919      436F6E74 
 12919      726F6C43 
 12919      68616E67 
 12920              	.LASF214:
 12921 05f3 73706943 		.ascii	"spiCounter\000"
 12921      6F756E74 
 12921      657200
 12922              	.LASF39:
 12923 05fe 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 12923      4D5F4545 
 12923      50524F4D 
 12923      5F424144 
 12923      5F504152 
 12924              	.LASF300:
 12925 0615 73797365 		.ascii	"sysexPointerMask\000"
 12925      78506F69 
 12925      6E746572 
 12925      4D61736B 
 12925      00
 12926              	.LASF149:
 12927 0626 4932435F 		.ascii	"I2C_1_initVar\000"
 12927      315F696E 
 12927      69745661 
 12927      7200
 12928              	.LASF52:
 12929 0634 70726573 		.ascii	"presetName\000"
 12929      65744E61 
 12929      6D6500
 12930              	.LASF155:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 276


 12931 063f 70617273 		.ascii	"parsingSysex\000"
 12931      696E6753 
 12931      79736578 
 12931      00
 12932              	.LASF186:
 12933 064c 72657475 		.ascii	"returnedData\000"
 12933      726E6564 
 12933      44617461 
 12933      00
 12934              	.LASF48:
 12935 0659 466F7572 		.ascii	"FourthLine\000"
 12935      74684C69 
 12935      6E6500
 12936              	.LASF245:
 12937 0664 766F6C75 		.ascii	"volumePedal\000"
 12937      6D655065 
 12937      64616C00 
 12938              	.LASF207:
 12939 0670 72784275 		.ascii	"rxBufferPluck\000"
 12939      66666572 
 12939      506C7563 
 12939      6B00
 12940              	.LASF275:
 12941 067e 636F7065 		.ascii	"copedent\000"
 12941      64656E74 
 12941      00
 12942              	.LASF248:
 12943 0687 70656461 		.ascii	"pedals8bit\000"
 12943      6C733862 
 12943      697400
 12944              	.LASF232:
 12945 0692 70726576 		.ascii	"prevKnobs\000"
 12945      4B6E6F62 
 12945      7300
 12946              	.LASF227:
 12947 069c 6D795370 		.ascii	"mySpiCounter\000"
 12947      69436F75 
 12947      6E746572 
 12947      00
 12948              	.LASF163:
 12949 06a9 73797365 		.ascii	"sysexMessageInProgress\000"
 12949      784D6573 
 12949      73616765 
 12949      496E5072 
 12949      6F677265 
 12950              	.LASF116:
 12951 06c0 43434576 		.ascii	"CCEvent\000"
 12951      656E7400 
 12952              	.LASF127:
 12953 06c8 70617273 		.ascii	"parseSysex\000"
 12953      65537973 
 12953      657800
 12954              	.LASF303:
 12955 06d3 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 12955      73657273 
 12955      5C4A6566 
 12955      66536E79 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 277


 12955      6465725C 
 12956 0701 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 12956      355F656C 
 12956      65637472 
 12956      6F737465 
 12956      656C5F73 
 12957 0733 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 12957      5F50534F 
 12957      43335F35 
 12957      5F546865 
 12957      726D6973 
 12958              	.LASF281:
 12959 0751 696E7653 		.ascii	"invStringMappedPositions\000"
 12959      7472696E 
 12959      674D6170 
 12959      70656450 
 12959      6F736974 
 12960              	.LASF225:
 12961 076a 696E7075 		.ascii	"inputData\000"
 12961      74446174 
 12961      6100
 12962              	.LASF66:
 12963 0774 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 12963      5F696E74 
 12963      6572706F 
 12963      6C617469 
 12963      6F6E5F6C 
 12964              	.LASF295:
 12965 078e 70726576 		.ascii	"prevNotes\000"
 12965      4E6F7465 
 12965      7300
 12966              	.LASF37:
 12967 0798 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 12967      74635F65 
 12967      6570726F 
 12967      6D5F636F 
 12967      6E746578 
 12968              	.LASF10:
 12969 07b0 6C6F6E67 		.ascii	"long unsigned int\000"
 12969      20756E73 
 12969      69676E65 
 12969      6420696E 
 12969      7400
 12970              	.LASF106:
 12971 07c2 64697370 		.ascii	"displayCurrentPresetName\000"
 12971      6C617943 
 12971      75727265 
 12971      6E745072 
 12971      65736574 
 12972              	.LASF148:
 12973 07db 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 12973      4550524F 
 12973      4D5F656D 
 12973      5F456570 
 12973      726F6D53 
 12974              	.LASF235:
 12975 07f6 65657072 		.ascii	"eepromReturnValue\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 278


 12975      6F6D5265 
 12975      7475726E 
 12975      56616C75 
 12975      6500
 12976              	.LASF85:
 12977 0808 73746174 		.ascii	"status\000"
 12977      757300
 12978              	.LASF239:
 12979 080f 73656E64 		.ascii	"send_it\000"
 12979      5F697400 
 12980              	.LASF184:
 12981 0817 6C696E65 		.ascii	"linearPotValue32Bit\000"
 12981      6172506F 
 12981      7456616C 
 12981      75653332 
 12981      42697400 
 12982              	.LASF119:
 12983 082b 6368616E 		.ascii	"channel\000"
 12983      6E656C00 
 12984              	.LASF99:
 12985 0833 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 12985      4D617374 
 12985      65725772 
 12985      69746542 
 12985      6C6F636B 
 12986              	.LASF190:
 12987 084b 616E676C 		.ascii	"angle\000"
 12987      6500
 12988              	.LASF175:
 12989 0851 6E756D53 		.ascii	"numStrings\000"
 12989      7472696E 
 12989      677300
 12990              	.LASF42:
 12991 085c 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 12991      4D5F4545 
 12991      50524F4D 
 12991      5F575249 
 12991      54455F46 
 12992              	.LASF72:
 12993 0874 6F737461 		.ascii	"ostart\000"
 12993      727400
 12994              	.LASF252:
 12995 087b 63757272 		.ascii	"currentPresetSelection\000"
 12995      656E7450 
 12995      72657365 
 12995      7453656C 
 12995      65637469 
 12996              	.LASF286:
 12997 0892 6F70656E 		.ascii	"openStringMIDI_Int\000"
 12997      53747269 
 12997      6E674D49 
 12997      44495F49 
 12997      6E7400
 12998              	.LASF71:
 12999 08a5 6973746F 		.ascii	"istop\000"
 12999      7000
 13000              	.LASF144:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 279


 13001 08ab 5553425F 		.ascii	"USB_midiInBuffer\000"
 13001      6D696469 
 13001      496E4275 
 13001      66666572 
 13001      00
 13002              	.LASF301:
 13003 08bc 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 13003      43313120 
 13003      352E342E 
 13003      31203230 
 13003      31363036 
 13004 08ef 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 13004      20726576 
 13004      6973696F 
 13004      6E203233 
 13004      37373135 
 13005 0922 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 13005      66756E63 
 13005      74696F6E 
 13005      2D736563 
 13005      74696F6E 
 13006              	.LASF117:
 13007 094a 73656E64 		.ascii	"sendMIDINoteOn\000"
 13007      4D494449 
 13007      4E6F7465 
 13007      4F6E00
 13008              	.LASF260:
 13009 0959 6D61696E 		.ascii	"main_counter\000"
 13009      5F636F75 
 13009      6E746572 
 13009      00
 13010              	.LASF45:
 13011 0966 46697273 		.ascii	"FirstLine\000"
 13011      744C696E 
 13011      6500
 13012              	.LASF262:
 13013 0970 6475616C 		.ascii	"dualSlider\000"
 13013      536C6964 
 13013      657200
 13014              	.LASF60:
 13015 097b 72657374 		.ascii	"restartSystemCheck\000"
 13015      61727453 
 13015      79737465 
 13015      6D436865 
 13015      636B00
 13016              	.LASF180:
 13017 098e 5553425F 		.ascii	"USB_check_flag\000"
 13017      63686563 
 13017      6B5F666C 
 13017      616700
 13018              	.LASF161:
 13019 099d 6D657373 		.ascii	"messageArraySendCount\000"
 13019      61676541 
 13019      72726179 
 13019      53656E64 
 13019      436F756E 
 13020              	.LASF9:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 280


 13021 09b3 5F5F7569 		.ascii	"__uint32_t\000"
 13021      6E743332 
 13021      5F7400
 13022              	.LASF11:
 13023 09be 6C6F6E67 		.ascii	"long long int\000"
 13023      206C6F6E 
 13023      6720696E 
 13023      7400
 13024              	.LASF185:
 13025 09cc 636F756E 		.ascii	"counter\000"
 13025      74657200 
 13026              	.LASF284:
 13027 09d4 73747269 		.ascii	"stringPitch\000"
 13027      6E675069 
 13027      74636800 
 13028              	.LASF201:
 13029 09e0 72783154 		.ascii	"rx1TD\000"
 13029      4400
 13030              	.LASF288:
 13031 09e6 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 13031      4F4C4544 
 13031      57616974 
 13031      696E6754 
 13031      6F53656E 
 13032              	.LASF84:
 13033 09fc 74656D70 		.ascii	"tempIntLow\000"
 13033      496E744C 
 13033      6F7700
 13034              	.LASF61:
 13035 0a07 74656D70 		.ascii	"tempmin\000"
 13035      6D696E00 
 13036              	.LASF35:
 13037 0a0f 626C6F63 		.ascii	"blockingWrite\000"
 13037      6B696E67 
 13037      57726974 
 13037      6500
 13038              	.LASF205:
 13039 0a1d 72783343 		.ascii	"rx3Channel\000"
 13039      68616E6E 
 13039      656C00
 13040              	.LASF23:
 13041 0a28 646F7562 		.ascii	"double\000"
 13041      6C6500
 13042              	.LASF302:
 13043 0a2f 6D61696E 		.ascii	"main.c\000"
 13043      2E6300
 13044              	.LASF270:
 13045 0a36 62757474 		.ascii	"button1Up\000"
 13045      6F6E3155 
 13045      7000
 13046              	.LASF109:
 13047 0a40 6C6F6732 		.ascii	"log2f_approx\000"
 13047      665F6170 
 13047      70726F78 
 13047      00
 13048              	.LASF150:
 13049 0a4d 49544D5F 		.ascii	"ITM_RxBuffer\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 281


 13049      52784275 
 13049      66666572 
 13049      00
 13050              	.LASF73:
 13051 0a5a 6F73746F 		.ascii	"ostop\000"
 13051      7000
 13052              	.LASF103:
 13053 0a60 74696D65 		.ascii	"timeout\000"
 13053      6F757400 
 13054              	.LASF22:
 13055 0a68 666C6F61 		.ascii	"float\000"
 13055      7400
 13056              	.LASF247:
 13057 0a6e 70726576 		.ascii	"prev_processed_pedals\000"
 13057      5F70726F 
 13057      63657373 
 13057      65645F70 
 13057      6564616C 
 13058              	.LASF233:
 13059 0a84 53504932 		.ascii	"SPI2started\000"
 13059      73746172 
 13059      74656400 
 13060              	.LASF221:
 13061 0a90 63757272 		.ascii	"currentPluckBuffer\000"
 13061      656E7450 
 13061      6C75636B 
 13061      42756666 
 13061      657200
 13062              	.LASF90:
 13063 0aa3 6261724D 		.ascii	"barMIDI\000"
 13063      49444900 
 13064              	.LASF125:
 13065 0aab 73656E64 		.ascii	"sendMIDIPitchBend\000"
 13065      4D494449 
 13065      50697463 
 13065      6842656E 
 13065      6400
 13066              	.LASF13:
 13067 0abd 756E7369 		.ascii	"unsigned int\000"
 13067      676E6564 
 13067      20696E74 
 13067      00
 13068              	.LASF154:
 13069 0aca 72656365 		.ascii	"receivingSysex\000"
 13069      6976696E 
 13069      67537973 
 13069      657800
 13070              	.LASF139:
 13071 0ad9 6361626C 		.ascii	"cable\000"
 13071      6500
 13072              	.LASF59:
 13073 0adf 56627573 		.ascii	"Vbus_function\000"
 13073      5F66756E 
 13073      6374696F 
 13073      6E00
 13074              	.LASF113:
 13075 0aed 76656C6F 		.ascii	"velocity\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 282


 13075      63697479 
 13075      00
 13076              	.LASF296:
 13077 0af6 63686563 		.ascii	"checkStatus\000"
 13077      6B537461 
 13077      74757300 
 13078              	.LASF25:
 13079 0b02 63797374 		.ascii	"cystatus\000"
 13079      61747573 
 13079      00
 13080              	.LASF230:
 13081 0b0b 6261725F 		.ascii	"bar_index\000"
 13081      696E6465 
 13081      7800
 13082              	.LASF112:
 13083 0b15 73747269 		.ascii	"string\000"
 13083      6E6700
 13084              	.LASF228:
 13085 0b1c 6F666673 		.ascii	"offsetErrorCount\000"
 13085      65744572 
 13085      726F7243 
 13085      6F756E74 
 13085      00
 13086              	.LASF250:
 13087 0b2d 70726F63 		.ascii	"processed_volumePedal\000"
 13087      65737365 
 13087      645F766F 
 13087      6C756D65 
 13087      50656461 
 13088              	.LASF88:
 13089 0b43 74656D70 		.ascii	"tempMIDI\000"
 13089      4D494449 
 13089      00
 13090              	.LASF208:
 13091 0b4c 72784275 		.ascii	"rxBufferBar\000"
 13091      66666572 
 13091      42617200 
 13092              	.LASF203:
 13093 0b58 74784368 		.ascii	"txChannel\000"
 13093      616E6E65 
 13093      6C00
 13094              	.LASF246:
 13095 0b62 70726F63 		.ascii	"processed_pedals\000"
 13095      65737365 
 13095      645F7065 
 13095      64616C73 
 13095      00
 13096              	.LASF279:
 13097 0b73 6F70656E 		.ascii	"openStringFrequencies\000"
 13097      53747269 
 13097      6E674672 
 13097      65717565 
 13097      6E636965 
 13098              	.LASF191:
 13099 0b89 70726576 		.ascii	"prevAngle\000"
 13099      416E676C 
 13099      6500
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 283


 13100              	.LASF217:
 13101 0b93 706C7563 		.ascii	"pluck_index\000"
 13101      6B5F696E 
 13101      64657800 
 13102              	.LASF27:
 13103 0b9f 6C6F6E67 		.ascii	"long double\000"
 13103      20646F75 
 13103      626C6500 
 13104              	.LASF104:
 13105 0bab 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 13105      4D617374 
 13105      65725265 
 13105      6164426C 
 13105      6F636B69 
 13106              	.LASF222:
 13107 0bc2 63757272 		.ascii	"currentBarBuffer\000"
 13107      656E7442 
 13107      61724275 
 13107      66666572 
 13107      00
 13108              	.LASF192:
 13109 0bd3 4144435F 		.ascii	"ADC_values\000"
 13109      76616C75 
 13109      657300
 13110              	.LASF65:
 13111 0bde 66746F6D 		.ascii	"ftom\000"
 13111      00
 13112              	.LASF263:
 13113 0be3 656E7465 		.ascii	"enterUp\000"
 13113      72557000 
 13114              	.LASF224:
 13115 0beb 53504931 		.ascii	"SPI1ErrorCount\000"
 13115      4572726F 
 13115      72436F75 
 13115      6E7400
 13116              	.LASF194:
 13117 0bfa 6D696469 		.ascii	"midiSent\000"
 13117      53656E74 
 13117      00
 13118              	.LASF140:
 13119 0c03 6D696469 		.ascii	"midiMsg\000"
 13119      4D736700 
 13120              	.LASF292:
 13121 0c0b 63757272 		.ascii	"currentNeck\000"
 13121      656E744E 
 13121      65636B00 
 13122              	.LASF293:
 13123 0c17 65646974 		.ascii	"editMode\000"
 13123      4D6F6465 
 13123      00
 13124              	.LASF12:
 13125 0c20 6C6F6E67 		.ascii	"long long unsigned int\000"
 13125      206C6F6E 
 13125      6720756E 
 13125      7369676E 
 13125      65642069 
 13126              	.LASF16:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 284


 13127 0c37 75696E74 		.ascii	"uint16_t\000"
 13127      31365F74 
 13127      00
 13128              	.LASF136:
 13129 0c40 74656D70 		.ascii	"tempHigh\000"
 13129      48696768 
 13129      00
 13130              	.LASF174:
 13131 0c49 74657374 		.ascii	"testVal\000"
 13131      56616C00 
 13132              	.LASF202:
 13133 0c51 72783254 		.ascii	"rx2TD\000"
 13133      4400
 13134              	.LASF304:
 13135 0c57 62726561 		.ascii	"breakFloat\000"
 13135      6B466C6F 
 13135      617400
 13136              	.LASF297:
 13137 0c62 63686563 		.ascii	"checkBase\000"
 13137      6B426173 
 13137      6500
 13138              	.LASF58:
 13139 0c6c 73706973 		.ascii	"spis_2_ss\000"
 13139      5F325F73 
 13139      7300
 13140              	.LASF271:
 13141 0c76 62757474 		.ascii	"button2Up\000"
 13141      6F6E3255 
 13141      7000
 13142              	.LASF213:
 13143 0c80 616D4865 		.ascii	"amHere\000"
 13143      726500
 13144              	.LASF234:
 13145 0c87 61727261 		.ascii	"array\000"
 13145      7900
 13146              	.LASF93:
 13147 0c8d 7363616C 		.ascii	"scaledMIDI\000"
 13147      65644D49 
 13147      444900
 13148              	.LASF26:
 13149 0c98 72656738 		.ascii	"reg8\000"
 13149      00
 13150              	.LASF158:
 13151 0c9d 636F7065 		.ascii	"copedentNumberToWrite\000"
 13151      64656E74 
 13151      4E756D62 
 13151      6572546F 
 13151      57726974 
 13152              	.LASF55:
 13153 0cb3 6D617043 		.ascii	"mapCountNext\000"
 13153      6F756E74 
 13153      4E657874 
 13153      00
 13154              	.LASF219:
 13155 0cc0 73706943 		.ascii	"spiCounter2\000"
 13155      6F756E74 
 13155      65723200 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 285


 13156              	.LASF114:
 13157 0ccc 74656D70 		.ascii	"tempVel\000"
 13157      56656C00 
 13158              	.LASF176:
 13159 0cd4 75736241 		.ascii	"usbActivityCounter\000"
 13159      63746976 
 13159      69747943 
 13159      6F756E74 
 13159      657200
 13160              	.LASF244:
 13161 0ce7 64656164 		.ascii	"deadzone\000"
 13161      7A6F6E65 
 13161      00
 13162              	.LASF172:
 13163 0cf0 70617273 		.ascii	"parseThatMF\000"
 13163      65546861 
 13163      744D4600 
 13164              	.LASF3:
 13165 0cfc 5F5F696E 		.ascii	"__int16_t\000"
 13165      7431365F 
 13165      7400
 13166              	.LASF54:
 13167 0d06 696E6974 		.ascii	"initialVals\000"
 13167      69616C56 
 13167      616C7300 
 13168              	.LASF179:
 13169 0d12 5553425F 		.ascii	"USB_active\000"
 13169      61637469 
 13169      766500
 13170              	.LASF298:
 13171 0d1d 5350495F 		.ascii	"SPI_errors\000"
 13171      6572726F 
 13171      727300
 13172              	.LASF152:
 13173 0d28 73797365 		.ascii	"sysexBuffer\000"
 13173      78427566 
 13173      66657200 
 13174              	.LASF164:
 13175 0d34 62756643 		.ascii	"bufCount\000"
 13175      6F756E74 
 13175      00
 13176              	.LASF223:
 13177 0d3d 706C7563 		.ascii	"pluckErrorCount\000"
 13177      6B457272 
 13177      6F72436F 
 13177      756E7400 
 13178              	.LASF132:
 13179 0d4d 74656D70 		.ascii	"tempChar\000"
 13179      43686172 
 13179      00
 13180              	.LASF287:
 13181 0d56 4F4C4544 		.ascii	"OLEDcount\000"
 13181      636F756E 
 13181      7400
 13182              	.LASF75:
 13183 0d60 63616C69 		.ascii	"calibratePedals\000"
 13183      62726174 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 286


 13183      65506564 
 13183      616C7300 
 13184              	.LASF274:
 13185 0d70 70617463 		.ascii	"patchNum\000"
 13185      684E756D 
 13185      00
 13186              	.LASF291:
 13187 0d79 70656461 		.ascii	"pedals_float\000"
 13187      6C735F66 
 13187      6C6F6174 
 13187      00
 13188              	.LASF19:
 13189 0d86 75696E74 		.ascii	"uint8\000"
 13189      3800
 13190              	.LASF242:
 13191 0d8c 70656461 		.ascii	"pedals_low\000"
 13191      6C735F6C 
 13191      6F7700
 13192              	.LASF92:
 13193 0d97 70697463 		.ascii	"pitchBendAmount\000"
 13193      6842656E 
 13193      64416D6F 
 13193      756E7400 
 13194              	.LASF216:
 13195 0da7 70726576 		.ascii	"prevOctave\000"
 13195      4F637461 
 13195      766500
 13196              	.LASF4:
 13197 0db2 73686F72 		.ascii	"short int\000"
 13197      7420696E 
 13197      7400
 13198              	.LASF162:
 13199 0dbc 6D657373 		.ascii	"messageArraySize\000"
 13199      61676541 
 13199      72726179 
 13199      53697A65 
 13199      00
 13200              	.LASF251:
 13201 0dcd 66726574 		.ascii	"fretMeasurements\000"
 13201      4D656173 
 13201      7572656D 
 13201      656E7473 
 13201      00
 13202              	.LASF102:
 13203 0dde 6D6F6465 		.ascii	"mode\000"
 13203      00
 13204              	.LASF96:
 13205 0de3 62756666 		.ascii	"bufferPointer\000"
 13205      6572506F 
 13205      696E7465 
 13205      7200
 13206              	.LASF285:
 13207 0df1 73747269 		.ascii	"stringMIDI\000"
 13207      6E674D49 
 13207      444900
 13208              	.LASF89:
 13209 0dfc 6F70656E 		.ascii	"openStringMIDI\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 287


 13209      53747269 
 13209      6E674D49 
 13209      444900
 13210              	.LASF15:
 13211 0e0b 696E7431 		.ascii	"int16_t\000"
 13211      365F7400 
 13212              	.LASF133:
 13213 0e13 70656461 		.ascii	"pedalToWrite\000"
 13213      6C546F57 
 13213      72697465 
 13213      00
 13214              	.LASF32:
 13215 0e20 65657072 		.ascii	"eepromSize\000"
 13215      6F6D5369 
 13215      7A6500
 13216              	.LASF218:
 13217 0e2b 616D4865 		.ascii	"amHere2\000"
 13217      72653200 
 13218              	.LASF280:
 13219 0e33 73747269 		.ascii	"stringMappedPositions\000"
 13219      6E674D61 
 13219      70706564 
 13219      506F7369 
 13219      74696F6E 
 13220              	.LASF188:
 13221 0e49 70726576 		.ascii	"previousButtons\000"
 13221      696F7573 
 13221      42757474 
 13221      6F6E7300 
 13222              	.LASF33:
 13223 0e59 77656172 		.ascii	"wearLevelingFactor\000"
 13223      4C657665 
 13223      6C696E67 
 13223      46616374 
 13223      6F7200
 13224              	.LASF142:
 13225 0e6c 5553425F 		.ascii	"USB_midiInPointer\000"
 13225      6D696469 
 13225      496E506F 
 13225      696E7465 
 13225      7200
 13226              	.LASF294:
 13227 0e7e 63616C69 		.ascii	"calibrationMode\000"
 13227      62726174 
 13227      696F6E4D 
 13227      6F646500 
 13228              	.LASF100:
 13229 0e8e 69324341 		.ascii	"i2CAddr\000"
 13229      64647200 
 13230              	.LASF181:
 13231 0e96 696E4275 		.ascii	"inBuffer\000"
 13231      66666572 
 13231      00
 13232              	.LASF212:
 13233 0e9f 6D617853 		.ascii	"maxStrings\000"
 13233      7472696E 
 13233      677300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 288


 13234              	.LASF80:
 13235 0eaa 6C657474 		.ascii	"letter\000"
 13235      657200
 13236              	.LASF146:
 13237 0eb1 5553425F 		.ascii	"USB_midiOutBuffer\000"
 13237      6D696469 
 13237      4F757442 
 13237      75666665 
 13237      7200
 13238              	.LASF196:
 13239 0ec3 6D616372 		.ascii	"macroKnobValues\000"
 13239      6F4B6E6F 
 13239      6256616C 
 13239      75657300 
 13240              	.LASF241:
 13241 0ed3 6932635F 		.ascii	"i2c_skipped\000"
 13241      736B6970 
 13241      70656400 
 13242              	.LASF226:
 13243 0edf 73706941 		.ascii	"spiAdjusted\000"
 13243      646A7573 
 13243      74656400 
 13244              	.LASF200:
 13245 0eeb 72783243 		.ascii	"rx2Channel\000"
 13245      68616E6E 
 13245      656C00
 13246              	.LASF143:
 13247 0ef6 5553425F 		.ascii	"USB_midi_in_ep\000"
 13247      6D696469 
 13247      5F696E5F 
 13247      657000
 13248              	.LASF98:
 13249 0f05 446D6152 		.ascii	"DmaRxConfiguration\000"
 13249      78436F6E 
 13249      66696775 
 13249      72617469 
 13249      6F6E00
 13250              	.LASF18:
 13251 0f18 75696E74 		.ascii	"uint32_t\000"
 13251      33325F74 
 13251      00
 13252              	.LASF273:
 13253 0f21 62757474 		.ascii	"button4Up\000"
 13253      6F6E3455 
 13253      7000
 13254              	.LASF178:
 13255 0f2b 70726576 		.ascii	"prevVBUS\000"
 13255      56425553 
 13255      00
 13256              	.LASF206:
 13257 0f34 72783354 		.ascii	"rx3TD\000"
 13257      4400
 13258              	.LASF177:
 13259 0f3a 63757272 		.ascii	"currentVBUS\000"
 13259      656E7456 
 13259      42555300 
 13260              	.LASF267:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 289


 13261 0f46 6F637434 		.ascii	"oct4Up\000"
 13261      557000
 13262              	.LASF305:
 13263 0f4d 63616C63 		.ascii	"calculatePedalRatios\000"
 13263      756C6174 
 13263      65506564 
 13263      616C5261 
 13263      74696F73 
 13264              	.LASF272:
 13265 0f62 62757474 		.ascii	"button3Up\000"
 13265      6F6E3355 
 13265      7000
 13266              	.LASF6:
 13267 0f6c 73686F72 		.ascii	"short unsigned int\000"
 13267      7420756E 
 13267      7369676E 
 13267      65642069 
 13267      6E7400
 13268              	.LASF56:
 13269 0f7f 6D617070 		.ascii	"mapping\000"
 13269      696E6700 
 13270              	.LASF115:
 13271 0f87 6E6F7465 		.ascii	"noteToSend\000"
 13271      546F5365 
 13271      6E6400
 13272              	.LASF204:
 13273 0f92 74785444 		.ascii	"txTD\000"
 13273      00
 13274              	.LASF7:
 13275 0f97 5F5F696E 		.ascii	"__int32_t\000"
 13275      7433325F 
 13275      7400
 13276              	.LASF211:
 13277 0fa1 70726576 		.ascii	"prevBar\000"
 13277      42617200 
 13278              	.LASF183:
 13279 0fa9 6D79496E 		.ascii	"myInputArray\000"
 13279      70757441 
 13279      72726179 
 13279      00
 13280              	.LASF64:
 13281 0fb6 6D746F66 		.ascii	"mtof\000"
 13281      00
 13282              	.LASF278:
 13283 0fbb 70656461 		.ascii	"pedals\000"
 13283      6C7300
 13284              	.LASF83:
 13285 0fc2 74656D70 		.ascii	"tempIntHigh\000"
 13285      496E7448 
 13285      69676800 
 13286              	.LASF265:
 13287 0fce 65646974 		.ascii	"editUp\000"
 13287      557000
 13288              	.LASF31:
 13289 0fd5 6C617374 		.ascii	"lastWrRowAddr\000"
 13289      5772526F 
 13289      77416464 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccExh8Yf.s 			page 290


 13289      7200
 13290              	.LASF78:
 13291 0fe3 6D794172 		.ascii	"myArrayCounter\000"
 13291      72617943 
 13291      6F756E74 
 13291      657200
 13292              	.LASF282:
 13293 0ff2 73747269 		.ascii	"stringFrequencies\000"
 13293      6E674672 
 13293      65717565 
 13293      6E636965 
 13293      7300
 13294              	.LASF20:
 13295 1004 75696E74 		.ascii	"uint16\000"
 13295      313600
 13296              	.LASF182:
 13297 100b 6D794172 		.ascii	"myArray\000"
 13297      72617900 
 13298              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
