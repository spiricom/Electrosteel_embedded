ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	sendSingleParamUpdate
  54              		.type	sendSingleParamUpdate, %object
  55              		.size	sendSingleParamUpdate, 1
  56              	sendSingleParamUpdate:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 2


  58              		.global	singleParamToUpdateHigh
  59              		.type	singleParamToUpdateHigh, %object
  60              		.size	singleParamToUpdateHigh, 1
  61              	singleParamToUpdateHigh:
  62 000a 00       		.space	1
  63              		.global	singleParamToUpdateLow
  64              		.type	singleParamToUpdateLow, %object
  65              		.size	singleParamToUpdateLow, 1
  66              	singleParamToUpdateLow:
  67 000b 00       		.space	1
  68              		.global	singleParamValueHigh
  69              		.type	singleParamValueHigh, %object
  70              		.size	singleParamValueHigh, 1
  71              	singleParamValueHigh:
  72 000c 00       		.space	1
  73              		.global	singleParamValueLow
  74              		.type	singleParamValueLow, %object
  75              		.size	singleParamValueLow, 1
  76              	singleParamValueLow:
  77 000d 00       		.space	1
  78              		.global	sendMappingChangeUpdate
  79              		.type	sendMappingChangeUpdate, %object
  80              		.size	sendMappingChangeUpdate, 1
  81              	sendMappingChangeUpdate:
  82 000e 00       		.space	1
  83              		.global	presetArraySection
  84              		.type	presetArraySection, %object
  85              		.size	presetArraySection, 1
  86              	presetArraySection:
  87 000f 00       		.space	1
  88              		.global	messageArraySendCount
  89              		.align	1
  90              		.type	messageArraySendCount, %object
  91              		.size	messageArraySendCount, 2
  92              	messageArraySendCount:
  93 0010 0000     		.space	2
  94              		.global	messageArraySize
  95              		.align	1
  96              		.type	messageArraySize, %object
  97              		.size	messageArraySize, 2
  98              	messageArraySize:
  99 0012 0000     		.space	2
 100              		.global	sysexMessageInProgress
 101              		.type	sysexMessageInProgress, %object
 102              		.size	sysexMessageInProgress, 1
 103              	sysexMessageInProgress:
 104 0014 00       		.space	1
 105              		.global	bufCount
 106              		.type	bufCount, %object
 107              		.size	bufCount, 1
 108              	bufCount:
 109 0015 00       		.space	1
 110              		.global	sendingMessage
 111              		.type	sendingMessage, %object
 112              		.size	sendingMessage, 1
 113              	sendingMessage:
 114 0016 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 3


 115              		.global	sendKnobs
 116              		.type	sendKnobs, %object
 117              		.size	sendKnobs, 1
 118              	sendKnobs:
 119 0017 00       		.space	1
 120              		.global	currentFloat
 121              		.align	2
 122              		.type	currentFloat, %object
 123              		.size	currentFloat, 4
 124              	currentFloat:
 125 0018 00000000 		.space	4
 126              		.global	mapCount
 127              		.align	2
 128              		.type	mapCount, %object
 129              		.size	mapCount, 4
 130              	mapCount:
 131 001c 00000000 		.space	4
 132              		.global	valsCount
 133              		.align	1
 134              		.type	valsCount, %object
 135              		.size	valsCount, 2
 136              	valsCount:
 137 0020 0000     		.space	2
 138              		.global	mapCountExpectation
 139              		.align	1
 140              		.type	mapCountExpectation, %object
 141              		.size	mapCountExpectation, 2
 142              	mapCountExpectation:
 143 0022 0000     		.space	2
 144              		.global	numMappings
 145              		.align	1
 146              		.type	numMappings, %object
 147              		.size	numMappings, 2
 148              	numMappings:
 149 0024 0000     		.space	2
 150              		.global	parseThatMF
 151              		.type	parseThatMF, %object
 152              		.size	parseThatMF, 1
 153              	parseThatMF:
 154 0026 00       		.space	1
 155              		.global	valCheck
 156 0027 00       		.align	2
 157              		.type	valCheck, %object
 158              		.size	valCheck, 4
 159              	valCheck:
 160 0028 00000000 		.space	4
 161              		.global	testVal
 162              		.align	2
 163              		.type	testVal, %object
 164              		.size	testVal, 4
 165              	testVal:
 166 002c 00000000 		.space	4
 167              		.global	numStrings
 168              		.data
 169              		.align	2
 170              		.type	numStrings, %object
 171              		.size	numStrings, 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 4


 172              	numStrings:
 173 0000 0A000000 		.word	10
 174              		.global	usbActivityCounter
 175              		.bss
 176              		.type	usbActivityCounter, %object
 177              		.size	usbActivityCounter, 1
 178              	usbActivityCounter:
 179 0030 00       		.space	1
 180              		.comm	midiMsg,4,4
 181              		.global	currentVBUS
 182              		.type	currentVBUS, %object
 183              		.size	currentVBUS, 1
 184              	currentVBUS:
 185 0031 00       		.space	1
 186              		.global	prevVBUS
 187              		.type	prevVBUS, %object
 188              		.size	prevVBUS, 1
 189              	prevVBUS:
 190 0032 00       		.space	1
 191              		.global	USB_active
 192              		.type	USB_active, %object
 193              		.size	USB_active, 1
 194              	USB_active:
 195 0033 00       		.space	1
 196              		.global	USB_check_flag
 197              		.type	USB_check_flag, %object
 198              		.size	USB_check_flag, 1
 199              	USB_check_flag:
 200 0034 00       		.space	1
 201              		.comm	mappingArray,6,4
 202              		.comm	inBuffer,32,4
 203              		.comm	myArray,32,4
 204              		.comm	myInputArray,2,4
 205              		.comm	linearPotValue32Bit,8,4
 206              		.global	i
 207              		.type	i, %object
 208              		.size	i, 1
 209              	i:
 210 0035 00       		.space	1
 211              		.global	counter
 212              		.type	counter, %object
 213              		.size	counter, 1
 214              	counter:
 215 0036 00       		.space	1
 216              		.comm	returnedData,32,4
 217              		.comm	temper,4,4
 218              		.comm	previousButtons,44,4
 219              		.global	octave
 220              		.data
 221              		.align	2
 222              		.type	octave, %object
 223              		.size	octave, 4
 224              	octave:
 225 0004 05000000 		.word	5
 226              		.comm	angle,20,4
 227              		.comm	prevAngle,20,4
 228              		.comm	ADC_values,8,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 5


 229              		.global	rawAngle
 230              		.bss
 231 0037 00       		.align	1
 232              		.type	rawAngle, %object
 233              		.size	rawAngle, 2
 234              	rawAngle:
 235 0038 0000     		.space	2
 236              		.global	midiSent
 237              		.align	1
 238              		.type	midiSent, %object
 239              		.size	midiSent, 2
 240              	midiSent:
 241 003a 0000     		.space	2
 242              		.global	midiOverflow
 243              		.align	1
 244              		.type	midiOverflow, %object
 245              		.size	midiOverflow, 2
 246              	midiOverflow:
 247 003c 0000     		.space	2
 248              		.comm	macroKnobValues,8,4
 249              		.global	currentCopedent
 250              		.type	currentCopedent, %object
 251              		.size	currentCopedent, 1
 252              	currentCopedent:
 253 003e 00       		.space	1
 254              		.global	necks
 255              		.data
 256              		.align	2
 257              		.type	necks, %object
 258              		.size	necks, 2
 259              	necks:
 260 0008 00       		.byte	0
 261 0009 01       		.byte	1
 262              		.comm	rx1Channel,1,1
 263              		.comm	rx2Channel,1,32
 264              		.comm	rx1TD,2,4
 265              		.comm	rx2TD,2,32
 266              		.comm	txChannel,1,32
 267              		.comm	txTD,1,32
 268              		.comm	rx3Channel,1,32
 269              		.comm	rx3TD,1,32
 270              		.comm	rxBufferPluck,52,32
 271              		.comm	rxBufferBar,16,32
 272              		.comm	strings,24,4
 273              		.comm	prevStrings,24,4
 274              		.comm	bar,4,4
 275              		.comm	prevBar,4,4
 276              		.comm	maxStrings,24,4
 277              		.global	amHere
 278              		.bss
 279              		.type	amHere, %object
 280              		.size	amHere, 1
 281              	amHere:
 282 003f 00       		.space	1
 283              		.global	spiCounter
 284              		.type	spiCounter, %object
 285              		.size	spiCounter, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 6


 286              	spiCounter:
 287 0040 00       		.space	1
 288              		.global	newDataFlag
 289              		.type	newDataFlag, %object
 290              		.size	newDataFlag, 1
 291              	newDataFlag:
 292 0041 00       		.space	1
 293              		.global	prevOctave
 294 0042 0000     		.align	2
 295              		.type	prevOctave, %object
 296              		.size	prevOctave, 4
 297              	prevOctave:
 298 0044 00000000 		.space	4
 299              		.global	pluck_index
 300              		.type	pluck_index, %object
 301              		.size	pluck_index, 1
 302              	pluck_index:
 303 0048 00       		.space	1
 304              		.global	amHere2
 305              		.type	amHere2, %object
 306              		.size	amHere2, 1
 307              	amHere2:
 308 0049 00       		.space	1
 309              		.global	spiCounter2
 310              		.type	spiCounter2, %object
 311              		.size	spiCounter2, 1
 312              	spiCounter2:
 313 004a 00       		.space	1
 314              		.global	newDataFlag2
 315              		.type	newDataFlag2, %object
 316              		.size	newDataFlag2, 1
 317              	newDataFlag2:
 318 004b 00       		.space	1
 319              		.global	currentPluckBuffer
 320              		.type	currentPluckBuffer, %object
 321              		.size	currentPluckBuffer, 1
 322              	currentPluckBuffer:
 323 004c 00       		.space	1
 324              		.global	currentBarBuffer
 325              		.type	currentBarBuffer, %object
 326              		.size	currentBarBuffer, 1
 327              	currentBarBuffer:
 328 004d 00       		.space	1
 329              		.global	pluckErrorCount
 330              		.type	pluckErrorCount, %object
 331              		.size	pluckErrorCount, 1
 332              	pluckErrorCount:
 333 004e 00       		.space	1
 334              		.global	SPI1ErrorCount
 335 004f 00       		.align	1
 336              		.type	SPI1ErrorCount, %object
 337              		.size	SPI1ErrorCount, 2
 338              	SPI1ErrorCount:
 339 0050 0000     		.space	2
 340              		.global	inputData
 341              		.type	inputData, %object
 342              		.size	inputData, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 7


 343              	inputData:
 344 0052 00       		.space	1
 345              		.section	.text.spis_1_ss,"ax",%progbits
 346              		.align	2
 347              		.global	spis_1_ss
 348              		.thumb
 349              		.thumb_func
 350              		.type	spis_1_ss, %function
 351              	spis_1_ss:
 352              	.LFB64:
 353              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** //#define BOOTLOAD_STYLE
  11:main.c        **** #define EEPROM_NECKS_OFFSET 0
  12:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  13:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  14:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  15:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  16:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  17:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  18:main.c        **** #define MACRO_CLIPPED_LENGTH 9
  19:main.c        **** #define NAME_CLIPPED_LENGTH 12
  20:main.c        **** #define COPEDENT_NAME_CLIPPED_LENGTH 9
  21:main.c        **** #define myBufferSize 32
  22:main.c        **** void parseSysex(void);
  23:main.c        **** 
  24:main.c        **** uint8_t sysexBuffer[2048];
  25:main.c        **** uint32_t sysexPointer = 0;
  26:main.c        **** uint8_t receivingSysex = 0;
  27:main.c        **** uint8_t parsingSysex = 0;
  28:main.c        **** volatile uint8_t presetArray[2048];
  29:main.c        **** uint8_t presetNumberToWrite = 0;
  30:main.c        **** uint8_t copedentNumberToWrite = 0;
  31:main.c        **** uint8_t sendMessageEnd = 0;
  32:main.c        **** 
  33:main.c        **** uint8_t sendSingleParamUpdate = 0;
  34:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  35:main.c        **** uint8_t singleParamToUpdateLow = 0;
  36:main.c        **** uint8_t singleParamValueHigh = 0;
  37:main.c        **** uint8_t singleParamValueLow = 0;
  38:main.c        ****             
  39:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  40:main.c        ****             
  41:main.c        **** enum presetArraySectionState
  42:main.c        **** {
  43:main.c        ****     presetName = 0,
  44:main.c        ****     macroNames = 1,
  45:main.c        ****     initialVals = 2,
  46:main.c        ****     mapCountNext = 3,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 8


  47:main.c        ****     mapping = 4,
  48:main.c        ****     presetEnd = 5,
  49:main.c        **** };
  50:main.c        **** uint8_t presetArraySection = presetName;
  51:main.c        **** 
  52:main.c        **** uint16_t messageArraySendCount = 0;
  53:main.c        **** uint16_t messageArraySize = 0;
  54:main.c        **** 
  55:main.c        **** uint8_t sysexMessageInProgress = 0;
  56:main.c        **** 
  57:main.c        **** uint8_t bufCount = 0;
  58:main.c        **** volatile uint8_t sendingMessage = 0;
  59:main.c        **** volatile uint8_t sendKnobs = 0;
  60:main.c        **** uint32_t currentFloat = 0;
  61:main.c        **** uint32_t mapCount = 0;
  62:main.c        **** 
  63:main.c        **** uint16_t valsCount = 0;
  64:main.c        **** uint16_t mapCountExpectation = 0;
  65:main.c        **** uint16_t numMappings = 0;
  66:main.c        **** volatile uint8_t parseThatMF = 0;
  67:main.c        **** volatile float valCheck = 0.0f;
  68:main.c        **** volatile float testVal = 0.0f;
  69:main.c        **** 
  70:main.c        **** int numStrings = 10;
  71:main.c        **** /*
  72:main.c        **** #define TUNING_ARRAY_SIZE 258
  73:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  74:main.c        **** */
  75:main.c        **** 
  76:main.c        **** volatile uint8 usbActivityCounter = 0u;
  77:main.c        **** uint8 midiMsg[4];
  78:main.c        **** uint8_t currentVBUS = 0;
  79:main.c        **** uint8_t prevVBUS = 0;
  80:main.c        **** volatile uint8_t USB_active = 0;
  81:main.c        **** volatile uint8_t USB_check_flag = 0;
  82:main.c        **** 
  83:main.c        **** uint8_t mappingArray[6];
  84:main.c        **** 
  85:main.c        **** uint8 inBuffer[myBufferSize];
  86:main.c        **** 
  87:main.c        **** uint8 myArray[myBufferSize];
  88:main.c        **** uint8 myInputArray[2];
  89:main.c        **** int32_t linearPotValue32Bit[2];
  90:main.c        **** uint8_t i = 0;
  91:main.c        **** uint8_t counter = 0;
  92:main.c        **** uint8_t returnedData[myBufferSize];
  93:main.c        **** int32_t temper;
  94:main.c        **** int previousButtons[11];
  95:main.c        **** int octave = 5;
  96:main.c        **** uint16_t angle[10];
  97:main.c        **** uint16_t prevAngle[10];
  98:main.c        **** 
  99:main.c        **** uint16_t ADC_values[4];
 100:main.c        **** uint16_t rawAngle = 0;
 101:main.c        **** uint16_t midiSent = 0;
 102:main.c        **** uint16_t midiOverflow = 0;
 103:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 9


 104:main.c        **** uint8_t macroKnobValues[8];
 105:main.c        **** 
 106:main.c        **** uint8_t currentCopedent = 0;
 107:main.c        **** uint8_t necks[2] = {0,1};
 108:main.c        **** 
 109:main.c        **** void checkUSB_Vbus(void);
 110:main.c        **** void sendMIDIAllNotesOff(void);
 111:main.c        **** void sendMIDIPitchBend(int val, int channel);
 112:main.c        **** void firstCheckUSB_Vbus(void);
 113:main.c        **** void restartSystemCheck(void);
 114:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 115:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 116:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 117:main.c        **** void noteEvent(int string);
 118:main.c        **** void I2C_reset(void);
 119:main.c        **** void CCEvent(int cc, int val);
 120:main.c        **** void DmaRxConfiguration(void);
 121:main.c        **** /* DMA Configuration for DMA_RX */
 122:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 123:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 124:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 125:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 126:main.c        **** 
 127:main.c        **** void DmaTxConfiguration(void);
 128:main.c        **** 
 129:main.c        **** /* DMA Configuration for DMA_TX */
 130:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 131:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 132:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 133:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 134:main.c        **** 
 135:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 136:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 137:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 138:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 139:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 140:main.c        **** 
 141:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 142:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 143:main.c        **** 
 144:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 145:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 146:main.c        **** 
 147:main.c        **** 
 148:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 149:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 150:main.c        **** 
 151:main.c        **** volatile uint16_t strings[12];
 152:main.c        **** volatile uint16_t prevStrings[12];
 153:main.c        **** volatile uint16_t bar[2];
 154:main.c        **** volatile uint16_t prevBar[2];
 155:main.c        **** volatile uint16_t maxStrings[12];
 156:main.c        **** volatile uint8_t amHere = 0;
 157:main.c        **** volatile uint8_t spiCounter = 0;
 158:main.c        **** volatile uint8_t newDataFlag = 0;
 159:main.c        **** int prevOctave = 0;
 160:main.c        **** uint8_t pluck_index = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 10


 161:main.c        **** volatile uint8_t amHere2 = 0;
 162:main.c        **** volatile uint8_t spiCounter2 = 0;
 163:main.c        **** volatile uint8_t newDataFlag2 = 0;
 164:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 165:main.c        **** volatile uint8_t currentBarBuffer = 0;
 166:main.c        **** volatile uint8_t pluckErrorCount = 0;
 167:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 168:main.c        **** 
 169:main.c        **** 
 170:main.c        **** 
 171:main.c        **** volatile uint8_t inputData = 0;
 172:main.c        **** 
 173:main.c        **** 
 174:main.c        **** union breakFloat {
 175:main.c        ****  float f;
 176:main.c        ****  uint8_t b[4];  
 177:main.c        ****  uint32_t u32;
 178:main.c        **** };
 179:main.c        **** 
 180:main.c        **** 
 181:main.c        **** CY_ISR(spis_1_ss)
 182:main.c        **** {
 354              		.loc 1 182 0
 355              		.cfi_startproc
 356              		@ args = 0, pretend = 0, frame = 8
 357              		@ frame_needed = 1, uses_anonymous_args = 0
 358 0000 90B5     		push	{r4, r7, lr}
 359              		.cfi_def_cfa_offset 12
 360              		.cfi_offset 4, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 83B0     		sub	sp, sp, #12
 364              		.cfi_def_cfa_offset 24
 365 0004 00AF     		add	r7, sp, #0
 366              		.cfi_def_cfa_register 7
 183:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 367              		.loc 1 183 0
 368 0006 554B     		ldr	r3, .L5
 369 0008 1B78     		ldrb	r3, [r3]
 370 000a DBB2     		uxtb	r3, r3
 371 000c 002B     		cmp	r3, #0
 372 000e 0CBF     		ite	eq
 373 0010 0123     		moveq	r3, #1
 374 0012 0023     		movne	r3, #0
 375 0014 DBB2     		uxtb	r3, r3
 376 0016 1A46     		mov	r2, r3
 377 0018 504B     		ldr	r3, .L5
 378 001a 1A70     		strb	r2, [r3]
 184:main.c        **** 
 185:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 379              		.loc 1 185 0
 380 001c 4F4B     		ldr	r3, .L5
 381 001e 1B78     		ldrb	r3, [r3]
 382 0020 DBB2     		uxtb	r3, r3
 383 0022 002B     		cmp	r3, #0
 384 0024 0CBF     		ite	eq
 385 0026 0123     		moveq	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 11


 386 0028 0023     		movne	r3, #0
 387 002a DBB2     		uxtb	r3, r3
 388 002c 1946     		mov	r1, r3
 389 002e 4C4A     		ldr	r2, .L5+4
 390 0030 1A23     		movs	r3, #26
 391 0032 03FB01F3 		mul	r3, r3, r1
 392 0036 1344     		add	r3, r3, r2
 393 0038 1B78     		ldrb	r3, [r3]
 394 003a DBB2     		uxtb	r3, r3
 395 003c FE2B     		cmp	r3, #254
 396 003e 4FD1     		bne	.L2
 397              		.loc 1 185 0 is_stmt 0 discriminator 1
 398 0040 464B     		ldr	r3, .L5
 399 0042 1B78     		ldrb	r3, [r3]
 400 0044 DBB2     		uxtb	r3, r3
 401 0046 002B     		cmp	r3, #0
 402 0048 0CBF     		ite	eq
 403 004a 0123     		moveq	r3, #1
 404 004c 0023     		movne	r3, #0
 405 004e DBB2     		uxtb	r3, r3
 406 0050 1946     		mov	r1, r3
 407 0052 434A     		ldr	r2, .L5+4
 408 0054 1A23     		movs	r3, #26
 409 0056 03FB01F3 		mul	r3, r3, r1
 410 005a 1344     		add	r3, r3, r2
 411 005c 1933     		adds	r3, r3, #25
 412 005e 1B78     		ldrb	r3, [r3]
 413 0060 DBB2     		uxtb	r3, r3
 414 0062 FD2B     		cmp	r3, #253
 415 0064 3CD1     		bne	.L2
 416              	.LBB2:
 186:main.c        ****     {
 187:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 417              		.loc 1 187 0 is_stmt 1
 418 0066 0023     		movs	r3, #0
 419 0068 7B60     		str	r3, [r7, #4]
 420 006a 34E0     		b	.L3
 421              	.L4:
 188:main.c        ****         {
 189:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 422              		.loc 1 189 0 discriminator 3
 423 006c 3B4B     		ldr	r3, .L5
 424 006e 1B78     		ldrb	r3, [r3]
 425 0070 DBB2     		uxtb	r3, r3
 426 0072 002B     		cmp	r3, #0
 427 0074 0CBF     		ite	eq
 428 0076 0123     		moveq	r3, #1
 429 0078 0023     		movne	r3, #0
 430 007a DBB2     		uxtb	r3, r3
 431 007c 1846     		mov	r0, r3
 432 007e 7B68     		ldr	r3, [r7, #4]
 433 0080 5B00     		lsls	r3, r3, #1
 434 0082 0133     		adds	r3, r3, #1
 435 0084 3649     		ldr	r1, .L5+4
 436 0086 1A22     		movs	r2, #26
 437 0088 02FB00F2 		mul	r2, r2, r0
 438 008c 0A44     		add	r2, r2, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 12


 439 008e 1344     		add	r3, r3, r2
 440 0090 1B78     		ldrb	r3, [r3]
 441 0092 DBB2     		uxtb	r3, r3
 442 0094 9BB2     		uxth	r3, r3
 443 0096 1B02     		lsls	r3, r3, #8
 444 0098 9AB2     		uxth	r2, r3
 445 009a 304B     		ldr	r3, .L5
 446 009c 1B78     		ldrb	r3, [r3]
 447 009e DBB2     		uxtb	r3, r3
 448 00a0 002B     		cmp	r3, #0
 449 00a2 0CBF     		ite	eq
 450 00a4 0123     		moveq	r3, #1
 451 00a6 0023     		movne	r3, #0
 452 00a8 DBB2     		uxtb	r3, r3
 453 00aa 1C46     		mov	r4, r3
 454 00ac 7B68     		ldr	r3, [r7, #4]
 455 00ae 0133     		adds	r3, r3, #1
 456 00b0 5B00     		lsls	r3, r3, #1
 457 00b2 2B48     		ldr	r0, .L5+4
 458 00b4 1A21     		movs	r1, #26
 459 00b6 01FB04F1 		mul	r1, r1, r4
 460 00ba 0144     		add	r1, r1, r0
 461 00bc 0B44     		add	r3, r3, r1
 462 00be 1B78     		ldrb	r3, [r3]
 463 00c0 DBB2     		uxtb	r3, r3
 464 00c2 9BB2     		uxth	r3, r3
 465 00c4 1344     		add	r3, r3, r2
 466 00c6 99B2     		uxth	r1, r3
 467 00c8 264A     		ldr	r2, .L5+8
 468 00ca 7B68     		ldr	r3, [r7, #4]
 469 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 187:main.c        ****         {
 470              		.loc 1 187 0 discriminator 3
 471 00d0 7B68     		ldr	r3, [r7, #4]
 472 00d2 0133     		adds	r3, r3, #1
 473 00d4 7B60     		str	r3, [r7, #4]
 474              	.L3:
 187:main.c        ****         {
 475              		.loc 1 187 0 is_stmt 0 discriminator 1
 476 00d6 244B     		ldr	r3, .L5+12
 477 00d8 1B68     		ldr	r3, [r3]
 478 00da 7A68     		ldr	r2, [r7, #4]
 479 00dc 9A42     		cmp	r2, r3
 480 00de C5DB     		blt	.L4
 481              	.L2:
 482              	.LBE2:
 190:main.c        ****         }
 191:main.c        ****     }
 192:main.c        ****     SPIS_1_ClearRxBuffer();
 483              		.loc 1 192 0 is_stmt 1
 484 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 193:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 485              		.loc 1 193 0
 486 00e4 214B     		ldr	r3, .L5+16
 487 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 488 00e8 1846     		mov	r0, r3
 489 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 13


 194:main.c        **** 
 195:main.c        ****     //set up the next DMA transaction
 196:main.c        **** 
 197:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 490              		.loc 1 197 0
 491 00ee 1B4B     		ldr	r3, .L5
 492 00f0 1B78     		ldrb	r3, [r3]
 493 00f2 DBB2     		uxtb	r3, r3
 494 00f4 1A46     		mov	r2, r3
 495 00f6 1E4B     		ldr	r3, .L5+20
 496 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 497 00fa 0223     		movs	r3, #2
 498 00fc FE22     		movs	r2, #254
 499 00fe 1A21     		movs	r1, #26
 500 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 198:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 501              		.loc 1 198 0
 502 0104 154B     		ldr	r3, .L5
 503 0106 1B78     		ldrb	r3, [r3]
 504 0108 DBB2     		uxtb	r3, r3
 505 010a 1A46     		mov	r2, r3
 506 010c 184B     		ldr	r3, .L5+20
 507 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 508 0110 124B     		ldr	r3, .L5
 509 0112 1B78     		ldrb	r3, [r3]
 510 0114 DBB2     		uxtb	r3, r3
 511 0116 1A46     		mov	r2, r3
 512 0118 1A23     		movs	r3, #26
 513 011a 03FB02F3 		mul	r3, r3, r2
 514 011e 104A     		ldr	r2, .L5+4
 515 0120 1344     		add	r3, r3, r2
 516 0122 9BB2     		uxth	r3, r3
 517 0124 1A46     		mov	r2, r3
 518 0126 46F25B41 		movw	r1, #25691
 519 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 199:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 520              		.loc 1 199 0
 521 012e 0F4B     		ldr	r3, .L5+16
 522 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 523 0132 0A4B     		ldr	r3, .L5
 524 0134 1B78     		ldrb	r3, [r3]
 525 0136 DBB2     		uxtb	r3, r3
 526 0138 1946     		mov	r1, r3
 527 013a 0D4B     		ldr	r3, .L5+20
 528 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 529 013e 1946     		mov	r1, r3
 530 0140 1046     		mov	r0, r2
 531 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 200:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 532              		.loc 1 200 0
 533 0146 094B     		ldr	r3, .L5+16
 534 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 535 014a 0121     		movs	r1, #1
 536 014c 1846     		mov	r0, r3
 537 014e FFF7FEFF 		bl	CyDmaChEnable
 201:main.c        **** 
 202:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 14


 538              		.loc 1 202 0
 539 0152 00BF     		nop
 540 0154 0C37     		adds	r7, r7, #12
 541              		.cfi_def_cfa_offset 12
 542 0156 BD46     		mov	sp, r7
 543              		.cfi_def_cfa_register 13
 544              		@ sp needed
 545 0158 90BD     		pop	{r4, r7, pc}
 546              	.L6:
 547 015a 00BF     		.align	2
 548              	.L5:
 549 015c 00000000 		.word	currentPluckBuffer
 550 0160 00000000 		.word	rxBufferPluck
 551 0164 00000000 		.word	strings
 552 0168 00000000 		.word	numStrings
 553 016c 00000000 		.word	rx1Channel
 554 0170 00000000 		.word	rx1TD
 555              		.cfi_endproc
 556              	.LFE64:
 557              		.size	spis_1_ss, .-spis_1_ss
 558              		.global	spiAdjusted
 559              		.bss
 560              		.type	spiAdjusted, %object
 561              		.size	spiAdjusted, 1
 562              	spiAdjusted:
 563 0053 00       		.space	1
 564              		.global	mySpiCounter
 565              		.type	mySpiCounter, %object
 566              		.size	mySpiCounter, 1
 567              	mySpiCounter:
 568 0054 00       		.space	1
 569              		.global	offsetErrorCount
 570 0055 00       		.align	1
 571              		.type	offsetErrorCount, %object
 572              		.size	offsetErrorCount, 2
 573              	offsetErrorCount:
 574 0056 0000     		.space	2
 575              		.global	SPI2errorflag
 576              		.type	SPI2errorflag, %object
 577              		.size	SPI2errorflag, 1
 578              	SPI2errorflag:
 579 0058 00       		.space	1
 580              		.global	bar_index
 581 0059 000000   		.align	2
 582              		.type	bar_index, %object
 583              		.size	bar_index, 4
 584              	bar_index:
 585 005c 00000000 		.space	4
 586              		.comm	knobs,4,4
 587              		.comm	prevKnobs,4,4
 588              		.comm	knobs7bit,4,4
 589              		.comm	prevKnobs7bit,4,4
 590              		.global	u7bit_volumePedal
 591              		.type	u7bit_volumePedal, %object
 592              		.size	u7bit_volumePedal, 1
 593              	u7bit_volumePedal:
 594 0060 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 15


 595              		.global	prev_7bit_volumePedal
 596              		.type	prev_7bit_volumePedal, %object
 597              		.size	prev_7bit_volumePedal, 1
 598              	prev_7bit_volumePedal:
 599 0061 00       		.space	1
 600              		.global	SPI2started
 601              		.type	SPI2started, %object
 602              		.size	SPI2started, 1
 603              	SPI2started:
 604 0062 00       		.space	1
 605              		.global	whichMacro
 606              		.type	whichMacro, %object
 607              		.size	whichMacro, 1
 608              	whichMacro:
 609 0063 00       		.space	1
 610              		.comm	macroKnobValues7bit,8,4
 611              		.comm	prevMacroKnobValues7bit,8,4
 612              		.section	.text.spis_2_ss,"ax",%progbits
 613              		.align	2
 614              		.global	spis_2_ss
 615              		.thumb
 616              		.thumb_func
 617              		.type	spis_2_ss, %function
 618              	spis_2_ss:
 619              	.LFB65:
 203:main.c        **** 
 204:main.c        **** 
 205:main.c        **** 
 206:main.c        **** uint8_t spiAdjusted = 0;
 207:main.c        **** uint8_t mySpiCounter = 0;
 208:main.c        **** volatile uint16_t offsetErrorCount = 0;
 209:main.c        **** volatile uint8_t SPI2errorflag = 0;
 210:main.c        **** volatile int bar_index = 0;
 211:main.c        **** uint8_t knobs[4];
 212:main.c        **** uint8_t prevKnobs[4];
 213:main.c        **** 
 214:main.c        **** uint8_t knobs7bit[4];
 215:main.c        **** uint8_t prevKnobs7bit[4];
 216:main.c        **** 
 217:main.c        **** uint8_t u7bit_volumePedal = 0;
 218:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 219:main.c        **** volatile uint8_t SPI2started = 0;
 220:main.c        **** 
 221:main.c        **** uint8_t whichMacro = 0;
 222:main.c        **** 
 223:main.c        **** uint8_t macroKnobValues7bit[8];
 224:main.c        **** uint8_t prevMacroKnobValues7bit[8];
 225:main.c        **** 
 226:main.c        **** CY_ISR(spis_2_ss)
 227:main.c        **** {
 620              		.loc 1 227 0
 621              		.cfi_startproc
 622              		@ args = 0, pretend = 0, frame = 0
 623              		@ frame_needed = 1, uses_anonymous_args = 0
 624 0000 80B5     		push	{r7, lr}
 625              		.cfi_def_cfa_offset 8
 626              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 16


 627              		.cfi_offset 14, -4
 628 0002 00AF     		add	r7, sp, #0
 629              		.cfi_def_cfa_register 7
 228:main.c        **** 
 229:main.c        ****     currentBarBuffer = !currentBarBuffer;
 630              		.loc 1 229 0
 631 0004 214B     		ldr	r3, .L8
 632 0006 1B78     		ldrb	r3, [r3]
 633 0008 DBB2     		uxtb	r3, r3
 634 000a 002B     		cmp	r3, #0
 635 000c 0CBF     		ite	eq
 636 000e 0123     		moveq	r3, #1
 637 0010 0023     		movne	r3, #0
 638 0012 DBB2     		uxtb	r3, r3
 639 0014 1A46     		mov	r2, r3
 640 0016 1D4B     		ldr	r3, .L8
 641 0018 1A70     		strb	r2, [r3]
 230:main.c        ****     SPIS_2_ClearRxBuffer();
 642              		.loc 1 230 0
 643 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 231:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 644              		.loc 1 231 0
 645 001e 1C4B     		ldr	r3, .L8+4
 646 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 647 0022 1846     		mov	r0, r3
 648 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 232:main.c        **** 
 233:main.c        ****     //set up the next DMA transaction
 234:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 649              		.loc 1 234 0
 650 0028 184B     		ldr	r3, .L8
 651 002a 1B78     		ldrb	r3, [r3]
 652 002c DBB2     		uxtb	r3, r3
 653 002e 1A46     		mov	r2, r3
 654 0030 184B     		ldr	r3, .L8+8
 655 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 656 0034 0623     		movs	r3, #6
 657 0036 FE22     		movs	r2, #254
 658 0038 0821     		movs	r1, #8
 659 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 235:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 660              		.loc 1 235 0
 661 003e 134B     		ldr	r3, .L8
 662 0040 1B78     		ldrb	r3, [r3]
 663 0042 DBB2     		uxtb	r3, r3
 664 0044 1A46     		mov	r2, r3
 665 0046 134B     		ldr	r3, .L8+8
 666 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 667 004a 104B     		ldr	r3, .L8
 668 004c 1B78     		ldrb	r3, [r3]
 669 004e DBB2     		uxtb	r3, r3
 670 0050 DB00     		lsls	r3, r3, #3
 671 0052 114A     		ldr	r2, .L8+12
 672 0054 1344     		add	r3, r3, r2
 673 0056 9BB2     		uxth	r3, r3
 674 0058 1A46     		mov	r2, r3
 675 005a 46F25751 		movw	r1, #25943
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 17


 676 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 236:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 677              		.loc 1 236 0
 678 0062 0B4B     		ldr	r3, .L8+4
 679 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 680 0066 094B     		ldr	r3, .L8
 681 0068 1B78     		ldrb	r3, [r3]
 682 006a DBB2     		uxtb	r3, r3
 683 006c 1946     		mov	r1, r3
 684 006e 094B     		ldr	r3, .L8+8
 685 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 686 0072 1946     		mov	r1, r3
 687 0074 1046     		mov	r0, r2
 688 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 237:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 689              		.loc 1 237 0
 690 007a 054B     		ldr	r3, .L8+4
 691 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 692 007e 0121     		movs	r1, #1
 693 0080 1846     		mov	r0, r3
 694 0082 FFF7FEFF 		bl	CyDmaChEnable
 238:main.c        **** }
 695              		.loc 1 238 0
 696 0086 00BF     		nop
 697 0088 80BD     		pop	{r7, pc}
 698              	.L9:
 699 008a 00BF     		.align	2
 700              	.L8:
 701 008c 00000000 		.word	currentBarBuffer
 702 0090 00000000 		.word	rx2Channel
 703 0094 00000000 		.word	rx2TD
 704 0098 00000000 		.word	rxBufferBar
 705              		.cfi_endproc
 706              	.LFE65:
 707              		.size	spis_2_ss, .-spis_2_ss
 708              		.bss
 709              		.align	2
 710              	eepromArray:
 711 0064 0000     		.space	2
 712              		.global	array
 713 0066 0000     		.align	2
 714              		.type	array, %object
 715              		.size	array, 2
 716              	array:
 717 0068 0000     		.space	2
 718              		.comm	eepromReturnValue,1,1
 719              		.global	Em_EEPROM_em_EepromStorage
 720              		.section	.rodata
 721              		.align	8
 722              		.type	Em_EEPROM_em_EepromStorage, %object
 723              		.size	Em_EEPROM_em_EepromStorage, 1024
 724              	Em_EEPROM_em_EepromStorage:
 725 0000 00000000 		.space	1024
 725      00000000 
 725      00000000 
 725      00000000 
 725      00000000 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 18


 726              		.comm	eeprom_cnt,1,1
 727              		.comm	status,4,4
 728              		.comm	ptr,4,4
 729              		.global	barCount
 730              		.bss
 731 006a 0000     		.align	2
 732              		.type	barCount, %object
 733              		.size	barCount, 4
 734              	barCount:
 735 006c 00000000 		.space	4
 736              		.section	.text.Vbus_function,"ax",%progbits
 737              		.align	2
 738              		.global	Vbus_function
 739              		.thumb
 740              		.thumb_func
 741              		.type	Vbus_function, %function
 742              	Vbus_function:
 743              	.LFB66:
 239:main.c        **** 
 240:main.c        **** 
 241:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 242:main.c        ****                                             
 243:main.c        ****     uint8 array[] ={ 0, 0 };
 244:main.c        ****                                 
 245:main.c        ****     /*Return status for EEPROM and UART*/ 
 246:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 247:main.c        **** 
 248:main.c        **** 
 249:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 250:main.c        **** #if defined (__ICCARM__)
 251:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 252:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 253:main.c        **** #else
 254:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 255:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 256:main.c        **** #endif /* defined (__ICCARM__) */
 257:main.c        **** 
 258:main.c        ****     uint8 eeprom_cnt;
 259:main.c        ****     cystatus status;
 260:main.c        ****     volatile const uint8 * ptr;
 261:main.c        **** volatile int barCount = 0;
 262:main.c        **** 
 263:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 264:main.c        ****     
 265:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 266:main.c        **** 
 267:main.c        **** CY_ISR(Vbus_function)
 268:main.c        **** {
 744              		.loc 1 268 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 19


 753              		.cfi_def_cfa_register 7
 269:main.c        ****     //plug or unplug event
 270:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 271:main.c        ****     //otherwise, restart
 272:main.c        ****     my_Vbus_ISR_ClearPending();
 754              		.loc 1 272 0
 755 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 273:main.c        ****     vBusPin_ClearInterrupt();
 756              		.loc 1 273 0
 757 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 274:main.c        ****     restartSystemCheck();
 758              		.loc 1 274 0
 759 000c FFF7FEFF 		bl	restartSystemCheck
 275:main.c        **** 
 276:main.c        **** }
 760              		.loc 1 276 0
 761 0010 00BF     		nop
 762 0012 80BD     		pop	{r7, pc}
 763              		.cfi_endproc
 764              	.LFE66:
 765              		.size	Vbus_function, .-Vbus_function
 766              		.section	.text.restartSystemCheck,"ax",%progbits
 767              		.align	2
 768              		.global	restartSystemCheck
 769              		.thumb
 770              		.thumb_func
 771              		.type	restartSystemCheck, %function
 772              	restartSystemCheck:
 773              	.LFB67:
 277:main.c        **** 
 278:main.c        **** void restartSystemCheck()
 279:main.c        **** {
 774              		.loc 1 279 0
 775              		.cfi_startproc
 776              		@ args = 0, pretend = 0, frame = 0
 777              		@ frame_needed = 1, uses_anonymous_args = 0
 778 0000 80B5     		push	{r7, lr}
 779              		.cfi_def_cfa_offset 8
 780              		.cfi_offset 7, -8
 781              		.cfi_offset 14, -4
 782 0002 00AF     		add	r7, sp, #0
 783              		.cfi_def_cfa_register 7
 280:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 784              		.loc 1 280 0
 785 0004 184B     		ldr	r3, .L15
 786 0006 0222     		movs	r2, #2
 787 0008 1849     		ldr	r1, .L15+4
 788 000a 0020     		movs	r0, #0
 789 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 790 0010 0346     		mov	r3, r0
 791 0012 1A46     		mov	r2, r3
 792 0014 164B     		ldr	r3, .L15+8
 793 0016 1A70     		strb	r2, [r3]
 281:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 282:main.c        ****     if (USB_VBusPresent() == 1)
 794              		.loc 1 282 0
 795 0018 FFF7FEFF 		bl	USB_VBusPresent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 20


 796 001c 0346     		mov	r3, r0
 797 001e 012B     		cmp	r3, #1
 798 0020 20D1     		bne	.L14
 283:main.c        ****     {
 284:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 799              		.loc 1 284 0
 800 0022 124B     		ldr	r3, .L15+4
 801 0024 1B78     		ldrb	r3, [r3]
 802 0026 DBB2     		uxtb	r3, r3
 803 0028 012B     		cmp	r3, #1
 804 002a 0CD1     		bne	.L13
 285:main.c        ****         {
 286:main.c        ****             //a flag says we just restarted
 287:main.c        ****             //write a zero so it knows next time that it's OK to restart
 288:main.c        ****             array[0] = 0;
 805              		.loc 1 288 0
 806 002c 114B     		ldr	r3, .L15+12
 807 002e 0022     		movs	r2, #0
 808 0030 1A70     		strb	r2, [r3]
 289:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 809              		.loc 1 289 0
 810 0032 0D4B     		ldr	r3, .L15
 811 0034 0222     		movs	r2, #2
 812 0036 0F49     		ldr	r1, .L15+12
 813 0038 0020     		movs	r0, #0
 814 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 290:main.c        ****             USB_check_flag = 1;
 815              		.loc 1 290 0
 816 003e 0E4B     		ldr	r3, .L15+16
 817 0040 0122     		movs	r2, #1
 818 0042 1A70     		strb	r2, [r3]
 291:main.c        ****         }
 292:main.c        ****         else
 293:main.c        ****         {
 294:main.c        ****            //otherwise, we need to restart
 295:main.c        ****            array[0] = 1;
 296:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 297:main.c        ****             USB_Stop();
 298:main.c        ****             I2C_1_Stop();
 299:main.c        ****             CySoftwareReset();
 300:main.c        ****         }
 301:main.c        ****     }
 302:main.c        **** }
 819              		.loc 1 302 0
 820 0044 0EE0     		b	.L14
 821              	.L13:
 295:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 822              		.loc 1 295 0
 823 0046 0B4B     		ldr	r3, .L15+12
 824 0048 0122     		movs	r2, #1
 825 004a 1A70     		strb	r2, [r3]
 296:main.c        ****             USB_Stop();
 826              		.loc 1 296 0
 827 004c 064B     		ldr	r3, .L15
 828 004e 0222     		movs	r2, #2
 829 0050 0849     		ldr	r1, .L15+12
 830 0052 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 21


 831 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 297:main.c        ****             I2C_1_Stop();
 832              		.loc 1 297 0
 833 0058 FFF7FEFF 		bl	USB_Stop
 298:main.c        ****             CySoftwareReset();
 834              		.loc 1 298 0
 835 005c FFF7FEFF 		bl	I2C_1_Stop
 299:main.c        ****         }
 836              		.loc 1 299 0
 837 0060 FFF7FEFF 		bl	CySoftwareReset
 838              	.L14:
 839              		.loc 1 302 0
 840 0064 00BF     		nop
 841 0066 80BD     		pop	{r7, pc}
 842              	.L16:
 843              		.align	2
 844              	.L15:
 845 0068 00000000 		.word	Em_EEPROM_context
 846 006c 64000000 		.word	eepromArray
 847 0070 00000000 		.word	eepromReturnValue
 848 0074 00000000 		.word	array
 849 0078 00000000 		.word	USB_check_flag
 850              		.cfi_endproc
 851              	.LFE67:
 852              		.size	restartSystemCheck, .-restartSystemCheck
 853              		.global	__aeabi_fcmpgt
 854              		.global	__aeabi_fcmplt
 855              		.section	.text.LEAF_clip,"ax",%progbits
 856              		.align	2
 857              		.global	LEAF_clip
 858              		.thumb
 859              		.thumb_func
 860              		.type	LEAF_clip, %function
 861              	LEAF_clip:
 862              	.LFB68:
 303:main.c        ****     
 304:main.c        **** #define INV_440 0.0022727272727273f
 305:main.c        **** 
 306:main.c        **** float   LEAF_clip(float min, float val, float max)
 307:main.c        **** {
 863              		.loc 1 307 0
 864              		.cfi_startproc
 865              		@ args = 0, pretend = 0, frame = 24
 866              		@ frame_needed = 1, uses_anonymous_args = 0
 867 0000 80B5     		push	{r7, lr}
 868              		.cfi_def_cfa_offset 8
 869              		.cfi_offset 7, -8
 870              		.cfi_offset 14, -4
 871 0002 86B0     		sub	sp, sp, #24
 872              		.cfi_def_cfa_offset 32
 873 0004 00AF     		add	r7, sp, #0
 874              		.cfi_def_cfa_register 7
 875 0006 F860     		str	r0, [r7, #12]	@ float
 876 0008 B960     		str	r1, [r7, #8]	@ float
 877 000a 7A60     		str	r2, [r7, #4]	@ float
 308:main.c        ****     float tempmin = min;
 878              		.loc 1 308 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 22


 879 000c FB68     		ldr	r3, [r7, #12]	@ float
 880 000e 7B61     		str	r3, [r7, #20]	@ float
 309:main.c        ****     float tempmax = max;
 881              		.loc 1 309 0
 882 0010 7B68     		ldr	r3, [r7, #4]	@ float
 883 0012 3B61     		str	r3, [r7, #16]	@ float
 310:main.c        ****     if (min > max)
 884              		.loc 1 310 0
 885 0014 7968     		ldr	r1, [r7, #4]	@ float
 886 0016 F868     		ldr	r0, [r7, #12]	@ float
 887 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 888 001c 0346     		mov	r3, r0
 889 001e 002B     		cmp	r3, #0
 890 0020 03D0     		beq	.L18
 311:main.c        ****     {
 312:main.c        ****         tempmin = max;
 891              		.loc 1 312 0
 892 0022 7B68     		ldr	r3, [r7, #4]	@ float
 893 0024 7B61     		str	r3, [r7, #20]	@ float
 313:main.c        ****         tempmax = min;
 894              		.loc 1 313 0
 895 0026 FB68     		ldr	r3, [r7, #12]	@ float
 896 0028 3B61     		str	r3, [r7, #16]	@ float
 897              	.L18:
 314:main.c        ****     }
 315:main.c        ****     if (val < tempmin)
 898              		.loc 1 315 0
 899 002a 7969     		ldr	r1, [r7, #20]	@ float
 900 002c B868     		ldr	r0, [r7, #8]	@ float
 901 002e FFF7FEFF 		bl	__aeabi_fcmplt
 902 0032 0346     		mov	r3, r0
 903 0034 002B     		cmp	r3, #0
 904 0036 01D0     		beq	.L28
 316:main.c        ****     {
 317:main.c        ****         return tempmin;
 905              		.loc 1 317 0
 906 0038 7B69     		ldr	r3, [r7, #20]	@ float
 907 003a 09E0     		b	.L22
 908              	.L28:
 318:main.c        ****     }
 319:main.c        ****     else if (val > tempmax)
 909              		.loc 1 319 0
 910 003c 3969     		ldr	r1, [r7, #16]	@ float
 911 003e B868     		ldr	r0, [r7, #8]	@ float
 912 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 913 0044 0346     		mov	r3, r0
 914 0046 002B     		cmp	r3, #0
 915 0048 01D0     		beq	.L29
 320:main.c        ****     {
 321:main.c        ****         return tempmax;
 916              		.loc 1 321 0
 917 004a 3B69     		ldr	r3, [r7, #16]	@ float
 918 004c 00E0     		b	.L22
 919              	.L29:
 322:main.c        ****     }
 323:main.c        ****     else
 324:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 23


 325:main.c        ****         return val;
 920              		.loc 1 325 0
 921 004e BB68     		ldr	r3, [r7, #8]	@ float
 922              	.L22:
 326:main.c        ****     }
 327:main.c        **** }
 923              		.loc 1 327 0
 924 0050 1846     		mov	r0, r3
 925 0052 1837     		adds	r7, r7, #24
 926              		.cfi_def_cfa_offset 8
 927 0054 BD46     		mov	sp, r7
 928              		.cfi_def_cfa_register 13
 929              		@ sp needed
 930 0056 80BD     		pop	{r7, pc}
 931              		.cfi_endproc
 932              	.LFE68:
 933              		.size	LEAF_clip, .-LEAF_clip
 934              		.global	__aeabi_fcmple
 935              		.global	__aeabi_fmul
 936              		.section	.text.mtof,"ax",%progbits
 937              		.align	2
 938              		.global	mtof
 939              		.thumb
 940              		.thumb_func
 941              		.type	mtof, %function
 942              	mtof:
 943              	.LFB69:
 328:main.c        **** float mtof(float f)
 329:main.c        **** {
 944              		.loc 1 329 0
 945              		.cfi_startproc
 946              		@ args = 0, pretend = 0, frame = 8
 947              		@ frame_needed = 1, uses_anonymous_args = 0
 948 0000 80B5     		push	{r7, lr}
 949              		.cfi_def_cfa_offset 8
 950              		.cfi_offset 7, -8
 951              		.cfi_offset 14, -4
 952 0002 82B0     		sub	sp, sp, #8
 953              		.cfi_def_cfa_offset 16
 954 0004 00AF     		add	r7, sp, #0
 955              		.cfi_def_cfa_register 7
 956 0006 7860     		str	r0, [r7, #4]	@ float
 330:main.c        ****     if (f <= -1500.0f) return(0);
 957              		.loc 1 330 0
 958 0008 1349     		ldr	r1, .L40
 959 000a 7868     		ldr	r0, [r7, #4]	@ float
 960 000c FFF7FEFF 		bl	__aeabi_fcmple
 961 0010 0346     		mov	r3, r0
 962 0012 002B     		cmp	r3, #0
 963 0014 02D0     		beq	.L38
 964              		.loc 1 330 0 is_stmt 0 discriminator 1
 965 0016 4FF00003 		mov	r3, #0
 966 001a 19E0     		b	.L33
 967              	.L38:
 331:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 968              		.loc 1 331 0 is_stmt 1
 969 001c 0F49     		ldr	r1, .L40+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 24


 970 001e 7868     		ldr	r0, [r7, #4]	@ float
 971 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 972 0024 0346     		mov	r3, r0
 973 0026 002B     		cmp	r3, #0
 974 0028 04D0     		beq	.L39
 975              		.loc 1 331 0 is_stmt 0 discriminator 1
 976 002a 0C48     		ldr	r0, .L40+4
 977 002c FFF7FEFF 		bl	mtof
 978 0030 0346     		mov	r3, r0
 979 0032 0DE0     		b	.L33
 980              	.L39:
 332:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 981              		.loc 1 332 0 is_stmt 1
 982 0034 0A49     		ldr	r1, .L40+8
 983 0036 7868     		ldr	r0, [r7, #4]	@ float
 984 0038 FFF7FEFF 		bl	__aeabi_fmul
 985 003c 0346     		mov	r3, r0
 986 003e 1846     		mov	r0, r3
 987 0040 FFF7FEFF 		bl	expf
 988 0044 0346     		mov	r3, r0
 989 0046 0749     		ldr	r1, .L40+12
 990 0048 1846     		mov	r0, r3
 991 004a FFF7FEFF 		bl	__aeabi_fmul
 992 004e 0346     		mov	r3, r0
 993              	.L33:
 333:main.c        **** }
 994              		.loc 1 333 0
 995 0050 1846     		mov	r0, r3
 996 0052 0837     		adds	r7, r7, #8
 997              		.cfi_def_cfa_offset 8
 998 0054 BD46     		mov	sp, r7
 999              		.cfi_def_cfa_register 13
 1000              		@ sp needed
 1001 0056 80BD     		pop	{r7, pc}
 1002              	.L41:
 1003              		.align	2
 1004              	.L40:
 1005 0058 0080BBC4 		.word	-994344960
 1006 005c 0060BB44 		.word	1153130496
 1007 0060 20986C3D 		.word	1030527008
 1008 0064 13D00241 		.word	1090703379
 1009              		.cfi_endproc
 1010              	.LFE69:
 1011              		.size	mtof, .-mtof
 1012              		.section	.text.ftom,"ax",%progbits
 1013              		.align	2
 1014              		.global	ftom
 1015              		.thumb
 1016              		.thumb_func
 1017              		.type	ftom, %function
 1018              	ftom:
 1019              	.LFB70:
 334:main.c        **** 
 335:main.c        **** float ftom(float f)
 336:main.c        **** {
 1020              		.loc 1 336 0
 1021              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 25


 1022              		@ args = 0, pretend = 0, frame = 8
 1023              		@ frame_needed = 1, uses_anonymous_args = 0
 1024 0000 80B5     		push	{r7, lr}
 1025              		.cfi_def_cfa_offset 8
 1026              		.cfi_offset 7, -8
 1027              		.cfi_offset 14, -4
 1028 0002 82B0     		sub	sp, sp, #8
 1029              		.cfi_def_cfa_offset 16
 1030 0004 00AF     		add	r7, sp, #0
 1031              		.cfi_def_cfa_register 7
 1032 0006 7860     		str	r0, [r7, #4]	@ float
 337:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 1033              		.loc 1 337 0
 1034 0008 4FF00001 		mov	r1, #0
 1035 000c 7868     		ldr	r0, [r7, #4]	@ float
 1036 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 1037 0012 0346     		mov	r3, r0
 1038 0014 002B     		cmp	r3, #0
 1039 0016 0ED0     		beq	.L48
 1040              		.loc 1 337 0 is_stmt 0 discriminator 1
 1041 0018 0949     		ldr	r1, .L49
 1042 001a 7868     		ldr	r0, [r7, #4]	@ float
 1043 001c FFF7FEFF 		bl	__aeabi_fmul
 1044 0020 0346     		mov	r3, r0
 1045 0022 1846     		mov	r0, r3
 1046 0024 FFF7FEFF 		bl	logf
 1047 0028 0346     		mov	r3, r0
 1048 002a 0649     		ldr	r1, .L49+4
 1049 002c 1846     		mov	r0, r3
 1050 002e FFF7FEFF 		bl	__aeabi_fmul
 1051 0032 0346     		mov	r3, r0
 1052 0034 00E0     		b	.L46
 1053              	.L48:
 1054              		.loc 1 337 0 discriminator 2
 1055 0036 044B     		ldr	r3, .L49+8
 1056              	.L46:
 338:main.c        **** }
 1057              		.loc 1 338 0 is_stmt 1 discriminator 5
 1058 0038 1846     		mov	r0, r3
 1059 003a 0837     		adds	r7, r7, #8
 1060              		.cfi_def_cfa_offset 8
 1061 003c BD46     		mov	sp, r7
 1062              		.cfi_def_cfa_register 13
 1063              		@ sp needed
 1064 003e 80BD     		pop	{r7, pc}
 1065              	.L50:
 1066              		.align	2
 1067              	.L49:
 1068 0040 D27EFA3D 		.word	1039826642
 1069 0044 AC7F8A41 		.word	1099595692
 1070 0048 0080BBC4 		.word	-994344960
 1071              		.cfi_endproc
 1072              	.LFE70:
 1073              		.size	ftom, .-ftom
 1074              		.global	__aeabi_fsub
 1075              		.global	__aeabi_fadd
 1076              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 26


 1077              		.align	2
 1078              		.global	LEAF_interpolation_linear
 1079              		.thumb
 1080              		.thumb_func
 1081              		.type	LEAF_interpolation_linear, %function
 1082              	LEAF_interpolation_linear:
 1083              	.LFB71:
 339:main.c        **** 
 340:main.c        **** // alpha, [0.0, 1.0]
 341:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 342:main.c        **** {
 1084              		.loc 1 342 0
 1085              		.cfi_startproc
 1086              		@ args = 0, pretend = 0, frame = 24
 1087              		@ frame_needed = 1, uses_anonymous_args = 0
 1088 0000 80B5     		push	{r7, lr}
 1089              		.cfi_def_cfa_offset 8
 1090              		.cfi_offset 7, -8
 1091              		.cfi_offset 14, -4
 1092 0002 86B0     		sub	sp, sp, #24
 1093              		.cfi_def_cfa_offset 32
 1094 0004 00AF     		add	r7, sp, #0
 1095              		.cfi_def_cfa_register 7
 1096 0006 F860     		str	r0, [r7, #12]	@ float
 1097 0008 B960     		str	r1, [r7, #8]	@ float
 1098 000a 7A60     		str	r2, [r7, #4]	@ float
 343:main.c        ****     float omAlpha = 1.0f - alpha;
 1099              		.loc 1 343 0
 1100 000c 7968     		ldr	r1, [r7, #4]	@ float
 1101 000e 4FF07E50 		mov	r0, #1065353216
 1102 0012 FFF7FEFF 		bl	__aeabi_fsub
 1103 0016 0346     		mov	r3, r0
 1104 0018 7B61     		str	r3, [r7, #20]	@ float
 344:main.c        ****     
 345:main.c        ****     // First 1/2 of interpolation
 346:main.c        ****     float out = A * omAlpha;
 1105              		.loc 1 346 0
 1106 001a 7969     		ldr	r1, [r7, #20]	@ float
 1107 001c F868     		ldr	r0, [r7, #12]	@ float
 1108 001e FFF7FEFF 		bl	__aeabi_fmul
 1109 0022 0346     		mov	r3, r0
 1110 0024 3B61     		str	r3, [r7, #16]	@ float
 347:main.c        ****     
 348:main.c        ****     out += B * alpha;
 1111              		.loc 1 348 0
 1112 0026 7968     		ldr	r1, [r7, #4]	@ float
 1113 0028 B868     		ldr	r0, [r7, #8]	@ float
 1114 002a FFF7FEFF 		bl	__aeabi_fmul
 1115 002e 0346     		mov	r3, r0
 1116 0030 1946     		mov	r1, r3
 1117 0032 3869     		ldr	r0, [r7, #16]	@ float
 1118 0034 FFF7FEFF 		bl	__aeabi_fadd
 1119 0038 0346     		mov	r3, r0
 1120 003a 3B61     		str	r3, [r7, #16]	@ float
 349:main.c        ****     
 350:main.c        ****     return out;
 1121              		.loc 1 350 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 27


 1122 003c 3B69     		ldr	r3, [r7, #16]	@ float
 351:main.c        **** }
 1123              		.loc 1 351 0
 1124 003e 1846     		mov	r0, r3
 1125 0040 1837     		adds	r7, r7, #24
 1126              		.cfi_def_cfa_offset 8
 1127 0042 BD46     		mov	sp, r7
 1128              		.cfi_def_cfa_register 13
 1129              		@ sp needed
 1130 0044 80BD     		pop	{r7, pc}
 1131              		.cfi_endproc
 1132              	.LFE71:
 1133              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1134              		.comm	I2Cbuff1,256,4
 1135              		.comm	I2Cbuff2,16,4
 1136              		.global	send_it
 1137 0046 00BF     		.bss
 1138              		.type	send_it, %object
 1139              		.size	send_it, 1
 1140              	send_it:
 1141 0070 00       		.space	1
 1142              		.global	mux_states
 1143              		.data
 1144 000a 0000     		.align	2
 1145              		.type	mux_states, %object
 1146              		.size	mux_states, 24
 1147              	mux_states:
 1148 000c 05       		.byte	5
 1149 000d 00       		.byte	0
 1150 000e 05       		.byte	5
 1151 000f 01       		.byte	1
 1152 0010 05       		.byte	5
 1153 0011 02       		.byte	2
 1154 0012 05       		.byte	5
 1155 0013 03       		.byte	3
 1156 0014 05       		.byte	5
 1157 0015 04       		.byte	4
 1158 0016 00       		.byte	0
 1159 0017 00       		.byte	0
 1160 0018 01       		.byte	1
 1161 0019 00       		.byte	0
 1162 001a 03       		.byte	3
 1163 001b 00       		.byte	0
 1164 001c 04       		.byte	4
 1165 001d 00       		.byte	0
 1166 001e 02       		.byte	2
 1167 001f 00       		.byte	0
 1168 0020 05       		.byte	5
 1169 0021 05       		.byte	5
 1170 0022 06       		.byte	6
 1171 0023 00       		.byte	0
 1172              		.global	i2c_skipped
 1173              		.bss
 1174 0071 000000   		.align	2
 1175              		.type	i2c_skipped, %object
 1176              		.size	i2c_skipped, 12
 1177              	i2c_skipped:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 28


 1178 0074 00000000 		.space	12
 1178      00000000 
 1178      00000000 
 1179              		.global	pedals_low
 1180              		.data
 1181              		.align	2
 1182              		.type	pedals_low, %object
 1183              		.size	pedals_low, 20
 1184              	pedals_low:
 1185 0024 830A     		.short	2691
 1186 0026 0109     		.short	2305
 1187 0028 9909     		.short	2457
 1188 002a 0E02     		.short	526
 1189 002c 9A0E     		.short	3738
 1190 002e 0309     		.short	2307
 1191 0030 C60B     		.short	3014
 1192 0032 8E08     		.short	2190
 1193 0034 E90A     		.short	2793
 1194 0036 2605     		.short	1318
 1195              		.global	pedals_high
 1196              		.align	2
 1197              		.type	pedals_high, %object
 1198              		.size	pedals_high, 20
 1199              	pedals_high:
 1200 0038 ED0A     		.short	2797
 1201 003a 6509     		.short	2405
 1202 003c 140A     		.short	2580
 1203 003e 8702     		.short	647
 1204 0040 0E0F     		.short	3854
 1205 0042 9D09     		.short	2461
 1206 0044 450C     		.short	3141
 1207 0046 3109     		.short	2353
 1208 0048 760B     		.short	2934
 1209 004a E005     		.short	1504
 1210              		.global	deadzone
 1211              		.align	1
 1212              		.type	deadzone, %object
 1213              		.size	deadzone, 2
 1214              	deadzone:
 1215 004c 9600     		.short	150
 1216              		.global	volumePedal
 1217              		.align	1
 1218              		.type	volumePedal, %object
 1219              		.size	volumePedal, 2
 1220              	volumePedal:
 1221 004e FF0F     		.short	4095
 1222              		.comm	processed_pedals,20,4
 1223              		.comm	prev_processed_pedals,20,4
 1224              		.comm	pedals8bit,10,4
 1225              		.comm	pedals7bit,10,4
 1226              		.comm	prevPedals7bit,10,4
 1227              		.comm	prev_processed_volumePedal,2,2
 1228              		.comm	processed_volumePedal,2,2
 1229              		.global	fretMeasurements
 1230              		.align	2
 1231              		.type	fretMeasurements, %object
 1232              		.size	fretMeasurements, 64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 29


 1233              	fretMeasurements:
 1234 0050 001E7547 		.word	1198857728
 1235 0054 00A07047 		.word	1198563328
 1236 0058 0052F846 		.word	1190679040
 1237 005c 00000000 		.word	0
 1238 0060 00B01A47 		.word	1192931328
 1239 0064 001C2247 		.word	1193417728
 1240 0068 00507546 		.word	1182093312
 1241 006c 00000000 		.word	0
 1242 0070 0000D746 		.word	1188495360
 1243 0074 00F0EB46 		.word	1189867520
 1244 0078 00280446 		.word	1174677504
 1245 007c 00000000 		.word	0
 1246 0080 00481446 		.word	1175734272
 1247 0084 00805446 		.word	1179942912
 1248 0088 00202745 		.word	1160192000
 1249 008c 00000000 		.word	0
 1250              		.global	currentPresetSelection
 1251              		.bss
 1252              		.align	2
 1253              		.type	currentPresetSelection, %object
 1254              		.size	currentPresetSelection, 4
 1255              	currentPresetSelection:
 1256 0080 00000000 		.space	4
 1257              		.comm	presetNamesArray,896,4
 1258              		.global	presetNumberToLoad
 1259              		.type	presetNumberToLoad, %object
 1260              		.size	presetNumberToLoad, 1
 1261              	presetNumberToLoad:
 1262 0084 00       		.space	1
 1263              		.global	presetLoadedResponse
 1264              		.data
 1265              		.align	2
 1266              		.type	presetLoadedResponse, %object
 1267              		.size	presetLoadedResponse, 2
 1268              	presetLoadedResponse:
 1269 0090 FF       		.byte	-1
 1270 0091 00       		.byte	0
 1271              		.comm	macroNamesArray,7168,4
 1272              		.global	fretScaling
 1273 0092 0000     		.align	2
 1274              		.type	fretScaling, %object
 1275              		.size	fretScaling, 16
 1276              	fretScaling:
 1277 0094 0000803F 		.word	1065353216
 1278 0098 ABAA2A3F 		.word	1059760811
 1279 009c 0000003F 		.word	1056964608
 1280 00a0 0000803E 		.word	1048576000
 1281              		.comm	pedalRatios,40,4
 1282              		.global	last_mux
 1283              		.type	last_mux, %object
 1284              		.size	last_mux, 1
 1285              	last_mux:
 1286 00a4 01       		.byte	1
 1287              		.global	main_counter
 1288              		.bss
 1289              		.type	main_counter, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 30


 1290              		.size	main_counter, 1
 1291              	main_counter:
 1292 0085 00       		.space	1
 1293              		.global	neck
 1294              		.type	neck, %object
 1295              		.size	neck, 1
 1296              	neck:
 1297 0086 00       		.space	1
 1298              		.global	dualSlider
 1299              		.type	dualSlider, %object
 1300              		.size	dualSlider, 1
 1301              	dualSlider:
 1302 0087 00       		.space	1
 1303              		.global	enterUp
 1304              		.data
 1305              		.type	enterUp, %object
 1306              		.size	enterUp, 1
 1307              	enterUp:
 1308 00a5 01       		.byte	1
 1309              		.global	voice
 1310              		.bss
 1311              		.type	voice, %object
 1312              		.size	voice, 1
 1313              	voice:
 1314 0088 00       		.space	1
 1315              		.global	editUp
 1316              		.data
 1317              		.type	editUp, %object
 1318              		.size	editUp, 1
 1319              	editUp:
 1320 00a6 01       		.byte	1
 1321              		.global	oct1Up
 1322              		.type	oct1Up, %object
 1323              		.size	oct1Up, 1
 1324              	oct1Up:
 1325 00a7 01       		.byte	1
 1326              		.global	oct4Up
 1327              		.type	oct4Up, %object
 1328              		.size	oct4Up, 1
 1329              	oct4Up:
 1330 00a8 01       		.byte	1
 1331              		.comm	encoderVal,16,4
 1332              		.global	encoderNum
 1333              		.bss
 1334 0089 000000   		.align	2
 1335              		.type	encoderNum, %object
 1336              		.size	encoderNum, 4
 1337              	encoderNum:
 1338 008c 00000000 		.space	4
 1339              		.global	button1Up
 1340              		.type	button1Up, %object
 1341              		.size	button1Up, 1
 1342              	button1Up:
 1343 0090 00       		.space	1
 1344              		.global	button2Up
 1345              		.type	button2Up, %object
 1346              		.size	button2Up, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 31


 1347              	button2Up:
 1348 0091 00       		.space	1
 1349              		.global	button3Up
 1350              		.type	button3Up, %object
 1351              		.size	button3Up, 1
 1352              	button3Up:
 1353 0092 00       		.space	1
 1354              		.global	button4Up
 1355              		.type	button4Up, %object
 1356              		.size	button4Up, 1
 1357              	button4Up:
 1358 0093 00       		.space	1
 1359              		.global	patchNum
 1360              		.type	patchNum, %object
 1361              		.size	patchNum, 1
 1362              	patchNum:
 1363 0094 00       		.space	1
 1364              		.comm	copedent,3696,4
 1365              		.comm	copedentNamesArray,98,4
 1366              		.comm	prevStringPitchBend,48,4
 1367              		.comm	pedals,480,4
 1368              		.global	pedal_cc_assignments
 1369              		.data
 1370 00a9 000000   		.align	2
 1371              		.type	pedal_cc_assignments, %object
 1372              		.size	pedal_cc_assignments, 10
 1373              	pedal_cc_assignments:
 1374 00ac 00       		.byte	0
 1375 00ad 01       		.byte	1
 1376 00ae 02       		.byte	2
 1377 00af 03       		.byte	3
 1378 00b0 04       		.byte	4
 1379 00b1 08       		.byte	8
 1380 00b2 09       		.byte	9
 1381 00b3 07       		.byte	7
 1382 00b4 06       		.byte	6
 1383 00b5 05       		.byte	5
 1384              		.comm	openStringFrequencies,48,4
 1385              		.comm	stringMappedPositions,48,4
 1386              		.comm	invStringMappedPositions,48,4
 1387              		.comm	stringFrequencies,48,4
 1388              		.comm	stringOctave,48,4
 1389              		.comm	stringPitch,48,4
 1390              		.comm	stringMIDI,48,4
 1391              		.comm	openStringMIDI_Int,48,4
 1392              		.global	OLEDcount
 1393              		.bss
 1394 0095 000000   		.align	2
 1395              		.type	OLEDcount, %object
 1396              		.size	OLEDcount, 4
 1397              	OLEDcount:
 1398 0098 00000000 		.space	4
 1399              		.global	mainOLEDWaitingToSend
 1400              		.align	2
 1401              		.type	mainOLEDWaitingToSend, %object
 1402              		.size	mainOLEDWaitingToSend, 4
 1403              	mainOLEDWaitingToSend:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 32


 1404 009c 00000000 		.space	4
 1405              		.global	macroOLEDWaitingToSend
 1406              		.align	2
 1407              		.type	macroOLEDWaitingToSend, %object
 1408              		.size	macroOLEDWaitingToSend, 4
 1409              	macroOLEDWaitingToSend:
 1410 00a0 00000000 		.space	4
 1411              		.comm	presetAlreadyDisplayed,256,4
 1412              		.global	pedals_float
 1413              		.align	2
 1414              		.type	pedals_float, %object
 1415              		.size	pedals_float, 40
 1416              	pedals_float:
 1417 00a4 00000000 		.space	40
 1417      00000000 
 1417      00000000 
 1417      00000000 
 1417      00000000 
 1418              		.global	__aeabi_fdiv
 1419              		.section	.text.map,"ax",%progbits
 1420              		.align	2
 1421              		.global	map
 1422              		.thumb
 1423              		.thumb_func
 1424              		.type	map, %function
 1425              	map:
 1426              	.LFB72:
 352:main.c        **** 
 353:main.c        **** 
 354:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 355:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 356:main.c        **** void USB_service(void);
 357:main.c        **** 
 358:main.c        **** volatile uint8_t I2Cbuff1[256];
 359:main.c        **** volatile uint8_t I2Cbuff2[16];
 360:main.c        **** volatile uint8_t send_it = 0;
 361:main.c        **** 
 362:main.c        **** 
 363:main.c        **** //first mux, 0x70 is first element of array. 
 364:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 365:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 366:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 367:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 368:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 369:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 370:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 371:main.c        **** uint16_t deadzone = 150;
 372:main.c        **** uint16_t volumePedal = 4095;
 373:main.c        **** uint16_t processed_pedals[10];
 374:main.c        **** uint16_t prev_processed_pedals[10];
 375:main.c        **** uint8_t pedals8bit[10];
 376:main.c        **** uint8_t pedals7bit[10];
 377:main.c        **** uint8_t prevPedals7bit[10];
 378:main.c        **** int16_t prev_processed_volumePedal;
 379:main.c        **** int16_t processed_volumePedal;
 380:main.c        **** 
 381:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 33


 382:main.c        **** float fretMeasurements[4][4] ={
 383:main.c        **** 
 384:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 385:main.c        **** 
 386:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 387:main.c        **** 
 388:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 389:main.c        **** 
 390:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 391:main.c        **** 
 392:main.c        **** 	};
 393:main.c        **** #define NUM_MACROS 8
 394:main.c        **** #define MAX_NUM_PRESETS 64
 395:main.c        **** int currentPresetSelection = 0;
 396:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 397:main.c        **** uint8_t presetNumberToLoad = 0;
 398:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 399:main.c        **** 
 400:main.c        **** 
 401:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 402:main.c        **** 
 403:main.c        **** 
 404:main.c        **** 
 405:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 406:main.c        **** 
 407:main.c        **** 
 408:main.c        **** #define MAX_ENCODERS 16
 409:main.c        **** 
 410:main.c        **** float pedalRatios[10];
 411:main.c        **** uint8_t last_mux = 1;
 412:main.c        **** volatile uint8_t main_counter = 0;
 413:main.c        **** uint8_t neck = 0;
 414:main.c        **** uint8_t dualSlider = 0;
 415:main.c        **** uint8_t enterUp = 1;
 416:main.c        **** uint8_t voice = 0;
 417:main.c        **** uint8_t editUp = 1;
 418:main.c        **** uint8_t oct1Up = 1;
 419:main.c        **** uint8_t oct4Up = 1;
 420:main.c        **** 
 421:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 422:main.c        **** int encoderNum = 0;
 423:main.c        **** uint8_t button1Up = 0;
 424:main.c        **** uint8_t button2Up = 0;
 425:main.c        **** uint8_t button3Up = 0;
 426:main.c        **** uint8_t button4Up = 0;
 427:main.c        **** uint8_t patchNum = 0;
 428:main.c        **** #define NUM_STRINGS 12
 429:main.c        **** #define NUM_PEDALS 10
 430:main.c        **** 
 431:main.c        **** 
 432:main.c        **** #define MAX_NUM_COPEDENTS 7
 433:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 434:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 435:main.c        **** 
 436:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 437:main.c        **** 
 438:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 34


 439:main.c        **** 
 440:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 441:main.c        **** float openStringFrequencies[NUM_STRINGS];
 442:main.c        **** float stringMappedPositions[NUM_STRINGS];
 443:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 444:main.c        **** float stringFrequencies[NUM_STRINGS];
 445:main.c        **** float stringOctave[NUM_STRINGS];
 446:main.c        **** float stringPitch[NUM_STRINGS];
 447:main.c        **** float stringMIDI[NUM_STRINGS];
 448:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 449:main.c        **** int OLEDcount = 0;
 450:main.c        **** 
 451:main.c        **** int mainOLEDWaitingToSend = 0;
 452:main.c        **** int macroOLEDWaitingToSend = 0;
 453:main.c        **** 
 454:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 455:main.c        **** 
 456:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 457:main.c        **** 
 458:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 459:main.c        **** {
 1427              		.loc 1 459 0
 1428              		.cfi_startproc
 1429              		@ args = 4, pretend = 0, frame = 16
 1430              		@ frame_needed = 1, uses_anonymous_args = 0
 1431 0000 B0B5     		push	{r4, r5, r7, lr}
 1432              		.cfi_def_cfa_offset 16
 1433              		.cfi_offset 4, -16
 1434              		.cfi_offset 5, -12
 1435              		.cfi_offset 7, -8
 1436              		.cfi_offset 14, -4
 1437 0002 84B0     		sub	sp, sp, #16
 1438              		.cfi_def_cfa_offset 32
 1439 0004 00AF     		add	r7, sp, #0
 1440              		.cfi_def_cfa_register 7
 1441 0006 F860     		str	r0, [r7, #12]	@ float
 1442 0008 B960     		str	r1, [r7, #8]	@ float
 1443 000a 7A60     		str	r2, [r7, #4]	@ float
 1444 000c 3B60     		str	r3, [r7]	@ float
 460:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1445              		.loc 1 460 0
 1446 000e 3968     		ldr	r1, [r7]	@ float
 1447 0010 386A     		ldr	r0, [r7, #32]	@ float
 1448 0012 FFF7FEFF 		bl	__aeabi_fsub
 1449 0016 0346     		mov	r3, r0
 1450 0018 1C46     		mov	r4, r3
 1451 001a B968     		ldr	r1, [r7, #8]	@ float
 1452 001c F868     		ldr	r0, [r7, #12]	@ float
 1453 001e FFF7FEFF 		bl	__aeabi_fsub
 1454 0022 0346     		mov	r3, r0
 1455 0024 1D46     		mov	r5, r3
 1456 0026 B968     		ldr	r1, [r7, #8]	@ float
 1457 0028 7868     		ldr	r0, [r7, #4]	@ float
 1458 002a FFF7FEFF 		bl	__aeabi_fsub
 1459 002e 0346     		mov	r3, r0
 1460 0030 1946     		mov	r1, r3
 1461 0032 2846     		mov	r0, r5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 35


 1462 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1463 0038 0346     		mov	r3, r0
 1464 003a 1946     		mov	r1, r3
 1465 003c 2046     		mov	r0, r4
 1466 003e FFF7FEFF 		bl	__aeabi_fmul
 1467 0042 0346     		mov	r3, r0
 1468 0044 3968     		ldr	r1, [r7]	@ float
 1469 0046 1846     		mov	r0, r3
 1470 0048 FFF7FEFF 		bl	__aeabi_fadd
 1471 004c 0346     		mov	r3, r0
 461:main.c        **** }
 1472              		.loc 1 461 0
 1473 004e 1846     		mov	r0, r3
 1474 0050 1037     		adds	r7, r7, #16
 1475              		.cfi_def_cfa_offset 16
 1476 0052 BD46     		mov	sp, r7
 1477              		.cfi_def_cfa_register 13
 1478              		@ sp needed
 1479 0054 B0BD     		pop	{r4, r5, r7, pc}
 1480              		.cfi_endproc
 1481              	.LFE72:
 1482              		.size	map, .-map
 1483              		.global	currentNeck
 1484 0056 00BF     		.bss
 1485              		.align	2
 1486              		.type	currentNeck, %object
 1487              		.size	currentNeck, 4
 1488              	currentNeck:
 1489 00cc 00000000 		.space	4
 1490              		.global	editMode
 1491              		.align	2
 1492              		.type	editMode, %object
 1493              		.size	editMode, 4
 1494              	editMode:
 1495 00d0 00000000 		.space	4
 1496              		.global	calibrationMode
 1497              		.align	2
 1498              		.type	calibrationMode, %object
 1499              		.size	calibrationMode, 4
 1500              	calibrationMode:
 1501 00d4 00000000 		.space	4
 1502              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1503              		.align	2
 1504              		.global	burnInitialPedalZeroPositions
 1505              		.thumb
 1506              		.thumb_func
 1507              		.type	burnInitialPedalZeroPositions, %function
 1508              	burnInitialPedalZeroPositions:
 1509              	.LFB73:
 462:main.c        **** void displayCurrentPresetNameAndCopedent();
 463:main.c        **** 
 464:main.c        **** int currentNeck = 0;
 465:main.c        **** 
 466:main.c        **** int editMode = 0;
 467:main.c        **** int calibrationMode = 0;
 468:main.c        **** 
 469:main.c        **** void burnInitialPedalZeroPositions()
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 36


 470:main.c        **** {
 1510              		.loc 1 470 0
 1511              		.cfi_startproc
 1512              		@ args = 0, pretend = 0, frame = 0
 1513              		@ frame_needed = 1, uses_anonymous_args = 0
 1514              		@ link register save eliminated.
 1515 0000 80B4     		push	{r7}
 1516              		.cfi_def_cfa_offset 4
 1517              		.cfi_offset 7, -4
 1518 0002 00AF     		add	r7, sp, #0
 1519              		.cfi_def_cfa_register 7
 471:main.c        ****     
 472:main.c        **** }
 1520              		.loc 1 472 0
 1521 0004 00BF     		nop
 1522 0006 BD46     		mov	sp, r7
 1523              		.cfi_def_cfa_register 13
 1524              		@ sp needed
 1525 0008 80BC     		pop	{r7}
 1526              		.cfi_restore 7
 1527              		.cfi_def_cfa_offset 0
 1528 000a 7047     		bx	lr
 1529              		.cfi_endproc
 1530              	.LFE73:
 1531              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1532              		.global	__aeabi_ui2f
 1533              		.global	__aeabi_i2f
 1534              		.global	__aeabi_f2uiz
 1535              		.section	.text.calculatePedalRatios,"ax",%progbits
 1536              		.align	2
 1537              		.global	calculatePedalRatios
 1538              		.thumb
 1539              		.thumb_func
 1540              		.type	calculatePedalRatios, %function
 1541              	calculatePedalRatios:
 1542              	.LFB74:
 473:main.c        **** 
 474:main.c        **** 
 475:main.c        **** void calculatePedalRatios()
 476:main.c        **** {
 1543              		.loc 1 476 0
 1544              		.cfi_startproc
 1545              		@ args = 0, pretend = 0, frame = 8
 1546              		@ frame_needed = 1, uses_anonymous_args = 0
 1547 0000 90B5     		push	{r4, r7, lr}
 1548              		.cfi_def_cfa_offset 12
 1549              		.cfi_offset 4, -12
 1550              		.cfi_offset 7, -8
 1551              		.cfi_offset 14, -4
 1552 0002 83B0     		sub	sp, sp, #12
 1553              		.cfi_def_cfa_offset 24
 1554 0004 00AF     		add	r7, sp, #0
 1555              		.cfi_def_cfa_register 7
 1556              	.LBB3:
 477:main.c        **** 
 478:main.c        ****     //add deadzones on edges of pedal sensing
 479:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 37


 1557              		.loc 1 479 0
 1558 0006 0023     		movs	r3, #0
 1559 0008 7B60     		str	r3, [r7, #4]
 1560 000a 6EE0     		b	.L57
 1561              	.L58:
 1562              	.LBB4:
 480:main.c        ****     {
 481:main.c        **** 
 482:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1563              		.loc 1 482 0 discriminator 3
 1564 000c 3A4A     		ldr	r2, .L59
 1565 000e 7B68     		ldr	r3, [r7, #4]
 1566 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1567 0014 1846     		mov	r0, r3
 1568 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1569 001a 0446     		mov	r4, r0
 1570 001c 374A     		ldr	r2, .L59+4
 1571 001e 7B68     		ldr	r3, [r7, #4]
 1572 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1573 0024 1846     		mov	r0, r3
 1574 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1575 002a 0346     		mov	r3, r0
 1576 002c 1946     		mov	r1, r3
 1577 002e 2046     		mov	r0, r4
 1578 0030 FFF7FEFF 		bl	__aeabi_fsub
 1579 0034 0346     		mov	r3, r0
 1580 0036 3B60     		str	r3, [r7]	@ float
 483:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1581              		.loc 1 483 0 discriminator 3
 1582 0038 304A     		ldr	r2, .L59+4
 1583 003a 7B68     		ldr	r3, [r7, #4]
 1584 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1585 0040 1846     		mov	r0, r3
 1586 0042 FFF7FEFF 		bl	__aeabi_i2f
 1587 0046 0446     		mov	r4, r0
 1588 0048 2D49     		ldr	r1, .L59+8
 1589 004a 3868     		ldr	r0, [r7]	@ float
 1590 004c FFF7FEFF 		bl	__aeabi_fmul
 1591 0050 0346     		mov	r3, r0
 1592 0052 1946     		mov	r1, r3
 1593 0054 2046     		mov	r0, r4
 1594 0056 FFF7FEFF 		bl	__aeabi_fadd
 1595 005a 0346     		mov	r3, r0
 1596 005c 1846     		mov	r0, r3
 1597 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1598 0062 0346     		mov	r3, r0
 1599 0064 99B2     		uxth	r1, r3
 1600 0066 254A     		ldr	r2, .L59+4
 1601 0068 7B68     		ldr	r3, [r7, #4]
 1602 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 484:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1603              		.loc 1 484 0 discriminator 3
 1604 006e 224A     		ldr	r2, .L59
 1605 0070 7B68     		ldr	r3, [r7, #4]
 1606 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1607 0076 1846     		mov	r0, r3
 1608 0078 FFF7FEFF 		bl	__aeabi_i2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 38


 1609 007c 0446     		mov	r4, r0
 1610 007e 2049     		ldr	r1, .L59+8
 1611 0080 3868     		ldr	r0, [r7]	@ float
 1612 0082 FFF7FEFF 		bl	__aeabi_fmul
 1613 0086 0346     		mov	r3, r0
 1614 0088 1946     		mov	r1, r3
 1615 008a 2046     		mov	r0, r4
 1616 008c FFF7FEFF 		bl	__aeabi_fsub
 1617 0090 0346     		mov	r3, r0
 1618 0092 1846     		mov	r0, r3
 1619 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1620 0098 0346     		mov	r3, r0
 1621 009a 99B2     		uxth	r1, r3
 1622 009c 164A     		ldr	r2, .L59
 1623 009e 7B68     		ldr	r3, [r7, #4]
 1624 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 485:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1625              		.loc 1 485 0 discriminator 3
 1626 00a4 144A     		ldr	r2, .L59
 1627 00a6 7B68     		ldr	r3, [r7, #4]
 1628 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1629 00ac 1846     		mov	r0, r3
 1630 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1631 00b2 0446     		mov	r4, r0
 1632 00b4 114A     		ldr	r2, .L59+4
 1633 00b6 7B68     		ldr	r3, [r7, #4]
 1634 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1635 00bc 1846     		mov	r0, r3
 1636 00be FFF7FEFF 		bl	__aeabi_ui2f
 1637 00c2 0346     		mov	r3, r0
 1638 00c4 1946     		mov	r1, r3
 1639 00c6 2046     		mov	r0, r4
 1640 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1641 00cc 0346     		mov	r3, r0
 1642 00ce 3B60     		str	r3, [r7]	@ float
 486:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1643              		.loc 1 486 0 discriminator 3
 1644 00d0 3968     		ldr	r1, [r7]	@ float
 1645 00d2 0C48     		ldr	r0, .L59+12
 1646 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1647 00d8 0346     		mov	r3, r0
 1648 00da 1946     		mov	r1, r3
 1649 00dc 0A4A     		ldr	r2, .L59+16
 1650 00de 7B68     		ldr	r3, [r7, #4]
 1651 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1652              	.LBE4:
 479:main.c        ****     {
 1653              		.loc 1 479 0 discriminator 3
 1654 00e4 7B68     		ldr	r3, [r7, #4]
 1655 00e6 0133     		adds	r3, r3, #1
 1656 00e8 7B60     		str	r3, [r7, #4]
 1657              	.L57:
 479:main.c        ****     {
 1658              		.loc 1 479 0 is_stmt 0 discriminator 1
 1659 00ea 7B68     		ldr	r3, [r7, #4]
 1660 00ec 092B     		cmp	r3, #9
 1661 00ee 8DDD     		ble	.L58
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 39


 1662              	.LBE3:
 487:main.c        ****     }
 488:main.c        **** }
 1663              		.loc 1 488 0 is_stmt 1
 1664 00f0 00BF     		nop
 1665 00f2 0C37     		adds	r7, r7, #12
 1666              		.cfi_def_cfa_offset 12
 1667 00f4 BD46     		mov	sp, r7
 1668              		.cfi_def_cfa_register 13
 1669              		@ sp needed
 1670 00f6 90BD     		pop	{r4, r7, pc}
 1671              	.L60:
 1672              		.align	2
 1673              	.L59:
 1674 00f8 00000000 		.word	pedals_high
 1675 00fc 00000000 		.word	pedals_low
 1676 0100 CDCCCC3D 		.word	1036831949
 1677 0104 00F07F45 		.word	1166012416
 1678 0108 00000000 		.word	pedalRatios
 1679              		.cfi_endproc
 1680              	.LFE74:
 1681              		.size	calculatePedalRatios, .-calculatePedalRatios
 1682              		.section	.rodata
 1683              		.align	2
 1684              	.LC0:
 1685 0400 2000     		.ascii	" \000"
 1686              		.global	__aeabi_f2iz
 1687              		.global	__aeabi_fcmpge
 1688 0402 0000     		.align	2
 1689              	.LC1:
 1690 0404 43414C49 		.ascii	"CALIBRATION\000"
 1690      42524154 
 1690      494F4E00 
 1691              		.align	2
 1692              	.LC2:
 1693 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1693      20504544 
 1693      414C5300 
 1694              		.align	2
 1695              	.LC3:
 1696 041c 414E4420 		.ascii	"AND LEVERS\000"
 1696      4C455645 
 1696      525300
 1697 0427 00       		.align	2
 1698              	.LC4:
 1699 0428 5448454E 		.ascii	"THEN EXIT\000"
 1699      20455849 
 1699      5400
 1700              		.global	__aeabi_fcmpeq
 1701 0432 0000     		.align	2
 1702              	.LC5:
 1703 0434 4649524D 		.ascii	"FIRMWARE   \000"
 1703      57415245 
 1703      20202000 
 1704              		.align	2
 1705              	.LC6:
 1706 0440 55504441 		.ascii	"UPDATE     \000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 40


 1706      54452020 
 1706      20202000 
 1707              		.align	2
 1708              	.LC7:
 1709 044c 20202020 		.ascii	"           \000"
 1709      20202020 
 1709      20202000 
 1710              		.section	.text.main,"ax",%progbits
 1711              		.align	2
 1712              		.global	main
 1713              		.thumb
 1714              		.thumb_func
 1715              		.type	main, %function
 1716              	main:
 1717              	.LFB75:
 489:main.c        **** int main(void)
 490:main.c        **** {
 1718              		.loc 1 490 0
 1719              		.cfi_startproc
 1720              		@ args = 0, pretend = 0, frame = 160
 1721              		@ frame_needed = 1, uses_anonymous_args = 0
 1722 0000 90B5     		push	{r4, r7, lr}
 1723              		.cfi_def_cfa_offset 12
 1724              		.cfi_offset 4, -12
 1725              		.cfi_offset 7, -8
 1726              		.cfi_offset 14, -4
 1727 0002 ABB0     		sub	sp, sp, #172
 1728              		.cfi_def_cfa_offset 184
 1729 0004 02AF     		add	r7, sp, #8
 1730              		.cfi_def_cfa 7, 176
 491:main.c        ****     
 492:main.c        **** 	CYGlobalIntEnable; 
 1731              		.loc 1 492 0
 1732              		.syntax unified
 1733              	@ 492 "main.c" 1
 1734 0006 62B6     		CPSIE   i
 1735              	@ 0 "" 2
 493:main.c        ****     EEPROM_Start();
 1736              		.loc 1 493 0
 1737              		.thumb
 1738              		.syntax unified
 1739 0008 FFF7FEFF 		bl	EEPROM_Start
 494:main.c        ****      #ifdef BOOTLOAD_STYLE
 495:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 496:main.c        ****     #endif
 497:main.c        ****     //since we sucessfully booted this firmware, set it to be the default until the brain chip gets
 498:main.c        ****     
 499:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1740              		.loc 1 499 0
 1741 000c B14B     		ldr	r3, .L224
 1742 000e 1846     		mov	r0, r3
 1743 0010 FFF7FEFF 		bl	Em_EEPROM_Init
 1744 0014 0346     		mov	r3, r0
 1745 0016 1A46     		mov	r2, r3
 1746 0018 AF4B     		ldr	r3, .L224+4
 1747 001a 1A70     		strb	r2, [r3]
 500:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 41


 501:main.c        ****     {
 502:main.c        ****        // HandleError();
 503:main.c        ****     }
 504:main.c        ****     uint8_t myArrayCounter = 0;
 1748              		.loc 1 504 0
 1749 001c 0023     		movs	r3, #0
 1750 001e 87F83B30 		strb	r3, [r7, #59]
 505:main.c        ****   
 506:main.c        ****     I2C_1_Start();  
 1751              		.loc 1 506 0
 1752 0022 FFF7FEFF 		bl	I2C_1_Start
 507:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1753              		.loc 1 507 0
 1754 0026 0120     		movs	r0, #1
 1755 0028 FFF7FEFF 		bl	USB_SetPowerStatus
 508:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1756              		.loc 1 508 0
 1757 002c AB48     		ldr	r0, .L224+8
 1758 002e FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 509:main.c        ****     
 510:main.c        **** 
 511:main.c        **** 
 512:main.c        ****     
 513:main.c        ****     CyDelay(2000);
 1759              		.loc 1 513 0
 1760 0032 4FF4FA60 		mov	r0, #2000
 1761 0036 FFF7FEFF 		bl	CyDelay
 514:main.c        ****     //read from eeprom which copedents are loaded on which necks
 515:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1762              		.loc 1 515 0
 1763 003a 0020     		movs	r0, #0
 1764 003c FFF7FEFF 		bl	EEPROM_ReadByte
 1765 0040 0346     		mov	r3, r0
 1766 0042 1A46     		mov	r2, r3
 1767 0044 A64B     		ldr	r3, .L224+12
 1768 0046 1A70     		strb	r2, [r3]
 516:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1769              		.loc 1 516 0
 1770 0048 0120     		movs	r0, #1
 1771 004a FFF7FEFF 		bl	EEPROM_ReadByte
 1772 004e 0346     		mov	r3, r0
 1773 0050 1A46     		mov	r2, r3
 1774 0052 A34B     		ldr	r3, .L224+12
 1775 0054 5A70     		strb	r2, [r3, #1]
 1776              	.LBB5:
 517:main.c        ****     
 518:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1777              		.loc 1 518 0
 1778 0056 0023     		movs	r3, #0
 1779 0058 C7F89C30 		str	r3, [r7, #156]
 1780 005c BBE0     		b	.L62
 1781              	.L69:
 1782              	.LBB6:
 519:main.c        ****     {
 520:main.c        ****         
 521:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
 1783              		.loc 1 521 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 42


 1784 005e 0023     		movs	r3, #0
 1785 0060 C7F89830 		str	r3, [r7, #152]
 1786 0064 29E0     		b	.L63
 1787              	.L64:
 522:main.c        ****         {
 523:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1788              		.loc 1 523 0 discriminator 3
 1789 0066 D7F89C30 		ldr	r3, [r7, #156]
 1790 006a 9BB2     		uxth	r3, r3
 1791 006c 1A46     		mov	r2, r3	@ movhi
 1792 006e 1201     		lsls	r2, r2, #4
 1793 0070 1A44     		add	r2, r2, r3
 1794 0072 9200     		lsls	r2, r2, #2
 1795 0074 1A44     		add	r2, r2, r3
 1796 0076 5200     		lsls	r2, r2, #1
 1797 0078 1344     		add	r3, r3, r2
 1798 007a 5B00     		lsls	r3, r3, #1
 1799 007c 9AB2     		uxth	r2, r3
 1800 007e D7F89830 		ldr	r3, [r7, #152]
 1801 0082 9BB2     		uxth	r3, r3
 1802 0084 1344     		add	r3, r3, r2
 1803 0086 9BB2     		uxth	r3, r3
 1804 0088 0233     		adds	r3, r3, #2
 1805 008a 9BB2     		uxth	r3, r3
 1806 008c 1846     		mov	r0, r3
 1807 008e FFF7FEFF 		bl	EEPROM_ReadByte
 1808 0092 0346     		mov	r3, r0
 1809 0094 1846     		mov	r0, r3
 1810 0096 9349     		ldr	r1, .L224+16
 1811 0098 D7F89C20 		ldr	r2, [r7, #156]
 1812 009c 1346     		mov	r3, r2
 1813 009e DB00     		lsls	r3, r3, #3
 1814 00a0 9B1A     		subs	r3, r3, r2
 1815 00a2 5B00     		lsls	r3, r3, #1
 1816 00a4 CA18     		adds	r2, r1, r3
 1817 00a6 D7F89830 		ldr	r3, [r7, #152]
 1818 00aa 1344     		add	r3, r3, r2
 1819 00ac 0246     		mov	r2, r0
 1820 00ae 1A70     		strb	r2, [r3]
 521:main.c        ****         {
 1821              		.loc 1 521 0 discriminator 3
 1822 00b0 D7F89830 		ldr	r3, [r7, #152]
 1823 00b4 0133     		adds	r3, r3, #1
 1824 00b6 C7F89830 		str	r3, [r7, #152]
 1825              	.L63:
 521:main.c        ****         {
 1826              		.loc 1 521 0 is_stmt 0 discriminator 1
 1827 00ba D7F89830 		ldr	r3, [r7, #152]
 1828 00be 0D2B     		cmp	r3, #13
 1829 00c0 D1DD     		ble	.L64
 1830              	.LBE6:
 1831              	.LBB7:
 524:main.c        ****         }
 525:main.c        ****         for (int i = 0; i < 11; i++)
 1832              		.loc 1 525 0 is_stmt 1
 1833 00c2 0023     		movs	r3, #0
 1834 00c4 C7F89430 		str	r3, [r7, #148]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 43


 1835 00c8 7BE0     		b	.L65
 1836              	.L68:
 1837              	.LBB8:
 526:main.c        ****     	{
 527:main.c        ****     		int pedalStartLoc = (i*24);
 1838              		.loc 1 527 0
 1839 00ca D7F89420 		ldr	r2, [r7, #148]
 1840 00ce 1346     		mov	r3, r2
 1841 00d0 5B00     		lsls	r3, r3, #1
 1842 00d2 1344     		add	r3, r3, r2
 1843 00d4 DB00     		lsls	r3, r3, #3
 1844 00d6 7B63     		str	r3, [r7, #52]
 1845              	.LBB9:
 528:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1846              		.loc 1 528 0
 1847 00d8 0023     		movs	r3, #0
 1848 00da C7F89030 		str	r3, [r7, #144]
 1849 00de 67E0     		b	.L66
 1850              	.L67:
 1851              	.LBB10:
 529:main.c        ****     		{
 530:main.c        ****                 
 531:main.c        ****                 int stringStartLoc = (j*2);
 1852              		.loc 1 531 0 discriminator 3
 1853 00e0 D7F89030 		ldr	r3, [r7, #144]
 1854 00e4 5B00     		lsls	r3, r3, #1
 1855 00e6 3B63     		str	r3, [r7, #48]
 532:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1856              		.loc 1 532 0 discriminator 3
 1857 00e8 3B6B     		ldr	r3, [r7, #48]
 1858 00ea 9AB2     		uxth	r2, r3
 1859 00ec 7B6B     		ldr	r3, [r7, #52]
 1860 00ee 9BB2     		uxth	r3, r3
 1861 00f0 1344     		add	r3, r3, r2
 1862 00f2 9AB2     		uxth	r2, r3
 1863 00f4 D7F89C30 		ldr	r3, [r7, #156]
 1864 00f8 9BB2     		uxth	r3, r3
 1865 00fa 1946     		mov	r1, r3	@ movhi
 1866 00fc 0901     		lsls	r1, r1, #4
 1867 00fe 1944     		add	r1, r1, r3
 1868 0100 8900     		lsls	r1, r1, #2
 1869 0102 1944     		add	r1, r1, r3
 1870 0104 4900     		lsls	r1, r1, #1
 1871 0106 0B44     		add	r3, r3, r1
 1872 0108 5B00     		lsls	r3, r3, #1
 1873 010a 9BB2     		uxth	r3, r3
 1874 010c 1344     		add	r3, r3, r2
 1875 010e 9BB2     		uxth	r3, r3
 1876 0110 1033     		adds	r3, r3, #16
 1877 0112 9BB2     		uxth	r3, r3
 1878 0114 1846     		mov	r0, r3
 1879 0116 FFF7FEFF 		bl	EEPROM_ReadByte
 1880 011a 0346     		mov	r3, r0
 1881 011c FB85     		strh	r3, [r7, #46]	@ movhi
 533:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1882              		.loc 1 533 0 discriminator 3
 1883 011e 3B6B     		ldr	r3, [r7, #48]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 44


 1884 0120 9AB2     		uxth	r2, r3
 1885 0122 7B6B     		ldr	r3, [r7, #52]
 1886 0124 9BB2     		uxth	r3, r3
 1887 0126 1344     		add	r3, r3, r2
 1888 0128 9AB2     		uxth	r2, r3
 1889 012a D7F89C30 		ldr	r3, [r7, #156]
 1890 012e 9BB2     		uxth	r3, r3
 1891 0130 1946     		mov	r1, r3	@ movhi
 1892 0132 0901     		lsls	r1, r1, #4
 1893 0134 1944     		add	r1, r1, r3
 1894 0136 8900     		lsls	r1, r1, #2
 1895 0138 1944     		add	r1, r1, r3
 1896 013a 4900     		lsls	r1, r1, #1
 1897 013c 0B44     		add	r3, r3, r1
 1898 013e 5B00     		lsls	r3, r3, #1
 1899 0140 9BB2     		uxth	r3, r3
 1900 0142 1344     		add	r3, r3, r2
 1901 0144 9BB2     		uxth	r3, r3
 1902 0146 1133     		adds	r3, r3, #17
 1903 0148 9BB2     		uxth	r3, r3
 1904 014a 1846     		mov	r0, r3
 1905 014c FFF7FEFF 		bl	EEPROM_ReadByte
 1906 0150 0346     		mov	r3, r0
 1907 0152 BB85     		strh	r3, [r7, #44]	@ movhi
 534:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1908              		.loc 1 534 0 discriminator 3
 1909 0154 FB8D     		ldrh	r3, [r7, #46]
 1910 0156 1A02     		lsls	r2, r3, #8
 1911 0158 BB8D     		ldrh	r3, [r7, #44]
 1912 015a 1344     		add	r3, r3, r2
 1913 015c 1846     		mov	r0, r3
 1914 015e FFF7FEFF 		bl	__aeabi_i2f
 1915 0162 0346     		mov	r3, r0
 1916 0164 4FF06E51 		mov	r1, #998244352
 1917 0168 1846     		mov	r0, r3
 1918 016a FFF7FEFF 		bl	__aeabi_fmul
 1919 016e 0346     		mov	r3, r0
 1920 0170 4FF08641 		mov	r1, #1124073472
 1921 0174 1846     		mov	r0, r3
 1922 0176 FFF7FEFF 		bl	__aeabi_fsub
 1923 017a 0346     		mov	r3, r0
 1924 017c 1C46     		mov	r4, r3
 1925 017e 5A48     		ldr	r0, .L224+20
 1926 0180 D7F89430 		ldr	r3, [r7, #148]
 1927 0184 D7F89C10 		ldr	r1, [r7, #156]
 1928 0188 1A46     		mov	r2, r3
 1929 018a 5200     		lsls	r2, r2, #1
 1930 018c 1A44     		add	r2, r2, r3
 1931 018e 9300     		lsls	r3, r2, #2
 1932 0190 1A46     		mov	r2, r3
 1933 0192 0B46     		mov	r3, r1
 1934 0194 5B01     		lsls	r3, r3, #5
 1935 0196 0B44     		add	r3, r3, r1
 1936 0198 9B00     		lsls	r3, r3, #2
 1937 019a 1A44     		add	r2, r2, r3
 1938 019c D7F89030 		ldr	r3, [r7, #144]
 1939 01a0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 45


 1940 01a2 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1941              	.LBE10:
 528:main.c        ****     		{
 1942              		.loc 1 528 0 discriminator 3
 1943 01a6 D7F89030 		ldr	r3, [r7, #144]
 1944 01aa 0133     		adds	r3, r3, #1
 1945 01ac C7F89030 		str	r3, [r7, #144]
 1946              	.L66:
 528:main.c        ****     		{
 1947              		.loc 1 528 0 is_stmt 0 discriminator 1
 1948 01b0 D7F89030 		ldr	r3, [r7, #144]
 1949 01b4 0B2B     		cmp	r3, #11
 1950 01b6 93DD     		ble	.L67
 1951              	.LBE9:
 1952              	.LBE8:
 525:main.c        ****     	{
 1953              		.loc 1 525 0 is_stmt 1 discriminator 2
 1954 01b8 D7F89430 		ldr	r3, [r7, #148]
 1955 01bc 0133     		adds	r3, r3, #1
 1956 01be C7F89430 		str	r3, [r7, #148]
 1957              	.L65:
 525:main.c        ****     	{
 1958              		.loc 1 525 0 is_stmt 0 discriminator 1
 1959 01c2 D7F89430 		ldr	r3, [r7, #148]
 1960 01c6 0A2B     		cmp	r3, #10
 1961 01c8 7FF77FAF 		ble	.L68
 1962              	.LBE7:
 518:main.c        ****     {
 1963              		.loc 1 518 0 is_stmt 1 discriminator 2
 1964 01cc D7F89C30 		ldr	r3, [r7, #156]
 1965 01d0 0133     		adds	r3, r3, #1
 1966 01d2 C7F89C30 		str	r3, [r7, #156]
 1967              	.L62:
 518:main.c        ****     {
 1968              		.loc 1 518 0 is_stmt 0 discriminator 1
 1969 01d6 D7F89C30 		ldr	r3, [r7, #156]
 1970 01da 062B     		cmp	r3, #6
 1971 01dc 7FF73FAF 		ble	.L69
 1972              	.LBE5:
 1973              	.LBB11:
 535:main.c        ****             }
 536:main.c        ****     	}
 537:main.c        ****     }
 538:main.c        **** 
 539:main.c        ****     
 540:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1974              		.loc 1 540 0 is_stmt 1
 1975 01e0 0023     		movs	r3, #0
 1976 01e2 C7F88C30 		str	r3, [r7, #140]
 1977 01e6 49E0     		b	.L70
 1978              	.L71:
 541:main.c        ****     {
 542:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1979              		.loc 1 542 0 discriminator 3
 1980 01e8 D7F88C30 		ldr	r3, [r7, #140]
 1981 01ec 03F2E713 		addw	r3, r3, #487
 1982 01f0 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 46


 1983 01f2 9B00     		lsls	r3, r3, #2
 1984 01f4 9BB2     		uxth	r3, r3
 1985 01f6 1846     		mov	r0, r3
 1986 01f8 FFF7FEFF 		bl	EEPROM_ReadByte
 1987 01fc 0346     		mov	r3, r0
 1988 01fe 9BB2     		uxth	r3, r3
 1989 0200 1B02     		lsls	r3, r3, #8
 1990 0202 9CB2     		uxth	r4, r3
 1991 0204 D7F88C30 		ldr	r3, [r7, #140]
 1992 0208 9BB2     		uxth	r3, r3
 1993 020a 9B00     		lsls	r3, r3, #2
 1994 020c 9BB2     		uxth	r3, r3
 1995 020e 03F29D73 		addw	r3, r3, #1949
 1996 0212 9BB2     		uxth	r3, r3
 1997 0214 1846     		mov	r0, r3
 1998 0216 FFF7FEFF 		bl	EEPROM_ReadByte
 1999 021a 0346     		mov	r3, r0
 2000 021c 9BB2     		uxth	r3, r3
 2001 021e 2344     		add	r3, r3, r4
 2002 0220 99B2     		uxth	r1, r3
 2003 0222 324A     		ldr	r2, .L224+24
 2004 0224 D7F88C30 		ldr	r3, [r7, #140]
 2005 0228 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 543:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 2006              		.loc 1 543 0 discriminator 3
 2007 022c D7F88C30 		ldr	r3, [r7, #140]
 2008 0230 9BB2     		uxth	r3, r3
 2009 0232 9B00     		lsls	r3, r3, #2
 2010 0234 9BB2     		uxth	r3, r3
 2011 0236 03F29E73 		addw	r3, r3, #1950
 2012 023a 9BB2     		uxth	r3, r3
 2013 023c 1846     		mov	r0, r3
 2014 023e FFF7FEFF 		bl	EEPROM_ReadByte
 2015 0242 0346     		mov	r3, r0
 2016 0244 9BB2     		uxth	r3, r3
 2017 0246 1B02     		lsls	r3, r3, #8
 2018 0248 9CB2     		uxth	r4, r3
 2019 024a D7F88C30 		ldr	r3, [r7, #140]
 2020 024e 9BB2     		uxth	r3, r3
 2021 0250 9B00     		lsls	r3, r3, #2
 2022 0252 9BB2     		uxth	r3, r3
 2023 0254 03F29F73 		addw	r3, r3, #1951
 2024 0258 9BB2     		uxth	r3, r3
 2025 025a 1846     		mov	r0, r3
 2026 025c FFF7FEFF 		bl	EEPROM_ReadByte
 2027 0260 0346     		mov	r3, r0
 2028 0262 9BB2     		uxth	r3, r3
 2029 0264 2344     		add	r3, r3, r4
 2030 0266 99B2     		uxth	r1, r3
 2031 0268 214A     		ldr	r2, .L224+28
 2032 026a D7F88C30 		ldr	r3, [r7, #140]
 2033 026e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 540:main.c        ****     {
 2034              		.loc 1 540 0 discriminator 3
 2035 0272 D7F88C30 		ldr	r3, [r7, #140]
 2036 0276 0133     		adds	r3, r3, #1
 2037 0278 C7F88C30 		str	r3, [r7, #140]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 47


 2038              	.L70:
 540:main.c        ****     {
 2039              		.loc 1 540 0 is_stmt 0 discriminator 1
 2040 027c D7F88C30 		ldr	r3, [r7, #140]
 2041 0280 092B     		cmp	r3, #9
 2042 0282 B1DD     		ble	.L71
 2043              	.LBE11:
 544:main.c        ****     }
 545:main.c        ****     calculatePedalRatios();
 2044              		.loc 1 545 0 is_stmt 1
 2045 0284 FFF7FEFF 		bl	calculatePedalRatios
 2046              	.LBB12:
 546:main.c        ****                 
 547:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 548:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2047              		.loc 1 548 0
 2048 0288 0023     		movs	r3, #0
 2049 028a C7F88830 		str	r3, [r7, #136]
 2050 028e 61E0     		b	.L72
 2051              	.L79:
 2052              	.LBB13:
 549:main.c        ****     {
 550:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 2053              		.loc 1 550 0
 2054 0290 0023     		movs	r3, #0
 2055 0292 C7F88430 		str	r3, [r7, #132]
 2056 0296 11E0     		b	.L73
 2057              	.L74:
 551:main.c        ****         {
 552:main.c        ****             presetNamesArray[i][j] = 255;
 2058              		.loc 1 552 0 discriminator 3
 2059 0298 1649     		ldr	r1, .L224+32
 2060 029a D7F88820 		ldr	r2, [r7, #136]
 2061 029e 1346     		mov	r3, r2
 2062 02a0 DB00     		lsls	r3, r3, #3
 2063 02a2 9B1A     		subs	r3, r3, r2
 2064 02a4 5B00     		lsls	r3, r3, #1
 2065 02a6 CA18     		adds	r2, r1, r3
 2066 02a8 D7F88430 		ldr	r3, [r7, #132]
 2067 02ac 1344     		add	r3, r3, r2
 2068 02ae FF22     		movs	r2, #255
 2069 02b0 1A70     		strb	r2, [r3]
 550:main.c        ****         {
 2070              		.loc 1 550 0 discriminator 3
 2071 02b2 D7F88430 		ldr	r3, [r7, #132]
 2072 02b6 0133     		adds	r3, r3, #1
 2073 02b8 C7F88430 		str	r3, [r7, #132]
 2074              	.L73:
 550:main.c        ****         {
 2075              		.loc 1 550 0 is_stmt 0 discriminator 1
 2076 02bc D7F88430 		ldr	r3, [r7, #132]
 2077 02c0 0D2B     		cmp	r3, #13
 2078 02c2 E9DD     		ble	.L74
 2079              	.LBE13:
 2080              	.LBB14:
 553:main.c        **** 
 554:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 48


 555:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 2081              		.loc 1 555 0 is_stmt 1
 2082 02c4 0023     		movs	r3, #0
 2083 02c6 C7F88030 		str	r3, [r7, #128]
 2084 02ca 34E0     		b	.L75
 2085              	.L78:
 2086              	.LBB15:
 556:main.c        ****         {
 557:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 2087              		.loc 1 557 0
 2088 02cc 0023     		movs	r3, #0
 2089 02ce FB67     		str	r3, [r7, #124]
 2090 02d0 29E0     		b	.L76
 2091              	.L225:
 2092 02d2 00BF     		.align	2
 2093              	.L224:
 2094 02d4 00000000 		.word	Em_EEPROM_em_EepromStorage
 2095 02d8 00000000 		.word	eepromReturnValue
 2096 02dc 00000000 		.word	Vbus_function
 2097 02e0 00000000 		.word	necks
 2098 02e4 00000000 		.word	copedentNamesArray
 2099 02e8 00000000 		.word	copedent
 2100 02ec 00000000 		.word	pedals_low
 2101 02f0 00000000 		.word	pedals_high
 2102 02f4 00000000 		.word	presetNamesArray
 2103              	.L77:
 558:main.c        ****             {
 559:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2104              		.loc 1 559 0 discriminator 3
 2105 02f8 4E48     		ldr	r0, .L226
 2106 02fa D7F88030 		ldr	r3, [r7, #128]
 2107 02fe D7F88810 		ldr	r1, [r7, #136]
 2108 0302 1A46     		mov	r2, r3
 2109 0304 D200     		lsls	r2, r2, #3
 2110 0306 D21A     		subs	r2, r2, r3
 2111 0308 5300     		lsls	r3, r2, #1
 2112 030a 1A46     		mov	r2, r3
 2113 030c 0B46     		mov	r3, r1
 2114 030e DB00     		lsls	r3, r3, #3
 2115 0310 5B1A     		subs	r3, r3, r1
 2116 0312 1B01     		lsls	r3, r3, #4
 2117 0314 1344     		add	r3, r3, r2
 2118 0316 C218     		adds	r2, r0, r3
 2119 0318 FB6F     		ldr	r3, [r7, #124]
 2120 031a 1344     		add	r3, r3, r2
 2121 031c FF22     		movs	r2, #255
 2122 031e 1A70     		strb	r2, [r3]
 557:main.c        ****             {
 2123              		.loc 1 557 0 discriminator 3
 2124 0320 FB6F     		ldr	r3, [r7, #124]
 2125 0322 0133     		adds	r3, r3, #1
 2126 0324 FB67     		str	r3, [r7, #124]
 2127              	.L76:
 557:main.c        ****             {
 2128              		.loc 1 557 0 is_stmt 0 discriminator 1
 2129 0326 FB6F     		ldr	r3, [r7, #124]
 2130 0328 0D2B     		cmp	r3, #13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 49


 2131 032a E5DD     		ble	.L77
 2132              	.LBE15:
 555:main.c        ****         {
 2133              		.loc 1 555 0 is_stmt 1 discriminator 2
 2134 032c D7F88030 		ldr	r3, [r7, #128]
 2135 0330 0133     		adds	r3, r3, #1
 2136 0332 C7F88030 		str	r3, [r7, #128]
 2137              	.L75:
 555:main.c        ****         {
 2138              		.loc 1 555 0 is_stmt 0 discriminator 1
 2139 0336 D7F88030 		ldr	r3, [r7, #128]
 2140 033a 072B     		cmp	r3, #7
 2141 033c C6DD     		ble	.L78
 2142              	.LBE14:
 560:main.c        ****             }
 561:main.c        ****         }
 562:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2143              		.loc 1 562 0 is_stmt 1 discriminator 2
 2144 033e 3E4A     		ldr	r2, .L226+4
 2145 0340 D7F88830 		ldr	r3, [r7, #136]
 2146 0344 0021     		movs	r1, #0
 2147 0346 42F82310 		str	r1, [r2, r3, lsl #2]
 548:main.c        ****     {
 2148              		.loc 1 548 0 discriminator 2
 2149 034a D7F88830 		ldr	r3, [r7, #136]
 2150 034e 0133     		adds	r3, r3, #1
 2151 0350 C7F88830 		str	r3, [r7, #136]
 2152              	.L72:
 548:main.c        ****     {
 2153              		.loc 1 548 0 is_stmt 0 discriminator 1
 2154 0354 D7F88830 		ldr	r3, [r7, #136]
 2155 0358 3F2B     		cmp	r3, #63
 2156 035a 99DD     		ble	.L79
 2157              	.LBE12:
 563:main.c        ****     }
 564:main.c        ****     
 565:main.c        ****     QuadDec_1_Start();
 2158              		.loc 1 565 0 is_stmt 1
 2159 035c FFF7FEFF 		bl	QuadDec_1_Start
 566:main.c        ****     LED_amber1_Write(0);
 2160              		.loc 1 566 0
 2161 0360 0020     		movs	r0, #0
 2162 0362 FFF7FEFF 		bl	LED_amber1_Write
 567:main.c        ****     LED_amber2_Write(1);
 2163              		.loc 1 567 0
 2164 0366 0120     		movs	r0, #1
 2165 0368 FFF7FEFF 		bl	LED_amber2_Write
 568:main.c        ****     LED_amber3_Write(0);
 2166              		.loc 1 568 0
 2167 036c 0020     		movs	r0, #0
 2168 036e FFF7FEFF 		bl	LED_amber3_Write
 569:main.c        ****     LED_amber4_Write(0);
 2169              		.loc 1 569 0
 2170 0372 0020     		movs	r0, #0
 2171 0374 FFF7FEFF 		bl	LED_amber4_Write
 570:main.c        **** 
 571:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 50


 572:main.c        **** 
 573:main.c        **** 
 574:main.c        **** 
 575:main.c        ****     
 576:main.c        ****     LED_red1_Write(0);
 2172              		.loc 1 576 0
 2173 0378 0020     		movs	r0, #0
 2174 037a FFF7FEFF 		bl	LED_red1_Write
 577:main.c        ****     LED_green2_Write(1);
 2175              		.loc 1 577 0
 2176 037e 0120     		movs	r0, #1
 2177 0380 FFF7FEFF 		bl	LED_green2_Write
 578:main.c        **** 
 579:main.c        ****     
 580:main.c        ****     ADC_SAR_Seq_1_Start();
 2178              		.loc 1 580 0
 2179 0384 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 581:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2180              		.loc 1 581 0
 2181 0388 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 582:main.c        **** 
 583:main.c        ****             
 584:main.c        ****     currentCopedent = necks[currentNeck];
 2182              		.loc 1 584 0
 2183 038c 2B4B     		ldr	r3, .L226+8
 2184 038e 1B68     		ldr	r3, [r3]
 2185 0390 2B4A     		ldr	r2, .L226+12
 2186 0392 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2187 0394 2B4B     		ldr	r3, .L226+16
 2188 0396 1A70     		strb	r2, [r3]
 585:main.c        ****     CyDelay(10);
 2189              		.loc 1 585 0
 2190 0398 0A20     		movs	r0, #10
 2191 039a FFF7FEFF 		bl	CyDelay
 586:main.c        ****     
 587:main.c        ****     //set up for the OLED screen's first write
 588:main.c        ****     I2Cbuff1[0] = 1<<6;
 2192              		.loc 1 588 0
 2193 039e 2A4B     		ldr	r3, .L226+20
 2194 03a0 4022     		movs	r2, #64
 2195 03a2 1A70     		strb	r2, [r3]
 589:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2196              		.loc 1 589 0
 2197 03a4 0022     		movs	r2, #0
 2198 03a6 0121     		movs	r1, #1
 2199 03a8 7020     		movs	r0, #112
 2200 03aa FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2201 03ae 0346     		mov	r3, r0
 2202 03b0 1A46     		mov	r2, r3
 2203 03b2 264B     		ldr	r3, .L226+24
 2204 03b4 1A60     		str	r2, [r3]
 590:main.c        ****     myGFX_init(128, 64);
 2205              		.loc 1 590 0
 2206 03b6 4021     		movs	r1, #64
 2207 03b8 8020     		movs	r0, #128
 2208 03ba FFF7FEFF 		bl	myGFX_init
 591:main.c        ****     myGFX_setFont(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 51


 2209              		.loc 1 591 0
 2210 03be 0020     		movs	r0, #0
 2211 03c0 FFF7FEFF 		bl	myGFX_setFont
 592:main.c        ****     OLED_init(128, 64);
 2212              		.loc 1 592 0
 2213 03c4 4021     		movs	r1, #64
 2214 03c6 8020     		movs	r0, #128
 2215 03c8 FFF7FEFF 		bl	OLED_init
 593:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2216              		.loc 1 593 0
 2217 03cc 1D4B     		ldr	r3, .L226+16
 2218 03ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2219 03d0 1846     		mov	r0, r3
 2220 03d2 0323     		movs	r3, #3
 2221 03d4 0022     		movs	r2, #0
 2222 03d6 0221     		movs	r1, #2
 2223 03d8 FFF7FEFF 		bl	OLEDwriteInt
 594:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2224              		.loc 1 594 0
 2225 03dc FFF7FEFF 		bl	OLEDgetCursor
 2226 03e0 0246     		mov	r2, r0
 2227 03e2 0323     		movs	r3, #3
 2228 03e4 0121     		movs	r1, #1
 2229 03e6 1A48     		ldr	r0, .L226+28
 2230 03e8 FFF7FEFF 		bl	OLEDwriteString
 595:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH, 
 2231              		.loc 1 595 0
 2232 03ec 154B     		ldr	r3, .L226+16
 2233 03ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2234 03f0 1A46     		mov	r2, r3
 2235 03f2 1346     		mov	r3, r2
 2236 03f4 DB00     		lsls	r3, r3, #3
 2237 03f6 9B1A     		subs	r3, r3, r2
 2238 03f8 5B00     		lsls	r3, r3, #1
 2239 03fa 164A     		ldr	r2, .L226+32
 2240 03fc 9C18     		adds	r4, r3, r2
 2241 03fe FFF7FEFF 		bl	OLEDgetCursor
 2242 0402 0246     		mov	r2, r0
 2243 0404 0323     		movs	r3, #3
 2244 0406 0921     		movs	r1, #9
 2245 0408 2046     		mov	r0, r4
 2246 040a FFF7FEFF 		bl	OLEDwriteString
 596:main.c        ****     OLED_draw(128, 64);
 2247              		.loc 1 596 0
 2248 040e 4021     		movs	r1, #64
 2249 0410 8020     		movs	r0, #128
 2250 0412 FFF7FEFF 		bl	OLED_draw
 597:main.c        ****     
 598:main.c        ****     
 599:main.c        ****     I2Cbuff1[0] = 1<<2;
 2251              		.loc 1 599 0
 2252 0416 0C4B     		ldr	r3, .L226+20
 2253 0418 0422     		movs	r2, #4
 2254 041a 1A70     		strb	r2, [r3]
 600:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2255              		.loc 1 600 0
 2256 041c 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 52


 2257 041e 0121     		movs	r1, #1
 2258 0420 7020     		movs	r0, #112
 2259 0422 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2260 0426 0346     		mov	r3, r0
 2261 0428 1A46     		mov	r2, r3
 2262 042a 084B     		ldr	r3, .L226+24
 2263 042c 1A60     		str	r2, [r3]
 2264              	.LBB16:
 601:main.c        **** 
 602:main.c        ****     for (int w = 0; w < 8; w++)
 2265              		.loc 1 602 0
 2266 042e 0023     		movs	r3, #0
 2267 0430 BB67     		str	r3, [r7, #120]
 2268 0432 27E0     		b	.L80
 2269              	.L227:
 2270              		.align	2
 2271              	.L226:
 2272 0434 00000000 		.word	macroNamesArray
 2273 0438 00000000 		.word	presetAlreadyDisplayed
 2274 043c 00000000 		.word	currentNeck
 2275 0440 00000000 		.word	necks
 2276 0444 00000000 		.word	currentCopedent
 2277 0448 00000000 		.word	I2Cbuff1
 2278 044c 00000000 		.word	status
 2279 0450 00040000 		.word	.LC0
 2280 0454 00000000 		.word	copedentNamesArray
 2281              	.L81:
 603:main.c        ****     {
 604:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 2282              		.loc 1 604 0 discriminator 3
 2283 0458 BB6F     		ldr	r3, [r7, #120]
 2284 045a DBB2     		uxtb	r3, r3
 2285 045c 0833     		adds	r3, r3, #8
 2286 045e DAB2     		uxtb	r2, r3
 2287 0460 924B     		ldr	r3, .L228
 2288 0462 1A70     		strb	r2, [r3]
 605:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2289              		.loc 1 605 0 discriminator 3
 2290 0464 0022     		movs	r2, #0
 2291 0466 0121     		movs	r1, #1
 2292 0468 7220     		movs	r0, #114
 2293 046a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2294 046e 0346     		mov	r3, r0
 2295 0470 1A46     		mov	r2, r3
 2296 0472 8F4B     		ldr	r3, .L228+4
 2297 0474 1A60     		str	r2, [r3]
 606:main.c        ****         OLED_init(128, 32);
 2298              		.loc 1 606 0 discriminator 3
 2299 0476 2021     		movs	r1, #32
 2300 0478 8020     		movs	r0, #128
 2301 047a FFF7FEFF 		bl	OLED_init
 602:main.c        ****     {
 2302              		.loc 1 602 0 discriminator 3
 2303 047e BB6F     		ldr	r3, [r7, #120]
 2304 0480 0133     		adds	r3, r3, #1
 2305 0482 BB67     		str	r3, [r7, #120]
 2306              	.L80:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 53


 602:main.c        ****     {
 2307              		.loc 1 602 0 is_stmt 0 discriminator 1
 2308 0484 BB6F     		ldr	r3, [r7, #120]
 2309 0486 072B     		cmp	r3, #7
 2310 0488 E6DD     		ble	.L81
 2311              	.LBE16:
 607:main.c        ****         //OLEDwriteInt(w , 1, 0,FirstLine);
 608:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 609:main.c        ****         //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OL
 610:main.c        ****        // OLED_draw(128, 32);
 611:main.c        ****     }
 612:main.c        **** 
 613:main.c        ****     //initialize the macro knob adc to scan all knobs
 614:main.c        ****     I2Cbuff1[0] = 1<<2;
 2312              		.loc 1 614 0 is_stmt 1
 2313 048a 884B     		ldr	r3, .L228
 2314 048c 0422     		movs	r2, #4
 2315 048e 1A70     		strb	r2, [r3]
 615:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2316              		.loc 1 615 0
 2317 0490 0022     		movs	r2, #0
 2318 0492 0121     		movs	r1, #1
 2319 0494 7020     		movs	r0, #112
 2320 0496 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2321 049a 0346     		mov	r3, r0
 2322 049c 1A46     		mov	r2, r3
 2323 049e 844B     		ldr	r3, .L228+4
 2324 04a0 1A60     		str	r2, [r3]
 616:main.c        ****     main_counter = 9;
 2325              		.loc 1 616 0
 2326 04a2 844B     		ldr	r3, .L228+8
 2327 04a4 0922     		movs	r2, #9
 2328 04a6 1A70     		strb	r2, [r3]
 617:main.c        **** 
 618:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2329              		.loc 1 618 0
 2330 04a8 804B     		ldr	r3, .L228
 2331 04aa 0F22     		movs	r2, #15
 2332 04ac 1A70     		strb	r2, [r3]
 619:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2333              		.loc 1 619 0
 2334 04ae 0022     		movs	r2, #0
 2335 04b0 0121     		movs	r1, #1
 2336 04b2 3520     		movs	r0, #53
 2337 04b4 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2338 04b8 0346     		mov	r3, r0
 2339 04ba 1A46     		mov	r2, r3
 2340 04bc 7C4B     		ldr	r3, .L228+4
 2341 04be 1A60     		str	r2, [r3]
 620:main.c        ****     
 621:main.c        **** #if 0
 622:main.c        ****     while(1)
 623:main.c        ****     {
 624:main.c        ****         for (int i=  0; i < 4; i++)
 625:main.c        ****         {
 626:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 627:main.c        ****             if (knobs[i] != prevKnobs[i])
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 54


 628:main.c        ****             {
 629:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 630:main.c        ****             }
 631:main.c        ****             prevKnobs[i] = knobs[i];
 632:main.c        ****         }
 633:main.c        ****         
 634:main.c        **** 
 635:main.c        ****         I2Cbuff1[0] = 1<<0;
 636:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 637:main.c        **** 
 638:main.c        ****         //CyDelayUs(100);
 639:main.c        ****         I2Cbuff1[0] = 0x0E;
 640:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 641:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 642:main.c        ****        // CyDelayUs(100);
 643:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 644:main.c        ****         angle[0] +=  I2Cbuff2[1];
 645:main.c        ****         
 646:main.c        ****     }
 647:main.c        ****     #endif
 648:main.c        ****     //OLEDclear();
 649:main.c        ****     /*
 650:main.c        ****     while(1)
 651:main.c        ****     {
 652:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 653:main.c        ****         OLED_draw();
 654:main.c        ****         CyDelay(1);
 655:main.c        ****         
 656:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 657:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 658:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 659:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 660:main.c        ****         for (int i=  0; i < 4; i++)
 661:main.c        ****         {
 662:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 663:main.c        ****         }
 664:main.c        **** 
 665:main.c        ****     }
 666:main.c        ****     */
 667:main.c        **** #if 0
 668:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 669:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 670:main.c        **** 
 671:main.c        **** 
 672:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 673:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 674:main.c        **** 
 675:main.c        ****     //address 0x48
 676:main.c        ****     I2Cbuff1[0] = 0x1;
 677:main.c        ****     I2Cbuff1[1] = 0b11000000;
 678:main.c        ****     I2Cbuff1[2] = 0b10000011;
 679:main.c        **** 
 680:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 681:main.c        ****     #endif
 682:main.c        **** 
 683:main.c        ****     SPIS_1_Start();  
 2342              		.loc 1 683 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 55


 2343 04c0 FFF7FEFF 		bl	SPIS_1_Start
 684:main.c        ****     SPIM_1_Start();  
 2344              		.loc 1 684 0
 2345 04c4 FFF7FEFF 		bl	SPIM_1_Start
 685:main.c        ****     SPIS_2_Start(); 
 2346              		.loc 1 685 0
 2347 04c8 FFF7FEFF 		bl	SPIS_2_Start
 686:main.c        ****     DmaTxConfiguration();
 2348              		.loc 1 686 0
 2349 04cc FFF7FEFF 		bl	DmaTxConfiguration
 687:main.c        ****     DmaRxConfiguration();
 2350              		.loc 1 687 0
 2351 04d0 FFF7FEFF 		bl	DmaRxConfiguration
 688:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2352              		.loc 1 688 0
 2353 04d4 7848     		ldr	r0, .L228+12
 2354 04d6 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 689:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2355              		.loc 1 689 0
 2356 04da 7848     		ldr	r0, .L228+16
 2357 04dc FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 690:main.c        ****     
 691:main.c        ****     myArray[30] = 254;
 2358              		.loc 1 691 0
 2359 04e0 774B     		ldr	r3, .L228+20
 2360 04e2 FE22     		movs	r2, #254
 2361 04e4 9A77     		strb	r2, [r3, #30]
 692:main.c        ****     myArray[31] = 253;
 2362              		.loc 1 692 0
 2363 04e6 764B     		ldr	r3, .L228+20
 2364 04e8 FD22     		movs	r2, #253
 2365 04ea DA77     		strb	r2, [r3, #31]
 693:main.c        **** 
 694:main.c        ****     main_counter = 0;
 2366              		.loc 1 694 0
 2367 04ec 714B     		ldr	r3, .L228+8
 2368 04ee 0022     		movs	r2, #0
 2369 04f0 1A70     		strb	r2, [r3]
 2370              	.L214:
 695:main.c        **** 
 696:main.c        **** 	for(;;)
 697:main.c        ****     {
 698:main.c        ****         
 699:main.c        ****         if (parseThatMF)
 2371              		.loc 1 699 0
 2372 04f2 744B     		ldr	r3, .L228+24
 2373 04f4 1B78     		ldrb	r3, [r3]
 2374 04f6 DBB2     		uxtb	r3, r3
 2375 04f8 002B     		cmp	r3, #0
 2376 04fa 01D0     		beq	.L82
 700:main.c        ****         {
 701:main.c        ****             parseSysex();
 2377              		.loc 1 701 0
 2378 04fc FFF7FEFF 		bl	parseSysex
 2379              	.L82:
 702:main.c        ****         }
 703:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 56


 704:main.c        ****         //if (newDataFlag)
 705:main.c        ****         //{
 706:main.c        ****         //}
 707:main.c        ****             /*
 708:main.c        ****             for (int i = 0; i < 5; i++)
 709:main.c        ****             {
 710:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 711:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 712:main.c        ****                 I2C_1_MasterSendStop(); 
 713:main.c        **** 
 714:main.c        **** 
 715:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 716:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 717:main.c        ****                 //I2C_1_MasterSendStop();
 718:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 719:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 720:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 721:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 722:main.c        ****                  I2C_1_MasterSendStop(); 
 723:main.c        ****                 
 724:main.c        ****                 CyDelay(1);
 725:main.c        **** 
 726:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 727:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 728:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 729:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 730:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 731:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 732:main.c        ****                 I2C_1_MasterSendStop(); 
 733:main.c        ****                 
 734:main.c        ****                 CyDelay(2);
 735:main.c        **** 
 736:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 737:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 738:main.c        ****                I2C_1_MasterWriteByte(0x80);
 739:main.c        ****                 I2C_1_MasterSendStop(); 
 740:main.c        ****                CyDelay(2);
 741:main.c        ****             }
 742:main.c        ****         */
 743:main.c        ****         //set main i2c mux
 744:main.c        ****     
 745:main.c        ****         
 746:main.c        ****         /*
 747:main.c        ****         for (int i = 0; i < 4; i++)
 748:main.c        ****         {
 749:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 750:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 751:main.c        ****             I2C_1_MasterSendStop(); 
 752:main.c        **** 
 753:main.c        **** 
 754:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 755:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 756:main.c        ****             //I2C_1_MasterSendStop();
 757:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 758:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 759:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 760:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 57


 761:main.c        ****              I2C_1_MasterSendStop(); 
 762:main.c        ****             
 763:main.c        ****             CyDelay(1);
 764:main.c        **** 
 765:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 766:main.c        ****             I2C_1_MasterWriteByte(0x01);
 767:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 768:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 769:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 770:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 771:main.c        ****             I2C_1_MasterSendStop(); 
 772:main.c        ****             
 773:main.c        ****             CyDelay(2);
 774:main.c        **** 
 775:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 776:main.c        ****             I2C_1_MasterWriteByte(0xff);
 777:main.c        ****             I2C_1_MasterWriteByte(0x80);
 778:main.c        ****             I2C_1_MasterSendStop(); 
 779:main.c        ****            CyDelay(2);
 780:main.c        ****         }
 781:main.c        ****             */
 782:main.c        ****         /*    
 783:main.c        ****         if (main_counter == 6)
 784:main.c        ****         {
 785:main.c        ****             main_counter = 8;
 786:main.c        ****         }
 787:main.c        ****         */    
 788:main.c        ****         testpin3_Write(1);
 2380              		.loc 1 788 0
 2381 0500 0120     		movs	r0, #1
 2382 0502 FFF7FEFF 		bl	testpin3_Write
 789:main.c        ****        //sense levers and pedals
 790:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2383              		.loc 1 790 0
 2384 0506 6B4B     		ldr	r3, .L228+8
 2385 0508 1B78     		ldrb	r3, [r3]
 2386 050a DBB2     		uxtb	r3, r3
 2387 050c 1A46     		mov	r2, r3
 2388 050e 6E4B     		ldr	r3, .L228+28
 2389 0510 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2390 0514 6D4B     		ldr	r3, .L228+32
 2391 0516 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2392 0518 9A42     		cmp	r2, r3
 2393 051a 14D0     		beq	.L83
 2394              	.LBB17:
 791:main.c        ****         {
 792:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2395              		.loc 1 792 0
 2396 051c 654B     		ldr	r3, .L228+8
 2397 051e 1B78     		ldrb	r3, [r3]
 2398 0520 DBB2     		uxtb	r3, r3
 2399 0522 1A46     		mov	r2, r3
 2400 0524 684B     		ldr	r3, .L228+28
 2401 0526 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2402 052a 1A46     		mov	r2, r3
 2403 052c 0123     		movs	r3, #1
 2404 052e 9340     		lsls	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 58


 2405 0530 DAB2     		uxtb	r2, r3
 2406 0532 5E4B     		ldr	r3, .L228
 2407 0534 1A70     		strb	r2, [r3]
 793:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2408              		.loc 1 793 0
 2409 0536 0022     		movs	r2, #0
 2410 0538 0121     		movs	r1, #1
 2411 053a 7020     		movs	r0, #112
 2412 053c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2413 0540 0346     		mov	r3, r0
 2414 0542 87F82B30 		strb	r3, [r7, #43]
 2415              	.L83:
 2416              	.LBE17:
 794:main.c        ****         }
 795:main.c        ****         last_mux = mux_states[main_counter][0];
 2417              		.loc 1 795 0
 2418 0546 5B4B     		ldr	r3, .L228+8
 2419 0548 1B78     		ldrb	r3, [r3]
 2420 054a DBB2     		uxtb	r3, r3
 2421 054c 1A46     		mov	r2, r3
 2422 054e 5E4B     		ldr	r3, .L228+28
 2423 0550 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2424 0554 5D4B     		ldr	r3, .L228+32
 2425 0556 1A70     		strb	r2, [r3]
 796:main.c        ****         
 797:main.c        ****         
 798:main.c        ****         CyDelayUs(10);
 2426              		.loc 1 798 0
 2427 0558 0A20     		movs	r0, #10
 2428 055a FFF7FEFF 		bl	CyDelayUs
 799:main.c        ****         if (mux_states[main_counter][0] == 5)
 2429              		.loc 1 799 0
 2430 055e 554B     		ldr	r3, .L228+8
 2431 0560 1B78     		ldrb	r3, [r3]
 2432 0562 DBB2     		uxtb	r3, r3
 2433 0564 1A46     		mov	r2, r3
 2434 0566 584B     		ldr	r3, .L228+28
 2435 0568 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2436 056c 052B     		cmp	r3, #5
 2437 056e 1DD1     		bne	.L84
 800:main.c        ****         {
 801:main.c        ****             if (!i2c_skipped[main_counter])
 2438              		.loc 1 801 0
 2439 0570 504B     		ldr	r3, .L228+8
 2440 0572 1B78     		ldrb	r3, [r3]
 2441 0574 DBB2     		uxtb	r3, r3
 2442 0576 1A46     		mov	r2, r3
 2443 0578 554B     		ldr	r3, .L228+36
 2444 057a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2445 057c 002B     		cmp	r3, #0
 2446 057e 15D1     		bne	.L84
 802:main.c        ****             {
 803:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2447              		.loc 1 803 0
 2448 0580 4C4B     		ldr	r3, .L228+8
 2449 0582 1B78     		ldrb	r3, [r3]
 2450 0584 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 59


 2451 0586 504A     		ldr	r2, .L228+28
 2452 0588 5B00     		lsls	r3, r3, #1
 2453 058a 1344     		add	r3, r3, r2
 2454 058c 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2455 058e 1A46     		mov	r2, r3
 2456 0590 0123     		movs	r3, #1
 2457 0592 9340     		lsls	r3, r3, r2
 2458 0594 DAB2     		uxtb	r2, r3
 2459 0596 454B     		ldr	r3, .L228
 2460 0598 1A70     		strb	r2, [r3]
 804:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2461              		.loc 1 804 0
 2462 059a 0022     		movs	r2, #0
 2463 059c 0121     		movs	r1, #1
 2464 059e 7120     		movs	r0, #113
 2465 05a0 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2466 05a4 0346     		mov	r3, r0
 2467 05a6 1A46     		mov	r2, r3
 2468 05a8 414B     		ldr	r3, .L228+4
 2469 05aa 1A60     		str	r2, [r3]
 2470              	.L84:
 805:main.c        ****             }
 806:main.c        ****         }
 807:main.c        **** 
 808:main.c        ****         CyDelayUs(10);
 2471              		.loc 1 808 0
 2472 05ac 0A20     		movs	r0, #10
 2473 05ae FFF7FEFF 		bl	CyDelayUs
 809:main.c        ****         //if it's a hall sensor
 810:main.c        **** 
 811:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 812:main.c        ****         if (main_counter < 10)
 2474              		.loc 1 812 0
 2475 05b2 404B     		ldr	r3, .L228+8
 2476 05b4 1B78     		ldrb	r3, [r3]
 2477 05b6 DBB2     		uxtb	r3, r3
 2478 05b8 092B     		cmp	r3, #9
 2479 05ba 00F2BF80 		bhi	.L85
 813:main.c        ****         {
 814:main.c        ****             if (!i2c_skipped[main_counter])
 2480              		.loc 1 814 0
 2481 05be 3D4B     		ldr	r3, .L228+8
 2482 05c0 1B78     		ldrb	r3, [r3]
 2483 05c2 DBB2     		uxtb	r3, r3
 2484 05c4 1A46     		mov	r2, r3
 2485 05c6 424B     		ldr	r3, .L228+36
 2486 05c8 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2487 05ca 002B     		cmp	r3, #0
 2488 05cc 40F0B680 		bne	.L85
 815:main.c        ****             {
 816:main.c        ****                 //CyDelayUs(100);
 817:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2489              		.loc 1 817 0
 2490 05d0 364B     		ldr	r3, .L228
 2491 05d2 0E22     		movs	r2, #14
 2492 05d4 1A70     		strb	r2, [r3]
 818:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 60


 2493              		.loc 1 818 0
 2494 05d6 0222     		movs	r2, #2
 2495 05d8 0121     		movs	r1, #1
 2496 05da 3620     		movs	r0, #54
 2497 05dc FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2498 05e0 0346     		mov	r3, r0
 2499 05e2 1A46     		mov	r2, r3
 2500 05e4 324B     		ldr	r3, .L228+4
 2501 05e6 1A60     		str	r2, [r3]
 819:main.c        ****                 if (status == 0)
 2502              		.loc 1 819 0
 2503 05e8 314B     		ldr	r3, .L228+4
 2504 05ea 1B68     		ldr	r3, [r3]
 2505 05ec 002B     		cmp	r3, #0
 2506 05ee 08D1     		bne	.L86
 820:main.c        ****                 {
 821:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2507              		.loc 1 821 0
 2508 05f0 0122     		movs	r2, #1
 2509 05f2 0221     		movs	r1, #2
 2510 05f4 3620     		movs	r0, #54
 2511 05f6 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2512 05fa 0346     		mov	r3, r0
 2513 05fc 1A46     		mov	r2, r3
 2514 05fe 2C4B     		ldr	r3, .L228+4
 2515 0600 1A60     		str	r2, [r3]
 2516              	.L86:
 822:main.c        ****                 }
 823:main.c        ****                 if (status  == 0)
 2517              		.loc 1 823 0
 2518 0602 2B4B     		ldr	r3, .L228+4
 2519 0604 1B68     		ldr	r3, [r3]
 2520 0606 002B     		cmp	r3, #0
 2521 0608 40F09880 		bne	.L85
 824:main.c        ****                 {
 825:main.c        ****                     //CyDelayUs(100);
 826:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 2522              		.loc 1 826 0
 2523 060c 294B     		ldr	r3, .L228+8
 2524 060e 1B78     		ldrb	r3, [r3]
 2525 0610 DBB2     		uxtb	r3, r3
 2526 0612 1A46     		mov	r2, r3
 2527 0614 2F4B     		ldr	r3, .L228+40
 2528 0616 1B78     		ldrb	r3, [r3]
 2529 0618 DBB2     		uxtb	r3, r3
 2530 061a 9BB2     		uxth	r3, r3
 2531 061c 1B02     		lsls	r3, r3, #8
 2532 061e 99B2     		uxth	r1, r3
 2533 0620 2D4B     		ldr	r3, .L228+44
 2534 0622 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 827:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 2535              		.loc 1 827 0
 2536 0626 2B4B     		ldr	r3, .L228+40
 2537 0628 5B78     		ldrb	r3, [r3, #1]
 2538 062a D8B2     		uxtb	r0, r3
 2539 062c 214B     		ldr	r3, .L228+8
 2540 062e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 61


 2541 0630 DBB2     		uxtb	r3, r3
 2542 0632 1946     		mov	r1, r3
 2543 0634 1A46     		mov	r2, r3
 2544 0636 284B     		ldr	r3, .L228+44
 2545 0638 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2546 063c 83B2     		uxth	r3, r0
 2547 063e 1344     		add	r3, r3, r2
 2548 0640 9AB2     		uxth	r2, r3
 2549 0642 254B     		ldr	r3, .L228+44
 2550 0644 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 828:main.c        ****                     
 829:main.c        ****                     if (calibrationMode)
 2551              		.loc 1 829 0
 2552 0648 244B     		ldr	r3, .L228+48
 2553 064a 1B68     		ldr	r3, [r3]
 2554 064c 002B     		cmp	r3, #0
 2555 064e 75D0     		beq	.L85
 830:main.c        ****                     {
 831:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 2556              		.loc 1 831 0
 2557 0650 184B     		ldr	r3, .L228+8
 2558 0652 1B78     		ldrb	r3, [r3]
 2559 0654 DBB2     		uxtb	r3, r3
 2560 0656 1A46     		mov	r2, r3
 2561 0658 1F4B     		ldr	r3, .L228+44
 2562 065a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2563 065e 154B     		ldr	r3, .L228+8
 2564 0660 1B78     		ldrb	r3, [r3]
 2565 0662 DBB2     		uxtb	r3, r3
 2566 0664 1946     		mov	r1, r3
 2567 0666 1E4B     		ldr	r3, .L228+52
 2568 0668 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2569 066c 9A42     		cmp	r2, r3
 2570 066e 47D2     		bcs	.L87
 832:main.c        ****                         {
 833:main.c        ****                             if (main_counter == 0)
 2571              		.loc 1 833 0
 2572 0670 104B     		ldr	r3, .L228+8
 2573 0672 1B78     		ldrb	r3, [r3]
 2574 0674 DBB2     		uxtb	r3, r3
 2575 0676 002B     		cmp	r3, #0
 2576 0678 34D1     		bne	.L88
 834:main.c        ****                             {
 835:main.c        ****                                 if (angle[main_counter] != 0)
 2577              		.loc 1 835 0
 2578 067a 0E4B     		ldr	r3, .L228+8
 2579 067c 1B78     		ldrb	r3, [r3]
 2580 067e DBB2     		uxtb	r3, r3
 2581 0680 1A46     		mov	r2, r3
 2582 0682 154B     		ldr	r3, .L228+44
 2583 0684 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2584 0688 002B     		cmp	r3, #0
 2585 068a 39D0     		beq	.L87
 836:main.c        ****                                 {
 837:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 2586              		.loc 1 837 0
 2587 068c 094B     		ldr	r3, .L228+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 62


 2588 068e 1B78     		ldrb	r3, [r3]
 2589 0690 DBB2     		uxtb	r3, r3
 2590 0692 1A46     		mov	r2, r3
 2591 0694 074B     		ldr	r3, .L228+8
 2592 0696 1B78     		ldrb	r3, [r3]
 2593 0698 DBB2     		uxtb	r3, r3
 2594 069a 1946     		mov	r1, r3
 2595 069c 0E4B     		ldr	r3, .L228+44
 2596 069e 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2597 06a2 0F4B     		ldr	r3, .L228+52
 2598 06a4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2599 06a8 2AE0     		b	.L87
 2600              	.L229:
 2601 06aa 00BF     		.align	2
 2602              	.L228:
 2603 06ac 00000000 		.word	I2Cbuff1
 2604 06b0 00000000 		.word	status
 2605 06b4 00000000 		.word	main_counter
 2606 06b8 00000000 		.word	spis_1_ss
 2607 06bc 00000000 		.word	spis_2_ss
 2608 06c0 00000000 		.word	myArray
 2609 06c4 00000000 		.word	parseThatMF
 2610 06c8 00000000 		.word	mux_states
 2611 06cc 00000000 		.word	last_mux
 2612 06d0 00000000 		.word	i2c_skipped
 2613 06d4 00000000 		.word	I2Cbuff2
 2614 06d8 00000000 		.word	angle
 2615 06dc 00000000 		.word	calibrationMode
 2616 06e0 00000000 		.word	pedals_low
 2617              	.L88:
 838:main.c        ****                                 }
 839:main.c        ****                             }
 840:main.c        ****                             else
 841:main.c        ****                             {
 842:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 2618              		.loc 1 842 0
 2619 06e4 884B     		ldr	r3, .L230
 2620 06e6 1B78     		ldrb	r3, [r3]
 2621 06e8 DBB2     		uxtb	r3, r3
 2622 06ea 1A46     		mov	r2, r3
 2623 06ec 864B     		ldr	r3, .L230
 2624 06ee 1B78     		ldrb	r3, [r3]
 2625 06f0 DBB2     		uxtb	r3, r3
 2626 06f2 1946     		mov	r1, r3
 2627 06f4 854B     		ldr	r3, .L230+4
 2628 06f6 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2629 06fa 854B     		ldr	r3, .L230+8
 2630 06fc 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2631              	.L87:
 843:main.c        ****                             }
 844:main.c        ****                             
 845:main.c        ****                         }
 846:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 2632              		.loc 1 846 0
 2633 0700 814B     		ldr	r3, .L230
 2634 0702 1B78     		ldrb	r3, [r3]
 2635 0704 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 63


 2636 0706 1A46     		mov	r2, r3
 2637 0708 804B     		ldr	r3, .L230+4
 2638 070a 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2639 070e 7E4B     		ldr	r3, .L230
 2640 0710 1B78     		ldrb	r3, [r3]
 2641 0712 DBB2     		uxtb	r3, r3
 2642 0714 1946     		mov	r1, r3
 2643 0716 7F4B     		ldr	r3, .L230+12
 2644 0718 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2645 071c 9A42     		cmp	r2, r3
 2646 071e 0DD9     		bls	.L85
 847:main.c        ****                         {
 848:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 2647              		.loc 1 848 0
 2648 0720 794B     		ldr	r3, .L230
 2649 0722 1B78     		ldrb	r3, [r3]
 2650 0724 DBB2     		uxtb	r3, r3
 2651 0726 1A46     		mov	r2, r3
 2652 0728 774B     		ldr	r3, .L230
 2653 072a 1B78     		ldrb	r3, [r3]
 2654 072c DBB2     		uxtb	r3, r3
 2655 072e 1946     		mov	r1, r3
 2656 0730 764B     		ldr	r3, .L230+4
 2657 0732 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2658 0736 774B     		ldr	r3, .L230+12
 2659 0738 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2660              	.L85:
 849:main.c        ****                         }
 850:main.c        ****                     }
 851:main.c        ****                 }
 852:main.c        ****             }
 853:main.c        ****         }
 854:main.c        ****         
 855:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 856:main.c        ****         if (main_counter == 9)
 2661              		.loc 1 856 0
 2662 073c 724B     		ldr	r3, .L230
 2663 073e 1B78     		ldrb	r3, [r3]
 2664 0740 DBB2     		uxtb	r3, r3
 2665 0742 092B     		cmp	r3, #9
 2666 0744 40F0B080 		bne	.L90
 857:main.c        ****         {
 858:main.c        ****             if (!i2c_skipped[main_counter])
 2667              		.loc 1 858 0
 2668 0748 6F4B     		ldr	r3, .L230
 2669 074a 1B78     		ldrb	r3, [r3]
 2670 074c DBB2     		uxtb	r3, r3
 2671 074e 1A46     		mov	r2, r3
 2672 0750 714B     		ldr	r3, .L230+16
 2673 0752 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2674 0754 002B     		cmp	r3, #0
 2675 0756 40F00E81 		bne	.L95
 859:main.c        ****             {
 860:main.c        ****                 //scan the knob adc
 861:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2676              		.loc 1 861 0
 2677 075a 704B     		ldr	r3, .L230+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 64


 2678 075c 0022     		movs	r2, #0
 2679 075e 1A70     		strb	r2, [r3]
 862:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 2680              		.loc 1 862 0
 2681 0760 0022     		movs	r2, #0
 2682 0762 1021     		movs	r1, #16
 2683 0764 3520     		movs	r0, #53
 2684 0766 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2685 076a 0346     		mov	r3, r0
 2686 076c 1A46     		mov	r2, r3
 2687 076e 6C4B     		ldr	r3, .L230+24
 2688 0770 1A60     		str	r2, [r3]
 863:main.c        ****                 if (status == 0)
 2689              		.loc 1 863 0
 2690 0772 6B4B     		ldr	r3, .L230+24
 2691 0774 1B68     		ldr	r3, [r3]
 2692 0776 002B     		cmp	r3, #0
 2693 0778 40F0FD80 		bne	.L95
 2694              	.LBB18:
 864:main.c        ****                 {
 865:main.c        ****                     for (int i = 0; i < NUM_MACROS; i++)
 2695              		.loc 1 865 0
 2696 077c 0023     		movs	r3, #0
 2697 077e 7B67     		str	r3, [r7, #116]
 2698 0780 49E0     		b	.L92
 2699              	.L94:
 2700              	.LBB19:
 866:main.c        ****                     {
 867:main.c        ****                        uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 409
 2701              		.loc 1 867 0
 2702 0782 7B6F     		ldr	r3, [r7, #116]
 2703 0784 5B00     		lsls	r3, r3, #1
 2704 0786 674A     		ldr	r2, .L230+28
 2705 0788 D35C     		ldrb	r3, [r2, r3]
 2706 078a DBB2     		uxtb	r3, r3
 2707 078c 9BB2     		uxth	r3, r3
 2708 078e 1B02     		lsls	r3, r3, #8
 2709 0790 9AB2     		uxth	r2, r3
 2710 0792 7B6F     		ldr	r3, [r7, #116]
 2711 0794 5B00     		lsls	r3, r3, #1
 2712 0796 0133     		adds	r3, r3, #1
 2713 0798 6249     		ldr	r1, .L230+28
 2714 079a CB5C     		ldrb	r3, [r1, r3]
 2715 079c DBB2     		uxtb	r3, r3
 2716 079e 9BB2     		uxth	r3, r3
 2717 07a0 1344     		add	r3, r3, r2
 2718 07a2 9BB2     		uxth	r3, r3
 2719 07a4 C3F30B03 		ubfx	r3, r3, #0, #12
 2720 07a8 BB80     		strh	r3, [r7, #4]	@ movhi
 868:main.c        ****                         macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit fo
 2721              		.loc 1 868 0
 2722 07aa BB88     		ldrh	r3, [r7, #4]
 2723 07ac 1B09     		lsrs	r3, r3, #4
 2724 07ae 9BB2     		uxth	r3, r3
 2725 07b0 DBB2     		uxtb	r3, r3
 2726 07b2 DB43     		mvns	r3, r3
 2727 07b4 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 65


 2728 07b6 5C4A     		ldr	r2, .L230+32
 2729 07b8 7B6F     		ldr	r3, [r7, #116]
 2730 07ba 1344     		add	r3, r3, r2
 2731 07bc 0A46     		mov	r2, r1
 2732 07be 1A70     		strb	r2, [r3]
 869:main.c        ****                         macroKnobValues7bit[i] = macroKnobValues[i] >> 1;
 2733              		.loc 1 869 0
 2734 07c0 594A     		ldr	r2, .L230+32
 2735 07c2 7B6F     		ldr	r3, [r7, #116]
 2736 07c4 1344     		add	r3, r3, r2
 2737 07c6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2738 07c8 5B08     		lsrs	r3, r3, #1
 2739 07ca D9B2     		uxtb	r1, r3
 2740 07cc 574A     		ldr	r2, .L230+36
 2741 07ce 7B6F     		ldr	r3, [r7, #116]
 2742 07d0 1344     		add	r3, r3, r2
 2743 07d2 0A46     		mov	r2, r1
 2744 07d4 1A70     		strb	r2, [r3]
 870:main.c        ****                         if (macroKnobValues7bit[i] != prevMacroKnobValues7bit[i])
 2745              		.loc 1 870 0
 2746 07d6 554A     		ldr	r2, .L230+36
 2747 07d8 7B6F     		ldr	r3, [r7, #116]
 2748 07da 1344     		add	r3, r3, r2
 2749 07dc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 2750 07de 5449     		ldr	r1, .L230+40
 2751 07e0 7B6F     		ldr	r3, [r7, #116]
 2752 07e2 0B44     		add	r3, r3, r1
 2753 07e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2754 07e6 9A42     		cmp	r2, r3
 2755 07e8 09D0     		beq	.L93
 871:main.c        ****                         {
 872:main.c        ****                             sendMIDIControlChange(i+1, macroKnobValues7bit[i], 0);
 2756              		.loc 1 872 0
 2757 07ea 7B6F     		ldr	r3, [r7, #116]
 2758 07ec 581C     		adds	r0, r3, #1
 2759 07ee 4F4A     		ldr	r2, .L230+36
 2760 07f0 7B6F     		ldr	r3, [r7, #116]
 2761 07f2 1344     		add	r3, r3, r2
 2762 07f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2763 07f6 0022     		movs	r2, #0
 2764 07f8 1946     		mov	r1, r3
 2765 07fa FFF7FEFF 		bl	sendMIDIControlChange
 2766              	.L93:
 873:main.c        ****                         }
 874:main.c        ****                         prevMacroKnobValues7bit[i] = macroKnobValues7bit[i];
 2767              		.loc 1 874 0 discriminator 2
 2768 07fe 4B4A     		ldr	r2, .L230+36
 2769 0800 7B6F     		ldr	r3, [r7, #116]
 2770 0802 1344     		add	r3, r3, r2
 2771 0804 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 2772 0806 4A4A     		ldr	r2, .L230+40
 2773 0808 7B6F     		ldr	r3, [r7, #116]
 2774 080a 1344     		add	r3, r3, r2
 2775 080c 0A46     		mov	r2, r1
 2776 080e 1A70     		strb	r2, [r3]
 2777              	.LBE19:
 865:main.c        ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 66


 2778              		.loc 1 865 0 discriminator 2
 2779 0810 7B6F     		ldr	r3, [r7, #116]
 2780 0812 0133     		adds	r3, r3, #1
 2781 0814 7B67     		str	r3, [r7, #116]
 2782              	.L92:
 865:main.c        ****                     {
 2783              		.loc 1 865 0 is_stmt 0 discriminator 1
 2784 0816 7B6F     		ldr	r3, [r7, #116]
 2785 0818 072B     		cmp	r3, #7
 2786 081a B2DD     		ble	.L94
 2787              	.LBE18:
 875:main.c        ****                     }
 876:main.c        ****                     //
 877:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 2788              		.loc 1 877 0 is_stmt 1
 2789 081c 454B     		ldr	r3, .L230+44
 2790 081e 1B68     		ldr	r3, [r3]
 2791 0820 022B     		cmp	r3, #2
 2792 0822 40F0A880 		bne	.L95
 878:main.c        ****                     {
 879:main.c        ****                         //send the data to the little macro OLED screens
 880:main.c        ****                         
 881:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 2793              		.loc 1 881 0
 2794 0826 444B     		ldr	r3, .L230+48
 2795 0828 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2796 082a 0833     		adds	r3, r3, #8
 2797 082c DAB2     		uxtb	r2, r3
 2798 082e 3B4B     		ldr	r3, .L230+20
 2799 0830 1A70     		strb	r2, [r3]
 882:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 2800              		.loc 1 882 0
 2801 0832 0022     		movs	r2, #0
 2802 0834 0121     		movs	r1, #1
 2803 0836 7220     		movs	r0, #114
 2804 0838 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2805 083c 0346     		mov	r3, r0
 2806 083e 1A46     		mov	r2, r3
 2807 0840 374B     		ldr	r3, .L230+24
 2808 0842 1A60     		str	r2, [r3]
 883:main.c        ****                         //OLED_init(128, 32);
 884:main.c        ****                         OLEDclear(128, 32);
 2809              		.loc 1 884 0
 2810 0844 2021     		movs	r1, #32
 2811 0846 8020     		movs	r0, #128
 2812 0848 FFF7FEFF 		bl	OLEDclear
 885:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 886:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 887:main.c        ****                         myGFX_setFont(1);
 2813              		.loc 1 887 0
 2814 084c 0120     		movs	r0, #1
 2815 084e FFF7FEFF 		bl	myGFX_setFont
 888:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 889:main.c        ****                         OLEDwriteString((char *)&macroNamesArray[patchNum][whichMacro][0], MACRO_CL
 2816              		.loc 1 889 0
 2817 0852 3A4B     		ldr	r3, .L230+52
 2818 0854 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 67


 2819 0856 1946     		mov	r1, r3
 2820 0858 374B     		ldr	r3, .L230+48
 2821 085a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2822 085c 1A46     		mov	r2, r3
 2823 085e D200     		lsls	r2, r2, #3
 2824 0860 D21A     		subs	r2, r2, r3
 2825 0862 5300     		lsls	r3, r2, #1
 2826 0864 1A46     		mov	r2, r3
 2827 0866 0B46     		mov	r3, r1
 2828 0868 DB00     		lsls	r3, r3, #3
 2829 086a 5B1A     		subs	r3, r3, r1
 2830 086c 1B01     		lsls	r3, r3, #4
 2831 086e 1344     		add	r3, r3, r2
 2832 0870 334A     		ldr	r2, .L230+56
 2833 0872 9818     		adds	r0, r3, r2
 2834 0874 0123     		movs	r3, #1
 2835 0876 0022     		movs	r2, #0
 2836 0878 0921     		movs	r1, #9
 2837 087a FFF7FEFF 		bl	OLEDwriteString
 890:main.c        ****                         OLED_draw(128, 32);
 2838              		.loc 1 890 0
 2839 087e 2021     		movs	r1, #32
 2840 0880 8020     		movs	r0, #128
 2841 0882 FFF7FEFF 		bl	OLED_draw
 891:main.c        **** 
 892:main.c        ****                         whichMacro++;
 2842              		.loc 1 892 0
 2843 0886 2C4B     		ldr	r3, .L230+48
 2844 0888 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2845 088a 0133     		adds	r3, r3, #1
 2846 088c DAB2     		uxtb	r2, r3
 2847 088e 2A4B     		ldr	r3, .L230+48
 2848 0890 1A70     		strb	r2, [r3]
 893:main.c        ****                         if (whichMacro >=8)
 2849              		.loc 1 893 0
 2850 0892 294B     		ldr	r3, .L230+48
 2851 0894 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2852 0896 072B     		cmp	r3, #7
 2853 0898 6DD9     		bls	.L95
 894:main.c        ****                         {
 895:main.c        ****                             macroOLEDWaitingToSend = 0;
 2854              		.loc 1 895 0
 2855 089a 264B     		ldr	r3, .L230+44
 2856 089c 0022     		movs	r2, #0
 2857 089e 1A60     		str	r2, [r3]
 896:main.c        ****                             whichMacro = 0;
 2858              		.loc 1 896 0
 2859 08a0 254B     		ldr	r3, .L230+48
 2860 08a2 0022     		movs	r2, #0
 2861 08a4 1A70     		strb	r2, [r3]
 2862 08a6 66E0     		b	.L95
 2863              	.L90:
 897:main.c        ****                         }
 898:main.c        ****                     }
 899:main.c        ****                 }
 900:main.c        ****             }
 901:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 68


 902:main.c        ****         }
 903:main.c        ****         //otherwise it's the ADC for the foot pedal
 904:main.c        ****         else if (main_counter == 10)
 2864              		.loc 1 904 0
 2865 08a8 174B     		ldr	r3, .L230
 2866 08aa 1B78     		ldrb	r3, [r3]
 2867 08ac DBB2     		uxtb	r3, r3
 2868 08ae 0A2B     		cmp	r3, #10
 2869 08b0 4AD1     		bne	.L96
 905:main.c        ****         {
 906:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 907:main.c        ****             if (!i2c_skipped[main_counter])
 2870              		.loc 1 907 0
 2871 08b2 154B     		ldr	r3, .L230
 2872 08b4 1B78     		ldrb	r3, [r3]
 2873 08b6 DBB2     		uxtb	r3, r3
 2874 08b8 1A46     		mov	r2, r3
 2875 08ba 174B     		ldr	r3, .L230+16
 2876 08bc 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2877 08be 002B     		cmp	r3, #0
 2878 08c0 59D1     		bne	.L95
 908:main.c        ****             {
 909:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2879              		.loc 1 909 0
 2880 08c2 164B     		ldr	r3, .L230+20
 2881 08c4 0022     		movs	r2, #0
 2882 08c6 1A70     		strb	r2, [r3]
 910:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2883              		.loc 1 910 0
 2884 08c8 0022     		movs	r2, #0
 2885 08ca 0221     		movs	r1, #2
 2886 08cc 4F20     		movs	r0, #79
 2887 08ce FFF7FEFF 		bl	I2C_MasterReadBlocking
 2888 08d2 0346     		mov	r3, r0
 2889 08d4 1A46     		mov	r2, r3
 2890 08d6 124B     		ldr	r3, .L230+24
 2891 08d8 1A60     		str	r2, [r3]
 911:main.c        ****                 if (status == 0)
 2892              		.loc 1 911 0
 2893 08da 114B     		ldr	r3, .L230+24
 2894 08dc 1B68     		ldr	r3, [r3]
 2895 08de 002B     		cmp	r3, #0
 2896 08e0 49D1     		bne	.L95
 912:main.c        ****                 {
 913:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 2897              		.loc 1 913 0
 2898 08e2 104B     		ldr	r3, .L230+28
 2899 08e4 1B78     		ldrb	r3, [r3]
 2900 08e6 DBB2     		uxtb	r3, r3
 2901 08e8 9BB2     		uxth	r3, r3
 2902 08ea 1B02     		lsls	r3, r3, #8
 2903 08ec 9AB2     		uxth	r2, r3
 2904 08ee 154B     		ldr	r3, .L230+60
 2905 08f0 1A80     		strh	r2, [r3]	@ movhi
 914:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 2906              		.loc 1 914 0
 2907 08f2 0C4B     		ldr	r3, .L230+28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 69


 2908 08f4 5B78     		ldrb	r3, [r3, #1]
 2909 08f6 DBB2     		uxtb	r3, r3
 2910 08f8 9AB2     		uxth	r2, r3
 2911 08fa 124B     		ldr	r3, .L230+60
 2912 08fc 1B88     		ldrh	r3, [r3]
 2913 08fe 1344     		add	r3, r3, r2
 2914 0900 9AB2     		uxth	r2, r3
 2915 0902 104B     		ldr	r3, .L230+60
 2916 0904 1A80     		strh	r2, [r3]	@ movhi
 2917 0906 36E0     		b	.L95
 2918              	.L231:
 2919              		.align	2
 2920              	.L230:
 2921 0908 00000000 		.word	main_counter
 2922 090c 00000000 		.word	angle
 2923 0910 00000000 		.word	pedals_low
 2924 0914 00000000 		.word	pedals_high
 2925 0918 00000000 		.word	i2c_skipped
 2926 091c 00000000 		.word	I2Cbuff1
 2927 0920 00000000 		.word	status
 2928 0924 00000000 		.word	I2Cbuff2
 2929 0928 00000000 		.word	macroKnobValues
 2930 092c 00000000 		.word	macroKnobValues7bit
 2931 0930 00000000 		.word	prevMacroKnobValues7bit
 2932 0934 00000000 		.word	macroOLEDWaitingToSend
 2933 0938 00000000 		.word	whichMacro
 2934 093c 00000000 		.word	patchNum
 2935 0940 00000000 		.word	macroNamesArray
 2936 0944 00000000 		.word	volumePedal
 2937              	.L96:
 915:main.c        ****                 }
 916:main.c        ****             }
 917:main.c        ****         }
 918:main.c        ****         else
 919:main.c        ****         if (main_counter == 11)
 2938              		.loc 1 919 0
 2939 0948 804B     		ldr	r3, .L232
 2940 094a 1B78     		ldrb	r3, [r3]
 2941 094c DBB2     		uxtb	r3, r3
 2942 094e 0B2B     		cmp	r3, #11
 2943 0950 11D1     		bne	.L95
 920:main.c        ****         { 
 921:main.c        ****             if (mainOLEDWaitingToSend)
 2944              		.loc 1 921 0
 2945 0952 7F4B     		ldr	r3, .L232+4
 2946 0954 1B68     		ldr	r3, [r3]
 2947 0956 002B     		cmp	r3, #0
 2948 0958 06D0     		beq	.L98
 922:main.c        ****             {
 923:main.c        ****                 OLED_draw(128, 64);
 2949              		.loc 1 923 0
 2950 095a 4021     		movs	r1, #64
 2951 095c 8020     		movs	r0, #128
 2952 095e FFF7FEFF 		bl	OLED_draw
 924:main.c        ****                 mainOLEDWaitingToSend = 0;
 2953              		.loc 1 924 0
 2954 0962 7B4B     		ldr	r3, .L232+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 70


 2955 0964 0022     		movs	r2, #0
 2956 0966 1A60     		str	r2, [r3]
 2957              	.L98:
 925:main.c        ****             }
 926:main.c        ****             if (macroOLEDWaitingToSend == 1)
 2958              		.loc 1 926 0
 2959 0968 7A4B     		ldr	r3, .L232+8
 2960 096a 1B68     		ldr	r3, [r3]
 2961 096c 012B     		cmp	r3, #1
 2962 096e 02D1     		bne	.L95
 927:main.c        ****             {
 928:main.c        ****                 macroOLEDWaitingToSend = 2;
 2963              		.loc 1 928 0
 2964 0970 784B     		ldr	r3, .L232+8
 2965 0972 0222     		movs	r2, #2
 2966 0974 1A60     		str	r2, [r3]
 2967              	.L95:
 929:main.c        ****             }
 930:main.c        ****             
 931:main.c        ****             #if 0
 932:main.c        ****             if (OLEDcount == 0)
 933:main.c        ****             {
 934:main.c        ****                 OLEDclearLine(FirstLine);
 935:main.c        ****             }
 936:main.c        ****             else if (OLEDcount == 1)
 937:main.c        ****             {
 938:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 939:main.c        **** 		    }
 940:main.c        ****             else if (OLEDcount == 2)
 941:main.c        ****             {
 942:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 943:main.c        ****             }
 944:main.c        ****             else if (OLEDcount == 3)
 945:main.c        ****             {
 946:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 947:main.c        ****             }
 948:main.c        ****             else if (OLEDcount == 4)
 949:main.c        ****             {
 950:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 951:main.c        ****             }
 952:main.c        ****             else if (OLEDcount == 5)
 953:main.c        ****             {
 954:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 955:main.c        ****             }
 956:main.c        ****             else if (OLEDcount == 6)
 957:main.c        ****             {
 958:main.c        ****                 //OLED_drawFirstLine();
 959:main.c        ****                 
 960:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 961:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 962:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 963:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 964:main.c        ****                  //OLED_draw();
 965:main.c        ****             }
 966:main.c        ****             OLEDcount++;
 967:main.c        ****             if (OLEDcount > 6)
 968:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 71


 969:main.c        ****                 OLEDcount = 0;
 970:main.c        ****             }
 971:main.c        ****             #endif
 972:main.c        ****         }
 973:main.c        **** 
 974:main.c        ****         /*
 975:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 976:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 977:main.c        **** 
 978:main.c        ****                 for (int i = 0; i < 5; i++)
 979:main.c        ****                 {
 980:main.c        ****                     I2Cbuff1[0] = 1<<i;
 981:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 982:main.c        **** 
 983:main.c        ****                     I2Cbuff1[0] = 0x0E;
 984:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 985:main.c        **** 
 986:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 987:main.c        **** 
 988:main.c        **** 
 989:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 990:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 991:main.c        ****                 }
 992:main.c        ****             if (main_counter == 0)
 993:main.c        ****             {               
 994:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 995:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 996:main.c        **** 
 997:main.c        ****                 for (int i = 0; i < 5; i++)
 998:main.c        ****                 {
 999:main.c        ****                     I2Cbuff1[0] = 1<<i;
1000:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
1001:main.c        **** 
1002:main.c        ****                     I2Cbuff1[0] = 0x0E;
1003:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1004:main.c        **** 
1005:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
1006:main.c        **** 
1007:main.c        **** 
1008:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
1009:main.c        ****                     angle[i] +=  I2Cbuff2[1];
1010:main.c        ****                 }
1011:main.c        ****             }
1012:main.c        ****             else
1013:main.c        ****             {
1014:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
1015:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1016:main.c        ****                 I2Cbuff1[0] = 0x0E;
1017:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
1018:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1019:main.c        ****                 {
1020:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1021:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1022:main.c        ****                 }
1023:main.c        ****            
1024:main.c        **** 
1025:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 72


1026:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
1027:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
1028:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
1029:main.c        ****                 {
1030:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
1031:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1032:main.c        ****                 }
1033:main.c        ****                 
1034:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
1035:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
1036:main.c        ****             }    
1037:main.c        ****                 
1038:main.c        **** 
1039:main.c        ****             send_it = 1;
1040:main.c        ****         }
1041:main.c        ****         */
1042:main.c        ****         
1043:main.c        ****         if (main_counter < 10)
 2968              		.loc 1 1043 0
 2969 0976 754B     		ldr	r3, .L232
 2970 0978 1B78     		ldrb	r3, [r3]
 2971 097a DBB2     		uxtb	r3, r3
 2972 097c 092B     		cmp	r3, #9
 2973 097e 00F2CA80 		bhi	.L99
 2974              	.LBB20:
1044:main.c        ****         {
1045:main.c        ****             
1046:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
1047:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2975              		.loc 1 1047 0
 2976 0982 724B     		ldr	r3, .L232
 2977 0984 1B78     		ldrb	r3, [r3]
 2978 0986 DBB2     		uxtb	r3, r3
 2979 0988 1A46     		mov	r2, r3
 2980 098a 734B     		ldr	r3, .L232+12
 2981 098c 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2982 0990 6E4B     		ldr	r3, .L232
 2983 0992 1B78     		ldrb	r3, [r3]
 2984 0994 DBB2     		uxtb	r3, r3
 2985 0996 1946     		mov	r1, r3
 2986 0998 704B     		ldr	r3, .L232+16
 2987 099a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2988 099e D31A     		subs	r3, r2, r3
 2989 09a0 9BB2     		uxth	r3, r3
 2990 09a2 3B85     		strh	r3, [r7, #40]	@ movhi
1048:main.c        ****             
1049:main.c        ****             if (tempangle > 0)
 2991              		.loc 1 1049 0
 2992 09a4 B7F92830 		ldrsh	r3, [r7, #40]
 2993 09a8 002B     		cmp	r3, #0
 2994 09aa 1CDD     		ble	.L100
1050:main.c        ****             {
1051:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2995              		.loc 1 1051 0
 2996 09ac 674B     		ldr	r3, .L232
 2997 09ae 1B78     		ldrb	r3, [r3]
 2998 09b0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 73


 2999 09b2 1C46     		mov	r4, r3
 3000 09b4 B7F92830 		ldrsh	r3, [r7, #40]
 3001 09b8 1846     		mov	r0, r3
 3002 09ba FFF7FEFF 		bl	__aeabi_i2f
 3003 09be 634B     		ldr	r3, .L232
 3004 09c0 1B78     		ldrb	r3, [r3]
 3005 09c2 DBB2     		uxtb	r3, r3
 3006 09c4 1A46     		mov	r2, r3
 3007 09c6 664B     		ldr	r3, .L232+20
 3008 09c8 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3009 09cc 1946     		mov	r1, r3
 3010 09ce FFF7FEFF 		bl	__aeabi_fmul
 3011 09d2 0346     		mov	r3, r0
 3012 09d4 1846     		mov	r0, r3
 3013 09d6 FFF7FEFF 		bl	__aeabi_f2uiz
 3014 09da 0346     		mov	r3, r0
 3015 09dc 9AB2     		uxth	r2, r3
 3016 09de 614B     		ldr	r3, .L232+24
 3017 09e0 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3018 09e4 07E0     		b	.L101
 3019              	.L100:
1052:main.c        ****             }
1053:main.c        ****             else
1054:main.c        ****             {
1055:main.c        ****                 processed_pedals[main_counter] = 0;
 3020              		.loc 1 1055 0
 3021 09e6 594B     		ldr	r3, .L232
 3022 09e8 1B78     		ldrb	r3, [r3]
 3023 09ea DBB2     		uxtb	r3, r3
 3024 09ec 1A46     		mov	r2, r3
 3025 09ee 5D4B     		ldr	r3, .L232+24
 3026 09f0 0021     		movs	r1, #0
 3027 09f2 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3028              	.L101:
1056:main.c        ****             }
1057:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3029              		.loc 1 1057 0
 3030 09f6 554B     		ldr	r3, .L232
 3031 09f8 1B78     		ldrb	r3, [r3]
 3032 09fa DBB2     		uxtb	r3, r3
 3033 09fc 1A46     		mov	r2, r3
 3034 09fe 594B     		ldr	r3, .L232+24
 3035 0a00 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3036 0a04 B3F5805F 		cmp	r3, #4096
 3037 0a08 08D3     		bcc	.L102
1058:main.c        ****             {
1059:main.c        ****                 processed_pedals[main_counter] = 4095;
 3038              		.loc 1 1059 0
 3039 0a0a 504B     		ldr	r3, .L232
 3040 0a0c 1B78     		ldrb	r3, [r3]
 3041 0a0e DBB2     		uxtb	r3, r3
 3042 0a10 1A46     		mov	r2, r3
 3043 0a12 544B     		ldr	r3, .L232+24
 3044 0a14 40F6FF71 		movw	r1, #4095
 3045 0a18 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3046              	.L102:
1060:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 74


1061:main.c        ****             
1062:main.c        ****             
1063:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
1064:main.c        ****             {
1065:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1066:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1067:main.c        ****             }
1068:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3047              		.loc 1 1068 0
 3048 0a1c 4B4B     		ldr	r3, .L232
 3049 0a1e 1B78     		ldrb	r3, [r3]
 3050 0a20 DBB2     		uxtb	r3, r3
 3051 0a22 1C46     		mov	r4, r3
 3052 0a24 494B     		ldr	r3, .L232
 3053 0a26 1B78     		ldrb	r3, [r3]
 3054 0a28 DBB2     		uxtb	r3, r3
 3055 0a2a 1A46     		mov	r2, r3
 3056 0a2c 4D4B     		ldr	r3, .L232+24
 3057 0a2e 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3058 0a32 1846     		mov	r0, r3
 3059 0a34 FFF7FEFF 		bl	__aeabi_ui2f
 3060 0a38 0346     		mov	r3, r0
 3061 0a3a 4B49     		ldr	r1, .L232+28
 3062 0a3c 1846     		mov	r0, r3
 3063 0a3e FFF7FEFF 		bl	__aeabi_fmul
 3064 0a42 0346     		mov	r3, r0
 3065 0a44 1A46     		mov	r2, r3
 3066 0a46 494B     		ldr	r3, .L232+32
 3067 0a48 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1069:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3068              		.loc 1 1069 0
 3069 0a4c 3F4B     		ldr	r3, .L232
 3070 0a4e 1B78     		ldrb	r3, [r3]
 3071 0a50 DBB2     		uxtb	r3, r3
 3072 0a52 1C46     		mov	r4, r3
 3073 0a54 3D4B     		ldr	r3, .L232
 3074 0a56 1B78     		ldrb	r3, [r3]
 3075 0a58 DBB2     		uxtb	r3, r3
 3076 0a5a 1A46     		mov	r2, r3
 3077 0a5c 444B     		ldr	r3, .L232+36
 3078 0a5e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3079 0a60 1A46     		mov	r2, r3
 3080 0a62 404B     		ldr	r3, .L232+24
 3081 0a64 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3082 0a68 1846     		mov	r0, r3
 3083 0a6a FFF7FEFF 		bl	__aeabi_ui2f
 3084 0a6e 0346     		mov	r3, r0
 3085 0a70 4FF07651 		mov	r1, #1031798784
 3086 0a74 1846     		mov	r0, r3
 3087 0a76 FFF7FEFF 		bl	__aeabi_fmul
 3088 0a7a 0346     		mov	r3, r0
 3089 0a7c 1846     		mov	r0, r3
 3090 0a7e FFF7FEFF 		bl	__aeabi_f2uiz
 3091 0a82 0346     		mov	r3, r0
 3092 0a84 DAB2     		uxtb	r2, r3
 3093 0a86 3B4B     		ldr	r3, .L232+40
 3094 0a88 1A55     		strb	r2, [r3, r4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 75


1070:main.c        ****             pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3095              		.loc 1 1070 0
 3096 0a8a 304B     		ldr	r3, .L232
 3097 0a8c 1B78     		ldrb	r3, [r3]
 3098 0a8e DBB2     		uxtb	r3, r3
 3099 0a90 1A46     		mov	r2, r3
 3100 0a92 2E4B     		ldr	r3, .L232
 3101 0a94 1B78     		ldrb	r3, [r3]
 3102 0a96 DBB2     		uxtb	r3, r3
 3103 0a98 1946     		mov	r1, r3
 3104 0a9a 364B     		ldr	r3, .L232+40
 3105 0a9c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3106 0a9e 5B08     		lsrs	r3, r3, #1
 3107 0aa0 D9B2     		uxtb	r1, r3
 3108 0aa2 354B     		ldr	r3, .L232+44
 3109 0aa4 9954     		strb	r1, [r3, r2]
1071:main.c        ****             if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3110              		.loc 1 1071 0
 3111 0aa6 294B     		ldr	r3, .L232
 3112 0aa8 1B78     		ldrb	r3, [r3]
 3113 0aaa DBB2     		uxtb	r3, r3
 3114 0aac 1A46     		mov	r2, r3
 3115 0aae 324B     		ldr	r3, .L232+44
 3116 0ab0 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3117 0ab2 264B     		ldr	r3, .L232
 3118 0ab4 1B78     		ldrb	r3, [r3]
 3119 0ab6 DBB2     		uxtb	r3, r3
 3120 0ab8 1946     		mov	r1, r3
 3121 0aba 304B     		ldr	r3, .L232+48
 3122 0abc 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3123 0abe 9A42     		cmp	r2, r3
 3124 0ac0 0ED0     		beq	.L103
1072:main.c        ****             {
1073:main.c        ****                 sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 3125              		.loc 1 1073 0
 3126 0ac2 224B     		ldr	r3, .L232
 3127 0ac4 1B78     		ldrb	r3, [r3]
 3128 0ac6 DBB2     		uxtb	r3, r3
 3129 0ac8 03F10E00 		add	r0, r3, #14
 3130 0acc 1F4B     		ldr	r3, .L232
 3131 0ace 1B78     		ldrb	r3, [r3]
 3132 0ad0 DBB2     		uxtb	r3, r3
 3133 0ad2 1A46     		mov	r2, r3
 3134 0ad4 284B     		ldr	r3, .L232+44
 3135 0ad6 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3136 0ad8 0122     		movs	r2, #1
 3137 0ada 1946     		mov	r1, r3
 3138 0adc FFF7FEFF 		bl	sendMIDIControlChange
 3139              	.L103:
1074:main.c        ****             }
1075:main.c        ****             prevPedals7bit[main_counter] = pedals7bit[main_counter];
 3140              		.loc 1 1075 0
 3141 0ae0 1A4B     		ldr	r3, .L232
 3142 0ae2 1B78     		ldrb	r3, [r3]
 3143 0ae4 DBB2     		uxtb	r3, r3
 3144 0ae6 1A46     		mov	r2, r3
 3145 0ae8 184B     		ldr	r3, .L232
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 76


 3146 0aea 1B78     		ldrb	r3, [r3]
 3147 0aec DBB2     		uxtb	r3, r3
 3148 0aee 1946     		mov	r1, r3
 3149 0af0 214B     		ldr	r3, .L232+44
 3150 0af2 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 3151 0af4 214B     		ldr	r3, .L232+48
 3152 0af6 9954     		strb	r1, [r3, r2]
1076:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 3153              		.loc 1 1076 0
 3154 0af8 144B     		ldr	r3, .L232
 3155 0afa 1B78     		ldrb	r3, [r3]
 3156 0afc DBB2     		uxtb	r3, r3
 3157 0afe 1A46     		mov	r2, r3
 3158 0b00 124B     		ldr	r3, .L232
 3159 0b02 1B78     		ldrb	r3, [r3]
 3160 0b04 DBB2     		uxtb	r3, r3
 3161 0b06 1946     		mov	r1, r3
 3162 0b08 164B     		ldr	r3, .L232+24
 3163 0b0a 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3164 0b0e 1C4B     		ldr	r3, .L232+52
 3165 0b10 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3166              	.LBE20:
 3167 0b14 5FE0     		b	.L104
 3168              	.L99:
1077:main.c        ****         }
1078:main.c        ****         else
1079:main.c        ****         {
1080:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 3169              		.loc 1 1080 0
 3170 0b16 1B4B     		ldr	r3, .L232+56
 3171 0b18 1B88     		ldrh	r3, [r3]
 3172 0b1a 1846     		mov	r0, r3
 3173 0b1c FFF7FEFF 		bl	__aeabi_ui2f
 3174 0b20 0346     		mov	r3, r0
 3175 0b22 1949     		ldr	r1, .L232+60
 3176 0b24 1846     		mov	r0, r3
 3177 0b26 FFF7FEFF 		bl	__aeabi_fmul
 3178 0b2a 0346     		mov	r3, r0
 3179 0b2c 1846     		mov	r0, r3
 3180 0b2e FFF7FEFF 		bl	__aeabi_f2iz
 3181 0b32 0346     		mov	r3, r0
 3182 0b34 1AB2     		sxth	r2, r3
 3183 0b36 154B     		ldr	r3, .L232+64
 3184 0b38 1A80     		strh	r2, [r3]	@ movhi
1081:main.c        **** 
1082:main.c        ****             if (processed_volumePedal < 0)
 3185              		.loc 1 1082 0
 3186 0b3a 144B     		ldr	r3, .L232+64
 3187 0b3c B3F90030 		ldrsh	r3, [r3]
 3188 0b40 002B     		cmp	r3, #0
 3189 0b42 25DA     		bge	.L105
1083:main.c        ****             {
1084:main.c        ****                 processed_volumePedal = 0;
 3190              		.loc 1 1084 0
 3191 0b44 114B     		ldr	r3, .L232+64
 3192 0b46 0022     		movs	r2, #0
 3193 0b48 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 77


 3194 0b4a 2BE0     		b	.L106
 3195              	.L233:
 3196              		.align	2
 3197              	.L232:
 3198 0b4c 00000000 		.word	main_counter
 3199 0b50 00000000 		.word	mainOLEDWaitingToSend
 3200 0b54 00000000 		.word	macroOLEDWaitingToSend
 3201 0b58 00000000 		.word	angle
 3202 0b5c 00000000 		.word	pedals_low
 3203 0b60 00000000 		.word	pedalRatios
 3204 0b64 00000000 		.word	processed_pedals
 3205 0b68 01088039 		.word	964691969
 3206 0b6c 00000000 		.word	pedals_float
 3207 0b70 00000000 		.word	pedal_cc_assignments
 3208 0b74 00000000 		.word	pedals8bit
 3209 0b78 00000000 		.word	pedals7bit
 3210 0b7c 00000000 		.word	prevPedals7bit
 3211 0b80 00000000 		.word	prev_processed_pedals
 3212 0b84 00000000 		.word	volumePedal
 3213 0b88 C5F1803F 		.word	1065415109
 3214 0b8c 00000000 		.word	processed_volumePedal
 3215              	.L105:
1085:main.c        ****             }
1086:main.c        ****             else if (processed_volumePedal > 4095)
 3216              		.loc 1 1086 0
 3217 0b90 A24B     		ldr	r3, .L234
 3218 0b92 B3F90030 		ldrsh	r3, [r3]
 3219 0b96 B3F5805F 		cmp	r3, #4096
 3220 0b9a 03DB     		blt	.L106
1087:main.c        ****             {
1088:main.c        ****                  processed_volumePedal = 4095;
 3221              		.loc 1 1088 0
 3222 0b9c 9F4B     		ldr	r3, .L234
 3223 0b9e 40F6FF72 		movw	r2, #4095
 3224 0ba2 1A80     		strh	r2, [r3]	@ movhi
 3225              	.L106:
1089:main.c        ****             }
1090:main.c        ****             u7bit_volumePedal = processed_volumePedal >> 5;
 3226              		.loc 1 1090 0
 3227 0ba4 9D4B     		ldr	r3, .L234
 3228 0ba6 B3F90030 		ldrsh	r3, [r3]
 3229 0baa 5B11     		asrs	r3, r3, #5
 3230 0bac 1BB2     		sxth	r3, r3
 3231 0bae DAB2     		uxtb	r2, r3
 3232 0bb0 9B4B     		ldr	r3, .L234+4
 3233 0bb2 1A70     		strb	r2, [r3]
1091:main.c        ****             if ( u7bit_volumePedal != prev_7bit_volumePedal)
 3234              		.loc 1 1091 0
 3235 0bb4 9A4B     		ldr	r3, .L234+4
 3236 0bb6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3237 0bb8 9A4B     		ldr	r3, .L234+8
 3238 0bba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3239 0bbc 9A42     		cmp	r2, r3
 3240 0bbe 06D0     		beq	.L107
1092:main.c        ****             {
1093:main.c        ****                 //uint16_t tempPedal = processed_volumePedal;
1094:main.c        ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 78


1095:main.c        ****                 sendMIDIControlChange(13, u7bit_volumePedal, 0);
 3241              		.loc 1 1095 0
 3242 0bc0 974B     		ldr	r3, .L234+4
 3243 0bc2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3244 0bc4 0022     		movs	r2, #0
 3245 0bc6 1946     		mov	r1, r3
 3246 0bc8 0D20     		movs	r0, #13
 3247 0bca FFF7FEFF 		bl	sendMIDIControlChange
 3248              	.L107:
1096:main.c        ****                 //sendMIDIControlChange(22, ( tempPedal & 127), 0);
1097:main.c        ****             }
1098:main.c        ****              //prev_processed_volumePedal = processed_volumePedal;
1099:main.c        ****             prev_7bit_volumePedal = u7bit_volumePedal;
 3249              		.loc 1 1099 0
 3250 0bce 944B     		ldr	r3, .L234+4
 3251 0bd0 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3252 0bd2 944B     		ldr	r3, .L234+8
 3253 0bd4 1A70     		strb	r2, [r3]
 3254              	.L104:
1100:main.c        ****         }
1101:main.c        ****         
1102:main.c        ****         main_counter++;
 3255              		.loc 1 1102 0
 3256 0bd6 944B     		ldr	r3, .L234+12
 3257 0bd8 1B78     		ldrb	r3, [r3]
 3258 0bda DBB2     		uxtb	r3, r3
 3259 0bdc 0133     		adds	r3, r3, #1
 3260 0bde DAB2     		uxtb	r2, r3
 3261 0be0 914B     		ldr	r3, .L234+12
 3262 0be2 1A70     		strb	r2, [r3]
1103:main.c        **** 
1104:main.c        ****         if (main_counter > 11)
 3263              		.loc 1 1104 0
 3264 0be4 904B     		ldr	r3, .L234+12
 3265 0be6 1B78     		ldrb	r3, [r3]
 3266 0be8 DBB2     		uxtb	r3, r3
 3267 0bea 0B2B     		cmp	r3, #11
 3268 0bec 02D9     		bls	.L108
1105:main.c        ****         {
1106:main.c        ****             main_counter = 0;
 3269              		.loc 1 1106 0
 3270 0bee 8E4B     		ldr	r3, .L234+12
 3271 0bf0 0022     		movs	r2, #0
 3272 0bf2 1A70     		strb	r2, [r3]
 3273              	.L108:
1107:main.c        ****         }
1108:main.c        ****         testpin3_Write(0);
 3274              		.loc 1 1108 0
 3275 0bf4 0020     		movs	r0, #0
 3276 0bf6 FFF7FEFF 		bl	testpin3_Write
1109:main.c        ****         #if 0
1110:main.c        ****             
1111:main.c        ****             
1112:main.c        ****         main_counter++;
1113:main.c        ****         if (main_counter >= 11)
1114:main.c        ****         {
1115:main.c        ****                /*  
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 79


1116:main.c        ****             testpin3_Write(1);
1117:main.c        ****             I2Cbuff1[0] = 1<<6;
1118:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1119:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1120:main.c        **** 
1121:main.c        ****         //CyDelay(1);
1122:main.c        ****         
1123:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1124:main.c        **** 
1125:main.c        ****         OLED_draw();
1126:main.c        ****                     I2Cbuff1[0] = 1<<0;
1127:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1128:main.c        ****         testpin3_Write(0);
1129:main.c        ****             */
1130:main.c        ****             main_counter = 0;
1131:main.c        ****         }
1132:main.c        ****         #endif
1133:main.c        ****         testpin5_Write(1);
 3277              		.loc 1 1133 0
 3278 0bfa 0120     		movs	r0, #1
 3279 0bfc FFF7FEFF 		bl	testpin5_Write
1134:main.c        ****         
1135:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 3280              		.loc 1 1135 0
 3281 0c00 8A4B     		ldr	r3, .L234+16
 3282 0c02 1B78     		ldrb	r3, [r3]
 3283 0c04 DBB2     		uxtb	r3, r3
 3284 0c06 002B     		cmp	r3, #0
 3285 0c08 0CBF     		ite	eq
 3286 0c0a 0123     		moveq	r3, #1
 3287 0c0c 0023     		movne	r3, #0
 3288 0c0e DBB2     		uxtb	r3, r3
 3289 0c10 874A     		ldr	r2, .L234+20
 3290 0c12 DB00     		lsls	r3, r3, #3
 3291 0c14 1344     		add	r3, r3, r2
 3292 0c16 9B79     		ldrb	r3, [r3, #6]
 3293 0c18 DBB2     		uxtb	r3, r3
 3294 0c1a FE2B     		cmp	r3, #254
 3295 0c1c 40F05481 		bne	.L109
 3296              		.loc 1 1135 0 is_stmt 0 discriminator 1
 3297 0c20 824B     		ldr	r3, .L234+16
 3298 0c22 1B78     		ldrb	r3, [r3]
 3299 0c24 DBB2     		uxtb	r3, r3
 3300 0c26 002B     		cmp	r3, #0
 3301 0c28 0CBF     		ite	eq
 3302 0c2a 0123     		moveq	r3, #1
 3303 0c2c 0023     		movne	r3, #0
 3304 0c2e DBB2     		uxtb	r3, r3
 3305 0c30 7F4A     		ldr	r2, .L234+20
 3306 0c32 DB00     		lsls	r3, r3, #3
 3307 0c34 1344     		add	r3, r3, r2
 3308 0c36 DB79     		ldrb	r3, [r3, #7]
 3309 0c38 DBB2     		uxtb	r3, r3
 3310 0c3a FD2B     		cmp	r3, #253
 3311 0c3c 40F04481 		bne	.L109
 3312              	.LBB21:
1136:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 80


1137:main.c        ****             for (int i = 0; i < 2; i++)
 3313              		.loc 1 1137 0 is_stmt 1
 3314 0c40 0023     		movs	r3, #0
 3315 0c42 3B67     		str	r3, [r7, #112]
 3316 0c44 3CE1     		b	.L110
 3317              	.L122:
1138:main.c        ****             {
1139:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 3318              		.loc 1 1139 0
 3319 0c46 794B     		ldr	r3, .L234+16
 3320 0c48 1B78     		ldrb	r3, [r3]
 3321 0c4a DBB2     		uxtb	r3, r3
 3322 0c4c 002B     		cmp	r3, #0
 3323 0c4e 0CBF     		ite	eq
 3324 0c50 0123     		moveq	r3, #1
 3325 0c52 0023     		movne	r3, #0
 3326 0c54 DBB2     		uxtb	r3, r3
 3327 0c56 1A46     		mov	r2, r3
 3328 0c58 3B6F     		ldr	r3, [r7, #112]
 3329 0c5a 5B00     		lsls	r3, r3, #1
 3330 0c5c 7449     		ldr	r1, .L234+20
 3331 0c5e D200     		lsls	r2, r2, #3
 3332 0c60 0A44     		add	r2, r2, r1
 3333 0c62 1344     		add	r3, r3, r2
 3334 0c64 1B78     		ldrb	r3, [r3]
 3335 0c66 DBB2     		uxtb	r3, r3
 3336 0c68 9BB2     		uxth	r3, r3
 3337 0c6a 1B02     		lsls	r3, r3, #8
 3338 0c6c 9AB2     		uxth	r2, r3
 3339 0c6e 6F4B     		ldr	r3, .L234+16
 3340 0c70 1B78     		ldrb	r3, [r3]
 3341 0c72 DBB2     		uxtb	r3, r3
 3342 0c74 002B     		cmp	r3, #0
 3343 0c76 0CBF     		ite	eq
 3344 0c78 0123     		moveq	r3, #1
 3345 0c7a 0023     		movne	r3, #0
 3346 0c7c DBB2     		uxtb	r3, r3
 3347 0c7e 1946     		mov	r1, r3
 3348 0c80 3B6F     		ldr	r3, [r7, #112]
 3349 0c82 5B00     		lsls	r3, r3, #1
 3350 0c84 0133     		adds	r3, r3, #1
 3351 0c86 6A48     		ldr	r0, .L234+20
 3352 0c88 C900     		lsls	r1, r1, #3
 3353 0c8a 0144     		add	r1, r1, r0
 3354 0c8c 0B44     		add	r3, r3, r1
 3355 0c8e 1B78     		ldrb	r3, [r3]
 3356 0c90 DBB2     		uxtb	r3, r3
 3357 0c92 9BB2     		uxth	r3, r3
 3358 0c94 1344     		add	r3, r3, r2
 3359 0c96 99B2     		uxth	r1, r3
 3360 0c98 664A     		ldr	r2, .L234+24
 3361 0c9a 3B6F     		ldr	r3, [r7, #112]
 3362 0c9c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1140:main.c        ****                 //
1141:main.c        ****                 if(bar[i] != prevBar[i])
 3363              		.loc 1 1141 0
 3364 0ca0 644A     		ldr	r2, .L234+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 81


 3365 0ca2 3B6F     		ldr	r3, [r7, #112]
 3366 0ca4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3367 0ca8 9AB2     		uxth	r2, r3
 3368 0caa 6349     		ldr	r1, .L234+28
 3369 0cac 3B6F     		ldr	r3, [r7, #112]
 3370 0cae 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3371 0cb2 9BB2     		uxth	r3, r3
 3372 0cb4 9A42     		cmp	r2, r3
 3373 0cb6 00F0F780 		beq	.L111
1142:main.c        ****                 {
1143:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 3374              		.loc 1 1143 0
 3375 0cba 5E4A     		ldr	r2, .L234+24
 3376 0cbc 3B6F     		ldr	r3, [r7, #112]
 3377 0cbe 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3378 0cc2 9BB2     		uxth	r3, r3
 3379 0cc4 4FF6FF72 		movw	r2, #65535
 3380 0cc8 9342     		cmp	r3, r2
 3381 0cca 11D0     		beq	.L112
 3382              		.loc 1 1143 0 is_stmt 0 discriminator 1
 3383 0ccc 594A     		ldr	r2, .L234+24
 3384 0cce 3B6F     		ldr	r3, [r7, #112]
 3385 0cd0 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3386 0cd4 9BB2     		uxth	r3, r3
 3387 0cd6 1846     		mov	r0, r3
 3388 0cd8 FFF7FEFF 		bl	__aeabi_i2f
 3389 0cdc 574A     		ldr	r2, .L234+32
 3390 0cde 3B6F     		ldr	r3, [r7, #112]
 3391 0ce0 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3392 0ce4 1946     		mov	r1, r3
 3393 0ce6 FFF7FEFF 		bl	__aeabi_fcmpgt
 3394 0cea 0346     		mov	r3, r0
 3395 0cec 002B     		cmp	r3, #0
 3396 0cee 06D0     		beq	.L221
 3397              	.L112:
1144:main.c        ****     				{
1145:main.c        ****     					stringMappedPositions[i] = 1.0f;
 3398              		.loc 1 1145 0 is_stmt 1
 3399 0cf0 534A     		ldr	r2, .L234+36
 3400 0cf2 3B6F     		ldr	r3, [r7, #112]
 3401 0cf4 4FF07E51 		mov	r1, #1065353216
 3402 0cf8 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3403 0cfc C5E0     		b	.L115
 3404              	.L221:
1146:main.c        ****     				}
1147:main.c        **** 
1148:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 3405              		.loc 1 1148 0
 3406 0cfe 4D4A     		ldr	r2, .L234+24
 3407 0d00 3B6F     		ldr	r3, [r7, #112]
 3408 0d02 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3409 0d06 9BB2     		uxth	r3, r3
 3410 0d08 1846     		mov	r0, r3
 3411 0d0a FFF7FEFF 		bl	__aeabi_i2f
 3412 0d0e 4B4A     		ldr	r2, .L234+32
 3413 0d10 3B6F     		ldr	r3, [r7, #112]
 3414 0d12 0433     		adds	r3, r3, #4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 82


 3415 0d14 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3416 0d18 1946     		mov	r1, r3
 3417 0d1a FFF7FEFF 		bl	__aeabi_fcmpge
 3418 0d1e 0346     		mov	r3, r0
 3419 0d20 002B     		cmp	r3, #0
 3420 0d22 32D0     		beq	.L116
 3421              		.loc 1 1148 0 is_stmt 0 discriminator 1
 3422 0d24 434A     		ldr	r2, .L234+24
 3423 0d26 3B6F     		ldr	r3, [r7, #112]
 3424 0d28 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3425 0d2c 9BB2     		uxth	r3, r3
 3426 0d2e 1846     		mov	r0, r3
 3427 0d30 FFF7FEFF 		bl	__aeabi_i2f
 3428 0d34 414A     		ldr	r2, .L234+32
 3429 0d36 3B6F     		ldr	r3, [r7, #112]
 3430 0d38 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3431 0d3c 1946     		mov	r1, r3
 3432 0d3e FFF7FEFF 		bl	__aeabi_fcmple
 3433 0d42 0346     		mov	r3, r0
 3434 0d44 002B     		cmp	r3, #0
 3435 0d46 20D0     		beq	.L116
1149:main.c        ****     				{
1150:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 3436              		.loc 1 1150 0 is_stmt 1
 3437 0d48 3A4A     		ldr	r2, .L234+24
 3438 0d4a 3B6F     		ldr	r3, [r7, #112]
 3439 0d4c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3440 0d50 9BB2     		uxth	r3, r3
 3441 0d52 1846     		mov	r0, r3
 3442 0d54 FFF7FEFF 		bl	__aeabi_ui2f
 3443 0d58 0446     		mov	r4, r0
 3444 0d5a 384A     		ldr	r2, .L234+32
 3445 0d5c 3B6F     		ldr	r3, [r7, #112]
 3446 0d5e 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3447 0d62 364A     		ldr	r2, .L234+32
 3448 0d64 3B6F     		ldr	r3, [r7, #112]
 3449 0d66 0433     		adds	r3, r3, #4
 3450 0d68 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3451 0d6c 354B     		ldr	r3, .L234+40
 3452 0d6e 1868     		ldr	r0, [r3]	@ float
 3453 0d70 344B     		ldr	r3, .L234+40
 3454 0d72 5B68     		ldr	r3, [r3, #4]	@ float
 3455 0d74 0093     		str	r3, [sp]	@ float
 3456 0d76 0346     		mov	r3, r0
 3457 0d78 2046     		mov	r0, r4
 3458 0d7a FFF7FEFF 		bl	map
 3459 0d7e 0146     		mov	r1, r0
 3460 0d80 2F4A     		ldr	r2, .L234+36
 3461 0d82 3B6F     		ldr	r3, [r7, #112]
 3462 0d84 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3463 0d88 7FE0     		b	.L115
 3464              	.L116:
1151:main.c        ****     				}
1152:main.c        **** 
1153:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 3465              		.loc 1 1153 0
 3466 0d8a 2A4A     		ldr	r2, .L234+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 83


 3467 0d8c 3B6F     		ldr	r3, [r7, #112]
 3468 0d8e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3469 0d92 9BB2     		uxth	r3, r3
 3470 0d94 1846     		mov	r0, r3
 3471 0d96 FFF7FEFF 		bl	__aeabi_i2f
 3472 0d9a 284A     		ldr	r2, .L234+32
 3473 0d9c 3B6F     		ldr	r3, [r7, #112]
 3474 0d9e 0833     		adds	r3, r3, #8
 3475 0da0 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3476 0da4 1946     		mov	r1, r3
 3477 0da6 FFF7FEFF 		bl	__aeabi_fcmpge
 3478 0daa 0346     		mov	r3, r0
 3479 0dac 002B     		cmp	r3, #0
 3480 0dae 4BD0     		beq	.L119
 3481              		.loc 1 1153 0 is_stmt 0 discriminator 1
 3482 0db0 204A     		ldr	r2, .L234+24
 3483 0db2 3B6F     		ldr	r3, [r7, #112]
 3484 0db4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3485 0db8 9BB2     		uxth	r3, r3
 3486 0dba 1846     		mov	r0, r3
 3487 0dbc FFF7FEFF 		bl	__aeabi_i2f
 3488 0dc0 1E4A     		ldr	r2, .L234+32
 3489 0dc2 3B6F     		ldr	r3, [r7, #112]
 3490 0dc4 0433     		adds	r3, r3, #4
 3491 0dc6 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3492 0dca 1946     		mov	r1, r3
 3493 0dcc FFF7FEFF 		bl	__aeabi_fcmplt
 3494 0dd0 0346     		mov	r3, r0
 3495 0dd2 002B     		cmp	r3, #0
 3496 0dd4 38D0     		beq	.L119
1154:main.c        ****     				{
1155:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 3497              		.loc 1 1155 0 is_stmt 1
 3498 0dd6 174A     		ldr	r2, .L234+24
 3499 0dd8 3B6F     		ldr	r3, [r7, #112]
 3500 0dda 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3501 0dde 9BB2     		uxth	r3, r3
 3502 0de0 1846     		mov	r0, r3
 3503 0de2 FFF7FEFF 		bl	__aeabi_ui2f
 3504 0de6 0446     		mov	r4, r0
 3505 0de8 144A     		ldr	r2, .L234+32
 3506 0dea 3B6F     		ldr	r3, [r7, #112]
 3507 0dec 0433     		adds	r3, r3, #4
 3508 0dee 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3509 0df2 124A     		ldr	r2, .L234+32
 3510 0df4 3B6F     		ldr	r3, [r7, #112]
 3511 0df6 0833     		adds	r3, r3, #8
 3512 0df8 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3513 0dfc 114B     		ldr	r3, .L234+40
 3514 0dfe 5868     		ldr	r0, [r3, #4]	@ float
 3515 0e00 104B     		ldr	r3, .L234+40
 3516 0e02 9B68     		ldr	r3, [r3, #8]	@ float
 3517 0e04 0093     		str	r3, [sp]	@ float
 3518 0e06 0346     		mov	r3, r0
 3519 0e08 2046     		mov	r0, r4
 3520 0e0a FFF7FEFF 		bl	map
 3521 0e0e 0146     		mov	r1, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 84


 3522 0e10 0B4A     		ldr	r2, .L234+36
 3523 0e12 3B6F     		ldr	r3, [r7, #112]
 3524 0e14 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3525 0e18 37E0     		b	.L115
 3526              	.L235:
 3527 0e1a 00BF     		.align	2
 3528              	.L234:
 3529 0e1c 00000000 		.word	processed_volumePedal
 3530 0e20 00000000 		.word	u7bit_volumePedal
 3531 0e24 00000000 		.word	prev_7bit_volumePedal
 3532 0e28 00000000 		.word	main_counter
 3533 0e2c 00000000 		.word	currentBarBuffer
 3534 0e30 00000000 		.word	rxBufferBar
 3535 0e34 00000000 		.word	bar
 3536 0e38 00000000 		.word	prevBar
 3537 0e3c 00000000 		.word	fretMeasurements
 3538 0e40 00000000 		.word	stringMappedPositions
 3539 0e44 00000000 		.word	fretScaling
 3540              	.L119:
1156:main.c        ****     				}
1157:main.c        **** 
1158:main.c        ****     				else
1159:main.c        ****     				{
1160:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 3541              		.loc 1 1160 0
 3542 0e48 9C4A     		ldr	r2, .L236
 3543 0e4a 3B6F     		ldr	r3, [r7, #112]
 3544 0e4c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3545 0e50 9BB2     		uxth	r3, r3
 3546 0e52 1846     		mov	r0, r3
 3547 0e54 FFF7FEFF 		bl	__aeabi_ui2f
 3548 0e58 0446     		mov	r4, r0
 3549 0e5a 994A     		ldr	r2, .L236+4
 3550 0e5c 3B6F     		ldr	r3, [r7, #112]
 3551 0e5e 0833     		adds	r3, r3, #8
 3552 0e60 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 3553 0e64 964A     		ldr	r2, .L236+4
 3554 0e66 3B6F     		ldr	r3, [r7, #112]
 3555 0e68 0C33     		adds	r3, r3, #12
 3556 0e6a 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 3557 0e6e 954B     		ldr	r3, .L236+8
 3558 0e70 9868     		ldr	r0, [r3, #8]	@ float
 3559 0e72 944B     		ldr	r3, .L236+8
 3560 0e74 DB68     		ldr	r3, [r3, #12]	@ float
 3561 0e76 0093     		str	r3, [sp]	@ float
 3562 0e78 0346     		mov	r3, r0
 3563 0e7a 2046     		mov	r0, r4
 3564 0e7c FFF7FEFF 		bl	map
 3565 0e80 0146     		mov	r1, r0
 3566 0e82 914A     		ldr	r2, .L236+12
 3567 0e84 3B6F     		ldr	r3, [r7, #112]
 3568 0e86 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3569              	.L115:
1161:main.c        ****     				}
1162:main.c        **** 
1163:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 3570              		.loc 1 1163 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 85


 3571 0e8a 8F4A     		ldr	r2, .L236+12
 3572 0e8c 3B6F     		ldr	r3, [r7, #112]
 3573 0e8e 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3574 0e92 1946     		mov	r1, r3
 3575 0e94 4FF07E50 		mov	r0, #1065353216
 3576 0e98 FFF7FEFF 		bl	__aeabi_fdiv
 3577 0e9c 0346     		mov	r3, r0
 3578 0e9e 1946     		mov	r1, r3
 3579 0ea0 8A4A     		ldr	r2, .L236+16
 3580 0ea2 3B6F     		ldr	r3, [r7, #112]
 3581 0ea4 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 3582              	.L111:
1164:main.c        ****                 }
1165:main.c        ****                 //
1166:main.c        ****                 prevBar[i] = bar[i];
 3583              		.loc 1 1166 0 discriminator 2
 3584 0ea8 844A     		ldr	r2, .L236
 3585 0eaa 3B6F     		ldr	r3, [r7, #112]
 3586 0eac 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3587 0eb0 99B2     		uxth	r1, r3
 3588 0eb2 874A     		ldr	r2, .L236+20
 3589 0eb4 3B6F     		ldr	r3, [r7, #112]
 3590 0eb6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1137:main.c        ****             {
 3591              		.loc 1 1137 0 discriminator 2
 3592 0eba 3B6F     		ldr	r3, [r7, #112]
 3593 0ebc 0133     		adds	r3, r3, #1
 3594 0ebe 3B67     		str	r3, [r7, #112]
 3595              	.L110:
1137:main.c        ****             {
 3596              		.loc 1 1137 0 is_stmt 0 discriminator 1
 3597 0ec0 3B6F     		ldr	r3, [r7, #112]
 3598 0ec2 012B     		cmp	r3, #1
 3599 0ec4 7FF7BFAE 		ble	.L122
 3600              	.L109:
 3601              	.LBE21:
1167:main.c        ****             }
1168:main.c        ****         }
1169:main.c        ****         
1170:main.c        ****         testpin5_Write(0);
 3602              		.loc 1 1170 0 is_stmt 1
 3603 0ec8 0020     		movs	r0, #0
 3604 0eca FFF7FEFF 		bl	testpin5_Write
 3605              	.LBB22:
1171:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 3606              		.loc 1 1171 0
 3607 0ece 0023     		movs	r3, #0
 3608 0ed0 FB66     		str	r3, [r7, #108]
 3609 0ed2 1AE0     		b	.L123
 3610              	.L125:
1172:main.c        ****         {
1173:main.c        ****             if (strings[i] != prevStrings[i])
 3611              		.loc 1 1173 0
 3612 0ed4 7F4A     		ldr	r2, .L236+24
 3613 0ed6 FB6E     		ldr	r3, [r7, #108]
 3614 0ed8 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3615 0edc 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 86


 3616 0ede 7E49     		ldr	r1, .L236+28
 3617 0ee0 FB6E     		ldr	r3, [r7, #108]
 3618 0ee2 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 3619 0ee6 9BB2     		uxth	r3, r3
 3620 0ee8 9A42     		cmp	r2, r3
 3621 0eea 02D0     		beq	.L124
1174:main.c        ****             {
1175:main.c        ****                 noteEvent(i);
 3622              		.loc 1 1175 0
 3623 0eec F86E     		ldr	r0, [r7, #108]
 3624 0eee FFF7FEFF 		bl	noteEvent
 3625              	.L124:
1176:main.c        ****             }
1177:main.c        ****             prevStrings[i] = strings[i];
 3626              		.loc 1 1177 0 discriminator 2
 3627 0ef2 784A     		ldr	r2, .L236+24
 3628 0ef4 FB6E     		ldr	r3, [r7, #108]
 3629 0ef6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 3630 0efa 99B2     		uxth	r1, r3
 3631 0efc 764A     		ldr	r2, .L236+28
 3632 0efe FB6E     		ldr	r3, [r7, #108]
 3633 0f00 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1171:main.c        ****         {
 3634              		.loc 1 1171 0 discriminator 2
 3635 0f04 FB6E     		ldr	r3, [r7, #108]
 3636 0f06 0133     		adds	r3, r3, #1
 3637 0f08 FB66     		str	r3, [r7, #108]
 3638              	.L123:
1171:main.c        ****         {
 3639              		.loc 1 1171 0 is_stmt 0 discriminator 1
 3640 0f0a 744B     		ldr	r3, .L236+32
 3641 0f0c 1B68     		ldr	r3, [r3]
 3642 0f0e FA6E     		ldr	r2, [r7, #108]
 3643 0f10 9A42     		cmp	r2, r3
 3644 0f12 DFDB     		blt	.L125
 3645              	.LBE22:
1178:main.c        ****         }
1179:main.c        ****         
1180:main.c        **** 
1181:main.c        **** 
1182:main.c        ****         
1183:main.c        ****         
1184:main.c        ****         if (!oct1_Read())
 3646              		.loc 1 1184 0 is_stmt 1
 3647 0f14 FFF7FEFF 		bl	oct1_Read
 3648 0f18 0346     		mov	r3, r0
 3649 0f1a 002B     		cmp	r3, #0
 3650 0f1c 24D1     		bne	.L126
1185:main.c        ****         {
1186:main.c        ****             if (octave > 4)
 3651              		.loc 1 1186 0
 3652 0f1e 704B     		ldr	r3, .L236+36
 3653 0f20 1B68     		ldr	r3, [r3]
 3654 0f22 042B     		cmp	r3, #4
 3655 0f24 03DD     		ble	.L127
1187:main.c        ****             {
1188:main.c        ****                 octave = 4;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 87


 3656              		.loc 1 1188 0
 3657 0f26 6E4B     		ldr	r3, .L236+36
 3658 0f28 0422     		movs	r2, #4
 3659 0f2a 1A60     		str	r2, [r3]
 3660 0f2c 0CE0     		b	.L128
 3661              	.L127:
1189:main.c        **** 
1190:main.c        ****             }
1191:main.c        ****             else if ((oct1Up) && (octave > 0))
 3662              		.loc 1 1191 0
 3663 0f2e 6D4B     		ldr	r3, .L236+40
 3664 0f30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3665 0f32 002B     		cmp	r3, #0
 3666 0f34 08D0     		beq	.L128
 3667              		.loc 1 1191 0 is_stmt 0 discriminator 1
 3668 0f36 6A4B     		ldr	r3, .L236+36
 3669 0f38 1B68     		ldr	r3, [r3]
 3670 0f3a 002B     		cmp	r3, #0
 3671 0f3c 04DD     		ble	.L128
1192:main.c        ****             {
1193:main.c        ****                 octave--;
 3672              		.loc 1 1193 0 is_stmt 1
 3673 0f3e 684B     		ldr	r3, .L236+36
 3674 0f40 1B68     		ldr	r3, [r3]
 3675 0f42 013B     		subs	r3, r3, #1
 3676 0f44 664A     		ldr	r2, .L236+36
 3677 0f46 1360     		str	r3, [r2]
 3678              	.L128:
1194:main.c        ****             }
1195:main.c        ****             LED_amber1_Write(1);
 3679              		.loc 1 1195 0
 3680 0f48 0120     		movs	r0, #1
 3681 0f4a FFF7FEFF 		bl	LED_amber1_Write
1196:main.c        ****             LED_amber2_Write(0);
 3682              		.loc 1 1196 0
 3683 0f4e 0020     		movs	r0, #0
 3684 0f50 FFF7FEFF 		bl	LED_amber2_Write
1197:main.c        ****             LED_amber3_Write(0);
 3685              		.loc 1 1197 0
 3686 0f54 0020     		movs	r0, #0
 3687 0f56 FFF7FEFF 		bl	LED_amber3_Write
1198:main.c        ****             LED_amber4_Write(0);
 3688              		.loc 1 1198 0
 3689 0f5a 0020     		movs	r0, #0
 3690 0f5c FFF7FEFF 		bl	LED_amber4_Write
1199:main.c        ****             oct1Up = 0;
 3691              		.loc 1 1199 0
 3692 0f60 604B     		ldr	r3, .L236+40
 3693 0f62 0022     		movs	r2, #0
 3694 0f64 1A70     		strb	r2, [r3]
 3695 0f66 07E0     		b	.L129
 3696              	.L126:
1200:main.c        ****         }
1201:main.c        ****         
1202:main.c        ****         else if (oct1_Read())
 3697              		.loc 1 1202 0
 3698 0f68 FFF7FEFF 		bl	oct1_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 88


 3699 0f6c 0346     		mov	r3, r0
 3700 0f6e 002B     		cmp	r3, #0
 3701 0f70 02D0     		beq	.L129
1203:main.c        ****         {
1204:main.c        ****             oct1Up = 1;
 3702              		.loc 1 1204 0
 3703 0f72 5C4B     		ldr	r3, .L236+40
 3704 0f74 0122     		movs	r2, #1
 3705 0f76 1A70     		strb	r2, [r3]
 3706              	.L129:
1205:main.c        ****         }
1206:main.c        ****         
1207:main.c        ****         if (!oct2_Read())
 3707              		.loc 1 1207 0
 3708 0f78 FFF7FEFF 		bl	oct2_Read
 3709 0f7c 0346     		mov	r3, r0
 3710 0f7e 002B     		cmp	r3, #0
 3711 0f80 0ED1     		bne	.L130
1208:main.c        ****         {
1209:main.c        ****             octave = 5;
 3712              		.loc 1 1209 0
 3713 0f82 574B     		ldr	r3, .L236+36
 3714 0f84 0522     		movs	r2, #5
 3715 0f86 1A60     		str	r2, [r3]
1210:main.c        ****             LED_amber1_Write(0);
 3716              		.loc 1 1210 0
 3717 0f88 0020     		movs	r0, #0
 3718 0f8a FFF7FEFF 		bl	LED_amber1_Write
1211:main.c        ****             LED_amber2_Write(1);
 3719              		.loc 1 1211 0
 3720 0f8e 0120     		movs	r0, #1
 3721 0f90 FFF7FEFF 		bl	LED_amber2_Write
1212:main.c        ****             LED_amber3_Write(0);
 3722              		.loc 1 1212 0
 3723 0f94 0020     		movs	r0, #0
 3724 0f96 FFF7FEFF 		bl	LED_amber3_Write
1213:main.c        ****             LED_amber4_Write(0);
 3725              		.loc 1 1213 0
 3726 0f9a 0020     		movs	r0, #0
 3727 0f9c FFF7FEFF 		bl	LED_amber4_Write
 3728              	.L130:
1214:main.c        ****         }
1215:main.c        ****         if (!oct3_Read())
 3729              		.loc 1 1215 0
 3730 0fa0 FFF7FEFF 		bl	oct3_Read
 3731 0fa4 0346     		mov	r3, r0
 3732 0fa6 002B     		cmp	r3, #0
 3733 0fa8 0ED1     		bne	.L131
1216:main.c        ****         {
1217:main.c        ****             octave = 6;
 3734              		.loc 1 1217 0
 3735 0faa 4D4B     		ldr	r3, .L236+36
 3736 0fac 0622     		movs	r2, #6
 3737 0fae 1A60     		str	r2, [r3]
1218:main.c        ****             LED_amber1_Write(0);
 3738              		.loc 1 1218 0
 3739 0fb0 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 89


 3740 0fb2 FFF7FEFF 		bl	LED_amber1_Write
1219:main.c        ****             LED_amber2_Write(0);
 3741              		.loc 1 1219 0
 3742 0fb6 0020     		movs	r0, #0
 3743 0fb8 FFF7FEFF 		bl	LED_amber2_Write
1220:main.c        ****             LED_amber3_Write(1);
 3744              		.loc 1 1220 0
 3745 0fbc 0120     		movs	r0, #1
 3746 0fbe FFF7FEFF 		bl	LED_amber3_Write
1221:main.c        ****             LED_amber4_Write(0);            
 3747              		.loc 1 1221 0
 3748 0fc2 0020     		movs	r0, #0
 3749 0fc4 FFF7FEFF 		bl	LED_amber4_Write
 3750              	.L131:
1222:main.c        ****         }
1223:main.c        ****         if (!oct4_Read())
 3751              		.loc 1 1223 0
 3752 0fc8 FFF7FEFF 		bl	oct4_Read
 3753 0fcc 0346     		mov	r3, r0
 3754 0fce 002B     		cmp	r3, #0
 3755 0fd0 24D1     		bne	.L132
1224:main.c        ****         {
1225:main.c        ****             if (octave < 7)
 3756              		.loc 1 1225 0
 3757 0fd2 434B     		ldr	r3, .L236+36
 3758 0fd4 1B68     		ldr	r3, [r3]
 3759 0fd6 062B     		cmp	r3, #6
 3760 0fd8 03DC     		bgt	.L133
1226:main.c        ****             {
1227:main.c        ****                 octave = 7;
 3761              		.loc 1 1227 0
 3762 0fda 414B     		ldr	r3, .L236+36
 3763 0fdc 0722     		movs	r2, #7
 3764 0fde 1A60     		str	r2, [r3]
 3765 0fe0 0CE0     		b	.L134
 3766              	.L133:
1228:main.c        **** 
1229:main.c        ****             }
1230:main.c        ****             else if ((oct4Up) && (octave < 11))
 3767              		.loc 1 1230 0
 3768 0fe2 414B     		ldr	r3, .L236+44
 3769 0fe4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3770 0fe6 002B     		cmp	r3, #0
 3771 0fe8 08D0     		beq	.L134
 3772              		.loc 1 1230 0 is_stmt 0 discriminator 1
 3773 0fea 3D4B     		ldr	r3, .L236+36
 3774 0fec 1B68     		ldr	r3, [r3]
 3775 0fee 0A2B     		cmp	r3, #10
 3776 0ff0 04DC     		bgt	.L134
1231:main.c        ****             {
1232:main.c        ****                 octave++;
 3777              		.loc 1 1232 0 is_stmt 1
 3778 0ff2 3B4B     		ldr	r3, .L236+36
 3779 0ff4 1B68     		ldr	r3, [r3]
 3780 0ff6 0133     		adds	r3, r3, #1
 3781 0ff8 394A     		ldr	r2, .L236+36
 3782 0ffa 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 90


 3783              	.L134:
1233:main.c        **** 
1234:main.c        ****             }
1235:main.c        ****             LED_amber1_Write(0);
 3784              		.loc 1 1235 0
 3785 0ffc 0020     		movs	r0, #0
 3786 0ffe FFF7FEFF 		bl	LED_amber1_Write
1236:main.c        ****             LED_amber2_Write(0);
 3787              		.loc 1 1236 0
 3788 1002 0020     		movs	r0, #0
 3789 1004 FFF7FEFF 		bl	LED_amber2_Write
1237:main.c        ****             LED_amber3_Write(0);
 3790              		.loc 1 1237 0
 3791 1008 0020     		movs	r0, #0
 3792 100a FFF7FEFF 		bl	LED_amber3_Write
1238:main.c        ****             LED_amber4_Write(1);
 3793              		.loc 1 1238 0
 3794 100e 0120     		movs	r0, #1
 3795 1010 FFF7FEFF 		bl	LED_amber4_Write
1239:main.c        ****             oct4Up = 0;
 3796              		.loc 1 1239 0
 3797 1014 344B     		ldr	r3, .L236+44
 3798 1016 0022     		movs	r2, #0
 3799 1018 1A70     		strb	r2, [r3]
 3800 101a 07E0     		b	.L135
 3801              	.L132:
1240:main.c        ****         }
1241:main.c        ****         
1242:main.c        ****         else if (oct4_Read())
 3802              		.loc 1 1242 0
 3803 101c FFF7FEFF 		bl	oct4_Read
 3804 1020 0346     		mov	r3, r0
 3805 1022 002B     		cmp	r3, #0
 3806 1024 02D0     		beq	.L135
1243:main.c        ****         {
1244:main.c        ****             oct4Up = 1;
 3807              		.loc 1 1244 0
 3808 1026 304B     		ldr	r3, .L236+44
 3809 1028 0122     		movs	r2, #1
 3810 102a 1A70     		strb	r2, [r3]
 3811              	.L135:
1245:main.c        ****         }
1246:main.c        ****         
1247:main.c        ****         if (!neck1_button_Read())
 3812              		.loc 1 1247 0
 3813 102c FFF7FEFF 		bl	neck1_button_Read
 3814 1030 0346     		mov	r3, r0
 3815 1032 002B     		cmp	r3, #0
 3816 1034 10D1     		bne	.L136
1248:main.c        ****         {
1249:main.c        ****             currentNeck = 0;
 3817              		.loc 1 1249 0
 3818 1036 2D4B     		ldr	r3, .L236+48
 3819 1038 0022     		movs	r2, #0
 3820 103a 1A60     		str	r2, [r3]
1250:main.c        ****             currentCopedent = necks[currentNeck];
 3821              		.loc 1 1250 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 91


 3822 103c 2B4B     		ldr	r3, .L236+48
 3823 103e 1B68     		ldr	r3, [r3]
 3824 1040 2B4A     		ldr	r2, .L236+52
 3825 1042 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3826 1044 2B4B     		ldr	r3, .L236+56
 3827 1046 1A70     		strb	r2, [r3]
1251:main.c        ****             LED_red1_Write(0);
 3828              		.loc 1 1251 0
 3829 1048 0020     		movs	r0, #0
 3830 104a FFF7FEFF 		bl	LED_red1_Write
1252:main.c        ****             LED_green2_Write(1);
 3831              		.loc 1 1252 0
 3832 104e 0120     		movs	r0, #1
 3833 1050 FFF7FEFF 		bl	LED_green2_Write
1253:main.c        ****             displayCurrentPresetNameAndCopedent();
 3834              		.loc 1 1253 0
 3835 1054 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3836              	.L136:
1254:main.c        ****         }
1255:main.c        ****         if (!neck2_button_Read())
 3837              		.loc 1 1255 0
 3838 1058 FFF7FEFF 		bl	neck2_button_Read
 3839 105c 0346     		mov	r3, r0
 3840 105e 002B     		cmp	r3, #0
 3841 1060 10D1     		bne	.L137
1256:main.c        ****         {
1257:main.c        ****             currentNeck = 1;
 3842              		.loc 1 1257 0
 3843 1062 224B     		ldr	r3, .L236+48
 3844 1064 0122     		movs	r2, #1
 3845 1066 1A60     		str	r2, [r3]
1258:main.c        ****             currentCopedent = necks[currentNeck];            
 3846              		.loc 1 1258 0
 3847 1068 204B     		ldr	r3, .L236+48
 3848 106a 1B68     		ldr	r3, [r3]
 3849 106c 204A     		ldr	r2, .L236+52
 3850 106e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3851 1070 204B     		ldr	r3, .L236+56
 3852 1072 1A70     		strb	r2, [r3]
1259:main.c        ****             LED_red1_Write(1);
 3853              		.loc 1 1259 0
 3854 1074 0120     		movs	r0, #1
 3855 1076 FFF7FEFF 		bl	LED_red1_Write
1260:main.c        ****             LED_green2_Write(0);          
 3856              		.loc 1 1260 0
 3857 107a 0020     		movs	r0, #0
 3858 107c FFF7FEFF 		bl	LED_green2_Write
1261:main.c        ****             displayCurrentPresetNameAndCopedent();
 3859              		.loc 1 1261 0
 3860 1080 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 3861              	.L137:
1262:main.c        ****         }
1263:main.c        ****         
1264:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3862              		.loc 1 1264 0
 3863 1084 FFF7FEFF 		bl	enter_button_Read
 3864 1088 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 92


 3865 108a 002B     		cmp	r3, #0
 3866 108c 38D1     		bne	.L138
 3867              		.loc 1 1264 0 is_stmt 0 discriminator 1
 3868 108e 1A4B     		ldr	r3, .L236+60
 3869 1090 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3870 1092 002B     		cmp	r3, #0
 3871 1094 34D0     		beq	.L138
1265:main.c        ****         {
1266:main.c        ****             dualSlider = !dualSlider;
 3872              		.loc 1 1266 0 is_stmt 1
 3873 1096 194B     		ldr	r3, .L236+64
 3874 1098 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3875 109a 002B     		cmp	r3, #0
 3876 109c 0CBF     		ite	eq
 3877 109e 0123     		moveq	r3, #1
 3878 10a0 0023     		movne	r3, #0
 3879 10a2 DBB2     		uxtb	r3, r3
 3880 10a4 1A46     		mov	r2, r3
 3881 10a6 154B     		ldr	r3, .L236+64
 3882 10a8 1A70     		strb	r2, [r3]
1267:main.c        ****             LED_green1_Write(dualSlider);
 3883              		.loc 1 1267 0
 3884 10aa 144B     		ldr	r3, .L236+64
 3885 10ac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3886 10ae 1846     		mov	r0, r3
 3887 10b0 FFF7FEFF 		bl	LED_green1_Write
1268:main.c        ****             enterUp = 0;
 3888              		.loc 1 1268 0
 3889 10b4 104B     		ldr	r3, .L236+60
 3890 10b6 0022     		movs	r2, #0
 3891 10b8 1A70     		strb	r2, [r3]
 3892 10ba 29E0     		b	.L139
 3893              	.L237:
 3894              		.align	2
 3895              	.L236:
 3896 10bc 00000000 		.word	bar
 3897 10c0 00000000 		.word	fretMeasurements
 3898 10c4 00000000 		.word	fretScaling
 3899 10c8 00000000 		.word	stringMappedPositions
 3900 10cc 00000000 		.word	invStringMappedPositions
 3901 10d0 00000000 		.word	prevBar
 3902 10d4 00000000 		.word	strings
 3903 10d8 00000000 		.word	prevStrings
 3904 10dc 00000000 		.word	numStrings
 3905 10e0 00000000 		.word	octave
 3906 10e4 00000000 		.word	oct1Up
 3907 10e8 00000000 		.word	oct4Up
 3908 10ec 00000000 		.word	currentNeck
 3909 10f0 00000000 		.word	necks
 3910 10f4 00000000 		.word	currentCopedent
 3911 10f8 00000000 		.word	enterUp
 3912 10fc 00000000 		.word	dualSlider
 3913              	.L138:
1269:main.c        ****         }
1270:main.c        ****         else if (enter_button_Read())
 3914              		.loc 1 1270 0
 3915 1100 FFF7FEFF 		bl	enter_button_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 93


 3916 1104 0346     		mov	r3, r0
 3917 1106 002B     		cmp	r3, #0
 3918 1108 02D0     		beq	.L139
1271:main.c        ****         {
1272:main.c        ****             enterUp = 1;
 3919              		.loc 1 1272 0
 3920 110a 9D4B     		ldr	r3, .L238
 3921 110c 0122     		movs	r2, #1
 3922 110e 1A70     		strb	r2, [r3]
 3923              	.L139:
1273:main.c        ****         }
1274:main.c        ****         
1275:main.c        ****         
1276:main.c        ****         if (!editMode)
 3924              		.loc 1 1276 0
 3925 1110 9C4B     		ldr	r3, .L238+4
 3926 1112 1B68     		ldr	r3, [r3]
 3927 1114 002B     		cmp	r3, #0
 3928 1116 40F0B080 		bne	.L140
1277:main.c        ****         {
1278:main.c        ****         
1279:main.c        ****             if ((!button1_Read()) && (button1Up))
 3929              		.loc 1 1279 0
 3930 111a FFF7FEFF 		bl	button1_Read
 3931 111e 0346     		mov	r3, r0
 3932 1120 002B     		cmp	r3, #0
 3933 1122 25D1     		bne	.L141
 3934              		.loc 1 1279 0 is_stmt 0 discriminator 1
 3935 1124 984B     		ldr	r3, .L238+8
 3936 1126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3937 1128 002B     		cmp	r3, #0
 3938 112a 21D0     		beq	.L141
1280:main.c        ****             {
1281:main.c        ****                 currentCopedent -= 1;
 3939              		.loc 1 1281 0 is_stmt 1
 3940 112c 974B     		ldr	r3, .L238+12
 3941 112e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3942 1130 013B     		subs	r3, r3, #1
 3943 1132 DAB2     		uxtb	r2, r3
 3944 1134 954B     		ldr	r3, .L238+12
 3945 1136 1A70     		strb	r2, [r3]
1282:main.c        ****                 currentCopedent &= 31;
 3946              		.loc 1 1282 0
 3947 1138 944B     		ldr	r3, .L238+12
 3948 113a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3949 113c 03F01F03 		and	r3, r3, #31
 3950 1140 DAB2     		uxtb	r2, r3
 3951 1142 924B     		ldr	r3, .L238+12
 3952 1144 1A70     		strb	r2, [r3]
1283:main.c        ****                 necks[currentNeck] = currentCopedent;
 3953              		.loc 1 1283 0
 3954 1146 924B     		ldr	r3, .L238+16
 3955 1148 1B68     		ldr	r3, [r3]
 3956 114a 904A     		ldr	r2, .L238+12
 3957 114c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3958 114e 914A     		ldr	r2, .L238+20
 3959 1150 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 94


1284:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3960              		.loc 1 1284 0
 3961 1152 8E4B     		ldr	r3, .L238+12
 3962 1154 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3963 1156 8E4B     		ldr	r3, .L238+16
 3964 1158 1B68     		ldr	r3, [r3]
 3965 115a 9BB2     		uxth	r3, r3
 3966 115c 1946     		mov	r1, r3
 3967 115e 1046     		mov	r0, r2
 3968 1160 FFF7FEFF 		bl	EEPROM_WriteByte
1285:main.c        ****                 displayCurrentPresetNameAndCopedent();
 3969              		.loc 1 1285 0
 3970 1164 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1286:main.c        ****                 button1Up = 0;
 3971              		.loc 1 1286 0
 3972 1168 874B     		ldr	r3, .L238+8
 3973 116a 0022     		movs	r2, #0
 3974 116c 1A70     		strb	r2, [r3]
 3975 116e 07E0     		b	.L142
 3976              	.L141:
1287:main.c        ****             }
1288:main.c        ****             else if (button1_Read())
 3977              		.loc 1 1288 0
 3978 1170 FFF7FEFF 		bl	button1_Read
 3979 1174 0346     		mov	r3, r0
 3980 1176 002B     		cmp	r3, #0
 3981 1178 02D0     		beq	.L142
1289:main.c        ****             {
1290:main.c        ****                 button1Up = 1;
 3982              		.loc 1 1290 0
 3983 117a 834B     		ldr	r3, .L238+8
 3984 117c 0122     		movs	r2, #1
 3985 117e 1A70     		strb	r2, [r3]
 3986              	.L142:
1291:main.c        ****             }
1292:main.c        ****             
1293:main.c        ****             if ((!button2_Read()) && (button2Up))
 3987              		.loc 1 1293 0
 3988 1180 FFF7FEFF 		bl	button2_Read
 3989 1184 0346     		mov	r3, r0
 3990 1186 002B     		cmp	r3, #0
 3991 1188 25D1     		bne	.L143
 3992              		.loc 1 1293 0 is_stmt 0 discriminator 1
 3993 118a 834B     		ldr	r3, .L238+24
 3994 118c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3995 118e 002B     		cmp	r3, #0
 3996 1190 21D0     		beq	.L143
1294:main.c        ****             {
1295:main.c        ****                 currentCopedent += 1;
 3997              		.loc 1 1295 0 is_stmt 1
 3998 1192 7E4B     		ldr	r3, .L238+12
 3999 1194 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4000 1196 0133     		adds	r3, r3, #1
 4001 1198 DAB2     		uxtb	r2, r3
 4002 119a 7C4B     		ldr	r3, .L238+12
 4003 119c 1A70     		strb	r2, [r3]
1296:main.c        ****                 currentCopedent &= 31;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 95


 4004              		.loc 1 1296 0
 4005 119e 7B4B     		ldr	r3, .L238+12
 4006 11a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4007 11a2 03F01F03 		and	r3, r3, #31
 4008 11a6 DAB2     		uxtb	r2, r3
 4009 11a8 784B     		ldr	r3, .L238+12
 4010 11aa 1A70     		strb	r2, [r3]
1297:main.c        ****                 necks[currentNeck] = currentCopedent;
 4011              		.loc 1 1297 0
 4012 11ac 784B     		ldr	r3, .L238+16
 4013 11ae 1B68     		ldr	r3, [r3]
 4014 11b0 764A     		ldr	r2, .L238+12
 4015 11b2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4016 11b4 774A     		ldr	r2, .L238+20
 4017 11b6 D154     		strb	r1, [r2, r3]
1298:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4018              		.loc 1 1298 0
 4019 11b8 744B     		ldr	r3, .L238+12
 4020 11ba 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4021 11bc 744B     		ldr	r3, .L238+16
 4022 11be 1B68     		ldr	r3, [r3]
 4023 11c0 9BB2     		uxth	r3, r3
 4024 11c2 1946     		mov	r1, r3
 4025 11c4 1046     		mov	r0, r2
 4026 11c6 FFF7FEFF 		bl	EEPROM_WriteByte
1299:main.c        ****                 
1300:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4027              		.loc 1 1300 0
 4028 11ca FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1301:main.c        ****                 button2Up = 0;
 4029              		.loc 1 1301 0
 4030 11ce 724B     		ldr	r3, .L238+24
 4031 11d0 0022     		movs	r2, #0
 4032 11d2 1A70     		strb	r2, [r3]
 4033 11d4 07E0     		b	.L144
 4034              	.L143:
1302:main.c        ****             }
1303:main.c        ****             else if (button2_Read())
 4035              		.loc 1 1303 0
 4036 11d6 FFF7FEFF 		bl	button2_Read
 4037 11da 0346     		mov	r3, r0
 4038 11dc 002B     		cmp	r3, #0
 4039 11de 02D0     		beq	.L144
1304:main.c        ****             {
1305:main.c        ****                 button2Up = 1;
 4040              		.loc 1 1305 0
 4041 11e0 6D4B     		ldr	r3, .L238+24
 4042 11e2 0122     		movs	r2, #1
 4043 11e4 1A70     		strb	r2, [r3]
 4044              	.L144:
1306:main.c        ****             }
1307:main.c        ****             
1308:main.c        ****             if ((!button3_Read()) && (button3Up))
 4045              		.loc 1 1308 0
 4046 11e6 FFF7FEFF 		bl	button3_Read
 4047 11ea 0346     		mov	r3, r0
 4048 11ec 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 96


 4049 11ee 16D1     		bne	.L145
 4050              		.loc 1 1308 0 is_stmt 0 discriminator 1
 4051 11f0 6A4B     		ldr	r3, .L238+28
 4052 11f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4053 11f4 002B     		cmp	r3, #0
 4054 11f6 12D0     		beq	.L145
1309:main.c        ****             {
1310:main.c        ****                 patchNum -= 1;
 4055              		.loc 1 1310 0 is_stmt 1
 4056 11f8 694B     		ldr	r3, .L238+32
 4057 11fa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4058 11fc 013B     		subs	r3, r3, #1
 4059 11fe DAB2     		uxtb	r2, r3
 4060 1200 674B     		ldr	r3, .L238+32
 4061 1202 1A70     		strb	r2, [r3]
1311:main.c        ****                 patchNum &= 63;
 4062              		.loc 1 1311 0
 4063 1204 664B     		ldr	r3, .L238+32
 4064 1206 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4065 1208 03F03F03 		and	r3, r3, #63
 4066 120c DAB2     		uxtb	r2, r3
 4067 120e 644B     		ldr	r3, .L238+32
 4068 1210 1A70     		strb	r2, [r3]
1312:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4069              		.loc 1 1312 0
 4070 1212 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1313:main.c        ****                 button3Up = 0;
 4071              		.loc 1 1313 0
 4072 1216 614B     		ldr	r3, .L238+28
 4073 1218 0022     		movs	r2, #0
 4074 121a 1A70     		strb	r2, [r3]
 4075 121c 07E0     		b	.L146
 4076              	.L145:
1314:main.c        ****             }
1315:main.c        ****             else if (button3_Read())
 4077              		.loc 1 1315 0
 4078 121e FFF7FEFF 		bl	button3_Read
 4079 1222 0346     		mov	r3, r0
 4080 1224 002B     		cmp	r3, #0
 4081 1226 02D0     		beq	.L146
1316:main.c        ****             {
1317:main.c        ****                 button3Up = 1;
 4082              		.loc 1 1317 0
 4083 1228 5C4B     		ldr	r3, .L238+28
 4084 122a 0122     		movs	r2, #1
 4085 122c 1A70     		strb	r2, [r3]
 4086              	.L146:
1318:main.c        ****             }
1319:main.c        ****             
1320:main.c        ****             if ((!button4_Read()) && (button4Up))
 4087              		.loc 1 1320 0
 4088 122e FFF7FEFF 		bl	button4_Read
 4089 1232 0346     		mov	r3, r0
 4090 1234 002B     		cmp	r3, #0
 4091 1236 16D1     		bne	.L147
 4092              		.loc 1 1320 0 is_stmt 0 discriminator 1
 4093 1238 5A4B     		ldr	r3, .L238+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 97


 4094 123a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4095 123c 002B     		cmp	r3, #0
 4096 123e 12D0     		beq	.L147
1321:main.c        ****             {
1322:main.c        ****                 patchNum += 1;
 4097              		.loc 1 1322 0 is_stmt 1
 4098 1240 574B     		ldr	r3, .L238+32
 4099 1242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4100 1244 0133     		adds	r3, r3, #1
 4101 1246 DAB2     		uxtb	r2, r3
 4102 1248 554B     		ldr	r3, .L238+32
 4103 124a 1A70     		strb	r2, [r3]
1323:main.c        ****                 patchNum &= 63;
 4104              		.loc 1 1323 0
 4105 124c 544B     		ldr	r3, .L238+32
 4106 124e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4107 1250 03F03F03 		and	r3, r3, #63
 4108 1254 DAB2     		uxtb	r2, r3
 4109 1256 524B     		ldr	r3, .L238+32
 4110 1258 1A70     		strb	r2, [r3]
1324:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4111              		.loc 1 1324 0
 4112 125a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1325:main.c        ****                 button4Up = 0;
 4113              		.loc 1 1325 0
 4114 125e 514B     		ldr	r3, .L238+36
 4115 1260 0022     		movs	r2, #0
 4116 1262 1A70     		strb	r2, [r3]
 4117 1264 CCE0     		b	.L149
 4118              	.L147:
1326:main.c        ****             }
1327:main.c        ****             else if (button4_Read())
 4119              		.loc 1 1327 0
 4120 1266 FFF7FEFF 		bl	button4_Read
 4121 126a 0346     		mov	r3, r0
 4122 126c 002B     		cmp	r3, #0
 4123 126e 00F0C780 		beq	.L149
1328:main.c        ****             {
1329:main.c        ****                 button4Up = 1;
 4124              		.loc 1 1329 0
 4125 1272 4C4B     		ldr	r3, .L238+36
 4126 1274 0122     		movs	r2, #1
 4127 1276 1A70     		strb	r2, [r3]
 4128 1278 C2E0     		b	.L149
 4129              	.L140:
1330:main.c        ****             }
1331:main.c        ****         }
1332:main.c        ****         //if in edit mode, then /left right up down work differently
1333:main.c        ****         else
1334:main.c        ****         {
1335:main.c        ****         
1336:main.c        ****             if ((!button1_Read()) && (button1Up))
 4130              		.loc 1 1336 0
 4131 127a FFF7FEFF 		bl	button1_Read
 4132 127e 0346     		mov	r3, r0
 4133 1280 002B     		cmp	r3, #0
 4134 1282 25D1     		bne	.L150
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 98


 4135              		.loc 1 1336 0 is_stmt 0 discriminator 1
 4136 1284 404B     		ldr	r3, .L238+8
 4137 1286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4138 1288 002B     		cmp	r3, #0
 4139 128a 21D0     		beq	.L150
1337:main.c        ****             {
1338:main.c        ****                 currentCopedent -= 1;
 4140              		.loc 1 1338 0 is_stmt 1
 4141 128c 3F4B     		ldr	r3, .L238+12
 4142 128e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4143 1290 013B     		subs	r3, r3, #1
 4144 1292 DAB2     		uxtb	r2, r3
 4145 1294 3D4B     		ldr	r3, .L238+12
 4146 1296 1A70     		strb	r2, [r3]
1339:main.c        ****                 currentCopedent &= 31;
 4147              		.loc 1 1339 0
 4148 1298 3C4B     		ldr	r3, .L238+12
 4149 129a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4150 129c 03F01F03 		and	r3, r3, #31
 4151 12a0 DAB2     		uxtb	r2, r3
 4152 12a2 3A4B     		ldr	r3, .L238+12
 4153 12a4 1A70     		strb	r2, [r3]
1340:main.c        ****                 necks[currentNeck] = currentCopedent;
 4154              		.loc 1 1340 0
 4155 12a6 3A4B     		ldr	r3, .L238+16
 4156 12a8 1B68     		ldr	r3, [r3]
 4157 12aa 384A     		ldr	r2, .L238+12
 4158 12ac 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4159 12ae 394A     		ldr	r2, .L238+20
 4160 12b0 D154     		strb	r1, [r2, r3]
1341:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4161              		.loc 1 1341 0
 4162 12b2 364B     		ldr	r3, .L238+12
 4163 12b4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4164 12b6 364B     		ldr	r3, .L238+16
 4165 12b8 1B68     		ldr	r3, [r3]
 4166 12ba 9BB2     		uxth	r3, r3
 4167 12bc 1946     		mov	r1, r3
 4168 12be 1046     		mov	r0, r2
 4169 12c0 FFF7FEFF 		bl	EEPROM_WriteByte
1342:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4170              		.loc 1 1342 0
 4171 12c4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1343:main.c        ****                 button1Up = 0;
 4172              		.loc 1 1343 0
 4173 12c8 2F4B     		ldr	r3, .L238+8
 4174 12ca 0022     		movs	r2, #0
 4175 12cc 1A70     		strb	r2, [r3]
 4176 12ce 07E0     		b	.L151
 4177              	.L150:
1344:main.c        ****             }
1345:main.c        ****             else if (button1_Read())
 4178              		.loc 1 1345 0
 4179 12d0 FFF7FEFF 		bl	button1_Read
 4180 12d4 0346     		mov	r3, r0
 4181 12d6 002B     		cmp	r3, #0
 4182 12d8 02D0     		beq	.L151
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 99


1346:main.c        ****             {
1347:main.c        ****                 button1Up = 1;
 4183              		.loc 1 1347 0
 4184 12da 2B4B     		ldr	r3, .L238+8
 4185 12dc 0122     		movs	r2, #1
 4186 12de 1A70     		strb	r2, [r3]
 4187              	.L151:
1348:main.c        ****             }
1349:main.c        ****             
1350:main.c        ****             if ((!button2_Read()) && (button2Up))
 4188              		.loc 1 1350 0
 4189 12e0 FFF7FEFF 		bl	button2_Read
 4190 12e4 0346     		mov	r3, r0
 4191 12e6 002B     		cmp	r3, #0
 4192 12e8 25D1     		bne	.L152
 4193              		.loc 1 1350 0 is_stmt 0 discriminator 1
 4194 12ea 2B4B     		ldr	r3, .L238+24
 4195 12ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4196 12ee 002B     		cmp	r3, #0
 4197 12f0 21D0     		beq	.L152
1351:main.c        ****             {
1352:main.c        ****                 currentCopedent += 1;
 4198              		.loc 1 1352 0 is_stmt 1
 4199 12f2 264B     		ldr	r3, .L238+12
 4200 12f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4201 12f6 0133     		adds	r3, r3, #1
 4202 12f8 DAB2     		uxtb	r2, r3
 4203 12fa 244B     		ldr	r3, .L238+12
 4204 12fc 1A70     		strb	r2, [r3]
1353:main.c        ****                 currentCopedent &= 31;
 4205              		.loc 1 1353 0
 4206 12fe 234B     		ldr	r3, .L238+12
 4207 1300 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4208 1302 03F01F03 		and	r3, r3, #31
 4209 1306 DAB2     		uxtb	r2, r3
 4210 1308 204B     		ldr	r3, .L238+12
 4211 130a 1A70     		strb	r2, [r3]
1354:main.c        ****                 necks[currentNeck] = currentCopedent;
 4212              		.loc 1 1354 0
 4213 130c 204B     		ldr	r3, .L238+16
 4214 130e 1B68     		ldr	r3, [r3]
 4215 1310 1E4A     		ldr	r2, .L238+12
 4216 1312 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4217 1314 1F4A     		ldr	r2, .L238+20
 4218 1316 D154     		strb	r1, [r2, r3]
1355:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 4219              		.loc 1 1355 0
 4220 1318 1C4B     		ldr	r3, .L238+12
 4221 131a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4222 131c 1C4B     		ldr	r3, .L238+16
 4223 131e 1B68     		ldr	r3, [r3]
 4224 1320 9BB2     		uxth	r3, r3
 4225 1322 1946     		mov	r1, r3
 4226 1324 1046     		mov	r0, r2
 4227 1326 FFF7FEFF 		bl	EEPROM_WriteByte
1356:main.c        ****                 displayCurrentPresetNameAndCopedent();  
 4228              		.loc 1 1356 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 100


 4229 132a FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1357:main.c        ****                 button2Up = 0;
 4230              		.loc 1 1357 0
 4231 132e 1A4B     		ldr	r3, .L238+24
 4232 1330 0022     		movs	r2, #0
 4233 1332 1A70     		strb	r2, [r3]
 4234 1334 07E0     		b	.L153
 4235              	.L152:
1358:main.c        ****             }
1359:main.c        ****             else if (button2_Read())
 4236              		.loc 1 1359 0
 4237 1336 FFF7FEFF 		bl	button2_Read
 4238 133a 0346     		mov	r3, r0
 4239 133c 002B     		cmp	r3, #0
 4240 133e 02D0     		beq	.L153
1360:main.c        ****             {
1361:main.c        ****                 button2Up = 1;
 4241              		.loc 1 1361 0
 4242 1340 154B     		ldr	r3, .L238+24
 4243 1342 0122     		movs	r2, #1
 4244 1344 1A70     		strb	r2, [r3]
 4245              	.L153:
1362:main.c        ****             }
1363:main.c        ****             
1364:main.c        ****             if ((!button3_Read()) && (button3Up))
 4246              		.loc 1 1364 0
 4247 1346 FFF7FEFF 		bl	button3_Read
 4248 134a 0346     		mov	r3, r0
 4249 134c 002B     		cmp	r3, #0
 4250 134e 2BD1     		bne	.L154
 4251              		.loc 1 1364 0 is_stmt 0 discriminator 1
 4252 1350 124B     		ldr	r3, .L238+28
 4253 1352 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4254 1354 002B     		cmp	r3, #0
 4255 1356 27D0     		beq	.L154
1365:main.c        ****             {
1366:main.c        ****                 patchNum -= 1;
 4256              		.loc 1 1366 0 is_stmt 1
 4257 1358 114B     		ldr	r3, .L238+32
 4258 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4259 135c 013B     		subs	r3, r3, #1
 4260 135e DAB2     		uxtb	r2, r3
 4261 1360 0F4B     		ldr	r3, .L238+32
 4262 1362 1A70     		strb	r2, [r3]
1367:main.c        ****                 patchNum &= 63;
 4263              		.loc 1 1367 0
 4264 1364 0E4B     		ldr	r3, .L238+32
 4265 1366 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4266 1368 03F03F03 		and	r3, r3, #63
 4267 136c DAB2     		uxtb	r2, r3
 4268 136e 0C4B     		ldr	r3, .L238+32
 4269 1370 1A70     		strb	r2, [r3]
1368:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4270              		.loc 1 1368 0
 4271 1372 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1369:main.c        ****                 button3Up = 0;
 4272              		.loc 1 1369 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 101


 4273 1376 094B     		ldr	r3, .L238+28
 4274 1378 0022     		movs	r2, #0
 4275 137a 1A70     		strb	r2, [r3]
 4276 137c 1CE0     		b	.L155
 4277              	.L239:
 4278 137e 00BF     		.align	2
 4279              	.L238:
 4280 1380 00000000 		.word	enterUp
 4281 1384 00000000 		.word	editMode
 4282 1388 00000000 		.word	button1Up
 4283 138c 00000000 		.word	currentCopedent
 4284 1390 00000000 		.word	currentNeck
 4285 1394 00000000 		.word	necks
 4286 1398 00000000 		.word	button2Up
 4287 139c 00000000 		.word	button3Up
 4288 13a0 00000000 		.word	patchNum
 4289 13a4 00000000 		.word	button4Up
 4290              	.L154:
1370:main.c        ****             }
1371:main.c        ****             else if (button3_Read())
 4291              		.loc 1 1371 0
 4292 13a8 FFF7FEFF 		bl	button3_Read
 4293 13ac 0346     		mov	r3, r0
 4294 13ae 002B     		cmp	r3, #0
 4295 13b0 02D0     		beq	.L155
1372:main.c        ****             {
1373:main.c        ****                 button3Up = 1;
 4296              		.loc 1 1373 0
 4297 13b2 A74B     		ldr	r3, .L240
 4298 13b4 0122     		movs	r2, #1
 4299 13b6 1A70     		strb	r2, [r3]
 4300              	.L155:
1374:main.c        ****             }
1375:main.c        ****             
1376:main.c        ****             if ((!button4_Read()) && (button4Up))
 4301              		.loc 1 1376 0
 4302 13b8 FFF7FEFF 		bl	button4_Read
 4303 13bc 0346     		mov	r3, r0
 4304 13be 002B     		cmp	r3, #0
 4305 13c0 16D1     		bne	.L156
 4306              		.loc 1 1376 0 is_stmt 0 discriminator 1
 4307 13c2 A44B     		ldr	r3, .L240+4
 4308 13c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4309 13c6 002B     		cmp	r3, #0
 4310 13c8 12D0     		beq	.L156
1377:main.c        ****             {
1378:main.c        ****                 patchNum += 1;
 4311              		.loc 1 1378 0 is_stmt 1
 4312 13ca A34B     		ldr	r3, .L240+8
 4313 13cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4314 13ce 0133     		adds	r3, r3, #1
 4315 13d0 DAB2     		uxtb	r2, r3
 4316 13d2 A14B     		ldr	r3, .L240+8
 4317 13d4 1A70     		strb	r2, [r3]
1379:main.c        ****                 patchNum &= 63;
 4318              		.loc 1 1379 0
 4319 13d6 A04B     		ldr	r3, .L240+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 102


 4320 13d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4321 13da 03F03F03 		and	r3, r3, #63
 4322 13de DAB2     		uxtb	r2, r3
 4323 13e0 9D4B     		ldr	r3, .L240+8
 4324 13e2 1A70     		strb	r2, [r3]
1380:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4325              		.loc 1 1380 0
 4326 13e4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1381:main.c        ****                 button4Up = 0;
 4327              		.loc 1 1381 0
 4328 13e8 9A4B     		ldr	r3, .L240+4
 4329 13ea 0022     		movs	r2, #0
 4330 13ec 1A70     		strb	r2, [r3]
 4331 13ee 07E0     		b	.L149
 4332              	.L156:
1382:main.c        ****             }
1383:main.c        ****             else if (button4_Read())
 4333              		.loc 1 1383 0
 4334 13f0 FFF7FEFF 		bl	button4_Read
 4335 13f4 0346     		mov	r3, r0
 4336 13f6 002B     		cmp	r3, #0
 4337 13f8 02D0     		beq	.L149
1384:main.c        ****             {
1385:main.c        ****                 button4Up = 1;
 4338              		.loc 1 1385 0
 4339 13fa 964B     		ldr	r3, .L240+4
 4340 13fc 0122     		movs	r2, #1
 4341 13fe 1A70     		strb	r2, [r3]
 4342              	.L149:
1386:main.c        ****             }
1387:main.c        ****         }
1388:main.c        ****         if (((!edit_button_Read() && !encoder_button_Read()) && (editUp)) || ((!edit_button_Read() 
 4343              		.loc 1 1388 0
 4344 1400 FFF7FEFF 		bl	edit_button_Read
 4345 1404 0346     		mov	r3, r0
 4346 1406 002B     		cmp	r3, #0
 4347 1408 08D1     		bne	.L157
 4348              		.loc 1 1388 0 is_stmt 0 discriminator 1
 4349 140a FFF7FEFF 		bl	encoder_button_Read
 4350 140e 0346     		mov	r3, r0
 4351 1410 002B     		cmp	r3, #0
 4352 1412 03D1     		bne	.L157
 4353              		.loc 1 1388 0 discriminator 3
 4354 1414 914B     		ldr	r3, .L240+12
 4355 1416 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4356 1418 002B     		cmp	r3, #0
 4357 141a 0FD1     		bne	.L158
 4358              	.L157:
 4359              		.loc 1 1388 0 discriminator 5
 4360 141c FFF7FEFF 		bl	edit_button_Read
 4361 1420 0346     		mov	r3, r0
 4362 1422 002B     		cmp	r3, #0
 4363 1424 40F0B380 		bne	.L159
 4364              		.loc 1 1388 0 discriminator 6
 4365 1428 8D4B     		ldr	r3, .L240+16
 4366 142a 1B68     		ldr	r3, [r3]
 4367 142c 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 103


 4368 142e 00F0AE80 		beq	.L159
 4369              		.loc 1 1388 0 discriminator 7
 4370 1432 8A4B     		ldr	r3, .L240+12
 4371 1434 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4372 1436 002B     		cmp	r3, #0
 4373 1438 00F0A980 		beq	.L159
 4374              	.L158:
1389:main.c        ****         {
1390:main.c        ****             editMode = !editMode;
 4375              		.loc 1 1390 0 is_stmt 1
 4376 143c 884B     		ldr	r3, .L240+16
 4377 143e 1B68     		ldr	r3, [r3]
 4378 1440 002B     		cmp	r3, #0
 4379 1442 0CBF     		ite	eq
 4380 1444 0123     		moveq	r3, #1
 4381 1446 0023     		movne	r3, #0
 4382 1448 DBB2     		uxtb	r3, r3
 4383 144a 1A46     		mov	r2, r3
 4384 144c 844B     		ldr	r3, .L240+16
 4385 144e 1A60     		str	r2, [r3]
1391:main.c        ****             //for now edit mode is calibration mode
1392:main.c        ****             calibrationMode = !calibrationMode;
 4386              		.loc 1 1392 0
 4387 1450 844B     		ldr	r3, .L240+20
 4388 1452 1B68     		ldr	r3, [r3]
 4389 1454 002B     		cmp	r3, #0
 4390 1456 0CBF     		ite	eq
 4391 1458 0123     		moveq	r3, #1
 4392 145a 0023     		movne	r3, #0
 4393 145c DBB2     		uxtb	r3, r3
 4394 145e 1A46     		mov	r2, r3
 4395 1460 804B     		ldr	r3, .L240+20
 4396 1462 1A60     		str	r2, [r3]
1393:main.c        ****             LED_red2_Write(editMode);
 4397              		.loc 1 1393 0
 4398 1464 7E4B     		ldr	r3, .L240+16
 4399 1466 1B68     		ldr	r3, [r3]
 4400 1468 DBB2     		uxtb	r3, r3
 4401 146a 1846     		mov	r0, r3
 4402 146c FFF7FEFF 		bl	LED_red2_Write
1394:main.c        ****             editUp = 0;
 4403              		.loc 1 1394 0
 4404 1470 7A4B     		ldr	r3, .L240+12
 4405 1472 0022     		movs	r2, #0
 4406 1474 1A70     		strb	r2, [r3]
1395:main.c        ****             if (editMode)
 4407              		.loc 1 1395 0
 4408 1476 7A4B     		ldr	r3, .L240+16
 4409 1478 1B68     		ldr	r3, [r3]
 4410 147a 002B     		cmp	r3, #0
 4411 147c 36D0     		beq	.L160
1396:main.c        ****             {
1397:main.c        ****                 //#if 0
1398:main.c        ****                 OLEDclear(128, 64);
 4412              		.loc 1 1398 0
 4413 147e 4021     		movs	r1, #64
 4414 1480 8020     		movs	r0, #128
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 104


 4415 1482 FFF7FEFF 		bl	OLEDclear
1399:main.c        ****         
1400:main.c        ****                 myGFX_setFont(0);
 4416              		.loc 1 1400 0
 4417 1486 0020     		movs	r0, #0
 4418 1488 FFF7FEFF 		bl	myGFX_setFont
1401:main.c        ****                 
1402:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 1, FirstLine);
 4419              		.loc 1 1402 0
 4420 148c 0023     		movs	r3, #0
 4421 148e 0122     		movs	r2, #1
 4422 1490 0B21     		movs	r1, #11
 4423 1492 7548     		ldr	r0, .L240+24
 4424 1494 FFF7FEFF 		bl	OLEDwriteString
1403:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 1, SecondLine);
 4425              		.loc 1 1403 0
 4426 1498 0123     		movs	r3, #1
 4427 149a 0122     		movs	r2, #1
 4428 149c 0B21     		movs	r1, #11
 4429 149e 7348     		ldr	r0, .L240+28
 4430 14a0 FFF7FEFF 		bl	OLEDwriteString
1404:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 1, ThirdLine);
 4431              		.loc 1 1404 0
 4432 14a4 0223     		movs	r3, #2
 4433 14a6 0122     		movs	r2, #1
 4434 14a8 0B21     		movs	r1, #11
 4435 14aa 7148     		ldr	r0, .L240+32
 4436 14ac FFF7FEFF 		bl	OLEDwriteString
1405:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 1, FourthLine);
 4437              		.loc 1 1405 0
 4438 14b0 0323     		movs	r3, #3
 4439 14b2 0122     		movs	r2, #1
 4440 14b4 0B21     		movs	r1, #11
 4441 14b6 6F48     		ldr	r0, .L240+36
 4442 14b8 FFF7FEFF 		bl	OLEDwriteString
1406:main.c        ****                 mainOLEDWaitingToSend = 1;
 4443              		.loc 1 1406 0
 4444 14bc 6E4B     		ldr	r3, .L240+40
 4445 14be 0122     		movs	r2, #1
 4446 14c0 1A60     		str	r2, [r3]
 4447              	.LBB23:
1407:main.c        ****                                // #endif
1408:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1409:main.c        ****                 for (int i = 0; i < 10; i++)
 4448              		.loc 1 1409 0
 4449 14c2 0023     		movs	r3, #0
 4450 14c4 BB66     		str	r3, [r7, #104]
 4451 14c6 0DE0     		b	.L161
 4452              	.L162:
1410:main.c        ****                 {
1411:main.c        ****                     pedals_low[i] = 4095;
 4453              		.loc 1 1411 0 discriminator 3
 4454 14c8 6C4A     		ldr	r2, .L240+44
 4455 14ca BB6E     		ldr	r3, [r7, #104]
 4456 14cc 40F6FF71 		movw	r1, #4095
 4457 14d0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1412:main.c        ****                     pedals_high[i] = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 105


 4458              		.loc 1 1412 0 discriminator 3
 4459 14d4 6A4A     		ldr	r2, .L240+48
 4460 14d6 BB6E     		ldr	r3, [r7, #104]
 4461 14d8 0021     		movs	r1, #0
 4462 14da 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1409:main.c        ****                 {
 4463              		.loc 1 1409 0 discriminator 3
 4464 14de BB6E     		ldr	r3, [r7, #104]
 4465 14e0 0133     		adds	r3, r3, #1
 4466 14e2 BB66     		str	r3, [r7, #104]
 4467              	.L161:
1409:main.c        ****                 {
 4468              		.loc 1 1409 0 is_stmt 0 discriminator 1
 4469 14e4 BB6E     		ldr	r3, [r7, #104]
 4470 14e6 092B     		cmp	r3, #9
 4471 14e8 EEDD     		ble	.L162
 4472              	.LBE23:
1395:main.c        ****             {
 4473              		.loc 1 1395 0 is_stmt 1
 4474 14ea 58E0     		b	.L166
 4475              	.L160:
1413:main.c        ****                 }
1414:main.c        **** 
1415:main.c        ****             }
1416:main.c        ****             else
1417:main.c        ****             {
1418:main.c        ****                 //draw normal screen
1419:main.c        ****                 displayCurrentPresetNameAndCopedent();
 4476              		.loc 1 1419 0
 4477 14ec FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1420:main.c        ****                 calculatePedalRatios();
 4478              		.loc 1 1420 0
 4479 14f0 FFF7FEFF 		bl	calculatePedalRatios
 4480              	.LBB24:
1421:main.c        ****                 //now need to store this in EEPROM.                
1422:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 4481              		.loc 1 1422 0
 4482 14f4 0023     		movs	r3, #0
 4483 14f6 7B66     		str	r3, [r7, #100]
 4484 14f8 45E0     		b	.L164
 4485              	.L165:
1423:main.c        ****                 {
1424:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 4486              		.loc 1 1424 0 discriminator 3
 4487 14fa 604A     		ldr	r2, .L240+44
 4488 14fc 7B6E     		ldr	r3, [r7, #100]
 4489 14fe 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4490 1502 1B0A     		lsrs	r3, r3, #8
 4491 1504 9BB2     		uxth	r3, r3
 4492 1506 DAB2     		uxtb	r2, r3
 4493 1508 7B6E     		ldr	r3, [r7, #100]
 4494 150a 03F2E713 		addw	r3, r3, #487
 4495 150e 9BB2     		uxth	r3, r3
 4496 1510 9B00     		lsls	r3, r3, #2
 4497 1512 9BB2     		uxth	r3, r3
 4498 1514 1946     		mov	r1, r3
 4499 1516 1046     		mov	r0, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 106


 4500 1518 FFF7FEFF 		bl	EEPROM_WriteByte
1425:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 4501              		.loc 1 1425 0 discriminator 3
 4502 151c 574A     		ldr	r2, .L240+44
 4503 151e 7B6E     		ldr	r3, [r7, #100]
 4504 1520 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4505 1524 DAB2     		uxtb	r2, r3
 4506 1526 7B6E     		ldr	r3, [r7, #100]
 4507 1528 9BB2     		uxth	r3, r3
 4508 152a 9B00     		lsls	r3, r3, #2
 4509 152c 9BB2     		uxth	r3, r3
 4510 152e 03F29D73 		addw	r3, r3, #1949
 4511 1532 9BB2     		uxth	r3, r3
 4512 1534 1946     		mov	r1, r3
 4513 1536 1046     		mov	r0, r2
 4514 1538 FFF7FEFF 		bl	EEPROM_WriteByte
1426:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4515              		.loc 1 1426 0 discriminator 3
 4516 153c 504A     		ldr	r2, .L240+48
 4517 153e 7B6E     		ldr	r3, [r7, #100]
 4518 1540 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4519 1544 1B0A     		lsrs	r3, r3, #8
 4520 1546 9BB2     		uxth	r3, r3
 4521 1548 DAB2     		uxtb	r2, r3
 4522 154a 7B6E     		ldr	r3, [r7, #100]
 4523 154c 9BB2     		uxth	r3, r3
 4524 154e 9B00     		lsls	r3, r3, #2
 4525 1550 9BB2     		uxth	r3, r3
 4526 1552 03F29E73 		addw	r3, r3, #1950
 4527 1556 9BB2     		uxth	r3, r3
 4528 1558 1946     		mov	r1, r3
 4529 155a 1046     		mov	r0, r2
 4530 155c FFF7FEFF 		bl	EEPROM_WriteByte
1427:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4531              		.loc 1 1427 0 discriminator 3
 4532 1560 474A     		ldr	r2, .L240+48
 4533 1562 7B6E     		ldr	r3, [r7, #100]
 4534 1564 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4535 1568 DAB2     		uxtb	r2, r3
 4536 156a 7B6E     		ldr	r3, [r7, #100]
 4537 156c 9BB2     		uxth	r3, r3
 4538 156e 9B00     		lsls	r3, r3, #2
 4539 1570 9BB2     		uxth	r3, r3
 4540 1572 03F29F73 		addw	r3, r3, #1951
 4541 1576 9BB2     		uxth	r3, r3
 4542 1578 1946     		mov	r1, r3
 4543 157a 1046     		mov	r0, r2
 4544 157c FFF7FEFF 		bl	EEPROM_WriteByte
1422:main.c        ****                 {
 4545              		.loc 1 1422 0 discriminator 3
 4546 1580 7B6E     		ldr	r3, [r7, #100]
 4547 1582 0133     		adds	r3, r3, #1
 4548 1584 7B66     		str	r3, [r7, #100]
 4549              	.L164:
1422:main.c        ****                 {
 4550              		.loc 1 1422 0 is_stmt 0 discriminator 1
 4551 1586 7B6E     		ldr	r3, [r7, #100]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 107


 4552 1588 092B     		cmp	r3, #9
 4553 158a B6DD     		ble	.L165
 4554              	.LBE24:
1395:main.c        ****             {
 4555              		.loc 1 1395 0 is_stmt 1
 4556 158c 07E0     		b	.L166
 4557              	.L159:
1428:main.c        ****                 }
1429:main.c        **** 
1430:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1431:main.c        ****             }
1432:main.c        ****         }
1433:main.c        ****         else if (edit_button_Read())
 4558              		.loc 1 1433 0
 4559 158e FFF7FEFF 		bl	edit_button_Read
 4560 1592 0346     		mov	r3, r0
 4561 1594 002B     		cmp	r3, #0
 4562 1596 02D0     		beq	.L166
1434:main.c        ****         {
1435:main.c        ****             editUp = 1;
 4563              		.loc 1 1435 0
 4564 1598 304B     		ldr	r3, .L240+12
 4565 159a 0122     		movs	r2, #1
 4566 159c 1A70     		strb	r2, [r3]
 4567              	.L166:
1436:main.c        ****         }
1437:main.c        ****         
1438:main.c        ****         if (octave != prevOctave)
1439:main.c        ****         {
1440:main.c        ****             //sendMIDIControlChange(90, octave);
1441:main.c        ****         }
1442:main.c        ****         prevOctave = octave;
 4568              		.loc 1 1442 0
 4569 159e 394B     		ldr	r3, .L240+52
 4570 15a0 1B68     		ldr	r3, [r3]
 4571 15a2 394A     		ldr	r2, .L240+56
 4572 15a4 1360     		str	r3, [r2]
 4573              	.LBB25:
1443:main.c        ****         
1444:main.c        ****         
1445:main.c        ****         for (int i=  0; i < 4; i++)
 4574              		.loc 1 1445 0
 4575 15a6 0023     		movs	r3, #0
 4576 15a8 3B66     		str	r3, [r7, #96]
 4577 15aa 47E0     		b	.L167
 4578              	.L170:
1446:main.c        ****         {
1447:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4579              		.loc 1 1447 0
 4580 15ac 3B6E     		ldr	r3, [r7, #96]
 4581 15ae 9BB2     		uxth	r3, r3
 4582 15b0 1846     		mov	r0, r3
 4583 15b2 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4584 15b6 0346     		mov	r3, r0
 4585 15b8 002B     		cmp	r3, #0
 4586 15ba 00DA     		bge	.L168
 4587 15bc 0F33     		adds	r3, r3, #15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 108


 4588              	.L168:
 4589 15be 1B11     		asrs	r3, r3, #4
 4590 15c0 1BB2     		sxth	r3, r3
 4591 15c2 D9B2     		uxtb	r1, r3
 4592 15c4 314A     		ldr	r2, .L240+60
 4593 15c6 3B6E     		ldr	r3, [r7, #96]
 4594 15c8 1344     		add	r3, r3, r2
 4595 15ca 0A46     		mov	r2, r1
 4596 15cc 1A70     		strb	r2, [r3]
1448:main.c        ****             
1449:main.c        ****             knobs[i] = 255 - knobs[i];
 4597              		.loc 1 1449 0
 4598 15ce 2F4A     		ldr	r2, .L240+60
 4599 15d0 3B6E     		ldr	r3, [r7, #96]
 4600 15d2 1344     		add	r3, r3, r2
 4601 15d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4602 15d6 DB43     		mvns	r3, r3
 4603 15d8 D9B2     		uxtb	r1, r3
 4604 15da 2C4A     		ldr	r2, .L240+60
 4605 15dc 3B6E     		ldr	r3, [r7, #96]
 4606 15de 1344     		add	r3, r3, r2
 4607 15e0 0A46     		mov	r2, r1
 4608 15e2 1A70     		strb	r2, [r3]
1450:main.c        ****             knobs7bit[i] = knobs[i] >> 1;
 4609              		.loc 1 1450 0
 4610 15e4 294A     		ldr	r2, .L240+60
 4611 15e6 3B6E     		ldr	r3, [r7, #96]
 4612 15e8 1344     		add	r3, r3, r2
 4613 15ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4614 15ec 5B08     		lsrs	r3, r3, #1
 4615 15ee D9B2     		uxtb	r1, r3
 4616 15f0 274A     		ldr	r2, .L240+64
 4617 15f2 3B6E     		ldr	r3, [r7, #96]
 4618 15f4 1344     		add	r3, r3, r2
 4619 15f6 0A46     		mov	r2, r1
 4620 15f8 1A70     		strb	r2, [r3]
1451:main.c        ****             
1452:main.c        ****             if (knobs7bit[i] != prevKnobs7bit[i])
 4621              		.loc 1 1452 0
 4622 15fa 254A     		ldr	r2, .L240+64
 4623 15fc 3B6E     		ldr	r3, [r7, #96]
 4624 15fe 1344     		add	r3, r3, r2
 4625 1600 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4626 1602 2449     		ldr	r1, .L240+68
 4627 1604 3B6E     		ldr	r3, [r7, #96]
 4628 1606 0B44     		add	r3, r3, r1
 4629 1608 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4630 160a 9A42     		cmp	r2, r3
 4631 160c 0AD0     		beq	.L169
1453:main.c        ****             {
1454:main.c        ****                 sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4632              		.loc 1 1454 0
 4633 160e 3B6E     		ldr	r3, [r7, #96]
 4634 1610 03F10900 		add	r0, r3, #9
 4635 1614 1E4A     		ldr	r2, .L240+64
 4636 1616 3B6E     		ldr	r3, [r7, #96]
 4637 1618 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 109


 4638 161a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4639 161c 0022     		movs	r2, #0
 4640 161e 1946     		mov	r1, r3
 4641 1620 FFF7FEFF 		bl	sendMIDIControlChange
 4642              	.L169:
1455:main.c        ****             }
1456:main.c        ****             prevKnobs7bit[i] = knobs7bit[i];
 4643              		.loc 1 1456 0 discriminator 2
 4644 1624 1A4A     		ldr	r2, .L240+64
 4645 1626 3B6E     		ldr	r3, [r7, #96]
 4646 1628 1344     		add	r3, r3, r2
 4647 162a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4648 162c 194A     		ldr	r2, .L240+68
 4649 162e 3B6E     		ldr	r3, [r7, #96]
 4650 1630 1344     		add	r3, r3, r2
 4651 1632 0A46     		mov	r2, r1
 4652 1634 1A70     		strb	r2, [r3]
1445:main.c        ****         {
 4653              		.loc 1 1445 0 discriminator 2
 4654 1636 3B6E     		ldr	r3, [r7, #96]
 4655 1638 0133     		adds	r3, r3, #1
 4656 163a 3B66     		str	r3, [r7, #96]
 4657              	.L167:
1445:main.c        ****         {
 4658              		.loc 1 1445 0 is_stmt 0 discriminator 1
 4659 163c 3B6E     		ldr	r3, [r7, #96]
 4660 163e 032B     		cmp	r3, #3
 4661 1640 B4DD     		ble	.L170
 4662              	.LBE25:
1457:main.c        ****             
1458:main.c        ****         }
1459:main.c        ****         
1460:main.c        ****         testpin4_Write(1);
 4663              		.loc 1 1460 0 is_stmt 1
 4664 1642 0120     		movs	r0, #1
 4665 1644 FFF7FEFF 		bl	testpin4_Write
 4666              	.LBB26:
1461:main.c        ****         //calculate the pitch of each string based on the current Copedent
1462:main.c        ****         for (int i = 0; i < numStrings; i++)
 4667              		.loc 1 1462 0
 4668 1648 0023     		movs	r3, #0
 4669 164a FB65     		str	r3, [r7, #92]
 4670 164c B3E1     		b	.L171
 4671              	.L241:
 4672 164e 00BF     		.align	2
 4673              	.L240:
 4674 1650 00000000 		.word	button3Up
 4675 1654 00000000 		.word	button4Up
 4676 1658 00000000 		.word	patchNum
 4677 165c 00000000 		.word	editUp
 4678 1660 00000000 		.word	editMode
 4679 1664 00000000 		.word	calibrationMode
 4680 1668 04040000 		.word	.LC1
 4681 166c 10040000 		.word	.LC2
 4682 1670 1C040000 		.word	.LC3
 4683 1674 28040000 		.word	.LC4
 4684 1678 00000000 		.word	mainOLEDWaitingToSend
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 110


 4685 167c 00000000 		.word	pedals_low
 4686 1680 00000000 		.word	pedals_high
 4687 1684 00000000 		.word	octave
 4688 1688 00000000 		.word	prevOctave
 4689 168c 00000000 		.word	knobs
 4690 1690 00000000 		.word	knobs7bit
 4691 1694 00000000 		.word	prevKnobs7bit
 4692              	.L176:
 4693              	.LBB27:
1463:main.c        ****     	{
1464:main.c        ****     		//interpolate ratios for each of the strings
1465:main.c        ****            /*
1466:main.c        ****             float myMappedPos;
1467:main.c        ****             if (dualSlider)
1468:main.c        ****             {
1469:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1470:main.c        ****             }
1471:main.c        ****             else
1472:main.c        ****             {
1473:main.c        ****                 myMappedPos = stringMappedPositions[0];
1474:main.c        ****             }
1475:main.c        **** 
1476:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1477:main.c        ****             */
1478:main.c        ****     		//then apply those ratios to the fundamental frequencies
1479:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4694              		.loc 1 1479 0
 4695 1698 AA4B     		ldr	r3, .L242
 4696 169a 1B68     		ldr	r3, [r3]
 4697 169c AA4A     		ldr	r2, .L242+4
 4698 169e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4699 16a0 1A46     		mov	r2, r3
 4700 16a2 AA49     		ldr	r1, .L242+8
 4701 16a4 1346     		mov	r3, r2
 4702 16a6 5B01     		lsls	r3, r3, #5
 4703 16a8 1344     		add	r3, r3, r2
 4704 16aa 9B00     		lsls	r3, r3, #2
 4705 16ac FA6D     		ldr	r2, [r7, #92]
 4706 16ae 1344     		add	r3, r3, r2
 4707 16b0 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1480:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4708              		.loc 1 1480 0
 4709 16b4 A64B     		ldr	r3, .L242+12
 4710 16b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4711 16b8 1A46     		mov	r2, r3
 4712 16ba A449     		ldr	r1, .L242+8
 4713 16bc 1346     		mov	r3, r2
 4714 16be 5B01     		lsls	r3, r3, #5
 4715 16c0 1344     		add	r3, r3, r2
 4716 16c2 9B00     		lsls	r3, r3, #2
 4717 16c4 FA6D     		ldr	r2, [r7, #92]
 4718 16c6 1344     		add	r3, r3, r2
 4719 16c8 3033     		adds	r3, r3, #48
 4720 16ca 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4721 16ce A14B     		ldr	r3, .L242+16
 4722 16d0 1B68     		ldr	r3, [r3]	@ float
 4723 16d2 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 111


 4724 16d4 1046     		mov	r0, r2
 4725 16d6 FFF7FEFF 		bl	__aeabi_fmul
 4726 16da 0346     		mov	r3, r0
1479:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4727              		.loc 1 1479 0
 4728 16dc 1946     		mov	r1, r3
 4729 16de 2046     		mov	r0, r4
 4730 16e0 FFF7FEFF 		bl	__aeabi_fadd
 4731 16e4 0346     		mov	r3, r0
 4732 16e6 1C46     		mov	r4, r3
1481:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4733              		.loc 1 1481 0
 4734 16e8 994B     		ldr	r3, .L242+12
 4735 16ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4736 16ec 1A46     		mov	r2, r3
 4737 16ee 9749     		ldr	r1, .L242+8
 4738 16f0 1346     		mov	r3, r2
 4739 16f2 5B01     		lsls	r3, r3, #5
 4740 16f4 1344     		add	r3, r3, r2
 4741 16f6 9B00     		lsls	r3, r3, #2
 4742 16f8 FA6D     		ldr	r2, [r7, #92]
 4743 16fa 1344     		add	r3, r3, r2
 4744 16fc 3C33     		adds	r3, r3, #60
 4745 16fe 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4746 1702 944B     		ldr	r3, .L242+16
 4747 1704 5B68     		ldr	r3, [r3, #4]	@ float
 4748 1706 1946     		mov	r1, r3
 4749 1708 1046     		mov	r0, r2
 4750 170a FFF7FEFF 		bl	__aeabi_fmul
 4751 170e 0346     		mov	r3, r0
1480:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4752              		.loc 1 1480 0
 4753 1710 1946     		mov	r1, r3
 4754 1712 2046     		mov	r0, r4
 4755 1714 FFF7FEFF 		bl	__aeabi_fadd
 4756 1718 0346     		mov	r3, r0
 4757 171a 1C46     		mov	r4, r3
1482:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4758              		.loc 1 1482 0
 4759 171c 8C4B     		ldr	r3, .L242+12
 4760 171e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4761 1720 1A46     		mov	r2, r3
 4762 1722 8A49     		ldr	r1, .L242+8
 4763 1724 1346     		mov	r3, r2
 4764 1726 5B01     		lsls	r3, r3, #5
 4765 1728 1344     		add	r3, r3, r2
 4766 172a 9B00     		lsls	r3, r3, #2
 4767 172c FA6D     		ldr	r2, [r7, #92]
 4768 172e 1344     		add	r3, r3, r2
 4769 1730 4833     		adds	r3, r3, #72
 4770 1732 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4771 1736 874B     		ldr	r3, .L242+16
 4772 1738 9B68     		ldr	r3, [r3, #8]	@ float
 4773 173a 1946     		mov	r1, r3
 4774 173c 1046     		mov	r0, r2
 4775 173e FFF7FEFF 		bl	__aeabi_fmul
 4776 1742 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 112


1481:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4777              		.loc 1 1481 0
 4778 1744 1946     		mov	r1, r3
 4779 1746 2046     		mov	r0, r4
 4780 1748 FFF7FEFF 		bl	__aeabi_fadd
 4781 174c 0346     		mov	r3, r0
 4782 174e 1C46     		mov	r4, r3
1483:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4783              		.loc 1 1483 0
 4784 1750 7F4B     		ldr	r3, .L242+12
 4785 1752 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4786 1754 1A46     		mov	r2, r3
 4787 1756 7D49     		ldr	r1, .L242+8
 4788 1758 1346     		mov	r3, r2
 4789 175a 5B01     		lsls	r3, r3, #5
 4790 175c 1344     		add	r3, r3, r2
 4791 175e 9B00     		lsls	r3, r3, #2
 4792 1760 FA6D     		ldr	r2, [r7, #92]
 4793 1762 1344     		add	r3, r3, r2
 4794 1764 5433     		adds	r3, r3, #84
 4795 1766 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4796 176a 7A4B     		ldr	r3, .L242+16
 4797 176c DB68     		ldr	r3, [r3, #12]	@ float
 4798 176e 1946     		mov	r1, r3
 4799 1770 1046     		mov	r0, r2
 4800 1772 FFF7FEFF 		bl	__aeabi_fmul
 4801 1776 0346     		mov	r3, r0
1482:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4802              		.loc 1 1482 0
 4803 1778 1946     		mov	r1, r3
 4804 177a 2046     		mov	r0, r4
 4805 177c FFF7FEFF 		bl	__aeabi_fadd
 4806 1780 0346     		mov	r3, r0
 4807 1782 1C46     		mov	r4, r3
1484:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4808              		.loc 1 1484 0
 4809 1784 724B     		ldr	r3, .L242+12
 4810 1786 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4811 1788 1A46     		mov	r2, r3
 4812 178a 7049     		ldr	r1, .L242+8
 4813 178c 1346     		mov	r3, r2
 4814 178e 5B01     		lsls	r3, r3, #5
 4815 1790 1344     		add	r3, r3, r2
 4816 1792 9B00     		lsls	r3, r3, #2
 4817 1794 FA6D     		ldr	r2, [r7, #92]
 4818 1796 1344     		add	r3, r3, r2
 4819 1798 6033     		adds	r3, r3, #96
 4820 179a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4821 179e 6D4B     		ldr	r3, .L242+16
 4822 17a0 1B69     		ldr	r3, [r3, #16]	@ float
 4823 17a2 1946     		mov	r1, r3
 4824 17a4 1046     		mov	r0, r2
 4825 17a6 FFF7FEFF 		bl	__aeabi_fmul
 4826 17aa 0346     		mov	r3, r0
1483:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4827              		.loc 1 1483 0
 4828 17ac 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 113


 4829 17ae 2046     		mov	r0, r4
 4830 17b0 FFF7FEFF 		bl	__aeabi_fadd
 4831 17b4 0346     		mov	r3, r0
 4832 17b6 1C46     		mov	r4, r3
1485:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4833              		.loc 1 1485 0
 4834 17b8 654B     		ldr	r3, .L242+12
 4835 17ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4836 17bc 1A46     		mov	r2, r3
 4837 17be 6349     		ldr	r1, .L242+8
 4838 17c0 1346     		mov	r3, r2
 4839 17c2 5B01     		lsls	r3, r3, #5
 4840 17c4 1344     		add	r3, r3, r2
 4841 17c6 9B00     		lsls	r3, r3, #2
 4842 17c8 FA6D     		ldr	r2, [r7, #92]
 4843 17ca 1344     		add	r3, r3, r2
 4844 17cc 7833     		adds	r3, r3, #120
 4845 17ce 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4846 17d2 604B     		ldr	r3, .L242+16
 4847 17d4 5B69     		ldr	r3, [r3, #20]	@ float
 4848 17d6 1946     		mov	r1, r3
 4849 17d8 1046     		mov	r0, r2
 4850 17da FFF7FEFF 		bl	__aeabi_fmul
 4851 17de 0346     		mov	r3, r0
1484:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4852              		.loc 1 1484 0
 4853 17e0 1946     		mov	r1, r3
 4854 17e2 2046     		mov	r0, r4
 4855 17e4 FFF7FEFF 		bl	__aeabi_fadd
 4856 17e8 0346     		mov	r3, r0
 4857 17ea 1C46     		mov	r4, r3
1486:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4858              		.loc 1 1486 0
 4859 17ec 584B     		ldr	r3, .L242+12
 4860 17ee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4861 17f0 1A46     		mov	r2, r3
 4862 17f2 5649     		ldr	r1, .L242+8
 4863 17f4 1346     		mov	r3, r2
 4864 17f6 5B01     		lsls	r3, r3, #5
 4865 17f8 1344     		add	r3, r3, r2
 4866 17fa 9B00     		lsls	r3, r3, #2
 4867 17fc FA6D     		ldr	r2, [r7, #92]
 4868 17fe 1344     		add	r3, r3, r2
 4869 1800 6C33     		adds	r3, r3, #108
 4870 1802 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4871 1806 534B     		ldr	r3, .L242+16
 4872 1808 9B69     		ldr	r3, [r3, #24]	@ float
 4873 180a 1946     		mov	r1, r3
 4874 180c 1046     		mov	r0, r2
 4875 180e FFF7FEFF 		bl	__aeabi_fmul
 4876 1812 0346     		mov	r3, r0
1485:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4877              		.loc 1 1485 0
 4878 1814 1946     		mov	r1, r3
 4879 1816 2046     		mov	r0, r4
 4880 1818 FFF7FEFF 		bl	__aeabi_fadd
 4881 181c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 114


 4882 181e 1C46     		mov	r4, r3
1487:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4883              		.loc 1 1487 0
 4884 1820 4B4B     		ldr	r3, .L242+12
 4885 1822 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4886 1824 1A46     		mov	r2, r3
 4887 1826 4949     		ldr	r1, .L242+8
 4888 1828 1346     		mov	r3, r2
 4889 182a 5B01     		lsls	r3, r3, #5
 4890 182c 1344     		add	r3, r3, r2
 4891 182e 9B00     		lsls	r3, r3, #2
 4892 1830 FA6D     		ldr	r2, [r7, #92]
 4893 1832 1344     		add	r3, r3, r2
 4894 1834 2433     		adds	r3, r3, #36
 4895 1836 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4896 183a 464B     		ldr	r3, .L242+16
 4897 183c DB69     		ldr	r3, [r3, #28]	@ float
 4898 183e 1946     		mov	r1, r3
 4899 1840 1046     		mov	r0, r2
 4900 1842 FFF7FEFF 		bl	__aeabi_fmul
 4901 1846 0346     		mov	r3, r0
1486:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4902              		.loc 1 1486 0
 4903 1848 1946     		mov	r1, r3
 4904 184a 2046     		mov	r0, r4
 4905 184c FFF7FEFF 		bl	__aeabi_fadd
 4906 1850 0346     		mov	r3, r0
 4907 1852 1C46     		mov	r4, r3
1488:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4908              		.loc 1 1488 0
 4909 1854 3E4B     		ldr	r3, .L242+12
 4910 1856 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4911 1858 1A46     		mov	r2, r3
 4912 185a 3C49     		ldr	r1, .L242+8
 4913 185c 1346     		mov	r3, r2
 4914 185e 5B01     		lsls	r3, r3, #5
 4915 1860 1344     		add	r3, r3, r2
 4916 1862 9B00     		lsls	r3, r3, #2
 4917 1864 FA6D     		ldr	r2, [r7, #92]
 4918 1866 1344     		add	r3, r3, r2
 4919 1868 0C33     		adds	r3, r3, #12
 4920 186a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4921 186e 394B     		ldr	r3, .L242+16
 4922 1870 1B6A     		ldr	r3, [r3, #32]	@ float
 4923 1872 1946     		mov	r1, r3
 4924 1874 1046     		mov	r0, r2
 4925 1876 FFF7FEFF 		bl	__aeabi_fmul
 4926 187a 0346     		mov	r3, r0
1487:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4927              		.loc 1 1487 0
 4928 187c 1946     		mov	r1, r3
 4929 187e 2046     		mov	r0, r4
 4930 1880 FFF7FEFF 		bl	__aeabi_fadd
 4931 1884 0346     		mov	r3, r0
 4932 1886 1C46     		mov	r4, r3
1489:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4933              		.loc 1 1489 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 115


 4934 1888 314B     		ldr	r3, .L242+12
 4935 188a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4936 188c 1A46     		mov	r2, r3
 4937 188e 2F49     		ldr	r1, .L242+8
 4938 1890 1346     		mov	r3, r2
 4939 1892 5B01     		lsls	r3, r3, #5
 4940 1894 1344     		add	r3, r3, r2
 4941 1896 9B00     		lsls	r3, r3, #2
 4942 1898 FA6D     		ldr	r2, [r7, #92]
 4943 189a 1344     		add	r3, r3, r2
 4944 189c 1833     		adds	r3, r3, #24
 4945 189e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4946 18a2 2C4B     		ldr	r3, .L242+16
 4947 18a4 5B6A     		ldr	r3, [r3, #36]	@ float
 4948 18a6 1946     		mov	r1, r3
 4949 18a8 1046     		mov	r0, r2
 4950 18aa FFF7FEFF 		bl	__aeabi_fmul
 4951 18ae 0346     		mov	r3, r0
1479:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4952              		.loc 1 1479 0
 4953 18b0 1946     		mov	r1, r3
 4954 18b2 2046     		mov	r0, r4
 4955 18b4 FFF7FEFF 		bl	__aeabi_fadd
 4956 18b8 0346     		mov	r3, r0
 4957 18ba 7B62     		str	r3, [r7, #36]	@ float
1490:main.c        **** 
1491:main.c        ****             
1492:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 4958              		.loc 1 1492 0
 4959 18bc 244B     		ldr	r3, .L242+12
 4960 18be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4961 18c0 1A46     		mov	r2, r3
 4962 18c2 2249     		ldr	r1, .L242+8
 4963 18c4 1346     		mov	r3, r2
 4964 18c6 5B01     		lsls	r3, r3, #5
 4965 18c8 1344     		add	r3, r3, r2
 4966 18ca 9B00     		lsls	r3, r3, #2
 4967 18cc FA6D     		ldr	r2, [r7, #92]
 4968 18ce 1344     		add	r3, r3, r2
 4969 18d0 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 4970 18d4 3B62     		str	r3, [r7, #32]	@ float
1493:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 4971              		.loc 1 1493 0
 4972 18d6 386A     		ldr	r0, [r7, #32]	@ float
 4973 18d8 FFF7FEFF 		bl	__aeabi_f2iz
 4974 18dc 0146     		mov	r1, r0
 4975 18de 1E4A     		ldr	r2, .L242+20
 4976 18e0 FB6D     		ldr	r3, [r7, #92]
 4977 18e2 42F82310 		str	r1, [r2, r3, lsl #2]
1494:main.c        ****             
1495:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 4978              		.loc 1 1495 0
 4979 18e6 1D4B     		ldr	r3, .L242+24
 4980 18e8 1C68     		ldr	r4, [r3]	@ float
 4981 18ea 786A     		ldr	r0, [r7, #36]	@ float
 4982 18ec FFF7FEFF 		bl	mtof
 4983 18f0 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 116


 4984 18f2 1946     		mov	r1, r3
 4985 18f4 2046     		mov	r0, r4
 4986 18f6 FFF7FEFF 		bl	__aeabi_fmul
 4987 18fa 0346     		mov	r3, r0
 4988 18fc 1846     		mov	r0, r3
 4989 18fe FFF7FEFF 		bl	ftom
 4990 1902 F861     		str	r0, [r7, #28]	@ float
1496:main.c        ****             
1497:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 4991              		.loc 1 1497 0
 4992 1904 144A     		ldr	r2, .L242+20
 4993 1906 FB6D     		ldr	r3, [r7, #92]
 4994 1908 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4995 190c 1846     		mov	r0, r3
 4996 190e FFF7FEFF 		bl	__aeabi_i2f
 4997 1912 0346     		mov	r3, r0
 4998 1914 1946     		mov	r1, r3
 4999 1916 F869     		ldr	r0, [r7, #28]	@ float
 5000 1918 FFF7FEFF 		bl	__aeabi_fsub
 5001 191c 0346     		mov	r3, r0
 5002 191e BB61     		str	r3, [r7, #24]	@ float
1498:main.c        ****             
1499:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 5003              		.loc 1 1499 0
 5004 1920 0F49     		ldr	r1, .L242+28
 5005 1922 B869     		ldr	r0, [r7, #24]	@ float
 5006 1924 FFF7FEFF 		bl	__aeabi_fmul
 5007 1928 0346     		mov	r3, r0
 5008 192a 4FF08C41 		mov	r1, #1174405120
 5009 192e 1846     		mov	r0, r3
 5010 1930 FFF7FEFF 		bl	__aeabi_fadd
 5011 1934 0346     		mov	r3, r0
 5012 1936 7B61     		str	r3, [r7, #20]	@ float
1500:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 5013              		.loc 1 1500 0
 5014 1938 0A4A     		ldr	r2, .L242+32
 5015 193a FB6D     		ldr	r3, [r7, #92]
 5016 193c 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5017 1940 12E0     		b	.L243
 5018              	.L244:
 5019 1942 00BF     		.align	2
 5020              	.L242:
 5021 1944 00000000 		.word	currentNeck
 5022 1948 00000000 		.word	necks
 5023 194c 00000000 		.word	copedent
 5024 1950 00000000 		.word	currentCopedent
 5025 1954 00000000 		.word	pedals_float
 5026 1958 00000000 		.word	openStringMIDI_Int
 5027 195c 00000000 		.word	invStringMappedPositions
 5028 1960 ABAA2A43 		.word	1126869675
 5029 1964 00000000 		.word	prevStringPitchBend
 5030              	.L243:
 5031 1968 7969     		ldr	r1, [r7, #20]	@ float
 5032 196a 1846     		mov	r0, r3
 5033 196c FFF7FEFF 		bl	__aeabi_fcmpeq
 5034 1970 0346     		mov	r3, r0
 5035 1972 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 117


 5036 1974 0AD1     		bne	.L172
1501:main.c        ****             {
1502:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 5037              		.loc 1 1502 0
 5038 1976 7869     		ldr	r0, [r7, #20]	@ float
 5039 1978 FFF7FEFF 		bl	__aeabi_f2uiz
 5040 197c 0346     		mov	r3, r0
 5041 197e 1A46     		mov	r2, r3
 5042 1980 FB6D     		ldr	r3, [r7, #92]
 5043 1982 0133     		adds	r3, r3, #1
 5044 1984 1946     		mov	r1, r3
 5045 1986 1046     		mov	r0, r2
 5046 1988 FFF7FEFF 		bl	sendMIDIPitchBend
 5047              	.L172:
1503:main.c        ****             }
1504:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 5048              		.loc 1 1504 0
 5049 198c A049     		ldr	r1, .L245
 5050 198e FB6D     		ldr	r3, [r7, #92]
 5051 1990 7A69     		ldr	r2, [r7, #20]	@ float
 5052 1992 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1505:main.c        ****             
1506:main.c        ****             if (tempMIDI > 0.0f)
 5053              		.loc 1 1506 0
 5054 1996 4FF00001 		mov	r1, #0
 5055 199a 786A     		ldr	r0, [r7, #36]	@ float
 5056 199c FFF7FEFF 		bl	__aeabi_fcmpgt
 5057 19a0 0346     		mov	r3, r0
 5058 19a2 002B     		cmp	r3, #0
 5059 19a4 04D0     		beq	.L174
1507:main.c        ****             {
1508:main.c        ****                 stringMIDI[i] = tempMIDI;
 5060              		.loc 1 1508 0
 5061 19a6 9B49     		ldr	r1, .L245+4
 5062 19a8 FB6D     		ldr	r3, [r7, #92]
 5063 19aa 7A6A     		ldr	r2, [r7, #36]	@ float
 5064 19ac 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 5065              	.L174:
 5066              	.LBE27:
1462:main.c        ****     	{
 5067              		.loc 1 1462 0 discriminator 2
 5068 19b0 FB6D     		ldr	r3, [r7, #92]
 5069 19b2 0133     		adds	r3, r3, #1
 5070 19b4 FB65     		str	r3, [r7, #92]
 5071              	.L171:
1462:main.c        ****     	{
 5072              		.loc 1 1462 0 is_stmt 0 discriminator 1
 5073 19b6 984B     		ldr	r3, .L245+8
 5074 19b8 1B68     		ldr	r3, [r3]
 5075 19ba FA6D     		ldr	r2, [r7, #92]
 5076 19bc 9A42     		cmp	r2, r3
 5077 19be FFF66BAE 		blt	.L176
 5078              	.LBE26:
1509:main.c        ****             }
1510:main.c        ****     	}
1511:main.c        ****         testpin4_Write(0);
 5079              		.loc 1 1511 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 118


 5080 19c2 0020     		movs	r0, #0
 5081 19c4 FFF7FEFF 		bl	testpin4_Write
1512:main.c        ****         if (encoder_button_Read())
 5082              		.loc 1 1512 0
 5083 19c8 FFF7FEFF 		bl	encoder_button_Read
 5084 19cc 0346     		mov	r3, r0
 5085 19ce 002B     		cmp	r3, #0
 5086 19d0 10D0     		beq	.L177
1513:main.c        ****         {
1514:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 5087              		.loc 1 1514 0
 5088 19d2 FFF7FEFF 		bl	QuadDec_1_GetCounter
 5089 19d6 0346     		mov	r3, r0
 5090 19d8 9800     		lsls	r0, r3, #2
 5091 19da 904B     		ldr	r3, .L245+12
 5092 19dc 1B68     		ldr	r3, [r3]
 5093 19de 8F4A     		ldr	r2, .L245+12
 5094 19e0 1268     		ldr	r2, [r2]
 5095 19e2 8F49     		ldr	r1, .L245+16
 5096 19e4 8A5C     		ldrb	r2, [r1, r2]
 5097 19e6 D1B2     		uxtb	r1, r2
 5098 19e8 C2B2     		uxtb	r2, r0
 5099 19ea 0A44     		add	r2, r2, r1
 5100 19ec D1B2     		uxtb	r1, r2
 5101 19ee 8C4A     		ldr	r2, .L245+16
 5102 19f0 D154     		strb	r1, [r2, r3]
 5103 19f2 0FE0     		b	.L178
 5104              	.L177:
1515:main.c        ****         }
1516:main.c        ****         else
1517:main.c        ****         {
1518:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 5105              		.loc 1 1518 0
 5106 19f4 FFF7FEFF 		bl	QuadDec_1_GetCounter
 5107 19f8 0346     		mov	r3, r0
 5108 19fa 1846     		mov	r0, r3
 5109 19fc 874B     		ldr	r3, .L245+12
 5110 19fe 1B68     		ldr	r3, [r3]
 5111 1a00 864A     		ldr	r2, .L245+12
 5112 1a02 1268     		ldr	r2, [r2]
 5113 1a04 8649     		ldr	r1, .L245+16
 5114 1a06 8A5C     		ldrb	r2, [r1, r2]
 5115 1a08 D1B2     		uxtb	r1, r2
 5116 1a0a C2B2     		uxtb	r2, r0
 5117 1a0c 0A44     		add	r2, r2, r1
 5118 1a0e D1B2     		uxtb	r1, r2
 5119 1a10 834A     		ldr	r2, .L245+16
 5120 1a12 D154     		strb	r1, [r2, r3]
 5121              	.L178:
1519:main.c        ****         }
1520:main.c        ****         QuadDec_1_SetCounter(0);
 5122              		.loc 1 1520 0
 5123 1a14 0020     		movs	r0, #0
 5124 1a16 FFF7FEFF 		bl	QuadDec_1_SetCounter
1521:main.c        ****         
1522:main.c        **** 
1523:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 119


1524:main.c        ****         if (USB_check_flag)
 5125              		.loc 1 1524 0
 5126 1a1a 824B     		ldr	r3, .L245+20
 5127 1a1c 1B78     		ldrb	r3, [r3]
 5128 1a1e DBB2     		uxtb	r3, r3
 5129 1a20 002B     		cmp	r3, #0
 5130 1a22 01D0     		beq	.L179
1525:main.c        ****         {
1526:main.c        ****             checkUSB_Vbus();
 5131              		.loc 1 1526 0
 5132 1a24 FFF7FEFF 		bl	checkUSB_Vbus
 5133              	.L179:
1527:main.c        ****         }
1528:main.c        ****         //only service the USB bus if there is a computer plugged in
1529:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5134              		.loc 1 1529 0
 5135 1a28 7F4B     		ldr	r3, .L245+24
 5136 1a2a 1B78     		ldrb	r3, [r3]
 5137 1a2c DBB2     		uxtb	r3, r3
 5138 1a2e 002B     		cmp	r3, #0
 5139 1a30 13D0     		beq	.L223
 5140              		.loc 1 1529 0 is_stmt 0 discriminator 1
 5141 1a32 FFF7FEFF 		bl	USB_VBusPresent
 5142 1a36 0346     		mov	r3, r0
 5143 1a38 002B     		cmp	r3, #0
 5144 1a3a 0ED0     		beq	.L223
1530:main.c        ****         {
1531:main.c        ****             if (midiSent > 64)
 5145              		.loc 1 1531 0 is_stmt 1
 5146 1a3c 7B4B     		ldr	r3, .L245+28
 5147 1a3e 1B88     		ldrh	r3, [r3]
 5148 1a40 402B     		cmp	r3, #64
 5149 1a42 05D9     		bls	.L181
1532:main.c        ****             {
1533:main.c        ****                 midiOverflow++;
 5150              		.loc 1 1533 0
 5151 1a44 7A4B     		ldr	r3, .L245+32
 5152 1a46 1B88     		ldrh	r3, [r3]
 5153 1a48 0133     		adds	r3, r3, #1
 5154 1a4a 9AB2     		uxth	r2, r3
 5155 1a4c 784B     		ldr	r3, .L245+32
 5156 1a4e 1A80     		strh	r2, [r3]	@ movhi
 5157              	.L181:
1534:main.c        ****             }
1535:main.c        ****             midiSent = 0;
 5158              		.loc 1 1535 0
 5159 1a50 764B     		ldr	r3, .L245+28
 5160 1a52 0022     		movs	r2, #0
 5161 1a54 1A80     		strh	r2, [r3]	@ movhi
1536:main.c        ****             USB_service();
 5162              		.loc 1 1536 0
 5163 1a56 FFF7FEFF 		bl	USB_service
 5164              	.L223:
1537:main.c        ****         }
1538:main.c        **** 
1539:main.c        ****         
1540:main.c        ****         /*
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 120


1541:main.c        ****         for (int i = 0; i < 10; i++)
1542:main.c        ****         {
1543:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1544:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1545:main.c        ****         }
1546:main.c        ****         
1547:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1548:main.c        ****         for (int i = 0; i < 4; i++)
1549:main.c        ****         {
1550:main.c        ****             myArray[i+21] = knobs[i];
1551:main.c        ****         }
1552:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1553:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1554:main.c        ****         */
1555:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1556:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5165              		.loc 1 1556 0
 5166 1a5a 00BF     		nop
 5167              	.L185:
 5168              		.loc 1 1556 0 is_stmt 0 discriminator 7
 5169 1a5c FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5170 1a60 0346     		mov	r3, r0
 5171 1a62 03F00103 		and	r3, r3, #1
 5172 1a66 002B     		cmp	r3, #0
 5173 1a68 06D1     		bne	.L182
 5174              		.loc 1 1556 0 discriminator 2
 5175 1a6a FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5176 1a6e 0346     		mov	r3, r0
 5177 1a70 03F01003 		and	r3, r3, #16
 5178 1a74 002B     		cmp	r3, #0
 5179 1a76 01D0     		beq	.L183
 5180              	.L182:
 5181              		.loc 1 1556 0 discriminator 3
 5182 1a78 0123     		movs	r3, #1
 5183 1a7a 00E0     		b	.L184
 5184              	.L183:
 5185              		.loc 1 1556 0 discriminator 4
 5186 1a7c 0023     		movs	r3, #0
 5187              	.L184:
 5188              		.loc 1 1556 0 discriminator 6
 5189 1a7e 002B     		cmp	r3, #0
 5190 1a80 ECD0     		beq	.L185
1557:main.c        ****         {
1558:main.c        ****             ;
1559:main.c        ****         }
1560:main.c        ****         testpin6_Write(1);
 5191              		.loc 1 1560 0 is_stmt 1
 5192 1a82 0120     		movs	r0, #1
 5193 1a84 FFF7FEFF 		bl	testpin6_Write
1561:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5194              		.loc 1 1561 0
 5195 1a88 6A4B     		ldr	r3, .L245+36
 5196 1a8a 1B78     		ldrb	r3, [r3]
 5197 1a8c DBB2     		uxtb	r3, r3
 5198 1a8e 012B     		cmp	r3, #1
 5199 1a90 56D1     		bne	.L186
1562:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 121


1563:main.c        ****             if (sendMessageEnd) //send end message
 5200              		.loc 1 1563 0
 5201 1a92 694B     		ldr	r3, .L245+40
 5202 1a94 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5203 1a96 002B     		cmp	r3, #0
 5204 1a98 1DD0     		beq	.L187
1564:main.c        ****             {
1565:main.c        ****                 myArray[0] = 253;
 5205              		.loc 1 1565 0
 5206 1a9a 684B     		ldr	r3, .L245+44
 5207 1a9c FD22     		movs	r2, #253
 5208 1a9e 1A70     		strb	r2, [r3]
1566:main.c        ****                 myArray[1] = presetNumberToWrite;
 5209              		.loc 1 1566 0
 5210 1aa0 674B     		ldr	r3, .L245+48
 5211 1aa2 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5212 1aa4 654B     		ldr	r3, .L245+44
 5213 1aa6 5A70     		strb	r2, [r3, #1]
1567:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5214              		.loc 1 1567 0
 5215 1aa8 654B     		ldr	r3, .L245+48
 5216 1aaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5217 1aac 1A46     		mov	r2, r3
 5218 1aae 654B     		ldr	r3, .L245+52
 5219 1ab0 1A60     		str	r2, [r3]
1568:main.c        ****                 //display previous preset as loaded
1569:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5220              		.loc 1 1569 0
 5221 1ab2 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1570:main.c        ****                 //OLED_invert(0);
1571:main.c        ****                 sendMessageEnd = 0;
 5222              		.loc 1 1571 0
 5223 1ab6 604B     		ldr	r3, .L245+40
 5224 1ab8 0022     		movs	r2, #0
 5225 1aba 1A70     		strb	r2, [r3]
1572:main.c        ****                 sendingMessage = 0;
 5226              		.loc 1 1572 0
 5227 1abc 5D4B     		ldr	r3, .L245+36
 5228 1abe 0022     		movs	r2, #0
 5229 1ac0 1A70     		strb	r2, [r3]
1573:main.c        ****                 messageArraySendCount = 0;
 5230              		.loc 1 1573 0
 5231 1ac2 614B     		ldr	r3, .L245+56
 5232 1ac4 0022     		movs	r2, #0
 5233 1ac6 1A80     		strh	r2, [r3]	@ movhi
1574:main.c        ****                 myArray[30] = 254;
 5234              		.loc 1 1574 0
 5235 1ac8 5C4B     		ldr	r3, .L245+44
 5236 1aca FE22     		movs	r2, #254
 5237 1acc 9A77     		strb	r2, [r3, #30]
1575:main.c        ****                 myArray[31] = 253;
 5238              		.loc 1 1575 0
 5239 1ace 5B4B     		ldr	r3, .L245+44
 5240 1ad0 FD22     		movs	r2, #253
 5241 1ad2 DA77     		strb	r2, [r3, #31]
 5242 1ad4 A0E1     		b	.L193
 5243              	.L187:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 122


1576:main.c        ****                 
1577:main.c        ****             }
1578:main.c        ****             else //send chunks
1579:main.c        ****             {
1580:main.c        ****                 //send the next preset Chunkkkkk
1581:main.c        ****                 myArray[0] = 2;
 5244              		.loc 1 1581 0
 5245 1ad6 594B     		ldr	r3, .L245+44
 5246 1ad8 0222     		movs	r2, #2
 5247 1ada 1A70     		strb	r2, [r3]
1582:main.c        ****                 myArray[1] = presetNumberToWrite;
 5248              		.loc 1 1582 0
 5249 1adc 584B     		ldr	r3, .L245+48
 5250 1ade 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5251 1ae0 564B     		ldr	r3, .L245+44
 5252 1ae2 5A70     		strb	r2, [r3, #1]
 5253              	.LBB28:
1583:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5254              		.loc 1 1583 0
 5255 1ae4 0223     		movs	r3, #2
 5256 1ae6 BB65     		str	r3, [r7, #88]
 5257 1ae8 20E0     		b	.L189
 5258              	.L192:
1584:main.c        ****                 {
1585:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5259              		.loc 1 1585 0
 5260 1aea 574B     		ldr	r3, .L245+56
 5261 1aec 1A88     		ldrh	r2, [r3]
 5262 1aee 574B     		ldr	r3, .L245+60
 5263 1af0 1B88     		ldrh	r3, [r3]
 5264 1af2 9A42     		cmp	r2, r3
 5265 1af4 0FD2     		bcs	.L190
1586:main.c        ****                     {
1587:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5266              		.loc 1 1587 0
 5267 1af6 544B     		ldr	r3, .L245+56
 5268 1af8 1B88     		ldrh	r3, [r3]
 5269 1afa 5A1C     		adds	r2, r3, #1
 5270 1afc 91B2     		uxth	r1, r2
 5271 1afe 524A     		ldr	r2, .L245+56
 5272 1b00 1180     		strh	r1, [r2]	@ movhi
 5273 1b02 1A46     		mov	r2, r3
 5274 1b04 524B     		ldr	r3, .L245+64
 5275 1b06 9B5C     		ldrb	r3, [r3, r2]
 5276 1b08 D9B2     		uxtb	r1, r3
 5277 1b0a 4C4A     		ldr	r2, .L245+44
 5278 1b0c BB6D     		ldr	r3, [r7, #88]
 5279 1b0e 1344     		add	r3, r3, r2
 5280 1b10 0A46     		mov	r2, r1
 5281 1b12 1A70     		strb	r2, [r3]
 5282 1b14 07E0     		b	.L191
 5283              	.L190:
1588:main.c        ****                     }
1589:main.c        ****                     else
1590:main.c        ****                     {
1591:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5284              		.loc 1 1591 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 123


 5285 1b16 494A     		ldr	r2, .L245+44
 5286 1b18 BB6D     		ldr	r3, [r7, #88]
 5287 1b1a 1344     		add	r3, r3, r2
 5288 1b1c EE22     		movs	r2, #238
 5289 1b1e 1A70     		strb	r2, [r3]
1592:main.c        ****                         sendMessageEnd = 1;
 5290              		.loc 1 1592 0
 5291 1b20 454B     		ldr	r3, .L245+40
 5292 1b22 0122     		movs	r2, #1
 5293 1b24 1A70     		strb	r2, [r3]
 5294              	.L191:
1583:main.c        ****                 {
 5295              		.loc 1 1583 0 discriminator 2
 5296 1b26 BB6D     		ldr	r3, [r7, #88]
 5297 1b28 0133     		adds	r3, r3, #1
 5298 1b2a BB65     		str	r3, [r7, #88]
 5299              	.L189:
1583:main.c        ****                 {
 5300              		.loc 1 1583 0 is_stmt 0 discriminator 1
 5301 1b2c BB6D     		ldr	r3, [r7, #88]
 5302 1b2e 1D2B     		cmp	r3, #29
 5303 1b30 DBD9     		bls	.L192
 5304              	.LBE28:
1593:main.c        ****                     }
1594:main.c        ****                 }
1595:main.c        ****                 myArray[30] = 254;
 5305              		.loc 1 1595 0 is_stmt 1
 5306 1b32 424B     		ldr	r3, .L245+44
 5307 1b34 FE22     		movs	r2, #254
 5308 1b36 9A77     		strb	r2, [r3, #30]
1596:main.c        ****                 myArray[31] = 253;
 5309              		.loc 1 1596 0
 5310 1b38 404B     		ldr	r3, .L245+44
 5311 1b3a FD22     		movs	r2, #253
 5312 1b3c DA77     		strb	r2, [r3, #31]
 5313 1b3e 6BE1     		b	.L193
 5314              	.L186:
1597:main.c        ****             }    
1598:main.c        ****         }
1599:main.c        ****         
1600:main.c        ****         else if (sendSingleParamUpdate)
 5315              		.loc 1 1600 0
 5316 1b40 444B     		ldr	r3, .L245+68
 5317 1b42 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5318 1b44 002B     		cmp	r3, #0
 5319 1b46 1CD0     		beq	.L194
1601:main.c        ****         {
1602:main.c        ****             myArray[0] = 6;
 5320              		.loc 1 1602 0
 5321 1b48 3C4B     		ldr	r3, .L245+44
 5322 1b4a 0622     		movs	r2, #6
 5323 1b4c 1A70     		strb	r2, [r3]
1603:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5324              		.loc 1 1603 0
 5325 1b4e 424B     		ldr	r3, .L245+72
 5326 1b50 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5327 1b52 3A4B     		ldr	r3, .L245+44
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 124


 5328 1b54 5A70     		strb	r2, [r3, #1]
1604:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5329              		.loc 1 1604 0
 5330 1b56 414B     		ldr	r3, .L245+76
 5331 1b58 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5332 1b5a 384B     		ldr	r3, .L245+44
 5333 1b5c 9A70     		strb	r2, [r3, #2]
1605:main.c        ****             myArray[3] = singleParamValueHigh;
 5334              		.loc 1 1605 0
 5335 1b5e 404B     		ldr	r3, .L245+80
 5336 1b60 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5337 1b62 364B     		ldr	r3, .L245+44
 5338 1b64 DA70     		strb	r2, [r3, #3]
1606:main.c        ****             myArray[4] = singleParamValueLow;
 5339              		.loc 1 1606 0
 5340 1b66 3F4B     		ldr	r3, .L245+84
 5341 1b68 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5342 1b6a 344B     		ldr	r3, .L245+44
 5343 1b6c 1A71     		strb	r2, [r3, #4]
1607:main.c        ****             myArray[30] = 254;
 5344              		.loc 1 1607 0
 5345 1b6e 334B     		ldr	r3, .L245+44
 5346 1b70 FE22     		movs	r2, #254
 5347 1b72 9A77     		strb	r2, [r3, #30]
1608:main.c        ****             myArray[31] = 253;
 5348              		.loc 1 1608 0
 5349 1b74 314B     		ldr	r3, .L245+44
 5350 1b76 FD22     		movs	r2, #253
 5351 1b78 DA77     		strb	r2, [r3, #31]
1609:main.c        ****             sendSingleParamUpdate = 0;
 5352              		.loc 1 1609 0
 5353 1b7a 364B     		ldr	r3, .L245+68
 5354 1b7c 0022     		movs	r2, #0
 5355 1b7e 1A70     		strb	r2, [r3]
 5356 1b80 4AE1     		b	.L193
 5357              	.L194:
1610:main.c        ****         }
1611:main.c        ****         
1612:main.c        ****         else if (sendMappingChangeUpdate)
 5358              		.loc 1 1612 0
 5359 1b82 394B     		ldr	r3, .L245+88
 5360 1b84 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5361 1b86 002B     		cmp	r3, #0
 5362 1b88 24D0     		beq	.L195
1613:main.c        ****         {
1614:main.c        ****             myArray[0] = 7;
 5363              		.loc 1 1614 0
 5364 1b8a 2C4B     		ldr	r3, .L245+44
 5365 1b8c 0722     		movs	r2, #7
 5366 1b8e 1A70     		strb	r2, [r3]
1615:main.c        ****             myArray[1] = mappingArray[0];
 5367              		.loc 1 1615 0
 5368 1b90 364B     		ldr	r3, .L245+92
 5369 1b92 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5370 1b94 294B     		ldr	r3, .L245+44
 5371 1b96 5A70     		strb	r2, [r3, #1]
1616:main.c        ****             myArray[2] =  mappingArray[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 125


 5372              		.loc 1 1616 0
 5373 1b98 344B     		ldr	r3, .L245+92
 5374 1b9a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5375 1b9c 274B     		ldr	r3, .L245+44
 5376 1b9e 9A70     		strb	r2, [r3, #2]
1617:main.c        ****             myArray[3] =  mappingArray[2];
 5377              		.loc 1 1617 0
 5378 1ba0 324B     		ldr	r3, .L245+92
 5379 1ba2 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5380 1ba4 254B     		ldr	r3, .L245+44
 5381 1ba6 DA70     		strb	r2, [r3, #3]
1618:main.c        ****             myArray[4] =  mappingArray[3];
 5382              		.loc 1 1618 0
 5383 1ba8 304B     		ldr	r3, .L245+92
 5384 1baa DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5385 1bac 234B     		ldr	r3, .L245+44
 5386 1bae 1A71     		strb	r2, [r3, #4]
1619:main.c        ****              myArray[5] =  mappingArray[4];
 5387              		.loc 1 1619 0
 5388 1bb0 2E4B     		ldr	r3, .L245+92
 5389 1bb2 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5390 1bb4 214B     		ldr	r3, .L245+44
 5391 1bb6 5A71     		strb	r2, [r3, #5]
1620:main.c        ****              myArray[6] =  mappingArray[5];
 5392              		.loc 1 1620 0
 5393 1bb8 2C4B     		ldr	r3, .L245+92
 5394 1bba 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5395 1bbc 1F4B     		ldr	r3, .L245+44
 5396 1bbe 9A71     		strb	r2, [r3, #6]
1621:main.c        ****             myArray[30] = 254;
 5397              		.loc 1 1621 0
 5398 1bc0 1E4B     		ldr	r3, .L245+44
 5399 1bc2 FE22     		movs	r2, #254
 5400 1bc4 9A77     		strb	r2, [r3, #30]
1622:main.c        ****             myArray[31] = 253;
 5401              		.loc 1 1622 0
 5402 1bc6 1D4B     		ldr	r3, .L245+44
 5403 1bc8 FD22     		movs	r2, #253
 5404 1bca DA77     		strb	r2, [r3, #31]
1623:main.c        ****             sendMappingChangeUpdate = 0;
 5405              		.loc 1 1623 0
 5406 1bcc 264B     		ldr	r3, .L245+88
 5407 1bce 0022     		movs	r2, #0
 5408 1bd0 1A70     		strb	r2, [r3]
 5409 1bd2 21E1     		b	.L193
 5410              	.L195:
1624:main.c        ****         }
1625:main.c        ****         
1626:main.c        ****         
1627:main.c        ****         else if (sendKnobs)
 5411              		.loc 1 1627 0
 5412 1bd4 264B     		ldr	r3, .L245+96
 5413 1bd6 1B78     		ldrb	r3, [r3]
 5414 1bd8 DBB2     		uxtb	r3, r3
 5415 1bda 002B     		cmp	r3, #0
 5416 1bdc 00F0AD80 		beq	.L196
1628:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 126


1629:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 5417              		.loc 1 1629 0
 5418 1be0 164B     		ldr	r3, .L245+44
 5419 1be2 0322     		movs	r2, #3
 5420 1be4 1A70     		strb	r2, [r3]
 5421              	.LBB29:
1630:main.c        ****             for (int i = 0; i < 8; i++)
 5422              		.loc 1 1630 0
 5423 1be6 0023     		movs	r3, #0
 5424 1be8 7B65     		str	r3, [r7, #84]
 5425 1bea 0AE0     		b	.L197
 5426              	.L198:
1631:main.c        ****             {
1632:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 5427              		.loc 1 1632 0 discriminator 3
 5428 1bec 7B6D     		ldr	r3, [r7, #84]
 5429 1bee 0133     		adds	r3, r3, #1
 5430 1bf0 2049     		ldr	r1, .L245+100
 5431 1bf2 7A6D     		ldr	r2, [r7, #84]
 5432 1bf4 0A44     		add	r2, r2, r1
 5433 1bf6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5434 1bf8 104A     		ldr	r2, .L245+44
 5435 1bfa D154     		strb	r1, [r2, r3]
1630:main.c        ****             for (int i = 0; i < 8; i++)
 5436              		.loc 1 1630 0 discriminator 3
 5437 1bfc 7B6D     		ldr	r3, [r7, #84]
 5438 1bfe 0133     		adds	r3, r3, #1
 5439 1c00 7B65     		str	r3, [r7, #84]
 5440              	.L197:
1630:main.c        ****             for (int i = 0; i < 8; i++)
 5441              		.loc 1 1630 0 is_stmt 0 discriminator 1
 5442 1c02 7B6D     		ldr	r3, [r7, #84]
 5443 1c04 072B     		cmp	r3, #7
 5444 1c06 F1DD     		ble	.L198
 5445              	.LBE29:
 5446              	.LBB30:
1633:main.c        ****             }
1634:main.c        ****             for (int i = 0; i < 4; i++)
 5447              		.loc 1 1634 0 is_stmt 1
 5448 1c08 0023     		movs	r3, #0
 5449 1c0a 3B65     		str	r3, [r7, #80]
 5450 1c0c 3FE0     		b	.L199
 5451              	.L246:
 5452 1c0e 00BF     		.align	2
 5453              	.L245:
 5454 1c10 00000000 		.word	prevStringPitchBend
 5455 1c14 00000000 		.word	stringMIDI
 5456 1c18 00000000 		.word	numStrings
 5457 1c1c 00000000 		.word	encoderNum
 5458 1c20 00000000 		.word	encoderVal
 5459 1c24 00000000 		.word	USB_check_flag
 5460 1c28 00000000 		.word	USB_active
 5461 1c2c 00000000 		.word	midiSent
 5462 1c30 00000000 		.word	midiOverflow
 5463 1c34 00000000 		.word	sendingMessage
 5464 1c38 00000000 		.word	sendMessageEnd
 5465 1c3c 00000000 		.word	myArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 127


 5466 1c40 00000000 		.word	presetNumberToWrite
 5467 1c44 00000000 		.word	currentPresetSelection
 5468 1c48 00000000 		.word	messageArraySendCount
 5469 1c4c 00000000 		.word	messageArraySize
 5470 1c50 00000000 		.word	presetArray
 5471 1c54 00000000 		.word	sendSingleParamUpdate
 5472 1c58 00000000 		.word	singleParamToUpdateHigh
 5473 1c5c 00000000 		.word	singleParamToUpdateLow
 5474 1c60 00000000 		.word	singleParamValueHigh
 5475 1c64 00000000 		.word	singleParamValueLow
 5476 1c68 00000000 		.word	sendMappingChangeUpdate
 5477 1c6c 00000000 		.word	mappingArray
 5478 1c70 00000000 		.word	sendKnobs
 5479 1c74 00000000 		.word	macroKnobValues
 5480              	.L200:
1635:main.c        ****             {
1636:main.c        ****                 myArray[i + 9] = knobs[i];
 5481              		.loc 1 1636 0 discriminator 3
 5482 1c78 3B6D     		ldr	r3, [r7, #80]
 5483 1c7a 0933     		adds	r3, r3, #9
 5484 1c7c 9849     		ldr	r1, .L247
 5485 1c7e 3A6D     		ldr	r2, [r7, #80]
 5486 1c80 0A44     		add	r2, r2, r1
 5487 1c82 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5488 1c84 974A     		ldr	r2, .L247+4
 5489 1c86 D154     		strb	r1, [r2, r3]
1634:main.c        ****             {
 5490              		.loc 1 1634 0 discriminator 3
 5491 1c88 3B6D     		ldr	r3, [r7, #80]
 5492 1c8a 0133     		adds	r3, r3, #1
 5493 1c8c 3B65     		str	r3, [r7, #80]
 5494              	.L199:
1634:main.c        ****             {
 5495              		.loc 1 1634 0 is_stmt 0 discriminator 1
 5496 1c8e 3B6D     		ldr	r3, [r7, #80]
 5497 1c90 032B     		cmp	r3, #3
 5498 1c92 F1DD     		ble	.L200
 5499              	.LBE30:
 5500              	.LBB31:
1637:main.c        ****             }
1638:main.c        ****             for (int i = 0; i < 10; i++)
 5501              		.loc 1 1638 0 is_stmt 1
 5502 1c94 0023     		movs	r3, #0
 5503 1c96 FB64     		str	r3, [r7, #76]
 5504 1c98 0AE0     		b	.L201
 5505              	.L202:
1639:main.c        ****             {
1640:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 5506              		.loc 1 1640 0 discriminator 3
 5507 1c9a FB6C     		ldr	r3, [r7, #76]
 5508 1c9c 0D33     		adds	r3, r3, #13
 5509 1c9e 9249     		ldr	r1, .L247+8
 5510 1ca0 FA6C     		ldr	r2, [r7, #76]
 5511 1ca2 0A44     		add	r2, r2, r1
 5512 1ca4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5513 1ca6 8F4A     		ldr	r2, .L247+4
 5514 1ca8 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 128


1638:main.c        ****             {
 5515              		.loc 1 1638 0 discriminator 3
 5516 1caa FB6C     		ldr	r3, [r7, #76]
 5517 1cac 0133     		adds	r3, r3, #1
 5518 1cae FB64     		str	r3, [r7, #76]
 5519              	.L201:
1638:main.c        ****             {
 5520              		.loc 1 1638 0 is_stmt 0 discriminator 1
 5521 1cb0 FB6C     		ldr	r3, [r7, #76]
 5522 1cb2 092B     		cmp	r3, #9
 5523 1cb4 F1DD     		ble	.L202
 5524              	.LBE31:
1641:main.c        ****             }
1642:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5525              		.loc 1 1642 0 is_stmt 1
 5526 1cb6 8D4B     		ldr	r3, .L247+12
 5527 1cb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5528 1cba 1B01     		lsls	r3, r3, #4
 5529 1cbc 5AB2     		sxtb	r2, r3
 5530 1cbe 8C4B     		ldr	r3, .L247+16
 5531 1cc0 1B68     		ldr	r3, [r3]
 5532 1cc2 5BB2     		sxtb	r3, r3
 5533 1cc4 1343     		orrs	r3, r3, r2
 5534 1cc6 5AB2     		sxtb	r2, r3
 5535 1cc8 8A4B     		ldr	r3, .L247+20
 5536 1cca 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5537 1ccc 5B01     		lsls	r3, r3, #5
 5538 1cce 5BB2     		sxtb	r3, r3
 5539 1cd0 1343     		orrs	r3, r3, r2
 5540 1cd2 5AB2     		sxtb	r2, r3
 5541 1cd4 884B     		ldr	r3, .L247+24
 5542 1cd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5543 1cd8 9B01     		lsls	r3, r3, #6
 5544 1cda 5BB2     		sxtb	r3, r3
 5545 1cdc 1343     		orrs	r3, r3, r2
 5546 1cde 5BB2     		sxtb	r3, r3
 5547 1ce0 DAB2     		uxtb	r2, r3
 5548 1ce2 804B     		ldr	r3, .L247+4
 5549 1ce4 1A76     		strb	r2, [r3, #24]
1643:main.c        ****             myArray[25] = patchNum;
 5550              		.loc 1 1643 0
 5551 1ce6 854B     		ldr	r3, .L247+28
 5552 1ce8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5553 1cea 7E4B     		ldr	r3, .L247+4
 5554 1cec 5A76     		strb	r2, [r3, #25]
1644:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5555              		.loc 1 1644 0
 5556 1cee 844B     		ldr	r3, .L247+32
 5557 1cf0 B3F90030 		ldrsh	r3, [r3]
 5558 1cf4 1B12     		asrs	r3, r3, #8
 5559 1cf6 1BB2     		sxth	r3, r3
 5560 1cf8 DAB2     		uxtb	r2, r3
 5561 1cfa 7A4B     		ldr	r3, .L247+4
 5562 1cfc 9A76     		strb	r2, [r3, #26]
1645:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5563              		.loc 1 1645 0
 5564 1cfe 804B     		ldr	r3, .L247+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 129


 5565 1d00 B3F90030 		ldrsh	r3, [r3]
 5566 1d04 DAB2     		uxtb	r2, r3
 5567 1d06 774B     		ldr	r3, .L247+4
 5568 1d08 DA76     		strb	r2, [r3, #27]
1646:main.c        ****             myArray[28] = bar[1] >> 8;
 5569              		.loc 1 1646 0
 5570 1d0a 7E4B     		ldr	r3, .L247+36
 5571 1d0c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5572 1d0e 9BB2     		uxth	r3, r3
 5573 1d10 1B0A     		lsrs	r3, r3, #8
 5574 1d12 9BB2     		uxth	r3, r3
 5575 1d14 DAB2     		uxtb	r2, r3
 5576 1d16 734B     		ldr	r3, .L247+4
 5577 1d18 1A77     		strb	r2, [r3, #28]
1647:main.c        ****             myArray[29] = bar[1] & 0xff;
 5578              		.loc 1 1647 0
 5579 1d1a 7A4B     		ldr	r3, .L247+36
 5580 1d1c 5B88     		ldrh	r3, [r3, #2]	@ movhi
 5581 1d1e 9BB2     		uxth	r3, r3
 5582 1d20 DAB2     		uxtb	r2, r3
 5583 1d22 704B     		ldr	r3, .L247+4
 5584 1d24 5A77     		strb	r2, [r3, #29]
1648:main.c        ****             myArray[30] = 254;
 5585              		.loc 1 1648 0
 5586 1d26 6F4B     		ldr	r3, .L247+4
 5587 1d28 FE22     		movs	r2, #254
 5588 1d2a 9A77     		strb	r2, [r3, #30]
1649:main.c        ****             myArray[31] = 253;
 5589              		.loc 1 1649 0
 5590 1d2c 6D4B     		ldr	r3, .L247+4
 5591 1d2e FD22     		movs	r2, #253
 5592 1d30 DA77     		strb	r2, [r3, #31]
1650:main.c        ****             
1651:main.c        ****             
1652:main.c        ****             sendKnobs = 0;
 5593              		.loc 1 1652 0
 5594 1d32 754B     		ldr	r3, .L247+40
 5595 1d34 0022     		movs	r2, #0
 5596 1d36 1A70     		strb	r2, [r3]
 5597 1d38 6EE0     		b	.L193
 5598              	.L196:
1653:main.c        ****         }
1654:main.c        ****         else
1655:main.c        ****         {
1656:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 5599              		.loc 1 1656 0
 5600 1d3a 6A4B     		ldr	r3, .L247+4
 5601 1d3c 0122     		movs	r2, #1
 5602 1d3e 1A70     		strb	r2, [r3]
 5603              	.LBB32:
1657:main.c        ****             for (int i = 0; i < 12; i++)
 5604              		.loc 1 1657 0
 5605 1d40 0023     		movs	r3, #0
 5606 1d42 BB64     		str	r3, [r7, #72]
 5607 1d44 24E0     		b	.L203
 5608              	.L204:
 5609              	.LBB33:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 130


1658:main.c        ****             {
1659:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 5610              		.loc 1 1659 0 discriminator 3
 5611 1d46 714A     		ldr	r2, .L247+44
 5612 1d48 BB6C     		ldr	r3, [r7, #72]
 5613 1d4a 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5614 1d4e 4FF08841 		mov	r1, #1140850688
 5615 1d52 1846     		mov	r0, r3
 5616 1d54 FFF7FEFF 		bl	__aeabi_fmul
 5617 1d58 0346     		mov	r3, r0
 5618 1d5a 1846     		mov	r0, r3
 5619 1d5c FFF7FEFF 		bl	roundf
 5620 1d60 0346     		mov	r3, r0
 5621 1d62 1846     		mov	r0, r3
 5622 1d64 FFF7FEFF 		bl	__aeabi_f2iz
 5623 1d68 0346     		mov	r3, r0
 5624 1d6a 3B61     		str	r3, [r7, #16]
1660:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 5625              		.loc 1 1660 0 discriminator 3
 5626 1d6c BB6C     		ldr	r3, [r7, #72]
 5627 1d6e 5B00     		lsls	r3, r3, #1
 5628 1d70 0133     		adds	r3, r3, #1
 5629 1d72 3A69     		ldr	r2, [r7, #16]
 5630 1d74 1212     		asrs	r2, r2, #8
 5631 1d76 D1B2     		uxtb	r1, r2
 5632 1d78 5A4A     		ldr	r2, .L247+4
 5633 1d7a D154     		strb	r1, [r2, r3]
1661:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 5634              		.loc 1 1661 0 discriminator 3
 5635 1d7c BB6C     		ldr	r3, [r7, #72]
 5636 1d7e 0133     		adds	r3, r3, #1
 5637 1d80 5B00     		lsls	r3, r3, #1
 5638 1d82 3A69     		ldr	r2, [r7, #16]
 5639 1d84 D1B2     		uxtb	r1, r2
 5640 1d86 574A     		ldr	r2, .L247+4
 5641 1d88 D154     		strb	r1, [r2, r3]
 5642              	.LBE33:
1657:main.c        ****             {
 5643              		.loc 1 1657 0 discriminator 3
 5644 1d8a BB6C     		ldr	r3, [r7, #72]
 5645 1d8c 0133     		adds	r3, r3, #1
 5646 1d8e BB64     		str	r3, [r7, #72]
 5647              	.L203:
1657:main.c        ****             {
 5648              		.loc 1 1657 0 is_stmt 0 discriminator 1
 5649 1d90 BB6C     		ldr	r3, [r7, #72]
 5650 1d92 0B2B     		cmp	r3, #11
 5651 1d94 D7DD     		ble	.L204
 5652              	.LBE32:
1662:main.c        ****             }
1663:main.c        ****             
1664:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 5653              		.loc 1 1664 0 is_stmt 1
 5654 1d96 554B     		ldr	r3, .L247+12
 5655 1d98 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5656 1d9a 1B01     		lsls	r3, r3, #4
 5657 1d9c 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 131


 5658 1d9e 544B     		ldr	r3, .L247+16
 5659 1da0 1B68     		ldr	r3, [r3]
 5660 1da2 5BB2     		sxtb	r3, r3
 5661 1da4 1343     		orrs	r3, r3, r2
 5662 1da6 5AB2     		sxtb	r2, r3
 5663 1da8 524B     		ldr	r3, .L247+20
 5664 1daa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5665 1dac 5B01     		lsls	r3, r3, #5
 5666 1dae 5BB2     		sxtb	r3, r3
 5667 1db0 1343     		orrs	r3, r3, r2
 5668 1db2 5AB2     		sxtb	r2, r3
 5669 1db4 504B     		ldr	r3, .L247+24
 5670 1db6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5671 1db8 9B01     		lsls	r3, r3, #6
 5672 1dba 5BB2     		sxtb	r3, r3
 5673 1dbc 1343     		orrs	r3, r3, r2
 5674 1dbe 5BB2     		sxtb	r3, r3
 5675 1dc0 DAB2     		uxtb	r2, r3
 5676 1dc2 484B     		ldr	r3, .L247+4
 5677 1dc4 1A76     		strb	r2, [r3, #24]
1665:main.c        ****             myArray[25] = patchNum;
 5678              		.loc 1 1665 0
 5679 1dc6 4D4B     		ldr	r3, .L247+28
 5680 1dc8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5681 1dca 464B     		ldr	r3, .L247+4
 5682 1dcc 5A76     		strb	r2, [r3, #25]
1666:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 5683              		.loc 1 1666 0
 5684 1dce 4C4B     		ldr	r3, .L247+32
 5685 1dd0 B3F90030 		ldrsh	r3, [r3]
 5686 1dd4 1B12     		asrs	r3, r3, #8
 5687 1dd6 1BB2     		sxth	r3, r3
 5688 1dd8 DAB2     		uxtb	r2, r3
 5689 1dda 424B     		ldr	r3, .L247+4
 5690 1ddc 9A76     		strb	r2, [r3, #26]
1667:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 5691              		.loc 1 1667 0
 5692 1dde 484B     		ldr	r3, .L247+32
 5693 1de0 B3F90030 		ldrsh	r3, [r3]
 5694 1de4 DAB2     		uxtb	r2, r3
 5695 1de6 3F4B     		ldr	r3, .L247+4
 5696 1de8 DA76     		strb	r2, [r3, #27]
1668:main.c        ****             myArray[28] = bar[0] >> 8;
 5697              		.loc 1 1668 0
 5698 1dea 464B     		ldr	r3, .L247+36
 5699 1dec 1B88     		ldrh	r3, [r3]	@ movhi
 5700 1dee 9BB2     		uxth	r3, r3
 5701 1df0 1B0A     		lsrs	r3, r3, #8
 5702 1df2 9BB2     		uxth	r3, r3
 5703 1df4 DAB2     		uxtb	r2, r3
 5704 1df6 3B4B     		ldr	r3, .L247+4
 5705 1df8 1A77     		strb	r2, [r3, #28]
1669:main.c        ****             myArray[29] = bar[0] & 0xff;
 5706              		.loc 1 1669 0
 5707 1dfa 424B     		ldr	r3, .L247+36
 5708 1dfc 1B88     		ldrh	r3, [r3]	@ movhi
 5709 1dfe 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 132


 5710 1e00 DAB2     		uxtb	r2, r3
 5711 1e02 384B     		ldr	r3, .L247+4
 5712 1e04 5A77     		strb	r2, [r3, #29]
1670:main.c        ****             myArray[30] = 254;
 5713              		.loc 1 1670 0
 5714 1e06 374B     		ldr	r3, .L247+4
 5715 1e08 FE22     		movs	r2, #254
 5716 1e0a 9A77     		strb	r2, [r3, #30]
1671:main.c        ****             myArray[31] = 253;
 5717              		.loc 1 1671 0
 5718 1e0c 354B     		ldr	r3, .L247+4
 5719 1e0e FD22     		movs	r2, #253
 5720 1e10 DA77     		strb	r2, [r3, #31]
1672:main.c        ****             
1673:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 5721              		.loc 1 1673 0
 5722 1e12 3D4B     		ldr	r3, .L247+40
 5723 1e14 0122     		movs	r2, #1
 5724 1e16 1A70     		strb	r2, [r3]
 5725              	.L193:
1674:main.c        ****             /*
1675:main.c        ****             for (int i = 0; i < 16; i++)
1676:main.c        ****             {
1677:main.c        ****                 myArray[i+56] = encoderVal[i];
1678:main.c        ****             }
1679:main.c        ****             */
1680:main.c        ****         }
1681:main.c        **** 
1682:main.c        ****         
1683:main.c        **** 
1684:main.c        **** /*
1685:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1686:main.c        ****         {
1687:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1688:main.c        ****         }
1689:main.c        ****     */    
1690:main.c        ****         
1691:main.c        **** 
1692:main.c        ****        
1693:main.c        ****         
1694:main.c        ****         
1695:main.c        ****         //parse input from synth board (names)
1696:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5726              		.loc 1 1696 0
 5727 1e18 3D4B     		ldr	r3, .L247+48
 5728 1e1a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5729 1e1c FD2B     		cmp	r3, #253
 5730 1e1e 7FD1     		bne	.L205
 5731              		.loc 1 1696 0 is_stmt 0 discriminator 1
 5732 1e20 3B4B     		ldr	r3, .L247+48
 5733 1e22 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5734 1e24 FE2B     		cmp	r3, #254
 5735 1e26 7BD1     		bne	.L205
 5736              	.LBB34:
1697:main.c        ****         {
1698:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5737              		.loc 1 1698 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 133


 5738 1e28 394B     		ldr	r3, .L247+48
 5739 1e2a 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5740 1e2c FB60     		str	r3, [r7, #12]
1699:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5741              		.loc 1 1699 0
 5742 1e2e 384B     		ldr	r3, .L247+48
 5743 1e30 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5744 1e32 BB60     		str	r3, [r7, #8]
1700:main.c        ****             int bufferPointer = 2;
 5745              		.loc 1 1700 0
 5746 1e34 0223     		movs	r3, #2
 5747 1e36 7B64     		str	r3, [r7, #68]
 5748              	.LBB35:
1701:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5749              		.loc 1 1701 0
 5750 1e38 0023     		movs	r3, #0
 5751 1e3a 3B64     		str	r3, [r7, #64]
 5752 1e3c 14E0     		b	.L206
 5753              	.L207:
1702:main.c        ****             {
1703:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5754              		.loc 1 1703 0 discriminator 3
 5755 1e3e 344A     		ldr	r2, .L247+48
 5756 1e40 7B6C     		ldr	r3, [r7, #68]
 5757 1e42 1344     		add	r3, r3, r2
 5758 1e44 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5759 1e46 3349     		ldr	r1, .L247+52
 5760 1e48 FA68     		ldr	r2, [r7, #12]
 5761 1e4a 1346     		mov	r3, r2
 5762 1e4c DB00     		lsls	r3, r3, #3
 5763 1e4e 9B1A     		subs	r3, r3, r2
 5764 1e50 5B00     		lsls	r3, r3, #1
 5765 1e52 CA18     		adds	r2, r1, r3
 5766 1e54 3B6C     		ldr	r3, [r7, #64]
 5767 1e56 1344     		add	r3, r3, r2
 5768 1e58 0246     		mov	r2, r0
 5769 1e5a 1A70     		strb	r2, [r3]
1704:main.c        ****                 bufferPointer++;
 5770              		.loc 1 1704 0 discriminator 3
 5771 1e5c 7B6C     		ldr	r3, [r7, #68]
 5772 1e5e 0133     		adds	r3, r3, #1
 5773 1e60 7B64     		str	r3, [r7, #68]
1701:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5774              		.loc 1 1701 0 discriminator 3
 5775 1e62 3B6C     		ldr	r3, [r7, #64]
 5776 1e64 0133     		adds	r3, r3, #1
 5777 1e66 3B64     		str	r3, [r7, #64]
 5778              	.L206:
1701:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5779              		.loc 1 1701 0 is_stmt 0 discriminator 1
 5780 1e68 3B6C     		ldr	r3, [r7, #64]
 5781 1e6a 0D2B     		cmp	r3, #13
 5782 1e6c E7DD     		ble	.L207
 5783              	.LBE35:
1705:main.c        ****             }
1706:main.c        ****             bufferPointer = 17;
 5784              		.loc 1 1706 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 134


 5785 1e6e 1123     		movs	r3, #17
 5786 1e70 7B64     		str	r3, [r7, #68]
 5787              	.LBB36:
1707:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5788              		.loc 1 1707 0
 5789 1e72 0023     		movs	r3, #0
 5790 1e74 FB63     		str	r3, [r7, #60]
 5791 1e76 1BE0     		b	.L208
 5792              	.L209:
1708:main.c        ****             {
1709:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5793              		.loc 1 1709 0 discriminator 3
 5794 1e78 254A     		ldr	r2, .L247+48
 5795 1e7a 7B6C     		ldr	r3, [r7, #68]
 5796 1e7c 1344     		add	r3, r3, r2
 5797 1e7e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5798 1e80 2548     		ldr	r0, .L247+56
 5799 1e82 BB68     		ldr	r3, [r7, #8]
 5800 1e84 F968     		ldr	r1, [r7, #12]
 5801 1e86 1A46     		mov	r2, r3
 5802 1e88 D200     		lsls	r2, r2, #3
 5803 1e8a D21A     		subs	r2, r2, r3
 5804 1e8c 5300     		lsls	r3, r2, #1
 5805 1e8e 1A46     		mov	r2, r3
 5806 1e90 0B46     		mov	r3, r1
 5807 1e92 DB00     		lsls	r3, r3, #3
 5808 1e94 5B1A     		subs	r3, r3, r1
 5809 1e96 1B01     		lsls	r3, r3, #4
 5810 1e98 1344     		add	r3, r3, r2
 5811 1e9a C218     		adds	r2, r0, r3
 5812 1e9c FB6B     		ldr	r3, [r7, #60]
 5813 1e9e 1344     		add	r3, r3, r2
 5814 1ea0 2246     		mov	r2, r4
 5815 1ea2 1A70     		strb	r2, [r3]
1710:main.c        ****                 bufferPointer++;
 5816              		.loc 1 1710 0 discriminator 3
 5817 1ea4 7B6C     		ldr	r3, [r7, #68]
 5818 1ea6 0133     		adds	r3, r3, #1
 5819 1ea8 7B64     		str	r3, [r7, #68]
1707:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5820              		.loc 1 1707 0 discriminator 3
 5821 1eaa FB6B     		ldr	r3, [r7, #60]
 5822 1eac 0133     		adds	r3, r3, #1
 5823 1eae FB63     		str	r3, [r7, #60]
 5824              	.L208:
1707:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5825              		.loc 1 1707 0 is_stmt 0 discriminator 1
 5826 1eb0 FB6B     		ldr	r3, [r7, #60]
 5827 1eb2 0D2B     		cmp	r3, #13
 5828 1eb4 E0DD     		ble	.L209
 5829              	.LBE36:
1711:main.c        ****             }
1712:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5830              		.loc 1 1712 0 is_stmt 1
 5831 1eb6 114B     		ldr	r3, .L247+28
 5832 1eb8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5833 1eba 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 135


 5834 1ebc FB68     		ldr	r3, [r7, #12]
 5835 1ebe 9A42     		cmp	r2, r3
 5836 1ec0 40F0B080 		bne	.L222
 5837              		.loc 1 1712 0 is_stmt 0 discriminator 1
 5838 1ec4 BB68     		ldr	r3, [r7, #8]
 5839 1ec6 072B     		cmp	r3, #7
 5840 1ec8 40F0AC80 		bne	.L222
 5841              		.loc 1 1712 0 discriminator 2
 5842 1ecc 134A     		ldr	r2, .L247+60
 5843 1ece FB68     		ldr	r3, [r7, #12]
 5844 1ed0 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5845 1ed4 002B     		cmp	r3, #0
 5846 1ed6 40F0A580 		bne	.L222
1713:main.c        ****             {
1714:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5847              		.loc 1 1714 0 is_stmt 1
 5848 1eda FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 5849              	.LBE34:
1697:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5850              		.loc 1 1697 0
 5851 1ede A1E0     		b	.L222
 5852              	.L248:
 5853              		.align	2
 5854              	.L247:
 5855 1ee0 00000000 		.word	knobs
 5856 1ee4 00000000 		.word	myArray
 5857 1ee8 00000000 		.word	pedals8bit
 5858 1eec 00000000 		.word	voice
 5859 1ef0 00000000 		.word	octave
 5860 1ef4 00000000 		.word	dualSlider
 5861 1ef8 00000000 		.word	neck
 5862 1efc 00000000 		.word	patchNum
 5863 1f00 00000000 		.word	processed_volumePedal
 5864 1f04 00000000 		.word	bar
 5865 1f08 00000000 		.word	sendKnobs
 5866 1f0c 00000000 		.word	stringMIDI
 5867 1f10 00000000 		.word	inBuffer
 5868 1f14 00000000 		.word	presetNamesArray
 5869 1f18 00000000 		.word	macroNamesArray
 5870 1f1c 00000000 		.word	presetAlreadyDisplayed
 5871              	.L205:
1715:main.c        ****             }
1716:main.c        ****         }
1717:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 5872              		.loc 1 1717 0
 5873 1f20 4B4B     		ldr	r3, .L249
 5874 1f22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5875 1f24 FC2B     		cmp	r3, #252
 5876 1f26 7ED1     		bne	.L211
 5877              		.loc 1 1717 0 is_stmt 0 discriminator 1
 5878 1f28 494B     		ldr	r3, .L249
 5879 1f2a DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5880 1f2c FE2B     		cmp	r3, #254
 5881 1f2e 7AD1     		bne	.L211
1718:main.c        ****         {
1719:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1720:main.c        ****             SPIM_1_Stop();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 136


 5882              		.loc 1 1720 0 is_stmt 1
 5883 1f30 FFF7FEFF 		bl	SPIM_1_Stop
1721:main.c        ****             myGFX_setFont(0);
 5884              		.loc 1 1721 0
 5885 1f34 0020     		movs	r0, #0
 5886 1f36 FFF7FEFF 		bl	myGFX_setFont
1722:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 5887              		.loc 1 1722 0
 5888 1f3a 0023     		movs	r3, #0
 5889 1f3c 0122     		movs	r2, #1
 5890 1f3e 0B21     		movs	r1, #11
 5891 1f40 4448     		ldr	r0, .L249+4
 5892 1f42 FFF7FEFF 		bl	OLEDwriteString
1723:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 5893              		.loc 1 1723 0
 5894 1f46 0123     		movs	r3, #1
 5895 1f48 0122     		movs	r2, #1
 5896 1f4a 0B21     		movs	r1, #11
 5897 1f4c 4248     		ldr	r0, .L249+8
 5898 1f4e FFF7FEFF 		bl	OLEDwriteString
1724:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 5899              		.loc 1 1724 0
 5900 1f52 0223     		movs	r3, #2
 5901 1f54 0122     		movs	r2, #1
 5902 1f56 0B21     		movs	r1, #11
 5903 1f58 4048     		ldr	r0, .L249+12
 5904 1f5a FFF7FEFF 		bl	OLEDwriteString
1725:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 5905              		.loc 1 1725 0
 5906 1f5e 0323     		movs	r3, #3
 5907 1f60 0122     		movs	r2, #1
 5908 1f62 0B21     		movs	r1, #11
 5909 1f64 3D48     		ldr	r0, .L249+12
 5910 1f66 FFF7FEFF 		bl	OLEDwriteString
1726:main.c        ****             main_counter = 11;
 5911              		.loc 1 1726 0
 5912 1f6a 3D4B     		ldr	r3, .L249+16
 5913 1f6c 0B22     		movs	r2, #11
 5914 1f6e 1A70     		strb	r2, [r3]
1727:main.c        ****                    //set muxes to write to main OLED
1728:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 5915              		.loc 1 1728 0
 5916 1f70 3B4B     		ldr	r3, .L249+16
 5917 1f72 1B78     		ldrb	r3, [r3]
 5918 1f74 DBB2     		uxtb	r3, r3
 5919 1f76 1A46     		mov	r2, r3
 5920 1f78 3A4B     		ldr	r3, .L249+20
 5921 1f7a 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5922 1f7e 3A4B     		ldr	r3, .L249+24
 5923 1f80 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5924 1f82 9A42     		cmp	r2, r3
 5925 1f84 13D0     		beq	.L212
 5926              	.LBB37:
1729:main.c        ****             {
1730:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 5927              		.loc 1 1730 0
 5928 1f86 364B     		ldr	r3, .L249+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 137


 5929 1f88 1B78     		ldrb	r3, [r3]
 5930 1f8a DBB2     		uxtb	r3, r3
 5931 1f8c 1A46     		mov	r2, r3
 5932 1f8e 354B     		ldr	r3, .L249+20
 5933 1f90 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5934 1f94 1A46     		mov	r2, r3
 5935 1f96 0123     		movs	r3, #1
 5936 1f98 9340     		lsls	r3, r3, r2
 5937 1f9a DAB2     		uxtb	r2, r3
 5938 1f9c 334B     		ldr	r3, .L249+28
 5939 1f9e 1A70     		strb	r2, [r3]
1731:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 5940              		.loc 1 1731 0
 5941 1fa0 0022     		movs	r2, #0
 5942 1fa2 0121     		movs	r1, #1
 5943 1fa4 7020     		movs	r0, #112
 5944 1fa6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5945 1faa 0346     		mov	r3, r0
 5946 1fac FB71     		strb	r3, [r7, #7]
 5947              	.L212:
 5948              	.LBE37:
1732:main.c        ****             }
1733:main.c        ****             last_mux = mux_states[main_counter][0];
 5949              		.loc 1 1733 0
 5950 1fae 2C4B     		ldr	r3, .L249+16
 5951 1fb0 1B78     		ldrb	r3, [r3]
 5952 1fb2 DBB2     		uxtb	r3, r3
 5953 1fb4 1A46     		mov	r2, r3
 5954 1fb6 2B4B     		ldr	r3, .L249+20
 5955 1fb8 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 5956 1fbc 2A4B     		ldr	r3, .L249+24
 5957 1fbe 1A70     		strb	r2, [r3]
1734:main.c        ****             
1735:main.c        ****             
1736:main.c        ****             CyDelayUs(10);
 5958              		.loc 1 1736 0
 5959 1fc0 0A20     		movs	r0, #10
 5960 1fc2 FFF7FEFF 		bl	CyDelayUs
1737:main.c        ****             if (mux_states[main_counter][0] == 5)
 5961              		.loc 1 1737 0
 5962 1fc6 264B     		ldr	r3, .L249+16
 5963 1fc8 1B78     		ldrb	r3, [r3]
 5964 1fca DBB2     		uxtb	r3, r3
 5965 1fcc 1A46     		mov	r2, r3
 5966 1fce 254B     		ldr	r3, .L249+20
 5967 1fd0 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 5968 1fd4 052B     		cmp	r3, #5
 5969 1fd6 1DD1     		bne	.L213
1738:main.c        ****             {
1739:main.c        ****                 if (!i2c_skipped[main_counter])
 5970              		.loc 1 1739 0
 5971 1fd8 214B     		ldr	r3, .L249+16
 5972 1fda 1B78     		ldrb	r3, [r3]
 5973 1fdc DBB2     		uxtb	r3, r3
 5974 1fde 1A46     		mov	r2, r3
 5975 1fe0 234B     		ldr	r3, .L249+32
 5976 1fe2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 138


 5977 1fe4 002B     		cmp	r3, #0
 5978 1fe6 15D1     		bne	.L213
1740:main.c        ****                 {
1741:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 5979              		.loc 1 1741 0
 5980 1fe8 1D4B     		ldr	r3, .L249+16
 5981 1fea 1B78     		ldrb	r3, [r3]
 5982 1fec DBB2     		uxtb	r3, r3
 5983 1fee 1D4A     		ldr	r2, .L249+20
 5984 1ff0 5B00     		lsls	r3, r3, #1
 5985 1ff2 1344     		add	r3, r3, r2
 5986 1ff4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5987 1ff6 1A46     		mov	r2, r3
 5988 1ff8 0123     		movs	r3, #1
 5989 1ffa 9340     		lsls	r3, r3, r2
 5990 1ffc DAB2     		uxtb	r2, r3
 5991 1ffe 1B4B     		ldr	r3, .L249+28
 5992 2000 1A70     		strb	r2, [r3]
1742:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 5993              		.loc 1 1742 0
 5994 2002 0022     		movs	r2, #0
 5995 2004 0121     		movs	r1, #1
 5996 2006 7120     		movs	r0, #113
 5997 2008 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 5998 200c 0346     		mov	r3, r0
 5999 200e 1A46     		mov	r2, r3
 6000 2010 184B     		ldr	r3, .L249+36
 6001 2012 1A60     		str	r2, [r3]
 6002              	.L213:
1743:main.c        ****                 }
1744:main.c        ****             }
1745:main.c        **** 
1746:main.c        ****             CyDelayUs(10);
 6003              		.loc 1 1746 0
 6004 2014 0A20     		movs	r0, #10
 6005 2016 FFF7FEFF 		bl	CyDelayUs
1747:main.c        **** 
1748:main.c        ****             OLED_draw(128, 64);
 6006              		.loc 1 1748 0
 6007 201a 4021     		movs	r1, #64
 6008 201c 8020     		movs	r0, #128
 6009 201e FFF7FEFF 		bl	OLED_draw
 6010 2022 00E0     		b	.L211
 6011              	.L222:
1697:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6012              		.loc 1 1697 0
 6013 2024 00BF     		nop
 6014              	.L211:
1749:main.c        ****             #ifdef BOOTLOAD_STYLE
1750:main.c        ****             Bootloadable_Load();
1751:main.c        ****                 #endif
1752:main.c        ****         }
1753:main.c        ****         
1754:main.c        ****         SPIM_1_ClearRxBuffer();
 6015              		.loc 1 1754 0
 6016 2026 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1755:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 139


 6017              		.loc 1 1755 0
 6018 202a 134B     		ldr	r3, .L249+40
 6019 202c 1B78     		ldrb	r3, [r3]
 6020 202e DBB2     		uxtb	r3, r3
 6021 2030 0121     		movs	r1, #1
 6022 2032 1846     		mov	r0, r3
 6023 2034 FFF7FEFF 		bl	CyDmaChEnable
1756:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 6024              		.loc 1 1756 0
 6025 2038 104B     		ldr	r3, .L249+44
 6026 203a 1B78     		ldrb	r3, [r3]
 6027 203c DBB2     		uxtb	r3, r3
 6028 203e 0121     		movs	r1, #1
 6029 2040 1846     		mov	r0, r3
 6030 2042 FFF7FEFF 		bl	CyDmaChEnable
1757:main.c        ****         
1758:main.c        ****         testpin6_Write(0);
 6031              		.loc 1 1758 0
 6032 2046 0020     		movs	r0, #0
 6033 2048 FFF7FEFF 		bl	testpin6_Write
1759:main.c        ****        
1760:main.c        **** 
1761:main.c        ****      }
 6034              		.loc 1 1761 0
 6035 204c FEF751BA 		b	.L214
 6036              	.L250:
 6037              		.align	2
 6038              	.L249:
 6039 2050 00000000 		.word	inBuffer
 6040 2054 34040000 		.word	.LC5
 6041 2058 40040000 		.word	.LC6
 6042 205c 4C040000 		.word	.LC7
 6043 2060 00000000 		.word	main_counter
 6044 2064 00000000 		.word	mux_states
 6045 2068 00000000 		.word	last_mux
 6046 206c 00000000 		.word	I2Cbuff1
 6047 2070 00000000 		.word	i2c_skipped
 6048 2074 00000000 		.word	status
 6049 2078 00000000 		.word	rx3Channel
 6050 207c 00000000 		.word	txChannel
 6051              		.cfi_endproc
 6052              	.LFE75:
 6053              		.size	main, .-main
 6054              		.section	.text.DmaTxConfiguration,"ax",%progbits
 6055              		.align	2
 6056              		.global	DmaTxConfiguration
 6057              		.thumb
 6058              		.thumb_func
 6059              		.type	DmaTxConfiguration, %function
 6060              	DmaTxConfiguration:
 6061              	.LFB76:
1762:main.c        **** }
1763:main.c        **** 
1764:main.c        **** void DmaTxConfiguration()
1765:main.c        **** {
 6062              		.loc 1 1765 0
 6063              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 140


 6064              		@ args = 0, pretend = 0, frame = 0
 6065              		@ frame_needed = 1, uses_anonymous_args = 0
 6066 0000 80B5     		push	{r7, lr}
 6067              		.cfi_def_cfa_offset 8
 6068              		.cfi_offset 7, -8
 6069              		.cfi_offset 14, -4
 6070 0002 00AF     		add	r7, sp, #0
 6071              		.cfi_def_cfa_register 7
1766:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1767:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 6072              		.loc 1 1767 0
 6073 0004 4FF48043 		mov	r3, #16384
 6074 0008 41F6FF72 		movw	r2, #8191
 6075 000c 0121     		movs	r1, #1
 6076 000e 0120     		movs	r0, #1
 6077 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 6078 0014 0346     		mov	r3, r0
 6079 0016 1A46     		mov	r2, r3
 6080 0018 124B     		ldr	r3, .L252
 6081 001a 1A70     		strb	r2, [r3]
1768:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1769:main.c        **** 
1770:main.c        ****     txTD = CyDmaTdAllocate();
 6082              		.loc 1 1770 0
 6083 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6084 0020 0346     		mov	r3, r0
 6085 0022 1A46     		mov	r2, r3
 6086 0024 104B     		ldr	r3, .L252+4
 6087 0026 1A70     		strb	r2, [r3]
1771:main.c        **** 
1772:main.c        ****     /* Configure this Td as follows:
1773:main.c        ****     *  - Increment the source address, but not the destination address   
1774:main.c        ****     */
1775:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 6088              		.loc 1 1775 0
 6089 0028 0F4B     		ldr	r3, .L252+4
 6090 002a 1B78     		ldrb	r3, [r3]
 6091 002c D8B2     		uxtb	r0, r3
 6092 002e 0123     		movs	r3, #1
 6093 0030 FE22     		movs	r2, #254
 6094 0032 2021     		movs	r1, #32
 6095 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1776:main.c        **** 
1777:main.c        ****     /* From the memory to the SPIM */
1778:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 6096              		.loc 1 1778 0
 6097 0038 0B4B     		ldr	r3, .L252+4
 6098 003a 1B78     		ldrb	r3, [r3]
 6099 003c DBB2     		uxtb	r3, r3
 6100 003e 0B4A     		ldr	r2, .L252+8
 6101 0040 91B2     		uxth	r1, r2
 6102 0042 46F24242 		movw	r2, #25666
 6103 0046 1846     		mov	r0, r3
 6104 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1779:main.c        ****     
1780:main.c        ****     /* Associate the TD with the channel */
1781:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 141


 6105              		.loc 1 1781 0
 6106 004c 054B     		ldr	r3, .L252
 6107 004e 1B78     		ldrb	r3, [r3]
 6108 0050 DAB2     		uxtb	r2, r3
 6109 0052 054B     		ldr	r3, .L252+4
 6110 0054 1B78     		ldrb	r3, [r3]
 6111 0056 DBB2     		uxtb	r3, r3
 6112 0058 1946     		mov	r1, r3
 6113 005a 1046     		mov	r0, r2
 6114 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1782:main.c        ****    
1783:main.c        **** } 
 6115              		.loc 1 1783 0
 6116 0060 00BF     		nop
 6117 0062 80BD     		pop	{r7, pc}
 6118              	.L253:
 6119              		.align	2
 6120              	.L252:
 6121 0064 00000000 		.word	txChannel
 6122 0068 00000000 		.word	txTD
 6123 006c 00000000 		.word	myArray
 6124              		.cfi_endproc
 6125              	.LFE76:
 6126              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 6127              		.section	.text.DmaRxConfiguration,"ax",%progbits
 6128              		.align	2
 6129              		.global	DmaRxConfiguration
 6130              		.thumb
 6131              		.thumb_func
 6132              		.type	DmaRxConfiguration, %function
 6133              	DmaRxConfiguration:
 6134              	.LFB77:
1784:main.c        **** 
1785:main.c        **** void DmaRxConfiguration()
1786:main.c        **** { 
 6135              		.loc 1 1786 0
 6136              		.cfi_startproc
 6137              		@ args = 0, pretend = 0, frame = 0
 6138              		@ frame_needed = 1, uses_anonymous_args = 0
 6139 0000 80B5     		push	{r7, lr}
 6140              		.cfi_def_cfa_offset 8
 6141              		.cfi_offset 7, -8
 6142              		.cfi_offset 14, -4
 6143 0002 00AF     		add	r7, sp, #0
 6144              		.cfi_def_cfa_register 7
1787:main.c        ****     //pluck dma
1788:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6145              		.loc 1 1788 0
 6146 0004 41F6FF73 		movw	r3, #8191
 6147 0008 4FF48042 		mov	r2, #16384
 6148 000c 0121     		movs	r1, #1
 6149 000e 0120     		movs	r0, #1
 6150 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 6151 0014 0346     		mov	r3, r0
 6152 0016 1A46     		mov	r2, r3
 6153 0018 4A4B     		ldr	r3, .L255
 6154 001a 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 142


1789:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1790:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 6155              		.loc 1 1790 0
 6156 001c FFF7FEFF 		bl	CyDmaTdAllocate
 6157 0020 0346     		mov	r3, r0
 6158 0022 1A46     		mov	r2, r3
 6159 0024 484B     		ldr	r3, .L255+4
 6160 0026 1A70     		strb	r2, [r3]
1791:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 6161              		.loc 1 1791 0
 6162 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 6163 002c 0346     		mov	r3, r0
 6164 002e 1A46     		mov	r2, r3
 6165 0030 454B     		ldr	r3, .L255+4
 6166 0032 5A70     		strb	r2, [r3, #1]
1792:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 6167              		.loc 1 1792 0
 6168 0034 444B     		ldr	r3, .L255+4
 6169 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6170 0038 0223     		movs	r3, #2
 6171 003a FE22     		movs	r2, #254
 6172 003c 1A21     		movs	r1, #26
 6173 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1793:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 6174              		.loc 1 1793 0
 6175 0042 414B     		ldr	r3, .L255+4
 6176 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6177 0046 0223     		movs	r3, #2
 6178 0048 FE22     		movs	r2, #254
 6179 004a 1A21     		movs	r1, #26
 6180 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1794:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 6181              		.loc 1 1794 0
 6182 0050 3D4B     		ldr	r3, .L255+4
 6183 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6184 0054 3D4A     		ldr	r2, .L255+8
 6185 0056 92B2     		uxth	r2, r2
 6186 0058 46F25B41 		movw	r1, #25691
 6187 005c 1846     		mov	r0, r3
 6188 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1795:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 6189              		.loc 1 1795 0
 6190 0062 394B     		ldr	r3, .L255+4
 6191 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6192 0066 3A4A     		ldr	r2, .L255+12
 6193 0068 92B2     		uxth	r2, r2
 6194 006a 46F25B41 		movw	r1, #25691
 6195 006e 1846     		mov	r0, r3
 6196 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1796:main.c        **** 
1797:main.c        ****     //bar dma
1798:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6197              		.loc 1 1798 0
 6198 0074 41F6FF73 		movw	r3, #8191
 6199 0078 4FF48042 		mov	r2, #16384
 6200 007c 0121     		movs	r1, #1
 6201 007e 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 143


 6202 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 6203 0084 0346     		mov	r3, r0
 6204 0086 1A46     		mov	r2, r3
 6205 0088 324B     		ldr	r3, .L255+16
 6206 008a 1A70     		strb	r2, [r3]
1799:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1800:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 6207              		.loc 1 1800 0
 6208 008c FFF7FEFF 		bl	CyDmaTdAllocate
 6209 0090 0346     		mov	r3, r0
 6210 0092 1A46     		mov	r2, r3
 6211 0094 304B     		ldr	r3, .L255+20
 6212 0096 1A70     		strb	r2, [r3]
1801:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 6213              		.loc 1 1801 0
 6214 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 6215 009c 0346     		mov	r3, r0
 6216 009e 1A46     		mov	r2, r3
 6217 00a0 2D4B     		ldr	r3, .L255+20
 6218 00a2 5A70     		strb	r2, [r3, #1]
1802:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6219              		.loc 1 1802 0
 6220 00a4 2C4B     		ldr	r3, .L255+20
 6221 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6222 00a8 0623     		movs	r3, #6
 6223 00aa FE22     		movs	r2, #254
 6224 00ac 0821     		movs	r1, #8
 6225 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1803:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 6226              		.loc 1 1803 0
 6227 00b2 294B     		ldr	r3, .L255+20
 6228 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 6229 00b6 0623     		movs	r3, #6
 6230 00b8 FE22     		movs	r2, #254
 6231 00ba 0821     		movs	r1, #8
 6232 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1804:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 6233              		.loc 1 1804 0
 6234 00c0 254B     		ldr	r3, .L255+20
 6235 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6236 00c4 254A     		ldr	r2, .L255+24
 6237 00c6 92B2     		uxth	r2, r2
 6238 00c8 46F25751 		movw	r1, #25943
 6239 00cc 1846     		mov	r0, r3
 6240 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1805:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 6241              		.loc 1 1805 0
 6242 00d2 214B     		ldr	r3, .L255+20
 6243 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6244 00d6 224A     		ldr	r2, .L255+28
 6245 00d8 92B2     		uxth	r2, r2
 6246 00da 46F25751 		movw	r1, #25943
 6247 00de 1846     		mov	r0, r3
 6248 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1806:main.c        ****     
1807:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1808:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 144


 6249              		.loc 1 1808 0
 6250 00e4 41F6FF73 		movw	r3, #8191
 6251 00e8 4FF48042 		mov	r2, #16384
 6252 00ec 0121     		movs	r1, #1
 6253 00ee 0120     		movs	r0, #1
 6254 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 6255 00f4 0346     		mov	r3, r0
 6256 00f6 1A46     		mov	r2, r3
 6257 00f8 1A4B     		ldr	r3, .L255+32
 6258 00fa 1A70     		strb	r2, [r3]
1809:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1810:main.c        **** 
1811:main.c        ****     rx3TD = CyDmaTdAllocate();
 6259              		.loc 1 1811 0
 6260 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 6261 0100 0346     		mov	r3, r0
 6262 0102 1A46     		mov	r2, r3
 6263 0104 184B     		ldr	r3, .L255+36
 6264 0106 1A70     		strb	r2, [r3]
1812:main.c        ****     
1813:main.c        ****     /* Configure this Td as follows:
1814:main.c        ****     *  - Increment the destination address, but not the source address
1815:main.c        ****     */
1816:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 6265              		.loc 1 1816 0
 6266 0108 174B     		ldr	r3, .L255+36
 6267 010a 1B78     		ldrb	r3, [r3]
 6268 010c D8B2     		uxtb	r0, r3
 6269 010e 0223     		movs	r3, #2
 6270 0110 FE22     		movs	r2, #254
 6271 0112 2021     		movs	r1, #32
 6272 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1817:main.c        **** 
1818:main.c        ****     /* From the SPIM to the memory */
1819:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 6273              		.loc 1 1819 0
 6274 0118 134B     		ldr	r3, .L255+36
 6275 011a 1B78     		ldrb	r3, [r3]
 6276 011c DBB2     		uxtb	r3, r3
 6277 011e 134A     		ldr	r2, .L255+40
 6278 0120 92B2     		uxth	r2, r2
 6279 0122 46F25241 		movw	r1, #25682
 6280 0126 1846     		mov	r0, r3
 6281 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1820:main.c        **** 
1821:main.c        ****     /* Associate the TD with the channel */
1822:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 6282              		.loc 1 1822 0
 6283 012c 0D4B     		ldr	r3, .L255+32
 6284 012e 1B78     		ldrb	r3, [r3]
 6285 0130 DAB2     		uxtb	r2, r3
 6286 0132 0D4B     		ldr	r3, .L255+36
 6287 0134 1B78     		ldrb	r3, [r3]
 6288 0136 DBB2     		uxtb	r3, r3
 6289 0138 1946     		mov	r1, r3
 6290 013a 1046     		mov	r0, r2
 6291 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 145


1823:main.c        **** }
 6292              		.loc 1 1823 0
 6293 0140 00BF     		nop
 6294 0142 80BD     		pop	{r7, pc}
 6295              	.L256:
 6296              		.align	2
 6297              	.L255:
 6298 0144 00000000 		.word	rx1Channel
 6299 0148 00000000 		.word	rx1TD
 6300 014c 00000000 		.word	rxBufferPluck
 6301 0150 1A000000 		.word	rxBufferPluck+26
 6302 0154 00000000 		.word	rx2Channel
 6303 0158 00000000 		.word	rx2TD
 6304 015c 00000000 		.word	rxBufferBar
 6305 0160 08000000 		.word	rxBufferBar+8
 6306 0164 00000000 		.word	rx3Channel
 6307 0168 00000000 		.word	rx3TD
 6308 016c 00000000 		.word	inBuffer
 6309              		.cfi_endproc
 6310              	.LFE77:
 6311              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 6312              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 6313              		.align	2
 6314              		.global	I2C_MasterWriteBlocking
 6315              		.thumb
 6316              		.thumb_func
 6317              		.type	I2C_MasterWriteBlocking, %function
 6318              	I2C_MasterWriteBlocking:
 6319              	.LFB78:
1824:main.c        **** 
1825:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1826:main.c        **** {
 6320              		.loc 1 1826 0
 6321              		.cfi_startproc
 6322              		@ args = 0, pretend = 0, frame = 24
 6323              		@ frame_needed = 1, uses_anonymous_args = 0
 6324 0000 80B5     		push	{r7, lr}
 6325              		.cfi_def_cfa_offset 8
 6326              		.cfi_offset 7, -8
 6327              		.cfi_offset 14, -4
 6328 0002 86B0     		sub	sp, sp, #24
 6329              		.cfi_def_cfa_offset 32
 6330 0004 00AF     		add	r7, sp, #0
 6331              		.cfi_def_cfa_register 7
 6332 0006 0346     		mov	r3, r0
 6333 0008 FB71     		strb	r3, [r7, #7]
 6334 000a 0B46     		mov	r3, r1	@ movhi
 6335 000c BB80     		strh	r3, [r7, #4]	@ movhi
 6336 000e 1346     		mov	r3, r2
 6337 0010 BB71     		strb	r3, [r7, #6]
1827:main.c        ****     uint8 volatile status;
1828:main.c        ****     uint8_t error = 0;
 6338              		.loc 1 1828 0
 6339 0012 0023     		movs	r3, #0
 6340 0014 FB75     		strb	r3, [r7, #23]
1829:main.c        ****     uint32_t timeout = 1000;
 6341              		.loc 1 1829 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 146


 6342 0016 4FF47A73 		mov	r3, #1000
 6343 001a 3B61     		str	r3, [r7, #16]
1830:main.c        ****     status = I2C_1_MasterClearStatus();
 6344              		.loc 1 1830 0
 6345 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6346 0020 0346     		mov	r3, r0
 6347 0022 FB73     		strb	r3, [r7, #15]
1831:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6348              		.loc 1 1831 0
 6349 0024 FB7B     		ldrb	r3, [r7, #15]
 6350 0026 DBB2     		uxtb	r3, r3
 6351 0028 5BB2     		sxtb	r3, r3
 6352 002a 002B     		cmp	r3, #0
 6353 002c 42DB     		blt	.L258
1832:main.c        ****     {
1833:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 6354              		.loc 1 1833 0
 6355 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 6356 0030 DAB2     		uxtb	r2, r3
 6357 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 6358 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6359 0036 2949     		ldr	r1, .L267
 6360 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 6361 003c 0346     		mov	r3, r0
 6362 003e FB73     		strb	r3, [r7, #15]
1834:main.c        ****                                      mode);
1835:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6363              		.loc 1 1835 0
 6364 0040 FB7B     		ldrb	r3, [r7, #15]
 6365 0042 DBB2     		uxtb	r3, r3
 6366 0044 002B     		cmp	r3, #0
 6367 0046 2FD1     		bne	.L259
 6368              	.L263:
1836:main.c        ****         {
1837:main.c        ****             /* wait for write complete and no error */
1838:main.c        ****             do
1839:main.c        ****             {
1840:main.c        ****                 status = I2C_1_MasterStatus();
 6369              		.loc 1 1840 0
 6370 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 6371 004c 0346     		mov	r3, r0
 6372 004e FB73     		strb	r3, [r7, #15]
1841:main.c        ****                 timeout--;
 6373              		.loc 1 1841 0
 6374 0050 3B69     		ldr	r3, [r7, #16]
 6375 0052 013B     		subs	r3, r3, #1
 6376 0054 3B61     		str	r3, [r7, #16]
1842:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6377              		.loc 1 1842 0
 6378 0056 FB7B     		ldrb	r3, [r7, #15]
 6379 0058 DBB2     		uxtb	r3, r3
 6380 005a 802B     		cmp	r3, #128
 6381 005c 03D1     		bne	.L260
1843:main.c        ****                 {
1844:main.c        ****                     I2C_reset();
 6382              		.loc 1 1844 0
 6383 005e FFF7FEFF 		bl	I2C_reset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 147


1845:main.c        ****                     error = 1;
 6384              		.loc 1 1845 0
 6385 0062 0123     		movs	r3, #1
 6386 0064 FB75     		strb	r3, [r7, #23]
 6387              	.L260:
1846:main.c        ****                 }
1847:main.c        ****                 if (timeout == 0)
 6388              		.loc 1 1847 0
 6389 0066 3B69     		ldr	r3, [r7, #16]
 6390 0068 002B     		cmp	r3, #0
 6391 006a 05D1     		bne	.L261
1848:main.c        ****                 {
1849:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6392              		.loc 1 1849 0
 6393 006c 8023     		movs	r3, #128
 6394 006e FB73     		strb	r3, [r7, #15]
1850:main.c        ****                     I2C_reset();
 6395              		.loc 1 1850 0
 6396 0070 FFF7FEFF 		bl	I2C_reset
1851:main.c        ****                     error = 1;
 6397              		.loc 1 1851 0
 6398 0074 0123     		movs	r3, #1
 6399 0076 FB75     		strb	r3, [r7, #23]
 6400              	.L261:
1852:main.c        ****                 }
1853:main.c        ****                 
1854:main.c        ****                 if (status == 0)
 6401              		.loc 1 1854 0
 6402 0078 FB7B     		ldrb	r3, [r7, #15]
 6403 007a DBB2     		uxtb	r3, r3
 6404 007c 002B     		cmp	r3, #0
 6405 007e 05D1     		bne	.L262
1855:main.c        ****                 {
1856:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6406              		.loc 1 1856 0
 6407 0080 8023     		movs	r3, #128
 6408 0082 FB73     		strb	r3, [r7, #15]
1857:main.c        ****                     I2C_reset();
 6409              		.loc 1 1857 0
 6410 0084 FFF7FEFF 		bl	I2C_reset
1858:main.c        ****                     error = 1;
 6411              		.loc 1 1858 0
 6412 0088 0123     		movs	r3, #1
 6413 008a FB75     		strb	r3, [r7, #23]
 6414              	.L262:
1859:main.c        ****                 }
1860:main.c        ****                 
1861:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6415              		.loc 1 1861 0
 6416 008c FB7B     		ldrb	r3, [r7, #15]
 6417 008e DBB2     		uxtb	r3, r3
 6418 0090 03F08203 		and	r3, r3, #130
 6419 0094 002B     		cmp	r3, #0
 6420 0096 0DD1     		bne	.L258
 6421              		.loc 1 1861 0 is_stmt 0 discriminator 1
 6422 0098 FB7B     		ldrb	r3, [r7, #15]
 6423 009a DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 148


 6424 009c 002B     		cmp	r3, #0
 6425 009e 09D0     		beq	.L258
 6426              		.loc 1 1861 0 discriminator 2
 6427 00a0 3B69     		ldr	r3, [r7, #16]
 6428 00a2 002B     		cmp	r3, #0
 6429 00a4 D0D1     		bne	.L263
 6430 00a6 05E0     		b	.L258
 6431              	.L259:
1862:main.c        ****         }
1863:main.c        ****         else
1864:main.c        ****         {
1865:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1866:main.c        ****             *  I2CM_MasterStatus() error output */
1867:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6432              		.loc 1 1867 0 is_stmt 1
 6433 00a8 8023     		movs	r3, #128
 6434 00aa FB73     		strb	r3, [r7, #15]
1868:main.c        ****             I2C_reset();
 6435              		.loc 1 1868 0
 6436 00ac FFF7FEFF 		bl	I2C_reset
1869:main.c        ****             error = 1;
 6437              		.loc 1 1869 0
 6438 00b0 0123     		movs	r3, #1
 6439 00b2 FB75     		strb	r3, [r7, #23]
 6440              	.L258:
1870:main.c        ****         } 
1871:main.c        ****     }  
1872:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6441              		.loc 1 1872 0
 6442 00b4 FB7B     		ldrb	r3, [r7, #15]
 6443 00b6 DBB2     		uxtb	r3, r3
 6444 00b8 03F02003 		and	r3, r3, #32
 6445 00bc 002B     		cmp	r3, #0
 6446 00be 04D1     		bne	.L264
 6447              		.loc 1 1872 0 is_stmt 0 discriminator 1
 6448 00c0 FB7B     		ldrb	r3, [r7, #15]
 6449 00c2 DBB2     		uxtb	r3, r3
 6450 00c4 5BB2     		sxtb	r3, r3
 6451 00c6 002B     		cmp	r3, #0
 6452 00c8 03DA     		bge	.L265
 6453              	.L264:
1873:main.c        ****     {
1874:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1875:main.c        ****         //i2c_skipped[main_counter] = 1;
1876:main.c        ****         I2C_reset();
 6454              		.loc 1 1876 0 is_stmt 1
 6455 00ca FFF7FEFF 		bl	I2C_reset
1877:main.c        ****         error = 1;
 6456              		.loc 1 1877 0
 6457 00ce 0123     		movs	r3, #1
 6458 00d0 FB75     		strb	r3, [r7, #23]
 6459              	.L265:
1878:main.c        ****     }
1879:main.c        ****     return error;
 6460              		.loc 1 1879 0
 6461 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1880:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 149


 6462              		.loc 1 1880 0
 6463 00d4 1846     		mov	r0, r3
 6464 00d6 1837     		adds	r7, r7, #24
 6465              		.cfi_def_cfa_offset 8
 6466 00d8 BD46     		mov	sp, r7
 6467              		.cfi_def_cfa_register 13
 6468              		@ sp needed
 6469 00da 80BD     		pop	{r7, pc}
 6470              	.L268:
 6471              		.align	2
 6472              	.L267:
 6473 00dc 00000000 		.word	I2Cbuff1
 6474              		.cfi_endproc
 6475              	.LFE78:
 6476              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 6477              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 6478              		.align	2
 6479              		.global	I2C_MasterReadBlocking
 6480              		.thumb
 6481              		.thumb_func
 6482              		.type	I2C_MasterReadBlocking, %function
 6483              	I2C_MasterReadBlocking:
 6484              	.LFB79:
1881:main.c        **** 
1882:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1883:main.c        **** {
 6485              		.loc 1 1883 0
 6486              		.cfi_startproc
 6487              		@ args = 0, pretend = 0, frame = 16
 6488              		@ frame_needed = 1, uses_anonymous_args = 0
 6489 0000 80B5     		push	{r7, lr}
 6490              		.cfi_def_cfa_offset 8
 6491              		.cfi_offset 7, -8
 6492              		.cfi_offset 14, -4
 6493 0002 84B0     		sub	sp, sp, #16
 6494              		.cfi_def_cfa_offset 24
 6495 0004 00AF     		add	r7, sp, #0
 6496              		.cfi_def_cfa_register 7
 6497 0006 0346     		mov	r3, r0
 6498 0008 FB71     		strb	r3, [r7, #7]
 6499 000a 0B46     		mov	r3, r1
 6500 000c BB71     		strb	r3, [r7, #6]
 6501 000e 1346     		mov	r3, r2
 6502 0010 7B71     		strb	r3, [r7, #5]
1884:main.c        ****     uint8 volatile status;
1885:main.c        ****     uint32_t timeout = 50000;
 6503              		.loc 1 1885 0
 6504 0012 4CF25033 		movw	r3, #50000
 6505 0016 FB60     		str	r3, [r7, #12]
1886:main.c        ****     uint8_t error = 0;
 6506              		.loc 1 1886 0
 6507 0018 0023     		movs	r3, #0
 6508 001a FB72     		strb	r3, [r7, #11]
1887:main.c        ****     status = I2C_1_MasterClearStatus();
 6509              		.loc 1 1887 0
 6510 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 6511 0020 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 150


 6512 0022 BB72     		strb	r3, [r7, #10]
1888:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 6513              		.loc 1 1888 0
 6514 0024 BB7A     		ldrb	r3, [r7, #10]
 6515 0026 DBB2     		uxtb	r3, r3
 6516 0028 5BB2     		sxtb	r3, r3
 6517 002a 002B     		cmp	r3, #0
 6518 002c 3DDB     		blt	.L270
1889:main.c        ****     {
1890:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 6519              		.loc 1 1890 0
 6520 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 6521 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 6522 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 6523 0034 2749     		ldr	r1, .L278
 6524 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 6525 003a 0346     		mov	r3, r0
 6526 003c BB72     		strb	r3, [r7, #10]
1891:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1892:main.c        ****                                     nbytes, mode); 
1893:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 6527              		.loc 1 1893 0
 6528 003e BB7A     		ldrb	r3, [r7, #10]
 6529 0040 DBB2     		uxtb	r3, r3
 6530 0042 002B     		cmp	r3, #0
 6531 0044 2BD1     		bne	.L271
 6532              	.L274:
1894:main.c        ****         {
1895:main.c        ****             /* wait for read complete and no error */
1896:main.c        ****             do
1897:main.c        ****             {
1898:main.c        ****                 status = I2C_1_MasterStatus();
 6533              		.loc 1 1898 0
 6534 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 6535 004a 0346     		mov	r3, r0
 6536 004c BB72     		strb	r3, [r7, #10]
1899:main.c        ****                 timeout--;
 6537              		.loc 1 1899 0
 6538 004e FB68     		ldr	r3, [r7, #12]
 6539 0050 013B     		subs	r3, r3, #1
 6540 0052 FB60     		str	r3, [r7, #12]
1900:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 6541              		.loc 1 1900 0
 6542 0054 BB7A     		ldrb	r3, [r7, #10]
 6543 0056 DBB2     		uxtb	r3, r3
 6544 0058 802B     		cmp	r3, #128
 6545 005a 09D1     		bne	.L272
1901:main.c        ****                 {
1902:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 6546              		.loc 1 1902 0
 6547 005c 1E4B     		ldr	r3, .L278+4
 6548 005e 1022     		movs	r2, #16
 6549 0060 1A70     		strb	r2, [r3]
 6550 0062 1E4B     		ldr	r3, .L278+8
 6551 0064 0422     		movs	r2, #4
 6552 0066 1A70     		strb	r2, [r3]
1903:main.c        ****                     I2C_reset();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 151


 6553              		.loc 1 1903 0
 6554 0068 FFF7FEFF 		bl	I2C_reset
1904:main.c        ****                     error = 1;
 6555              		.loc 1 1904 0
 6556 006c 0123     		movs	r3, #1
 6557 006e FB72     		strb	r3, [r7, #11]
 6558              	.L272:
1905:main.c        ****                 }
1906:main.c        ****                 if (timeout == 0)
 6559              		.loc 1 1906 0
 6560 0070 FB68     		ldr	r3, [r7, #12]
 6561 0072 002B     		cmp	r3, #0
 6562 0074 05D1     		bne	.L273
1907:main.c        ****                 {
1908:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 6563              		.loc 1 1908 0
 6564 0076 8023     		movs	r3, #128
 6565 0078 BB72     		strb	r3, [r7, #10]
1909:main.c        ****                     I2C_reset();
 6566              		.loc 1 1909 0
 6567 007a FFF7FEFF 		bl	I2C_reset
1910:main.c        ****                     error = 1;
 6568              		.loc 1 1910 0
 6569 007e 0123     		movs	r3, #1
 6570 0080 FB72     		strb	r3, [r7, #11]
 6571              	.L273:
1911:main.c        ****                 }
1912:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 6572              		.loc 1 1912 0
 6573 0082 BB7A     		ldrb	r3, [r7, #10]
 6574 0084 DBB2     		uxtb	r3, r3
 6575 0086 03F08103 		and	r3, r3, #129
 6576 008a 002B     		cmp	r3, #0
 6577 008c 0DD1     		bne	.L270
 6578              		.loc 1 1912 0 is_stmt 0 discriminator 1
 6579 008e BB7A     		ldrb	r3, [r7, #10]
 6580 0090 DBB2     		uxtb	r3, r3
 6581 0092 002B     		cmp	r3, #0
 6582 0094 09D0     		beq	.L270
 6583              		.loc 1 1912 0 discriminator 2
 6584 0096 FB68     		ldr	r3, [r7, #12]
 6585 0098 002B     		cmp	r3, #0
 6586 009a D4D1     		bne	.L274
 6587 009c 05E0     		b	.L270
 6588              	.L271:
1913:main.c        ****         }
1914:main.c        ****         else
1915:main.c        ****         {
1916:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1917:main.c        ****             *  I2CM_MasterStatus() error output */
1918:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 6589              		.loc 1 1918 0 is_stmt 1
 6590 009e 8023     		movs	r3, #128
 6591 00a0 BB72     		strb	r3, [r7, #10]
1919:main.c        ****             I2C_reset();
 6592              		.loc 1 1919 0
 6593 00a2 FFF7FEFF 		bl	I2C_reset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 152


1920:main.c        ****             error = 1;
 6594              		.loc 1 1920 0
 6595 00a6 0123     		movs	r3, #1
 6596 00a8 FB72     		strb	r3, [r7, #11]
 6597              	.L270:
1921:main.c        ****         }
1922:main.c        ****     }
1923:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 6598              		.loc 1 1923 0
 6599 00aa BB7A     		ldrb	r3, [r7, #10]
 6600 00ac DBB2     		uxtb	r3, r3
 6601 00ae 03F02003 		and	r3, r3, #32
 6602 00b2 002B     		cmp	r3, #0
 6603 00b4 04D1     		bne	.L275
 6604              		.loc 1 1923 0 is_stmt 0 discriminator 1
 6605 00b6 BB7A     		ldrb	r3, [r7, #10]
 6606 00b8 DBB2     		uxtb	r3, r3
 6607 00ba 5BB2     		sxtb	r3, r3
 6608 00bc 002B     		cmp	r3, #0
 6609 00be 03DA     		bge	.L276
 6610              	.L275:
1924:main.c        ****     {
1925:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1926:main.c        ****         //i2c_skipped[main_counter] = 1;
1927:main.c        ****         I2C_reset();
 6611              		.loc 1 1927 0 is_stmt 1
 6612 00c0 FFF7FEFF 		bl	I2C_reset
1928:main.c        ****         error = 1;
 6613              		.loc 1 1928 0
 6614 00c4 0123     		movs	r3, #1
 6615 00c6 FB72     		strb	r3, [r7, #11]
 6616              	.L276:
1929:main.c        ****     }
1930:main.c        ****     return error;
 6617              		.loc 1 1930 0
 6618 00c8 FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1931:main.c        **** }
 6619              		.loc 1 1931 0
 6620 00ca 1846     		mov	r0, r3
 6621 00cc 1037     		adds	r7, r7, #16
 6622              		.cfi_def_cfa_offset 8
 6623 00ce BD46     		mov	sp, r7
 6624              		.cfi_def_cfa_register 13
 6625              		@ sp needed
 6626 00d0 80BD     		pop	{r7, pc}
 6627              	.L279:
 6628 00d2 00BF     		.align	2
 6629              	.L278:
 6630 00d4 00000000 		.word	I2Cbuff2
 6631 00d8 D9490040 		.word	1073760729
 6632 00dc D7490040 		.word	1073760727
 6633              		.cfi_endproc
 6634              	.LFE79:
 6635              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 6636              		.section	.text.I2C_reset,"ax",%progbits
 6637              		.align	2
 6638              		.global	I2C_reset
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 153


 6639              		.thumb
 6640              		.thumb_func
 6641              		.type	I2C_reset, %function
 6642              	I2C_reset:
 6643              	.LFB80:
1932:main.c        **** 
1933:main.c        **** void I2C_reset(void)
1934:main.c        **** {
 6644              		.loc 1 1934 0
 6645              		.cfi_startproc
 6646              		@ args = 0, pretend = 0, frame = 0
 6647              		@ frame_needed = 1, uses_anonymous_args = 0
 6648 0000 80B5     		push	{r7, lr}
 6649              		.cfi_def_cfa_offset 8
 6650              		.cfi_offset 7, -8
 6651              		.cfi_offset 14, -4
 6652 0002 00AF     		add	r7, sp, #0
 6653              		.cfi_def_cfa_register 7
1935:main.c        ****   I2C_1_Stop();
 6654              		.loc 1 1935 0
 6655 0004 FFF7FEFF 		bl	I2C_1_Stop
1936:main.c        **** 
1937:main.c        ****   /* Disable/clear everything, then reinitialize. */
1938:main.c        **** 
1939:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 6656              		.loc 1 1939 0
 6657 0008 064B     		ldr	r3, .L281
 6658 000a 0022     		movs	r2, #0
 6659 000c 1A70     		strb	r2, [r3]
1940:main.c        **** 
1941:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 6660              		.loc 1 1941 0
 6661 000e 064B     		ldr	r3, .L281+4
 6662 0010 0022     		movs	r2, #0
 6663 0012 1A70     		strb	r2, [r3]
1942:main.c        **** 
1943:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 6664              		.loc 1 1943 0
 6665 0014 054B     		ldr	r3, .L281+8
 6666 0016 0022     		movs	r2, #0
 6667 0018 1A70     		strb	r2, [r3]
1944:main.c        **** 
1945:main.c        ****   I2C_1_Start();
 6668              		.loc 1 1945 0
 6669 001a FFF7FEFF 		bl	I2C_1_Start
1946:main.c        **** }
 6670              		.loc 1 1946 0
 6671 001e 00BF     		nop
 6672 0020 80BD     		pop	{r7, pc}
 6673              	.L282:
 6674 0022 00BF     		.align	2
 6675              	.L281:
 6676 0024 D6490040 		.word	1073760726
 6677 0028 C8490040 		.word	1073760712
 6678 002c 00000000 		.word	I2C_1_initVar
 6679              		.cfi_endproc
 6680              	.LFE80:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 154


 6681              		.size	I2C_reset, .-I2C_reset
 6682              		.section	.text.displayCurrentPresetNameAndCopedent,"ax",%progbits
 6683              		.align	2
 6684              		.global	displayCurrentPresetNameAndCopedent
 6685              		.thumb
 6686              		.thumb_func
 6687              		.type	displayCurrentPresetNameAndCopedent, %function
 6688              	displayCurrentPresetNameAndCopedent:
 6689              	.LFB81:
1947:main.c        **** 
1948:main.c        **** void displayCurrentPresetNameAndCopedent()
1949:main.c        **** {
 6690              		.loc 1 1949 0
 6691              		.cfi_startproc
 6692              		@ args = 0, pretend = 0, frame = 0
 6693              		@ frame_needed = 1, uses_anonymous_args = 0
 6694 0000 98B5     		push	{r3, r4, r7, lr}
 6695              		.cfi_def_cfa_offset 16
 6696              		.cfi_offset 3, -16
 6697              		.cfi_offset 4, -12
 6698              		.cfi_offset 7, -8
 6699              		.cfi_offset 14, -4
 6700 0002 00AF     		add	r7, sp, #0
 6701              		.cfi_def_cfa_register 7
1950:main.c        ****     if (macroNamesArray[patchNum][7][0] != 255) //don't display if the name data still hasn't been 
 6702              		.loc 1 1950 0
 6703 0004 2E4B     		ldr	r3, .L286
 6704 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6705 0008 1946     		mov	r1, r3
 6706 000a 2E4A     		ldr	r2, .L286+4
 6707 000c 0B46     		mov	r3, r1
 6708 000e DB00     		lsls	r3, r3, #3
 6709 0010 5B1A     		subs	r3, r3, r1
 6710 0012 1B01     		lsls	r3, r3, #4
 6711 0014 1344     		add	r3, r3, r2
 6712 0016 6233     		adds	r3, r3, #98
 6713 0018 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6714 001a FF2B     		cmp	r3, #255
 6715 001c 4DD0     		beq	.L285
1951:main.c        ****     {
1952:main.c        ****         OLEDclear(128, 64);
 6716              		.loc 1 1952 0
 6717 001e 4021     		movs	r1, #64
 6718 0020 8020     		movs	r0, #128
 6719 0022 FFF7FEFF 		bl	OLEDclear
1953:main.c        ****         
1954:main.c        ****         myGFX_setFont(0);
 6720              		.loc 1 1954 0
 6721 0026 0020     		movs	r0, #0
 6722 0028 FFF7FEFF 		bl	myGFX_setFont
1955:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 6723              		.loc 1 1955 0
 6724 002c 244B     		ldr	r3, .L286
 6725 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6726 0030 1846     		mov	r0, r3
 6727 0032 0023     		movs	r3, #0
 6728 0034 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 155


 6729 0036 0221     		movs	r1, #2
 6730 0038 FFF7FEFF 		bl	OLEDwriteInt
1956:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1957:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_CLIPPED_LENGTH, 0, SecondLine)
 6731              		.loc 1 1957 0
 6732 003c 204B     		ldr	r3, .L286
 6733 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6734 0040 1A46     		mov	r2, r3
 6735 0042 1346     		mov	r3, r2
 6736 0044 DB00     		lsls	r3, r3, #3
 6737 0046 9B1A     		subs	r3, r3, r2
 6738 0048 5B00     		lsls	r3, r3, #1
 6739 004a 1F4A     		ldr	r2, .L286+8
 6740 004c 9818     		adds	r0, r3, r2
 6741 004e 0123     		movs	r3, #1
 6742 0050 0022     		movs	r2, #0
 6743 0052 0C21     		movs	r1, #12
 6744 0054 FFF7FEFF 		bl	OLEDwriteString
1958:main.c        ****         OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 6745              		.loc 1 1958 0
 6746 0058 1C4B     		ldr	r3, .L286+12
 6747 005a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6748 005c 1846     		mov	r0, r3
 6749 005e 0323     		movs	r3, #3
 6750 0060 0022     		movs	r2, #0
 6751 0062 0221     		movs	r1, #2
 6752 0064 FFF7FEFF 		bl	OLEDwriteInt
1959:main.c        ****         OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 6753              		.loc 1 1959 0
 6754 0068 FFF7FEFF 		bl	OLEDgetCursor
 6755 006c 0246     		mov	r2, r0
 6756 006e 0323     		movs	r3, #3
 6757 0070 0121     		movs	r1, #1
 6758 0072 1748     		ldr	r0, .L286+16
 6759 0074 FFF7FEFF 		bl	OLEDwriteString
1960:main.c        ****         OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENG
 6760              		.loc 1 1960 0
 6761 0078 144B     		ldr	r3, .L286+12
 6762 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6763 007c 1A46     		mov	r2, r3
 6764 007e 1346     		mov	r3, r2
 6765 0080 DB00     		lsls	r3, r3, #3
 6766 0082 9B1A     		subs	r3, r3, r2
 6767 0084 5B00     		lsls	r3, r3, #1
 6768 0086 134A     		ldr	r2, .L286+20
 6769 0088 9C18     		adds	r4, r3, r2
 6770 008a FFF7FEFF 		bl	OLEDgetCursor
 6771 008e 0246     		mov	r2, r0
 6772 0090 0323     		movs	r3, #3
 6773 0092 0921     		movs	r1, #9
 6774 0094 2046     		mov	r0, r4
 6775 0096 FFF7FEFF 		bl	OLEDwriteString
1961:main.c        ****         mainOLEDWaitingToSend = 1;
 6776              		.loc 1 1961 0
 6777 009a 0F4B     		ldr	r3, .L286+24
 6778 009c 0122     		movs	r2, #1
 6779 009e 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 156


1962:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 6780              		.loc 1 1962 0
 6781 00a0 074B     		ldr	r3, .L286
 6782 00a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6783 00a4 1946     		mov	r1, r3
 6784 00a6 0D4B     		ldr	r3, .L286+28
 6785 00a8 0122     		movs	r2, #1
 6786 00aa 43F82120 		str	r2, [r3, r1, lsl #2]
1963:main.c        ****         //and update the macro OLED screens
1964:main.c        ****         whichMacro = 0;
 6787              		.loc 1 1964 0
 6788 00ae 0C4B     		ldr	r3, .L286+32
 6789 00b0 0022     		movs	r2, #0
 6790 00b2 1A70     		strb	r2, [r3]
1965:main.c        ****         macroOLEDWaitingToSend = 1;
 6791              		.loc 1 1965 0
 6792 00b4 0B4B     		ldr	r3, .L286+36
 6793 00b6 0122     		movs	r2, #1
 6794 00b8 1A60     		str	r2, [r3]
 6795              	.L285:
1966:main.c        ****     }
1967:main.c        **** }
 6796              		.loc 1 1967 0
 6797 00ba 00BF     		nop
 6798 00bc 98BD     		pop	{r3, r4, r7, pc}
 6799              	.L287:
 6800 00be 00BF     		.align	2
 6801              	.L286:
 6802 00c0 00000000 		.word	patchNum
 6803 00c4 00000000 		.word	macroNamesArray
 6804 00c8 00000000 		.word	presetNamesArray
 6805 00cc 00000000 		.word	currentCopedent
 6806 00d0 00040000 		.word	.LC0
 6807 00d4 00000000 		.word	copedentNamesArray
 6808 00d8 00000000 		.word	mainOLEDWaitingToSend
 6809 00dc 00000000 		.word	presetAlreadyDisplayed
 6810 00e0 00000000 		.word	whichMacro
 6811 00e4 00000000 		.word	macroOLEDWaitingToSend
 6812              		.cfi_endproc
 6813              	.LFE81:
 6814              		.size	displayCurrentPresetNameAndCopedent, .-displayCurrentPresetNameAndCopedent
 6815              		.section	.text.checkUSB_Vbus,"ax",%progbits
 6816              		.align	2
 6817              		.global	checkUSB_Vbus
 6818              		.thumb
 6819              		.thumb_func
 6820              		.type	checkUSB_Vbus, %function
 6821              	checkUSB_Vbus:
 6822              	.LFB82:
1968:main.c        ****     
1969:main.c        **** void checkUSB_Vbus(void)
1970:main.c        **** {
 6823              		.loc 1 1970 0
 6824              		.cfi_startproc
 6825              		@ args = 0, pretend = 0, frame = 0
 6826              		@ frame_needed = 1, uses_anonymous_args = 0
 6827 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 157


 6828              		.cfi_def_cfa_offset 8
 6829              		.cfi_offset 7, -8
 6830              		.cfi_offset 14, -4
 6831 0002 00AF     		add	r7, sp, #0
 6832              		.cfi_def_cfa_register 7
1971:main.c        ****    if (USB_VBusPresent() == 0)
 6833              		.loc 1 1971 0
 6834 0004 FFF7FEFF 		bl	USB_VBusPresent
 6835 0008 0346     		mov	r3, r0
 6836 000a 002B     		cmp	r3, #0
 6837 000c 05D1     		bne	.L289
1972:main.c        ****    {
1973:main.c        ****        USB_Stop();
 6838              		.loc 1 1973 0
 6839 000e FFF7FEFF 		bl	USB_Stop
1974:main.c        ****        USB_active = 0; 
 6840              		.loc 1 1974 0
 6841 0012 0E4B     		ldr	r3, .L292
 6842 0014 0022     		movs	r2, #0
 6843 0016 1A70     		strb	r2, [r3]
 6844 0018 13E0     		b	.L290
 6845              	.L289:
1975:main.c        ****    }
1976:main.c        ****    else if (USB_active == 0 )
 6846              		.loc 1 1976 0
 6847 001a 0C4B     		ldr	r3, .L292
 6848 001c 1B78     		ldrb	r3, [r3]
 6849 001e DBB2     		uxtb	r3, r3
 6850 0020 002B     		cmp	r3, #0
 6851 0022 0ED1     		bne	.L290
1977:main.c        ****    {
1978:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 6852              		.loc 1 1978 0
 6853 0024 0021     		movs	r1, #0
 6854 0026 0020     		movs	r0, #0
 6855 0028 FFF7FEFF 		bl	USB_Start
1979:main.c        ****         while (0u == USB_GetConfiguration());
 6856              		.loc 1 1979 0
 6857 002c 00BF     		nop
 6858              	.L291:
 6859              		.loc 1 1979 0 is_stmt 0 discriminator 1
 6860 002e FFF7FEFF 		bl	USB_GetConfiguration
 6861 0032 0346     		mov	r3, r0
 6862 0034 002B     		cmp	r3, #0
 6863 0036 FAD0     		beq	.L291
1980:main.c        ****         USB_MIDI_EP_Init();
 6864              		.loc 1 1980 0 is_stmt 1
 6865 0038 FFF7FEFF 		bl	USB_MIDI_Init
1981:main.c        ****        USB_active = 1;
 6866              		.loc 1 1981 0
 6867 003c 034B     		ldr	r3, .L292
 6868 003e 0122     		movs	r2, #1
 6869 0040 1A70     		strb	r2, [r3]
 6870              	.L290:
1982:main.c        ****    }
1983:main.c        ****    USB_check_flag = 0;
 6871              		.loc 1 1983 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 158


 6872 0042 034B     		ldr	r3, .L292+4
 6873 0044 0022     		movs	r2, #0
 6874 0046 1A70     		strb	r2, [r3]
1984:main.c        **** }
 6875              		.loc 1 1984 0
 6876 0048 00BF     		nop
 6877 004a 80BD     		pop	{r7, pc}
 6878              	.L293:
 6879              		.align	2
 6880              	.L292:
 6881 004c 00000000 		.word	USB_active
 6882 0050 00000000 		.word	USB_check_flag
 6883              		.cfi_endproc
 6884              	.LFE82:
 6885              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 6886              		.section	.text.USB_service,"ax",%progbits
 6887              		.align	2
 6888              		.global	USB_service
 6889              		.thumb
 6890              		.thumb_func
 6891              		.type	USB_service, %function
 6892              	USB_service:
 6893              	.LFB83:
1985:main.c        **** 
1986:main.c        **** 
1987:main.c        **** 
1988:main.c        **** void USB_service(void)
1989:main.c        **** {
 6894              		.loc 1 1989 0
 6895              		.cfi_startproc
 6896              		@ args = 0, pretend = 0, frame = 0
 6897              		@ frame_needed = 1, uses_anonymous_args = 0
 6898 0000 80B5     		push	{r7, lr}
 6899              		.cfi_def_cfa_offset 8
 6900              		.cfi_offset 7, -8
 6901              		.cfi_offset 14, -4
 6902 0002 00AF     		add	r7, sp, #0
 6903              		.cfi_def_cfa_register 7
1990:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 6904              		.loc 1 1990 0
 6905 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 6906 0008 0346     		mov	r3, r0
 6907 000a 002B     		cmp	r3, #0
 6908 000c 10D0     		beq	.L295
1991:main.c        ****     {
1992:main.c        ****         if(USB_GetConfiguration() != 0u)   
 6909              		.loc 1 1992 0
 6910 000e FFF7FEFF 		bl	USB_GetConfiguration
 6911 0012 0346     		mov	r3, r0
 6912 0014 002B     		cmp	r3, #0
 6913 0016 0BD0     		beq	.L295
1993:main.c        ****         {
1994:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1995:main.c        ****             
1996:main.c        ****             //SleepTimer_Start();
1997:main.c        ****         	
1998:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 159


 6914              		.loc 1 1998 0
 6915 0018 244B     		ldr	r3, .L301
 6916 001a 1B78     		ldrb	r3, [r3]
 6917 001c DBB2     		uxtb	r3, r3
 6918 001e 002B     		cmp	r3, #0
 6919 0020 06D0     		beq	.L295
 6920              		.loc 1 1998 0 is_stmt 0 discriminator 1
 6921 0022 FFF7FEFF 		bl	USB_VBusPresent
 6922 0026 0346     		mov	r3, r0
 6923 0028 002B     		cmp	r3, #0
 6924 002a 01D0     		beq	.L295
1999:main.c        ****             {
2000:main.c        ****                 USB_MIDI_EP_Init();
 6925              		.loc 1 2000 0 is_stmt 1
 6926 002c FFF7FEFF 		bl	USB_MIDI_Init
 6927              	.L295:
2001:main.c        ****             }
2002:main.c        ****         }
2003:main.c        ****         else
2004:main.c        ****         {
2005:main.c        ****             //SleepTimer_Stop();
2006:main.c        ****         }    
2007:main.c        ****     }        
2008:main.c        ****     
2009:main.c        ****     if(USB_GetConfiguration() != 0u)    
 6928              		.loc 1 2009 0
 6929 0030 FFF7FEFF 		bl	USB_GetConfiguration
 6930 0034 0346     		mov	r3, r0
 6931 0036 002B     		cmp	r3, #0
 6932 0038 35D0     		beq	.L300
2010:main.c        ****     {
2011:main.c        **** 
2012:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
2013:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 6933              		.loc 1 2013 0
 6934 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 6935 003e 0346     		mov	r3, r0
 6936 0040 002B     		cmp	r3, #0
 6937 0042 18D0     		beq	.L298
2014:main.c        ****         {
2015:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 6938              		.loc 1 2015 0
 6939 0044 1A4B     		ldr	r3, .L301+4
 6940 0046 1B78     		ldrb	r3, [r3]
 6941 0048 D8B2     		uxtb	r0, r3
 6942 004a 1A4B     		ldr	r3, .L301+8
 6943 004c 1B78     		ldrb	r3, [r3]
 6944 004e DBB2     		uxtb	r3, r3
 6945 0050 9BB2     		uxth	r3, r3
 6946 0052 1A46     		mov	r2, r3
 6947 0054 1849     		ldr	r1, .L301+12
 6948 0056 FFF7FEFF 		bl	USB_LoadInEP
2016:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
2017:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6949              		.loc 1 2017 0
 6950 005a 184B     		ldr	r3, .L301+16
 6951 005c 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 160


 6952 005e DBB2     		uxtb	r3, r3
 6953 0060 4022     		movs	r2, #64
 6954 0062 1749     		ldr	r1, .L301+20
 6955 0064 1846     		mov	r0, r3
 6956 0066 FFF7FEFF 		bl	USB_ReadOutEP
2018:main.c        ****                                              /* configuring the DMAs for the first time only, the d
2019:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
2020:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6957              		.loc 1 2020 0
 6958 006a 144B     		ldr	r3, .L301+16
 6959 006c 1B78     		ldrb	r3, [r3]
 6960 006e DBB2     		uxtb	r3, r3
 6961 0070 1846     		mov	r0, r3
 6962 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6963              	.L298:
2021:main.c        ****         }
2022:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6964              		.loc 1 2022 0
 6965 0076 0D4B     		ldr	r3, .L301
 6966 0078 1B78     		ldrb	r3, [r3]
 6967 007a DBB2     		uxtb	r3, r3
 6968 007c 002B     		cmp	r3, #0
 6969 007e 06D0     		beq	.L299
 6970              		.loc 1 2022 0 is_stmt 0 discriminator 1
 6971 0080 FFF7FEFF 		bl	USB_VBusPresent
 6972 0084 0346     		mov	r3, r0
 6973 0086 002B     		cmp	r3, #0
 6974 0088 01D0     		beq	.L299
2023:main.c        ****         {
2024:main.c        ****             USB_MIDI_IN_Service();
 6975              		.loc 1 2024 0 is_stmt 1
 6976 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6977              	.L299:
2025:main.c        ****         }
2026:main.c        **** 
2027:main.c        **** 
2028:main.c        **** 
2029:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6978              		.loc 1 2029 0
 6979 008e 074B     		ldr	r3, .L301
 6980 0090 1B78     		ldrb	r3, [r3]
 6981 0092 DBB2     		uxtb	r3, r3
 6982 0094 002B     		cmp	r3, #0
 6983 0096 06D0     		beq	.L300
 6984              		.loc 1 2029 0 is_stmt 0 discriminator 1
 6985 0098 FFF7FEFF 		bl	USB_VBusPresent
 6986 009c 0346     		mov	r3, r0
 6987 009e 002B     		cmp	r3, #0
 6988 00a0 01D0     		beq	.L300
2030:main.c        ****         {
2031:main.c        ****             USB_MIDI_OUT_Service();
 6989              		.loc 1 2031 0 is_stmt 1
 6990 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6991              	.L300:
2032:main.c        ****         }
2033:main.c        ****     }
2034:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 161


2035:main.c        **** }
 6992              		.loc 1 2035 0
 6993 00a6 00BF     		nop
 6994 00a8 80BD     		pop	{r7, pc}
 6995              	.L302:
 6996 00aa 00BF     		.align	2
 6997              	.L301:
 6998 00ac 00000000 		.word	USB_active
 6999 00b0 00000000 		.word	USB_midi_in_ep
 7000 00b4 00000000 		.word	USB_midiInPointer
 7001 00b8 00000000 		.word	USB_midiInBuffer
 7002 00bc 00000000 		.word	USB_midi_out_ep
 7003 00c0 00000000 		.word	USB_midiOutBuffer
 7004              		.cfi_endproc
 7005              	.LFE83:
 7006              		.size	USB_service, .-USB_service
 7007              		.section	.text.log2f_approx,"ax",%progbits
 7008              		.align	2
 7009              		.global	log2f_approx
 7010              		.thumb
 7011              		.thumb_func
 7012              		.type	log2f_approx, %function
 7013              	log2f_approx:
 7014              	.LFB84:
2036:main.c        **** 
2037:main.c        **** // This is a fast approximation to log2()
2038:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
2039:main.c        **** float log2f_approx(float X) {
 7015              		.loc 1 2039 0
 7016              		.cfi_startproc
 7017              		@ args = 0, pretend = 0, frame = 24
 7018              		@ frame_needed = 1, uses_anonymous_args = 0
 7019 0000 80B5     		push	{r7, lr}
 7020              		.cfi_def_cfa_offset 8
 7021              		.cfi_offset 7, -8
 7022              		.cfi_offset 14, -4
 7023 0002 86B0     		sub	sp, sp, #24
 7024              		.cfi_def_cfa_offset 32
 7025 0004 00AF     		add	r7, sp, #0
 7026              		.cfi_def_cfa_register 7
 7027 0006 7860     		str	r0, [r7, #4]	@ float
2040:main.c        ****   float Y, F;
2041:main.c        ****   int E;
2042:main.c        ****   F = frexpf(fabsf(X), &E);
 7028              		.loc 1 2042 0
 7029 0008 7B68     		ldr	r3, [r7, #4]
 7030 000a 23F00043 		bic	r3, r3, #-2147483648
 7031 000e 07F10C02 		add	r2, r7, #12
 7032 0012 1146     		mov	r1, r2
 7033 0014 1846     		mov	r0, r3
 7034 0016 FFF7FEFF 		bl	frexpf
 7035 001a 7861     		str	r0, [r7, #20]	@ float
2043:main.c        ****   Y = 1.23149591368684f;
 7036              		.loc 1 2043 0
 7037 001c 1A4B     		ldr	r3, .L305
 7038 001e 3B61     		str	r3, [r7, #16]	@ float
2044:main.c        ****   Y *= F;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 162


 7039              		.loc 1 2044 0
 7040 0020 7969     		ldr	r1, [r7, #20]	@ float
 7041 0022 3869     		ldr	r0, [r7, #16]	@ float
 7042 0024 FFF7FEFF 		bl	__aeabi_fmul
 7043 0028 0346     		mov	r3, r0
 7044 002a 3B61     		str	r3, [r7, #16]	@ float
2045:main.c        ****   Y += -4.11852516267426f;
 7045              		.loc 1 2045 0
 7046 002c 1749     		ldr	r1, .L305+4
 7047 002e 3869     		ldr	r0, [r7, #16]	@ float
 7048 0030 FFF7FEFF 		bl	__aeabi_fsub
 7049 0034 0346     		mov	r3, r0
 7050 0036 3B61     		str	r3, [r7, #16]	@ float
2046:main.c        ****   Y *= F;
 7051              		.loc 1 2046 0
 7052 0038 7969     		ldr	r1, [r7, #20]	@ float
 7053 003a 3869     		ldr	r0, [r7, #16]	@ float
 7054 003c FFF7FEFF 		bl	__aeabi_fmul
 7055 0040 0346     		mov	r3, r0
 7056 0042 3B61     		str	r3, [r7, #16]	@ float
2047:main.c        ****   Y += 6.02197014179219f;
 7057              		.loc 1 2047 0
 7058 0044 1249     		ldr	r1, .L305+8
 7059 0046 3869     		ldr	r0, [r7, #16]	@ float
 7060 0048 FFF7FEFF 		bl	__aeabi_fadd
 7061 004c 0346     		mov	r3, r0
 7062 004e 3B61     		str	r3, [r7, #16]	@ float
2048:main.c        ****   Y *= F;
 7063              		.loc 1 2048 0
 7064 0050 7969     		ldr	r1, [r7, #20]	@ float
 7065 0052 3869     		ldr	r0, [r7, #16]	@ float
 7066 0054 FFF7FEFF 		bl	__aeabi_fmul
 7067 0058 0346     		mov	r3, r0
 7068 005a 3B61     		str	r3, [r7, #16]	@ float
2049:main.c        ****   Y += -3.13396450166353f;
 7069              		.loc 1 2049 0
 7070 005c 0D49     		ldr	r1, .L305+12
 7071 005e 3869     		ldr	r0, [r7, #16]	@ float
 7072 0060 FFF7FEFF 		bl	__aeabi_fsub
 7073 0064 0346     		mov	r3, r0
 7074 0066 3B61     		str	r3, [r7, #16]	@ float
2050:main.c        ****   Y += E;
 7075              		.loc 1 2050 0
 7076 0068 FB68     		ldr	r3, [r7, #12]
 7077 006a 1846     		mov	r0, r3
 7078 006c FFF7FEFF 		bl	__aeabi_i2f
 7079 0070 0346     		mov	r3, r0
 7080 0072 1946     		mov	r1, r3
 7081 0074 3869     		ldr	r0, [r7, #16]	@ float
 7082 0076 FFF7FEFF 		bl	__aeabi_fadd
 7083 007a 0346     		mov	r3, r0
 7084 007c 3B61     		str	r3, [r7, #16]	@ float
2051:main.c        ****   return(Y);
 7085              		.loc 1 2051 0
 7086 007e 3B69     		ldr	r3, [r7, #16]	@ float
2052:main.c        **** }
 7087              		.loc 1 2052 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 163


 7088 0080 1846     		mov	r0, r3
 7089 0082 1837     		adds	r7, r7, #24
 7090              		.cfi_def_cfa_offset 8
 7091 0084 BD46     		mov	sp, r7
 7092              		.cfi_def_cfa_register 13
 7093              		@ sp needed
 7094 0086 80BD     		pop	{r7, pc}
 7095              	.L306:
 7096              		.align	2
 7097              	.L305:
 7098 0088 A8A19D3F 		.word	1067295144
 7099 008c F5CA8340 		.word	1082378997
 7100 0090 FBB3C040 		.word	1086370811
 7101 0094 E0924840 		.word	1078498016
 7102              		.cfi_endproc
 7103              	.LFE84:
 7104              		.size	log2f_approx, .-log2f_approx
 7105              		.global	prevNotes
 7106              		.bss
 7107              		.align	2
 7108              		.type	prevNotes, %object
 7109              		.size	prevNotes, 48
 7110              	prevNotes:
 7111 00d8 00000000 		.space	48
 7111      00000000 
 7111      00000000 
 7111      00000000 
 7111      00000000 
 7112              		.section	.text.noteEvent,"ax",%progbits
 7113              		.align	2
 7114              		.global	noteEvent
 7115              		.thumb
 7116              		.thumb_func
 7117              		.type	noteEvent, %function
 7118              	noteEvent:
 7119              	.LFB85:
2053:main.c        **** 
2054:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
2055:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
2056:main.c        **** 
2057:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
2058:main.c        **** 
2059:main.c        **** void noteEvent(int string)
2060:main.c        **** {
 7120              		.loc 1 2060 0
 7121              		.cfi_startproc
 7122              		@ args = 0, pretend = 0, frame = 24
 7123              		@ frame_needed = 1, uses_anonymous_args = 0
 7124 0000 80B5     		push	{r7, lr}
 7125              		.cfi_def_cfa_offset 8
 7126              		.cfi_offset 7, -8
 7127              		.cfi_offset 14, -4
 7128 0002 86B0     		sub	sp, sp, #24
 7129              		.cfi_def_cfa_offset 32
 7130 0004 00AF     		add	r7, sp, #0
 7131              		.cfi_def_cfa_register 7
 7132 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 164


2061:main.c        ****     
2062:main.c        ****     /*
2063:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
2064:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
2065:main.c        ****     int vInt  = (int) (v*4.0f);
2066:main.c        ****     if (vInt > 127)
2067:main.c        ****     {
2068:main.c        ****         vInt = 127;
2069:main.c        ****     }
2070:main.c        ****     */
2071:main.c        ****     uint16_t velocity = strings[string];
 7133              		.loc 1 2071 0
 7134 0008 2C4A     		ldr	r2, .L312
 7135 000a 7B68     		ldr	r3, [r7, #4]
 7136 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 7137 0010 FB82     		strh	r3, [r7, #22]	@ movhi
2072:main.c        ****     if (velocity > 0)
 7138              		.loc 1 2072 0
 7139 0012 FB8A     		ldrh	r3, [r7, #22]
 7140 0014 002B     		cmp	r3, #0
 7141 0016 43D0     		beq	.L308
 7142              	.LBB38:
2073:main.c        ****     {
2074:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
2075:main.c        ****         float tempVel = (float)velocity;
 7143              		.loc 1 2075 0
 7144 0018 FB8A     		ldrh	r3, [r7, #22]
 7145 001a 1846     		mov	r0, r3
 7146 001c FFF7FEFF 		bl	__aeabi_ui2f
 7147 0020 0346     		mov	r3, r0
 7148 0022 3B61     		str	r3, [r7, #16]	@ float
2076:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 7149              		.loc 1 2076 0
 7150 0024 4FF05E51 		mov	r1, #931135488
 7151 0028 3869     		ldr	r0, [r7, #16]	@ float
 7152 002a FFF7FEFF 		bl	__aeabi_fmul
 7153 002e 0346     		mov	r3, r0
 7154 0030 3B61     		str	r3, [r7, #16]	@ float
2077:main.c        ****         tempVel = sqrtf(tempVel);
 7155              		.loc 1 2077 0
 7156 0032 3869     		ldr	r0, [r7, #16]	@ float
 7157 0034 FFF7FEFF 		bl	sqrtf
 7158 0038 3861     		str	r0, [r7, #16]	@ float
2078:main.c        ****         tempVel = tempVel - 0.0239372430f;
 7159              		.loc 1 2078 0
 7160 003a 2149     		ldr	r1, .L312+4
 7161 003c 3869     		ldr	r0, [r7, #16]	@ float
 7162 003e FFF7FEFF 		bl	__aeabi_fsub
 7163 0042 0346     		mov	r3, r0
 7164 0044 3B61     		str	r3, [r7, #16]	@ float
2079:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 7165              		.loc 1 2079 0
 7166 0046 1F49     		ldr	r1, .L312+8
 7167 0048 3869     		ldr	r0, [r7, #16]	@ float
 7168 004a FFF7FEFF 		bl	__aeabi_fmul
 7169 004e 0346     		mov	r3, r0
 7170 0050 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 165


2080:main.c        ****         velocity = (int)tempVel;
 7171              		.loc 1 2080 0
 7172 0052 3869     		ldr	r0, [r7, #16]	@ float
 7173 0054 FFF7FEFF 		bl	__aeabi_f2iz
 7174 0058 0346     		mov	r3, r0
 7175 005a FB82     		strh	r3, [r7, #22]	@ movhi
2081:main.c        ****         
2082:main.c        **** 
2083:main.c        ****         if (velocity > 127)
 7176              		.loc 1 2083 0
 7177 005c FB8A     		ldrh	r3, [r7, #22]
 7178 005e 7F2B     		cmp	r3, #127
 7179 0060 01D9     		bls	.L309
2084:main.c        ****         {
2085:main.c        ****             velocity = 127;
 7180              		.loc 1 2085 0
 7181 0062 7F23     		movs	r3, #127
 7182 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 7183              	.L309:
2086:main.c        ****         }
2087:main.c        ****         
2088:main.c        ****         //only update octave on note-ons
2089:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
2090:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 7184              		.loc 1 2090 0
 7185 0066 184B     		ldr	r3, .L312+12
 7186 0068 1B68     		ldr	r3, [r3]
 7187 006a 1A1F     		subs	r2, r3, #4
 7188 006c 1346     		mov	r3, r2
 7189 006e 5B00     		lsls	r3, r3, #1
 7190 0070 1344     		add	r3, r3, r2
 7191 0072 9B00     		lsls	r3, r3, #2
 7192 0074 1946     		mov	r1, r3
 7193 0076 154A     		ldr	r2, .L312+16
 7194 0078 7B68     		ldr	r3, [r7, #4]
 7195 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7196 007e 0B44     		add	r3, r3, r1
 7197 0080 FB60     		str	r3, [r7, #12]
2091:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 7198              		.loc 1 2091 0
 7199 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7200 0084 DBB2     		uxtb	r3, r3
 7201 0086 1946     		mov	r1, r3
 7202 0088 7B68     		ldr	r3, [r7, #4]
 7203 008a 0133     		adds	r3, r3, #1
 7204 008c 1A46     		mov	r2, r3
 7205 008e F868     		ldr	r0, [r7, #12]
 7206 0090 FFF7FEFF 		bl	sendMIDINoteOn
2092:main.c        ****         prevNotes[string] = noteToSend;
 7207              		.loc 1 2092 0
 7208 0094 0E49     		ldr	r1, .L312+20
 7209 0096 7B68     		ldr	r3, [r7, #4]
 7210 0098 FA68     		ldr	r2, [r7, #12]
 7211 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 7212              	.LBE38:
2093:main.c        ****             
2094:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 166


2095:main.c        ****     else
2096:main.c        ****     {
2097:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
2098:main.c        ****     }
2099:main.c        **** 
2100:main.c        **** }
 7213              		.loc 1 2100 0
 7214 009e 09E0     		b	.L311
 7215              	.L308:
2097:main.c        ****     }
 7216              		.loc 1 2097 0
 7217 00a0 0B4A     		ldr	r2, .L312+20
 7218 00a2 7B68     		ldr	r3, [r7, #4]
 7219 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 7220 00a8 7B68     		ldr	r3, [r7, #4]
 7221 00aa 0133     		adds	r3, r3, #1
 7222 00ac 1A46     		mov	r2, r3
 7223 00ae 0021     		movs	r1, #0
 7224 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 7225              	.L311:
 7226              		.loc 1 2100 0
 7227 00b4 00BF     		nop
 7228 00b6 1837     		adds	r7, r7, #24
 7229              		.cfi_def_cfa_offset 8
 7230 00b8 BD46     		mov	sp, r7
 7231              		.cfi_def_cfa_register 13
 7232              		@ sp needed
 7233 00ba 80BD     		pop	{r7, pc}
 7234              	.L313:
 7235              		.align	2
 7236              	.L312:
 7237 00bc 00000000 		.word	strings
 7238 00c0 0918C43C 		.word	1019484169
 7239 00c4 551D0243 		.word	1124212053
 7240 00c8 00000000 		.word	octave
 7241 00cc 00000000 		.word	openStringMIDI_Int
 7242 00d0 00000000 		.word	prevNotes
 7243              		.cfi_endproc
 7244              	.LFE85:
 7245              		.size	noteEvent, .-noteEvent
 7246              		.section	.text.CCEvent,"ax",%progbits
 7247              		.align	2
 7248              		.global	CCEvent
 7249              		.thumb
 7250              		.thumb_func
 7251              		.type	CCEvent, %function
 7252              	CCEvent:
 7253              	.LFB86:
2101:main.c        **** 
2102:main.c        **** void CCEvent(int cc, int val)
2103:main.c        **** {
 7254              		.loc 1 2103 0
 7255              		.cfi_startproc
 7256              		@ args = 0, pretend = 0, frame = 8
 7257              		@ frame_needed = 1, uses_anonymous_args = 0
 7258 0000 80B5     		push	{r7, lr}
 7259              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 167


 7260              		.cfi_offset 7, -8
 7261              		.cfi_offset 14, -4
 7262 0002 82B0     		sub	sp, sp, #8
 7263              		.cfi_def_cfa_offset 16
 7264 0004 00AF     		add	r7, sp, #0
 7265              		.cfi_def_cfa_register 7
 7266 0006 7860     		str	r0, [r7, #4]
 7267 0008 3960     		str	r1, [r7]
2104:main.c        ****     
2105:main.c        ****     sendMIDIControlChange(cc, val, 0);
 7268              		.loc 1 2105 0
 7269 000a 0022     		movs	r2, #0
 7270 000c 3968     		ldr	r1, [r7]
 7271 000e 7868     		ldr	r0, [r7, #4]
 7272 0010 FFF7FEFF 		bl	sendMIDIControlChange
2106:main.c        **** }
 7273              		.loc 1 2106 0
 7274 0014 00BF     		nop
 7275 0016 0837     		adds	r7, r7, #8
 7276              		.cfi_def_cfa_offset 8
 7277 0018 BD46     		mov	sp, r7
 7278              		.cfi_def_cfa_register 13
 7279              		@ sp needed
 7280 001a 80BD     		pop	{r7, pc}
 7281              		.cfi_endproc
 7282              	.LFE86:
 7283              		.size	CCEvent, .-CCEvent
 7284              		.section	.text.sendMIDINoteOn,"ax",%progbits
 7285              		.align	2
 7286              		.global	sendMIDINoteOn
 7287              		.thumb
 7288              		.thumb_func
 7289              		.type	sendMIDINoteOn, %function
 7290              	sendMIDINoteOn:
 7291              	.LFB87:
2107:main.c        **** 
2108:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
2109:main.c        **** {  
 7292              		.loc 1 2109 0
 7293              		.cfi_startproc
 7294              		@ args = 0, pretend = 0, frame = 16
 7295              		@ frame_needed = 1, uses_anonymous_args = 0
 7296 0000 80B5     		push	{r7, lr}
 7297              		.cfi_def_cfa_offset 8
 7298              		.cfi_offset 7, -8
 7299              		.cfi_offset 14, -4
 7300 0002 84B0     		sub	sp, sp, #16
 7301              		.cfi_def_cfa_offset 24
 7302 0004 00AF     		add	r7, sp, #0
 7303              		.cfi_def_cfa_register 7
 7304 0006 F860     		str	r0, [r7, #12]
 7305 0008 B960     		str	r1, [r7, #8]
 7306 000a 7A60     		str	r2, [r7, #4]
2110:main.c        ****    
2111:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 7307              		.loc 1 2111 0
 7308 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 168


 7309 000e DBB2     		uxtb	r3, r3
 7310 0010 703B     		subs	r3, r3, #112
 7311 0012 DAB2     		uxtb	r2, r3
 7312 0014 114B     		ldr	r3, .L317
 7313 0016 1A70     		strb	r2, [r3]
2112:main.c        ****     midiMsg[1] = MIDInoteNum;
 7314              		.loc 1 2112 0
 7315 0018 FB68     		ldr	r3, [r7, #12]
 7316 001a DAB2     		uxtb	r2, r3
 7317 001c 0F4B     		ldr	r3, .L317
 7318 001e 5A70     		strb	r2, [r3, #1]
2113:main.c        ****     midiMsg[2] = velocity;	
 7319              		.loc 1 2113 0
 7320 0020 BB68     		ldr	r3, [r7, #8]
 7321 0022 DAB2     		uxtb	r2, r3
 7322 0024 0D4B     		ldr	r3, .L317
 7323 0026 9A70     		strb	r2, [r3, #2]
2114:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7324              		.loc 1 2114 0
 7325 0028 0D4B     		ldr	r3, .L317+4
 7326 002a 1B78     		ldrb	r3, [r3]
 7327 002c DBB2     		uxtb	r3, r3
 7328 002e 002B     		cmp	r3, #0
 7329 0030 09D0     		beq	.L316
 7330              		.loc 1 2114 0 is_stmt 0 discriminator 1
 7331 0032 FFF7FEFF 		bl	USB_VBusPresent
 7332 0036 0346     		mov	r3, r0
 7333 0038 002B     		cmp	r3, #0
 7334 003a 04D0     		beq	.L316
2115:main.c        ****     {
2116:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7335              		.loc 1 2116 0 is_stmt 1
 7336 003c 0022     		movs	r2, #0
 7337 003e 0749     		ldr	r1, .L317
 7338 0040 0320     		movs	r0, #3
 7339 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7340              	.L316:
2117:main.c        ****     } 
2118:main.c        ****     midiSent += 4;
 7341              		.loc 1 2118 0
 7342 0046 074B     		ldr	r3, .L317+8
 7343 0048 1B88     		ldrh	r3, [r3]
 7344 004a 0433     		adds	r3, r3, #4
 7345 004c 9AB2     		uxth	r2, r3
 7346 004e 054B     		ldr	r3, .L317+8
 7347 0050 1A80     		strh	r2, [r3]	@ movhi
2119:main.c        **** }
 7348              		.loc 1 2119 0
 7349 0052 00BF     		nop
 7350 0054 1037     		adds	r7, r7, #16
 7351              		.cfi_def_cfa_offset 8
 7352 0056 BD46     		mov	sp, r7
 7353              		.cfi_def_cfa_register 13
 7354              		@ sp needed
 7355 0058 80BD     		pop	{r7, pc}
 7356              	.L318:
 7357 005a 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 169


 7358              	.L317:
 7359 005c 00000000 		.word	midiMsg
 7360 0060 00000000 		.word	USB_active
 7361 0064 00000000 		.word	midiSent
 7362              		.cfi_endproc
 7363              	.LFE87:
 7364              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 7365              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 7366              		.align	2
 7367              		.global	sendMIDIPolyKeyPressure
 7368              		.thumb
 7369              		.thumb_func
 7370              		.type	sendMIDIPolyKeyPressure, %function
 7371              	sendMIDIPolyKeyPressure:
 7372              	.LFB88:
2120:main.c        **** 
2121:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
2122:main.c        **** {
 7373              		.loc 1 2122 0
 7374              		.cfi_startproc
 7375              		@ args = 0, pretend = 0, frame = 16
 7376              		@ frame_needed = 1, uses_anonymous_args = 0
 7377 0000 80B5     		push	{r7, lr}
 7378              		.cfi_def_cfa_offset 8
 7379              		.cfi_offset 7, -8
 7380              		.cfi_offset 14, -4
 7381 0002 84B0     		sub	sp, sp, #16
 7382              		.cfi_def_cfa_offset 24
 7383 0004 00AF     		add	r7, sp, #0
 7384              		.cfi_def_cfa_register 7
 7385 0006 F860     		str	r0, [r7, #12]
 7386 0008 B960     		str	r1, [r7, #8]
 7387 000a 7A60     		str	r2, [r7, #4]
2123:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 7388              		.loc 1 2123 0
 7389 000c 7B68     		ldr	r3, [r7, #4]
 7390 000e DBB2     		uxtb	r3, r3
 7391 0010 603B     		subs	r3, r3, #96
 7392 0012 DAB2     		uxtb	r2, r3
 7393 0014 114B     		ldr	r3, .L321
 7394 0016 1A70     		strb	r2, [r3]
2124:main.c        ****     midiMsg[1] = MIDInoteNum;
 7395              		.loc 1 2124 0
 7396 0018 FB68     		ldr	r3, [r7, #12]
 7397 001a DAB2     		uxtb	r2, r3
 7398 001c 0F4B     		ldr	r3, .L321
 7399 001e 5A70     		strb	r2, [r3, #1]
2125:main.c        ****     midiMsg[2] = pressure;		
 7400              		.loc 1 2125 0
 7401 0020 BB68     		ldr	r3, [r7, #8]
 7402 0022 DAB2     		uxtb	r2, r3
 7403 0024 0D4B     		ldr	r3, .L321
 7404 0026 9A70     		strb	r2, [r3, #2]
2126:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7405              		.loc 1 2126 0
 7406 0028 0D4B     		ldr	r3, .L321+4
 7407 002a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 170


 7408 002c DBB2     		uxtb	r3, r3
 7409 002e 002B     		cmp	r3, #0
 7410 0030 09D0     		beq	.L320
 7411              		.loc 1 2126 0 is_stmt 0 discriminator 1
 7412 0032 FFF7FEFF 		bl	USB_VBusPresent
 7413 0036 0346     		mov	r3, r0
 7414 0038 002B     		cmp	r3, #0
 7415 003a 04D0     		beq	.L320
2127:main.c        ****     {
2128:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7416              		.loc 1 2128 0 is_stmt 1
 7417 003c 0022     		movs	r2, #0
 7418 003e 0749     		ldr	r1, .L321
 7419 0040 0320     		movs	r0, #3
 7420 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7421              	.L320:
2129:main.c        ****     } 
2130:main.c        ****     midiSent += 4;
 7422              		.loc 1 2130 0
 7423 0046 074B     		ldr	r3, .L321+8
 7424 0048 1B88     		ldrh	r3, [r3]
 7425 004a 0433     		adds	r3, r3, #4
 7426 004c 9AB2     		uxth	r2, r3
 7427 004e 054B     		ldr	r3, .L321+8
 7428 0050 1A80     		strh	r2, [r3]	@ movhi
2131:main.c        **** }
 7429              		.loc 1 2131 0
 7430 0052 00BF     		nop
 7431 0054 1037     		adds	r7, r7, #16
 7432              		.cfi_def_cfa_offset 8
 7433 0056 BD46     		mov	sp, r7
 7434              		.cfi_def_cfa_register 13
 7435              		@ sp needed
 7436 0058 80BD     		pop	{r7, pc}
 7437              	.L322:
 7438 005a 00BF     		.align	2
 7439              	.L321:
 7440 005c 00000000 		.word	midiMsg
 7441 0060 00000000 		.word	USB_active
 7442 0064 00000000 		.word	midiSent
 7443              		.cfi_endproc
 7444              	.LFE88:
 7445              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 7446              		.section	.text.sendMIDIControlChange,"ax",%progbits
 7447              		.align	2
 7448              		.global	sendMIDIControlChange
 7449              		.thumb
 7450              		.thumb_func
 7451              		.type	sendMIDIControlChange, %function
 7452              	sendMIDIControlChange:
 7453              	.LFB89:
2132:main.c        **** 
2133:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
2134:main.c        **** {
 7454              		.loc 1 2134 0
 7455              		.cfi_startproc
 7456              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 171


 7457              		@ frame_needed = 1, uses_anonymous_args = 0
 7458 0000 80B5     		push	{r7, lr}
 7459              		.cfi_def_cfa_offset 8
 7460              		.cfi_offset 7, -8
 7461              		.cfi_offset 14, -4
 7462 0002 84B0     		sub	sp, sp, #16
 7463              		.cfi_def_cfa_offset 24
 7464 0004 00AF     		add	r7, sp, #0
 7465              		.cfi_def_cfa_register 7
 7466 0006 F860     		str	r0, [r7, #12]
 7467 0008 B960     		str	r1, [r7, #8]
 7468 000a 7A60     		str	r2, [r7, #4]
2135:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 7469              		.loc 1 2135 0
 7470 000c 7B68     		ldr	r3, [r7, #4]
 7471 000e DBB2     		uxtb	r3, r3
 7472 0010 503B     		subs	r3, r3, #80
 7473 0012 DAB2     		uxtb	r2, r3
 7474 0014 114B     		ldr	r3, .L325
 7475 0016 1A70     		strb	r2, [r3]
2136:main.c        ****     midiMsg[1] = CCnum;
 7476              		.loc 1 2136 0
 7477 0018 FB68     		ldr	r3, [r7, #12]
 7478 001a DAB2     		uxtb	r2, r3
 7479 001c 0F4B     		ldr	r3, .L325
 7480 001e 5A70     		strb	r2, [r3, #1]
2137:main.c        ****     midiMsg[2] = CCval;			
 7481              		.loc 1 2137 0
 7482 0020 BB68     		ldr	r3, [r7, #8]
 7483 0022 DAB2     		uxtb	r2, r3
 7484 0024 0D4B     		ldr	r3, .L325
 7485 0026 9A70     		strb	r2, [r3, #2]
2138:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7486              		.loc 1 2138 0
 7487 0028 0D4B     		ldr	r3, .L325+4
 7488 002a 1B78     		ldrb	r3, [r3]
 7489 002c DBB2     		uxtb	r3, r3
 7490 002e 002B     		cmp	r3, #0
 7491 0030 09D0     		beq	.L324
 7492              		.loc 1 2138 0 is_stmt 0 discriminator 1
 7493 0032 FFF7FEFF 		bl	USB_VBusPresent
 7494 0036 0346     		mov	r3, r0
 7495 0038 002B     		cmp	r3, #0
 7496 003a 04D0     		beq	.L324
2139:main.c        ****     {
2140:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7497              		.loc 1 2140 0 is_stmt 1
 7498 003c 0022     		movs	r2, #0
 7499 003e 0749     		ldr	r1, .L325
 7500 0040 0320     		movs	r0, #3
 7501 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7502              	.L324:
2141:main.c        ****     } 
2142:main.c        ****     midiSent += 4;
 7503              		.loc 1 2142 0
 7504 0046 074B     		ldr	r3, .L325+8
 7505 0048 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 172


 7506 004a 0433     		adds	r3, r3, #4
 7507 004c 9AB2     		uxth	r2, r3
 7508 004e 054B     		ldr	r3, .L325+8
 7509 0050 1A80     		strh	r2, [r3]	@ movhi
2143:main.c        **** }
 7510              		.loc 1 2143 0
 7511 0052 00BF     		nop
 7512 0054 1037     		adds	r7, r7, #16
 7513              		.cfi_def_cfa_offset 8
 7514 0056 BD46     		mov	sp, r7
 7515              		.cfi_def_cfa_register 13
 7516              		@ sp needed
 7517 0058 80BD     		pop	{r7, pc}
 7518              	.L326:
 7519 005a 00BF     		.align	2
 7520              	.L325:
 7521 005c 00000000 		.word	midiMsg
 7522 0060 00000000 		.word	USB_active
 7523 0064 00000000 		.word	midiSent
 7524              		.cfi_endproc
 7525              	.LFE89:
 7526              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 7527              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 7528              		.align	2
 7529              		.global	sendMIDIPitchBend
 7530              		.thumb
 7531              		.thumb_func
 7532              		.type	sendMIDIPitchBend, %function
 7533              	sendMIDIPitchBend:
 7534              	.LFB90:
2144:main.c        **** 
2145:main.c        **** void sendMIDIPitchBend(int val, int channel)
2146:main.c        **** {
 7535              		.loc 1 2146 0
 7536              		.cfi_startproc
 7537              		@ args = 0, pretend = 0, frame = 8
 7538              		@ frame_needed = 1, uses_anonymous_args = 0
 7539 0000 80B5     		push	{r7, lr}
 7540              		.cfi_def_cfa_offset 8
 7541              		.cfi_offset 7, -8
 7542              		.cfi_offset 14, -4
 7543 0002 82B0     		sub	sp, sp, #8
 7544              		.cfi_def_cfa_offset 16
 7545 0004 00AF     		add	r7, sp, #0
 7546              		.cfi_def_cfa_register 7
 7547 0006 7860     		str	r0, [r7, #4]
 7548 0008 3960     		str	r1, [r7]
2147:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 7549              		.loc 1 2147 0
 7550 000a 3B68     		ldr	r3, [r7]
 7551 000c DBB2     		uxtb	r3, r3
 7552 000e 203B     		subs	r3, r3, #32
 7553 0010 DAB2     		uxtb	r2, r3
 7554 0012 134B     		ldr	r3, .L329
 7555 0014 1A70     		strb	r2, [r3]
2148:main.c        ****     midiMsg[1] = (val & 127); //LSB
 7556              		.loc 1 2148 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 173


 7557 0016 7B68     		ldr	r3, [r7, #4]
 7558 0018 DBB2     		uxtb	r3, r3
 7559 001a 03F07F03 		and	r3, r3, #127
 7560 001e DAB2     		uxtb	r2, r3
 7561 0020 0F4B     		ldr	r3, .L329
 7562 0022 5A70     		strb	r2, [r3, #1]
2149:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 7563              		.loc 1 2149 0
 7564 0024 7B68     		ldr	r3, [r7, #4]
 7565 0026 DB11     		asrs	r3, r3, #7
 7566 0028 DAB2     		uxtb	r2, r3
 7567 002a 0D4B     		ldr	r3, .L329
 7568 002c 9A70     		strb	r2, [r3, #2]
2150:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 7569              		.loc 1 2150 0
 7570 002e 0D4B     		ldr	r3, .L329+4
 7571 0030 1B78     		ldrb	r3, [r3]
 7572 0032 DBB2     		uxtb	r3, r3
 7573 0034 002B     		cmp	r3, #0
 7574 0036 09D0     		beq	.L328
 7575              		.loc 1 2150 0 is_stmt 0 discriminator 1
 7576 0038 FFF7FEFF 		bl	USB_VBusPresent
 7577 003c 0346     		mov	r3, r0
 7578 003e 002B     		cmp	r3, #0
 7579 0040 04D0     		beq	.L328
2151:main.c        ****     {
2152:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7580              		.loc 1 2152 0 is_stmt 1
 7581 0042 0022     		movs	r2, #0
 7582 0044 0649     		ldr	r1, .L329
 7583 0046 0320     		movs	r0, #3
 7584 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 7585              	.L328:
2153:main.c        ****     } 
2154:main.c        ****     midiSent += 4;
 7586              		.loc 1 2154 0
 7587 004c 064B     		ldr	r3, .L329+8
 7588 004e 1B88     		ldrh	r3, [r3]
 7589 0050 0433     		adds	r3, r3, #4
 7590 0052 9AB2     		uxth	r2, r3
 7591 0054 044B     		ldr	r3, .L329+8
 7592 0056 1A80     		strh	r2, [r3]	@ movhi
2155:main.c        **** }
 7593              		.loc 1 2155 0
 7594 0058 00BF     		nop
 7595 005a 0837     		adds	r7, r7, #8
 7596              		.cfi_def_cfa_offset 8
 7597 005c BD46     		mov	sp, r7
 7598              		.cfi_def_cfa_register 13
 7599              		@ sp needed
 7600 005e 80BD     		pop	{r7, pc}
 7601              	.L330:
 7602              		.align	2
 7603              	.L329:
 7604 0060 00000000 		.word	midiMsg
 7605 0064 00000000 		.word	USB_active
 7606 0068 00000000 		.word	midiSent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 174


 7607              		.cfi_endproc
 7608              	.LFE90:
 7609              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 7610              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 7611              		.align	2
 7612              		.global	sendMIDIAllNotesOff
 7613              		.thumb
 7614              		.thumb_func
 7615              		.type	sendMIDIAllNotesOff, %function
 7616              	sendMIDIAllNotesOff:
 7617              	.LFB91:
2156:main.c        **** 
2157:main.c        **** void sendMIDIAllNotesOff(void)
2158:main.c        **** {   
 7618              		.loc 1 2158 0
 7619              		.cfi_startproc
 7620              		@ args = 0, pretend = 0, frame = 0
 7621              		@ frame_needed = 1, uses_anonymous_args = 0
 7622 0000 80B5     		push	{r7, lr}
 7623              		.cfi_def_cfa_offset 8
 7624              		.cfi_offset 7, -8
 7625              		.cfi_offset 14, -4
 7626 0002 00AF     		add	r7, sp, #0
 7627              		.cfi_def_cfa_register 7
2159:main.c        ****     for (i = 0; i < 128; i++)
 7628              		.loc 1 2159 0
 7629 0004 144B     		ldr	r3, .L335
 7630 0006 0022     		movs	r2, #0
 7631 0008 1A70     		strb	r2, [r3]
 7632 000a 1EE0     		b	.L332
 7633              	.L334:
2160:main.c        ****     {
2161:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 7634              		.loc 1 2161 0
 7635 000c 134B     		ldr	r3, .L335+4
 7636 000e 9022     		movs	r2, #144
 7637 0010 1A70     		strb	r2, [r3]
2162:main.c        ****         midiMsg[1] = i;
 7638              		.loc 1 2162 0
 7639 0012 114B     		ldr	r3, .L335
 7640 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7641 0016 114B     		ldr	r3, .L335+4
 7642 0018 5A70     		strb	r2, [r3, #1]
2163:main.c        ****         midiMsg[2] = 0;	
 7643              		.loc 1 2163 0
 7644 001a 104B     		ldr	r3, .L335+4
 7645 001c 0022     		movs	r2, #0
 7646 001e 9A70     		strb	r2, [r3, #2]
2164:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7647              		.loc 1 2164 0
 7648 0020 0F4B     		ldr	r3, .L335+8
 7649 0022 1B78     		ldrb	r3, [r3]
 7650 0024 DBB2     		uxtb	r3, r3
 7651 0026 002B     		cmp	r3, #0
 7652 0028 09D0     		beq	.L333
 7653              		.loc 1 2164 0 is_stmt 0 discriminator 1
 7654 002a FFF7FEFF 		bl	USB_VBusPresent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 175


 7655 002e 0346     		mov	r3, r0
 7656 0030 002B     		cmp	r3, #0
 7657 0032 04D0     		beq	.L333
2165:main.c        ****         {       
2166:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 7658              		.loc 1 2166 0 is_stmt 1
 7659 0034 0022     		movs	r2, #0
 7660 0036 0949     		ldr	r1, .L335+4
 7661 0038 0320     		movs	r0, #3
 7662 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 7663              	.L333:
2159:main.c        ****     {
 7664              		.loc 1 2159 0 discriminator 2
 7665 003e 064B     		ldr	r3, .L335
 7666 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7667 0042 0133     		adds	r3, r3, #1
 7668 0044 DAB2     		uxtb	r2, r3
 7669 0046 044B     		ldr	r3, .L335
 7670 0048 1A70     		strb	r2, [r3]
 7671              	.L332:
2159:main.c        ****     {
 7672              		.loc 1 2159 0 is_stmt 0 discriminator 1
 7673 004a 034B     		ldr	r3, .L335
 7674 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7675 004e 5BB2     		sxtb	r3, r3
 7676 0050 002B     		cmp	r3, #0
 7677 0052 DBDA     		bge	.L334
2167:main.c        ****         }
2168:main.c        ****     }
2169:main.c        **** }
 7678              		.loc 1 2169 0 is_stmt 1
 7679 0054 00BF     		nop
 7680 0056 80BD     		pop	{r7, pc}
 7681              	.L336:
 7682              		.align	2
 7683              	.L335:
 7684 0058 00000000 		.word	i
 7685 005c 00000000 		.word	midiMsg
 7686 0060 00000000 		.word	USB_active
 7687              		.cfi_endproc
 7688              	.LFE91:
 7689              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 7690              		.global	checkStatus
 7691              		.bss
 7692              		.type	checkStatus, %object
 7693              		.size	checkStatus, 1
 7694              	checkStatus:
 7695 0108 00       		.space	1
 7696              		.global	checkBase
 7697 0109 00       		.align	1
 7698              		.type	checkBase, %object
 7699              		.size	checkBase, 2
 7700              	checkBase:
 7701 010a 0000     		.space	2
 7702              		.global	SPI_errors
 7703              		.align	2
 7704              		.type	SPI_errors, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 176


 7705              		.size	SPI_errors, 4
 7706              	SPI_errors:
 7707 010c 00000000 		.space	4
 7708              		.section	.text.parseSysex,"ax",%progbits
 7709              		.align	2
 7710              		.global	parseSysex
 7711              		.thumb
 7712              		.thumb_func
 7713              		.type	parseSysex, %function
 7714              	parseSysex:
 7715              	.LFB92:
2170:main.c        **** 
2171:main.c        **** 
2172:main.c        **** 
2173:main.c        **** 
2174:main.c        **** volatile uint8_t checkStatus = 0;
2175:main.c        **** volatile uint16_t checkBase = 0;
2176:main.c        **** 
2177:main.c        **** 
2178:main.c        **** 
2179:main.c        **** int SPI_errors = 0;
2180:main.c        **** 
2181:main.c        **** void parseSysex(void)
2182:main.c        **** {
 7716              		.loc 1 2182 0
 7717              		.cfi_startproc
 7718              		@ args = 0, pretend = 0, frame = 80
 7719              		@ frame_needed = 1, uses_anonymous_args = 0
 7720 0000 90B5     		push	{r4, r7, lr}
 7721              		.cfi_def_cfa_offset 12
 7722              		.cfi_offset 4, -12
 7723              		.cfi_offset 7, -8
 7724              		.cfi_offset 14, -4
 7725 0002 95B0     		sub	sp, sp, #84
 7726              		.cfi_def_cfa_offset 96
 7727 0004 00AF     		add	r7, sp, #0
 7728              		.cfi_def_cfa_register 7
2183:main.c        ****     parsingSysex = 1;
 7729              		.loc 1 2183 0
 7730 0006 8F4B     		ldr	r3, .L390
 7731 0008 0122     		movs	r2, #1
 7732 000a 1A70     		strb	r2, [r3]
2184:main.c        ****     //0 = it's a preset
2185:main.c        ****     if (sysexBuffer[0] == 0)
 7733              		.loc 1 2185 0
 7734 000c 8E4B     		ldr	r3, .L390+4
 7735 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7736 0010 002B     		cmp	r3, #0
 7737 0012 40F0E082 		bne	.L338
 7738              	.LBB39:
2186:main.c        ****     {
2187:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7739              		.loc 1 2187 0
 7740 0016 8D4B     		ldr	r3, .L390+8
 7741 0018 0122     		movs	r2, #1
 7742 001a 1A70     		strb	r2, [r3]
2188:main.c        ****         currentFloat = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 177


 7743              		.loc 1 2188 0
 7744 001c 8C4B     		ldr	r3, .L390+12
 7745 001e 0022     		movs	r2, #0
 7746 0020 1A60     		str	r2, [r3]
2189:main.c        ****         presetArraySection = presetName;
 7747              		.loc 1 2189 0
 7748 0022 8C4B     		ldr	r3, .L390+16
 7749 0024 0022     		movs	r2, #0
 7750 0026 1A70     		strb	r2, [r3]
2190:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 7751              		.loc 1 2190 0
 7752 0028 874B     		ldr	r3, .L390+4
 7753 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7754 002c 8A4B     		ldr	r3, .L390+20
 7755 002e 1A70     		strb	r2, [r3]
2191:main.c        ****         presetArray[0] = sysexBuffer[2];
 7756              		.loc 1 2191 0
 7757 0030 854B     		ldr	r3, .L390+4
 7758 0032 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 7759 0034 894B     		ldr	r3, .L390+24
 7760 0036 1A70     		strb	r2, [r3]
2192:main.c        ****         presetArray[1] = sysexBuffer[3];
 7761              		.loc 1 2192 0
 7762 0038 834B     		ldr	r3, .L390+4
 7763 003a DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 7764 003c 874B     		ldr	r3, .L390+24
 7765 003e 5A70     		strb	r2, [r3, #1]
2193:main.c        ****         presetArray[2] = sysexBuffer[4];
 7766              		.loc 1 2193 0
 7767 0040 814B     		ldr	r3, .L390+4
 7768 0042 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 7769 0044 854B     		ldr	r3, .L390+24
 7770 0046 9A70     		strb	r2, [r3, #2]
2194:main.c        ****         presetArray[3] = sysexBuffer[5];
 7771              		.loc 1 2194 0
 7772 0048 7F4B     		ldr	r3, .L390+4
 7773 004a 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 7774 004c 834B     		ldr	r3, .L390+24
 7775 004e DA70     		strb	r2, [r3, #3]
2195:main.c        ****         
2196:main.c        ****         union breakFloat theVal;
2197:main.c        ****         uint32_t i = 6;
 7776              		.loc 1 2197 0
 7777 0050 0623     		movs	r3, #6
 7778 0052 FB64     		str	r3, [r7, #76]
2198:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+6;
 7779              		.loc 1 2198 0
 7780 0054 1423     		movs	r3, #20
 7781 0056 87F83730 		strb	r3, [r7, #55]
2199:main.c        ****         for (; i < stoppingPoint; i++)
 7782              		.loc 1 2199 0
 7783 005a 22E0     		b	.L339
 7784              	.L340:
2200:main.c        ****         {
2201:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 7785              		.loc 1 2201 0 discriminator 2
 7786 005c FB6C     		ldr	r3, [r7, #76]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 178


 7787 005e 023B     		subs	r3, r3, #2
 7788 0060 7949     		ldr	r1, .L390+4
 7789 0062 FA6C     		ldr	r2, [r7, #76]
 7790 0064 0A44     		add	r2, r2, r1
 7791 0066 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7792 0068 02F07F02 		and	r2, r2, #127
 7793 006c D1B2     		uxtb	r1, r2
 7794 006e 7B4A     		ldr	r2, .L390+24
 7795 0070 D154     		strb	r1, [r2, r3]
2202:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[i] & 127;
 7796              		.loc 1 2202 0 discriminator 2
 7797 0072 794B     		ldr	r3, .L390+20
 7798 0074 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7799 0076 1846     		mov	r0, r3
 7800 0078 FB6C     		ldr	r3, [r7, #76]
 7801 007a 9A1F     		subs	r2, r3, #6
 7802 007c 7249     		ldr	r1, .L390+4
 7803 007e FB6C     		ldr	r3, [r7, #76]
 7804 0080 0B44     		add	r3, r3, r1
 7805 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7806 0084 03F07F03 		and	r3, r3, #127
 7807 0088 DCB2     		uxtb	r4, r3
 7808 008a 7549     		ldr	r1, .L390+28
 7809 008c 0346     		mov	r3, r0
 7810 008e DB00     		lsls	r3, r3, #3
 7811 0090 1B1A     		subs	r3, r3, r0
 7812 0092 5B00     		lsls	r3, r3, #1
 7813 0094 0B44     		add	r3, r3, r1
 7814 0096 1344     		add	r3, r3, r2
 7815 0098 2246     		mov	r2, r4
 7816 009a 1A70     		strb	r2, [r3]
2199:main.c        ****         for (; i < stoppingPoint; i++)
 7817              		.loc 1 2199 0 discriminator 2
 7818 009c FB6C     		ldr	r3, [r7, #76]
 7819 009e 0133     		adds	r3, r3, #1
 7820 00a0 FB64     		str	r3, [r7, #76]
 7821              	.L339:
2199:main.c        ****         for (; i < stoppingPoint; i++)
 7822              		.loc 1 2199 0 is_stmt 0 discriminator 1
 7823 00a2 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 7824 00a6 FB6C     		ldr	r3, [r7, #76]
 7825 00a8 9A42     		cmp	r2, r3
 7826 00aa D7D8     		bhi	.L340
2203:main.c        ****         }
2204:main.c        ****         
2205:main.c        ****         presetArraySection = macroNames;
 7827              		.loc 1 2205 0 is_stmt 1
 7828 00ac 694B     		ldr	r3, .L390+16
 7829 00ae 0122     		movs	r2, #1
 7830 00b0 1A70     		strb	r2, [r3]
 7831              	.LBB40:
2206:main.c        **** 
2207:main.c        ****         
2208:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 7832              		.loc 1 2208 0
 7833 00b2 0023     		movs	r3, #0
 7834 00b4 BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 179


 7835 00b6 34E0     		b	.L341
 7836              	.L344:
 7837              	.LBB41:
2209:main.c        ****         {
2210:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 7838              		.loc 1 2210 0
 7839 00b8 0023     		movs	r3, #0
 7840 00ba 7B64     		str	r3, [r7, #68]
 7841 00bc 2BE0     		b	.L342
 7842              	.L343:
2211:main.c        ****             {
2212:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 7843              		.loc 1 2212 0 discriminator 3
 7844 00be FB6C     		ldr	r3, [r7, #76]
 7845 00c0 023B     		subs	r3, r3, #2
 7846 00c2 6149     		ldr	r1, .L390+4
 7847 00c4 FA6C     		ldr	r2, [r7, #76]
 7848 00c6 0A44     		add	r2, r2, r1
 7849 00c8 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7850 00ca 02F07F02 		and	r2, r2, #127
 7851 00ce D1B2     		uxtb	r1, r2
 7852 00d0 624A     		ldr	r2, .L390+24
 7853 00d2 D154     		strb	r1, [r2, r3]
2213:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 7854              		.loc 1 2213 0 discriminator 3
 7855 00d4 604B     		ldr	r3, .L390+20
 7856 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7857 00d8 1846     		mov	r0, r3
 7858 00da 5B4A     		ldr	r2, .L390+4
 7859 00dc FB6C     		ldr	r3, [r7, #76]
 7860 00de 1344     		add	r3, r3, r2
 7861 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7862 00e2 03F07F03 		and	r3, r3, #127
 7863 00e6 DCB2     		uxtb	r4, r3
 7864 00e8 5E49     		ldr	r1, .L390+32
 7865 00ea BB6C     		ldr	r3, [r7, #72]
 7866 00ec 1A46     		mov	r2, r3
 7867 00ee D200     		lsls	r2, r2, #3
 7868 00f0 D21A     		subs	r2, r2, r3
 7869 00f2 5300     		lsls	r3, r2, #1
 7870 00f4 1A46     		mov	r2, r3
 7871 00f6 0346     		mov	r3, r0
 7872 00f8 DB00     		lsls	r3, r3, #3
 7873 00fa 1B1A     		subs	r3, r3, r0
 7874 00fc 1B01     		lsls	r3, r3, #4
 7875 00fe 1344     		add	r3, r3, r2
 7876 0100 CA18     		adds	r2, r1, r3
 7877 0102 7B6C     		ldr	r3, [r7, #68]
 7878 0104 1344     		add	r3, r3, r2
 7879 0106 2246     		mov	r2, r4
 7880 0108 1A70     		strb	r2, [r3]
2214:main.c        ****                 i++;
 7881              		.loc 1 2214 0 discriminator 3
 7882 010a FB6C     		ldr	r3, [r7, #76]
 7883 010c 0133     		adds	r3, r3, #1
 7884 010e FB64     		str	r3, [r7, #76]
2210:main.c        ****             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 180


 7885              		.loc 1 2210 0 discriminator 3
 7886 0110 7B6C     		ldr	r3, [r7, #68]
 7887 0112 0133     		adds	r3, r3, #1
 7888 0114 7B64     		str	r3, [r7, #68]
 7889              	.L342:
2210:main.c        ****             {
 7890              		.loc 1 2210 0 is_stmt 0 discriminator 1
 7891 0116 7B6C     		ldr	r3, [r7, #68]
 7892 0118 0D2B     		cmp	r3, #13
 7893 011a D0DD     		ble	.L343
 7894              	.LBE41:
2208:main.c        ****         {
 7895              		.loc 1 2208 0 is_stmt 1 discriminator 2
 7896 011c BB6C     		ldr	r3, [r7, #72]
 7897 011e 0133     		adds	r3, r3, #1
 7898 0120 BB64     		str	r3, [r7, #72]
 7899              	.L341:
2208:main.c        ****         {
 7900              		.loc 1 2208 0 is_stmt 0 discriminator 1
 7901 0122 BB6C     		ldr	r3, [r7, #72]
 7902 0124 072B     		cmp	r3, #7
 7903 0126 C7DD     		ble	.L344
 7904              	.LBE40:
2215:main.c        ****             }
2216:main.c        ****         }
2217:main.c        ****         
2218:main.c        ****         uint16_t valsStart = 4 + NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 7905              		.loc 1 2218 0 is_stmt 1
 7906 0128 8223     		movs	r3, #130
 7907 012a BB86     		strh	r3, [r7, #52]	@ movhi
2219:main.c        ****         
2220:main.c        ****         presetArraySection = initialVals;
 7908              		.loc 1 2220 0
 7909 012c 494B     		ldr	r3, .L390+16
 7910 012e 0222     		movs	r2, #2
 7911 0130 1A70     		strb	r2, [r3]
2221:main.c        ****         
2222:main.c        ****         for (; i < sysexPointer; i = i+5)
 7912              		.loc 1 2222 0
 7913 0132 49E2     		b	.L345
 7914              	.L367:
2223:main.c        ****         {
2224:main.c        ****             theVal.u32 = 0;
 7915              		.loc 1 2224 0
 7916 0134 0023     		movs	r3, #0
 7917 0136 3B61     		str	r3, [r7, #16]
2225:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7918              		.loc 1 2225 0
 7919 0138 3B69     		ldr	r3, [r7, #16]
 7920 013a 4349     		ldr	r1, .L390+4
 7921 013c FA6C     		ldr	r2, [r7, #76]
 7922 013e 0A44     		add	r2, r2, r1
 7923 0140 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7924 0142 1207     		lsls	r2, r2, #28
 7925 0144 1343     		orrs	r3, r3, r2
 7926 0146 3B61     		str	r3, [r7, #16]
2226:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 181


 7927              		.loc 1 2226 0
 7928 0148 3B69     		ldr	r3, [r7, #16]
 7929 014a FA6C     		ldr	r2, [r7, #76]
 7930 014c 0132     		adds	r2, r2, #1
 7931 014e 3E49     		ldr	r1, .L390+4
 7932 0150 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7933 0152 5205     		lsls	r2, r2, #21
 7934 0154 1343     		orrs	r3, r3, r2
 7935 0156 3B61     		str	r3, [r7, #16]
2227:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 7936              		.loc 1 2227 0
 7937 0158 3B69     		ldr	r3, [r7, #16]
 7938 015a FA6C     		ldr	r2, [r7, #76]
 7939 015c 0232     		adds	r2, r2, #2
 7940 015e 3A49     		ldr	r1, .L390+4
 7941 0160 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7942 0162 9203     		lsls	r2, r2, #14
 7943 0164 1343     		orrs	r3, r3, r2
 7944 0166 3B61     		str	r3, [r7, #16]
2228:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 7945              		.loc 1 2228 0
 7946 0168 3B69     		ldr	r3, [r7, #16]
 7947 016a FA6C     		ldr	r2, [r7, #76]
 7948 016c 0332     		adds	r2, r2, #3
 7949 016e 3649     		ldr	r1, .L390+4
 7950 0170 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7951 0172 D201     		lsls	r2, r2, #7
 7952 0174 1343     		orrs	r3, r3, r2
 7953 0176 3B61     		str	r3, [r7, #16]
2229:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 7954              		.loc 1 2229 0
 7955 0178 3A69     		ldr	r2, [r7, #16]
 7956 017a FB6C     		ldr	r3, [r7, #76]
 7957 017c 0433     		adds	r3, r3, #4
 7958 017e 3249     		ldr	r1, .L390+4
 7959 0180 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7960 0182 03F07F03 		and	r3, r3, #127
 7961 0186 1343     		orrs	r3, r3, r2
 7962 0188 3B61     		str	r3, [r7, #16]
2230:main.c        ****             testVal = theVal.f;
 7963              		.loc 1 2230 0
 7964 018a 3B69     		ldr	r3, [r7, #16]	@ float
 7965 018c 364A     		ldr	r2, .L390+36
 7966 018e 1360     		str	r3, [r2]	@ float
2231:main.c        ****             if (presetArraySection == initialVals)
 7967              		.loc 1 2231 0
 7968 0190 304B     		ldr	r3, .L390+16
 7969 0192 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7970 0194 022B     		cmp	r3, #2
 7971 0196 40F0B980 		bne	.L346
2232:main.c        ****             {
2233:main.c        **** 
2234:main.c        ****                 if (currentFloat == 0)
 7972              		.loc 1 2234 0
 7973 019a 2D4B     		ldr	r3, .L390+12
 7974 019c 1B68     		ldr	r3, [r3]
 7975 019e 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 182


 7976 01a0 22D1     		bne	.L347
2235:main.c        ****                 {
2236:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7977              		.loc 1 2236 0
 7978 01a2 3B69     		ldr	r3, [r7, #16]	@ float
 7979 01a4 1846     		mov	r0, r3
 7980 01a6 FFF7FEFF 		bl	__aeabi_f2uiz
 7981 01aa 0346     		mov	r3, r0
 7982 01ac 9AB2     		uxth	r2, r3
 7983 01ae 2F4B     		ldr	r3, .L390+40
 7984 01b0 1A80     		strh	r2, [r3]	@ movhi
2237:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7985              		.loc 1 2237 0
 7986 01b2 BA8E     		ldrh	r2, [r7, #52]
 7987 01b4 264B     		ldr	r3, .L390+12
 7988 01b6 1B68     		ldr	r3, [r3]
 7989 01b8 591C     		adds	r1, r3, #1
 7990 01ba 2548     		ldr	r0, .L390+12
 7991 01bc 0160     		str	r1, [r0]
 7992 01be 1344     		add	r3, r3, r2
 7993 01c0 2A4A     		ldr	r2, .L390+40
 7994 01c2 1288     		ldrh	r2, [r2]
 7995 01c4 120A     		lsrs	r2, r2, #8
 7996 01c6 92B2     		uxth	r2, r2
 7997 01c8 D1B2     		uxtb	r1, r2
 7998 01ca 244A     		ldr	r2, .L390+24
 7999 01cc D154     		strb	r1, [r2, r3]
2238:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 8000              		.loc 1 2238 0
 8001 01ce BA8E     		ldrh	r2, [r7, #52]
 8002 01d0 1F4B     		ldr	r3, .L390+12
 8003 01d2 1B68     		ldr	r3, [r3]
 8004 01d4 591C     		adds	r1, r3, #1
 8005 01d6 1E48     		ldr	r0, .L390+12
 8006 01d8 0160     		str	r1, [r0]
 8007 01da 1344     		add	r3, r3, r2
 8008 01dc 234A     		ldr	r2, .L390+40
 8009 01de 1288     		ldrh	r2, [r2]
 8010 01e0 D1B2     		uxtb	r1, r2
 8011 01e2 1E4A     		ldr	r2, .L390+24
 8012 01e4 D154     		strb	r1, [r2, r3]
 8013 01e6 ECE1     		b	.L353
 8014              	.L347:
2239:main.c        ****                 }
2240:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 8015              		.loc 1 2240 0
 8016 01e8 204B     		ldr	r3, .L390+40
 8017 01ea 1B88     		ldrh	r3, [r3]
 8018 01ec 0133     		adds	r3, r3, #1
 8019 01ee 5B00     		lsls	r3, r3, #1
 8020 01f0 1A46     		mov	r2, r3
 8021 01f2 174B     		ldr	r3, .L390+12
 8022 01f4 1B68     		ldr	r3, [r3]
 8023 01f6 9A42     		cmp	r2, r3
 8024 01f8 3CD9     		bls	.L349
 8025              	.LBB42:
2241:main.c        ****                 { 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 183


2242:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 8026              		.loc 1 2242 0
 8027 01fa 3B69     		ldr	r3, [r7, #16]	@ float
 8028 01fc 1C49     		ldr	r1, .L390+44
 8029 01fe 1846     		mov	r0, r3
 8030 0200 FFF7FEFF 		bl	__aeabi_fmul
 8031 0204 0346     		mov	r3, r0
 8032 0206 1846     		mov	r0, r3
 8033 0208 FFF7FEFF 		bl	__aeabi_f2uiz
 8034 020c 0346     		mov	r3, r0
 8035 020e 7B86     		strh	r3, [r7, #50]	@ movhi
2243:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 8036              		.loc 1 2243 0
 8037 0210 BA8E     		ldrh	r2, [r7, #52]
 8038 0212 0F4B     		ldr	r3, .L390+12
 8039 0214 1B68     		ldr	r3, [r3]
 8040 0216 591C     		adds	r1, r3, #1
 8041 0218 0D48     		ldr	r0, .L390+12
 8042 021a 0160     		str	r1, [r0]
 8043 021c 1344     		add	r3, r3, r2
 8044 021e 7A8E     		ldrh	r2, [r7, #50]
 8045 0220 120A     		lsrs	r2, r2, #8
 8046 0222 92B2     		uxth	r2, r2
 8047 0224 D1B2     		uxtb	r1, r2
 8048 0226 0D4A     		ldr	r2, .L390+24
 8049 0228 D154     		strb	r1, [r2, r3]
2244:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8050              		.loc 1 2244 0
 8051 022a BA8E     		ldrh	r2, [r7, #52]
 8052 022c 084B     		ldr	r3, .L390+12
 8053 022e 1B68     		ldr	r3, [r3]
 8054 0230 591C     		adds	r1, r3, #1
 8055 0232 0748     		ldr	r0, .L390+12
 8056 0234 0160     		str	r1, [r0]
 8057 0236 1344     		add	r3, r3, r2
 8058 0238 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 8059 023a D1B2     		uxtb	r1, r2
 8060 023c 074A     		ldr	r2, .L390+24
 8061 023e D154     		strb	r1, [r2, r3]
 8062              	.LBE42:
 8063 0240 BFE1     		b	.L353
 8064              	.L391:
 8065 0242 00BF     		.align	2
 8066              	.L390:
 8067 0244 00000000 		.word	parsingSysex
 8068 0248 00000000 		.word	sysexBuffer
 8069 024c 00000000 		.word	sysexMessageInProgress
 8070 0250 00000000 		.word	currentFloat
 8071 0254 00000000 		.word	presetArraySection
 8072 0258 00000000 		.word	presetNumberToWrite
 8073 025c 00000000 		.word	presetArray
 8074 0260 00000000 		.word	presetNamesArray
 8075 0264 00000000 		.word	macroNamesArray
 8076 0268 00000000 		.word	testVal
 8077 026c 00000000 		.word	valsCount
 8078 0270 00FF7F47 		.word	1199570688
 8079              	.L349:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 184


2245:main.c        ****                 }
2246:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 8080              		.loc 1 2246 0
 8081 0274 9C4B     		ldr	r3, .L392
 8082 0276 1B88     		ldrh	r3, [r3]
 8083 0278 0133     		adds	r3, r3, #1
 8084 027a 5B00     		lsls	r3, r3, #1
 8085 027c 1A46     		mov	r2, r3
 8086 027e 9B4B     		ldr	r3, .L392+4
 8087 0280 1B68     		ldr	r3, [r3]
 8088 0282 9A42     		cmp	r2, r3
 8089 0284 40F09D81 		bne	.L353
2247:main.c        ****                 {
2248:main.c        ****                     valCheck = theVal.f;
 8090              		.loc 1 2248 0
 8091 0288 3B69     		ldr	r3, [r7, #16]	@ float
 8092 028a 994A     		ldr	r2, .L392+8
 8093 028c 1360     		str	r3, [r2]	@ float
2249:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 8094              		.loc 1 2249 0
 8095 028e 984B     		ldr	r3, .L392+8
 8096 0290 1B68     		ldr	r3, [r3]	@ float
 8097 0292 9849     		ldr	r1, .L392+12
 8098 0294 1846     		mov	r0, r3
 8099 0296 FFF7FEFF 		bl	__aeabi_fcmplt
 8100 029a 0346     		mov	r3, r0
 8101 029c 002B     		cmp	r3, #0
 8102 029e 23D0     		beq	.L350
 8103              		.loc 1 2249 0 is_stmt 0 discriminator 1
 8104 02a0 934B     		ldr	r3, .L392+8
 8105 02a2 1B68     		ldr	r3, [r3]	@ float
 8106 02a4 9449     		ldr	r1, .L392+16
 8107 02a6 1846     		mov	r0, r3
 8108 02a8 FFF7FEFF 		bl	__aeabi_fcmpgt
 8109 02ac 0346     		mov	r3, r0
 8110 02ae 002B     		cmp	r3, #0
 8111 02b0 1AD0     		beq	.L350
2250:main.c        ****                     {
2251:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8112              		.loc 1 2251 0 is_stmt 1
 8113 02b2 BA8E     		ldrh	r2, [r7, #52]
 8114 02b4 8D4B     		ldr	r3, .L392+4
 8115 02b6 1B68     		ldr	r3, [r3]
 8116 02b8 591C     		adds	r1, r3, #1
 8117 02ba 8C48     		ldr	r0, .L392+4
 8118 02bc 0160     		str	r1, [r0]
 8119 02be 1344     		add	r3, r3, r2
 8120 02c0 8E4A     		ldr	r2, .L392+20
 8121 02c2 EF21     		movs	r1, #239
 8122 02c4 D154     		strb	r1, [r2, r3]
2252:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 8123              		.loc 1 2252 0
 8124 02c6 BA8E     		ldrh	r2, [r7, #52]
 8125 02c8 884B     		ldr	r3, .L392+4
 8126 02ca 1B68     		ldr	r3, [r3]
 8127 02cc 591C     		adds	r1, r3, #1
 8128 02ce 8748     		ldr	r0, .L392+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 185


 8129 02d0 0160     		str	r1, [r0]
 8130 02d2 1344     		add	r3, r3, r2
 8131 02d4 894A     		ldr	r2, .L392+20
 8132 02d6 EF21     		movs	r1, #239
 8133 02d8 D154     		strb	r1, [r2, r3]
2253:main.c        ****                         presetArraySection = mapCountNext;
 8134              		.loc 1 2253 0
 8135 02da 894B     		ldr	r3, .L392+24
 8136 02dc 0322     		movs	r2, #3
 8137 02de 1A70     		strb	r2, [r3]
2254:main.c        ****                         mapCount = 0;
 8138              		.loc 1 2254 0
 8139 02e0 884B     		ldr	r3, .L392+28
 8140 02e2 0022     		movs	r2, #0
 8141 02e4 1A60     		str	r2, [r3]
 8142 02e6 6CE1     		b	.L353
 8143              	.L350:
2255:main.c        ****                     }
2256:main.c        ****                     else
2257:main.c        ****                     {
2258:main.c        ****                         //error state
2259:main.c        ****                         SPI_errors++;
 8144              		.loc 1 2259 0
 8145 02e8 874B     		ldr	r3, .L392+32
 8146 02ea 1B68     		ldr	r3, [r3]
 8147 02ec 0133     		adds	r3, r3, #1
 8148 02ee 864A     		ldr	r2, .L392+32
 8149 02f0 1360     		str	r3, [r2]
2260:main.c        ****                         sysexMessageInProgress = 0;
 8150              		.loc 1 2260 0
 8151 02f2 864B     		ldr	r3, .L392+36
 8152 02f4 0022     		movs	r2, #0
 8153 02f6 1A70     		strb	r2, [r3]
2261:main.c        ****                         sysexPointer = 0;
 8154              		.loc 1 2261 0
 8155 02f8 854B     		ldr	r3, .L392+40
 8156 02fa 0022     		movs	r2, #0
 8157 02fc 1A60     		str	r2, [r3]
2262:main.c        ****                         sendingMessage = 0;
 8158              		.loc 1 2262 0
 8159 02fe 854B     		ldr	r3, .L392+44
 8160 0300 0022     		movs	r2, #0
 8161 0302 1A70     		strb	r2, [r3]
2263:main.c        ****                         parseThatMF = 0;
 8162              		.loc 1 2263 0
 8163 0304 844B     		ldr	r3, .L392+48
 8164 0306 0022     		movs	r2, #0
 8165 0308 1A70     		strb	r2, [r3]
 8166 030a 5AE1     		b	.L353
 8167              	.L346:
2264:main.c        ****                     }
2265:main.c        ****                 }
2266:main.c        ****             }
2267:main.c        ****             else if (presetArraySection == mapCountNext)
 8168              		.loc 1 2267 0
 8169 030c 7C4B     		ldr	r3, .L392+24
 8170 030e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 186


 8171 0310 032B     		cmp	r3, #3
 8172 0312 28D1     		bne	.L354
2268:main.c        ****             {
2269:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 8173              		.loc 1 2269 0
 8174 0314 3B69     		ldr	r3, [r7, #16]	@ float
 8175 0316 1846     		mov	r0, r3
 8176 0318 FFF7FEFF 		bl	__aeabi_f2uiz
 8177 031c 0346     		mov	r3, r0
 8178 031e 9AB2     		uxth	r2, r3
 8179 0320 7E4B     		ldr	r3, .L392+52
 8180 0322 1A80     		strh	r2, [r3]	@ movhi
2270:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 8181              		.loc 1 2270 0
 8182 0324 BA8E     		ldrh	r2, [r7, #52]
 8183 0326 714B     		ldr	r3, .L392+4
 8184 0328 1B68     		ldr	r3, [r3]
 8185 032a 591C     		adds	r1, r3, #1
 8186 032c 6F48     		ldr	r0, .L392+4
 8187 032e 0160     		str	r1, [r0]
 8188 0330 1344     		add	r3, r3, r2
 8189 0332 7A4A     		ldr	r2, .L392+52
 8190 0334 1288     		ldrh	r2, [r2]
 8191 0336 120A     		lsrs	r2, r2, #8
 8192 0338 92B2     		uxth	r2, r2
 8193 033a D1B2     		uxtb	r1, r2
 8194 033c 6F4A     		ldr	r2, .L392+20
 8195 033e D154     		strb	r1, [r2, r3]
2271:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 8196              		.loc 1 2271 0
 8197 0340 BA8E     		ldrh	r2, [r7, #52]
 8198 0342 6A4B     		ldr	r3, .L392+4
 8199 0344 1B68     		ldr	r3, [r3]
 8200 0346 591C     		adds	r1, r3, #1
 8201 0348 6848     		ldr	r0, .L392+4
 8202 034a 0160     		str	r1, [r0]
 8203 034c 1344     		add	r3, r3, r2
 8204 034e 734A     		ldr	r2, .L392+52
 8205 0350 1288     		ldrh	r2, [r2]
 8206 0352 D1B2     		uxtb	r1, r2
 8207 0354 694A     		ldr	r2, .L392+20
 8208 0356 D154     		strb	r1, [r2, r3]
2272:main.c        ****                 presetArraySection = mapping;
 8209              		.loc 1 2272 0
 8210 0358 694B     		ldr	r3, .L392+24
 8211 035a 0422     		movs	r2, #4
 8212 035c 1A70     		strb	r2, [r3]
2273:main.c        ****                 numMappings = 0;
 8213              		.loc 1 2273 0
 8214 035e 704B     		ldr	r3, .L392+56
 8215 0360 0022     		movs	r2, #0
 8216 0362 1A80     		strh	r2, [r3]	@ movhi
 8217 0364 2DE1     		b	.L353
 8218              	.L354:
2274:main.c        ****             }
2275:main.c        ****             else if (presetArraySection == mapping)
 8219              		.loc 1 2275 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 187


 8220 0366 664B     		ldr	r3, .L392+24
 8221 0368 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8222 036a 042B     		cmp	r3, #4
 8223 036c 40F02981 		bne	.L353
2276:main.c        ****             {
2277:main.c        ****                 // this is the order
2278:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2279:main.c        ****                 if (numMappings < mapCountExpectation)
 8224              		.loc 1 2279 0
 8225 0370 6B4B     		ldr	r3, .L392+56
 8226 0372 1A88     		ldrh	r2, [r3]
 8227 0374 694B     		ldr	r3, .L392+52
 8228 0376 1B88     		ldrh	r3, [r3]
 8229 0378 9A42     		cmp	r2, r3
 8230 037a 80F0D780 		bcs	.L355
2280:main.c        ****                 {
2281:main.c        ****                     if ((mapCount % 5) == 0)
 8231              		.loc 1 2281 0
 8232 037e 614B     		ldr	r3, .L392+28
 8233 0380 1968     		ldr	r1, [r3]
 8234 0382 684B     		ldr	r3, .L392+60
 8235 0384 A3FB0123 		umull	r2, r3, r3, r1
 8236 0388 9A08     		lsrs	r2, r3, #2
 8237 038a 1346     		mov	r3, r2
 8238 038c 9B00     		lsls	r3, r3, #2
 8239 038e 1344     		add	r3, r3, r2
 8240 0390 CA1A     		subs	r2, r1, r3
 8241 0392 002A     		cmp	r2, #0
 8242 0394 0FD1     		bne	.L356
2282:main.c        ****                     {
2283:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8243              		.loc 1 2283 0
 8244 0396 BA8E     		ldrh	r2, [r7, #52]
 8245 0398 544B     		ldr	r3, .L392+4
 8246 039a 1B68     		ldr	r3, [r3]
 8247 039c 591C     		adds	r1, r3, #1
 8248 039e 5348     		ldr	r0, .L392+4
 8249 03a0 0160     		str	r1, [r0]
 8250 03a2 D418     		adds	r4, r2, r3
 8251 03a4 3B69     		ldr	r3, [r7, #16]	@ float
 8252 03a6 1846     		mov	r0, r3
 8253 03a8 FFF7FEFF 		bl	__aeabi_f2uiz
 8254 03ac 0346     		mov	r3, r0
 8255 03ae DAB2     		uxtb	r2, r3
 8256 03b0 524B     		ldr	r3, .L392+20
 8257 03b2 1A55     		strb	r2, [r3, r4]
 8258 03b4 91E0     		b	.L357
 8259              	.L356:
2284:main.c        ****                     }
2285:main.c        ****                     else if  (mapCount % 5 == 1)
 8260              		.loc 1 2285 0
 8261 03b6 534B     		ldr	r3, .L392+28
 8262 03b8 1968     		ldr	r1, [r3]
 8263 03ba 5A4B     		ldr	r3, .L392+60
 8264 03bc A3FB0123 		umull	r2, r3, r3, r1
 8265 03c0 9A08     		lsrs	r2, r3, #2
 8266 03c2 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 188


 8267 03c4 9B00     		lsls	r3, r3, #2
 8268 03c6 1344     		add	r3, r3, r2
 8269 03c8 CA1A     		subs	r2, r1, r3
 8270 03ca 012A     		cmp	r2, #1
 8271 03cc 0FD1     		bne	.L358
2286:main.c        ****                     {
2287:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8272              		.loc 1 2287 0
 8273 03ce BA8E     		ldrh	r2, [r7, #52]
 8274 03d0 464B     		ldr	r3, .L392+4
 8275 03d2 1B68     		ldr	r3, [r3]
 8276 03d4 591C     		adds	r1, r3, #1
 8277 03d6 4548     		ldr	r0, .L392+4
 8278 03d8 0160     		str	r1, [r0]
 8279 03da D418     		adds	r4, r2, r3
 8280 03dc 3B69     		ldr	r3, [r7, #16]	@ float
 8281 03de 1846     		mov	r0, r3
 8282 03e0 FFF7FEFF 		bl	__aeabi_f2uiz
 8283 03e4 0346     		mov	r3, r0
 8284 03e6 DAB2     		uxtb	r2, r3
 8285 03e8 444B     		ldr	r3, .L392+20
 8286 03ea 1A55     		strb	r2, [r3, r4]
 8287 03ec 75E0     		b	.L357
 8288              	.L358:
2288:main.c        ****                     }
2289:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 8289              		.loc 1 2289 0
 8290 03ee 454B     		ldr	r3, .L392+28
 8291 03f0 1968     		ldr	r1, [r3]
 8292 03f2 4C4B     		ldr	r3, .L392+60
 8293 03f4 A3FB0123 		umull	r2, r3, r3, r1
 8294 03f8 9A08     		lsrs	r2, r3, #2
 8295 03fa 1346     		mov	r3, r2
 8296 03fc 9B00     		lsls	r3, r3, #2
 8297 03fe 1344     		add	r3, r3, r2
 8298 0400 CA1A     		subs	r2, r1, r3
 8299 0402 022A     		cmp	r2, #2
 8300 0404 23D1     		bne	.L359
2290:main.c        ****                     {
2291:main.c        ****                         if (theVal.f < 0.0f)
 8301              		.loc 1 2291 0
 8302 0406 3B69     		ldr	r3, [r7, #16]	@ float
 8303 0408 4FF00001 		mov	r1, #0
 8304 040c 1846     		mov	r0, r3
 8305 040e FFF7FEFF 		bl	__aeabi_fcmplt
 8306 0412 0346     		mov	r3, r0
 8307 0414 002B     		cmp	r3, #0
 8308 0416 0AD0     		beq	.L389
2292:main.c        ****                         {
2293:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 8309              		.loc 1 2293 0
 8310 0418 BA8E     		ldrh	r2, [r7, #52]
 8311 041a 344B     		ldr	r3, .L392+4
 8312 041c 1B68     		ldr	r3, [r3]
 8313 041e 591C     		adds	r1, r3, #1
 8314 0420 3248     		ldr	r0, .L392+4
 8315 0422 0160     		str	r1, [r0]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 189


 8316 0424 1344     		add	r3, r3, r2
 8317 0426 354A     		ldr	r2, .L392+20
 8318 0428 FF21     		movs	r1, #255
 8319 042a D154     		strb	r1, [r2, r3]
 8320 042c 55E0     		b	.L357
 8321              	.L389:
2294:main.c        ****                         }
2295:main.c        ****                         else
2296:main.c        ****                         {
2297:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8322              		.loc 1 2297 0
 8323 042e BA8E     		ldrh	r2, [r7, #52]
 8324 0430 2E4B     		ldr	r3, .L392+4
 8325 0432 1B68     		ldr	r3, [r3]
 8326 0434 591C     		adds	r1, r3, #1
 8327 0436 2D48     		ldr	r0, .L392+4
 8328 0438 0160     		str	r1, [r0]
 8329 043a D418     		adds	r4, r2, r3
 8330 043c 3B69     		ldr	r3, [r7, #16]	@ float
 8331 043e 1846     		mov	r0, r3
 8332 0440 FFF7FEFF 		bl	__aeabi_f2uiz
 8333 0444 0346     		mov	r3, r0
 8334 0446 DAB2     		uxtb	r2, r3
 8335 0448 2C4B     		ldr	r3, .L392+20
 8336 044a 1A55     		strb	r2, [r3, r4]
 8337 044c 45E0     		b	.L357
 8338              	.L359:
2298:main.c        ****                         }
2299:main.c        ****                     }
2300:main.c        ****                     else if (mapCount % 5 == 3)
 8339              		.loc 1 2300 0
 8340 044e 2D4B     		ldr	r3, .L392+28
 8341 0450 1968     		ldr	r1, [r3]
 8342 0452 344B     		ldr	r3, .L392+60
 8343 0454 A3FB0123 		umull	r2, r3, r3, r1
 8344 0458 9A08     		lsrs	r2, r3, #2
 8345 045a 1346     		mov	r3, r2
 8346 045c 9B00     		lsls	r3, r3, #2
 8347 045e 1344     		add	r3, r3, r2
 8348 0460 CA1A     		subs	r2, r1, r3
 8349 0462 032A     		cmp	r2, #3
 8350 0464 24D1     		bne	.L363
 8351              	.LBB43:
2301:main.c        ****                     {
2302:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 8352              		.loc 1 2302 0
 8353 0466 3B69     		ldr	r3, [r7, #16]	@ float
 8354 0468 2F49     		ldr	r1, .L392+64
 8355 046a 1846     		mov	r0, r3
 8356 046c FFF7FEFF 		bl	__aeabi_fmul
 8357 0470 0346     		mov	r3, r0
 8358 0472 1846     		mov	r0, r3
 8359 0474 FFF7FEFF 		bl	__aeabi_f2iz
 8360 0478 0346     		mov	r3, r0
 8361 047a 3B86     		strh	r3, [r7, #48]	@ movhi
2303:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 8362              		.loc 1 2303 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 190


 8363 047c BA8E     		ldrh	r2, [r7, #52]
 8364 047e 1B4B     		ldr	r3, .L392+4
 8365 0480 1B68     		ldr	r3, [r3]
 8366 0482 591C     		adds	r1, r3, #1
 8367 0484 1948     		ldr	r0, .L392+4
 8368 0486 0160     		str	r1, [r0]
 8369 0488 1344     		add	r3, r3, r2
 8370 048a B7F93020 		ldrsh	r2, [r7, #48]
 8371 048e 1212     		asrs	r2, r2, #8
 8372 0490 12B2     		sxth	r2, r2
 8373 0492 D1B2     		uxtb	r1, r2
 8374 0494 194A     		ldr	r2, .L392+20
 8375 0496 D154     		strb	r1, [r2, r3]
2304:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 8376              		.loc 1 2304 0
 8377 0498 BA8E     		ldrh	r2, [r7, #52]
 8378 049a 144B     		ldr	r3, .L392+4
 8379 049c 1B68     		ldr	r3, [r3]
 8380 049e 591C     		adds	r1, r3, #1
 8381 04a0 1248     		ldr	r0, .L392+4
 8382 04a2 0160     		str	r1, [r0]
 8383 04a4 1344     		add	r3, r3, r2
 8384 04a6 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 8385 04a8 D1B2     		uxtb	r1, r2
 8386 04aa 144A     		ldr	r2, .L392+20
 8387 04ac D154     		strb	r1, [r2, r3]
 8388              	.LBE43:
 8389 04ae 14E0     		b	.L357
 8390              	.L363:
2305:main.c        **** 
2306:main.c        ****                     }
2307:main.c        ****                     else
2308:main.c        ****                     {
2309:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 8391              		.loc 1 2309 0
 8392 04b0 BA8E     		ldrh	r2, [r7, #52]
 8393 04b2 0E4B     		ldr	r3, .L392+4
 8394 04b4 1B68     		ldr	r3, [r3]
 8395 04b6 591C     		adds	r1, r3, #1
 8396 04b8 0C48     		ldr	r0, .L392+4
 8397 04ba 0160     		str	r1, [r0]
 8398 04bc D418     		adds	r4, r2, r3
 8399 04be 3B69     		ldr	r3, [r7, #16]	@ float
 8400 04c0 1846     		mov	r0, r3
 8401 04c2 FFF7FEFF 		bl	__aeabi_f2uiz
 8402 04c6 0346     		mov	r3, r0
 8403 04c8 DAB2     		uxtb	r2, r3
 8404 04ca 0C4B     		ldr	r3, .L392+20
 8405 04cc 1A55     		strb	r2, [r3, r4]
2310:main.c        ****                         numMappings++;
 8406              		.loc 1 2310 0
 8407 04ce 144B     		ldr	r3, .L392+56
 8408 04d0 1B88     		ldrh	r3, [r3]
 8409 04d2 0133     		adds	r3, r3, #1
 8410 04d4 9AB2     		uxth	r2, r3
 8411 04d6 124B     		ldr	r3, .L392+56
 8412 04d8 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 191


 8413              	.L357:
2311:main.c        ****                     }
2312:main.c        ****                     mapCount++;
 8414              		.loc 1 2312 0
 8415 04da 0A4B     		ldr	r3, .L392+28
 8416 04dc 1B68     		ldr	r3, [r3]
 8417 04de 0133     		adds	r3, r3, #1
 8418 04e0 084A     		ldr	r2, .L392+28
 8419 04e2 1360     		str	r3, [r2]
 8420 04e4 6DE0     		b	.L353
 8421              	.L393:
 8422 04e6 00BF     		.align	2
 8423              	.L392:
 8424 04e8 00000000 		.word	valsCount
 8425 04ec 00000000 		.word	currentFloat
 8426 04f0 00000000 		.word	valCheck
 8427 04f4 0000C0BF 		.word	-1077936128
 8428 04f8 000020C0 		.word	-1071644672
 8429 04fc 00000000 		.word	presetArray
 8430 0500 00000000 		.word	presetArraySection
 8431 0504 00000000 		.word	mapCount
 8432 0508 00000000 		.word	SPI_errors
 8433 050c 00000000 		.word	sysexMessageInProgress
 8434 0510 00000000 		.word	sysexPointer
 8435 0514 00000000 		.word	sendingMessage
 8436 0518 00000000 		.word	parseThatMF
 8437 051c 00000000 		.word	mapCountExpectation
 8438 0520 00000000 		.word	numMappings
 8439 0524 CDCCCCCC 		.word	-858993459
 8440 0528 00FEFF46 		.word	1191181824
 8441              	.L355:
2313:main.c        ****                 }
2314:main.c        ****                 
2315:main.c        **** 
2316:main.c        ****                 else
2317:main.c        ****                 {
2318:main.c        ****                     //mapcount ended
2319:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 8442              		.loc 1 2319 0
 8443 052c 3B69     		ldr	r3, [r7, #16]	@ float
 8444 052e 6649     		ldr	r1, .L394
 8445 0530 1846     		mov	r0, r3
 8446 0532 FFF7FEFF 		bl	__aeabi_fcmplt
 8447 0536 0346     		mov	r3, r0
 8448 0538 002B     		cmp	r3, #0
 8449 053a 31D0     		beq	.L364
 8450              		.loc 1 2319 0 is_stmt 0 discriminator 1
 8451 053c 3B69     		ldr	r3, [r7, #16]	@ float
 8452 053e 6349     		ldr	r1, .L394+4
 8453 0540 1846     		mov	r0, r3
 8454 0542 FFF7FEFF 		bl	__aeabi_fcmpgt
 8455 0546 0346     		mov	r3, r0
 8456 0548 002B     		cmp	r3, #0
 8457 054a 29D0     		beq	.L364
2320:main.c        ****                     {
2321:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8458              		.loc 1 2321 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 192


 8459 054c BA8E     		ldrh	r2, [r7, #52]
 8460 054e 604B     		ldr	r3, .L394+8
 8461 0550 1B68     		ldr	r3, [r3]
 8462 0552 591C     		adds	r1, r3, #1
 8463 0554 5E48     		ldr	r0, .L394+8
 8464 0556 0160     		str	r1, [r0]
 8465 0558 1344     		add	r3, r3, r2
 8466 055a 5E4A     		ldr	r2, .L394+12
 8467 055c FE21     		movs	r1, #254
 8468 055e D154     		strb	r1, [r2, r3]
2322:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 8469              		.loc 1 2322 0
 8470 0560 BA8E     		ldrh	r2, [r7, #52]
 8471 0562 5B4B     		ldr	r3, .L394+8
 8472 0564 1B68     		ldr	r3, [r3]
 8473 0566 591C     		adds	r1, r3, #1
 8474 0568 5948     		ldr	r0, .L394+8
 8475 056a 0160     		str	r1, [r0]
 8476 056c 1344     		add	r3, r3, r2
 8477 056e 594A     		ldr	r2, .L394+12
 8478 0570 FE21     		movs	r1, #254
 8479 0572 D154     		strb	r1, [r2, r3]
2323:main.c        ****                         presetArraySection = presetEnd;
 8480              		.loc 1 2323 0
 8481 0574 584B     		ldr	r3, .L394+16
 8482 0576 0522     		movs	r2, #5
 8483 0578 1A70     		strb	r2, [r3]
2324:main.c        ****                         sysexMessageInProgress = 0;
 8484              		.loc 1 2324 0
 8485 057a 584B     		ldr	r3, .L394+20
 8486 057c 0022     		movs	r2, #0
 8487 057e 1A70     		strb	r2, [r3]
2325:main.c        ****                         sendingMessage = 1;
 8488              		.loc 1 2325 0
 8489 0580 574B     		ldr	r3, .L394+24
 8490 0582 0122     		movs	r2, #1
 8491 0584 1A70     		strb	r2, [r3]
2326:main.c        ****                         patchNum = presetNumberToWrite;
 8492              		.loc 1 2326 0
 8493 0586 574B     		ldr	r3, .L394+28
 8494 0588 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8495 058a 574B     		ldr	r3, .L394+32
 8496 058c 1A70     		strb	r2, [r3]
2327:main.c        ****                         messageArraySize = valsStart + currentFloat;
 8497              		.loc 1 2327 0
 8498 058e 504B     		ldr	r3, .L394+8
 8499 0590 1B68     		ldr	r3, [r3]
 8500 0592 9AB2     		uxth	r2, r3
 8501 0594 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 8502 0596 1344     		add	r3, r3, r2
 8503 0598 9AB2     		uxth	r2, r3
 8504 059a 544B     		ldr	r3, .L394+36
 8505 059c 1A80     		strh	r2, [r3]	@ movhi
 8506 059e 10E0     		b	.L353
 8507              	.L364:
2328:main.c        ****                     }
2329:main.c        ****                     else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 193


2330:main.c        ****                     {
2331:main.c        ****                         //error state
2332:main.c        ****                         SPI_errors++;
 8508              		.loc 1 2332 0
 8509 05a0 534B     		ldr	r3, .L394+40
 8510 05a2 1B68     		ldr	r3, [r3]
 8511 05a4 0133     		adds	r3, r3, #1
 8512 05a6 524A     		ldr	r2, .L394+40
 8513 05a8 1360     		str	r3, [r2]
2333:main.c        ****                         sysexMessageInProgress = 0;
 8514              		.loc 1 2333 0
 8515 05aa 4C4B     		ldr	r3, .L394+20
 8516 05ac 0022     		movs	r2, #0
 8517 05ae 1A70     		strb	r2, [r3]
2334:main.c        ****                         sysexPointer = 0;
 8518              		.loc 1 2334 0
 8519 05b0 504B     		ldr	r3, .L394+44
 8520 05b2 0022     		movs	r2, #0
 8521 05b4 1A60     		str	r2, [r3]
2335:main.c        ****                         sendingMessage = 0;
 8522              		.loc 1 2335 0
 8523 05b6 4A4B     		ldr	r3, .L394+24
 8524 05b8 0022     		movs	r2, #0
 8525 05ba 1A70     		strb	r2, [r3]
2336:main.c        ****                         parseThatMF = 0;
 8526              		.loc 1 2336 0
 8527 05bc 4E4B     		ldr	r3, .L394+48
 8528 05be 0022     		movs	r2, #0
 8529 05c0 1A70     		strb	r2, [r3]
 8530              	.L353:
2222:main.c        ****         {
 8531              		.loc 1 2222 0
 8532 05c2 FB6C     		ldr	r3, [r7, #76]
 8533 05c4 0533     		adds	r3, r3, #5
 8534 05c6 FB64     		str	r3, [r7, #76]
 8535              	.L345:
2222:main.c        ****         {
 8536              		.loc 1 2222 0 is_stmt 0 discriminator 1
 8537 05c8 4A4B     		ldr	r3, .L394+44
 8538 05ca 1B68     		ldr	r3, [r3]
 8539 05cc FA6C     		ldr	r2, [r7, #76]
 8540 05ce 9A42     		cmp	r2, r3
 8541 05d0 FFF4B0AD 		bcc	.L367
 8542 05d4 F0E2     		b	.L368
 8543              	.L338:
 8544              	.LBE39:
2337:main.c        ****                     }
2338:main.c        ****                 }
2339:main.c        ****             }
2340:main.c        ****             
2341:main.c        ****         }
2342:main.c        ****     }
2343:main.c        ****     #if 0
2344:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2345:main.c        ****     {
2346:main.c        ****         
2347:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 194


2348:main.c        ****         currentFloat = 0;
2349:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2350:main.c        ****         union breakFloat theVal;
2351:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2352:main.c        ****         {
2353:main.c        ****             theVal.u32 = 0;
2354:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2355:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2356:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2357:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2358:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2359:main.c        ****             testVal = theVal.f;
2360:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2361:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2362:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2363:main.c        ****         }
2364:main.c        ****         
2365:main.c        ****         tuningArray[currentFloat++] = 0xef;
2366:main.c        ****         tuningArray[currentFloat++] = 0xef;
2367:main.c        ****                         
2368:main.c        ****         
2369:main.c        ****         messageArraySize = currentFloat;
2370:main.c        ****                     
2371:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2372:main.c        ****         {
2373:main.c        ****             //error state
2374:main.c        ****             SPI_errors++;
2375:main.c        ****             sysexMessageInProgress = 0;
2376:main.c        ****             sysexPointer = 0;
2377:main.c        ****             sendingMessage = 0;
2378:main.c        ****             parseThatMF = 0;
2379:main.c        ****         } else 
2380:main.c        ****         {
2381:main.c        ****             sysexMessageInProgress = 0;
2382:main.c        ****             sendingMessage = 2;
2383:main.c        ****         }
2384:main.c        ****     }
2385:main.c        ****     #endif
2386:main.c        ****     
2387:main.c        **** 
2388:main.c        ****     
2389:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 8545              		.loc 1 2389 0 is_stmt 1
 8546 05d6 494B     		ldr	r3, .L394+52
 8547 05d8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8548 05da 022B     		cmp	r3, #2
 8549 05dc 40F08281 		bne	.L369
 8550              	.LBB44:
2390:main.c        ****     {
2391:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8551              		.loc 1 2391 0
 8552 05e0 3E4B     		ldr	r3, .L394+20
 8553 05e2 0122     		movs	r2, #1
 8554 05e4 1A70     		strb	r2, [r3]
2392:main.c        ****         currentFloat = 0;
 8555              		.loc 1 2392 0
 8556 05e6 3A4B     		ldr	r3, .L394+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 195


 8557 05e8 0022     		movs	r2, #0
 8558 05ea 1A60     		str	r2, [r3]
2393:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 8559              		.loc 1 2393 0
 8560 05ec 434B     		ldr	r3, .L394+52
 8561 05ee 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8562 05f0 434B     		ldr	r3, .L394+56
 8563 05f2 1A70     		strb	r2, [r3]
2394:main.c        ****         currentCopedent = copedentNumberToWrite;
 8564              		.loc 1 2394 0
 8565 05f4 424B     		ldr	r3, .L394+56
 8566 05f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8567 05f8 424B     		ldr	r3, .L394+60
 8568 05fa 1A70     		strb	r2, [r3]
2395:main.c        ****         necks[currentNeck] = currentCopedent;
 8569              		.loc 1 2395 0
 8570 05fc 424B     		ldr	r3, .L394+64
 8571 05fe 1B68     		ldr	r3, [r3]
 8572 0600 404A     		ldr	r2, .L394+60
 8573 0602 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8574 0604 414A     		ldr	r2, .L394+68
 8575 0606 D154     		strb	r1, [r2, r3]
2396:main.c        **** 
2397:main.c        ****               
2398:main.c        ****         
2399:main.c        ****         union breakFloat theVal;
2400:main.c        ****         uint32_t i = 2;
 8576              		.loc 1 2400 0
 8577 0608 0223     		movs	r3, #2
 8578 060a 3B64     		str	r3, [r7, #64]
2401:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 8579              		.loc 1 2401 0
 8580 060c 1023     		movs	r3, #16
 8581 060e 87F82F30 		strb	r3, [r7, #47]
2402:main.c        ****         for (; i < stoppingPoint; i++)
 8582              		.loc 1 2402 0
 8583 0612 43E0     		b	.L370
 8584              	.L371:
 8585              	.LBB45:
2403:main.c        ****         {
2404:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2405:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 8586              		.loc 1 2405 0 discriminator 2
 8587 0614 394A     		ldr	r2, .L394+52
 8588 0616 3B6C     		ldr	r3, [r7, #64]
 8589 0618 1344     		add	r3, r3, r2
 8590 061a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8591 061c 03F07F03 		and	r3, r3, #127
 8592 0620 87F82E30 		strb	r3, [r7, #46]
2406:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 8593              		.loc 1 2406 0 discriminator 2
 8594 0624 364B     		ldr	r3, .L394+56
 8595 0626 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8596 0628 1846     		mov	r0, r3
 8597 062a 3B6C     		ldr	r3, [r7, #64]
 8598 062c 9A1E     		subs	r2, r3, #2
 8599 062e 3849     		ldr	r1, .L394+72
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 196


 8600 0630 0346     		mov	r3, r0
 8601 0632 DB00     		lsls	r3, r3, #3
 8602 0634 1B1A     		subs	r3, r3, r0
 8603 0636 5B00     		lsls	r3, r3, #1
 8604 0638 0B44     		add	r3, r3, r1
 8605 063a 1344     		add	r3, r3, r2
 8606 063c 97F82E20 		ldrb	r2, [r7, #46]
 8607 0640 1A70     		strb	r2, [r3]
2407:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 8608              		.loc 1 2407 0 discriminator 2
 8609 0642 2F4B     		ldr	r3, .L394+56
 8610 0644 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8611 0646 9BB2     		uxth	r3, r3
 8612 0648 1A46     		mov	r2, r3	@ movhi
 8613 064a 1201     		lsls	r2, r2, #4
 8614 064c 1A44     		add	r2, r2, r3
 8615 064e 9200     		lsls	r2, r2, #2
 8616 0650 1A44     		add	r2, r2, r3
 8617 0652 5200     		lsls	r2, r2, #1
 8618 0654 1344     		add	r3, r3, r2
 8619 0656 5B00     		lsls	r3, r3, #1
 8620 0658 9BB2     		uxth	r3, r3
 8621 065a 0233     		adds	r3, r3, #2
 8622 065c 9AB2     		uxth	r2, r3
 8623 065e 2D4B     		ldr	r3, .L394+76
 8624 0660 1A80     		strh	r2, [r3]	@ movhi
2408:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 8625              		.loc 1 2408 0 discriminator 2
 8626 0662 274B     		ldr	r3, .L394+56
 8627 0664 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8628 0666 9BB2     		uxth	r3, r3
 8629 0668 1A46     		mov	r2, r3	@ movhi
 8630 066a 1201     		lsls	r2, r2, #4
 8631 066c 1A44     		add	r2, r2, r3
 8632 066e 9200     		lsls	r2, r2, #2
 8633 0670 1A44     		add	r2, r2, r3
 8634 0672 5200     		lsls	r2, r2, #1
 8635 0674 1344     		add	r3, r3, r2
 8636 0676 5B00     		lsls	r3, r3, #1
 8637 0678 9AB2     		uxth	r2, r3
 8638 067a 3B6C     		ldr	r3, [r7, #64]
 8639 067c 9BB2     		uxth	r3, r3
 8640 067e 1344     		add	r3, r3, r2
 8641 0680 9AB2     		uxth	r2, r3
 8642 0682 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 8643 0686 1146     		mov	r1, r2
 8644 0688 1846     		mov	r0, r3
 8645 068a FFF7FEFF 		bl	EEPROM_WriteByte
 8646 068e 0346     		mov	r3, r0
 8647 0690 DAB2     		uxtb	r2, r3
 8648 0692 214B     		ldr	r3, .L394+80
 8649 0694 1A70     		strb	r2, [r3]
 8650              	.LBE45:
2402:main.c        ****         {
 8651              		.loc 1 2402 0 discriminator 2
 8652 0696 3B6C     		ldr	r3, [r7, #64]
 8653 0698 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 197


 8654 069a 3B64     		str	r3, [r7, #64]
 8655              	.L370:
2402:main.c        ****         {
 8656              		.loc 1 2402 0 is_stmt 0 discriminator 1
 8657 069c 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 8658 06a0 3B6C     		ldr	r3, [r7, #64]
 8659 06a2 9A42     		cmp	r2, r3
 8660 06a4 B6D8     		bhi	.L371
2409:main.c        ****         }
2410:main.c        ****         
2411:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 8661              		.loc 1 2411 0 is_stmt 1
 8662 06a6 1023     		movs	r3, #16
 8663 06a8 3B64     		str	r3, [r7, #64]
2412:main.c        **** 
2413:main.c        ****  
2414:main.c        ****         while(i < sysexPointer)
 8664              		.loc 1 2414 0
 8665 06aa DCE0     		b	.L372
 8666              	.L377:
 8667              	.LBB46:
2415:main.c        ****         {
2416:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 8668              		.loc 1 2416 0
 8669 06ac 0023     		movs	r3, #0
 8670 06ae FB63     		str	r3, [r7, #60]
 8671 06b0 D5E0     		b	.L373
 8672              	.L376:
 8673              	.LBB47:
2417:main.c        ****             {
2418:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 8674              		.loc 1 2418 0
 8675 06b2 FB6B     		ldr	r3, [r7, #60]
 8676 06b4 9BB2     		uxth	r3, r3
 8677 06b6 1A46     		mov	r2, r3	@ movhi
 8678 06b8 5200     		lsls	r2, r2, #1
 8679 06ba 1344     		add	r3, r3, r2
 8680 06bc DB00     		lsls	r3, r3, #3
 8681 06be BB85     		strh	r3, [r7, #44]	@ movhi
 8682              	.LBB48:
2419:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 8683              		.loc 1 2419 0
 8684 06c0 0023     		movs	r3, #0
 8685 06c2 BB63     		str	r3, [r7, #56]
 8686 06c4 C4E0     		b	.L374
 8687              	.L395:
 8688 06c6 00BF     		.align	2
 8689              	.L394:
 8690 06c8 000020C0 		.word	-1071644672
 8691 06cc 000060C0 		.word	-1067450368
 8692 06d0 00000000 		.word	currentFloat
 8693 06d4 00000000 		.word	presetArray
 8694 06d8 00000000 		.word	presetArraySection
 8695 06dc 00000000 		.word	sysexMessageInProgress
 8696 06e0 00000000 		.word	sendingMessage
 8697 06e4 00000000 		.word	presetNumberToWrite
 8698 06e8 00000000 		.word	patchNum
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 198


 8699 06ec 00000000 		.word	messageArraySize
 8700 06f0 00000000 		.word	SPI_errors
 8701 06f4 00000000 		.word	sysexPointer
 8702 06f8 00000000 		.word	parseThatMF
 8703 06fc 00000000 		.word	sysexBuffer
 8704 0700 00000000 		.word	copedentNumberToWrite
 8705 0704 00000000 		.word	currentCopedent
 8706 0708 00000000 		.word	currentNeck
 8707 070c 00000000 		.word	necks
 8708 0710 00000000 		.word	copedentNamesArray
 8709 0714 00000000 		.word	checkBase
 8710 0718 00000000 		.word	checkStatus
 8711              	.L375:
 8712              	.LBB49:
2420:main.c        ****                 {
2421:main.c        ****                     
2422:main.c        ****                     theVal.u32 = 0;
 8713              		.loc 1 2422 0 discriminator 3
 8714 071c 0023     		movs	r3, #0
 8715 071e FB60     		str	r3, [r7, #12]
2423:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8716              		.loc 1 2423 0 discriminator 3
 8717 0720 FB68     		ldr	r3, [r7, #12]
 8718 0722 6449     		ldr	r1, .L396
 8719 0724 3A6C     		ldr	r2, [r7, #64]
 8720 0726 0A44     		add	r2, r2, r1
 8721 0728 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8722 072a 1207     		lsls	r2, r2, #28
 8723 072c 1343     		orrs	r3, r3, r2
 8724 072e FB60     		str	r3, [r7, #12]
2424:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 8725              		.loc 1 2424 0 discriminator 3
 8726 0730 FB68     		ldr	r3, [r7, #12]
 8727 0732 3A6C     		ldr	r2, [r7, #64]
 8728 0734 0132     		adds	r2, r2, #1
 8729 0736 5F49     		ldr	r1, .L396
 8730 0738 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8731 073a 5205     		lsls	r2, r2, #21
 8732 073c 1343     		orrs	r3, r3, r2
 8733 073e FB60     		str	r3, [r7, #12]
2425:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 8734              		.loc 1 2425 0 discriminator 3
 8735 0740 FB68     		ldr	r3, [r7, #12]
 8736 0742 3A6C     		ldr	r2, [r7, #64]
 8737 0744 0232     		adds	r2, r2, #2
 8738 0746 5B49     		ldr	r1, .L396
 8739 0748 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8740 074a 9203     		lsls	r2, r2, #14
 8741 074c 1343     		orrs	r3, r3, r2
 8742 074e FB60     		str	r3, [r7, #12]
2426:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 8743              		.loc 1 2426 0 discriminator 3
 8744 0750 FB68     		ldr	r3, [r7, #12]
 8745 0752 3A6C     		ldr	r2, [r7, #64]
 8746 0754 0332     		adds	r2, r2, #3
 8747 0756 5749     		ldr	r1, .L396
 8748 0758 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 199


 8749 075a D201     		lsls	r2, r2, #7
 8750 075c 1343     		orrs	r3, r3, r2
 8751 075e FB60     		str	r3, [r7, #12]
2427:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 8752              		.loc 1 2427 0 discriminator 3
 8753 0760 FA68     		ldr	r2, [r7, #12]
 8754 0762 3B6C     		ldr	r3, [r7, #64]
 8755 0764 0433     		adds	r3, r3, #4
 8756 0766 5349     		ldr	r1, .L396
 8757 0768 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8758 076a 03F07F03 		and	r3, r3, #127
 8759 076e 1343     		orrs	r3, r3, r2
 8760 0770 FB60     		str	r3, [r7, #12]
2428:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 8761              		.loc 1 2428 0 discriminator 3
 8762 0772 514B     		ldr	r3, .L396+4
 8763 0774 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8764 0776 1C46     		mov	r4, r3
 8765 0778 F968     		ldr	r1, [r7, #12]	@ float
 8766 077a 5048     		ldr	r0, .L396+8
 8767 077c FB6B     		ldr	r3, [r7, #60]
 8768 077e 1A46     		mov	r2, r3
 8769 0780 5200     		lsls	r2, r2, #1
 8770 0782 1A44     		add	r2, r2, r3
 8771 0784 9300     		lsls	r3, r2, #2
 8772 0786 1A46     		mov	r2, r3
 8773 0788 2346     		mov	r3, r4
 8774 078a 5B01     		lsls	r3, r3, #5
 8775 078c 2344     		add	r3, r3, r4
 8776 078e 9B00     		lsls	r3, r3, #2
 8777 0790 1A44     		add	r2, r2, r3
 8778 0792 BB6B     		ldr	r3, [r7, #56]
 8779 0794 1344     		add	r3, r3, r2
 8780 0796 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2429:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 8781              		.loc 1 2429 0 discriminator 3
 8782 079a FB68     		ldr	r3, [r7, #12]	@ float
 8783 079c 4FF08741 		mov	r1, #1132462080
 8784 07a0 1846     		mov	r0, r3
 8785 07a2 FFF7FEFF 		bl	__aeabi_fmul
 8786 07a6 0346     		mov	r3, r0
 8787 07a8 4FF08E41 		mov	r1, #1191182336
 8788 07ac 1846     		mov	r0, r3
 8789 07ae FFF7FEFF 		bl	__aeabi_fadd
 8790 07b2 0346     		mov	r3, r0
 8791 07b4 1846     		mov	r0, r3
 8792 07b6 FFF7FEFF 		bl	__aeabi_f2uiz
 8793 07ba 0346     		mov	r3, r0
 8794 07bc 7B85     		strh	r3, [r7, #42]	@ movhi
2430:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 8795              		.loc 1 2430 0 discriminator 3
 8796 07be 7B8D     		ldrh	r3, [r7, #42]
 8797 07c0 1B0A     		lsrs	r3, r3, #8
 8798 07c2 9BB2     		uxth	r3, r3
 8799 07c4 87F82930 		strb	r3, [r7, #41]
2431:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 8800              		.loc 1 2431 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 200


 8801 07c8 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 8802 07ca 87F82830 		strb	r3, [r7, #40]
2432:main.c        ****                     
2433:main.c        ****                     
2434:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 8803              		.loc 1 2434 0 discriminator 3
 8804 07ce BB6B     		ldr	r3, [r7, #56]
 8805 07d0 9BB2     		uxth	r3, r3
 8806 07d2 5B00     		lsls	r3, r3, #1
 8807 07d4 FB84     		strh	r3, [r7, #38]	@ movhi
2435:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 8808              		.loc 1 2435 0 discriminator 3
 8809 07d6 FA8C     		ldrh	r2, [r7, #38]	@ movhi
 8810 07d8 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 8811 07da 1344     		add	r3, r3, r2
 8812 07dc 9AB2     		uxth	r2, r3
 8813 07de 364B     		ldr	r3, .L396+4
 8814 07e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8815 07e2 9BB2     		uxth	r3, r3
 8816 07e4 1946     		mov	r1, r3	@ movhi
 8817 07e6 0901     		lsls	r1, r1, #4
 8818 07e8 1944     		add	r1, r1, r3
 8819 07ea 8900     		lsls	r1, r1, #2
 8820 07ec 1944     		add	r1, r1, r3
 8821 07ee 4900     		lsls	r1, r1, #1
 8822 07f0 0B44     		add	r3, r3, r1
 8823 07f2 5B00     		lsls	r3, r3, #1
 8824 07f4 9BB2     		uxth	r3, r3
 8825 07f6 1344     		add	r3, r3, r2
 8826 07f8 9BB2     		uxth	r3, r3
 8827 07fa 1033     		adds	r3, r3, #16
 8828 07fc 9AB2     		uxth	r2, r3
 8829 07fe 304B     		ldr	r3, .L396+12
 8830 0800 1A80     		strh	r2, [r3]	@ movhi
2436:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 8831              		.loc 1 2436 0 discriminator 3
 8832 0802 2F4B     		ldr	r3, .L396+12
 8833 0804 1B88     		ldrh	r3, [r3]	@ movhi
 8834 0806 9AB2     		uxth	r2, r3
 8835 0808 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 8836 080c 1146     		mov	r1, r2
 8837 080e 1846     		mov	r0, r3
 8838 0810 FFF7FEFF 		bl	EEPROM_WriteByte
 8839 0814 0346     		mov	r3, r0
 8840 0816 DAB2     		uxtb	r2, r3
 8841 0818 2A4B     		ldr	r3, .L396+16
 8842 081a 1A70     		strb	r2, [r3]
2437:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 8843              		.loc 1 2437 0 discriminator 3
 8844 081c 284B     		ldr	r3, .L396+12
 8845 081e 1B88     		ldrh	r3, [r3]	@ movhi
 8846 0820 9BB2     		uxth	r3, r3
 8847 0822 0133     		adds	r3, r3, #1
 8848 0824 9AB2     		uxth	r2, r3
 8849 0826 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 8850 082a 1146     		mov	r1, r2
 8851 082c 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 201


 8852 082e FFF7FEFF 		bl	EEPROM_WriteByte
 8853 0832 0346     		mov	r3, r0
 8854 0834 DAB2     		uxtb	r2, r3
 8855 0836 234B     		ldr	r3, .L396+16
 8856 0838 1A70     		strb	r2, [r3]
2438:main.c        ****                     currentFloat++;
 8857              		.loc 1 2438 0 discriminator 3
 8858 083a 234B     		ldr	r3, .L396+20
 8859 083c 1B68     		ldr	r3, [r3]
 8860 083e 0133     		adds	r3, r3, #1
 8861 0840 214A     		ldr	r2, .L396+20
 8862 0842 1360     		str	r3, [r2]
2439:main.c        ****                     i = i+5;
 8863              		.loc 1 2439 0 discriminator 3
 8864 0844 3B6C     		ldr	r3, [r7, #64]
 8865 0846 0533     		adds	r3, r3, #5
 8866 0848 3B64     		str	r3, [r7, #64]
 8867              	.LBE49:
2419:main.c        ****                 {
 8868              		.loc 1 2419 0 discriminator 3
 8869 084a BB6B     		ldr	r3, [r7, #56]
 8870 084c 0133     		adds	r3, r3, #1
 8871 084e BB63     		str	r3, [r7, #56]
 8872              	.L374:
2419:main.c        ****                 {
 8873              		.loc 1 2419 0 is_stmt 0 discriminator 1
 8874 0850 BB6B     		ldr	r3, [r7, #56]
 8875 0852 0B2B     		cmp	r3, #11
 8876 0854 7FF662AF 		bls	.L375
 8877              	.LBE48:
 8878              	.LBE47:
2416:main.c        ****             {
 8879              		.loc 1 2416 0 is_stmt 1 discriminator 2
 8880 0858 FB6B     		ldr	r3, [r7, #60]
 8881 085a 0133     		adds	r3, r3, #1
 8882 085c FB63     		str	r3, [r7, #60]
 8883              	.L373:
2416:main.c        ****             {
 8884              		.loc 1 2416 0 is_stmt 0 discriminator 1
 8885 085e FB6B     		ldr	r3, [r7, #60]
 8886 0860 0A2B     		cmp	r3, #10
 8887 0862 7FF626AF 		bls	.L376
 8888              	.L372:
 8889              	.LBE46:
2414:main.c        ****         {
 8890              		.loc 1 2414 0 is_stmt 1
 8891 0866 194B     		ldr	r3, .L396+24
 8892 0868 1B68     		ldr	r3, [r3]
 8893 086a 3A6C     		ldr	r2, [r7, #64]
 8894 086c 9A42     		cmp	r2, r3
 8895 086e FFF41DAF 		bcc	.L377
2440:main.c        ****                 }
2441:main.c        ****                 
2442:main.c        ****             }
2443:main.c        ****         }
2444:main.c        ****                         
2445:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 202


2446:main.c        ****         messageArraySize = currentFloat;
 8896              		.loc 1 2446 0
 8897 0872 154B     		ldr	r3, .L396+20
 8898 0874 1B68     		ldr	r3, [r3]
 8899 0876 9AB2     		uxth	r2, r3
 8900 0878 154B     		ldr	r3, .L396+28
 8901 087a 1A80     		strh	r2, [r3]	@ movhi
2447:main.c        ****                     
2448:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 8902              		.loc 1 2448 0
 8903 087c 144B     		ldr	r3, .L396+28
 8904 087e 1B88     		ldrh	r3, [r3]
 8905 0880 842B     		cmp	r3, #132
 8906 0882 11D0     		beq	.L378
2449:main.c        ****         {
2450:main.c        ****             //error state
2451:main.c        ****             SPI_errors++;
 8907              		.loc 1 2451 0
 8908 0884 134B     		ldr	r3, .L396+32
 8909 0886 1B68     		ldr	r3, [r3]
 8910 0888 0133     		adds	r3, r3, #1
 8911 088a 124A     		ldr	r2, .L396+32
 8912 088c 1360     		str	r3, [r2]
2452:main.c        ****             sysexMessageInProgress = 0;
 8913              		.loc 1 2452 0
 8914 088e 124B     		ldr	r3, .L396+36
 8915 0890 0022     		movs	r2, #0
 8916 0892 1A70     		strb	r2, [r3]
2453:main.c        ****             sysexPointer = 0;
 8917              		.loc 1 2453 0
 8918 0894 0D4B     		ldr	r3, .L396+24
 8919 0896 0022     		movs	r2, #0
 8920 0898 1A60     		str	r2, [r3]
2454:main.c        ****             sendingMessage = 0;
 8921              		.loc 1 2454 0
 8922 089a 104B     		ldr	r3, .L396+40
 8923 089c 0022     		movs	r2, #0
 8924 089e 1A70     		strb	r2, [r3]
2455:main.c        ****             parseThatMF = 0;
 8925              		.loc 1 2455 0
 8926 08a0 0F4B     		ldr	r3, .L396+44
 8927 08a2 0022     		movs	r2, #0
 8928 08a4 1A70     		strb	r2, [r3]
 8929 08a6 87E1     		b	.L368
 8930              	.L378:
2456:main.c        ****         } 
2457:main.c        ****         else 
2458:main.c        ****         {
2459:main.c        ****             sysexMessageInProgress = 0;
 8931              		.loc 1 2459 0
 8932 08a8 0B4B     		ldr	r3, .L396+36
 8933 08aa 0022     		movs	r2, #0
 8934 08ac 1A70     		strb	r2, [r3]
2460:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2461:main.c        ****             
2462:main.c        ****             displayCurrentPresetNameAndCopedent();
 8935              		.loc 1 2462 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 203


 8936 08ae FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 8937 08b2 81E1     		b	.L368
 8938              	.L397:
 8939              		.align	2
 8940              	.L396:
 8941 08b4 00000000 		.word	sysexBuffer
 8942 08b8 00000000 		.word	copedentNumberToWrite
 8943 08bc 00000000 		.word	copedent
 8944 08c0 00000000 		.word	checkBase
 8945 08c4 00000000 		.word	checkStatus
 8946 08c8 00000000 		.word	currentFloat
 8947 08cc 00000000 		.word	sysexPointer
 8948 08d0 00000000 		.word	messageArraySize
 8949 08d4 00000000 		.word	SPI_errors
 8950 08d8 00000000 		.word	sysexMessageInProgress
 8951 08dc 00000000 		.word	sendingMessage
 8952 08e0 00000000 		.word	parseThatMF
 8953              	.L369:
 8954              	.LBE44:
2463:main.c        ****         }
2464:main.c        ****     }
2465:main.c        ****     
2466:main.c        ****     
2467:main.c        ****     else if (sysexBuffer[0] == 3) //it's a real-time parameter change
 8955              		.loc 1 2467 0
 8956 08e4 9F4B     		ldr	r3, .L398
 8957 08e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8958 08e8 032B     		cmp	r3, #3
 8959 08ea 40F08B80 		bne	.L380
 8960              	.LBB50:
2468:main.c        ****     {
2469:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8961              		.loc 1 2469 0
 8962 08ee 9E4B     		ldr	r3, .L398+4
 8963 08f0 0122     		movs	r2, #1
 8964 08f2 1A70     		strb	r2, [r3]
2470:main.c        ****         union breakFloat theVal;
2471:main.c        ****         uint32_t i = 2;
 8965              		.loc 1 2471 0
 8966 08f4 0223     		movs	r3, #2
 8967 08f6 3B62     		str	r3, [r7, #32]
2472:main.c        ****         
2473:main.c        ****         //get the parameter ID
2474:main.c        ****         theVal.u32 = 0;
 8968              		.loc 1 2474 0
 8969 08f8 0023     		movs	r3, #0
 8970 08fa BB60     		str	r3, [r7, #8]
2475:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 8971              		.loc 1 2475 0
 8972 08fc BB68     		ldr	r3, [r7, #8]
 8973 08fe 9949     		ldr	r1, .L398
 8974 0900 3A6A     		ldr	r2, [r7, #32]
 8975 0902 0A44     		add	r2, r2, r1
 8976 0904 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 8977 0906 1207     		lsls	r2, r2, #28
 8978 0908 1343     		orrs	r3, r3, r2
 8979 090a BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 204


2476:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 8980              		.loc 1 2476 0
 8981 090c BB68     		ldr	r3, [r7, #8]
 8982 090e 3A6A     		ldr	r2, [r7, #32]
 8983 0910 0132     		adds	r2, r2, #1
 8984 0912 9449     		ldr	r1, .L398
 8985 0914 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8986 0916 5205     		lsls	r2, r2, #21
 8987 0918 1343     		orrs	r3, r3, r2
 8988 091a BB60     		str	r3, [r7, #8]
2477:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 8989              		.loc 1 2477 0
 8990 091c BB68     		ldr	r3, [r7, #8]
 8991 091e 3A6A     		ldr	r2, [r7, #32]
 8992 0920 0232     		adds	r2, r2, #2
 8993 0922 9049     		ldr	r1, .L398
 8994 0924 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8995 0926 9203     		lsls	r2, r2, #14
 8996 0928 1343     		orrs	r3, r3, r2
 8997 092a BB60     		str	r3, [r7, #8]
2478:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 8998              		.loc 1 2478 0
 8999 092c BB68     		ldr	r3, [r7, #8]
 9000 092e 3A6A     		ldr	r2, [r7, #32]
 9001 0930 0332     		adds	r2, r2, #3
 9002 0932 8C49     		ldr	r1, .L398
 9003 0934 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9004 0936 D201     		lsls	r2, r2, #7
 9005 0938 1343     		orrs	r3, r3, r2
 9006 093a BB60     		str	r3, [r7, #8]
2479:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9007              		.loc 1 2479 0
 9008 093c BA68     		ldr	r2, [r7, #8]
 9009 093e 3B6A     		ldr	r3, [r7, #32]
 9010 0940 0433     		adds	r3, r3, #4
 9011 0942 8849     		ldr	r1, .L398
 9012 0944 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9013 0946 03F07F03 		and	r3, r3, #127
 9014 094a 1343     		orrs	r3, r3, r2
 9015 094c BB60     		str	r3, [r7, #8]
2480:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9016              		.loc 1 2480 0
 9017 094e BB68     		ldr	r3, [r7, #8]	@ float
 9018 0950 1846     		mov	r0, r3
 9019 0952 FFF7FEFF 		bl	roundf
 9020 0956 0346     		mov	r3, r0
 9021 0958 1846     		mov	r0, r3
 9022 095a FFF7FEFF 		bl	__aeabi_f2uiz
 9023 095e 0346     		mov	r3, r0
 9024 0960 FB83     		strh	r3, [r7, #30]	@ movhi
2481:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 9025              		.loc 1 2481 0
 9026 0962 824B     		ldr	r3, .L398+8
 9027 0964 0022     		movs	r2, #0
 9028 0966 1A70     		strb	r2, [r3]
2482:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 9029              		.loc 1 2482 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 205


 9030 0968 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 9031 096a DAB2     		uxtb	r2, r3
 9032 096c 804B     		ldr	r3, .L398+12
 9033 096e 1A70     		strb	r2, [r3]
2483:main.c        ****         
2484:main.c        ****         i = i+5;
 9034              		.loc 1 2484 0
 9035 0970 3B6A     		ldr	r3, [r7, #32]
 9036 0972 0533     		adds	r3, r3, #5
 9037 0974 3B62     		str	r3, [r7, #32]
2485:main.c        ****         
2486:main.c        ****         //get the parameter value
2487:main.c        ****         theVal.u32 = 0;
 9038              		.loc 1 2487 0
 9039 0976 0023     		movs	r3, #0
 9040 0978 BB60     		str	r3, [r7, #8]
2488:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9041              		.loc 1 2488 0
 9042 097a BB68     		ldr	r3, [r7, #8]
 9043 097c 7949     		ldr	r1, .L398
 9044 097e 3A6A     		ldr	r2, [r7, #32]
 9045 0980 0A44     		add	r2, r2, r1
 9046 0982 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9047 0984 1207     		lsls	r2, r2, #28
 9048 0986 1343     		orrs	r3, r3, r2
 9049 0988 BB60     		str	r3, [r7, #8]
2489:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9050              		.loc 1 2489 0
 9051 098a BB68     		ldr	r3, [r7, #8]
 9052 098c 3A6A     		ldr	r2, [r7, #32]
 9053 098e 0132     		adds	r2, r2, #1
 9054 0990 7449     		ldr	r1, .L398
 9055 0992 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9056 0994 5205     		lsls	r2, r2, #21
 9057 0996 1343     		orrs	r3, r3, r2
 9058 0998 BB60     		str	r3, [r7, #8]
2490:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9059              		.loc 1 2490 0
 9060 099a BB68     		ldr	r3, [r7, #8]
 9061 099c 3A6A     		ldr	r2, [r7, #32]
 9062 099e 0232     		adds	r2, r2, #2
 9063 09a0 7049     		ldr	r1, .L398
 9064 09a2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9065 09a4 9203     		lsls	r2, r2, #14
 9066 09a6 1343     		orrs	r3, r3, r2
 9067 09a8 BB60     		str	r3, [r7, #8]
2491:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9068              		.loc 1 2491 0
 9069 09aa BB68     		ldr	r3, [r7, #8]
 9070 09ac 3A6A     		ldr	r2, [r7, #32]
 9071 09ae 0332     		adds	r2, r2, #3
 9072 09b0 6C49     		ldr	r1, .L398
 9073 09b2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9074 09b4 D201     		lsls	r2, r2, #7
 9075 09b6 1343     		orrs	r3, r3, r2
 9076 09b8 BB60     		str	r3, [r7, #8]
2492:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 206


 9077              		.loc 1 2492 0
 9078 09ba BA68     		ldr	r2, [r7, #8]
 9079 09bc 3B6A     		ldr	r3, [r7, #32]
 9080 09be 0433     		adds	r3, r3, #4
 9081 09c0 6849     		ldr	r1, .L398
 9082 09c2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9083 09c4 03F07F03 		and	r3, r3, #127
 9084 09c8 1343     		orrs	r3, r3, r2
 9085 09ca BB60     		str	r3, [r7, #8]
2493:main.c        ****         
2494:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 9086              		.loc 1 2494 0
 9087 09cc BB68     		ldr	r3, [r7, #8]	@ float
 9088 09ce 6949     		ldr	r1, .L398+16
 9089 09d0 1846     		mov	r0, r3
 9090 09d2 FFF7FEFF 		bl	__aeabi_fmul
 9091 09d6 0346     		mov	r3, r0
 9092 09d8 1846     		mov	r0, r3
 9093 09da FFF7FEFF 		bl	__aeabi_f2uiz
 9094 09de 0346     		mov	r3, r0
 9095 09e0 BB83     		strh	r3, [r7, #28]	@ movhi
2495:main.c        ****         singleParamValueHigh = intVal >> 8;
 9096              		.loc 1 2495 0
 9097 09e2 BB8B     		ldrh	r3, [r7, #28]
 9098 09e4 1B0A     		lsrs	r3, r3, #8
 9099 09e6 9BB2     		uxth	r3, r3
 9100 09e8 DAB2     		uxtb	r2, r3
 9101 09ea 634B     		ldr	r3, .L398+20
 9102 09ec 1A70     		strb	r2, [r3]
2496:main.c        ****         singleParamValueLow = intVal & 0xff;
 9103              		.loc 1 2496 0
 9104 09ee BB8B     		ldrh	r3, [r7, #28]	@ movhi
 9105 09f0 DAB2     		uxtb	r2, r3
 9106 09f2 624B     		ldr	r3, .L398+24
 9107 09f4 1A70     		strb	r2, [r3]
2497:main.c        ****         
2498:main.c        ****         sysexMessageInProgress = 0;
 9108              		.loc 1 2498 0
 9109 09f6 5C4B     		ldr	r3, .L398+4
 9110 09f8 0022     		movs	r2, #0
 9111 09fa 1A70     		strb	r2, [r3]
2499:main.c        ****         sendSingleParamUpdate = 1;
 9112              		.loc 1 2499 0
 9113 09fc 604B     		ldr	r3, .L398+28
 9114 09fe 0122     		movs	r2, #1
 9115 0a00 1A70     		strb	r2, [r3]
 9116              	.LBE50:
 9117 0a02 D9E0     		b	.L368
 9118              	.L380:
2500:main.c        ****     }
2501:main.c        ****     
2502:main.c        ****      else if (sysexBuffer[0] == 4) //it's a real-time mapping change
 9119              		.loc 1 2502 0
 9120 0a04 574B     		ldr	r3, .L398
 9121 0a06 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9122 0a08 042B     		cmp	r3, #4
 9123 0a0a 40F0D580 		bne	.L368
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 207


 9124              	.LBB51:
2503:main.c        ****     {
2504:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9125              		.loc 1 2504 0
 9126 0a0e 564B     		ldr	r3, .L398+4
 9127 0a10 0122     		movs	r2, #1
 9128 0a12 1A70     		strb	r2, [r3]
2505:main.c        ****         union breakFloat theVal;
2506:main.c        ****         uint32_t i = 2;
 9129              		.loc 1 2506 0
 9130 0a14 0223     		movs	r3, #2
 9131 0a16 BB61     		str	r3, [r7, #24]
2507:main.c        ****         
2508:main.c        ****         //get the destination number
2509:main.c        ****         theVal.u32 = 0;
 9132              		.loc 1 2509 0
 9133 0a18 0023     		movs	r3, #0
 9134 0a1a 7B60     		str	r3, [r7, #4]
2510:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9135              		.loc 1 2510 0
 9136 0a1c 7B68     		ldr	r3, [r7, #4]
 9137 0a1e 5149     		ldr	r1, .L398
 9138 0a20 BA69     		ldr	r2, [r7, #24]
 9139 0a22 0A44     		add	r2, r2, r1
 9140 0a24 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9141 0a26 1207     		lsls	r2, r2, #28
 9142 0a28 1343     		orrs	r3, r3, r2
 9143 0a2a 7B60     		str	r3, [r7, #4]
2511:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9144              		.loc 1 2511 0
 9145 0a2c 7B68     		ldr	r3, [r7, #4]
 9146 0a2e BA69     		ldr	r2, [r7, #24]
 9147 0a30 0132     		adds	r2, r2, #1
 9148 0a32 4C49     		ldr	r1, .L398
 9149 0a34 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9150 0a36 5205     		lsls	r2, r2, #21
 9151 0a38 1343     		orrs	r3, r3, r2
 9152 0a3a 7B60     		str	r3, [r7, #4]
2512:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9153              		.loc 1 2512 0
 9154 0a3c 7B68     		ldr	r3, [r7, #4]
 9155 0a3e BA69     		ldr	r2, [r7, #24]
 9156 0a40 0232     		adds	r2, r2, #2
 9157 0a42 4849     		ldr	r1, .L398
 9158 0a44 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9159 0a46 9203     		lsls	r2, r2, #14
 9160 0a48 1343     		orrs	r3, r3, r2
 9161 0a4a 7B60     		str	r3, [r7, #4]
2513:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9162              		.loc 1 2513 0
 9163 0a4c 7B68     		ldr	r3, [r7, #4]
 9164 0a4e BA69     		ldr	r2, [r7, #24]
 9165 0a50 0332     		adds	r2, r2, #3
 9166 0a52 4449     		ldr	r1, .L398
 9167 0a54 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9168 0a56 D201     		lsls	r2, r2, #7
 9169 0a58 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 208


 9170 0a5a 7B60     		str	r3, [r7, #4]
2514:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9171              		.loc 1 2514 0
 9172 0a5c 7A68     		ldr	r2, [r7, #4]
 9173 0a5e BB69     		ldr	r3, [r7, #24]
 9174 0a60 0433     		adds	r3, r3, #4
 9175 0a62 4049     		ldr	r1, .L398
 9176 0a64 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9177 0a66 03F07F03 		and	r3, r3, #127
 9178 0a6a 1343     		orrs	r3, r3, r2
 9179 0a6c 7B60     		str	r3, [r7, #4]
2515:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 9180              		.loc 1 2515 0
 9181 0a6e 7B68     		ldr	r3, [r7, #4]	@ float
 9182 0a70 1846     		mov	r0, r3
 9183 0a72 FFF7FEFF 		bl	roundf
 9184 0a76 0346     		mov	r3, r0
 9185 0a78 1846     		mov	r0, r3
 9186 0a7a FFF7FEFF 		bl	__aeabi_f2uiz
 9187 0a7e 0346     		mov	r3, r0
 9188 0a80 FB82     		strh	r3, [r7, #22]	@ movhi
2516:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 9189              		.loc 1 2516 0
 9190 0a82 404B     		ldr	r3, .L398+32
 9191 0a84 0022     		movs	r2, #0
 9192 0a86 1A70     		strb	r2, [r3]
2517:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 9193              		.loc 1 2517 0
 9194 0a88 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 9195 0a8a DAB2     		uxtb	r2, r3
 9196 0a8c 3D4B     		ldr	r3, .L398+32
 9197 0a8e 5A70     		strb	r2, [r3, #1]
2518:main.c        ****         
2519:main.c        ****         
2520:main.c        ****         mappingArray[2] = sysexBuffer[i+5]; //slot id
 9198              		.loc 1 2520 0
 9199 0a90 BB69     		ldr	r3, [r7, #24]
 9200 0a92 0533     		adds	r3, r3, #5
 9201 0a94 334A     		ldr	r2, .L398
 9202 0a96 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9203 0a98 3A4B     		ldr	r3, .L398+32
 9204 0a9a 9A70     		strb	r2, [r3, #2]
2521:main.c        ****         mappingArray[3] = sysexBuffer[i+6]; //mapping change type
 9205              		.loc 1 2521 0
 9206 0a9c BB69     		ldr	r3, [r7, #24]
 9207 0a9e 0633     		adds	r3, r3, #6
 9208 0aa0 304A     		ldr	r2, .L398
 9209 0aa2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9210 0aa4 374B     		ldr	r3, .L398+32
 9211 0aa6 DA70     		strb	r2, [r3, #3]
2522:main.c        ****         
2523:main.c        ****         i = i+7;
 9212              		.loc 1 2523 0
 9213 0aa8 BB69     		ldr	r3, [r7, #24]
 9214 0aaa 0733     		adds	r3, r3, #7
 9215 0aac BB61     		str	r3, [r7, #24]
2524:main.c        ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 209


2525:main.c        ****         //get the parameter value
2526:main.c        ****         theVal.u32 = 0;
 9216              		.loc 1 2526 0
 9217 0aae 0023     		movs	r3, #0
 9218 0ab0 7B60     		str	r3, [r7, #4]
2527:main.c        ****         theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 9219              		.loc 1 2527 0
 9220 0ab2 7B68     		ldr	r3, [r7, #4]
 9221 0ab4 2B49     		ldr	r1, .L398
 9222 0ab6 BA69     		ldr	r2, [r7, #24]
 9223 0ab8 0A44     		add	r2, r2, r1
 9224 0aba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 9225 0abc 1207     		lsls	r2, r2, #28
 9226 0abe 1343     		orrs	r3, r3, r2
 9227 0ac0 7B60     		str	r3, [r7, #4]
2528:main.c        ****         theVal.u32 |= (sysexBuffer[i+1] << 21);
 9228              		.loc 1 2528 0
 9229 0ac2 7B68     		ldr	r3, [r7, #4]
 9230 0ac4 BA69     		ldr	r2, [r7, #24]
 9231 0ac6 0132     		adds	r2, r2, #1
 9232 0ac8 2649     		ldr	r1, .L398
 9233 0aca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9234 0acc 5205     		lsls	r2, r2, #21
 9235 0ace 1343     		orrs	r3, r3, r2
 9236 0ad0 7B60     		str	r3, [r7, #4]
2529:main.c        ****         theVal.u32 |= (sysexBuffer[i+2] << 14);
 9237              		.loc 1 2529 0
 9238 0ad2 7B68     		ldr	r3, [r7, #4]
 9239 0ad4 BA69     		ldr	r2, [r7, #24]
 9240 0ad6 0232     		adds	r2, r2, #2
 9241 0ad8 2249     		ldr	r1, .L398
 9242 0ada 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9243 0adc 9203     		lsls	r2, r2, #14
 9244 0ade 1343     		orrs	r3, r3, r2
 9245 0ae0 7B60     		str	r3, [r7, #4]
2530:main.c        ****         theVal.u32 |= (sysexBuffer[i+3] << 7);
 9246              		.loc 1 2530 0
 9247 0ae2 7B68     		ldr	r3, [r7, #4]
 9248 0ae4 BA69     		ldr	r2, [r7, #24]
 9249 0ae6 0332     		adds	r2, r2, #3
 9250 0ae8 1E49     		ldr	r1, .L398
 9251 0aea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9252 0aec D201     		lsls	r2, r2, #7
 9253 0aee 1343     		orrs	r3, r3, r2
 9254 0af0 7B60     		str	r3, [r7, #4]
2531:main.c        ****         theVal.u32 |= (sysexBuffer[i+4] & 127);
 9255              		.loc 1 2531 0
 9256 0af2 7A68     		ldr	r2, [r7, #4]
 9257 0af4 BB69     		ldr	r3, [r7, #24]
 9258 0af6 0433     		adds	r3, r3, #4
 9259 0af8 1A49     		ldr	r1, .L398
 9260 0afa CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9261 0afc 03F07F03 		and	r3, r3, #127
 9262 0b00 1343     		orrs	r3, r3, r2
 9263 0b02 7B60     		str	r3, [r7, #4]
2532:main.c        ****         if (mappingArray[3] == 0) // source id
 9264              		.loc 1 2532 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 210


 9265 0b04 1F4B     		ldr	r3, .L398+32
 9266 0b06 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9267 0b08 002B     		cmp	r3, #0
 9268 0b0a 10D1     		bne	.L381
2533:main.c        ****         {
2534:main.c        ****             mappingArray[4] = 0;
 9269              		.loc 1 2534 0
 9270 0b0c 1D4B     		ldr	r3, .L398+32
 9271 0b0e 0022     		movs	r2, #0
 9272 0b10 1A71     		strb	r2, [r3, #4]
2535:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9273              		.loc 1 2535 0
 9274 0b12 7B68     		ldr	r3, [r7, #4]	@ float
 9275 0b14 1846     		mov	r0, r3
 9276 0b16 FFF7FEFF 		bl	roundf
 9277 0b1a 0346     		mov	r3, r0
 9278 0b1c 1846     		mov	r0, r3
 9279 0b1e FFF7FEFF 		bl	__aeabi_f2iz
 9280 0b22 0346     		mov	r3, r0
 9281 0b24 1BB2     		sxth	r3, r3
 9282 0b26 DAB2     		uxtb	r2, r3
 9283 0b28 164B     		ldr	r3, .L398+32
 9284 0b2a 5A71     		strb	r2, [r3, #5]
 9285 0b2c 3EE0     		b	.L382
 9286              	.L381:
2536:main.c        ****         }
2537:main.c        ****         else if (mappingArray[3] == 1) // amount
 9287              		.loc 1 2537 0
 9288 0b2e 154B     		ldr	r3, .L398+32
 9289 0b30 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 9290 0b32 012B     		cmp	r3, #1
 9291 0b34 2AD1     		bne	.L383
 9292              	.LBB52:
2538:main.c        ****         {
2539:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 9293              		.loc 1 2539 0
 9294 0b36 7B68     		ldr	r3, [r7, #4]	@ float
 9295 0b38 1349     		ldr	r1, .L398+36
 9296 0b3a 1846     		mov	r0, r3
 9297 0b3c FFF7FEFF 		bl	__aeabi_fmul
 9298 0b40 0346     		mov	r3, r0
 9299 0b42 1846     		mov	r0, r3
 9300 0b44 FFF7FEFF 		bl	__aeabi_f2iz
 9301 0b48 0346     		mov	r3, r0
 9302 0b4a BB82     		strh	r3, [r7, #20]	@ movhi
2540:main.c        ****             mappingArray[4] = intVal >> 8;
 9303              		.loc 1 2540 0
 9304 0b4c B7F91430 		ldrsh	r3, [r7, #20]
 9305 0b50 1B12     		asrs	r3, r3, #8
 9306 0b52 1BB2     		sxth	r3, r3
 9307 0b54 DAB2     		uxtb	r2, r3
 9308 0b56 0B4B     		ldr	r3, .L398+32
 9309 0b58 1A71     		strb	r2, [r3, #4]
2541:main.c        ****             mappingArray[5] = intVal & 0xff;
 9310              		.loc 1 2541 0
 9311 0b5a BB8A     		ldrh	r3, [r7, #20]	@ movhi
 9312 0b5c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 211


 9313 0b5e 094B     		ldr	r3, .L398+32
 9314 0b60 5A71     		strb	r2, [r3, #5]
 9315              	.LBE52:
 9316 0b62 23E0     		b	.L382
 9317              	.L399:
 9318              		.align	2
 9319              	.L398:
 9320 0b64 00000000 		.word	sysexBuffer
 9321 0b68 00000000 		.word	sysexMessageInProgress
 9322 0b6c 00000000 		.word	singleParamToUpdateHigh
 9323 0b70 00000000 		.word	singleParamToUpdateLow
 9324 0b74 00FF7F47 		.word	1199570688
 9325 0b78 00000000 		.word	singleParamValueHigh
 9326 0b7c 00000000 		.word	singleParamValueLow
 9327 0b80 00000000 		.word	sendSingleParamUpdate
 9328 0b84 00000000 		.word	mappingArray
 9329 0b88 00FEFF46 		.word	1191181824
 9330              	.L383:
2542:main.c        ****         }
2543:main.c        ****         else // scalar source
2544:main.c        ****         {
2545:main.c        ****             mappingArray[4] = 0;
 9331              		.loc 1 2545 0
 9332 0b8c 114B     		ldr	r3, .L400
 9333 0b8e 0022     		movs	r2, #0
 9334 0b90 1A71     		strb	r2, [r3, #4]
2546:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 9335              		.loc 1 2546 0
 9336 0b92 7B68     		ldr	r3, [r7, #4]	@ float
 9337 0b94 1846     		mov	r0, r3
 9338 0b96 FFF7FEFF 		bl	roundf
 9339 0b9a 0346     		mov	r3, r0
 9340 0b9c 1846     		mov	r0, r3
 9341 0b9e FFF7FEFF 		bl	__aeabi_f2iz
 9342 0ba2 0346     		mov	r3, r0
 9343 0ba4 1BB2     		sxth	r3, r3
 9344 0ba6 DAB2     		uxtb	r2, r3
 9345 0ba8 0A4B     		ldr	r3, .L400
 9346 0baa 5A71     		strb	r2, [r3, #5]
 9347              	.L382:
2547:main.c        ****         }
2548:main.c        ****         
2549:main.c        ****         
2550:main.c        ****         sysexMessageInProgress = 0;
 9348              		.loc 1 2550 0
 9349 0bac 0A4B     		ldr	r3, .L400+4
 9350 0bae 0022     		movs	r2, #0
 9351 0bb0 1A70     		strb	r2, [r3]
2551:main.c        ****         sendMappingChangeUpdate = 1;
 9352              		.loc 1 2551 0
 9353 0bb2 0A4B     		ldr	r3, .L400+8
 9354 0bb4 0122     		movs	r2, #1
 9355 0bb6 1A70     		strb	r2, [r3]
 9356              	.L368:
 9357              	.LBE51:
2552:main.c        ****     }
2553:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 212


2554:main.c        ****     parsingSysex = 0;
 9358              		.loc 1 2554 0
 9359 0bb8 094B     		ldr	r3, .L400+12
 9360 0bba 0022     		movs	r2, #0
 9361 0bbc 1A70     		strb	r2, [r3]
2555:main.c        ****     sysexPointer = 0;
 9362              		.loc 1 2555 0
 9363 0bbe 094B     		ldr	r3, .L400+16
 9364 0bc0 0022     		movs	r2, #0
 9365 0bc2 1A60     		str	r2, [r3]
2556:main.c        ****     parseThatMF = 0;
 9366              		.loc 1 2556 0
 9367 0bc4 084B     		ldr	r3, .L400+20
 9368 0bc6 0022     		movs	r2, #0
 9369 0bc8 1A70     		strb	r2, [r3]
2557:main.c        **** }
 9370              		.loc 1 2557 0
 9371 0bca 00BF     		nop
 9372 0bcc 5437     		adds	r7, r7, #84
 9373              		.cfi_def_cfa_offset 12
 9374 0bce BD46     		mov	sp, r7
 9375              		.cfi_def_cfa_register 13
 9376              		@ sp needed
 9377 0bd0 90BD     		pop	{r4, r7, pc}
 9378              	.L401:
 9379 0bd2 00BF     		.align	2
 9380              	.L400:
 9381 0bd4 00000000 		.word	mappingArray
 9382 0bd8 00000000 		.word	sysexMessageInProgress
 9383 0bdc 00000000 		.word	sendMappingChangeUpdate
 9384 0be0 00000000 		.word	parsingSysex
 9385 0be4 00000000 		.word	sysexPointer
 9386 0be8 00000000 		.word	parseThatMF
 9387              		.cfi_endproc
 9388              	.LFE92:
 9389              		.size	parseSysex, .-parseSysex
 9390              		.comm	tempMIDI,4,4
 9391              		.global	firstSysex
 9392              		.bss
 9393              		.type	firstSysex, %object
 9394              		.size	firstSysex, 1
 9395              	firstSysex:
 9396 0110 00       		.space	1
 9397              		.global	sysexPointerMask
 9398              		.section	.rodata
 9399              		.align	1
 9400              		.type	sysexPointerMask, %object
 9401              		.size	sysexPointerMask, 2
 9402              	sysexPointerMask:
 9403 0458 FF07     		.short	2047
 9404              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 9405              		.align	2
 9406              		.global	USB_callbackLocalMidiEvent
 9407              		.thumb
 9408              		.thumb_func
 9409              		.type	USB_callbackLocalMidiEvent, %function
 9410              	USB_callbackLocalMidiEvent:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 213


 9411              	.LFB93:
2558:main.c        **** 
2559:main.c        **** volatile uint8_t tempMIDI[4];
2560:main.c        **** volatile uint8_t firstSysex = 0;
2561:main.c        **** const uint16_t sysexPointerMask = 2047;
2562:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2563:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2564:main.c        **** {   
 9412              		.loc 1 2564 0
 9413              		.cfi_startproc
 9414              		@ args = 0, pretend = 0, frame = 16
 9415              		@ frame_needed = 1, uses_anonymous_args = 0
 9416 0000 80B5     		push	{r7, lr}
 9417              		.cfi_def_cfa_offset 8
 9418              		.cfi_offset 7, -8
 9419              		.cfi_offset 14, -4
 9420 0002 84B0     		sub	sp, sp, #16
 9421              		.cfi_def_cfa_offset 24
 9422 0004 00AF     		add	r7, sp, #0
 9423              		.cfi_def_cfa_register 7
 9424 0006 0346     		mov	r3, r0
 9425 0008 3960     		str	r1, [r7]
 9426 000a FB71     		strb	r3, [r7, #7]
2565:main.c        ****     tempMIDI[0] = midiMsg[0];
 9427              		.loc 1 2565 0
 9428 000c 3B68     		ldr	r3, [r7]
 9429 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9430 0010 484B     		ldr	r3, .L412
 9431 0012 1A70     		strb	r2, [r3]
2566:main.c        ****     tempMIDI[1] = midiMsg[1];
 9432              		.loc 1 2566 0
 9433 0014 3B68     		ldr	r3, [r7]
 9434 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 9435 0018 464B     		ldr	r3, .L412
 9436 001a 5A70     		strb	r2, [r3, #1]
2567:main.c        ****      tempMIDI[2] = midiMsg[2];
 9437              		.loc 1 2567 0
 9438 001c 3B68     		ldr	r3, [r7]
 9439 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 9440 0020 444B     		ldr	r3, .L412
 9441 0022 9A70     		strb	r2, [r3, #2]
2568:main.c        ****      tempMIDI[3] = midiMsg[3];
 9442              		.loc 1 2568 0
 9443 0024 3B68     		ldr	r3, [r7]
 9444 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 9445 0028 424B     		ldr	r3, .L412
 9446 002a DA70     		strb	r2, [r3, #3]
2569:main.c        ****     //check that we got here
2570:main.c        ****     
2571:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 9447              		.loc 1 2571 0
 9448 002c 424B     		ldr	r3, .L412+4
 9449 002e 1B78     		ldrb	r3, [r3]
 9450 0030 DBB2     		uxtb	r3, r3
 9451 0032 002B     		cmp	r3, #0
 9452 0034 7BD0     		beq	.L402
 9453              		.loc 1 2571 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 214


 9454 0036 FFF7FEFF 		bl	USB_VBusPresent
 9455 003a 0346     		mov	r3, r0
 9456 003c 002B     		cmp	r3, #0
 9457 003e 76D0     		beq	.L402
2572:main.c        ****     {
2573:main.c        ****         if (receivingSysex)
 9458              		.loc 1 2573 0 is_stmt 1
 9459 0040 3E4B     		ldr	r3, .L412+8
 9460 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9461 0044 002B     		cmp	r3, #0
 9462 0046 29D0     		beq	.L404
 9463              	.LBB53:
2574:main.c        ****         {
2575:main.c        ****             for (int i = 0; i < 3; i++)
 9464              		.loc 1 2575 0
 9465 0048 0023     		movs	r3, #0
 9466 004a FB60     		str	r3, [r7, #12]
 9467 004c 22E0     		b	.L405
 9468              	.L408:
2576:main.c        ****             {
2577:main.c        ****                 if (midiMsg[i] < 128)
 9469              		.loc 1 2577 0
 9470 004e FB68     		ldr	r3, [r7, #12]
 9471 0050 3A68     		ldr	r2, [r7]
 9472 0052 1344     		add	r3, r3, r2
 9473 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9474 0056 5BB2     		sxtb	r3, r3
 9475 0058 002B     		cmp	r3, #0
 9476 005a 0EDB     		blt	.L406
2578:main.c        ****                 {
2579:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 9477              		.loc 1 2579 0
 9478 005c 384B     		ldr	r3, .L412+12
 9479 005e 1B68     		ldr	r3, [r3]
 9480 0060 5A1C     		adds	r2, r3, #1
 9481 0062 3749     		ldr	r1, .L412+12
 9482 0064 0A60     		str	r2, [r1]
 9483 0066 40F2FF72 		movw	r2, #2047
 9484 006a 1340     		ands	r3, r3, r2
 9485 006c FA68     		ldr	r2, [r7, #12]
 9486 006e 3968     		ldr	r1, [r7]
 9487 0070 0A44     		add	r2, r2, r1
 9488 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 9489 0074 334A     		ldr	r2, .L412+16
 9490 0076 D154     		strb	r1, [r2, r3]
 9491 0078 09E0     		b	.L407
 9492              	.L406:
2580:main.c        ****                 }
2581:main.c        ****                 else
2582:main.c        ****                 {
2583:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 9493              		.loc 1 2583 0
 9494 007a FB68     		ldr	r3, [r7, #12]
 9495 007c 3A68     		ldr	r2, [r7]
 9496 007e 1344     		add	r3, r3, r2
 9497 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9498 0082 F72B     		cmp	r3, #247
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 215


 9499 0084 03D1     		bne	.L407
2584:main.c        ****                     {
2585:main.c        ****                         receivingSysex = 0;
 9500              		.loc 1 2585 0
 9501 0086 2D4B     		ldr	r3, .L412+8
 9502 0088 0022     		movs	r2, #0
 9503 008a 1A70     		strb	r2, [r3]
2586:main.c        ****                         //parseSysex();
2587:main.c        ****                         return;
 9504              		.loc 1 2587 0
 9505 008c 4FE0     		b	.L402
 9506              	.L407:
2575:main.c        ****             {
 9507              		.loc 1 2575 0 discriminator 2
 9508 008e FB68     		ldr	r3, [r7, #12]
 9509 0090 0133     		adds	r3, r3, #1
 9510 0092 FB60     		str	r3, [r7, #12]
 9511              	.L405:
2575:main.c        ****             {
 9512              		.loc 1 2575 0 is_stmt 0 discriminator 1
 9513 0094 FB68     		ldr	r3, [r7, #12]
 9514 0096 022B     		cmp	r3, #2
 9515 0098 D9DD     		ble	.L408
 9516 009a 48E0     		b	.L402
 9517              	.L404:
 9518              	.LBE53:
2588:main.c        ****                      }
2589:main.c        ****                 }
2590:main.c        ****             }
2591:main.c        ****         }
2592:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 9519              		.loc 1 2592 0 is_stmt 1
 9520 009c 3B68     		ldr	r3, [r7]
 9521 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9522 00a0 F02B     		cmp	r3, #240
 9523 00a2 44D1     		bne	.L402
2593:main.c        ****         {
2594:main.c        ****             if (!parsingSysex)
 9524              		.loc 1 2594 0
 9525 00a4 284B     		ldr	r3, .L412+20
 9526 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9527 00a8 002B     		cmp	r3, #0
 9528 00aa 40D1     		bne	.L402
2595:main.c        ****             {
2596:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 9529              		.loc 1 2596 0
 9530 00ac 3B68     		ldr	r3, [r7]
 9531 00ae 0133     		adds	r3, r3, #1
 9532 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9533 00b2 7E2B     		cmp	r3, #126
 9534 00b4 03D1     		bne	.L410
2597:main.c        ****                 {
2598:main.c        ****                     parseThatMF = 1;
 9535              		.loc 1 2598 0
 9536 00b6 254B     		ldr	r3, .L412+24
 9537 00b8 0122     		movs	r2, #1
 9538 00ba 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 216


 9539 00bc 37E0     		b	.L402
 9540              	.L410:
2599:main.c        **** 
2600:main.c        ****                     //sysexPointer = 0;
2601:main.c        ****                 }
2602:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 9541              		.loc 1 2602 0
 9542 00be 3B68     		ldr	r3, [r7]
 9543 00c0 0133     		adds	r3, r3, #1
 9544 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9545 00c4 002B     		cmp	r3, #0
 9546 00c6 13D0     		beq	.L411
 9547              		.loc 1 2602 0 is_stmt 0 discriminator 1
 9548 00c8 3B68     		ldr	r3, [r7]
 9549 00ca 0133     		adds	r3, r3, #1
 9550 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9551 00ce 012B     		cmp	r3, #1
 9552 00d0 0ED0     		beq	.L411
 9553              		.loc 1 2602 0 discriminator 2
 9554 00d2 3B68     		ldr	r3, [r7]
 9555 00d4 0133     		adds	r3, r3, #1
 9556 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9557 00d8 022B     		cmp	r3, #2
 9558 00da 09D0     		beq	.L411
 9559              		.loc 1 2602 0 discriminator 3
 9560 00dc 3B68     		ldr	r3, [r7]
 9561 00de 0133     		adds	r3, r3, #1
 9562 00e0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9563 00e2 032B     		cmp	r3, #3
 9564 00e4 04D0     		beq	.L411
 9565              		.loc 1 2602 0 discriminator 4
 9566 00e6 3B68     		ldr	r3, [r7]
 9567 00e8 0133     		adds	r3, r3, #1
 9568 00ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9569 00ec 042B     		cmp	r3, #4
 9570 00ee 1ED1     		bne	.L402
 9571              	.L411:
2603:main.c        ****                 {
2604:main.c        ****                     receivingSysex = 1;
 9572              		.loc 1 2604 0 is_stmt 1
 9573 00f0 124B     		ldr	r3, .L412+8
 9574 00f2 0122     		movs	r2, #1
 9575 00f4 1A70     		strb	r2, [r3]
2605:main.c        ****                     
2606:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2607:main.c        ****                     if (sysexPointer == 0)
 9576              		.loc 1 2607 0
 9577 00f6 124B     		ldr	r3, .L412+12
 9578 00f8 1B68     		ldr	r3, [r3]
 9579 00fa 002B     		cmp	r3, #0
 9580 00fc 17D1     		bne	.L402
2608:main.c        ****                     {
2609:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 9581              		.loc 1 2609 0
 9582 00fe 104B     		ldr	r3, .L412+12
 9583 0100 1B68     		ldr	r3, [r3]
 9584 0102 5A1C     		adds	r2, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 217


 9585 0104 0E49     		ldr	r1, .L412+12
 9586 0106 0A60     		str	r2, [r1]
 9587 0108 40F2FF72 		movw	r2, #2047
 9588 010c 1340     		ands	r3, r3, r2
 9589 010e 3A68     		ldr	r2, [r7]
 9590 0110 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 9591 0112 0C4A     		ldr	r2, .L412+16
 9592 0114 D154     		strb	r1, [r2, r3]
2610:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 9593              		.loc 1 2610 0
 9594 0116 0A4B     		ldr	r3, .L412+12
 9595 0118 1B68     		ldr	r3, [r3]
 9596 011a 5A1C     		adds	r2, r3, #1
 9597 011c 0849     		ldr	r1, .L412+12
 9598 011e 0A60     		str	r2, [r1]
 9599 0120 40F2FF72 		movw	r2, #2047
 9600 0124 1340     		ands	r3, r3, r2
 9601 0126 3A68     		ldr	r2, [r7]
 9602 0128 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 9603 012a 064A     		ldr	r2, .L412+16
 9604 012c D154     		strb	r1, [r2, r3]
 9605              	.L402:
2611:main.c        ****                     }
2612:main.c        ****                 }
2613:main.c        ****             }
2614:main.c        ****         }
2615:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2616:main.c        ****     }
2617:main.c        **** }    
 9606              		.loc 1 2617 0
 9607 012e 1037     		adds	r7, r7, #16
 9608              		.cfi_def_cfa_offset 8
 9609 0130 BD46     		mov	sp, r7
 9610              		.cfi_def_cfa_register 13
 9611              		@ sp needed
 9612 0132 80BD     		pop	{r7, pc}
 9613              	.L413:
 9614              		.align	2
 9615              	.L412:
 9616 0134 00000000 		.word	tempMIDI
 9617 0138 00000000 		.word	USB_active
 9618 013c 00000000 		.word	receivingSysex
 9619 0140 00000000 		.word	sysexPointer
 9620 0144 00000000 		.word	sysexBuffer
 9621 0148 00000000 		.word	parsingSysex
 9622 014c 00000000 		.word	parseThatMF
 9623              		.cfi_endproc
 9624              	.LFE93:
 9625              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 9626              		.text
 9627              	.Letext0:
 9628              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9629              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9630              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 9631              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 9632              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 9633              		.file 7 "oled.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 218


 9634              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 9635              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 9636              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 9637              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 9638              		.section	.debug_info,"",%progbits
 9639              	.Ldebug_info0:
 9640 0000 151E0000 		.4byte	0x1e15
 9641 0004 0400     		.2byte	0x4
 9642 0006 00000000 		.4byte	.Ldebug_abbrev0
 9643 000a 04       		.byte	0x4
 9644 000b 01       		.uleb128 0x1
 9645 000c 08090000 		.4byte	.LASF319
 9646 0010 0C       		.byte	0xc
 9647 0011 7B0A0000 		.4byte	.LASF320
 9648 0015 1E070000 		.4byte	.LASF321
 9649 0019 00000000 		.4byte	.Ldebug_ranges0+0
 9650 001d 00000000 		.4byte	0
 9651 0021 00000000 		.4byte	.Ldebug_line0
 9652 0025 02       		.uleb128 0x2
 9653 0026 01       		.byte	0x1
 9654 0027 06       		.byte	0x6
 9655 0028 86030000 		.4byte	.LASF0
 9656 002c 03       		.uleb128 0x3
 9657 002d 12020000 		.4byte	.LASF2
 9658 0031 02       		.byte	0x2
 9659 0032 1D       		.byte	0x1d
 9660 0033 37000000 		.4byte	0x37
 9661 0037 02       		.uleb128 0x2
 9662 0038 01       		.byte	0x1
 9663 0039 08       		.byte	0x8
 9664 003a 0D040000 		.4byte	.LASF1
 9665 003e 03       		.uleb128 0x3
 9666 003f DB0D0000 		.4byte	.LASF3
 9667 0043 02       		.byte	0x2
 9668 0044 29       		.byte	0x29
 9669 0045 49000000 		.4byte	0x49
 9670 0049 02       		.uleb128 0x2
 9671 004a 02       		.byte	0x2
 9672 004b 05       		.byte	0x5
 9673 004c AD0E0000 		.4byte	.LASF4
 9674 0050 03       		.uleb128 0x3
 9675 0051 39050000 		.4byte	.LASF5
 9676 0055 02       		.byte	0x2
 9677 0056 2B       		.byte	0x2b
 9678 0057 5B000000 		.4byte	0x5b
 9679 005b 02       		.uleb128 0x2
 9680 005c 02       		.byte	0x2
 9681 005d 07       		.byte	0x7
 9682 005e B1100000 		.4byte	.LASF6
 9683 0062 03       		.uleb128 0x3
 9684 0063 DC100000 		.4byte	.LASF7
 9685 0067 02       		.byte	0x2
 9686 0068 3F       		.byte	0x3f
 9687 0069 6D000000 		.4byte	0x6d
 9688 006d 02       		.uleb128 0x2
 9689 006e 04       		.byte	0x4
 9690 006f 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 219


 9691 0070 65020000 		.4byte	.LASF8
 9692 0074 03       		.uleb128 0x3
 9693 0075 FF090000 		.4byte	.LASF9
 9694 0079 02       		.byte	0x2
 9695 007a 41       		.byte	0x41
 9696 007b 7F000000 		.4byte	0x7f
 9697 007f 02       		.uleb128 0x2
 9698 0080 04       		.byte	0x4
 9699 0081 07       		.byte	0x7
 9700 0082 FB070000 		.4byte	.LASF10
 9701 0086 02       		.uleb128 0x2
 9702 0087 08       		.byte	0x8
 9703 0088 05       		.byte	0x5
 9704 0089 0A0A0000 		.4byte	.LASF11
 9705 008d 02       		.uleb128 0x2
 9706 008e 08       		.byte	0x8
 9707 008f 07       		.byte	0x7
 9708 0090 DC0C0000 		.4byte	.LASF12
 9709 0094 04       		.uleb128 0x4
 9710 0095 04       		.byte	0x4
 9711 0096 05       		.byte	0x5
 9712 0097 696E7400 		.ascii	"int\000"
 9713 009b 02       		.uleb128 0x2
 9714 009c 04       		.byte	0x4
 9715 009d 07       		.byte	0x7
 9716 009e 3D0B0000 		.4byte	.LASF13
 9717 00a2 03       		.uleb128 0x3
 9718 00a3 92030000 		.4byte	.LASF14
 9719 00a7 03       		.byte	0x3
 9720 00a8 18       		.byte	0x18
 9721 00a9 2C000000 		.4byte	0x2c
 9722 00ad 03       		.uleb128 0x3
 9723 00ae 060F0000 		.4byte	.LASF15
 9724 00b2 03       		.byte	0x3
 9725 00b3 20       		.byte	0x20
 9726 00b4 3E000000 		.4byte	0x3e
 9727 00b8 03       		.uleb128 0x3
 9728 00b9 F30C0000 		.4byte	.LASF16
 9729 00bd 03       		.byte	0x3
 9730 00be 24       		.byte	0x24
 9731 00bf 50000000 		.4byte	0x50
 9732 00c3 03       		.uleb128 0x3
 9733 00c4 99000000 		.4byte	.LASF17
 9734 00c8 03       		.byte	0x3
 9735 00c9 2C       		.byte	0x2c
 9736 00ca 62000000 		.4byte	0x62
 9737 00ce 03       		.uleb128 0x3
 9738 00cf 5D100000 		.4byte	.LASF18
 9739 00d3 03       		.byte	0x3
 9740 00d4 30       		.byte	0x30
 9741 00d5 74000000 		.4byte	0x74
 9742 00d9 05       		.uleb128 0x5
 9743 00da 740E0000 		.4byte	.LASF19
 9744 00de 04       		.byte	0x4
 9745 00df E901     		.2byte	0x1e9
 9746 00e1 37000000 		.4byte	0x37
 9747 00e5 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 220


 9748 00e6 49110000 		.4byte	.LASF20
 9749 00ea 04       		.byte	0x4
 9750 00eb EA01     		.2byte	0x1ea
 9751 00ed 5B000000 		.4byte	0x5b
 9752 00f1 05       		.uleb128 0x5
 9753 00f2 D5000000 		.4byte	.LASF21
 9754 00f6 04       		.byte	0x4
 9755 00f7 EB01     		.2byte	0x1eb
 9756 00f9 7F000000 		.4byte	0x7f
 9757 00fd 02       		.uleb128 0x2
 9758 00fe 04       		.byte	0x4
 9759 00ff 04       		.byte	0x4
 9760 0100 E00A0000 		.4byte	.LASF22
 9761 0104 02       		.uleb128 0x2
 9762 0105 08       		.byte	0x8
 9763 0106 04       		.byte	0x4
 9764 0107 740A0000 		.4byte	.LASF23
 9765 010b 02       		.uleb128 0x2
 9766 010c 01       		.byte	0x1
 9767 010d 08       		.byte	0x8
 9768 010e ED040000 		.4byte	.LASF24
 9769 0112 05       		.uleb128 0x5
 9770 0113 B40B0000 		.4byte	.LASF25
 9771 0117 04       		.byte	0x4
 9772 0118 8B02     		.2byte	0x28b
 9773 011a 7F000000 		.4byte	0x7f
 9774 011e 05       		.uleb128 0x5
 9775 011f 770D0000 		.4byte	.LASF26
 9776 0123 04       		.byte	0x4
 9777 0124 9302     		.2byte	0x293
 9778 0126 2A010000 		.4byte	0x12a
 9779 012a 06       		.uleb128 0x6
 9780 012b D9000000 		.4byte	0xd9
 9781 012f 02       		.uleb128 0x2
 9782 0130 08       		.byte	0x8
 9783 0131 04       		.byte	0x4
 9784 0132 5B0C0000 		.4byte	.LASF27
 9785 0136 02       		.uleb128 0x2
 9786 0137 04       		.byte	0x4
 9787 0138 07       		.byte	0x7
 9788 0139 2A000000 		.4byte	.LASF28
 9789 013d 07       		.uleb128 0x7
 9790 013e D9000000 		.4byte	0xd9
 9791 0142 4D010000 		.4byte	0x14d
 9792 0146 08       		.uleb128 0x8
 9793 0147 36010000 		.4byte	0x136
 9794 014b 03       		.byte	0x3
 9795 014c 00       		.byte	0
 9796 014d 09       		.uleb128 0x9
 9797 014e 1C       		.byte	0x1c
 9798 014f 05       		.byte	0x5
 9799 0150 1601     		.2byte	0x116
 9800 0152 BF010000 		.4byte	0x1bf
 9801 0156 0A       		.uleb128 0xa
 9802 0157 9A030000 		.4byte	.LASF29
 9803 015b 05       		.byte	0x5
 9804 015c 1B01     		.2byte	0x11b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 221


 9805 015e F1000000 		.4byte	0xf1
 9806 0162 00       		.byte	0
 9807 0163 0A       		.uleb128 0xa
 9808 0164 D8010000 		.4byte	.LASF30
 9809 0168 05       		.byte	0x5
 9810 0169 2001     		.2byte	0x120
 9811 016b F1000000 		.4byte	0xf1
 9812 016f 04       		.byte	0x4
 9813 0170 0A       		.uleb128 0xa
 9814 0171 1A110000 		.4byte	.LASF31
 9815 0175 05       		.byte	0x5
 9816 0176 2301     		.2byte	0x123
 9817 0178 F1000000 		.4byte	0xf1
 9818 017c 08       		.byte	0x8
 9819 017d 0A       		.uleb128 0xa
 9820 017e 1B0F0000 		.4byte	.LASF32
 9821 0182 05       		.byte	0x5
 9822 0183 2601     		.2byte	0x126
 9823 0185 F1000000 		.4byte	0xf1
 9824 0189 0C       		.byte	0xc
 9825 018a 0A       		.uleb128 0xa
 9826 018b 700F0000 		.4byte	.LASF33
 9827 018f 05       		.byte	0x5
 9828 0190 2B01     		.2byte	0x12b
 9829 0192 F1000000 		.4byte	0xf1
 9830 0196 10       		.byte	0x10
 9831 0197 0A       		.uleb128 0xa
 9832 0198 04020000 		.4byte	.LASF34
 9833 019c 05       		.byte	0x5
 9834 019d 2E01     		.2byte	0x12e
 9835 019f D9000000 		.4byte	0xd9
 9836 01a3 14       		.byte	0x14
 9837 01a4 0A       		.uleb128 0xa
 9838 01a5 5B0A0000 		.4byte	.LASF35
 9839 01a9 05       		.byte	0x5
 9840 01aa 3301     		.2byte	0x133
 9841 01ac D9000000 		.4byte	0xd9
 9842 01b0 15       		.byte	0x15
 9843 01b1 0A       		.uleb128 0xa
 9844 01b2 C5010000 		.4byte	.LASF36
 9845 01b6 05       		.byte	0x5
 9846 01b7 3601     		.2byte	0x136
 9847 01b9 F1000000 		.4byte	0xf1
 9848 01bd 18       		.byte	0x18
 9849 01be 00       		.byte	0
 9850 01bf 05       		.uleb128 0x5
 9851 01c0 E3070000 		.4byte	.LASF37
 9852 01c4 05       		.byte	0x5
 9853 01c5 3701     		.2byte	0x137
 9854 01c7 4D010000 		.4byte	0x14d
 9855 01cb 0B       		.uleb128 0xb
 9856 01cc 01       		.byte	0x1
 9857 01cd 37000000 		.4byte	0x37
 9858 01d1 05       		.byte	0x5
 9859 01d2 5401     		.2byte	0x154
 9860 01d4 F7010000 		.4byte	0x1f7
 9861 01d8 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 222


 9862 01d9 84000000 		.4byte	.LASF38
 9863 01dd 00       		.byte	0
 9864 01de 0C       		.uleb128 0xc
 9865 01df 33060000 		.4byte	.LASF39
 9866 01e3 01       		.byte	0x1
 9867 01e4 0C       		.uleb128 0xc
 9868 01e5 AB010000 		.4byte	.LASF40
 9869 01e9 02       		.byte	0x2
 9870 01ea 0C       		.uleb128 0xc
 9871 01eb C9030000 		.4byte	.LASF41
 9872 01ef 03       		.byte	0x3
 9873 01f0 0C       		.uleb128 0xc
 9874 01f1 A8080000 		.4byte	.LASF42
 9875 01f5 04       		.byte	0x4
 9876 01f6 00       		.byte	0
 9877 01f7 05       		.uleb128 0x5
 9878 01f8 3E010000 		.4byte	.LASF43
 9879 01fc 05       		.byte	0x5
 9880 01fd 5A01     		.2byte	0x15a
 9881 01ff CB010000 		.4byte	0x1cb
 9882 0203 06       		.uleb128 0x6
 9883 0204 A2000000 		.4byte	0xa2
 9884 0208 06       		.uleb128 0x6
 9885 0209 B8000000 		.4byte	0xb8
 9886 020d 03       		.uleb128 0x3
 9887 020e 96050000 		.4byte	.LASF44
 9888 0212 06       		.byte	0x6
 9889 0213 6C       		.byte	0x6c
 9890 0214 9B000000 		.4byte	0x9b
 9891 0218 0D       		.uleb128 0xd
 9892 0219 DF030000 		.4byte	.LASF50
 9893 021d 01       		.byte	0x1
 9894 021e 37000000 		.4byte	0x37
 9895 0222 07       		.byte	0x7
 9896 0223 1D       		.byte	0x1d
 9897 0224 47020000 		.4byte	0x247
 9898 0228 0C       		.uleb128 0xc
 9899 0229 B2090000 		.4byte	.LASF45
 9900 022d 00       		.byte	0
 9901 022e 0C       		.uleb128 0xc
 9902 022f 0B030000 		.4byte	.LASF46
 9903 0233 01       		.byte	0x1
 9904 0234 0C       		.uleb128 0xc
 9905 0235 B3000000 		.4byte	.LASF47
 9906 0239 02       		.byte	0x2
 9907 023a 0C       		.uleb128 0xc
 9908 023b 8E060000 		.4byte	.LASF48
 9909 023f 03       		.byte	0x3
 9910 0240 0C       		.uleb128 0xc
 9911 0241 36010000 		.4byte	.LASF49
 9912 0245 04       		.byte	0x4
 9913 0246 00       		.byte	0
 9914 0247 0D       		.uleb128 0xd
 9915 0248 2C030000 		.4byte	.LASF51
 9916 024c 01       		.byte	0x1
 9917 024d 37000000 		.4byte	0x37
 9918 0251 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 223


 9919 0252 29       		.byte	0x29
 9920 0253 7C020000 		.4byte	0x27c
 9921 0257 0C       		.uleb128 0xc
 9922 0258 69060000 		.4byte	.LASF52
 9923 025c 00       		.byte	0
 9924 025d 0C       		.uleb128 0xc
 9925 025e D6040000 		.4byte	.LASF53
 9926 0262 01       		.byte	0x1
 9927 0263 0C       		.uleb128 0xc
 9928 0264 E50D0000 		.4byte	.LASF54
 9929 0268 02       		.byte	0x2
 9930 0269 0C       		.uleb128 0xc
 9931 026a 920D0000 		.4byte	.LASF55
 9932 026e 03       		.byte	0x3
 9933 026f 0C       		.uleb128 0xc
 9934 0270 C4100000 		.4byte	.LASF56
 9935 0274 04       		.byte	0x4
 9936 0275 0C       		.uleb128 0xc
 9937 0276 22020000 		.4byte	.LASF57
 9938 027a 05       		.byte	0x5
 9939 027b 00       		.byte	0
 9940 027c 0E       		.uleb128 0xe
 9941 027d 1E0D0000 		.4byte	.LASF322
 9942 0281 04       		.byte	0x4
 9943 0282 01       		.byte	0x1
 9944 0283 AE       		.byte	0xae
 9945 0284 A6020000 		.4byte	0x2a6
 9946 0288 0F       		.uleb128 0xf
 9947 0289 6600     		.ascii	"f\000"
 9948 028b 01       		.byte	0x1
 9949 028c AF       		.byte	0xaf
 9950 028d FD000000 		.4byte	0xfd
 9951 0291 0F       		.uleb128 0xf
 9952 0292 6200     		.ascii	"b\000"
 9953 0294 01       		.byte	0x1
 9954 0295 B0       		.byte	0xb0
 9955 0296 A6020000 		.4byte	0x2a6
 9956 029a 0F       		.uleb128 0xf
 9957 029b 75333200 		.ascii	"u32\000"
 9958 029f 01       		.byte	0x1
 9959 02a0 B1       		.byte	0xb1
 9960 02a1 CE000000 		.4byte	0xce
 9961 02a5 00       		.byte	0
 9962 02a6 07       		.uleb128 0x7
 9963 02a7 A2000000 		.4byte	0xa2
 9964 02ab B6020000 		.4byte	0x2b6
 9965 02af 08       		.uleb128 0x8
 9966 02b0 36010000 		.4byte	0x136
 9967 02b4 03       		.byte	0x3
 9968 02b5 00       		.byte	0
 9969 02b6 10       		.uleb128 0x10
 9970 02b7 BF030000 		.4byte	.LASF110
 9971 02bb 01       		.byte	0x1
 9972 02bc B5       		.byte	0xb5
 9973 02bd 00000000 		.4byte	.LFB64
 9974 02c1 74010000 		.4byte	.LFE64-.LFB64
 9975 02c5 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 224


 9976 02c6 9C       		.byte	0x9c
 9977 02c7 E2020000 		.4byte	0x2e2
 9978 02cb 11       		.uleb128 0x11
 9979 02cc 66000000 		.4byte	.LBB2
 9980 02d0 7A000000 		.4byte	.LBE2-.LBB2
 9981 02d4 12       		.uleb128 0x12
 9982 02d5 6900     		.ascii	"i\000"
 9983 02d7 01       		.byte	0x1
 9984 02d8 BB       		.byte	0xbb
 9985 02d9 94000000 		.4byte	0x94
 9986 02dd 02       		.uleb128 0x2
 9987 02de 91       		.byte	0x91
 9988 02df 6C       		.sleb128 -20
 9989 02e0 00       		.byte	0
 9990 02e1 00       		.byte	0
 9991 02e2 13       		.uleb128 0x13
 9992 02e3 330D0000 		.4byte	.LASF58
 9993 02e7 01       		.byte	0x1
 9994 02e8 E2       		.byte	0xe2
 9995 02e9 00000000 		.4byte	.LFB65
 9996 02ed 9C000000 		.4byte	.LFE65-.LFB65
 9997 02f1 01       		.uleb128 0x1
 9998 02f2 9C       		.byte	0x9c
 9999 02f3 14       		.uleb128 0x14
 10000 02f4 820B0000 		.4byte	.LASF59
 10001 02f8 01       		.byte	0x1
 10002 02f9 0B01     		.2byte	0x10b
 10003 02fb 00000000 		.4byte	.LFB66
 10004 02ff 14000000 		.4byte	.LFE66-.LFB66
 10005 0303 01       		.uleb128 0x1
 10006 0304 9C       		.byte	0x9c
 10007 0305 14       		.uleb128 0x14
 10008 0306 C7090000 		.4byte	.LASF60
 10009 030a 01       		.byte	0x1
 10010 030b 1601     		.2byte	0x116
 10011 030d 00000000 		.4byte	.LFB67
 10012 0311 7C000000 		.4byte	.LFE67-.LFB67
 10013 0315 01       		.uleb128 0x1
 10014 0316 9C       		.byte	0x9c
 10015 0317 15       		.uleb128 0x15
 10016 0318 17050000 		.4byte	.LASF63
 10017 031c 01       		.byte	0x1
 10018 031d 3201     		.2byte	0x132
 10019 031f FD000000 		.4byte	0xfd
 10020 0323 00000000 		.4byte	.LFB68
 10021 0327 58000000 		.4byte	.LFE68-.LFB68
 10022 032b 01       		.uleb128 0x1
 10023 032c 9C       		.byte	0x9c
 10024 032d 7D030000 		.4byte	0x37d
 10025 0331 16       		.uleb128 0x16
 10026 0332 6D696E00 		.ascii	"min\000"
 10027 0336 01       		.byte	0x1
 10028 0337 3201     		.2byte	0x132
 10029 0339 FD000000 		.4byte	0xfd
 10030 033d 02       		.uleb128 0x2
 10031 033e 91       		.byte	0x91
 10032 033f 6C       		.sleb128 -20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 225


 10033 0340 16       		.uleb128 0x16
 10034 0341 76616C00 		.ascii	"val\000"
 10035 0345 01       		.byte	0x1
 10036 0346 3201     		.2byte	0x132
 10037 0348 FD000000 		.4byte	0xfd
 10038 034c 02       		.uleb128 0x2
 10039 034d 91       		.byte	0x91
 10040 034e 68       		.sleb128 -24
 10041 034f 16       		.uleb128 0x16
 10042 0350 6D617800 		.ascii	"max\000"
 10043 0354 01       		.byte	0x1
 10044 0355 3201     		.2byte	0x132
 10045 0357 FD000000 		.4byte	0xfd
 10046 035b 02       		.uleb128 0x2
 10047 035c 91       		.byte	0x91
 10048 035d 64       		.sleb128 -28
 10049 035e 17       		.uleb128 0x17
 10050 035f 530A0000 		.4byte	.LASF61
 10051 0363 01       		.byte	0x1
 10052 0364 3401     		.2byte	0x134
 10053 0366 FD000000 		.4byte	0xfd
 10054 036a 02       		.uleb128 0x2
 10055 036b 91       		.byte	0x91
 10056 036c 74       		.sleb128 -12
 10057 036d 17       		.uleb128 0x17
 10058 036e 86040000 		.4byte	.LASF62
 10059 0372 01       		.byte	0x1
 10060 0373 3501     		.2byte	0x135
 10061 0375 FD000000 		.4byte	0xfd
 10062 0379 02       		.uleb128 0x2
 10063 037a 91       		.byte	0x91
 10064 037b 70       		.sleb128 -16
 10065 037c 00       		.byte	0
 10066 037d 15       		.uleb128 0x15
 10067 037e FB100000 		.4byte	.LASF64
 10068 0382 01       		.byte	0x1
 10069 0383 4801     		.2byte	0x148
 10070 0385 FD000000 		.4byte	0xfd
 10071 0389 00000000 		.4byte	.LFB69
 10072 038d 68000000 		.4byte	.LFE69-.LFB69
 10073 0391 01       		.uleb128 0x1
 10074 0392 9C       		.byte	0x9c
 10075 0393 A5030000 		.4byte	0x3a5
 10076 0397 16       		.uleb128 0x16
 10077 0398 6600     		.ascii	"f\000"
 10078 039a 01       		.byte	0x1
 10079 039b 4801     		.2byte	0x148
 10080 039d FD000000 		.4byte	0xfd
 10081 03a1 02       		.uleb128 0x2
 10082 03a2 91       		.byte	0x91
 10083 03a3 74       		.sleb128 -12
 10084 03a4 00       		.byte	0
 10085 03a5 15       		.uleb128 0x15
 10086 03a6 9A0C0000 		.4byte	.LASF65
 10087 03aa 01       		.byte	0x1
 10088 03ab 4F01     		.2byte	0x14f
 10089 03ad FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 226


 10090 03b1 00000000 		.4byte	.LFB70
 10091 03b5 4C000000 		.4byte	.LFE70-.LFB70
 10092 03b9 01       		.uleb128 0x1
 10093 03ba 9C       		.byte	0x9c
 10094 03bb CD030000 		.4byte	0x3cd
 10095 03bf 16       		.uleb128 0x16
 10096 03c0 6600     		.ascii	"f\000"
 10097 03c2 01       		.byte	0x1
 10098 03c3 4F01     		.2byte	0x14f
 10099 03c5 FD000000 		.4byte	0xfd
 10100 03c9 02       		.uleb128 0x2
 10101 03ca 91       		.byte	0x91
 10102 03cb 74       		.sleb128 -12
 10103 03cc 00       		.byte	0
 10104 03cd 15       		.uleb128 0x15
 10105 03ce BF070000 		.4byte	.LASF66
 10106 03d2 01       		.byte	0x1
 10107 03d3 5501     		.2byte	0x155
 10108 03d5 FD000000 		.4byte	0xfd
 10109 03d9 00000000 		.4byte	.LFB71
 10110 03dd 46000000 		.4byte	.LFE71-.LFB71
 10111 03e1 01       		.uleb128 0x1
 10112 03e2 9C       		.byte	0x9c
 10113 03e3 2F040000 		.4byte	0x42f
 10114 03e7 16       		.uleb128 0x16
 10115 03e8 4100     		.ascii	"A\000"
 10116 03ea 01       		.byte	0x1
 10117 03eb 5501     		.2byte	0x155
 10118 03ed FD000000 		.4byte	0xfd
 10119 03f1 02       		.uleb128 0x2
 10120 03f2 91       		.byte	0x91
 10121 03f3 6C       		.sleb128 -20
 10122 03f4 16       		.uleb128 0x16
 10123 03f5 4200     		.ascii	"B\000"
 10124 03f7 01       		.byte	0x1
 10125 03f8 5501     		.2byte	0x155
 10126 03fa FD000000 		.4byte	0xfd
 10127 03fe 02       		.uleb128 0x2
 10128 03ff 91       		.byte	0x91
 10129 0400 68       		.sleb128 -24
 10130 0401 18       		.uleb128 0x18
 10131 0402 1C020000 		.4byte	.LASF67
 10132 0406 01       		.byte	0x1
 10133 0407 5501     		.2byte	0x155
 10134 0409 FD000000 		.4byte	0xfd
 10135 040d 02       		.uleb128 0x2
 10136 040e 91       		.byte	0x91
 10137 040f 64       		.sleb128 -28
 10138 0410 17       		.uleb128 0x17
 10139 0411 6F030000 		.4byte	.LASF68
 10140 0415 01       		.byte	0x1
 10141 0416 5701     		.2byte	0x157
 10142 0418 FD000000 		.4byte	0xfd
 10143 041c 02       		.uleb128 0x2
 10144 041d 91       		.byte	0x91
 10145 041e 74       		.sleb128 -12
 10146 041f 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 227


 10147 0420 6F757400 		.ascii	"out\000"
 10148 0424 01       		.byte	0x1
 10149 0425 5A01     		.2byte	0x15a
 10150 0427 FD000000 		.4byte	0xfd
 10151 042b 02       		.uleb128 0x2
 10152 042c 91       		.byte	0x91
 10153 042d 70       		.sleb128 -16
 10154 042e 00       		.byte	0
 10155 042f 1A       		.uleb128 0x1a
 10156 0430 6D617000 		.ascii	"map\000"
 10157 0434 01       		.byte	0x1
 10158 0435 CA01     		.2byte	0x1ca
 10159 0437 FD000000 		.4byte	0xfd
 10160 043b 00000000 		.4byte	.LFB72
 10161 043f 56000000 		.4byte	.LFE72-.LFB72
 10162 0443 01       		.uleb128 0x1
 10163 0444 9C       		.byte	0x9c
 10164 0445 95040000 		.4byte	0x495
 10165 0449 18       		.uleb128 0x18
 10166 044a 9C040000 		.4byte	.LASF69
 10167 044e 01       		.byte	0x1
 10168 044f CA01     		.2byte	0x1ca
 10169 0451 FD000000 		.4byte	0xfd
 10170 0455 02       		.uleb128 0x2
 10171 0456 91       		.byte	0x91
 10172 0457 6C       		.sleb128 -20
 10173 0458 18       		.uleb128 0x18
 10174 0459 EC010000 		.4byte	.LASF70
 10175 045d 01       		.byte	0x1
 10176 045e CA01     		.2byte	0x1ca
 10177 0460 FD000000 		.4byte	0xfd
 10178 0464 02       		.uleb128 0x2
 10179 0465 91       		.byte	0x91
 10180 0466 68       		.sleb128 -24
 10181 0467 18       		.uleb128 0x18
 10182 0468 F1080000 		.4byte	.LASF71
 10183 046c 01       		.byte	0x1
 10184 046d CA01     		.2byte	0x1ca
 10185 046f FD000000 		.4byte	0xfd
 10186 0473 02       		.uleb128 0x2
 10187 0474 91       		.byte	0x91
 10188 0475 64       		.sleb128 -28
 10189 0476 18       		.uleb128 0x18
 10190 0477 C0080000 		.4byte	.LASF72
 10191 047b 01       		.byte	0x1
 10192 047c CA01     		.2byte	0x1ca
 10193 047e FD000000 		.4byte	0xfd
 10194 0482 02       		.uleb128 0x2
 10195 0483 91       		.byte	0x91
 10196 0484 60       		.sleb128 -32
 10197 0485 18       		.uleb128 0x18
 10198 0486 D20A0000 		.4byte	.LASF73
 10199 048a 01       		.byte	0x1
 10200 048b CA01     		.2byte	0x1ca
 10201 048d FD000000 		.4byte	0xfd
 10202 0491 02       		.uleb128 0x2
 10203 0492 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 228


 10204 0493 00       		.sleb128 0
 10205 0494 00       		.byte	0
 10206 0495 1B       		.uleb128 0x1b
 10207 0496 A8050000 		.4byte	.LASF105
 10208 049a 01       		.byte	0x1
 10209 049b D501     		.2byte	0x1d5
 10210 049d 00000000 		.4byte	.LFB73
 10211 04a1 0C000000 		.4byte	.LFE73-.LFB73
 10212 04a5 01       		.uleb128 0x1
 10213 04a6 9C       		.byte	0x9c
 10214 04a7 1C       		.uleb128 0x1c
 10215 04a8 92100000 		.4byte	.LASF323
 10216 04ac 01       		.byte	0x1
 10217 04ad DB01     		.2byte	0x1db
 10218 04af 00000000 		.4byte	.LFB74
 10219 04b3 0C010000 		.4byte	.LFE74-.LFB74
 10220 04b7 01       		.uleb128 0x1
 10221 04b8 9C       		.byte	0x9c
 10222 04b9 EE040000 		.4byte	0x4ee
 10223 04bd 11       		.uleb128 0x11
 10224 04be 06000000 		.4byte	.LBB3
 10225 04c2 EA000000 		.4byte	.LBE3-.LBB3
 10226 04c6 19       		.uleb128 0x19
 10227 04c7 6900     		.ascii	"i\000"
 10228 04c9 01       		.byte	0x1
 10229 04ca DF01     		.2byte	0x1df
 10230 04cc 94000000 		.4byte	0x94
 10231 04d0 02       		.uleb128 0x2
 10232 04d1 91       		.byte	0x91
 10233 04d2 6C       		.sleb128 -20
 10234 04d3 11       		.uleb128 0x11
 10235 04d4 0C000000 		.4byte	.LBB4
 10236 04d8 D8000000 		.4byte	.LBE4-.LBB4
 10237 04dc 17       		.uleb128 0x17
 10238 04dd F3010000 		.4byte	.LASF74
 10239 04e1 01       		.byte	0x1
 10240 04e2 E201     		.2byte	0x1e2
 10241 04e4 FD000000 		.4byte	0xfd
 10242 04e8 02       		.uleb128 0x2
 10243 04e9 91       		.byte	0x91
 10244 04ea 68       		.sleb128 -24
 10245 04eb 00       		.byte	0
 10246 04ec 00       		.byte	0
 10247 04ed 00       		.byte	0
 10248 04ee 15       		.uleb128 0x15
 10249 04ef CC020000 		.4byte	.LASF75
 10250 04f3 01       		.byte	0x1
 10251 04f4 E901     		.2byte	0x1e9
 10252 04f6 94000000 		.4byte	0x94
 10253 04fa 00000000 		.4byte	.LFB75
 10254 04fe 80200000 		.4byte	.LFE75-.LFB75
 10255 0502 01       		.uleb128 0x1
 10256 0503 9C       		.byte	0x9c
 10257 0504 13090000 		.4byte	0x913
 10258 0508 17       		.uleb128 0x17
 10259 0509 28110000 		.4byte	.LASF76
 10260 050d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 229


 10261 050e F801     		.2byte	0x1f8
 10262 0510 A2000000 		.4byte	0xa2
 10263 0514 03       		.uleb128 0x3
 10264 0515 91       		.byte	0x91
 10265 0516 8B7F     		.sleb128 -117
 10266 0518 1D       		.uleb128 0x1d
 10267 0519 56000000 		.4byte	.LBB5
 10268 051d 8A010000 		.4byte	.LBE5-.LBB5
 10269 0521 D4050000 		.4byte	0x5d4
 10270 0525 17       		.uleb128 0x17
 10271 0526 2E040000 		.4byte	.LASF77
 10272 052a 01       		.byte	0x1
 10273 052b 0602     		.2byte	0x206
 10274 052d 94000000 		.4byte	0x94
 10275 0531 02       		.uleb128 0x2
 10276 0532 91       		.byte	0x91
 10277 0533 6C       		.sleb128 -20
 10278 0534 1D       		.uleb128 0x1d
 10279 0535 5E000000 		.4byte	.LBB6
 10280 0539 64000000 		.4byte	.LBE6-.LBB6
 10281 053d 51050000 		.4byte	0x551
 10282 0541 17       		.uleb128 0x17
 10283 0542 C10F0000 		.4byte	.LASF78
 10284 0546 01       		.byte	0x1
 10285 0547 0902     		.2byte	0x209
 10286 0549 94000000 		.4byte	0x94
 10287 054d 02       		.uleb128 0x2
 10288 054e 91       		.byte	0x91
 10289 054f 68       		.sleb128 -24
 10290 0550 00       		.byte	0
 10291 0551 11       		.uleb128 0x11
 10292 0552 C2000000 		.4byte	.LBB7
 10293 0556 0A010000 		.4byte	.LBE7-.LBB7
 10294 055a 19       		.uleb128 0x19
 10295 055b 6900     		.ascii	"i\000"
 10296 055d 01       		.byte	0x1
 10297 055e 0D02     		.2byte	0x20d
 10298 0560 94000000 		.4byte	0x94
 10299 0564 02       		.uleb128 0x2
 10300 0565 91       		.byte	0x91
 10301 0566 64       		.sleb128 -28
 10302 0567 11       		.uleb128 0x11
 10303 0568 CA000000 		.4byte	.LBB8
 10304 056c EE000000 		.4byte	.LBE8-.LBB8
 10305 0570 17       		.uleb128 0x17
 10306 0571 3F040000 		.4byte	.LASF79
 10307 0575 01       		.byte	0x1
 10308 0576 0F02     		.2byte	0x20f
 10309 0578 94000000 		.4byte	0x94
 10310 057c 03       		.uleb128 0x3
 10311 057d 91       		.byte	0x91
 10312 057e 847F     		.sleb128 -124
 10313 0580 11       		.uleb128 0x11
 10314 0581 D8000000 		.4byte	.LBB9
 10315 0585 E0000000 		.4byte	.LBE9-.LBB9
 10316 0589 19       		.uleb128 0x19
 10317 058a 6A00     		.ascii	"j\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 230


 10318 058c 01       		.byte	0x1
 10319 058d 1002     		.2byte	0x210
 10320 058f 94000000 		.4byte	0x94
 10321 0593 02       		.uleb128 0x2
 10322 0594 91       		.byte	0x91
 10323 0595 60       		.sleb128 -32
 10324 0596 11       		.uleb128 0x11
 10325 0597 E0000000 		.4byte	.LBB10
 10326 059b C6000000 		.4byte	.LBE10-.LBB10
 10327 059f 17       		.uleb128 0x17
 10328 05a0 77030000 		.4byte	.LASF80
 10329 05a4 01       		.byte	0x1
 10330 05a5 1302     		.2byte	0x213
 10331 05a7 94000000 		.4byte	0x94
 10332 05ab 03       		.uleb128 0x3
 10333 05ac 91       		.byte	0x91
 10334 05ad 807F     		.sleb128 -128
 10335 05af 17       		.uleb128 0x17
 10336 05b0 07110000 		.4byte	.LASF81
 10337 05b4 01       		.byte	0x1
 10338 05b5 1402     		.2byte	0x214
 10339 05b7 B8000000 		.4byte	0xb8
 10340 05bb 03       		.uleb128 0x3
 10341 05bc 91       		.byte	0x91
 10342 05bd FE7E     		.sleb128 -130
 10343 05bf 17       		.uleb128 0x17
 10344 05c0 480A0000 		.4byte	.LASF82
 10345 05c4 01       		.byte	0x1
 10346 05c5 1502     		.2byte	0x215
 10347 05c7 B8000000 		.4byte	0xb8
 10348 05cb 03       		.uleb128 0x3
 10349 05cc 91       		.byte	0x91
 10350 05cd FC7E     		.sleb128 -132
 10351 05cf 00       		.byte	0
 10352 05d0 00       		.byte	0
 10353 05d1 00       		.byte	0
 10354 05d2 00       		.byte	0
 10355 05d3 00       		.byte	0
 10356 05d4 1D       		.uleb128 0x1d
 10357 05d5 E0010000 		.4byte	.LBB11
 10358 05d9 A4000000 		.4byte	.LBE11-.LBB11
 10359 05dd EF050000 		.4byte	0x5ef
 10360 05e1 19       		.uleb128 0x19
 10361 05e2 6900     		.ascii	"i\000"
 10362 05e4 01       		.byte	0x1
 10363 05e5 1C02     		.2byte	0x21c
 10364 05e7 94000000 		.4byte	0x94
 10365 05eb 02       		.uleb128 0x2
 10366 05ec 91       		.byte	0x91
 10367 05ed 5C       		.sleb128 -36
 10368 05ee 00       		.byte	0
 10369 05ef 1D       		.uleb128 0x1d
 10370 05f0 88020000 		.4byte	.LBB12
 10371 05f4 D4000000 		.4byte	.LBE12-.LBB12
 10372 05f8 53060000 		.4byte	0x653
 10373 05fc 19       		.uleb128 0x19
 10374 05fd 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 231


 10375 05ff 01       		.byte	0x1
 10376 0600 2402     		.2byte	0x224
 10377 0602 94000000 		.4byte	0x94
 10378 0606 02       		.uleb128 0x2
 10379 0607 91       		.byte	0x91
 10380 0608 58       		.sleb128 -40
 10381 0609 1D       		.uleb128 0x1d
 10382 060a 90020000 		.4byte	.LBB13
 10383 060e 34000000 		.4byte	.LBE13-.LBB13
 10384 0612 24060000 		.4byte	0x624
 10385 0616 19       		.uleb128 0x19
 10386 0617 6A00     		.ascii	"j\000"
 10387 0619 01       		.byte	0x1
 10388 061a 2602     		.2byte	0x226
 10389 061c 94000000 		.4byte	0x94
 10390 0620 02       		.uleb128 0x2
 10391 0621 91       		.byte	0x91
 10392 0622 54       		.sleb128 -44
 10393 0623 00       		.byte	0
 10394 0624 11       		.uleb128 0x11
 10395 0625 C4020000 		.4byte	.LBB14
 10396 0629 7A000000 		.4byte	.LBE14-.LBB14
 10397 062d 19       		.uleb128 0x19
 10398 062e 6A00     		.ascii	"j\000"
 10399 0630 01       		.byte	0x1
 10400 0631 2B02     		.2byte	0x22b
 10401 0633 94000000 		.4byte	0x94
 10402 0637 02       		.uleb128 0x2
 10403 0638 91       		.byte	0x91
 10404 0639 50       		.sleb128 -48
 10405 063a 11       		.uleb128 0x11
 10406 063b CC020000 		.4byte	.LBB15
 10407 063f 60000000 		.4byte	.LBE15-.LBB15
 10408 0643 19       		.uleb128 0x19
 10409 0644 6B00     		.ascii	"k\000"
 10410 0646 01       		.byte	0x1
 10411 0647 2D02     		.2byte	0x22d
 10412 0649 94000000 		.4byte	0x94
 10413 064d 02       		.uleb128 0x2
 10414 064e 91       		.byte	0x91
 10415 064f 4C       		.sleb128 -52
 10416 0650 00       		.byte	0
 10417 0651 00       		.byte	0
 10418 0652 00       		.byte	0
 10419 0653 1D       		.uleb128 0x1d
 10420 0654 2E040000 		.4byte	.LBB16
 10421 0658 5C000000 		.4byte	.LBE16-.LBB16
 10422 065c 6E060000 		.4byte	0x66e
 10423 0660 19       		.uleb128 0x19
 10424 0661 7700     		.ascii	"w\000"
 10425 0663 01       		.byte	0x1
 10426 0664 5A02     		.2byte	0x25a
 10427 0666 94000000 		.4byte	0x94
 10428 066a 02       		.uleb128 0x2
 10429 066b 91       		.byte	0x91
 10430 066c 48       		.sleb128 -56
 10431 066d 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 232


 10432 066e 1D       		.uleb128 0x1d
 10433 066f 1C050000 		.4byte	.LBB17
 10434 0673 2A000000 		.4byte	.LBE17-.LBB17
 10435 0677 8C060000 		.4byte	0x68c
 10436 067b 17       		.uleb128 0x17
 10437 067c 42080000 		.4byte	.LASF83
 10438 0680 01       		.byte	0x1
 10439 0681 1903     		.2byte	0x319
 10440 0683 A2000000 		.4byte	0xa2
 10441 0687 03       		.uleb128 0x3
 10442 0688 91       		.byte	0x91
 10443 0689 FB7E     		.sleb128 -133
 10444 068b 00       		.byte	0
 10445 068c 1D       		.uleb128 0x1d
 10446 068d 7C070000 		.4byte	.LBB18
 10447 0691 A0000000 		.4byte	.LBE18-.LBB18
 10448 0695 C1060000 		.4byte	0x6c1
 10449 0699 19       		.uleb128 0x19
 10450 069a 6900     		.ascii	"i\000"
 10451 069c 01       		.byte	0x1
 10452 069d 6103     		.2byte	0x361
 10453 069f 94000000 		.4byte	0x94
 10454 06a3 02       		.uleb128 0x2
 10455 06a4 91       		.byte	0x91
 10456 06a5 44       		.sleb128 -60
 10457 06a6 11       		.uleb128 0x11
 10458 06a7 82070000 		.4byte	.LBB19
 10459 06ab 8E000000 		.4byte	.LBE19-.LBB19
 10460 06af 17       		.uleb128 0x17
 10461 06b0 3A080000 		.4byte	.LASF84
 10462 06b4 01       		.byte	0x1
 10463 06b5 6303     		.2byte	0x363
 10464 06b7 B8000000 		.4byte	0xb8
 10465 06bb 03       		.uleb128 0x3
 10466 06bc 91       		.byte	0x91
 10467 06bd D47E     		.sleb128 -172
 10468 06bf 00       		.byte	0
 10469 06c0 00       		.byte	0
 10470 06c1 1D       		.uleb128 0x1d
 10471 06c2 82090000 		.4byte	.LBB20
 10472 06c6 92010000 		.4byte	.LBE20-.LBB20
 10473 06ca DF060000 		.4byte	0x6df
 10474 06ce 17       		.uleb128 0x17
 10475 06cf 5D000000 		.4byte	.LASF85
 10476 06d3 01       		.byte	0x1
 10477 06d4 1704     		.2byte	0x417
 10478 06d6 AD000000 		.4byte	0xad
 10479 06da 03       		.uleb128 0x3
 10480 06db 91       		.byte	0x91
 10481 06dc F87E     		.sleb128 -136
 10482 06de 00       		.byte	0
 10483 06df 1D       		.uleb128 0x1d
 10484 06e0 400C0000 		.4byte	.LBB21
 10485 06e4 88020000 		.4byte	.LBE21-.LBB21
 10486 06e8 FA060000 		.4byte	0x6fa
 10487 06ec 19       		.uleb128 0x19
 10488 06ed 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 233


 10489 06ef 01       		.byte	0x1
 10490 06f0 7104     		.2byte	0x471
 10491 06f2 94000000 		.4byte	0x94
 10492 06f6 02       		.uleb128 0x2
 10493 06f7 91       		.byte	0x91
 10494 06f8 40       		.sleb128 -64
 10495 06f9 00       		.byte	0
 10496 06fa 1D       		.uleb128 0x1d
 10497 06fb CE0E0000 		.4byte	.LBB22
 10498 06ff 46000000 		.4byte	.LBE22-.LBB22
 10499 0703 16070000 		.4byte	0x716
 10500 0707 19       		.uleb128 0x19
 10501 0708 6900     		.ascii	"i\000"
 10502 070a 01       		.byte	0x1
 10503 070b 9304     		.2byte	0x493
 10504 070d 94000000 		.4byte	0x94
 10505 0711 03       		.uleb128 0x3
 10506 0712 91       		.byte	0x91
 10507 0713 BC7F     		.sleb128 -68
 10508 0715 00       		.byte	0
 10509 0716 1D       		.uleb128 0x1d
 10510 0717 C2140000 		.4byte	.LBB23
 10511 071b 28000000 		.4byte	.LBE23-.LBB23
 10512 071f 32070000 		.4byte	0x732
 10513 0723 19       		.uleb128 0x19
 10514 0724 6900     		.ascii	"i\000"
 10515 0726 01       		.byte	0x1
 10516 0727 8105     		.2byte	0x581
 10517 0729 94000000 		.4byte	0x94
 10518 072d 03       		.uleb128 0x3
 10519 072e 91       		.byte	0x91
 10520 072f B87F     		.sleb128 -72
 10521 0731 00       		.byte	0
 10522 0732 1D       		.uleb128 0x1d
 10523 0733 F4140000 		.4byte	.LBB24
 10524 0737 98000000 		.4byte	.LBE24-.LBB24
 10525 073b 4E070000 		.4byte	0x74e
 10526 073f 19       		.uleb128 0x19
 10527 0740 6900     		.ascii	"i\000"
 10528 0742 01       		.byte	0x1
 10529 0743 8E05     		.2byte	0x58e
 10530 0745 94000000 		.4byte	0x94
 10531 0749 03       		.uleb128 0x3
 10532 074a 91       		.byte	0x91
 10533 074b B47F     		.sleb128 -76
 10534 074d 00       		.byte	0
 10535 074e 1D       		.uleb128 0x1d
 10536 074f A6150000 		.4byte	.LBB25
 10537 0753 9C000000 		.4byte	.LBE25-.LBB25
 10538 0757 6A070000 		.4byte	0x76a
 10539 075b 19       		.uleb128 0x19
 10540 075c 6900     		.ascii	"i\000"
 10541 075e 01       		.byte	0x1
 10542 075f A505     		.2byte	0x5a5
 10543 0761 94000000 		.4byte	0x94
 10544 0765 03       		.uleb128 0x3
 10545 0766 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 234


 10546 0767 B07F     		.sleb128 -80
 10547 0769 00       		.byte	0
 10548 076a 1D       		.uleb128 0x1d
 10549 076b 48160000 		.4byte	.LBB26
 10550 076f 7A030000 		.4byte	.LBE26-.LBB26
 10551 0773 E0070000 		.4byte	0x7e0
 10552 0777 19       		.uleb128 0x19
 10553 0778 6900     		.ascii	"i\000"
 10554 077a 01       		.byte	0x1
 10555 077b B605     		.2byte	0x5b6
 10556 077d 94000000 		.4byte	0x94
 10557 0781 03       		.uleb128 0x3
 10558 0782 91       		.byte	0x91
 10559 0783 AC7F     		.sleb128 -84
 10560 0785 11       		.uleb128 0x11
 10561 0786 98160000 		.4byte	.LBB27
 10562 078a 18030000 		.4byte	.LBE27-.LBB27
 10563 078e 17       		.uleb128 0x17
 10564 078f FF0B0000 		.4byte	.LASF86
 10565 0793 01       		.byte	0x1
 10566 0794 C705     		.2byte	0x5c7
 10567 0796 FD000000 		.4byte	0xfd
 10568 079a 03       		.uleb128 0x3
 10569 079b 91       		.byte	0x91
 10570 079c F47E     		.sleb128 -140
 10571 079e 17       		.uleb128 0x17
 10572 079f F70E0000 		.4byte	.LASF87
 10573 07a3 01       		.byte	0x1
 10574 07a4 D405     		.2byte	0x5d4
 10575 07a6 FD000000 		.4byte	0xfd
 10576 07aa 03       		.uleb128 0x3
 10577 07ab 91       		.byte	0x91
 10578 07ac F07E     		.sleb128 -144
 10579 07ae 17       		.uleb128 0x17
 10580 07af 230B0000 		.4byte	.LASF88
 10581 07b3 01       		.byte	0x1
 10582 07b4 D705     		.2byte	0x5d7
 10583 07b6 FD000000 		.4byte	0xfd
 10584 07ba 03       		.uleb128 0x3
 10585 07bb 91       		.byte	0x91
 10586 07bc EC7E     		.sleb128 -148
 10587 07be 17       		.uleb128 0x17
 10588 07bf EB050000 		.4byte	.LASF89
 10589 07c3 01       		.byte	0x1
 10590 07c4 D905     		.2byte	0x5d9
 10591 07c6 FD000000 		.4byte	0xfd
 10592 07ca 03       		.uleb128 0x3
 10593 07cb 91       		.byte	0x91
 10594 07cc E87E     		.sleb128 -152
 10595 07ce 17       		.uleb128 0x17
 10596 07cf 850E0000 		.4byte	.LASF90
 10597 07d3 01       		.byte	0x1
 10598 07d4 DB05     		.2byte	0x5db
 10599 07d6 FD000000 		.4byte	0xfd
 10600 07da 03       		.uleb128 0x3
 10601 07db 91       		.byte	0x91
 10602 07dc E47E     		.sleb128 -156
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 235


 10603 07de 00       		.byte	0
 10604 07df 00       		.byte	0
 10605 07e0 1D       		.uleb128 0x1d
 10606 07e1 E41A0000 		.4byte	.LBB28
 10607 07e5 4E000000 		.4byte	.LBE28-.LBB28
 10608 07e9 FC070000 		.4byte	0x7fc
 10609 07ed 19       		.uleb128 0x19
 10610 07ee 6900     		.ascii	"i\000"
 10611 07f0 01       		.byte	0x1
 10612 07f1 2F06     		.2byte	0x62f
 10613 07f3 0D020000 		.4byte	0x20d
 10614 07f7 03       		.uleb128 0x3
 10615 07f8 91       		.byte	0x91
 10616 07f9 A87F     		.sleb128 -88
 10617 07fb 00       		.byte	0
 10618 07fc 1D       		.uleb128 0x1d
 10619 07fd E61B0000 		.4byte	.LBB29
 10620 0801 22000000 		.4byte	.LBE29-.LBB29
 10621 0805 18080000 		.4byte	0x818
 10622 0809 19       		.uleb128 0x19
 10623 080a 6900     		.ascii	"i\000"
 10624 080c 01       		.byte	0x1
 10625 080d 5E06     		.2byte	0x65e
 10626 080f 94000000 		.4byte	0x94
 10627 0813 03       		.uleb128 0x3
 10628 0814 91       		.byte	0x91
 10629 0815 A47F     		.sleb128 -92
 10630 0817 00       		.byte	0
 10631 0818 1D       		.uleb128 0x1d
 10632 0819 081C0000 		.4byte	.LBB30
 10633 081d 8C000000 		.4byte	.LBE30-.LBB30
 10634 0821 34080000 		.4byte	0x834
 10635 0825 19       		.uleb128 0x19
 10636 0826 6900     		.ascii	"i\000"
 10637 0828 01       		.byte	0x1
 10638 0829 6206     		.2byte	0x662
 10639 082b 94000000 		.4byte	0x94
 10640 082f 03       		.uleb128 0x3
 10641 0830 91       		.byte	0x91
 10642 0831 A07F     		.sleb128 -96
 10643 0833 00       		.byte	0
 10644 0834 1D       		.uleb128 0x1d
 10645 0835 941C0000 		.4byte	.LBB31
 10646 0839 22000000 		.4byte	.LBE31-.LBB31
 10647 083d 50080000 		.4byte	0x850
 10648 0841 19       		.uleb128 0x19
 10649 0842 6900     		.ascii	"i\000"
 10650 0844 01       		.byte	0x1
 10651 0845 6606     		.2byte	0x666
 10652 0847 94000000 		.4byte	0x94
 10653 084b 03       		.uleb128 0x3
 10654 084c 91       		.byte	0x91
 10655 084d 9C7F     		.sleb128 -100
 10656 084f 00       		.byte	0
 10657 0850 1D       		.uleb128 0x1d
 10658 0851 401D0000 		.4byte	.LBB32
 10659 0855 56000000 		.4byte	.LBE32-.LBB32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 236


 10660 0859 86080000 		.4byte	0x886
 10661 085d 19       		.uleb128 0x19
 10662 085e 6900     		.ascii	"i\000"
 10663 0860 01       		.byte	0x1
 10664 0861 7906     		.2byte	0x679
 10665 0863 94000000 		.4byte	0x94
 10666 0867 03       		.uleb128 0x3
 10667 0868 91       		.byte	0x91
 10668 0869 987F     		.sleb128 -104
 10669 086b 11       		.uleb128 0x11
 10670 086c 461D0000 		.4byte	.LBB33
 10671 0870 44000000 		.4byte	.LBE33-.LBB33
 10672 0874 17       		.uleb128 0x17
 10673 0875 6C0D0000 		.4byte	.LASF91
 10674 0879 01       		.byte	0x1
 10675 087a 7B06     		.2byte	0x67b
 10676 087c 94000000 		.4byte	0x94
 10677 0880 03       		.uleb128 0x3
 10678 0881 91       		.byte	0x91
 10679 0882 E07E     		.sleb128 -160
 10680 0884 00       		.byte	0
 10681 0885 00       		.byte	0
 10682 0886 1D       		.uleb128 0x1d
 10683 0887 281E0000 		.4byte	.LBB34
 10684 088b B6000000 		.4byte	.LBE34-.LBB34
 10685 088f F8080000 		.4byte	0x8f8
 10686 0893 17       		.uleb128 0x17
 10687 0894 A4020000 		.4byte	.LASF92
 10688 0898 01       		.byte	0x1
 10689 0899 A206     		.2byte	0x6a2
 10690 089b 94000000 		.4byte	0x94
 10691 089f 03       		.uleb128 0x3
 10692 08a0 91       		.byte	0x91
 10693 08a1 DC7E     		.sleb128 -164
 10694 08a3 17       		.uleb128 0x17
 10695 08a4 DC000000 		.4byte	.LASF93
 10696 08a8 01       		.byte	0x1
 10697 08a9 A306     		.2byte	0x6a3
 10698 08ab 94000000 		.4byte	0x94
 10699 08af 03       		.uleb128 0x3
 10700 08b0 91       		.byte	0x91
 10701 08b1 D87E     		.sleb128 -168
 10702 08b3 17       		.uleb128 0x17
 10703 08b4 DE0E0000 		.4byte	.LASF94
 10704 08b8 01       		.byte	0x1
 10705 08b9 A406     		.2byte	0x6a4
 10706 08bb 94000000 		.4byte	0x94
 10707 08bf 03       		.uleb128 0x3
 10708 08c0 91       		.byte	0x91
 10709 08c1 947F     		.sleb128 -108
 10710 08c3 1D       		.uleb128 0x1d
 10711 08c4 381E0000 		.4byte	.LBB35
 10712 08c8 36000000 		.4byte	.LBE35-.LBB35
 10713 08cc DF080000 		.4byte	0x8df
 10714 08d0 19       		.uleb128 0x19
 10715 08d1 6900     		.ascii	"i\000"
 10716 08d3 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 237


 10717 08d4 A506     		.2byte	0x6a5
 10718 08d6 94000000 		.4byte	0x94
 10719 08da 03       		.uleb128 0x3
 10720 08db 91       		.byte	0x91
 10721 08dc 907F     		.sleb128 -112
 10722 08de 00       		.byte	0
 10723 08df 11       		.uleb128 0x11
 10724 08e0 721E0000 		.4byte	.LBB36
 10725 08e4 44000000 		.4byte	.LBE36-.LBB36
 10726 08e8 19       		.uleb128 0x19
 10727 08e9 6900     		.ascii	"i\000"
 10728 08eb 01       		.byte	0x1
 10729 08ec AB06     		.2byte	0x6ab
 10730 08ee 94000000 		.4byte	0x94
 10731 08f2 03       		.uleb128 0x3
 10732 08f3 91       		.byte	0x91
 10733 08f4 8C7F     		.sleb128 -116
 10734 08f6 00       		.byte	0
 10735 08f7 00       		.byte	0
 10736 08f8 11       		.uleb128 0x11
 10737 08f9 861F0000 		.4byte	.LBB37
 10738 08fd 28000000 		.4byte	.LBE37-.LBB37
 10739 0901 17       		.uleb128 0x17
 10740 0902 42080000 		.4byte	.LASF83
 10741 0906 01       		.byte	0x1
 10742 0907 C306     		.2byte	0x6c3
 10743 0909 A2000000 		.4byte	0xa2
 10744 090d 03       		.uleb128 0x3
 10745 090e 91       		.byte	0x91
 10746 090f D77E     		.sleb128 -169
 10747 0911 00       		.byte	0
 10748 0912 00       		.byte	0
 10749 0913 14       		.uleb128 0x14
 10750 0914 21050000 		.4byte	.LASF95
 10751 0918 01       		.byte	0x1
 10752 0919 E406     		.2byte	0x6e4
 10753 091b 00000000 		.4byte	.LFB76
 10754 091f 70000000 		.4byte	.LFE76-.LFB76
 10755 0923 01       		.uleb128 0x1
 10756 0924 9C       		.byte	0x9c
 10757 0925 14       		.uleb128 0x14
 10758 0926 4A100000 		.4byte	.LASF96
 10759 092a 01       		.byte	0x1
 10760 092b F906     		.2byte	0x6f9
 10761 092d 00000000 		.4byte	.LFB77
 10762 0931 70010000 		.4byte	.LFE77-.LFB77
 10763 0935 01       		.uleb128 0x1
 10764 0936 9C       		.byte	0x9c
 10765 0937 15       		.uleb128 0x15
 10766 0938 7F080000 		.4byte	.LASF97
 10767 093c 01       		.byte	0x1
 10768 093d 2107     		.2byte	0x721
 10769 093f D9000000 		.4byte	0xd9
 10770 0943 00000000 		.4byte	.LFB78
 10771 0947 E0000000 		.4byte	.LFE78-.LFB78
 10772 094b 01       		.uleb128 0x1
 10773 094c 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 238


 10774 094d AC090000 		.4byte	0x9ac
 10775 0951 18       		.uleb128 0x18
 10776 0952 A50F0000 		.4byte	.LASF98
 10777 0956 01       		.byte	0x1
 10778 0957 2107     		.2byte	0x721
 10779 0959 D9000000 		.4byte	0xd9
 10780 095d 02       		.uleb128 0x2
 10781 095e 91       		.byte	0x91
 10782 095f 67       		.sleb128 -25
 10783 0960 18       		.uleb128 0x18
 10784 0961 7A010000 		.4byte	.LASF99
 10785 0965 01       		.byte	0x1
 10786 0966 2107     		.2byte	0x721
 10787 0968 E5000000 		.4byte	0xe5
 10788 096c 02       		.uleb128 0x2
 10789 096d 91       		.byte	0x91
 10790 096e 64       		.sleb128 -28
 10791 096f 18       		.uleb128 0x18
 10792 0970 D90E0000 		.4byte	.LASF100
 10793 0974 01       		.byte	0x1
 10794 0975 2107     		.2byte	0x721
 10795 0977 A2000000 		.4byte	0xa2
 10796 097b 02       		.uleb128 0x2
 10797 097c 91       		.byte	0x91
 10798 097d 66       		.sleb128 -26
 10799 097e 17       		.uleb128 0x17
 10800 097f 42080000 		.4byte	.LASF83
 10801 0983 01       		.byte	0x1
 10802 0984 2307     		.2byte	0x723
 10803 0986 2A010000 		.4byte	0x12a
 10804 098a 02       		.uleb128 0x2
 10805 098b 91       		.byte	0x91
 10806 098c 6F       		.sleb128 -17
 10807 098d 17       		.uleb128 0x17
 10808 098e 05030000 		.4byte	.LASF101
 10809 0992 01       		.byte	0x1
 10810 0993 2407     		.2byte	0x724
 10811 0995 A2000000 		.4byte	0xa2
 10812 0999 02       		.uleb128 0x2
 10813 099a 91       		.byte	0x91
 10814 099b 77       		.sleb128 -9
 10815 099c 17       		.uleb128 0x17
 10816 099d D80A0000 		.4byte	.LASF102
 10817 09a1 01       		.byte	0x1
 10818 09a2 2507     		.2byte	0x725
 10819 09a4 CE000000 		.4byte	0xce
 10820 09a8 02       		.uleb128 0x2
 10821 09a9 91       		.byte	0x91
 10822 09aa 70       		.sleb128 -16
 10823 09ab 00       		.byte	0
 10824 09ac 15       		.uleb128 0x15
 10825 09ad 670C0000 		.4byte	.LASF103
 10826 09b1 01       		.byte	0x1
 10827 09b2 5A07     		.2byte	0x75a
 10828 09b4 D9000000 		.4byte	0xd9
 10829 09b8 00000000 		.4byte	.LFB79
 10830 09bc E0000000 		.4byte	.LFE79-.LFB79
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 239


 10831 09c0 01       		.uleb128 0x1
 10832 09c1 9C       		.byte	0x9c
 10833 09c2 210A0000 		.4byte	0xa21
 10834 09c6 18       		.uleb128 0x18
 10835 09c7 A50F0000 		.4byte	.LASF98
 10836 09cb 01       		.byte	0x1
 10837 09cc 5A07     		.2byte	0x75a
 10838 09ce D9000000 		.4byte	0xd9
 10839 09d2 02       		.uleb128 0x2
 10840 09d3 91       		.byte	0x91
 10841 09d4 6F       		.sleb128 -17
 10842 09d5 18       		.uleb128 0x18
 10843 09d6 7A010000 		.4byte	.LASF99
 10844 09da 01       		.byte	0x1
 10845 09db 5A07     		.2byte	0x75a
 10846 09dd D9000000 		.4byte	0xd9
 10847 09e1 02       		.uleb128 0x2
 10848 09e2 91       		.byte	0x91
 10849 09e3 6E       		.sleb128 -18
 10850 09e4 18       		.uleb128 0x18
 10851 09e5 D90E0000 		.4byte	.LASF100
 10852 09e9 01       		.byte	0x1
 10853 09ea 5A07     		.2byte	0x75a
 10854 09ec A2000000 		.4byte	0xa2
 10855 09f0 02       		.uleb128 0x2
 10856 09f1 91       		.byte	0x91
 10857 09f2 6D       		.sleb128 -19
 10858 09f3 17       		.uleb128 0x17
 10859 09f4 42080000 		.4byte	.LASF83
 10860 09f8 01       		.byte	0x1
 10861 09f9 5C07     		.2byte	0x75c
 10862 09fb 2A010000 		.4byte	0x12a
 10863 09ff 02       		.uleb128 0x2
 10864 0a00 91       		.byte	0x91
 10865 0a01 72       		.sleb128 -14
 10866 0a02 17       		.uleb128 0x17
 10867 0a03 D80A0000 		.4byte	.LASF102
 10868 0a07 01       		.byte	0x1
 10869 0a08 5D07     		.2byte	0x75d
 10870 0a0a CE000000 		.4byte	0xce
 10871 0a0e 02       		.uleb128 0x2
 10872 0a0f 91       		.byte	0x91
 10873 0a10 74       		.sleb128 -12
 10874 0a11 17       		.uleb128 0x17
 10875 0a12 05030000 		.4byte	.LASF101
 10876 0a16 01       		.byte	0x1
 10877 0a17 5E07     		.2byte	0x75e
 10878 0a19 A2000000 		.4byte	0xa2
 10879 0a1d 02       		.uleb128 0x2
 10880 0a1e 91       		.byte	0x91
 10881 0a1f 73       		.sleb128 -13
 10882 0a20 00       		.byte	0
 10883 0a21 14       		.uleb128 0x14
 10884 0a22 7A050000 		.4byte	.LASF104
 10885 0a26 01       		.byte	0x1
 10886 0a27 8D07     		.2byte	0x78d
 10887 0a29 00000000 		.4byte	.LFB80
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 240


 10888 0a2d 30000000 		.4byte	.LFE80-.LFB80
 10889 0a31 01       		.uleb128 0x1
 10890 0a32 9C       		.byte	0x9c
 10891 0a33 1E       		.uleb128 0x1e
 10892 0a34 260F0000 		.4byte	.LASF106
 10893 0a38 01       		.byte	0x1
 10894 0a39 9C07     		.2byte	0x79c
 10895 0a3b 00000000 		.4byte	.LFB81
 10896 0a3f E8000000 		.4byte	.LFE81-.LFB81
 10897 0a43 01       		.uleb128 0x1
 10898 0a44 9C       		.byte	0x9c
 10899 0a45 14       		.uleb128 0x14
 10900 0a46 44050000 		.4byte	.LASF107
 10901 0a4a 01       		.byte	0x1
 10902 0a4b B107     		.2byte	0x7b1
 10903 0a4d 00000000 		.4byte	.LFB82
 10904 0a51 54000000 		.4byte	.LFE82-.LFB82
 10905 0a55 01       		.uleb128 0x1
 10906 0a56 9C       		.byte	0x9c
 10907 0a57 14       		.uleb128 0x14
 10908 0a58 66040000 		.4byte	.LASF108
 10909 0a5c 01       		.byte	0x1
 10910 0a5d C407     		.2byte	0x7c4
 10911 0a5f 00000000 		.4byte	.LFB83
 10912 0a63 C4000000 		.4byte	.LFE83-.LFB83
 10913 0a67 01       		.uleb128 0x1
 10914 0a68 9C       		.byte	0x9c
 10915 0a69 15       		.uleb128 0x15
 10916 0a6a 8C0A0000 		.4byte	.LASF109
 10917 0a6e 01       		.byte	0x1
 10918 0a6f F707     		.2byte	0x7f7
 10919 0a71 FD000000 		.4byte	0xfd
 10920 0a75 00000000 		.4byte	.LFB84
 10921 0a79 98000000 		.4byte	.LFE84-.LFB84
 10922 0a7d 01       		.uleb128 0x1
 10923 0a7e 9C       		.byte	0x9c
 10924 0a7f B80A0000 		.4byte	0xab8
 10925 0a83 16       		.uleb128 0x16
 10926 0a84 5800     		.ascii	"X\000"
 10927 0a86 01       		.byte	0x1
 10928 0a87 F707     		.2byte	0x7f7
 10929 0a89 FD000000 		.4byte	0xfd
 10930 0a8d 02       		.uleb128 0x2
 10931 0a8e 91       		.byte	0x91
 10932 0a8f 64       		.sleb128 -28
 10933 0a90 19       		.uleb128 0x19
 10934 0a91 5900     		.ascii	"Y\000"
 10935 0a93 01       		.byte	0x1
 10936 0a94 F807     		.2byte	0x7f8
 10937 0a96 FD000000 		.4byte	0xfd
 10938 0a9a 02       		.uleb128 0x2
 10939 0a9b 91       		.byte	0x91
 10940 0a9c 70       		.sleb128 -16
 10941 0a9d 19       		.uleb128 0x19
 10942 0a9e 4600     		.ascii	"F\000"
 10943 0aa0 01       		.byte	0x1
 10944 0aa1 F807     		.2byte	0x7f8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 241


 10945 0aa3 FD000000 		.4byte	0xfd
 10946 0aa7 02       		.uleb128 0x2
 10947 0aa8 91       		.byte	0x91
 10948 0aa9 74       		.sleb128 -12
 10949 0aaa 19       		.uleb128 0x19
 10950 0aab 4500     		.ascii	"E\000"
 10951 0aad 01       		.byte	0x1
 10952 0aae F907     		.2byte	0x7f9
 10953 0ab0 94000000 		.4byte	0x94
 10954 0ab4 02       		.uleb128 0x2
 10955 0ab5 91       		.byte	0x91
 10956 0ab6 6C       		.sleb128 -20
 10957 0ab7 00       		.byte	0
 10958 0ab8 1F       		.uleb128 0x1f
 10959 0ab9 BD000000 		.4byte	.LASF111
 10960 0abd 01       		.byte	0x1
 10961 0abe 0B08     		.2byte	0x80b
 10962 0ac0 00000000 		.4byte	.LFB85
 10963 0ac4 D4000000 		.4byte	.LFE85-.LFB85
 10964 0ac8 01       		.uleb128 0x1
 10965 0ac9 9C       		.byte	0x9c
 10966 0aca 150B0000 		.4byte	0xb15
 10967 0ace 18       		.uleb128 0x18
 10968 0acf D10B0000 		.4byte	.LASF112
 10969 0ad3 01       		.byte	0x1
 10970 0ad4 0B08     		.2byte	0x80b
 10971 0ad6 94000000 		.4byte	0x94
 10972 0ada 02       		.uleb128 0x2
 10973 0adb 91       		.byte	0x91
 10974 0adc 64       		.sleb128 -28
 10975 0add 17       		.uleb128 0x17
 10976 0ade 9F0B0000 		.4byte	.LASF113
 10977 0ae2 01       		.byte	0x1
 10978 0ae3 1708     		.2byte	0x817
 10979 0ae5 B8000000 		.4byte	0xb8
 10980 0ae9 02       		.uleb128 0x2
 10981 0aea 91       		.byte	0x91
 10982 0aeb 76       		.sleb128 -10
 10983 0aec 11       		.uleb128 0x11
 10984 0aed 18000000 		.4byte	.LBB38
 10985 0af1 86000000 		.4byte	.LBE38-.LBB38
 10986 0af5 17       		.uleb128 0x17
 10987 0af6 AB0D0000 		.4byte	.LASF114
 10988 0afa 01       		.byte	0x1
 10989 0afb 1B08     		.2byte	0x81b
 10990 0afd FD000000 		.4byte	0xfd
 10991 0b01 02       		.uleb128 0x2
 10992 0b02 91       		.byte	0x91
 10993 0b03 70       		.sleb128 -16
 10994 0b04 17       		.uleb128 0x17
 10995 0b05 CC100000 		.4byte	.LASF115
 10996 0b09 01       		.byte	0x1
 10997 0b0a 2A08     		.2byte	0x82a
 10998 0b0c 94000000 		.4byte	0x94
 10999 0b10 02       		.uleb128 0x2
 11000 0b11 91       		.byte	0x91
 11001 0b12 6C       		.sleb128 -20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 242


 11002 0b13 00       		.byte	0
 11003 0b14 00       		.byte	0
 11004 0b15 1F       		.uleb128 0x1f
 11005 0b16 0B070000 		.4byte	.LASF116
 11006 0b1a 01       		.byte	0x1
 11007 0b1b 3608     		.2byte	0x836
 11008 0b1d 00000000 		.4byte	.LFB86
 11009 0b21 1C000000 		.4byte	.LFE86-.LFB86
 11010 0b25 01       		.uleb128 0x1
 11011 0b26 9C       		.byte	0x9c
 11012 0b27 490B0000 		.4byte	0xb49
 11013 0b2b 16       		.uleb128 0x16
 11014 0b2c 636300   		.ascii	"cc\000"
 11015 0b2f 01       		.byte	0x1
 11016 0b30 3608     		.2byte	0x836
 11017 0b32 94000000 		.4byte	0x94
 11018 0b36 02       		.uleb128 0x2
 11019 0b37 91       		.byte	0x91
 11020 0b38 74       		.sleb128 -12
 11021 0b39 16       		.uleb128 0x16
 11022 0b3a 76616C00 		.ascii	"val\000"
 11023 0b3e 01       		.byte	0x1
 11024 0b3f 3608     		.2byte	0x836
 11025 0b41 94000000 		.4byte	0x94
 11026 0b45 02       		.uleb128 0x2
 11027 0b46 91       		.byte	0x91
 11028 0b47 70       		.sleb128 -16
 11029 0b48 00       		.byte	0
 11030 0b49 1F       		.uleb128 0x1f
 11031 0b4a 96090000 		.4byte	.LASF117
 11032 0b4e 01       		.byte	0x1
 11033 0b4f 3C08     		.2byte	0x83c
 11034 0b51 00000000 		.4byte	.LFB87
 11035 0b55 68000000 		.4byte	.LFE87-.LFB87
 11036 0b59 01       		.uleb128 0x1
 11037 0b5a 9C       		.byte	0x9c
 11038 0b5b 8D0B0000 		.4byte	0xb8d
 11039 0b5f 18       		.uleb128 0x18
 11040 0b60 E5020000 		.4byte	.LASF118
 11041 0b64 01       		.byte	0x1
 11042 0b65 3C08     		.2byte	0x83c
 11043 0b67 94000000 		.4byte	0x94
 11044 0b6b 02       		.uleb128 0x2
 11045 0b6c 91       		.byte	0x91
 11046 0b6d 74       		.sleb128 -12
 11047 0b6e 18       		.uleb128 0x18
 11048 0b6f 9F0B0000 		.4byte	.LASF113
 11049 0b73 01       		.byte	0x1
 11050 0b74 3C08     		.2byte	0x83c
 11051 0b76 94000000 		.4byte	0x94
 11052 0b7a 02       		.uleb128 0x2
 11053 0b7b 91       		.byte	0x91
 11054 0b7c 70       		.sleb128 -16
 11055 0b7d 18       		.uleb128 0x18
 11056 0b7e 65080000 		.4byte	.LASF119
 11057 0b82 01       		.byte	0x1
 11058 0b83 3C08     		.2byte	0x83c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 243


 11059 0b85 94000000 		.4byte	0x94
 11060 0b89 02       		.uleb128 0x2
 11061 0b8a 91       		.byte	0x91
 11062 0b8b 6C       		.sleb128 -20
 11063 0b8c 00       		.byte	0
 11064 0b8d 1F       		.uleb128 0x1f
 11065 0b8e C6050000 		.4byte	.LASF120
 11066 0b92 01       		.byte	0x1
 11067 0b93 4908     		.2byte	0x849
 11068 0b95 00000000 		.4byte	.LFB88
 11069 0b99 68000000 		.4byte	.LFE88-.LFB88
 11070 0b9d 01       		.uleb128 0x1
 11071 0b9e 9C       		.byte	0x9c
 11072 0b9f D10B0000 		.4byte	0xbd1
 11073 0ba3 18       		.uleb128 0x18
 11074 0ba4 E5020000 		.4byte	.LASF118
 11075 0ba8 01       		.byte	0x1
 11076 0ba9 4908     		.2byte	0x849
 11077 0bab 94000000 		.4byte	0x94
 11078 0baf 02       		.uleb128 0x2
 11079 0bb0 91       		.byte	0x91
 11080 0bb1 74       		.sleb128 -12
 11081 0bb2 18       		.uleb128 0x18
 11082 0bb3 B6040000 		.4byte	.LASF121
 11083 0bb7 01       		.byte	0x1
 11084 0bb8 4908     		.2byte	0x849
 11085 0bba 94000000 		.4byte	0x94
 11086 0bbe 02       		.uleb128 0x2
 11087 0bbf 91       		.byte	0x91
 11088 0bc0 70       		.sleb128 -16
 11089 0bc1 18       		.uleb128 0x18
 11090 0bc2 65080000 		.4byte	.LASF119
 11091 0bc6 01       		.byte	0x1
 11092 0bc7 4908     		.2byte	0x849
 11093 0bc9 94000000 		.4byte	0x94
 11094 0bcd 02       		.uleb128 0x2
 11095 0bce 91       		.byte	0x91
 11096 0bcf 6C       		.sleb128 -20
 11097 0bd0 00       		.byte	0
 11098 0bd1 1F       		.uleb128 0x1f
 11099 0bd2 12060000 		.4byte	.LASF122
 11100 0bd6 01       		.byte	0x1
 11101 0bd7 5508     		.2byte	0x855
 11102 0bd9 00000000 		.4byte	.LFB89
 11103 0bdd 68000000 		.4byte	.LFE89-.LFB89
 11104 0be1 01       		.uleb128 0x1
 11105 0be2 9C       		.byte	0x9c
 11106 0be3 150C0000 		.4byte	0xc15
 11107 0be7 18       		.uleb128 0x18
 11108 0be8 A5010000 		.4byte	.LASF123
 11109 0bec 01       		.byte	0x1
 11110 0bed 5508     		.2byte	0x855
 11111 0bef 94000000 		.4byte	0x94
 11112 0bf3 02       		.uleb128 0x2
 11113 0bf4 91       		.byte	0x91
 11114 0bf5 74       		.sleb128 -12
 11115 0bf6 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 244


 11116 0bf7 F2000000 		.4byte	.LASF124
 11117 0bfb 01       		.byte	0x1
 11118 0bfc 5508     		.2byte	0x855
 11119 0bfe 94000000 		.4byte	0x94
 11120 0c02 02       		.uleb128 0x2
 11121 0c03 91       		.byte	0x91
 11122 0c04 70       		.sleb128 -16
 11123 0c05 18       		.uleb128 0x18
 11124 0c06 65080000 		.4byte	.LASF119
 11125 0c0a 01       		.byte	0x1
 11126 0c0b 5508     		.2byte	0x855
 11127 0c0d 94000000 		.4byte	0x94
 11128 0c11 02       		.uleb128 0x2
 11129 0c12 91       		.byte	0x91
 11130 0c13 6C       		.sleb128 -20
 11131 0c14 00       		.byte	0
 11132 0c15 1F       		.uleb128 0x1f
 11133 0c16 2B0B0000 		.4byte	.LASF125
 11134 0c1a 01       		.byte	0x1
 11135 0c1b 6108     		.2byte	0x861
 11136 0c1d 00000000 		.4byte	.LFB90
 11137 0c21 6C000000 		.4byte	.LFE90-.LFB90
 11138 0c25 01       		.uleb128 0x1
 11139 0c26 9C       		.byte	0x9c
 11140 0c27 4A0C0000 		.4byte	0xc4a
 11141 0c2b 16       		.uleb128 0x16
 11142 0c2c 76616C00 		.ascii	"val\000"
 11143 0c30 01       		.byte	0x1
 11144 0c31 6108     		.2byte	0x861
 11145 0c33 94000000 		.4byte	0x94
 11146 0c37 02       		.uleb128 0x2
 11147 0c38 91       		.byte	0x91
 11148 0c39 74       		.sleb128 -12
 11149 0c3a 18       		.uleb128 0x18
 11150 0c3b 65080000 		.4byte	.LASF119
 11151 0c3f 01       		.byte	0x1
 11152 0c40 6108     		.2byte	0x861
 11153 0c42 94000000 		.4byte	0x94
 11154 0c46 02       		.uleb128 0x2
 11155 0c47 91       		.byte	0x91
 11156 0c48 70       		.sleb128 -16
 11157 0c49 00       		.byte	0
 11158 0c4a 14       		.uleb128 0x14
 11159 0c4b F1020000 		.4byte	.LASF126
 11160 0c4f 01       		.byte	0x1
 11161 0c50 6D08     		.2byte	0x86d
 11162 0c52 00000000 		.4byte	.LFB91
 11163 0c56 64000000 		.4byte	.LFE91-.LFB91
 11164 0c5a 01       		.uleb128 0x1
 11165 0c5b 9C       		.byte	0x9c
 11166 0c5c 1F       		.uleb128 0x1f
 11167 0c5d 13070000 		.4byte	.LASF127
 11168 0c61 01       		.byte	0x1
 11169 0c62 8508     		.2byte	0x885
 11170 0c64 00000000 		.4byte	.LFB92
 11171 0c68 EC0B0000 		.4byte	.LFE92-.LFB92
 11172 0c6c 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 245


 11173 0c6d 9C       		.byte	0x9c
 11174 0c6e A90E0000 		.4byte	0xea9
 11175 0c72 1D       		.uleb128 0x1d
 11176 0c73 16000000 		.4byte	.LBB39
 11177 0c77 C0050000 		.4byte	.LBE39-.LBB39
 11178 0c7b 230D0000 		.4byte	0xd23
 11179 0c7f 17       		.uleb128 0x17
 11180 0c80 FD010000 		.4byte	.LASF128
 11181 0c84 01       		.byte	0x1
 11182 0c85 9408     		.2byte	0x894
 11183 0c87 7C020000 		.4byte	0x27c
 11184 0c8b 03       		.uleb128 0x3
 11185 0c8c 91       		.byte	0x91
 11186 0c8d B07F     		.sleb128 -80
 11187 0c8f 19       		.uleb128 0x19
 11188 0c90 6900     		.ascii	"i\000"
 11189 0c92 01       		.byte	0x1
 11190 0c93 9508     		.2byte	0x895
 11191 0c95 CE000000 		.4byte	0xce
 11192 0c99 02       		.uleb128 0x2
 11193 0c9a 91       		.byte	0x91
 11194 0c9b 6C       		.sleb128 -20
 11195 0c9c 17       		.uleb128 0x17
 11196 0c9d 8E040000 		.4byte	.LASF129
 11197 0ca1 01       		.byte	0x1
 11198 0ca2 9608     		.2byte	0x896
 11199 0ca4 A2000000 		.4byte	0xa2
 11200 0ca8 02       		.uleb128 0x2
 11201 0ca9 91       		.byte	0x91
 11202 0caa 57       		.sleb128 -41
 11203 0cab 17       		.uleb128 0x17
 11204 0cac 24040000 		.4byte	.LASF130
 11205 0cb0 01       		.byte	0x1
 11206 0cb1 AA08     		.2byte	0x8aa
 11207 0cb3 B8000000 		.4byte	0xb8
 11208 0cb7 02       		.uleb128 0x2
 11209 0cb8 91       		.byte	0x91
 11210 0cb9 54       		.sleb128 -44
 11211 0cba 1D       		.uleb128 0x1d
 11212 0cbb B2000000 		.4byte	.LBB40
 11213 0cbf 76000000 		.4byte	.LBE40-.LBB40
 11214 0cc3 EC0C0000 		.4byte	0xcec
 11215 0cc7 19       		.uleb128 0x19
 11216 0cc8 6A00     		.ascii	"j\000"
 11217 0cca 01       		.byte	0x1
 11218 0ccb A008     		.2byte	0x8a0
 11219 0ccd 94000000 		.4byte	0x94
 11220 0cd1 02       		.uleb128 0x2
 11221 0cd2 91       		.byte	0x91
 11222 0cd3 68       		.sleb128 -24
 11223 0cd4 11       		.uleb128 0x11
 11224 0cd5 B8000000 		.4byte	.LBB41
 11225 0cd9 64000000 		.4byte	.LBE41-.LBB41
 11226 0cdd 19       		.uleb128 0x19
 11227 0cde 6B00     		.ascii	"k\000"
 11228 0ce0 01       		.byte	0x1
 11229 0ce1 A208     		.2byte	0x8a2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 246


 11230 0ce3 94000000 		.4byte	0x94
 11231 0ce7 02       		.uleb128 0x2
 11232 0ce8 91       		.byte	0x91
 11233 0ce9 64       		.sleb128 -28
 11234 0cea 00       		.byte	0
 11235 0ceb 00       		.byte	0
 11236 0cec 1D       		.uleb128 0x1d
 11237 0ced FA010000 		.4byte	.LBB42
 11238 0cf1 46000000 		.4byte	.LBE42-.LBB42
 11239 0cf5 090D0000 		.4byte	0xd09
 11240 0cf9 17       		.uleb128 0x17
 11241 0cfa E5010000 		.4byte	.LASF131
 11242 0cfe 01       		.byte	0x1
 11243 0cff C208     		.2byte	0x8c2
 11244 0d01 B8000000 		.4byte	0xb8
 11245 0d05 02       		.uleb128 0x2
 11246 0d06 91       		.byte	0x91
 11247 0d07 52       		.sleb128 -46
 11248 0d08 00       		.byte	0
 11249 0d09 11       		.uleb128 0x11
 11250 0d0a 66040000 		.4byte	.LBB43
 11251 0d0e 48000000 		.4byte	.LBE43-.LBB43
 11252 0d12 17       		.uleb128 0x17
 11253 0d13 E5010000 		.4byte	.LASF131
 11254 0d17 01       		.byte	0x1
 11255 0d18 FE08     		.2byte	0x8fe
 11256 0d1a AD000000 		.4byte	0xad
 11257 0d1e 02       		.uleb128 0x2
 11258 0d1f 91       		.byte	0x91
 11259 0d20 50       		.sleb128 -48
 11260 0d21 00       		.byte	0
 11261 0d22 00       		.byte	0
 11262 0d23 1D       		.uleb128 0x1d
 11263 0d24 E0050000 		.4byte	.LBB44
 11264 0d28 04030000 		.4byte	.LBE44-.LBB44
 11265 0d2c 0B0E0000 		.4byte	0xe0b
 11266 0d30 17       		.uleb128 0x17
 11267 0d31 FD010000 		.4byte	.LASF128
 11268 0d35 01       		.byte	0x1
 11269 0d36 5F09     		.2byte	0x95f
 11270 0d38 7C020000 		.4byte	0x27c
 11271 0d3c 03       		.uleb128 0x3
 11272 0d3d 91       		.byte	0x91
 11273 0d3e AC7F     		.sleb128 -84
 11274 0d40 19       		.uleb128 0x19
 11275 0d41 6900     		.ascii	"i\000"
 11276 0d43 01       		.byte	0x1
 11277 0d44 6009     		.2byte	0x960
 11278 0d46 CE000000 		.4byte	0xce
 11279 0d4a 02       		.uleb128 0x2
 11280 0d4b 91       		.byte	0x91
 11281 0d4c 60       		.sleb128 -32
 11282 0d4d 17       		.uleb128 0x17
 11283 0d4e 8E040000 		.4byte	.LASF129
 11284 0d52 01       		.byte	0x1
 11285 0d53 6109     		.2byte	0x961
 11286 0d55 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 247


 11287 0d59 02       		.uleb128 0x2
 11288 0d5a 91       		.byte	0x91
 11289 0d5b 4F       		.sleb128 -49
 11290 0d5c 1D       		.uleb128 0x1d
 11291 0d5d 14060000 		.4byte	.LBB45
 11292 0d61 82000000 		.4byte	.LBE45-.LBB45
 11293 0d65 790D0000 		.4byte	0xd79
 11294 0d69 17       		.uleb128 0x17
 11295 0d6a 370E0000 		.4byte	.LASF132
 11296 0d6e 01       		.byte	0x1
 11297 0d6f 6509     		.2byte	0x965
 11298 0d71 A2000000 		.4byte	0xa2
 11299 0d75 02       		.uleb128 0x2
 11300 0d76 91       		.byte	0x91
 11301 0d77 4E       		.sleb128 -50
 11302 0d78 00       		.byte	0
 11303 0d79 11       		.uleb128 0x11
 11304 0d7a AC060000 		.4byte	.LBB46
 11305 0d7e BA010000 		.4byte	.LBE46-.LBB46
 11306 0d82 17       		.uleb128 0x17
 11307 0d83 0E0F0000 		.4byte	.LASF133
 11308 0d87 01       		.byte	0x1
 11309 0d88 7009     		.2byte	0x970
 11310 0d8a CE000000 		.4byte	0xce
 11311 0d8e 02       		.uleb128 0x2
 11312 0d8f 91       		.byte	0x91
 11313 0d90 5C       		.sleb128 -36
 11314 0d91 11       		.uleb128 0x11
 11315 0d92 B2060000 		.4byte	.LBB47
 11316 0d96 A6010000 		.4byte	.LBE47-.LBB47
 11317 0d9a 17       		.uleb128 0x17
 11318 0d9b 3F040000 		.4byte	.LASF79
 11319 0d9f 01       		.byte	0x1
 11320 0da0 7209     		.2byte	0x972
 11321 0da2 B8000000 		.4byte	0xb8
 11322 0da6 02       		.uleb128 0x2
 11323 0da7 91       		.byte	0x91
 11324 0da8 4C       		.sleb128 -52
 11325 0da9 11       		.uleb128 0x11
 11326 0daa C0060000 		.4byte	.LBB48
 11327 0dae 98010000 		.4byte	.LBE48-.LBB48
 11328 0db2 17       		.uleb128 0x17
 11329 0db3 DE050000 		.4byte	.LASF134
 11330 0db7 01       		.byte	0x1
 11331 0db8 7309     		.2byte	0x973
 11332 0dba CE000000 		.4byte	0xce
 11333 0dbe 02       		.uleb128 0x2
 11334 0dbf 91       		.byte	0x91
 11335 0dc0 58       		.sleb128 -40
 11336 0dc1 11       		.uleb128 0x11
 11337 0dc2 1C070000 		.4byte	.LBB49
 11338 0dc6 2E010000 		.4byte	.LBE49-.LBB49
 11339 0dca 17       		.uleb128 0x17
 11340 0dcb F2030000 		.4byte	.LASF135
 11341 0dcf 01       		.byte	0x1
 11342 0dd0 7D09     		.2byte	0x97d
 11343 0dd2 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 248


 11344 0dd6 02       		.uleb128 0x2
 11345 0dd7 91       		.byte	0x91
 11346 0dd8 4A       		.sleb128 -54
 11347 0dd9 17       		.uleb128 0x17
 11348 0dda FC0C0000 		.4byte	.LASF136
 11349 0dde 01       		.byte	0x1
 11350 0ddf 7E09     		.2byte	0x97e
 11351 0de1 A2000000 		.4byte	0xa2
 11352 0de5 02       		.uleb128 0x2
 11353 0de6 91       		.byte	0x91
 11354 0de7 49       		.sleb128 -55
 11355 0de8 17       		.uleb128 0x17
 11356 0de9 21010000 		.4byte	.LASF137
 11357 0ded 01       		.byte	0x1
 11358 0dee 7F09     		.2byte	0x97f
 11359 0df0 A2000000 		.4byte	0xa2
 11360 0df4 02       		.uleb128 0x2
 11361 0df5 91       		.byte	0x91
 11362 0df6 48       		.sleb128 -56
 11363 0df7 17       		.uleb128 0x17
 11364 0df8 77030000 		.4byte	.LASF80
 11365 0dfc 01       		.byte	0x1
 11366 0dfd 8209     		.2byte	0x982
 11367 0dff B8000000 		.4byte	0xb8
 11368 0e03 02       		.uleb128 0x2
 11369 0e04 91       		.byte	0x91
 11370 0e05 46       		.sleb128 -58
 11371 0e06 00       		.byte	0
 11372 0e07 00       		.byte	0
 11373 0e08 00       		.byte	0
 11374 0e09 00       		.byte	0
 11375 0e0a 00       		.byte	0
 11376 0e0b 1D       		.uleb128 0x1d
 11377 0e0c EE080000 		.4byte	.LBB50
 11378 0e10 14010000 		.4byte	.LBE50-.LBB50
 11379 0e14 560E0000 		.4byte	0xe56
 11380 0e18 17       		.uleb128 0x17
 11381 0e19 FD010000 		.4byte	.LASF128
 11382 0e1d 01       		.byte	0x1
 11383 0e1e A609     		.2byte	0x9a6
 11384 0e20 7C020000 		.4byte	0x27c
 11385 0e24 03       		.uleb128 0x3
 11386 0e25 91       		.byte	0x91
 11387 0e26 A87F     		.sleb128 -88
 11388 0e28 19       		.uleb128 0x19
 11389 0e29 6900     		.ascii	"i\000"
 11390 0e2b 01       		.byte	0x1
 11391 0e2c A709     		.2byte	0x9a7
 11392 0e2e CE000000 		.4byte	0xce
 11393 0e32 02       		.uleb128 0x2
 11394 0e33 91       		.byte	0x91
 11395 0e34 40       		.sleb128 -64
 11396 0e35 17       		.uleb128 0x17
 11397 0e36 52050000 		.4byte	.LASF138
 11398 0e3a 01       		.byte	0x1
 11399 0e3b B009     		.2byte	0x9b0
 11400 0e3d B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 249


 11401 0e41 03       		.uleb128 0x3
 11402 0e42 91       		.byte	0x91
 11403 0e43 BE7F     		.sleb128 -66
 11404 0e45 17       		.uleb128 0x17
 11405 0e46 E5010000 		.4byte	.LASF131
 11406 0e4a 01       		.byte	0x1
 11407 0e4b BE09     		.2byte	0x9be
 11408 0e4d B8000000 		.4byte	0xb8
 11409 0e51 03       		.uleb128 0x3
 11410 0e52 91       		.byte	0x91
 11411 0e53 BC7F     		.sleb128 -68
 11412 0e55 00       		.byte	0
 11413 0e56 11       		.uleb128 0x11
 11414 0e57 0E0A0000 		.4byte	.LBB51
 11415 0e5b AA010000 		.4byte	.LBE51-.LBB51
 11416 0e5f 17       		.uleb128 0x17
 11417 0e60 FD010000 		.4byte	.LASF128
 11418 0e64 01       		.byte	0x1
 11419 0e65 C909     		.2byte	0x9c9
 11420 0e67 7C020000 		.4byte	0x27c
 11421 0e6b 03       		.uleb128 0x3
 11422 0e6c 91       		.byte	0x91
 11423 0e6d A47F     		.sleb128 -92
 11424 0e6f 19       		.uleb128 0x19
 11425 0e70 6900     		.ascii	"i\000"
 11426 0e72 01       		.byte	0x1
 11427 0e73 CA09     		.2byte	0x9ca
 11428 0e75 CE000000 		.4byte	0xce
 11429 0e79 03       		.uleb128 0x3
 11430 0e7a 91       		.byte	0x91
 11431 0e7b B87F     		.sleb128 -72
 11432 0e7d 17       		.uleb128 0x17
 11433 0e7e 52050000 		.4byte	.LASF138
 11434 0e82 01       		.byte	0x1
 11435 0e83 D309     		.2byte	0x9d3
 11436 0e85 B8000000 		.4byte	0xb8
 11437 0e89 03       		.uleb128 0x3
 11438 0e8a 91       		.byte	0x91
 11439 0e8b B67F     		.sleb128 -74
 11440 0e8d 11       		.uleb128 0x11
 11441 0e8e 360B0000 		.4byte	.LBB52
 11442 0e92 2C000000 		.4byte	.LBE52-.LBB52
 11443 0e96 17       		.uleb128 0x17
 11444 0e97 E5010000 		.4byte	.LASF131
 11445 0e9b 01       		.byte	0x1
 11446 0e9c EB09     		.2byte	0x9eb
 11447 0e9e AD000000 		.4byte	0xad
 11448 0ea2 03       		.uleb128 0x3
 11449 0ea3 91       		.byte	0x91
 11450 0ea4 B47F     		.sleb128 -76
 11451 0ea6 00       		.byte	0
 11452 0ea7 00       		.byte	0
 11453 0ea8 00       		.byte	0
 11454 0ea9 1F       		.uleb128 0x1f
 11455 0eaa A4030000 		.4byte	.LASF139
 11456 0eae 01       		.byte	0x1
 11457 0eaf 030A     		.2byte	0xa03
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 250


 11458 0eb1 00000000 		.4byte	.LFB93
 11459 0eb5 50010000 		.4byte	.LFE93-.LFB93
 11460 0eb9 01       		.uleb128 0x1
 11461 0eba 9C       		.byte	0x9c
 11462 0ebb F50E0000 		.4byte	0xef5
 11463 0ebf 18       		.uleb128 0x18
 11464 0ec0 6E0B0000 		.4byte	.LASF140
 11465 0ec4 01       		.byte	0x1
 11466 0ec5 030A     		.2byte	0xa03
 11467 0ec7 D9000000 		.4byte	0xd9
 11468 0ecb 02       		.uleb128 0x2
 11469 0ecc 91       		.byte	0x91
 11470 0ecd 6F       		.sleb128 -17
 11471 0ece 18       		.uleb128 0x18
 11472 0ecf BF0C0000 		.4byte	.LASF141
 11473 0ed3 01       		.byte	0x1
 11474 0ed4 030A     		.2byte	0xa03
 11475 0ed6 F50E0000 		.4byte	0xef5
 11476 0eda 02       		.uleb128 0x2
 11477 0edb 91       		.byte	0x91
 11478 0edc 68       		.sleb128 -24
 11479 0edd 11       		.uleb128 0x11
 11480 0ede 48000000 		.4byte	.LBB53
 11481 0ee2 54000000 		.4byte	.LBE53-.LBB53
 11482 0ee6 19       		.uleb128 0x19
 11483 0ee7 6900     		.ascii	"i\000"
 11484 0ee9 01       		.byte	0x1
 11485 0eea 0F0A     		.2byte	0xa0f
 11486 0eec 94000000 		.4byte	0x94
 11487 0ef0 02       		.uleb128 0x2
 11488 0ef1 91       		.byte	0x91
 11489 0ef2 74       		.sleb128 -12
 11490 0ef3 00       		.byte	0
 11491 0ef4 00       		.byte	0
 11492 0ef5 20       		.uleb128 0x20
 11493 0ef6 04       		.byte	0x4
 11494 0ef7 D9000000 		.4byte	0xd9
 11495 0efb 07       		.uleb128 0x7
 11496 0efc D9000000 		.4byte	0xd9
 11497 0f00 0B0F0000 		.4byte	0xf0b
 11498 0f04 08       		.uleb128 0x8
 11499 0f05 36010000 		.4byte	0x136
 11500 0f09 01       		.byte	0x1
 11501 0f0a 00       		.byte	0
 11502 0f0b 21       		.uleb128 0x21
 11503 0f0c F2040000 		.4byte	.LASF142
 11504 0f10 01       		.byte	0x1
 11505 0f11 F1       		.byte	0xf1
 11506 0f12 FB0E0000 		.4byte	0xefb
 11507 0f16 05       		.uleb128 0x5
 11508 0f17 03       		.byte	0x3
 11509 0f18 64000000 		.4byte	eepromArray
 11510 0f1c 22       		.uleb128 0x22
 11511 0f1d 830F0000 		.4byte	.LASF143
 11512 0f21 08       		.byte	0x8
 11513 0f22 F3       		.byte	0xf3
 11514 0f23 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 251


 11515 0f27 22       		.uleb128 0x22
 11516 0f28 3B100000 		.4byte	.LASF144
 11517 0f2c 08       		.byte	0x8
 11518 0f2d F9       		.byte	0xf9
 11519 0f2e 2A010000 		.4byte	0x12a
 11520 0f32 07       		.uleb128 0x7
 11521 0f33 D9000000 		.4byte	0xd9
 11522 0f37 420F0000 		.4byte	0xf42
 11523 0f3b 08       		.uleb128 0x8
 11524 0f3c 36010000 		.4byte	0x136
 11525 0f40 3F       		.byte	0x3f
 11526 0f41 00       		.byte	0
 11527 0f42 22       		.uleb128 0x22
 11528 0f43 F7080000 		.4byte	.LASF145
 11529 0f47 08       		.byte	0x8
 11530 0f48 FA       		.byte	0xfa
 11531 0f49 320F0000 		.4byte	0xf32
 11532 0f4d 22       		.uleb128 0x22
 11533 0f4e 6A050000 		.4byte	.LASF146
 11534 0f52 08       		.byte	0x8
 11535 0f53 FE       		.byte	0xfe
 11536 0f54 2A010000 		.4byte	0x12a
 11537 0f58 22       		.uleb128 0x22
 11538 0f59 C80F0000 		.4byte	.LASF147
 11539 0f5d 08       		.byte	0x8
 11540 0f5e FF       		.byte	0xff
 11541 0f5f 320F0000 		.4byte	0xf32
 11542 0f63 22       		.uleb128 0x22
 11543 0f64 A1000000 		.4byte	.LASF148
 11544 0f68 09       		.byte	0x9
 11545 0f69 82       		.byte	0x82
 11546 0f6a BF010000 		.4byte	0x1bf
 11547 0f6e 07       		.uleb128 0x7
 11548 0f6f 7F0F0000 		.4byte	0xf7f
 11549 0f73 7F0F0000 		.4byte	0xf7f
 11550 0f77 23       		.uleb128 0x23
 11551 0f78 36010000 		.4byte	0x136
 11552 0f7c FF03     		.2byte	0x3ff
 11553 0f7e 00       		.byte	0
 11554 0f7f 24       		.uleb128 0x24
 11555 0f80 A2000000 		.4byte	0xa2
 11556 0f84 25       		.uleb128 0x25
 11557 0f85 0D080000 		.4byte	.LASF149
 11558 0f89 01       		.byte	0x1
 11559 0f8a FE       		.byte	0xfe
 11560 0f8b 950F0000 		.4byte	0xf95
 11561 0f8f 05       		.uleb128 0x5
 11562 0f90 03       		.byte	0x3
 11563 0f91 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 11564 0f95 24       		.uleb128 0x24
 11565 0f96 6E0F0000 		.4byte	0xf6e
 11566 0f9a 22       		.uleb128 0x22
 11567 0f9b 5B060000 		.4byte	.LASF150
 11568 0f9f 0A       		.byte	0xa
 11569 0fa0 F9       		.byte	0xf9
 11570 0fa1 D9000000 		.4byte	0xd9
 11571 0fa5 26       		.uleb128 0x26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 252


 11572 0fa6 AE0A0000 		.4byte	.LASF151
 11573 0faa 0B       		.byte	0xb
 11574 0fab 1207     		.2byte	0x712
 11575 0fad B10F0000 		.4byte	0xfb1
 11576 0fb1 06       		.uleb128 0x6
 11577 0fb2 C3000000 		.4byte	0xc3
 11578 0fb6 07       		.uleb128 0x7
 11579 0fb7 03020000 		.4byte	0x203
 11580 0fbb C60F0000 		.4byte	0xfc6
 11581 0fbf 08       		.uleb128 0x8
 11582 0fc0 36010000 		.4byte	0x136
 11583 0fc4 FF       		.byte	0xff
 11584 0fc5 00       		.byte	0
 11585 0fc6 27       		.uleb128 0x27
 11586 0fc7 04010000 		.4byte	.LASF152
 11587 0fcb 01       		.byte	0x1
 11588 0fcc 6601     		.2byte	0x166
 11589 0fce D80F0000 		.4byte	0xfd8
 11590 0fd2 05       		.uleb128 0x5
 11591 0fd3 03       		.byte	0x3
 11592 0fd4 00000000 		.4byte	I2Cbuff1
 11593 0fd8 06       		.uleb128 0x6
 11594 0fd9 B60F0000 		.4byte	0xfb6
 11595 0fdd 07       		.uleb128 0x7
 11596 0fde A2000000 		.4byte	0xa2
 11597 0fe2 EE0F0000 		.4byte	0xfee
 11598 0fe6 23       		.uleb128 0x23
 11599 0fe7 36010000 		.4byte	0x136
 11600 0feb FF07     		.2byte	0x7ff
 11601 0fed 00       		.byte	0
 11602 0fee 25       		.uleb128 0x25
 11603 0fef 120E0000 		.4byte	.LASF153
 11604 0ff3 01       		.byte	0x1
 11605 0ff4 18       		.byte	0x18
 11606 0ff5 DD0F0000 		.4byte	0xfdd
 11607 0ff9 05       		.uleb128 0x5
 11608 0ffa 03       		.byte	0x3
 11609 0ffb 00000000 		.4byte	sysexBuffer
 11610 0fff 25       		.uleb128 0x25
 11611 1000 62030000 		.4byte	.LASF154
 11612 1004 01       		.byte	0x1
 11613 1005 19       		.byte	0x19
 11614 1006 CE000000 		.4byte	0xce
 11615 100a 05       		.uleb128 0x5
 11616 100b 03       		.byte	0x3
 11617 100c 00000000 		.4byte	sysexPointer
 11618 1010 25       		.uleb128 0x25
 11619 1011 5F0B0000 		.4byte	.LASF155
 11620 1015 01       		.byte	0x1
 11621 1016 1A       		.byte	0x1a
 11622 1017 A2000000 		.4byte	0xa2
 11623 101b 05       		.uleb128 0x5
 11624 101c 03       		.byte	0x3
 11625 101d 00000000 		.4byte	receivingSysex
 11626 1021 25       		.uleb128 0x25
 11627 1022 74060000 		.4byte	.LASF156
 11628 1026 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 253


 11629 1027 1B       		.byte	0x1b
 11630 1028 A2000000 		.4byte	0xa2
 11631 102c 05       		.uleb128 0x5
 11632 102d 03       		.byte	0x3
 11633 102e 00000000 		.4byte	parsingSysex
 11634 1032 07       		.uleb128 0x7
 11635 1033 03020000 		.4byte	0x203
 11636 1037 43100000 		.4byte	0x1043
 11637 103b 23       		.uleb128 0x23
 11638 103c 36010000 		.4byte	0x136
 11639 1040 FF07     		.2byte	0x7ff
 11640 1042 00       		.byte	0
 11641 1043 25       		.uleb128 0x25
 11642 1044 13000000 		.4byte	.LASF157
 11643 1048 01       		.byte	0x1
 11644 1049 1C       		.byte	0x1c
 11645 104a 54100000 		.4byte	0x1054
 11646 104e 05       		.uleb128 0x5
 11647 104f 03       		.byte	0x3
 11648 1050 00000000 		.4byte	presetArray
 11649 1054 06       		.uleb128 0x6
 11650 1055 32100000 		.4byte	0x1032
 11651 1059 25       		.uleb128 0x25
 11652 105a 90020000 		.4byte	.LASF158
 11653 105e 01       		.byte	0x1
 11654 105f 1D       		.byte	0x1d
 11655 1060 A2000000 		.4byte	0xa2
 11656 1064 05       		.uleb128 0x5
 11657 1065 03       		.byte	0x3
 11658 1066 00000000 		.4byte	presetNumberToWrite
 11659 106a 25       		.uleb128 0x25
 11660 106b 7C0D0000 		.4byte	.LASF159
 11661 106f 01       		.byte	0x1
 11662 1070 1E       		.byte	0x1e
 11663 1071 A2000000 		.4byte	0xa2
 11664 1075 05       		.uleb128 0x5
 11665 1076 03       		.byte	0x3
 11666 1077 00000000 		.4byte	copedentNumberToWrite
 11667 107b 25       		.uleb128 0x25
 11668 107c 35020000 		.4byte	.LASF160
 11669 1080 01       		.byte	0x1
 11670 1081 1F       		.byte	0x1f
 11671 1082 A2000000 		.4byte	0xa2
 11672 1086 05       		.uleb128 0x5
 11673 1087 03       		.byte	0x3
 11674 1088 00000000 		.4byte	sendMessageEnd
 11675 108c 25       		.uleb128 0x25
 11676 108d FC0D0000 		.4byte	.LASF161
 11677 1091 01       		.byte	0x1
 11678 1092 21       		.byte	0x21
 11679 1093 A2000000 		.4byte	0xa2
 11680 1097 05       		.uleb128 0x5
 11681 1098 03       		.byte	0x3
 11682 1099 00000000 		.4byte	sendSingleParamUpdate
 11683 109d 25       		.uleb128 0x25
 11684 109e 950E0000 		.4byte	.LASF162
 11685 10a2 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 254


 11686 10a3 22       		.byte	0x22
 11687 10a4 A2000000 		.4byte	0xa2
 11688 10a8 05       		.uleb128 0x5
 11689 10a9 03       		.byte	0x3
 11690 10aa 00000000 		.4byte	singleParamToUpdateHigh
 11691 10ae 25       		.uleb128 0x25
 11692 10af BB0A0000 		.4byte	.LASF163
 11693 10b3 01       		.byte	0x1
 11694 10b4 23       		.byte	0x23
 11695 10b5 A2000000 		.4byte	0xa2
 11696 10b9 05       		.uleb128 0x5
 11697 10ba 03       		.byte	0x3
 11698 10bb 00000000 		.4byte	singleParamToUpdateLow
 11699 10bf 25       		.uleb128 0x25
 11700 10c0 990A0000 		.4byte	.LASF164
 11701 10c4 01       		.byte	0x1
 11702 10c5 24       		.byte	0x24
 11703 10c6 A2000000 		.4byte	0xa2
 11704 10ca 05       		.uleb128 0x5
 11705 10cb 03       		.byte	0x3
 11706 10cc 00000000 		.4byte	singleParamValueHigh
 11707 10d0 25       		.uleb128 0x25
 11708 10d1 FE050000 		.4byte	.LASF165
 11709 10d5 01       		.byte	0x1
 11710 10d6 25       		.byte	0x25
 11711 10d7 A2000000 		.4byte	0xa2
 11712 10db 05       		.uleb128 0x5
 11713 10dc 03       		.byte	0x3
 11714 10dd 00000000 		.4byte	singleParamValueLow
 11715 10e1 25       		.uleb128 0x25
 11716 10e2 470D0000 		.4byte	.LASF166
 11717 10e6 01       		.byte	0x1
 11718 10e7 27       		.byte	0x27
 11719 10e8 A2000000 		.4byte	0xa2
 11720 10ec 05       		.uleb128 0x5
 11721 10ed 03       		.byte	0x3
 11722 10ee 00000000 		.4byte	sendMappingChangeUpdate
 11723 10f2 25       		.uleb128 0x25
 11724 10f3 00000000 		.4byte	.LASF167
 11725 10f7 01       		.byte	0x1
 11726 10f8 32       		.byte	0x32
 11727 10f9 A2000000 		.4byte	0xa2
 11728 10fd 05       		.uleb128 0x5
 11729 10fe 03       		.byte	0x3
 11730 10ff 00000000 		.4byte	presetArraySection
 11731 1103 25       		.uleb128 0x25
 11732 1104 E9090000 		.4byte	.LASF168
 11733 1108 01       		.byte	0x1
 11734 1109 34       		.byte	0x34
 11735 110a B8000000 		.4byte	0xb8
 11736 110e 05       		.uleb128 0x5
 11737 110f 03       		.byte	0x3
 11738 1110 00000000 		.4byte	messageArraySendCount
 11739 1114 25       		.uleb128 0x25
 11740 1115 B70E0000 		.4byte	.LASF169
 11741 1119 01       		.byte	0x1
 11742 111a 35       		.byte	0x35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 255


 11743 111b B8000000 		.4byte	0xb8
 11744 111f 05       		.uleb128 0x5
 11745 1120 03       		.byte	0x3
 11746 1121 00000000 		.4byte	messageArraySize
 11747 1125 25       		.uleb128 0x25
 11748 1126 E9060000 		.4byte	.LASF170
 11749 112a 01       		.byte	0x1
 11750 112b 37       		.byte	0x37
 11751 112c A2000000 		.4byte	0xa2
 11752 1130 05       		.uleb128 0x5
 11753 1131 03       		.byte	0x3
 11754 1132 00000000 		.4byte	sysexMessageInProgress
 11755 1136 25       		.uleb128 0x25
 11756 1137 1E0E0000 		.4byte	.LASF171
 11757 113b 01       		.byte	0x1
 11758 113c 39       		.byte	0x39
 11759 113d A2000000 		.4byte	0xa2
 11760 1141 05       		.uleb128 0x5
 11761 1142 03       		.byte	0x3
 11762 1143 00000000 		.4byte	bufCount
 11763 1147 25       		.uleb128 0x25
 11764 1148 33000000 		.4byte	.LASF172
 11765 114c 01       		.byte	0x1
 11766 114d 3A       		.byte	0x3a
 11767 114e 03020000 		.4byte	0x203
 11768 1152 05       		.uleb128 0x5
 11769 1153 03       		.byte	0x3
 11770 1154 00000000 		.4byte	sendingMessage
 11771 1158 25       		.uleb128 0x25
 11772 1159 22030000 		.4byte	.LASF173
 11773 115d 01       		.byte	0x1
 11774 115e 3B       		.byte	0x3b
 11775 115f 03020000 		.4byte	0x203
 11776 1163 05       		.uleb128 0x5
 11777 1164 03       		.byte	0x3
 11778 1165 00000000 		.4byte	sendKnobs
 11779 1169 25       		.uleb128 0x25
 11780 116a 6E020000 		.4byte	.LASF174
 11781 116e 01       		.byte	0x1
 11782 116f 3C       		.byte	0x3c
 11783 1170 CE000000 		.4byte	0xce
 11784 1174 05       		.uleb128 0x5
 11785 1175 03       		.byte	0x3
 11786 1176 00000000 		.4byte	currentFloat
 11787 117a 25       		.uleb128 0x25
 11788 117b E9030000 		.4byte	.LASF175
 11789 117f 01       		.byte	0x1
 11790 1180 3D       		.byte	0x3d
 11791 1181 CE000000 		.4byte	0xce
 11792 1185 05       		.uleb128 0x5
 11793 1186 03       		.byte	0x3
 11794 1187 00000000 		.4byte	mapCount
 11795 118b 25       		.uleb128 0x25
 11796 118c 94010000 		.4byte	.LASF176
 11797 1190 01       		.byte	0x1
 11798 1191 3F       		.byte	0x3f
 11799 1192 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 256


 11800 1196 05       		.uleb128 0x5
 11801 1197 03       		.byte	0x3
 11802 1198 00000000 		.4byte	valsCount
 11803 119c 25       		.uleb128 0x25
 11804 119d 72040000 		.4byte	.LASF177
 11805 11a1 01       		.byte	0x1
 11806 11a2 40       		.byte	0x40
 11807 11a3 B8000000 		.4byte	0xb8
 11808 11a7 05       		.uleb128 0x5
 11809 11a8 03       		.byte	0x3
 11810 11a9 00000000 		.4byte	mapCountExpectation
 11811 11ad 25       		.uleb128 0x25
 11812 11ae F8000000 		.4byte	.LASF178
 11813 11b2 01       		.byte	0x1
 11814 11b3 41       		.byte	0x41
 11815 11b4 B8000000 		.4byte	0xb8
 11816 11b8 05       		.uleb128 0x5
 11817 11b9 03       		.byte	0x3
 11818 11ba 00000000 		.4byte	numMappings
 11819 11be 25       		.uleb128 0x25
 11820 11bf CF0D0000 		.4byte	.LASF179
 11821 11c3 01       		.byte	0x1
 11822 11c4 42       		.byte	0x42
 11823 11c5 03020000 		.4byte	0x203
 11824 11c9 05       		.uleb128 0x5
 11825 11ca 03       		.byte	0x3
 11826 11cb 00000000 		.4byte	parseThatMF
 11827 11cf 25       		.uleb128 0x25
 11828 11d0 1B040000 		.4byte	.LASF180
 11829 11d4 01       		.byte	0x1
 11830 11d5 43       		.byte	0x43
 11831 11d6 E0110000 		.4byte	0x11e0
 11832 11da 05       		.uleb128 0x5
 11833 11db 03       		.byte	0x3
 11834 11dc 00000000 		.4byte	valCheck
 11835 11e0 06       		.uleb128 0x6
 11836 11e1 FD000000 		.4byte	0xfd
 11837 11e5 25       		.uleb128 0x25
 11838 11e6 050D0000 		.4byte	.LASF181
 11839 11ea 01       		.byte	0x1
 11840 11eb 44       		.byte	0x44
 11841 11ec E0110000 		.4byte	0x11e0
 11842 11f0 05       		.uleb128 0x5
 11843 11f1 03       		.byte	0x3
 11844 11f2 00000000 		.4byte	testVal
 11845 11f6 25       		.uleb128 0x25
 11846 11f7 9D080000 		.4byte	.LASF182
 11847 11fb 01       		.byte	0x1
 11848 11fc 46       		.byte	0x46
 11849 11fd 94000000 		.4byte	0x94
 11850 1201 05       		.uleb128 0x5
 11851 1202 03       		.byte	0x3
 11852 1203 00000000 		.4byte	numStrings
 11853 1207 25       		.uleb128 0x25
 11854 1208 B30D0000 		.4byte	.LASF183
 11855 120c 01       		.byte	0x1
 11856 120d 4C       		.byte	0x4c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 257


 11857 120e 2A010000 		.4byte	0x12a
 11858 1212 05       		.uleb128 0x5
 11859 1213 03       		.byte	0x3
 11860 1214 00000000 		.4byte	usbActivityCounter
 11861 1218 25       		.uleb128 0x25
 11862 1219 BF0C0000 		.4byte	.LASF141
 11863 121d 01       		.byte	0x1
 11864 121e 4D       		.byte	0x4d
 11865 121f 3D010000 		.4byte	0x13d
 11866 1223 05       		.uleb128 0x5
 11867 1224 03       		.byte	0x3
 11868 1225 00000000 		.4byte	midiMsg
 11869 1229 25       		.uleb128 0x25
 11870 122a 7F100000 		.4byte	.LASF184
 11871 122e 01       		.byte	0x1
 11872 122f 4E       		.byte	0x4e
 11873 1230 A2000000 		.4byte	0xa2
 11874 1234 05       		.uleb128 0x5
 11875 1235 03       		.byte	0x3
 11876 1236 00000000 		.4byte	currentVBUS
 11877 123a 25       		.uleb128 0x25
 11878 123b 70100000 		.4byte	.LASF185
 11879 123f 01       		.byte	0x1
 11880 1240 4F       		.byte	0x4f
 11881 1241 A2000000 		.4byte	0xa2
 11882 1245 05       		.uleb128 0x5
 11883 1246 03       		.byte	0x3
 11884 1247 00000000 		.4byte	prevVBUS
 11885 124b 25       		.uleb128 0x25
 11886 124c F10D0000 		.4byte	.LASF186
 11887 1250 01       		.byte	0x1
 11888 1251 50       		.byte	0x50
 11889 1252 03020000 		.4byte	0x203
 11890 1256 05       		.uleb128 0x5
 11891 1257 03       		.byte	0x3
 11892 1258 00000000 		.4byte	USB_active
 11893 125c 25       		.uleb128 0x25
 11894 125d DA090000 		.4byte	.LASF187
 11895 1261 01       		.byte	0x1
 11896 1262 51       		.byte	0x51
 11897 1263 03020000 		.4byte	0x203
 11898 1267 05       		.uleb128 0x5
 11899 1268 03       		.byte	0x3
 11900 1269 00000000 		.4byte	USB_check_flag
 11901 126d 07       		.uleb128 0x7
 11902 126e A2000000 		.4byte	0xa2
 11903 1272 7D120000 		.4byte	0x127d
 11904 1276 08       		.uleb128 0x8
 11905 1277 36010000 		.4byte	0x136
 11906 127b 05       		.byte	0x5
 11907 127c 00       		.byte	0
 11908 127d 25       		.uleb128 0x25
 11909 127e 17100000 		.4byte	.LASF188
 11910 1282 01       		.byte	0x1
 11911 1283 53       		.byte	0x53
 11912 1284 6D120000 		.4byte	0x126d
 11913 1288 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 258


 11914 1289 03       		.byte	0x3
 11915 128a 00000000 		.4byte	mappingArray
 11916 128e 07       		.uleb128 0x7
 11917 128f D9000000 		.4byte	0xd9
 11918 1293 9E120000 		.4byte	0x129e
 11919 1297 08       		.uleb128 0x8
 11920 1298 36010000 		.4byte	0x136
 11921 129c 1F       		.byte	0x1f
 11922 129d 00       		.byte	0
 11923 129e 25       		.uleb128 0x25
 11924 129f AD0F0000 		.4byte	.LASF189
 11925 12a3 01       		.byte	0x1
 11926 12a4 55       		.byte	0x55
 11927 12a5 8E120000 		.4byte	0x128e
 11928 12a9 05       		.uleb128 0x5
 11929 12aa 03       		.byte	0x3
 11930 12ab 00000000 		.4byte	inBuffer
 11931 12af 25       		.uleb128 0x25
 11932 12b0 50110000 		.4byte	.LASF190
 11933 12b4 01       		.byte	0x1
 11934 12b5 57       		.byte	0x57
 11935 12b6 8E120000 		.4byte	0x128e
 11936 12ba 05       		.uleb128 0x5
 11937 12bb 03       		.byte	0x3
 11938 12bc 00000000 		.4byte	myArray
 11939 12c0 25       		.uleb128 0x25
 11940 12c1 EE100000 		.4byte	.LASF191
 11941 12c5 01       		.byte	0x1
 11942 12c6 58       		.byte	0x58
 11943 12c7 FB0E0000 		.4byte	0xefb
 11944 12cb 05       		.uleb128 0x5
 11945 12cc 03       		.byte	0x3
 11946 12cd 00000000 		.4byte	myInputArray
 11947 12d1 07       		.uleb128 0x7
 11948 12d2 C3000000 		.4byte	0xc3
 11949 12d6 E1120000 		.4byte	0x12e1
 11950 12da 08       		.uleb128 0x8
 11951 12db 36010000 		.4byte	0x136
 11952 12df 01       		.byte	0x1
 11953 12e0 00       		.byte	0
 11954 12e1 25       		.uleb128 0x25
 11955 12e2 51080000 		.4byte	.LASF192
 11956 12e6 01       		.byte	0x1
 11957 12e7 59       		.byte	0x59
 11958 12e8 D1120000 		.4byte	0x12d1
 11959 12ec 05       		.uleb128 0x5
 11960 12ed 03       		.byte	0x3
 11961 12ee 00000000 		.4byte	linearPotValue32Bit
 11962 12f2 28       		.uleb128 0x28
 11963 12f3 6900     		.ascii	"i\000"
 11964 12f5 01       		.byte	0x1
 11965 12f6 5A       		.byte	0x5a
 11966 12f7 A2000000 		.4byte	0xa2
 11967 12fb 05       		.uleb128 0x5
 11968 12fc 03       		.byte	0x3
 11969 12fd 00000000 		.4byte	i
 11970 1301 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 259


 11971 1302 180A0000 		.4byte	.LASF193
 11972 1306 01       		.byte	0x1
 11973 1307 5B       		.byte	0x5b
 11974 1308 A2000000 		.4byte	0xa2
 11975 130c 05       		.uleb128 0x5
 11976 130d 03       		.byte	0x3
 11977 130e 00000000 		.4byte	counter
 11978 1312 07       		.uleb128 0x7
 11979 1313 A2000000 		.4byte	0xa2
 11980 1317 22130000 		.4byte	0x1322
 11981 131b 08       		.uleb128 0x8
 11982 131c 36010000 		.4byte	0x136
 11983 1320 1F       		.byte	0x1f
 11984 1321 00       		.byte	0
 11985 1322 25       		.uleb128 0x25
 11986 1323 81060000 		.4byte	.LASF194
 11987 1327 01       		.byte	0x1
 11988 1328 5C       		.byte	0x5c
 11989 1329 12130000 		.4byte	0x1312
 11990 132d 05       		.uleb128 0x5
 11991 132e 03       		.byte	0x3
 11992 132f 00000000 		.4byte	returnedData
 11993 1333 25       		.uleb128 0x25
 11994 1334 9E010000 		.4byte	.LASF195
 11995 1338 01       		.byte	0x1
 11996 1339 5D       		.byte	0x5d
 11997 133a C3000000 		.4byte	0xc3
 11998 133e 05       		.uleb128 0x5
 11999 133f 03       		.byte	0x3
 12000 1340 00000000 		.4byte	temper
 12001 1344 07       		.uleb128 0x7
 12002 1345 94000000 		.4byte	0x94
 12003 1349 54130000 		.4byte	0x1354
 12004 134d 08       		.uleb128 0x8
 12005 134e 36010000 		.4byte	0x136
 12006 1352 0A       		.byte	0xa
 12007 1353 00       		.byte	0
 12008 1354 25       		.uleb128 0x25
 12009 1355 600F0000 		.4byte	.LASF196
 12010 1359 01       		.byte	0x1
 12011 135a 5E       		.byte	0x5e
 12012 135b 44130000 		.4byte	0x1344
 12013 135f 05       		.uleb128 0x5
 12014 1360 03       		.byte	0x3
 12015 1361 00000000 		.4byte	previousButtons
 12016 1365 25       		.uleb128 0x25
 12017 1366 2F010000 		.4byte	.LASF197
 12018 136a 01       		.byte	0x1
 12019 136b 5F       		.byte	0x5f
 12020 136c 94000000 		.4byte	0x94
 12021 1370 05       		.uleb128 0x5
 12022 1371 03       		.byte	0x3
 12023 1372 00000000 		.4byte	octave
 12024 1376 07       		.uleb128 0x7
 12025 1377 B8000000 		.4byte	0xb8
 12026 137b 86130000 		.4byte	0x1386
 12027 137f 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 260


 12028 1380 36010000 		.4byte	0x136
 12029 1384 09       		.byte	0x9
 12030 1385 00       		.byte	0
 12031 1386 25       		.uleb128 0x25
 12032 1387 97080000 		.4byte	.LASF198
 12033 138b 01       		.byte	0x1
 12034 138c 60       		.byte	0x60
 12035 138d 76130000 		.4byte	0x1376
 12036 1391 05       		.uleb128 0x5
 12037 1392 03       		.byte	0x3
 12038 1393 00000000 		.4byte	angle
 12039 1397 25       		.uleb128 0x25
 12040 1398 450C0000 		.4byte	.LASF199
 12041 139c 01       		.byte	0x1
 12042 139d 61       		.byte	0x61
 12043 139e 76130000 		.4byte	0x1376
 12044 13a2 05       		.uleb128 0x5
 12045 13a3 03       		.byte	0x3
 12046 13a4 00000000 		.4byte	prevAngle
 12047 13a8 07       		.uleb128 0x7
 12048 13a9 B8000000 		.4byte	0xb8
 12049 13ad B8130000 		.4byte	0x13b8
 12050 13b1 08       		.uleb128 0x8
 12051 13b2 36010000 		.4byte	0x136
 12052 13b6 03       		.byte	0x3
 12053 13b7 00       		.byte	0
 12054 13b8 25       		.uleb128 0x25
 12055 13b9 8F0C0000 		.4byte	.LASF200
 12056 13bd 01       		.byte	0x1
 12057 13be 63       		.byte	0x63
 12058 13bf A8130000 		.4byte	0x13a8
 12059 13c3 05       		.uleb128 0x5
 12060 13c4 03       		.byte	0x3
 12061 13c5 00000000 		.4byte	ADC_values
 12062 13c9 25       		.uleb128 0x25
 12063 13ca 0E050000 		.4byte	.LASF201
 12064 13ce 01       		.byte	0x1
 12065 13cf 64       		.byte	0x64
 12066 13d0 B8000000 		.4byte	0xb8
 12067 13d4 05       		.uleb128 0x5
 12068 13d5 03       		.byte	0x3
 12069 13d6 00000000 		.4byte	rawAngle
 12070 13da 25       		.uleb128 0x25
 12071 13db B60C0000 		.4byte	.LASF202
 12072 13df 01       		.byte	0x1
 12073 13e0 65       		.byte	0x65
 12074 13e1 B8000000 		.4byte	0xb8
 12075 13e5 05       		.uleb128 0x5
 12076 13e6 03       		.byte	0x3
 12077 13e7 00000000 		.4byte	midiSent
 12078 13eb 25       		.uleb128 0x25
 12079 13ec 9B050000 		.4byte	.LASF203
 12080 13f0 01       		.byte	0x1
 12081 13f1 66       		.byte	0x66
 12082 13f2 B8000000 		.4byte	0xb8
 12083 13f6 05       		.uleb128 0x5
 12084 13f7 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 261


 12085 13f8 00000000 		.4byte	midiOverflow
 12086 13fc 07       		.uleb128 0x7
 12087 13fd A2000000 		.4byte	0xa2
 12088 1401 0C140000 		.4byte	0x140c
 12089 1405 08       		.uleb128 0x8
 12090 1406 36010000 		.4byte	0x136
 12091 140a 07       		.byte	0x7
 12092 140b 00       		.byte	0
 12093 140c 25       		.uleb128 0x25
 12094 140d DA0F0000 		.4byte	.LASF204
 12095 1411 01       		.byte	0x1
 12096 1412 68       		.byte	0x68
 12097 1413 FC130000 		.4byte	0x13fc
 12098 1417 05       		.uleb128 0x5
 12099 1418 03       		.byte	0x3
 12100 1419 00000000 		.4byte	macroKnobValues
 12101 141d 25       		.uleb128 0x25
 12102 141e FE040000 		.4byte	.LASF205
 12103 1422 01       		.byte	0x1
 12104 1423 6A       		.byte	0x6a
 12105 1424 A2000000 		.4byte	0xa2
 12106 1428 05       		.uleb128 0x5
 12107 1429 03       		.byte	0x3
 12108 142a 00000000 		.4byte	currentCopedent
 12109 142e 07       		.uleb128 0x7
 12110 142f A2000000 		.4byte	0xa2
 12111 1433 3E140000 		.4byte	0x143e
 12112 1437 08       		.uleb128 0x8
 12113 1438 36010000 		.4byte	0x136
 12114 143c 01       		.byte	0x1
 12115 143d 00       		.byte	0
 12116 143e 25       		.uleb128 0x25
 12117 143f 29010000 		.4byte	.LASF206
 12118 1443 01       		.byte	0x1
 12119 1444 6B       		.byte	0x6b
 12120 1445 2E140000 		.4byte	0x142e
 12121 1449 05       		.uleb128 0x5
 12122 144a 03       		.byte	0x3
 12123 144b 00000000 		.4byte	necks
 12124 144f 25       		.uleb128 0x25
 12125 1450 34040000 		.4byte	.LASF207
 12126 1454 01       		.byte	0x1
 12127 1455 8A       		.byte	0x8a
 12128 1456 D9000000 		.4byte	0xd9
 12129 145a 05       		.uleb128 0x5
 12130 145b 03       		.byte	0x3
 12131 145c 00000000 		.4byte	rx1Channel
 12132 1460 25       		.uleb128 0x25
 12133 1461 30100000 		.4byte	.LASF208
 12134 1465 01       		.byte	0x1
 12135 1466 8A       		.byte	0x8a
 12136 1467 D9000000 		.4byte	0xd9
 12137 146b 05       		.uleb128 0x5
 12138 146c 03       		.byte	0x3
 12139 146d 00000000 		.4byte	rx2Channel
 12140 1471 25       		.uleb128 0x25
 12141 1472 2C0A0000 		.4byte	.LASF209
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 262


 12142 1476 01       		.byte	0x1
 12143 1477 8B       		.byte	0x8b
 12144 1478 FB0E0000 		.4byte	0xefb
 12145 147c 05       		.uleb128 0x5
 12146 147d 03       		.byte	0x3
 12147 147e 00000000 		.4byte	rx1TD
 12148 1482 25       		.uleb128 0x25
 12149 1483 0D0D0000 		.4byte	.LASF210
 12150 1487 01       		.byte	0x1
 12151 1488 8B       		.byte	0x8b
 12152 1489 FB0E0000 		.4byte	0xefb
 12153 148d 05       		.uleb128 0x5
 12154 148e 03       		.byte	0x3
 12155 148f 00000000 		.4byte	rx2TD
 12156 1493 25       		.uleb128 0x25
 12157 1494 140C0000 		.4byte	.LASF211
 12158 1498 01       		.byte	0x1
 12159 1499 8D       		.byte	0x8d
 12160 149a 2A010000 		.4byte	0x12a
 12161 149e 05       		.uleb128 0x5
 12162 149f 03       		.byte	0x3
 12163 14a0 00000000 		.4byte	txChannel
 12164 14a4 25       		.uleb128 0x25
 12165 14a5 D7100000 		.4byte	.LASF212
 12166 14a9 01       		.byte	0x1
 12167 14aa 8E       		.byte	0x8e
 12168 14ab 2A010000 		.4byte	0x12a
 12169 14af 05       		.uleb128 0x5
 12170 14b0 03       		.byte	0x3
 12171 14b1 00000000 		.4byte	txTD
 12172 14b5 25       		.uleb128 0x25
 12173 14b6 690A0000 		.4byte	.LASF213
 12174 14ba 01       		.byte	0x1
 12175 14bb 90       		.byte	0x90
 12176 14bc 2A010000 		.4byte	0x12a
 12177 14c0 05       		.uleb128 0x5
 12178 14c1 03       		.byte	0x3
 12179 14c2 00000000 		.4byte	rx3Channel
 12180 14c6 25       		.uleb128 0x25
 12181 14c7 79100000 		.4byte	.LASF214
 12182 14cb 01       		.byte	0x1
 12183 14cc 91       		.byte	0x91
 12184 14cd 2A010000 		.4byte	0x12a
 12185 14d1 05       		.uleb128 0x5
 12186 14d2 03       		.byte	0x3
 12187 14d3 00000000 		.4byte	rx3TD
 12188 14d7 07       		.uleb128 0x7
 12189 14d8 2A010000 		.4byte	0x12a
 12190 14dc ED140000 		.4byte	0x14ed
 12191 14e0 08       		.uleb128 0x8
 12192 14e1 36010000 		.4byte	0x136
 12193 14e5 01       		.byte	0x1
 12194 14e6 08       		.uleb128 0x8
 12195 14e7 36010000 		.4byte	0x136
 12196 14eb 19       		.byte	0x19
 12197 14ec 00       		.byte	0
 12198 14ed 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 263


 12199 14ee B0060000 		.4byte	.LASF215
 12200 14f2 01       		.byte	0x1
 12201 14f3 94       		.byte	0x94
 12202 14f4 FE140000 		.4byte	0x14fe
 12203 14f8 05       		.uleb128 0x5
 12204 14f9 03       		.byte	0x3
 12205 14fa 00000000 		.4byte	rxBufferPluck
 12206 14fe 06       		.uleb128 0x6
 12207 14ff D7140000 		.4byte	0x14d7
 12208 1503 07       		.uleb128 0x7
 12209 1504 2A010000 		.4byte	0x12a
 12210 1508 19150000 		.4byte	0x1519
 12211 150c 08       		.uleb128 0x8
 12212 150d 36010000 		.4byte	0x136
 12213 1511 01       		.byte	0x1
 12214 1512 08       		.uleb128 0x8
 12215 1513 36010000 		.4byte	0x136
 12216 1517 07       		.byte	0x7
 12217 1518 00       		.byte	0
 12218 1519 25       		.uleb128 0x25
 12219 151a 080C0000 		.4byte	.LASF216
 12220 151e 01       		.byte	0x1
 12221 151f 95       		.byte	0x95
 12222 1520 2A150000 		.4byte	0x152a
 12223 1524 05       		.uleb128 0x5
 12224 1525 03       		.byte	0x3
 12225 1526 00000000 		.4byte	rxBufferBar
 12226 152a 06       		.uleb128 0x6
 12227 152b 03150000 		.4byte	0x1503
 12228 152f 07       		.uleb128 0x7
 12229 1530 08020000 		.4byte	0x208
 12230 1534 3F150000 		.4byte	0x153f
 12231 1538 08       		.uleb128 0x8
 12232 1539 36010000 		.4byte	0x136
 12233 153d 0B       		.byte	0xb
 12234 153e 00       		.byte	0
 12235 153f 25       		.uleb128 0x25
 12236 1540 5D020000 		.4byte	.LASF217
 12237 1544 01       		.byte	0x1
 12238 1545 97       		.byte	0x97
 12239 1546 50150000 		.4byte	0x1550
 12240 154a 05       		.uleb128 0x5
 12241 154b 03       		.byte	0x3
 12242 154c 00000000 		.4byte	strings
 12243 1550 06       		.uleb128 0x6
 12244 1551 2F150000 		.4byte	0x152f
 12245 1555 25       		.uleb128 0x25
 12246 1556 E1040000 		.4byte	.LASF218
 12247 155a 01       		.byte	0x1
 12248 155b 98       		.byte	0x98
 12249 155c 66150000 		.4byte	0x1566
 12250 1560 05       		.uleb128 0x5
 12251 1561 03       		.byte	0x3
 12252 1562 00000000 		.4byte	prevStrings
 12253 1566 06       		.uleb128 0x6
 12254 1567 2F150000 		.4byte	0x152f
 12255 156b 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 264


 12256 156c 08020000 		.4byte	0x208
 12257 1570 7B150000 		.4byte	0x157b
 12258 1574 08       		.uleb128 0x8
 12259 1575 36010000 		.4byte	0x136
 12260 1579 01       		.byte	0x1
 12261 157a 00       		.byte	0
 12262 157b 28       		.uleb128 0x28
 12263 157c 62617200 		.ascii	"bar\000"
 12264 1580 01       		.byte	0x1
 12265 1581 99       		.byte	0x99
 12266 1582 8C150000 		.4byte	0x158c
 12267 1586 05       		.uleb128 0x5
 12268 1587 03       		.byte	0x3
 12269 1588 00000000 		.4byte	bar
 12270 158c 06       		.uleb128 0x6
 12271 158d 6B150000 		.4byte	0x156b
 12272 1591 25       		.uleb128 0x25
 12273 1592 E6100000 		.4byte	.LASF219
 12274 1596 01       		.byte	0x1
 12275 1597 9A       		.byte	0x9a
 12276 1598 A2150000 		.4byte	0x15a2
 12277 159c 05       		.uleb128 0x5
 12278 159d 03       		.byte	0x3
 12279 159e 00000000 		.4byte	prevBar
 12280 15a2 06       		.uleb128 0x6
 12281 15a3 6B150000 		.4byte	0x156b
 12282 15a7 25       		.uleb128 0x25
 12283 15a8 B60F0000 		.4byte	.LASF220
 12284 15ac 01       		.byte	0x1
 12285 15ad 9B       		.byte	0x9b
 12286 15ae B8150000 		.4byte	0x15b8
 12287 15b2 05       		.uleb128 0x5
 12288 15b3 03       		.byte	0x3
 12289 15b4 00000000 		.4byte	maxStrings
 12290 15b8 06       		.uleb128 0x6
 12291 15b9 2F150000 		.4byte	0x152f
 12292 15bd 25       		.uleb128 0x25
 12293 15be 5F0D0000 		.4byte	.LASF221
 12294 15c2 01       		.byte	0x1
 12295 15c3 9C       		.byte	0x9c
 12296 15c4 03020000 		.4byte	0x203
 12297 15c8 05       		.uleb128 0x5
 12298 15c9 03       		.byte	0x3
 12299 15ca 00000000 		.4byte	amHere
 12300 15ce 25       		.uleb128 0x25
 12301 15cf 28060000 		.4byte	.LASF222
 12302 15d3 01       		.byte	0x1
 12303 15d4 9D       		.byte	0x9d
 12304 15d5 03020000 		.4byte	0x203
 12305 15d9 05       		.uleb128 0x5
 12306 15da 03       		.byte	0x3
 12307 15db 00000000 		.4byte	spiCounter
 12308 15df 25       		.uleb128 0x25
 12309 15e0 4D040000 		.4byte	.LASF223
 12310 15e4 01       		.byte	0x1
 12311 15e5 9E       		.byte	0x9e
 12312 15e6 03020000 		.4byte	0x203
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 265


 12313 15ea 05       		.uleb128 0x5
 12314 15eb 03       		.byte	0x3
 12315 15ec 00000000 		.4byte	newDataFlag
 12316 15f0 25       		.uleb128 0x25
 12317 15f1 130D0000 		.4byte	.LASF224
 12318 15f5 01       		.byte	0x1
 12319 15f6 9F       		.byte	0x9f
 12320 15f7 94000000 		.4byte	0x94
 12321 15fb 05       		.uleb128 0x5
 12322 15fc 03       		.byte	0x3
 12323 15fd 00000000 		.4byte	prevOctave
 12324 1601 25       		.uleb128 0x25
 12325 1602 4F0C0000 		.4byte	.LASF225
 12326 1606 01       		.byte	0x1
 12327 1607 A0       		.byte	0xa0
 12328 1608 A2000000 		.4byte	0xa2
 12329 160c 05       		.uleb128 0x5
 12330 160d 03       		.byte	0x3
 12331 160e 00000000 		.4byte	pluck_index
 12332 1612 25       		.uleb128 0x25
 12333 1613 FC0A0000 		.4byte	.LASF226
 12334 1617 01       		.byte	0x1
 12335 1618 A1       		.byte	0xa1
 12336 1619 03020000 		.4byte	0x203
 12337 161d 05       		.uleb128 0x5
 12338 161e 03       		.byte	0x3
 12339 161f 00000000 		.4byte	amHere2
 12340 1623 25       		.uleb128 0x25
 12341 1624 9F0D0000 		.4byte	.LASF227
 12342 1628 01       		.byte	0x1
 12343 1629 A2       		.byte	0xa2
 12344 162a 03020000 		.4byte	0x203
 12345 162e 05       		.uleb128 0x5
 12346 162f 03       		.byte	0x3
 12347 1630 00000000 		.4byte	spiCounter2
 12348 1634 25       		.uleb128 0x25
 12349 1635 67000000 		.4byte	.LASF228
 12350 1639 01       		.byte	0x1
 12351 163a A3       		.byte	0xa3
 12352 163b 03020000 		.4byte	0x203
 12353 163f 05       		.uleb128 0x5
 12354 1640 03       		.byte	0x3
 12355 1641 00000000 		.4byte	newDataFlag2
 12356 1645 25       		.uleb128 0x25
 12357 1646 100B0000 		.4byte	.LASF229
 12358 164a 01       		.byte	0x1
 12359 164b A4       		.byte	0xa4
 12360 164c 03020000 		.4byte	0x203
 12361 1650 05       		.uleb128 0x5
 12362 1651 03       		.byte	0x3
 12363 1652 00000000 		.4byte	currentPluckBuffer
 12364 1656 25       		.uleb128 0x25
 12365 1657 7E0C0000 		.4byte	.LASF230
 12366 165b 01       		.byte	0x1
 12367 165c A5       		.byte	0xa5
 12368 165d 03020000 		.4byte	0x203
 12369 1661 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 266


 12370 1662 03       		.byte	0x3
 12371 1663 00000000 		.4byte	currentBarBuffer
 12372 1667 25       		.uleb128 0x25
 12373 1668 270E0000 		.4byte	.LASF231
 12374 166c 01       		.byte	0x1
 12375 166d A6       		.byte	0xa6
 12376 166e 03020000 		.4byte	0x203
 12377 1672 05       		.uleb128 0x5
 12378 1673 03       		.byte	0x3
 12379 1674 00000000 		.4byte	pluckErrorCount
 12380 1678 25       		.uleb128 0x25
 12381 1679 A70C0000 		.4byte	.LASF232
 12382 167d 01       		.byte	0x1
 12383 167e A7       		.byte	0xa7
 12384 167f 08020000 		.4byte	0x208
 12385 1683 05       		.uleb128 0x5
 12386 1684 03       		.byte	0x3
 12387 1685 00000000 		.4byte	SPI1ErrorCount
 12388 1689 25       		.uleb128 0x25
 12389 168a B5070000 		.4byte	.LASF233
 12390 168e 01       		.byte	0x1
 12391 168f AB       		.byte	0xab
 12392 1690 03020000 		.4byte	0x203
 12393 1694 05       		.uleb128 0x5
 12394 1695 03       		.byte	0x3
 12395 1696 00000000 		.4byte	inputData
 12396 169a 25       		.uleb128 0x25
 12397 169b 24100000 		.4byte	.LASF234
 12398 169f 01       		.byte	0x1
 12399 16a0 CE       		.byte	0xce
 12400 16a1 A2000000 		.4byte	0xa2
 12401 16a5 05       		.uleb128 0x5
 12402 16a6 03       		.byte	0x3
 12403 16a7 00000000 		.4byte	spiAdjusted
 12404 16ab 25       		.uleb128 0x25
 12405 16ac DC060000 		.4byte	.LASF235
 12406 16b0 01       		.byte	0x1
 12407 16b1 CF       		.byte	0xcf
 12408 16b2 A2000000 		.4byte	0xa2
 12409 16b6 05       		.uleb128 0x5
 12410 16b7 03       		.byte	0x3
 12411 16b8 00000000 		.4byte	mySpiCounter
 12412 16bc 25       		.uleb128 0x25
 12413 16bd D80B0000 		.4byte	.LASF236
 12414 16c1 01       		.byte	0x1
 12415 16c2 D0       		.byte	0xd0
 12416 16c3 08020000 		.4byte	0x208
 12417 16c7 05       		.uleb128 0x5
 12418 16c8 03       		.byte	0x3
 12419 16c9 00000000 		.4byte	offsetErrorCount
 12420 16cd 25       		.uleb128 0x25
 12421 16ce C7000000 		.4byte	.LASF237
 12422 16d2 01       		.byte	0x1
 12423 16d3 D1       		.byte	0xd1
 12424 16d4 03020000 		.4byte	0x203
 12425 16d8 05       		.uleb128 0x5
 12426 16d9 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 267


 12427 16da 00000000 		.4byte	SPI2errorflag
 12428 16de 25       		.uleb128 0x25
 12429 16df BD0B0000 		.4byte	.LASF238
 12430 16e3 01       		.byte	0x1
 12431 16e4 D2       		.byte	0xd2
 12432 16e5 EF160000 		.4byte	0x16ef
 12433 16e9 05       		.uleb128 0x5
 12434 16ea 03       		.byte	0x3
 12435 16eb 00000000 		.4byte	bar_index
 12436 16ef 06       		.uleb128 0x6
 12437 16f0 94000000 		.4byte	0x94
 12438 16f4 25       		.uleb128 0x25
 12439 16f5 5C030000 		.4byte	.LASF239
 12440 16f9 01       		.byte	0x1
 12441 16fa D3       		.byte	0xd3
 12442 16fb A6020000 		.4byte	0x2a6
 12443 16ff 05       		.uleb128 0x5
 12444 1700 03       		.byte	0x3
 12445 1701 00000000 		.4byte	knobs
 12446 1705 25       		.uleb128 0x25
 12447 1706 D2060000 		.4byte	.LASF240
 12448 170a 01       		.byte	0x1
 12449 170b D4       		.byte	0xd4
 12450 170c A6020000 		.4byte	0x2a6
 12451 1710 05       		.uleb128 0x5
 12452 1711 03       		.byte	0x3
 12453 1712 00000000 		.4byte	prevKnobs
 12454 1716 25       		.uleb128 0x25
 12455 1717 C70B0000 		.4byte	.LASF241
 12456 171b 01       		.byte	0x1
 12457 171c D6       		.byte	0xd6
 12458 171d A6020000 		.4byte	0x2a6
 12459 1721 05       		.uleb128 0x5
 12460 1722 03       		.byte	0x3
 12461 1723 00000000 		.4byte	knobs7bit
 12462 1727 25       		.uleb128 0x25
 12463 1728 740B0000 		.4byte	.LASF242
 12464 172c 01       		.byte	0x1
 12465 172d D7       		.byte	0xd7
 12466 172e A6020000 		.4byte	0x2a6
 12467 1732 05       		.uleb128 0x5
 12468 1733 03       		.byte	0x3
 12469 1734 00000000 		.4byte	prevKnobs7bit
 12470 1738 25       		.uleb128 0x25
 12471 1739 6D080000 		.4byte	.LASF243
 12472 173d 01       		.byte	0x1
 12473 173e D9       		.byte	0xd9
 12474 173f A2000000 		.4byte	0xa2
 12475 1743 05       		.uleb128 0x5
 12476 1744 03       		.byte	0x3
 12477 1745 00000000 		.4byte	u7bit_volumePedal
 12478 1749 25       		.uleb128 0x25
 12479 174a 01100000 		.4byte	.LASF244
 12480 174e 01       		.byte	0x1
 12481 174f DA       		.byte	0xda
 12482 1750 A2000000 		.4byte	0xa2
 12483 1754 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 268


 12484 1755 03       		.byte	0x3
 12485 1756 00000000 		.4byte	prev_7bit_volumePedal
 12486 175a 25       		.uleb128 0x25
 12487 175b 040B0000 		.4byte	.LASF245
 12488 175f 01       		.byte	0x1
 12489 1760 DB       		.byte	0xdb
 12490 1761 03020000 		.4byte	0x203
 12491 1765 05       		.uleb128 0x5
 12492 1766 03       		.byte	0x3
 12493 1767 00000000 		.4byte	SPI2started
 12494 176b 25       		.uleb128 0x25
 12495 176c 99060000 		.4byte	.LASF246
 12496 1770 01       		.byte	0x1
 12497 1771 DD       		.byte	0xdd
 12498 1772 A2000000 		.4byte	0xa2
 12499 1776 05       		.uleb128 0x5
 12500 1777 03       		.byte	0x3
 12501 1778 00000000 		.4byte	whichMacro
 12502 177c 25       		.uleb128 0x25
 12503 177d 600E0000 		.4byte	.LASF247
 12504 1781 01       		.byte	0x1
 12505 1782 DF       		.byte	0xdf
 12506 1783 FC130000 		.4byte	0x13fc
 12507 1787 05       		.uleb128 0x5
 12508 1788 03       		.byte	0x3
 12509 1789 00000000 		.4byte	macroKnobValues7bit
 12510 178d 25       		.uleb128 0x25
 12511 178e 44030000 		.4byte	.LASF248
 12512 1792 01       		.byte	0x1
 12513 1793 E0       		.byte	0xe0
 12514 1794 FC130000 		.4byte	0x13fc
 12515 1798 05       		.uleb128 0x5
 12516 1799 03       		.byte	0x3
 12517 179a 00000000 		.4byte	prevMacroKnobValues7bit
 12518 179e 25       		.uleb128 0x25
 12519 179f 660D0000 		.4byte	.LASF249
 12520 17a3 01       		.byte	0x1
 12521 17a4 F3       		.byte	0xf3
 12522 17a5 FB0E0000 		.4byte	0xefb
 12523 17a9 05       		.uleb128 0x5
 12524 17aa 03       		.byte	0x3
 12525 17ab 00000000 		.4byte	array
 12526 17af 25       		.uleb128 0x25
 12527 17b0 28080000 		.4byte	.LASF250
 12528 17b4 01       		.byte	0x1
 12529 17b5 F6       		.byte	0xf6
 12530 17b6 F7010000 		.4byte	0x1f7
 12531 17ba 05       		.uleb128 0x5
 12532 17bb 03       		.byte	0x3
 12533 17bc 00000000 		.4byte	eepromReturnValue
 12534 17c0 27       		.uleb128 0x27
 12535 17c1 5F050000 		.4byte	.LASF251
 12536 17c5 01       		.byte	0x1
 12537 17c6 0201     		.2byte	0x102
 12538 17c8 D9000000 		.4byte	0xd9
 12539 17cc 05       		.uleb128 0x5
 12540 17cd 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 269


 12541 17ce 00000000 		.4byte	eeprom_cnt
 12542 17d2 27       		.uleb128 0x27
 12543 17d3 42080000 		.4byte	.LASF83
 12544 17d7 01       		.byte	0x1
 12545 17d8 0301     		.2byte	0x103
 12546 17da 12010000 		.4byte	0x112
 12547 17de 05       		.uleb128 0x5
 12548 17df 03       		.byte	0x3
 12549 17e0 00000000 		.4byte	status
 12550 17e4 29       		.uleb128 0x29
 12551 17e5 70747200 		.ascii	"ptr\000"
 12552 17e9 01       		.byte	0x1
 12553 17ea 0401     		.2byte	0x104
 12554 17ec F6170000 		.4byte	0x17f6
 12555 17f0 05       		.uleb128 0x5
 12556 17f1 03       		.byte	0x3
 12557 17f2 00000000 		.4byte	ptr
 12558 17f6 20       		.uleb128 0x20
 12559 17f7 04       		.byte	0x4
 12560 17f8 01180000 		.4byte	0x1801
 12561 17fc 24       		.uleb128 0x24
 12562 17fd D9000000 		.4byte	0xd9
 12563 1801 06       		.uleb128 0x6
 12564 1802 FC170000 		.4byte	0x17fc
 12565 1806 27       		.uleb128 0x27
 12566 1807 2C020000 		.4byte	.LASF252
 12567 180b 01       		.byte	0x1
 12568 180c 0501     		.2byte	0x105
 12569 180e EF160000 		.4byte	0x16ef
 12570 1812 05       		.uleb128 0x5
 12571 1813 03       		.byte	0x3
 12572 1814 00000000 		.4byte	barCount
 12573 1818 07       		.uleb128 0x7
 12574 1819 03020000 		.4byte	0x203
 12575 181d 28180000 		.4byte	0x1828
 12576 1821 08       		.uleb128 0x8
 12577 1822 36010000 		.4byte	0x136
 12578 1826 0F       		.byte	0xf
 12579 1827 00       		.byte	0
 12580 1828 27       		.uleb128 0x27
 12581 1829 0D010000 		.4byte	.LASF253
 12582 182d 01       		.byte	0x1
 12583 182e 6701     		.2byte	0x167
 12584 1830 3A180000 		.4byte	0x183a
 12585 1834 05       		.uleb128 0x5
 12586 1835 03       		.byte	0x3
 12587 1836 00000000 		.4byte	I2Cbuff2
 12588 183a 06       		.uleb128 0x6
 12589 183b 18180000 		.4byte	0x1818
 12590 183f 27       		.uleb128 0x27
 12591 1840 49080000 		.4byte	.LASF254
 12592 1844 01       		.byte	0x1
 12593 1845 6801     		.2byte	0x168
 12594 1847 03020000 		.4byte	0x203
 12595 184b 05       		.uleb128 0x5
 12596 184c 03       		.byte	0x3
 12597 184d 00000000 		.4byte	send_it
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 270


 12598 1851 07       		.uleb128 0x7
 12599 1852 A2000000 		.4byte	0xa2
 12600 1856 67180000 		.4byte	0x1867
 12601 185a 08       		.uleb128 0x8
 12602 185b 36010000 		.4byte	0x136
 12603 185f 0B       		.byte	0xb
 12604 1860 08       		.uleb128 0x8
 12605 1861 36010000 		.4byte	0x136
 12606 1865 01       		.byte	0x1
 12607 1866 00       		.byte	0
 12608 1867 27       		.uleb128 0x27
 12609 1868 16010000 		.4byte	.LASF255
 12610 186c 01       		.byte	0x1
 12611 186d 6F01     		.2byte	0x16f
 12612 186f 51180000 		.4byte	0x1851
 12613 1873 05       		.uleb128 0x5
 12614 1874 03       		.byte	0x3
 12615 1875 00000000 		.4byte	mux_states
 12616 1879 07       		.uleb128 0x7
 12617 187a A2000000 		.4byte	0xa2
 12618 187e 89180000 		.4byte	0x1889
 12619 1882 08       		.uleb128 0x8
 12620 1883 36010000 		.4byte	0x136
 12621 1887 0B       		.byte	0xb
 12622 1888 00       		.byte	0
 12623 1889 27       		.uleb128 0x27
 12624 188a EA0F0000 		.4byte	.LASF256
 12625 188e 01       		.byte	0x1
 12626 188f 7001     		.2byte	0x170
 12627 1891 79180000 		.4byte	0x1879
 12628 1895 05       		.uleb128 0x5
 12629 1896 03       		.byte	0x3
 12630 1897 00000000 		.4byte	i2c_skipped
 12631 189b 27       		.uleb128 0x27
 12632 189c 7A0E0000 		.4byte	.LASF257
 12633 18a0 01       		.byte	0x1
 12634 18a1 7101     		.2byte	0x171
 12635 18a3 76130000 		.4byte	0x1376
 12636 18a7 05       		.uleb128 0x5
 12637 18a8 03       		.byte	0x3
 12638 18a9 00000000 		.4byte	pedals_low
 12639 18ad 27       		.uleb128 0x27
 12640 18ae 6E010000 		.4byte	.LASF258
 12641 18b2 01       		.byte	0x1
 12642 18b3 7201     		.2byte	0x172
 12643 18b5 76130000 		.4byte	0x1376
 12644 18b9 05       		.uleb128 0x5
 12645 18ba 03       		.byte	0x3
 12646 18bb 00000000 		.4byte	pedals_high
 12647 18bf 27       		.uleb128 0x27
 12648 18c0 C60D0000 		.4byte	.LASF259
 12649 18c4 01       		.byte	0x1
 12650 18c5 7301     		.2byte	0x173
 12651 18c7 B8000000 		.4byte	0xb8
 12652 18cb 05       		.uleb128 0x5
 12653 18cc 03       		.byte	0x3
 12654 18cd 00000000 		.4byte	deadzone
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 271


 12655 18d1 27       		.uleb128 0x27
 12656 18d2 A4060000 		.4byte	.LASF260
 12657 18d6 01       		.byte	0x1
 12658 18d7 7401     		.2byte	0x174
 12659 18d9 B8000000 		.4byte	0xb8
 12660 18dd 05       		.uleb128 0x5
 12661 18de 03       		.byte	0x3
 12662 18df 00000000 		.4byte	volumePedal
 12663 18e3 27       		.uleb128 0x27
 12664 18e4 1E0C0000 		.4byte	.LASF261
 12665 18e8 01       		.byte	0x1
 12666 18e9 7501     		.2byte	0x175
 12667 18eb 76130000 		.4byte	0x1376
 12668 18ef 05       		.uleb128 0x5
 12669 18f0 03       		.byte	0x3
 12670 18f1 00000000 		.4byte	processed_pedals
 12671 18f5 27       		.uleb128 0x27
 12672 18f6 E60A0000 		.4byte	.LASF262
 12673 18fa 01       		.byte	0x1
 12674 18fb 7601     		.2byte	0x176
 12675 18fd 76130000 		.4byte	0x1376
 12676 1901 05       		.uleb128 0x5
 12677 1902 03       		.byte	0x3
 12678 1903 00000000 		.4byte	prev_processed_pedals
 12679 1907 07       		.uleb128 0x7
 12680 1908 A2000000 		.4byte	0xa2
 12681 190c 17190000 		.4byte	0x1917
 12682 1910 08       		.uleb128 0x8
 12683 1911 36010000 		.4byte	0x136
 12684 1915 09       		.byte	0x9
 12685 1916 00       		.byte	0
 12686 1917 27       		.uleb128 0x27
 12687 1918 C7060000 		.4byte	.LASF263
 12688 191c 01       		.byte	0x1
 12689 191d 7701     		.2byte	0x177
 12690 191f 07190000 		.4byte	0x1907
 12691 1923 05       		.uleb128 0x5
 12692 1924 03       		.byte	0x3
 12693 1925 00000000 		.4byte	pedals8bit
 12694 1929 27       		.uleb128 0x27
 12695 192a F60F0000 		.4byte	.LASF264
 12696 192e 01       		.byte	0x1
 12697 192f 7801     		.2byte	0x178
 12698 1931 07190000 		.4byte	0x1907
 12699 1935 05       		.uleb128 0x5
 12700 1936 03       		.byte	0x3
 12701 1937 00000000 		.4byte	pedals7bit
 12702 193b 27       		.uleb128 0x27
 12703 193c 900B0000 		.4byte	.LASF265
 12704 1940 01       		.byte	0x1
 12705 1941 7901     		.2byte	0x179
 12706 1943 07190000 		.4byte	0x1907
 12707 1947 05       		.uleb128 0x5
 12708 1948 03       		.byte	0x3
 12709 1949 00000000 		.4byte	prevPedals7bit
 12710 194d 27       		.uleb128 0x27
 12711 194e 42000000 		.4byte	.LASF266
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 272


 12712 1952 01       		.byte	0x1
 12713 1953 7A01     		.2byte	0x17a
 12714 1955 AD000000 		.4byte	0xad
 12715 1959 05       		.uleb128 0x5
 12716 195a 03       		.byte	0x3
 12717 195b 00000000 		.4byte	prev_processed_volumePedal
 12718 195f 27       		.uleb128 0x27
 12719 1960 E90B0000 		.4byte	.LASF267
 12720 1964 01       		.byte	0x1
 12721 1965 7B01     		.2byte	0x17b
 12722 1967 AD000000 		.4byte	0xad
 12723 196b 05       		.uleb128 0x5
 12724 196c 03       		.byte	0x3
 12725 196d 00000000 		.4byte	processed_volumePedal
 12726 1971 07       		.uleb128 0x7
 12727 1972 FD000000 		.4byte	0xfd
 12728 1976 87190000 		.4byte	0x1987
 12729 197a 08       		.uleb128 0x8
 12730 197b 36010000 		.4byte	0x136
 12731 197f 03       		.byte	0x3
 12732 1980 08       		.uleb128 0x8
 12733 1981 36010000 		.4byte	0x136
 12734 1985 03       		.byte	0x3
 12735 1986 00       		.byte	0
 12736 1987 27       		.uleb128 0x27
 12737 1988 C80E0000 		.4byte	.LASF268
 12738 198c 01       		.byte	0x1
 12739 198d 7E01     		.2byte	0x17e
 12740 198f 71190000 		.4byte	0x1971
 12741 1993 05       		.uleb128 0x5
 12742 1994 03       		.byte	0x3
 12743 1995 00000000 		.4byte	fretMeasurements
 12744 1999 27       		.uleb128 0x27
 12745 199a C7080000 		.4byte	.LASF269
 12746 199e 01       		.byte	0x1
 12747 199f 8B01     		.2byte	0x18b
 12748 19a1 94000000 		.4byte	0x94
 12749 19a5 05       		.uleb128 0x5
 12750 19a6 03       		.byte	0x3
 12751 19a7 00000000 		.4byte	currentPresetSelection
 12752 19ab 07       		.uleb128 0x7
 12753 19ac A2000000 		.4byte	0xa2
 12754 19b0 C1190000 		.4byte	0x19c1
 12755 19b4 08       		.uleb128 0x8
 12756 19b5 36010000 		.4byte	0x136
 12757 19b9 3F       		.byte	0x3f
 12758 19ba 08       		.uleb128 0x8
 12759 19bb 36010000 		.4byte	0x136
 12760 19bf 0D       		.byte	0xd
 12761 19c0 00       		.byte	0
 12762 19c1 27       		.uleb128 0x27
 12763 19c2 BB020000 		.4byte	.LASF270
 12764 19c6 01       		.byte	0x1
 12765 19c7 8C01     		.2byte	0x18c
 12766 19c9 AB190000 		.4byte	0x19ab
 12767 19cd 05       		.uleb128 0x5
 12768 19ce 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 273


 12769 19cf 00000000 		.4byte	presetNamesArray
 12770 19d3 27       		.uleb128 0x27
 12771 19d4 44020000 		.4byte	.LASF271
 12772 19d8 01       		.byte	0x1
 12773 19d9 8D01     		.2byte	0x18d
 12774 19db A2000000 		.4byte	0xa2
 12775 19df 05       		.uleb128 0x5
 12776 19e0 03       		.byte	0x3
 12777 19e1 00000000 		.4byte	presetNumberToLoad
 12778 19e5 27       		.uleb128 0x27
 12779 19e6 7B020000 		.4byte	.LASF272
 12780 19ea 01       		.byte	0x1
 12781 19eb 8E01     		.2byte	0x18e
 12782 19ed 2E140000 		.4byte	0x142e
 12783 19f1 05       		.uleb128 0x5
 12784 19f2 03       		.byte	0x3
 12785 19f3 00000000 		.4byte	presetLoadedResponse
 12786 19f7 07       		.uleb128 0x7
 12787 19f8 A2000000 		.4byte	0xa2
 12788 19fc 131A0000 		.4byte	0x1a13
 12789 1a00 08       		.uleb128 0x8
 12790 1a01 36010000 		.4byte	0x136
 12791 1a05 3F       		.byte	0x3f
 12792 1a06 08       		.uleb128 0x8
 12793 1a07 36010000 		.4byte	0x136
 12794 1a0b 07       		.byte	0x7
 12795 1a0c 08       		.uleb128 0x8
 12796 1a0d 36010000 		.4byte	0x136
 12797 1a11 0D       		.byte	0xd
 12798 1a12 00       		.byte	0
 12799 1a13 27       		.uleb128 0x27
 12800 1a14 74000000 		.4byte	.LASF273
 12801 1a18 01       		.byte	0x1
 12802 1a19 9101     		.2byte	0x191
 12803 1a1b F7190000 		.4byte	0x19f7
 12804 1a1f 05       		.uleb128 0x5
 12805 1a20 03       		.byte	0x3
 12806 1a21 00000000 		.4byte	macroNamesArray
 12807 1a25 07       		.uleb128 0x7
 12808 1a26 FD000000 		.4byte	0xfd
 12809 1a2a 351A0000 		.4byte	0x1a35
 12810 1a2e 08       		.uleb128 0x8
 12811 1a2f 36010000 		.4byte	0x136
 12812 1a33 03       		.byte	0x3
 12813 1a34 00       		.byte	0
 12814 1a35 27       		.uleb128 0x27
 12815 1a36 16030000 		.4byte	.LASF274
 12816 1a3a 01       		.byte	0x1
 12817 1a3b 9501     		.2byte	0x195
 12818 1a3d 251A0000 		.4byte	0x1a25
 12819 1a41 05       		.uleb128 0x5
 12820 1a42 03       		.byte	0x3
 12821 1a43 00000000 		.4byte	fretScaling
 12822 1a47 07       		.uleb128 0x7
 12823 1a48 FD000000 		.4byte	0xfd
 12824 1a4c 571A0000 		.4byte	0x1a57
 12825 1a50 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 274


 12826 1a51 36010000 		.4byte	0x136
 12827 1a55 09       		.byte	0x9
 12828 1a56 00       		.byte	0
 12829 1a57 27       		.uleb128 0x27
 12830 1a58 01040000 		.4byte	.LASF275
 12831 1a5c 01       		.byte	0x1
 12832 1a5d 9A01     		.2byte	0x19a
 12833 1a5f 471A0000 		.4byte	0x1a47
 12834 1a63 05       		.uleb128 0x5
 12835 1a64 03       		.byte	0x3
 12836 1a65 00000000 		.4byte	pedalRatios
 12837 1a69 27       		.uleb128 0x27
 12838 1a6a A2040000 		.4byte	.LASF276
 12839 1a6e 01       		.byte	0x1
 12840 1a6f 9B01     		.2byte	0x19b
 12841 1a71 A2000000 		.4byte	0xa2
 12842 1a75 05       		.uleb128 0x5
 12843 1a76 03       		.byte	0x3
 12844 1a77 00000000 		.4byte	last_mux
 12845 1a7b 27       		.uleb128 0x27
 12846 1a7c A5090000 		.4byte	.LASF277
 12847 1a80 01       		.byte	0x1
 12848 1a81 9C01     		.2byte	0x19c
 12849 1a83 03020000 		.4byte	0x203
 12850 1a87 05       		.uleb128 0x5
 12851 1a88 03       		.byte	0x3
 12852 1a89 00000000 		.4byte	main_counter
 12853 1a8d 27       		.uleb128 0x27
 12854 1a8e 34050000 		.4byte	.LASF278
 12855 1a92 01       		.byte	0x1
 12856 1a93 9D01     		.2byte	0x19d
 12857 1a95 A2000000 		.4byte	0xa2
 12858 1a99 05       		.uleb128 0x5
 12859 1a9a 03       		.byte	0x3
 12860 1a9b 00000000 		.4byte	neck
 12861 1a9f 27       		.uleb128 0x27
 12862 1aa0 BC090000 		.4byte	.LASF279
 12863 1aa4 01       		.byte	0x1
 12864 1aa5 9E01     		.2byte	0x19e
 12865 1aa7 A2000000 		.4byte	0xa2
 12866 1aab 05       		.uleb128 0x5
 12867 1aac 03       		.byte	0x3
 12868 1aad 00000000 		.4byte	dualSlider
 12869 1ab1 27       		.uleb128 0x27
 12870 1ab2 9F0C0000 		.4byte	.LASF280
 12871 1ab6 01       		.byte	0x1
 12872 1ab7 9F01     		.2byte	0x19f
 12873 1ab9 A2000000 		.4byte	0xa2
 12874 1abd 05       		.uleb128 0x5
 12875 1abe 03       		.byte	0x3
 12876 1abf 00000000 		.4byte	enterUp
 12877 1ac3 27       		.uleb128 0x27
 12878 1ac4 57020000 		.4byte	.LASF281
 12879 1ac8 01       		.byte	0x1
 12880 1ac9 A001     		.2byte	0x1a0
 12881 1acb A2000000 		.4byte	0xa2
 12882 1acf 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 275


 12883 1ad0 03       		.byte	0x3
 12884 1ad1 00000000 		.4byte	voice
 12885 1ad5 27       		.uleb128 0x27
 12886 1ad6 13110000 		.4byte	.LASF282
 12887 1ada 01       		.byte	0x1
 12888 1adb A101     		.2byte	0x1a1
 12889 1add A2000000 		.4byte	0xa2
 12890 1ae1 05       		.uleb128 0x5
 12891 1ae2 03       		.byte	0x3
 12892 1ae3 00000000 		.4byte	editUp
 12893 1ae7 27       		.uleb128 0x27
 12894 1ae8 8F050000 		.4byte	.LASF283
 12895 1aec 01       		.byte	0x1
 12896 1aed A201     		.2byte	0x1a2
 12897 1aef A2000000 		.4byte	0xa2
 12898 1af3 05       		.uleb128 0x5
 12899 1af4 03       		.byte	0x3
 12900 1af5 00000000 		.4byte	oct1Up
 12901 1af9 27       		.uleb128 0x27
 12902 1afa 8B100000 		.4byte	.LASF284
 12903 1afe 01       		.byte	0x1
 12904 1aff A301     		.2byte	0x1a3
 12905 1b01 A2000000 		.4byte	0xa2
 12906 1b05 05       		.uleb128 0x5
 12907 1b06 03       		.byte	0x3
 12908 1b07 00000000 		.4byte	oct4Up
 12909 1b0b 27       		.uleb128 0x27
 12910 1b0c AB040000 		.4byte	.LASF285
 12911 1b10 01       		.byte	0x1
 12912 1b11 A501     		.2byte	0x1a5
 12913 1b13 1D1B0000 		.4byte	0x1b1d
 12914 1b17 05       		.uleb128 0x5
 12915 1b18 03       		.byte	0x3
 12916 1b19 00000000 		.4byte	encoderVal
 12917 1b1d 06       		.uleb128 0x6
 12918 1b1e 18180000 		.4byte	0x1818
 12919 1b22 27       		.uleb128 0x27
 12920 1b23 84050000 		.4byte	.LASF286
 12921 1b27 01       		.byte	0x1
 12922 1b28 A601     		.2byte	0x1a6
 12923 1b2a 94000000 		.4byte	0x94
 12924 1b2e 05       		.uleb128 0x5
 12925 1b2f 03       		.byte	0x3
 12926 1b30 00000000 		.4byte	encoderNum
 12927 1b34 27       		.uleb128 0x27
 12928 1b35 820A0000 		.4byte	.LASF287
 12929 1b39 01       		.byte	0x1
 12930 1b3a A701     		.2byte	0x1a7
 12931 1b3c A2000000 		.4byte	0xa2
 12932 1b40 05       		.uleb128 0x5
 12933 1b41 03       		.byte	0x3
 12934 1b42 00000000 		.4byte	button1Up
 12935 1b46 27       		.uleb128 0x27
 12936 1b47 3D0D0000 		.4byte	.LASF288
 12937 1b4b 01       		.byte	0x1
 12938 1b4c A801     		.2byte	0x1a8
 12939 1b4e A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 276


 12940 1b52 05       		.uleb128 0x5
 12941 1b53 03       		.byte	0x3
 12942 1b54 00000000 		.4byte	button2Up
 12943 1b58 27       		.uleb128 0x27
 12944 1b59 A7100000 		.4byte	.LASF289
 12945 1b5d 01       		.byte	0x1
 12946 1b5e A901     		.2byte	0x1a9
 12947 1b60 A2000000 		.4byte	0xa2
 12948 1b64 05       		.uleb128 0x5
 12949 1b65 03       		.byte	0x3
 12950 1b66 00000000 		.4byte	button3Up
 12951 1b6a 27       		.uleb128 0x27
 12952 1b6b 66100000 		.4byte	.LASF290
 12953 1b6f 01       		.byte	0x1
 12954 1b70 AA01     		.2byte	0x1aa
 12955 1b72 A2000000 		.4byte	0xa2
 12956 1b76 05       		.uleb128 0x5
 12957 1b77 03       		.byte	0x3
 12958 1b78 00000000 		.4byte	button4Up
 12959 1b7c 27       		.uleb128 0x27
 12960 1b7d 4A0E0000 		.4byte	.LASF291
 12961 1b81 01       		.byte	0x1
 12962 1b82 AB01     		.2byte	0x1ab
 12963 1b84 A2000000 		.4byte	0xa2
 12964 1b88 05       		.uleb128 0x5
 12965 1b89 03       		.byte	0x3
 12966 1b8a 00000000 		.4byte	patchNum
 12967 1b8e 07       		.uleb128 0x7
 12968 1b8f FD000000 		.4byte	0xfd
 12969 1b93 AA1B0000 		.4byte	0x1baa
 12970 1b97 08       		.uleb128 0x8
 12971 1b98 36010000 		.4byte	0x136
 12972 1b9c 06       		.byte	0x6
 12973 1b9d 08       		.uleb128 0x8
 12974 1b9e 36010000 		.4byte	0x136
 12975 1ba2 0A       		.byte	0xa
 12976 1ba3 08       		.uleb128 0x8
 12977 1ba4 36010000 		.4byte	0x136
 12978 1ba8 0B       		.byte	0xb
 12979 1ba9 00       		.byte	0
 12980 1baa 27       		.uleb128 0x27
 12981 1bab BE060000 		.4byte	.LASF292
 12982 1baf 01       		.byte	0x1
 12983 1bb0 B101     		.2byte	0x1b1
 12984 1bb2 8E1B0000 		.4byte	0x1b8e
 12985 1bb6 05       		.uleb128 0x5
 12986 1bb7 03       		.byte	0x3
 12987 1bb8 00000000 		.4byte	copedent
 12988 1bbc 07       		.uleb128 0x7
 12989 1bbd A2000000 		.4byte	0xa2
 12990 1bc1 D21B0000 		.4byte	0x1bd2
 12991 1bc5 08       		.uleb128 0x8
 12992 1bc6 36010000 		.4byte	0x136
 12993 1bca 06       		.byte	0x6
 12994 1bcb 08       		.uleb128 0x8
 12995 1bcc 36010000 		.4byte	0x136
 12996 1bd0 0D       		.byte	0xd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 277


 12997 1bd1 00       		.byte	0
 12998 1bd2 27       		.uleb128 0x27
 12999 1bd3 81010000 		.4byte	.LASF293
 13000 1bd7 01       		.byte	0x1
 13001 1bd8 B201     		.2byte	0x1b2
 13002 1bda BC1B0000 		.4byte	0x1bbc
 13003 1bde 05       		.uleb128 0x5
 13004 1bdf 03       		.byte	0x3
 13005 1be0 00000000 		.4byte	copedentNamesArray
 13006 1be4 07       		.uleb128 0x7
 13007 1be5 FD000000 		.4byte	0xfd
 13008 1be9 F41B0000 		.4byte	0x1bf4
 13009 1bed 08       		.uleb128 0x8
 13010 1bee 36010000 		.4byte	0x136
 13011 1bf2 0B       		.byte	0xb
 13012 1bf3 00       		.byte	0
 13013 1bf4 27       		.uleb128 0x27
 13014 1bf5 D1020000 		.4byte	.LASF294
 13015 1bf9 01       		.byte	0x1
 13016 1bfa B401     		.2byte	0x1b4
 13017 1bfc E41B0000 		.4byte	0x1be4
 13018 1c00 05       		.uleb128 0x5
 13019 1c01 03       		.byte	0x3
 13020 1c02 00000000 		.4byte	prevStringPitchBend
 13021 1c06 07       		.uleb128 0x7
 13022 1c07 FD000000 		.4byte	0xfd
 13023 1c0b 1C1C0000 		.4byte	0x1c1c
 13024 1c0f 08       		.uleb128 0x8
 13025 1c10 36010000 		.4byte	0x136
 13026 1c14 09       		.byte	0x9
 13027 1c15 08       		.uleb128 0x8
 13028 1c16 36010000 		.4byte	0x136
 13029 1c1a 0B       		.byte	0xb
 13030 1c1b 00       		.byte	0
 13031 1c1c 27       		.uleb128 0x27
 13032 1c1d 00110000 		.4byte	.LASF295
 13033 1c21 01       		.byte	0x1
 13034 1c22 B601     		.2byte	0x1b6
 13035 1c24 061C0000 		.4byte	0x1c06
 13036 1c28 05       		.uleb128 0x5
 13037 1c29 03       		.byte	0x3
 13038 1c2a 00000000 		.4byte	pedals
 13039 1c2e 27       		.uleb128 0x27
 13040 1c2f 4A0B0000 		.4byte	.LASF296
 13041 1c33 01       		.byte	0x1
 13042 1c34 B801     		.2byte	0x1b8
 13043 1c36 07190000 		.4byte	0x1907
 13044 1c3a 05       		.uleb128 0x5
 13045 1c3b 03       		.byte	0x3
 13046 1c3c 00000000 		.4byte	pedal_cc_assignments
 13047 1c40 27       		.uleb128 0x27
 13048 1c41 2F0C0000 		.4byte	.LASF297
 13049 1c45 01       		.byte	0x1
 13050 1c46 B901     		.2byte	0x1b9
 13051 1c48 E41B0000 		.4byte	0x1be4
 13052 1c4c 05       		.uleb128 0x5
 13053 1c4d 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 278


 13054 1c4e 00000000 		.4byte	openStringFrequencies
 13055 1c52 27       		.uleb128 0x27
 13056 1c53 4A0F0000 		.4byte	.LASF298
 13057 1c57 01       		.byte	0x1
 13058 1c58 BA01     		.2byte	0x1ba
 13059 1c5a E41B0000 		.4byte	0x1be4
 13060 1c5e 05       		.uleb128 0x5
 13061 1c5f 03       		.byte	0x3
 13062 1c60 00000000 		.4byte	stringMappedPositions
 13063 1c64 27       		.uleb128 0x27
 13064 1c65 9C070000 		.4byte	.LASF299
 13065 1c69 01       		.byte	0x1
 13066 1c6a BB01     		.2byte	0x1bb
 13067 1c6c E41B0000 		.4byte	0x1be4
 13068 1c70 05       		.uleb128 0x5
 13069 1c71 03       		.byte	0x3
 13070 1c72 00000000 		.4byte	invStringMappedPositions
 13071 1c76 27       		.uleb128 0x27
 13072 1c77 37110000 		.4byte	.LASF300
 13073 1c7b 01       		.byte	0x1
 13074 1c7c BC01     		.2byte	0x1bc
 13075 1c7e E41B0000 		.4byte	0x1be4
 13076 1c82 05       		.uleb128 0x5
 13077 1c83 03       		.byte	0x3
 13078 1c84 00000000 		.4byte	stringFrequencies
 13079 1c88 27       		.uleb128 0x27
 13080 1c89 59040000 		.4byte	.LASF301
 13081 1c8d 01       		.byte	0x1
 13082 1c8e BD01     		.2byte	0x1bd
 13083 1c90 E41B0000 		.4byte	0x1be4
 13084 1c94 05       		.uleb128 0x5
 13085 1c95 03       		.byte	0x3
 13086 1c96 00000000 		.4byte	stringOctave
 13087 1c9a 27       		.uleb128 0x27
 13088 1c9b 200A0000 		.4byte	.LASF302
 13089 1c9f 01       		.byte	0x1
 13090 1ca0 BE01     		.2byte	0x1be
 13091 1ca2 E41B0000 		.4byte	0x1be4
 13092 1ca6 05       		.uleb128 0x5
 13093 1ca7 03       		.byte	0x3
 13094 1ca8 00000000 		.4byte	stringPitch
 13095 1cac 27       		.uleb128 0x27
 13096 1cad EC0E0000 		.4byte	.LASF303
 13097 1cb1 01       		.byte	0x1
 13098 1cb2 BF01     		.2byte	0x1bf
 13099 1cb4 E41B0000 		.4byte	0x1be4
 13100 1cb8 05       		.uleb128 0x5
 13101 1cb9 03       		.byte	0x3
 13102 1cba 00000000 		.4byte	stringMIDI
 13103 1cbe 07       		.uleb128 0x7
 13104 1cbf 94000000 		.4byte	0x94
 13105 1cc3 CE1C0000 		.4byte	0x1cce
 13106 1cc7 08       		.uleb128 0x8
 13107 1cc8 36010000 		.4byte	0x136
 13108 1ccc 0B       		.byte	0xb
 13109 1ccd 00       		.byte	0
 13110 1cce 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 279


 13111 1ccf DE080000 		.4byte	.LASF304
 13112 1cd3 01       		.byte	0x1
 13113 1cd4 C001     		.2byte	0x1c0
 13114 1cd6 BE1C0000 		.4byte	0x1cbe
 13115 1cda 05       		.uleb128 0x5
 13116 1cdb 03       		.byte	0x3
 13117 1cdc 00000000 		.4byte	openStringMIDI_Int
 13118 1ce0 27       		.uleb128 0x27
 13119 1ce1 400E0000 		.4byte	.LASF305
 13120 1ce5 01       		.byte	0x1
 13121 1ce6 C101     		.2byte	0x1c1
 13122 1ce8 94000000 		.4byte	0x94
 13123 1cec 05       		.uleb128 0x5
 13124 1ced 03       		.byte	0x3
 13125 1cee 00000000 		.4byte	OLEDcount
 13126 1cf2 27       		.uleb128 0x27
 13127 1cf3 320A0000 		.4byte	.LASF306
 13128 1cf7 01       		.byte	0x1
 13129 1cf8 C301     		.2byte	0x1c3
 13130 1cfa 94000000 		.4byte	0x94
 13131 1cfe 05       		.uleb128 0x5
 13132 1cff 03       		.byte	0x3
 13133 1d00 00000000 		.4byte	mainOLEDWaitingToSend
 13134 1d04 27       		.uleb128 0x27
 13135 1d05 57010000 		.4byte	.LASF307
 13136 1d09 01       		.byte	0x1
 13137 1d0a C401     		.2byte	0x1c4
 13138 1d0c 94000000 		.4byte	0x94
 13139 1d10 05       		.uleb128 0x5
 13140 1d11 03       		.byte	0x3
 13141 1d12 00000000 		.4byte	macroOLEDWaitingToSend
 13142 1d16 07       		.uleb128 0x7
 13143 1d17 94000000 		.4byte	0x94
 13144 1d1b 261D0000 		.4byte	0x1d26
 13145 1d1f 08       		.uleb128 0x8
 13146 1d20 36010000 		.4byte	0x136
 13147 1d24 3F       		.byte	0x3f
 13148 1d25 00       		.byte	0
 13149 1d26 27       		.uleb128 0x27
 13150 1d27 BF040000 		.4byte	.LASF308
 13151 1d2b 01       		.byte	0x1
 13152 1d2c C601     		.2byte	0x1c6
 13153 1d2e 161D0000 		.4byte	0x1d16
 13154 1d32 05       		.uleb128 0x5
 13155 1d33 03       		.byte	0x3
 13156 1d34 00000000 		.4byte	presetAlreadyDisplayed
 13157 1d38 27       		.uleb128 0x27
 13158 1d39 530E0000 		.4byte	.LASF309
 13159 1d3d 01       		.byte	0x1
 13160 1d3e C801     		.2byte	0x1c8
 13161 1d40 471A0000 		.4byte	0x1a47
 13162 1d44 05       		.uleb128 0x5
 13163 1d45 03       		.byte	0x3
 13164 1d46 00000000 		.4byte	pedals_float
 13165 1d4a 27       		.uleb128 0x27
 13166 1d4b C70C0000 		.4byte	.LASF310
 13167 1d4f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 280


 13168 1d50 D001     		.2byte	0x1d0
 13169 1d52 94000000 		.4byte	0x94
 13170 1d56 05       		.uleb128 0x5
 13171 1d57 03       		.byte	0x3
 13172 1d58 00000000 		.4byte	currentNeck
 13173 1d5c 27       		.uleb128 0x27
 13174 1d5d D30C0000 		.4byte	.LASF311
 13175 1d61 01       		.byte	0x1
 13176 1d62 D201     		.2byte	0x1d2
 13177 1d64 94000000 		.4byte	0x94
 13178 1d68 05       		.uleb128 0x5
 13179 1d69 03       		.byte	0x3
 13180 1d6a 00000000 		.4byte	editMode
 13181 1d6e 27       		.uleb128 0x27
 13182 1d6f 950F0000 		.4byte	.LASF312
 13183 1d73 01       		.byte	0x1
 13184 1d74 D301     		.2byte	0x1d3
 13185 1d76 94000000 		.4byte	0x94
 13186 1d7a 05       		.uleb128 0x5
 13187 1d7b 03       		.byte	0x3
 13188 1d7c 00000000 		.4byte	calibrationMode
 13189 1d80 27       		.uleb128 0x27
 13190 1d81 D9070000 		.4byte	.LASF313
 13191 1d85 01       		.byte	0x1
 13192 1d86 0908     		.2byte	0x809
 13193 1d88 BE1C0000 		.4byte	0x1cbe
 13194 1d8c 05       		.uleb128 0x5
 13195 1d8d 03       		.byte	0x3
 13196 1d8e 00000000 		.4byte	prevNotes
 13197 1d92 27       		.uleb128 0x27
 13198 1d93 A80B0000 		.4byte	.LASF314
 13199 1d97 01       		.byte	0x1
 13200 1d98 7E08     		.2byte	0x87e
 13201 1d9a 03020000 		.4byte	0x203
 13202 1d9e 05       		.uleb128 0x5
 13203 1d9f 03       		.byte	0x3
 13204 1da0 00000000 		.4byte	checkStatus
 13205 1da4 27       		.uleb128 0x27
 13206 1da5 290D0000 		.4byte	.LASF315
 13207 1da9 01       		.byte	0x1
 13208 1daa 7F08     		.2byte	0x87f
 13209 1dac 08020000 		.4byte	0x208
 13210 1db0 05       		.uleb128 0x5
 13211 1db1 03       		.byte	0x3
 13212 1db2 00000000 		.4byte	checkBase
 13213 1db6 27       		.uleb128 0x27
 13214 1db7 00070000 		.4byte	.LASF316
 13215 1dbb 01       		.byte	0x1
 13216 1dbc 8308     		.2byte	0x883
 13217 1dbe 94000000 		.4byte	0x94
 13218 1dc2 05       		.uleb128 0x5
 13219 1dc3 03       		.byte	0x3
 13220 1dc4 00000000 		.4byte	SPI_errors
 13221 1dc8 07       		.uleb128 0x7
 13222 1dc9 03020000 		.4byte	0x203
 13223 1dcd D81D0000 		.4byte	0x1dd8
 13224 1dd1 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 281


 13225 1dd2 36010000 		.4byte	0x136
 13226 1dd6 03       		.byte	0x3
 13227 1dd7 00       		.byte	0
 13228 1dd8 27       		.uleb128 0x27
 13229 1dd9 FF0B0000 		.4byte	.LASF86
 13230 1ddd 01       		.byte	0x1
 13231 1dde FF09     		.2byte	0x9ff
 13232 1de0 EA1D0000 		.4byte	0x1dea
 13233 1de4 05       		.uleb128 0x5
 13234 1de5 03       		.byte	0x3
 13235 1de6 00000000 		.4byte	tempMIDI
 13236 1dea 06       		.uleb128 0x6
 13237 1deb C81D0000 		.4byte	0x1dc8
 13238 1def 27       		.uleb128 0x27
 13239 1df0 1F000000 		.4byte	.LASF317
 13240 1df4 01       		.byte	0x1
 13241 1df5 000A     		.2byte	0xa00
 13242 1df7 03020000 		.4byte	0x203
 13243 1dfb 05       		.uleb128 0x5
 13244 1dfc 03       		.byte	0x3
 13245 1dfd 00000000 		.4byte	firstSysex
 13246 1e01 27       		.uleb128 0x27
 13247 1e02 4A060000 		.4byte	.LASF318
 13248 1e06 01       		.byte	0x1
 13249 1e07 010A     		.2byte	0xa01
 13250 1e09 131E0000 		.4byte	0x1e13
 13251 1e0d 05       		.uleb128 0x5
 13252 1e0e 03       		.byte	0x3
 13253 1e0f 00000000 		.4byte	sysexPointerMask
 13254 1e13 24       		.uleb128 0x24
 13255 1e14 B8000000 		.4byte	0xb8
 13256 1e18 00       		.byte	0
 13257              		.section	.debug_abbrev,"",%progbits
 13258              	.Ldebug_abbrev0:
 13259 0000 01       		.uleb128 0x1
 13260 0001 11       		.uleb128 0x11
 13261 0002 01       		.byte	0x1
 13262 0003 25       		.uleb128 0x25
 13263 0004 0E       		.uleb128 0xe
 13264 0005 13       		.uleb128 0x13
 13265 0006 0B       		.uleb128 0xb
 13266 0007 03       		.uleb128 0x3
 13267 0008 0E       		.uleb128 0xe
 13268 0009 1B       		.uleb128 0x1b
 13269 000a 0E       		.uleb128 0xe
 13270 000b 55       		.uleb128 0x55
 13271 000c 17       		.uleb128 0x17
 13272 000d 11       		.uleb128 0x11
 13273 000e 01       		.uleb128 0x1
 13274 000f 10       		.uleb128 0x10
 13275 0010 17       		.uleb128 0x17
 13276 0011 00       		.byte	0
 13277 0012 00       		.byte	0
 13278 0013 02       		.uleb128 0x2
 13279 0014 24       		.uleb128 0x24
 13280 0015 00       		.byte	0
 13281 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 282


 13282 0017 0B       		.uleb128 0xb
 13283 0018 3E       		.uleb128 0x3e
 13284 0019 0B       		.uleb128 0xb
 13285 001a 03       		.uleb128 0x3
 13286 001b 0E       		.uleb128 0xe
 13287 001c 00       		.byte	0
 13288 001d 00       		.byte	0
 13289 001e 03       		.uleb128 0x3
 13290 001f 16       		.uleb128 0x16
 13291 0020 00       		.byte	0
 13292 0021 03       		.uleb128 0x3
 13293 0022 0E       		.uleb128 0xe
 13294 0023 3A       		.uleb128 0x3a
 13295 0024 0B       		.uleb128 0xb
 13296 0025 3B       		.uleb128 0x3b
 13297 0026 0B       		.uleb128 0xb
 13298 0027 49       		.uleb128 0x49
 13299 0028 13       		.uleb128 0x13
 13300 0029 00       		.byte	0
 13301 002a 00       		.byte	0
 13302 002b 04       		.uleb128 0x4
 13303 002c 24       		.uleb128 0x24
 13304 002d 00       		.byte	0
 13305 002e 0B       		.uleb128 0xb
 13306 002f 0B       		.uleb128 0xb
 13307 0030 3E       		.uleb128 0x3e
 13308 0031 0B       		.uleb128 0xb
 13309 0032 03       		.uleb128 0x3
 13310 0033 08       		.uleb128 0x8
 13311 0034 00       		.byte	0
 13312 0035 00       		.byte	0
 13313 0036 05       		.uleb128 0x5
 13314 0037 16       		.uleb128 0x16
 13315 0038 00       		.byte	0
 13316 0039 03       		.uleb128 0x3
 13317 003a 0E       		.uleb128 0xe
 13318 003b 3A       		.uleb128 0x3a
 13319 003c 0B       		.uleb128 0xb
 13320 003d 3B       		.uleb128 0x3b
 13321 003e 05       		.uleb128 0x5
 13322 003f 49       		.uleb128 0x49
 13323 0040 13       		.uleb128 0x13
 13324 0041 00       		.byte	0
 13325 0042 00       		.byte	0
 13326 0043 06       		.uleb128 0x6
 13327 0044 35       		.uleb128 0x35
 13328 0045 00       		.byte	0
 13329 0046 49       		.uleb128 0x49
 13330 0047 13       		.uleb128 0x13
 13331 0048 00       		.byte	0
 13332 0049 00       		.byte	0
 13333 004a 07       		.uleb128 0x7
 13334 004b 01       		.uleb128 0x1
 13335 004c 01       		.byte	0x1
 13336 004d 49       		.uleb128 0x49
 13337 004e 13       		.uleb128 0x13
 13338 004f 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 283


 13339 0050 13       		.uleb128 0x13
 13340 0051 00       		.byte	0
 13341 0052 00       		.byte	0
 13342 0053 08       		.uleb128 0x8
 13343 0054 21       		.uleb128 0x21
 13344 0055 00       		.byte	0
 13345 0056 49       		.uleb128 0x49
 13346 0057 13       		.uleb128 0x13
 13347 0058 2F       		.uleb128 0x2f
 13348 0059 0B       		.uleb128 0xb
 13349 005a 00       		.byte	0
 13350 005b 00       		.byte	0
 13351 005c 09       		.uleb128 0x9
 13352 005d 13       		.uleb128 0x13
 13353 005e 01       		.byte	0x1
 13354 005f 0B       		.uleb128 0xb
 13355 0060 0B       		.uleb128 0xb
 13356 0061 3A       		.uleb128 0x3a
 13357 0062 0B       		.uleb128 0xb
 13358 0063 3B       		.uleb128 0x3b
 13359 0064 05       		.uleb128 0x5
 13360 0065 01       		.uleb128 0x1
 13361 0066 13       		.uleb128 0x13
 13362 0067 00       		.byte	0
 13363 0068 00       		.byte	0
 13364 0069 0A       		.uleb128 0xa
 13365 006a 0D       		.uleb128 0xd
 13366 006b 00       		.byte	0
 13367 006c 03       		.uleb128 0x3
 13368 006d 0E       		.uleb128 0xe
 13369 006e 3A       		.uleb128 0x3a
 13370 006f 0B       		.uleb128 0xb
 13371 0070 3B       		.uleb128 0x3b
 13372 0071 05       		.uleb128 0x5
 13373 0072 49       		.uleb128 0x49
 13374 0073 13       		.uleb128 0x13
 13375 0074 38       		.uleb128 0x38
 13376 0075 0B       		.uleb128 0xb
 13377 0076 00       		.byte	0
 13378 0077 00       		.byte	0
 13379 0078 0B       		.uleb128 0xb
 13380 0079 04       		.uleb128 0x4
 13381 007a 01       		.byte	0x1
 13382 007b 0B       		.uleb128 0xb
 13383 007c 0B       		.uleb128 0xb
 13384 007d 49       		.uleb128 0x49
 13385 007e 13       		.uleb128 0x13
 13386 007f 3A       		.uleb128 0x3a
 13387 0080 0B       		.uleb128 0xb
 13388 0081 3B       		.uleb128 0x3b
 13389 0082 05       		.uleb128 0x5
 13390 0083 01       		.uleb128 0x1
 13391 0084 13       		.uleb128 0x13
 13392 0085 00       		.byte	0
 13393 0086 00       		.byte	0
 13394 0087 0C       		.uleb128 0xc
 13395 0088 28       		.uleb128 0x28
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 284


 13396 0089 00       		.byte	0
 13397 008a 03       		.uleb128 0x3
 13398 008b 0E       		.uleb128 0xe
 13399 008c 1C       		.uleb128 0x1c
 13400 008d 0B       		.uleb128 0xb
 13401 008e 00       		.byte	0
 13402 008f 00       		.byte	0
 13403 0090 0D       		.uleb128 0xd
 13404 0091 04       		.uleb128 0x4
 13405 0092 01       		.byte	0x1
 13406 0093 03       		.uleb128 0x3
 13407 0094 0E       		.uleb128 0xe
 13408 0095 0B       		.uleb128 0xb
 13409 0096 0B       		.uleb128 0xb
 13410 0097 49       		.uleb128 0x49
 13411 0098 13       		.uleb128 0x13
 13412 0099 3A       		.uleb128 0x3a
 13413 009a 0B       		.uleb128 0xb
 13414 009b 3B       		.uleb128 0x3b
 13415 009c 0B       		.uleb128 0xb
 13416 009d 01       		.uleb128 0x1
 13417 009e 13       		.uleb128 0x13
 13418 009f 00       		.byte	0
 13419 00a0 00       		.byte	0
 13420 00a1 0E       		.uleb128 0xe
 13421 00a2 17       		.uleb128 0x17
 13422 00a3 01       		.byte	0x1
 13423 00a4 03       		.uleb128 0x3
 13424 00a5 0E       		.uleb128 0xe
 13425 00a6 0B       		.uleb128 0xb
 13426 00a7 0B       		.uleb128 0xb
 13427 00a8 3A       		.uleb128 0x3a
 13428 00a9 0B       		.uleb128 0xb
 13429 00aa 3B       		.uleb128 0x3b
 13430 00ab 0B       		.uleb128 0xb
 13431 00ac 01       		.uleb128 0x1
 13432 00ad 13       		.uleb128 0x13
 13433 00ae 00       		.byte	0
 13434 00af 00       		.byte	0
 13435 00b0 0F       		.uleb128 0xf
 13436 00b1 0D       		.uleb128 0xd
 13437 00b2 00       		.byte	0
 13438 00b3 03       		.uleb128 0x3
 13439 00b4 08       		.uleb128 0x8
 13440 00b5 3A       		.uleb128 0x3a
 13441 00b6 0B       		.uleb128 0xb
 13442 00b7 3B       		.uleb128 0x3b
 13443 00b8 0B       		.uleb128 0xb
 13444 00b9 49       		.uleb128 0x49
 13445 00ba 13       		.uleb128 0x13
 13446 00bb 00       		.byte	0
 13447 00bc 00       		.byte	0
 13448 00bd 10       		.uleb128 0x10
 13449 00be 2E       		.uleb128 0x2e
 13450 00bf 01       		.byte	0x1
 13451 00c0 3F       		.uleb128 0x3f
 13452 00c1 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 285


 13453 00c2 03       		.uleb128 0x3
 13454 00c3 0E       		.uleb128 0xe
 13455 00c4 3A       		.uleb128 0x3a
 13456 00c5 0B       		.uleb128 0xb
 13457 00c6 3B       		.uleb128 0x3b
 13458 00c7 0B       		.uleb128 0xb
 13459 00c8 27       		.uleb128 0x27
 13460 00c9 19       		.uleb128 0x19
 13461 00ca 11       		.uleb128 0x11
 13462 00cb 01       		.uleb128 0x1
 13463 00cc 12       		.uleb128 0x12
 13464 00cd 06       		.uleb128 0x6
 13465 00ce 40       		.uleb128 0x40
 13466 00cf 18       		.uleb128 0x18
 13467 00d0 9642     		.uleb128 0x2116
 13468 00d2 19       		.uleb128 0x19
 13469 00d3 01       		.uleb128 0x1
 13470 00d4 13       		.uleb128 0x13
 13471 00d5 00       		.byte	0
 13472 00d6 00       		.byte	0
 13473 00d7 11       		.uleb128 0x11
 13474 00d8 0B       		.uleb128 0xb
 13475 00d9 01       		.byte	0x1
 13476 00da 11       		.uleb128 0x11
 13477 00db 01       		.uleb128 0x1
 13478 00dc 12       		.uleb128 0x12
 13479 00dd 06       		.uleb128 0x6
 13480 00de 00       		.byte	0
 13481 00df 00       		.byte	0
 13482 00e0 12       		.uleb128 0x12
 13483 00e1 34       		.uleb128 0x34
 13484 00e2 00       		.byte	0
 13485 00e3 03       		.uleb128 0x3
 13486 00e4 08       		.uleb128 0x8
 13487 00e5 3A       		.uleb128 0x3a
 13488 00e6 0B       		.uleb128 0xb
 13489 00e7 3B       		.uleb128 0x3b
 13490 00e8 0B       		.uleb128 0xb
 13491 00e9 49       		.uleb128 0x49
 13492 00ea 13       		.uleb128 0x13
 13493 00eb 02       		.uleb128 0x2
 13494 00ec 18       		.uleb128 0x18
 13495 00ed 00       		.byte	0
 13496 00ee 00       		.byte	0
 13497 00ef 13       		.uleb128 0x13
 13498 00f0 2E       		.uleb128 0x2e
 13499 00f1 00       		.byte	0
 13500 00f2 3F       		.uleb128 0x3f
 13501 00f3 19       		.uleb128 0x19
 13502 00f4 03       		.uleb128 0x3
 13503 00f5 0E       		.uleb128 0xe
 13504 00f6 3A       		.uleb128 0x3a
 13505 00f7 0B       		.uleb128 0xb
 13506 00f8 3B       		.uleb128 0x3b
 13507 00f9 0B       		.uleb128 0xb
 13508 00fa 27       		.uleb128 0x27
 13509 00fb 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 286


 13510 00fc 11       		.uleb128 0x11
 13511 00fd 01       		.uleb128 0x1
 13512 00fe 12       		.uleb128 0x12
 13513 00ff 06       		.uleb128 0x6
 13514 0100 40       		.uleb128 0x40
 13515 0101 18       		.uleb128 0x18
 13516 0102 9642     		.uleb128 0x2116
 13517 0104 19       		.uleb128 0x19
 13518 0105 00       		.byte	0
 13519 0106 00       		.byte	0
 13520 0107 14       		.uleb128 0x14
 13521 0108 2E       		.uleb128 0x2e
 13522 0109 00       		.byte	0
 13523 010a 3F       		.uleb128 0x3f
 13524 010b 19       		.uleb128 0x19
 13525 010c 03       		.uleb128 0x3
 13526 010d 0E       		.uleb128 0xe
 13527 010e 3A       		.uleb128 0x3a
 13528 010f 0B       		.uleb128 0xb
 13529 0110 3B       		.uleb128 0x3b
 13530 0111 05       		.uleb128 0x5
 13531 0112 27       		.uleb128 0x27
 13532 0113 19       		.uleb128 0x19
 13533 0114 11       		.uleb128 0x11
 13534 0115 01       		.uleb128 0x1
 13535 0116 12       		.uleb128 0x12
 13536 0117 06       		.uleb128 0x6
 13537 0118 40       		.uleb128 0x40
 13538 0119 18       		.uleb128 0x18
 13539 011a 9642     		.uleb128 0x2116
 13540 011c 19       		.uleb128 0x19
 13541 011d 00       		.byte	0
 13542 011e 00       		.byte	0
 13543 011f 15       		.uleb128 0x15
 13544 0120 2E       		.uleb128 0x2e
 13545 0121 01       		.byte	0x1
 13546 0122 3F       		.uleb128 0x3f
 13547 0123 19       		.uleb128 0x19
 13548 0124 03       		.uleb128 0x3
 13549 0125 0E       		.uleb128 0xe
 13550 0126 3A       		.uleb128 0x3a
 13551 0127 0B       		.uleb128 0xb
 13552 0128 3B       		.uleb128 0x3b
 13553 0129 05       		.uleb128 0x5
 13554 012a 27       		.uleb128 0x27
 13555 012b 19       		.uleb128 0x19
 13556 012c 49       		.uleb128 0x49
 13557 012d 13       		.uleb128 0x13
 13558 012e 11       		.uleb128 0x11
 13559 012f 01       		.uleb128 0x1
 13560 0130 12       		.uleb128 0x12
 13561 0131 06       		.uleb128 0x6
 13562 0132 40       		.uleb128 0x40
 13563 0133 18       		.uleb128 0x18
 13564 0134 9642     		.uleb128 0x2116
 13565 0136 19       		.uleb128 0x19
 13566 0137 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 287


 13567 0138 13       		.uleb128 0x13
 13568 0139 00       		.byte	0
 13569 013a 00       		.byte	0
 13570 013b 16       		.uleb128 0x16
 13571 013c 05       		.uleb128 0x5
 13572 013d 00       		.byte	0
 13573 013e 03       		.uleb128 0x3
 13574 013f 08       		.uleb128 0x8
 13575 0140 3A       		.uleb128 0x3a
 13576 0141 0B       		.uleb128 0xb
 13577 0142 3B       		.uleb128 0x3b
 13578 0143 05       		.uleb128 0x5
 13579 0144 49       		.uleb128 0x49
 13580 0145 13       		.uleb128 0x13
 13581 0146 02       		.uleb128 0x2
 13582 0147 18       		.uleb128 0x18
 13583 0148 00       		.byte	0
 13584 0149 00       		.byte	0
 13585 014a 17       		.uleb128 0x17
 13586 014b 34       		.uleb128 0x34
 13587 014c 00       		.byte	0
 13588 014d 03       		.uleb128 0x3
 13589 014e 0E       		.uleb128 0xe
 13590 014f 3A       		.uleb128 0x3a
 13591 0150 0B       		.uleb128 0xb
 13592 0151 3B       		.uleb128 0x3b
 13593 0152 05       		.uleb128 0x5
 13594 0153 49       		.uleb128 0x49
 13595 0154 13       		.uleb128 0x13
 13596 0155 02       		.uleb128 0x2
 13597 0156 18       		.uleb128 0x18
 13598 0157 00       		.byte	0
 13599 0158 00       		.byte	0
 13600 0159 18       		.uleb128 0x18
 13601 015a 05       		.uleb128 0x5
 13602 015b 00       		.byte	0
 13603 015c 03       		.uleb128 0x3
 13604 015d 0E       		.uleb128 0xe
 13605 015e 3A       		.uleb128 0x3a
 13606 015f 0B       		.uleb128 0xb
 13607 0160 3B       		.uleb128 0x3b
 13608 0161 05       		.uleb128 0x5
 13609 0162 49       		.uleb128 0x49
 13610 0163 13       		.uleb128 0x13
 13611 0164 02       		.uleb128 0x2
 13612 0165 18       		.uleb128 0x18
 13613 0166 00       		.byte	0
 13614 0167 00       		.byte	0
 13615 0168 19       		.uleb128 0x19
 13616 0169 34       		.uleb128 0x34
 13617 016a 00       		.byte	0
 13618 016b 03       		.uleb128 0x3
 13619 016c 08       		.uleb128 0x8
 13620 016d 3A       		.uleb128 0x3a
 13621 016e 0B       		.uleb128 0xb
 13622 016f 3B       		.uleb128 0x3b
 13623 0170 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 288


 13624 0171 49       		.uleb128 0x49
 13625 0172 13       		.uleb128 0x13
 13626 0173 02       		.uleb128 0x2
 13627 0174 18       		.uleb128 0x18
 13628 0175 00       		.byte	0
 13629 0176 00       		.byte	0
 13630 0177 1A       		.uleb128 0x1a
 13631 0178 2E       		.uleb128 0x2e
 13632 0179 01       		.byte	0x1
 13633 017a 3F       		.uleb128 0x3f
 13634 017b 19       		.uleb128 0x19
 13635 017c 03       		.uleb128 0x3
 13636 017d 08       		.uleb128 0x8
 13637 017e 3A       		.uleb128 0x3a
 13638 017f 0B       		.uleb128 0xb
 13639 0180 3B       		.uleb128 0x3b
 13640 0181 05       		.uleb128 0x5
 13641 0182 27       		.uleb128 0x27
 13642 0183 19       		.uleb128 0x19
 13643 0184 49       		.uleb128 0x49
 13644 0185 13       		.uleb128 0x13
 13645 0186 11       		.uleb128 0x11
 13646 0187 01       		.uleb128 0x1
 13647 0188 12       		.uleb128 0x12
 13648 0189 06       		.uleb128 0x6
 13649 018a 40       		.uleb128 0x40
 13650 018b 18       		.uleb128 0x18
 13651 018c 9642     		.uleb128 0x2116
 13652 018e 19       		.uleb128 0x19
 13653 018f 01       		.uleb128 0x1
 13654 0190 13       		.uleb128 0x13
 13655 0191 00       		.byte	0
 13656 0192 00       		.byte	0
 13657 0193 1B       		.uleb128 0x1b
 13658 0194 2E       		.uleb128 0x2e
 13659 0195 00       		.byte	0
 13660 0196 3F       		.uleb128 0x3f
 13661 0197 19       		.uleb128 0x19
 13662 0198 03       		.uleb128 0x3
 13663 0199 0E       		.uleb128 0xe
 13664 019a 3A       		.uleb128 0x3a
 13665 019b 0B       		.uleb128 0xb
 13666 019c 3B       		.uleb128 0x3b
 13667 019d 05       		.uleb128 0x5
 13668 019e 11       		.uleb128 0x11
 13669 019f 01       		.uleb128 0x1
 13670 01a0 12       		.uleb128 0x12
 13671 01a1 06       		.uleb128 0x6
 13672 01a2 40       		.uleb128 0x40
 13673 01a3 18       		.uleb128 0x18
 13674 01a4 9742     		.uleb128 0x2117
 13675 01a6 19       		.uleb128 0x19
 13676 01a7 00       		.byte	0
 13677 01a8 00       		.byte	0
 13678 01a9 1C       		.uleb128 0x1c
 13679 01aa 2E       		.uleb128 0x2e
 13680 01ab 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 289


 13681 01ac 3F       		.uleb128 0x3f
 13682 01ad 19       		.uleb128 0x19
 13683 01ae 03       		.uleb128 0x3
 13684 01af 0E       		.uleb128 0xe
 13685 01b0 3A       		.uleb128 0x3a
 13686 01b1 0B       		.uleb128 0xb
 13687 01b2 3B       		.uleb128 0x3b
 13688 01b3 05       		.uleb128 0x5
 13689 01b4 11       		.uleb128 0x11
 13690 01b5 01       		.uleb128 0x1
 13691 01b6 12       		.uleb128 0x12
 13692 01b7 06       		.uleb128 0x6
 13693 01b8 40       		.uleb128 0x40
 13694 01b9 18       		.uleb128 0x18
 13695 01ba 9642     		.uleb128 0x2116
 13696 01bc 19       		.uleb128 0x19
 13697 01bd 01       		.uleb128 0x1
 13698 01be 13       		.uleb128 0x13
 13699 01bf 00       		.byte	0
 13700 01c0 00       		.byte	0
 13701 01c1 1D       		.uleb128 0x1d
 13702 01c2 0B       		.uleb128 0xb
 13703 01c3 01       		.byte	0x1
 13704 01c4 11       		.uleb128 0x11
 13705 01c5 01       		.uleb128 0x1
 13706 01c6 12       		.uleb128 0x12
 13707 01c7 06       		.uleb128 0x6
 13708 01c8 01       		.uleb128 0x1
 13709 01c9 13       		.uleb128 0x13
 13710 01ca 00       		.byte	0
 13711 01cb 00       		.byte	0
 13712 01cc 1E       		.uleb128 0x1e
 13713 01cd 2E       		.uleb128 0x2e
 13714 01ce 00       		.byte	0
 13715 01cf 3F       		.uleb128 0x3f
 13716 01d0 19       		.uleb128 0x19
 13717 01d1 03       		.uleb128 0x3
 13718 01d2 0E       		.uleb128 0xe
 13719 01d3 3A       		.uleb128 0x3a
 13720 01d4 0B       		.uleb128 0xb
 13721 01d5 3B       		.uleb128 0x3b
 13722 01d6 05       		.uleb128 0x5
 13723 01d7 11       		.uleb128 0x11
 13724 01d8 01       		.uleb128 0x1
 13725 01d9 12       		.uleb128 0x12
 13726 01da 06       		.uleb128 0x6
 13727 01db 40       		.uleb128 0x40
 13728 01dc 18       		.uleb128 0x18
 13729 01dd 9642     		.uleb128 0x2116
 13730 01df 19       		.uleb128 0x19
 13731 01e0 00       		.byte	0
 13732 01e1 00       		.byte	0
 13733 01e2 1F       		.uleb128 0x1f
 13734 01e3 2E       		.uleb128 0x2e
 13735 01e4 01       		.byte	0x1
 13736 01e5 3F       		.uleb128 0x3f
 13737 01e6 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 290


 13738 01e7 03       		.uleb128 0x3
 13739 01e8 0E       		.uleb128 0xe
 13740 01e9 3A       		.uleb128 0x3a
 13741 01ea 0B       		.uleb128 0xb
 13742 01eb 3B       		.uleb128 0x3b
 13743 01ec 05       		.uleb128 0x5
 13744 01ed 27       		.uleb128 0x27
 13745 01ee 19       		.uleb128 0x19
 13746 01ef 11       		.uleb128 0x11
 13747 01f0 01       		.uleb128 0x1
 13748 01f1 12       		.uleb128 0x12
 13749 01f2 06       		.uleb128 0x6
 13750 01f3 40       		.uleb128 0x40
 13751 01f4 18       		.uleb128 0x18
 13752 01f5 9642     		.uleb128 0x2116
 13753 01f7 19       		.uleb128 0x19
 13754 01f8 01       		.uleb128 0x1
 13755 01f9 13       		.uleb128 0x13
 13756 01fa 00       		.byte	0
 13757 01fb 00       		.byte	0
 13758 01fc 20       		.uleb128 0x20
 13759 01fd 0F       		.uleb128 0xf
 13760 01fe 00       		.byte	0
 13761 01ff 0B       		.uleb128 0xb
 13762 0200 0B       		.uleb128 0xb
 13763 0201 49       		.uleb128 0x49
 13764 0202 13       		.uleb128 0x13
 13765 0203 00       		.byte	0
 13766 0204 00       		.byte	0
 13767 0205 21       		.uleb128 0x21
 13768 0206 34       		.uleb128 0x34
 13769 0207 00       		.byte	0
 13770 0208 03       		.uleb128 0x3
 13771 0209 0E       		.uleb128 0xe
 13772 020a 3A       		.uleb128 0x3a
 13773 020b 0B       		.uleb128 0xb
 13774 020c 3B       		.uleb128 0x3b
 13775 020d 0B       		.uleb128 0xb
 13776 020e 49       		.uleb128 0x49
 13777 020f 13       		.uleb128 0x13
 13778 0210 02       		.uleb128 0x2
 13779 0211 18       		.uleb128 0x18
 13780 0212 00       		.byte	0
 13781 0213 00       		.byte	0
 13782 0214 22       		.uleb128 0x22
 13783 0215 34       		.uleb128 0x34
 13784 0216 00       		.byte	0
 13785 0217 03       		.uleb128 0x3
 13786 0218 0E       		.uleb128 0xe
 13787 0219 3A       		.uleb128 0x3a
 13788 021a 0B       		.uleb128 0xb
 13789 021b 3B       		.uleb128 0x3b
 13790 021c 0B       		.uleb128 0xb
 13791 021d 49       		.uleb128 0x49
 13792 021e 13       		.uleb128 0x13
 13793 021f 3F       		.uleb128 0x3f
 13794 0220 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 291


 13795 0221 3C       		.uleb128 0x3c
 13796 0222 19       		.uleb128 0x19
 13797 0223 00       		.byte	0
 13798 0224 00       		.byte	0
 13799 0225 23       		.uleb128 0x23
 13800 0226 21       		.uleb128 0x21
 13801 0227 00       		.byte	0
 13802 0228 49       		.uleb128 0x49
 13803 0229 13       		.uleb128 0x13
 13804 022a 2F       		.uleb128 0x2f
 13805 022b 05       		.uleb128 0x5
 13806 022c 00       		.byte	0
 13807 022d 00       		.byte	0
 13808 022e 24       		.uleb128 0x24
 13809 022f 26       		.uleb128 0x26
 13810 0230 00       		.byte	0
 13811 0231 49       		.uleb128 0x49
 13812 0232 13       		.uleb128 0x13
 13813 0233 00       		.byte	0
 13814 0234 00       		.byte	0
 13815 0235 25       		.uleb128 0x25
 13816 0236 34       		.uleb128 0x34
 13817 0237 00       		.byte	0
 13818 0238 03       		.uleb128 0x3
 13819 0239 0E       		.uleb128 0xe
 13820 023a 3A       		.uleb128 0x3a
 13821 023b 0B       		.uleb128 0xb
 13822 023c 3B       		.uleb128 0x3b
 13823 023d 0B       		.uleb128 0xb
 13824 023e 49       		.uleb128 0x49
 13825 023f 13       		.uleb128 0x13
 13826 0240 3F       		.uleb128 0x3f
 13827 0241 19       		.uleb128 0x19
 13828 0242 02       		.uleb128 0x2
 13829 0243 18       		.uleb128 0x18
 13830 0244 00       		.byte	0
 13831 0245 00       		.byte	0
 13832 0246 26       		.uleb128 0x26
 13833 0247 34       		.uleb128 0x34
 13834 0248 00       		.byte	0
 13835 0249 03       		.uleb128 0x3
 13836 024a 0E       		.uleb128 0xe
 13837 024b 3A       		.uleb128 0x3a
 13838 024c 0B       		.uleb128 0xb
 13839 024d 3B       		.uleb128 0x3b
 13840 024e 05       		.uleb128 0x5
 13841 024f 49       		.uleb128 0x49
 13842 0250 13       		.uleb128 0x13
 13843 0251 3F       		.uleb128 0x3f
 13844 0252 19       		.uleb128 0x19
 13845 0253 3C       		.uleb128 0x3c
 13846 0254 19       		.uleb128 0x19
 13847 0255 00       		.byte	0
 13848 0256 00       		.byte	0
 13849 0257 27       		.uleb128 0x27
 13850 0258 34       		.uleb128 0x34
 13851 0259 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 292


 13852 025a 03       		.uleb128 0x3
 13853 025b 0E       		.uleb128 0xe
 13854 025c 3A       		.uleb128 0x3a
 13855 025d 0B       		.uleb128 0xb
 13856 025e 3B       		.uleb128 0x3b
 13857 025f 05       		.uleb128 0x5
 13858 0260 49       		.uleb128 0x49
 13859 0261 13       		.uleb128 0x13
 13860 0262 3F       		.uleb128 0x3f
 13861 0263 19       		.uleb128 0x19
 13862 0264 02       		.uleb128 0x2
 13863 0265 18       		.uleb128 0x18
 13864 0266 00       		.byte	0
 13865 0267 00       		.byte	0
 13866 0268 28       		.uleb128 0x28
 13867 0269 34       		.uleb128 0x34
 13868 026a 00       		.byte	0
 13869 026b 03       		.uleb128 0x3
 13870 026c 08       		.uleb128 0x8
 13871 026d 3A       		.uleb128 0x3a
 13872 026e 0B       		.uleb128 0xb
 13873 026f 3B       		.uleb128 0x3b
 13874 0270 0B       		.uleb128 0xb
 13875 0271 49       		.uleb128 0x49
 13876 0272 13       		.uleb128 0x13
 13877 0273 3F       		.uleb128 0x3f
 13878 0274 19       		.uleb128 0x19
 13879 0275 02       		.uleb128 0x2
 13880 0276 18       		.uleb128 0x18
 13881 0277 00       		.byte	0
 13882 0278 00       		.byte	0
 13883 0279 29       		.uleb128 0x29
 13884 027a 34       		.uleb128 0x34
 13885 027b 00       		.byte	0
 13886 027c 03       		.uleb128 0x3
 13887 027d 08       		.uleb128 0x8
 13888 027e 3A       		.uleb128 0x3a
 13889 027f 0B       		.uleb128 0xb
 13890 0280 3B       		.uleb128 0x3b
 13891 0281 05       		.uleb128 0x5
 13892 0282 49       		.uleb128 0x49
 13893 0283 13       		.uleb128 0x13
 13894 0284 3F       		.uleb128 0x3f
 13895 0285 19       		.uleb128 0x19
 13896 0286 02       		.uleb128 0x2
 13897 0287 18       		.uleb128 0x18
 13898 0288 00       		.byte	0
 13899 0289 00       		.byte	0
 13900 028a 00       		.byte	0
 13901              		.section	.debug_aranges,"",%progbits
 13902 0000 04010000 		.4byte	0x104
 13903 0004 0200     		.2byte	0x2
 13904 0006 00000000 		.4byte	.Ldebug_info0
 13905 000a 04       		.byte	0x4
 13906 000b 00       		.byte	0
 13907 000c 0000     		.2byte	0
 13908 000e 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 293


 13909 0010 00000000 		.4byte	.LFB64
 13910 0014 74010000 		.4byte	.LFE64-.LFB64
 13911 0018 00000000 		.4byte	.LFB65
 13912 001c 9C000000 		.4byte	.LFE65-.LFB65
 13913 0020 00000000 		.4byte	.LFB66
 13914 0024 14000000 		.4byte	.LFE66-.LFB66
 13915 0028 00000000 		.4byte	.LFB67
 13916 002c 7C000000 		.4byte	.LFE67-.LFB67
 13917 0030 00000000 		.4byte	.LFB68
 13918 0034 58000000 		.4byte	.LFE68-.LFB68
 13919 0038 00000000 		.4byte	.LFB69
 13920 003c 68000000 		.4byte	.LFE69-.LFB69
 13921 0040 00000000 		.4byte	.LFB70
 13922 0044 4C000000 		.4byte	.LFE70-.LFB70
 13923 0048 00000000 		.4byte	.LFB71
 13924 004c 46000000 		.4byte	.LFE71-.LFB71
 13925 0050 00000000 		.4byte	.LFB72
 13926 0054 56000000 		.4byte	.LFE72-.LFB72
 13927 0058 00000000 		.4byte	.LFB73
 13928 005c 0C000000 		.4byte	.LFE73-.LFB73
 13929 0060 00000000 		.4byte	.LFB74
 13930 0064 0C010000 		.4byte	.LFE74-.LFB74
 13931 0068 00000000 		.4byte	.LFB75
 13932 006c 80200000 		.4byte	.LFE75-.LFB75
 13933 0070 00000000 		.4byte	.LFB76
 13934 0074 70000000 		.4byte	.LFE76-.LFB76
 13935 0078 00000000 		.4byte	.LFB77
 13936 007c 70010000 		.4byte	.LFE77-.LFB77
 13937 0080 00000000 		.4byte	.LFB78
 13938 0084 E0000000 		.4byte	.LFE78-.LFB78
 13939 0088 00000000 		.4byte	.LFB79
 13940 008c E0000000 		.4byte	.LFE79-.LFB79
 13941 0090 00000000 		.4byte	.LFB80
 13942 0094 30000000 		.4byte	.LFE80-.LFB80
 13943 0098 00000000 		.4byte	.LFB81
 13944 009c E8000000 		.4byte	.LFE81-.LFB81
 13945 00a0 00000000 		.4byte	.LFB82
 13946 00a4 54000000 		.4byte	.LFE82-.LFB82
 13947 00a8 00000000 		.4byte	.LFB83
 13948 00ac C4000000 		.4byte	.LFE83-.LFB83
 13949 00b0 00000000 		.4byte	.LFB84
 13950 00b4 98000000 		.4byte	.LFE84-.LFB84
 13951 00b8 00000000 		.4byte	.LFB85
 13952 00bc D4000000 		.4byte	.LFE85-.LFB85
 13953 00c0 00000000 		.4byte	.LFB86
 13954 00c4 1C000000 		.4byte	.LFE86-.LFB86
 13955 00c8 00000000 		.4byte	.LFB87
 13956 00cc 68000000 		.4byte	.LFE87-.LFB87
 13957 00d0 00000000 		.4byte	.LFB88
 13958 00d4 68000000 		.4byte	.LFE88-.LFB88
 13959 00d8 00000000 		.4byte	.LFB89
 13960 00dc 68000000 		.4byte	.LFE89-.LFB89
 13961 00e0 00000000 		.4byte	.LFB90
 13962 00e4 6C000000 		.4byte	.LFE90-.LFB90
 13963 00e8 00000000 		.4byte	.LFB91
 13964 00ec 64000000 		.4byte	.LFE91-.LFB91
 13965 00f0 00000000 		.4byte	.LFB92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 294


 13966 00f4 EC0B0000 		.4byte	.LFE92-.LFB92
 13967 00f8 00000000 		.4byte	.LFB93
 13968 00fc 50010000 		.4byte	.LFE93-.LFB93
 13969 0100 00000000 		.4byte	0
 13970 0104 00000000 		.4byte	0
 13971              		.section	.debug_ranges,"",%progbits
 13972              	.Ldebug_ranges0:
 13973 0000 00000000 		.4byte	.LFB64
 13974 0004 74010000 		.4byte	.LFE64
 13975 0008 00000000 		.4byte	.LFB65
 13976 000c 9C000000 		.4byte	.LFE65
 13977 0010 00000000 		.4byte	.LFB66
 13978 0014 14000000 		.4byte	.LFE66
 13979 0018 00000000 		.4byte	.LFB67
 13980 001c 7C000000 		.4byte	.LFE67
 13981 0020 00000000 		.4byte	.LFB68
 13982 0024 58000000 		.4byte	.LFE68
 13983 0028 00000000 		.4byte	.LFB69
 13984 002c 68000000 		.4byte	.LFE69
 13985 0030 00000000 		.4byte	.LFB70
 13986 0034 4C000000 		.4byte	.LFE70
 13987 0038 00000000 		.4byte	.LFB71
 13988 003c 46000000 		.4byte	.LFE71
 13989 0040 00000000 		.4byte	.LFB72
 13990 0044 56000000 		.4byte	.LFE72
 13991 0048 00000000 		.4byte	.LFB73
 13992 004c 0C000000 		.4byte	.LFE73
 13993 0050 00000000 		.4byte	.LFB74
 13994 0054 0C010000 		.4byte	.LFE74
 13995 0058 00000000 		.4byte	.LFB75
 13996 005c 80200000 		.4byte	.LFE75
 13997 0060 00000000 		.4byte	.LFB76
 13998 0064 70000000 		.4byte	.LFE76
 13999 0068 00000000 		.4byte	.LFB77
 14000 006c 70010000 		.4byte	.LFE77
 14001 0070 00000000 		.4byte	.LFB78
 14002 0074 E0000000 		.4byte	.LFE78
 14003 0078 00000000 		.4byte	.LFB79
 14004 007c E0000000 		.4byte	.LFE79
 14005 0080 00000000 		.4byte	.LFB80
 14006 0084 30000000 		.4byte	.LFE80
 14007 0088 00000000 		.4byte	.LFB81
 14008 008c E8000000 		.4byte	.LFE81
 14009 0090 00000000 		.4byte	.LFB82
 14010 0094 54000000 		.4byte	.LFE82
 14011 0098 00000000 		.4byte	.LFB83
 14012 009c C4000000 		.4byte	.LFE83
 14013 00a0 00000000 		.4byte	.LFB84
 14014 00a4 98000000 		.4byte	.LFE84
 14015 00a8 00000000 		.4byte	.LFB85
 14016 00ac D4000000 		.4byte	.LFE85
 14017 00b0 00000000 		.4byte	.LFB86
 14018 00b4 1C000000 		.4byte	.LFE86
 14019 00b8 00000000 		.4byte	.LFB87
 14020 00bc 68000000 		.4byte	.LFE87
 14021 00c0 00000000 		.4byte	.LFB88
 14022 00c4 68000000 		.4byte	.LFE88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 295


 14023 00c8 00000000 		.4byte	.LFB89
 14024 00cc 68000000 		.4byte	.LFE89
 14025 00d0 00000000 		.4byte	.LFB90
 14026 00d4 6C000000 		.4byte	.LFE90
 14027 00d8 00000000 		.4byte	.LFB91
 14028 00dc 64000000 		.4byte	.LFE91
 14029 00e0 00000000 		.4byte	.LFB92
 14030 00e4 EC0B0000 		.4byte	.LFE92
 14031 00e8 00000000 		.4byte	.LFB93
 14032 00ec 50010000 		.4byte	.LFE93
 14033 00f0 00000000 		.4byte	0
 14034 00f4 00000000 		.4byte	0
 14035              		.section	.debug_line,"",%progbits
 14036              	.Ldebug_line0:
 14037 0000 210C0000 		.section	.debug_str,"MS",%progbits,1
 14037      02009B01 
 14037      00000201 
 14037      FB0E0D00 
 14037      01010101 
 14038              	.LASF167:
 14039 0000 70726573 		.ascii	"presetArraySection\000"
 14039      65744172 
 14039      72617953 
 14039      65637469 
 14039      6F6E00
 14040              	.LASF157:
 14041 0013 70726573 		.ascii	"presetArray\000"
 14041      65744172 
 14041      72617900 
 14042              	.LASF317:
 14043 001f 66697273 		.ascii	"firstSysex\000"
 14043      74537973 
 14043      657800
 14044              	.LASF28:
 14045 002a 73697A65 		.ascii	"sizetype\000"
 14045      74797065 
 14045      00
 14046              	.LASF172:
 14047 0033 73656E64 		.ascii	"sendingMessage\000"
 14047      696E674D 
 14047      65737361 
 14047      676500
 14048              	.LASF266:
 14049 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 14049      5F70726F 
 14049      63657373 
 14049      65645F76 
 14049      6F6C756D 
 14050              	.LASF85:
 14051 005d 74656D70 		.ascii	"tempangle\000"
 14051      616E676C 
 14051      6500
 14052              	.LASF228:
 14053 0067 6E657744 		.ascii	"newDataFlag2\000"
 14053      61746146 
 14053      6C616732 
 14053      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 296


 14054              	.LASF273:
 14055 0074 6D616372 		.ascii	"macroNamesArray\000"
 14055      6F4E616D 
 14055      65734172 
 14055      72617900 
 14056              	.LASF38:
 14057 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 14057      4D5F4545 
 14057      50524F4D 
 14057      5F535543 
 14057      43455353 
 14058              	.LASF17:
 14059 0099 696E7433 		.ascii	"int32_t\000"
 14059      325F7400 
 14060              	.LASF148:
 14061 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 14061      4550524F 
 14061      4D5F636F 
 14061      6E746578 
 14061      7400
 14062              	.LASF47:
 14063 00b3 54686972 		.ascii	"ThirdLine\000"
 14063      644C696E 
 14063      6500
 14064              	.LASF111:
 14065 00bd 6E6F7465 		.ascii	"noteEvent\000"
 14065      4576656E 
 14065      7400
 14066              	.LASF237:
 14067 00c7 53504932 		.ascii	"SPI2errorflag\000"
 14067      6572726F 
 14067      72666C61 
 14067      6700
 14068              	.LASF21:
 14069 00d5 75696E74 		.ascii	"uint32\000"
 14069      333200
 14070              	.LASF93:
 14071 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 14071      684D6163 
 14071      726F546F 
 14071      53746F72 
 14071      654E616D 
 14072              	.LASF124:
 14073 00f2 43437661 		.ascii	"CCval\000"
 14073      6C00
 14074              	.LASF178:
 14075 00f8 6E756D4D 		.ascii	"numMappings\000"
 14075      61707069 
 14075      6E677300 
 14076              	.LASF152:
 14077 0104 49324362 		.ascii	"I2Cbuff1\000"
 14077      75666631 
 14077      00
 14078              	.LASF253:
 14079 010d 49324362 		.ascii	"I2Cbuff2\000"
 14079      75666632 
 14079      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 297


 14080              	.LASF255:
 14081 0116 6D75785F 		.ascii	"mux_states\000"
 14081      73746174 
 14081      657300
 14082              	.LASF137:
 14083 0121 74656D70 		.ascii	"tempLow\000"
 14083      4C6F7700 
 14084              	.LASF206:
 14085 0129 6E65636B 		.ascii	"necks\000"
 14085      7300
 14086              	.LASF197:
 14087 012f 6F637461 		.ascii	"octave\000"
 14087      766500
 14088              	.LASF49:
 14089 0136 4E696C4C 		.ascii	"NilLine\000"
 14089      696E6500 
 14090              	.LASF43:
 14091 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 14091      6E5F656D 
 14091      5F656570 
 14091      726F6D5F 
 14091      73746174 
 14092              	.LASF307:
 14093 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 14093      6F4F4C45 
 14093      44576169 
 14093      74696E67 
 14093      546F5365 
 14094              	.LASF258:
 14095 016e 70656461 		.ascii	"pedals_high\000"
 14095      6C735F68 
 14095      69676800 
 14096              	.LASF99:
 14097 017a 6E627974 		.ascii	"nbytes\000"
 14097      657300
 14098              	.LASF293:
 14099 0181 636F7065 		.ascii	"copedentNamesArray\000"
 14099      64656E74 
 14099      4E616D65 
 14099      73417272 
 14099      617900
 14100              	.LASF176:
 14101 0194 76616C73 		.ascii	"valsCount\000"
 14101      436F756E 
 14101      7400
 14102              	.LASF195:
 14103 019e 74656D70 		.ascii	"temper\000"
 14103      657200
 14104              	.LASF123:
 14105 01a5 43436E75 		.ascii	"CCnum\000"
 14105      6D00
 14106              	.LASF40:
 14107 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 14107      4D5F4545 
 14107      50524F4D 
 14107      5F424144 
 14107      5F434845 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 298


 14108              	.LASF36:
 14109 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 14109      466C6173 
 14109      68537461 
 14109      72744164 
 14109      647200
 14110              	.LASF30:
 14111 01d8 6E756D62 		.ascii	"numberOfRows\000"
 14111      65724F66 
 14111      526F7773 
 14111      00
 14112              	.LASF131:
 14113 01e5 696E7456 		.ascii	"intVal\000"
 14113      616C00
 14114              	.LASF70:
 14115 01ec 69737461 		.ascii	"istart\000"
 14115      727400
 14116              	.LASF74:
 14117 01f3 70656461 		.ascii	"pedalDiff\000"
 14117      6C446966 
 14117      6600
 14118              	.LASF128:
 14119 01fd 74686556 		.ascii	"theVal\000"
 14119      616C00
 14120              	.LASF34:
 14121 0204 72656475 		.ascii	"redundantCopy\000"
 14121      6E64616E 
 14121      74436F70 
 14121      7900
 14122              	.LASF2:
 14123 0212 5F5F7569 		.ascii	"__uint8_t\000"
 14123      6E74385F 
 14123      7400
 14124              	.LASF67:
 14125 021c 616C7068 		.ascii	"alpha\000"
 14125      6100
 14126              	.LASF57:
 14127 0222 70726573 		.ascii	"presetEnd\000"
 14127      6574456E 
 14127      6400
 14128              	.LASF252:
 14129 022c 62617243 		.ascii	"barCount\000"
 14129      6F756E74 
 14129      00
 14130              	.LASF160:
 14131 0235 73656E64 		.ascii	"sendMessageEnd\000"
 14131      4D657373 
 14131      61676545 
 14131      6E6400
 14132              	.LASF271:
 14133 0244 70726573 		.ascii	"presetNumberToLoad\000"
 14133      65744E75 
 14133      6D626572 
 14133      546F4C6F 
 14133      616400
 14134              	.LASF281:
 14135 0257 766F6963 		.ascii	"voice\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 299


 14135      6500
 14136              	.LASF217:
 14137 025d 73747269 		.ascii	"strings\000"
 14137      6E677300 
 14138              	.LASF8:
 14139 0265 6C6F6E67 		.ascii	"long int\000"
 14139      20696E74 
 14139      00
 14140              	.LASF174:
 14141 026e 63757272 		.ascii	"currentFloat\000"
 14141      656E7446 
 14141      6C6F6174 
 14141      00
 14142              	.LASF272:
 14143 027b 70726573 		.ascii	"presetLoadedResponse\000"
 14143      65744C6F 
 14143      61646564 
 14143      52657370 
 14143      6F6E7365 
 14144              	.LASF158:
 14145 0290 70726573 		.ascii	"presetNumberToWrite\000"
 14145      65744E75 
 14145      6D626572 
 14145      546F5772 
 14145      69746500 
 14146              	.LASF92:
 14147 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 14147      68507265 
 14147      73657454 
 14147      6F53746F 
 14147      72654E61 
 14148              	.LASF270:
 14149 02bb 70726573 		.ascii	"presetNamesArray\000"
 14149      65744E61 
 14149      6D657341 
 14149      72726179 
 14149      00
 14150              	.LASF75:
 14151 02cc 6D61696E 		.ascii	"main\000"
 14151      00
 14152              	.LASF294:
 14153 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 14153      53747269 
 14153      6E675069 
 14153      74636842 
 14153      656E6400 
 14154              	.LASF118:
 14155 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 14155      6E6F7465 
 14155      4E756D00 
 14156              	.LASF126:
 14157 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 14157      4D494449 
 14157      416C6C4E 
 14157      6F746573 
 14157      4F666600 
 14158              	.LASF101:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 300


 14159 0305 6572726F 		.ascii	"error\000"
 14159      7200
 14160              	.LASF46:
 14161 030b 5365636F 		.ascii	"SecondLine\000"
 14161      6E644C69 
 14161      6E6500
 14162              	.LASF274:
 14163 0316 66726574 		.ascii	"fretScaling\000"
 14163      5363616C 
 14163      696E6700 
 14164              	.LASF173:
 14165 0322 73656E64 		.ascii	"sendKnobs\000"
 14165      4B6E6F62 
 14165      7300
 14166              	.LASF51:
 14167 032c 70726573 		.ascii	"presetArraySectionState\000"
 14167      65744172 
 14167      72617953 
 14167      65637469 
 14167      6F6E5374 
 14168              	.LASF248:
 14169 0344 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 14169      4D616372 
 14169      6F4B6E6F 
 14169      6256616C 
 14169      75657337 
 14170              	.LASF239:
 14171 035c 6B6E6F62 		.ascii	"knobs\000"
 14171      7300
 14172              	.LASF154:
 14173 0362 73797365 		.ascii	"sysexPointer\000"
 14173      78506F69 
 14173      6E746572 
 14173      00
 14174              	.LASF68:
 14175 036f 6F6D416C 		.ascii	"omAlpha\000"
 14175      70686100 
 14176              	.LASF80:
 14177 0377 73747269 		.ascii	"stringStartLoc\000"
 14177      6E675374 
 14177      6172744C 
 14177      6F6300
 14178              	.LASF0:
 14179 0386 7369676E 		.ascii	"signed char\000"
 14179      65642063 
 14179      68617200 
 14180              	.LASF14:
 14181 0392 75696E74 		.ascii	"uint8_t\000"
 14181      385F7400 
 14182              	.LASF29:
 14183 039a 776C456E 		.ascii	"wlEndAddr\000"
 14183      64416464 
 14183      7200
 14184              	.LASF139:
 14185 03a4 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 14185      63616C6C 
 14185      6261636B 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 301


 14185      4C6F6361 
 14185      6C4D6964 
 14186              	.LASF110:
 14187 03bf 73706973 		.ascii	"spis_1_ss\000"
 14187      5F315F73 
 14187      7300
 14188              	.LASF41:
 14189 03c9 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 14189      4D5F4545 
 14189      50524F4D 
 14189      5F424144 
 14189      5F444154 
 14190              	.LASF50:
 14191 03df 5F4F4C45 		.ascii	"_OLEDLine\000"
 14191      444C696E 
 14191      6500
 14192              	.LASF175:
 14193 03e9 6D617043 		.ascii	"mapCount\000"
 14193      6F756E74 
 14193      00
 14194              	.LASF135:
 14195 03f2 74656D70 		.ascii	"tempIntVersion\000"
 14195      496E7456 
 14195      65727369 
 14195      6F6E00
 14196              	.LASF275:
 14197 0401 70656461 		.ascii	"pedalRatios\000"
 14197      6C526174 
 14197      696F7300 
 14198              	.LASF1:
 14199 040d 756E7369 		.ascii	"unsigned char\000"
 14199      676E6564 
 14199      20636861 
 14199      7200
 14200              	.LASF180:
 14201 041b 76616C43 		.ascii	"valCheck\000"
 14201      6865636B 
 14201      00
 14202              	.LASF130:
 14203 0424 76616C73 		.ascii	"valsStart\000"
 14203      53746172 
 14203      7400
 14204              	.LASF77:
 14205 042e 636F7065 		.ascii	"coped\000"
 14205      6400
 14206              	.LASF207:
 14207 0434 72783143 		.ascii	"rx1Channel\000"
 14207      68616E6E 
 14207      656C00
 14208              	.LASF79:
 14209 043f 70656461 		.ascii	"pedalStartLoc\000"
 14209      6C537461 
 14209      72744C6F 
 14209      6300
 14210              	.LASF223:
 14211 044d 6E657744 		.ascii	"newDataFlag\000"
 14211      61746146 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 302


 14211      6C616700 
 14212              	.LASF301:
 14213 0459 73747269 		.ascii	"stringOctave\000"
 14213      6E674F63 
 14213      74617665 
 14213      00
 14214              	.LASF108:
 14215 0466 5553425F 		.ascii	"USB_service\000"
 14215      73657276 
 14215      69636500 
 14216              	.LASF177:
 14217 0472 6D617043 		.ascii	"mapCountExpectation\000"
 14217      6F756E74 
 14217      45787065 
 14217      63746174 
 14217      696F6E00 
 14218              	.LASF62:
 14219 0486 74656D70 		.ascii	"tempmax\000"
 14219      6D617800 
 14220              	.LASF129:
 14221 048e 73746F70 		.ascii	"stoppingPoint\000"
 14221      70696E67 
 14221      506F696E 
 14221      7400
 14222              	.LASF69:
 14223 049c 76616C75 		.ascii	"value\000"
 14223      6500
 14224              	.LASF276:
 14225 04a2 6C617374 		.ascii	"last_mux\000"
 14225      5F6D7578 
 14225      00
 14226              	.LASF285:
 14227 04ab 656E636F 		.ascii	"encoderVal\000"
 14227      64657256 
 14227      616C00
 14228              	.LASF121:
 14229 04b6 70726573 		.ascii	"pressure\000"
 14229      73757265 
 14229      00
 14230              	.LASF308:
 14231 04bf 70726573 		.ascii	"presetAlreadyDisplayed\000"
 14231      6574416C 
 14231      72656164 
 14231      79446973 
 14231      706C6179 
 14232              	.LASF53:
 14233 04d6 6D616372 		.ascii	"macroNames\000"
 14233      6F4E616D 
 14233      657300
 14234              	.LASF218:
 14235 04e1 70726576 		.ascii	"prevStrings\000"
 14235      53747269 
 14235      6E677300 
 14236              	.LASF24:
 14237 04ed 63686172 		.ascii	"char\000"
 14237      00
 14238              	.LASF142:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 303


 14239 04f2 65657072 		.ascii	"eepromArray\000"
 14239      6F6D4172 
 14239      72617900 
 14240              	.LASF205:
 14241 04fe 63757272 		.ascii	"currentCopedent\000"
 14241      656E7443 
 14241      6F706564 
 14241      656E7400 
 14242              	.LASF201:
 14243 050e 72617741 		.ascii	"rawAngle\000"
 14243      6E676C65 
 14243      00
 14244              	.LASF63:
 14245 0517 4C454146 		.ascii	"LEAF_clip\000"
 14245      5F636C69 
 14245      7000
 14246              	.LASF95:
 14247 0521 446D6154 		.ascii	"DmaTxConfiguration\000"
 14247      78436F6E 
 14247      66696775 
 14247      72617469 
 14247      6F6E00
 14248              	.LASF278:
 14249 0534 6E65636B 		.ascii	"neck\000"
 14249      00
 14250              	.LASF5:
 14251 0539 5F5F7569 		.ascii	"__uint16_t\000"
 14251      6E743136 
 14251      5F7400
 14252              	.LASF107:
 14253 0544 63686563 		.ascii	"checkUSB_Vbus\000"
 14253      6B555342 
 14253      5F566275 
 14253      7300
 14254              	.LASF138:
 14255 0552 726F756E 		.ascii	"roundedIndex\000"
 14255      64656449 
 14255      6E646578 
 14255      00
 14256              	.LASF251:
 14257 055f 65657072 		.ascii	"eeprom_cnt\000"
 14257      6F6D5F63 
 14257      6E7400
 14258              	.LASF146:
 14259 056a 5553425F 		.ascii	"USB_midi_out_ep\000"
 14259      6D696469 
 14259      5F6F7574 
 14259      5F657000 
 14260              	.LASF104:
 14261 057a 4932435F 		.ascii	"I2C_reset\000"
 14261      72657365 
 14261      7400
 14262              	.LASF286:
 14263 0584 656E636F 		.ascii	"encoderNum\000"
 14263      6465724E 
 14263      756D00
 14264              	.LASF283:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 304


 14265 058f 6F637431 		.ascii	"oct1Up\000"
 14265      557000
 14266              	.LASF44:
 14267 0596 75696E74 		.ascii	"uint\000"
 14267      00
 14268              	.LASF203:
 14269 059b 6D696469 		.ascii	"midiOverflow\000"
 14269      4F766572 
 14269      666C6F77 
 14269      00
 14270              	.LASF105:
 14271 05a8 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 14271      496E6974 
 14271      69616C50 
 14271      6564616C 
 14271      5A65726F 
 14272              	.LASF120:
 14273 05c6 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 14273      4D494449 
 14273      506F6C79 
 14273      4B657950 
 14273      72657373 
 14274              	.LASF134:
 14275 05de 73747269 		.ascii	"stringChange\000"
 14275      6E674368 
 14275      616E6765 
 14275      00
 14276              	.LASF89:
 14277 05eb 636F6D70 		.ascii	"computerMIDIOffset\000"
 14277      75746572 
 14277      4D494449 
 14277      4F666673 
 14277      657400
 14278              	.LASF165:
 14279 05fe 73696E67 		.ascii	"singleParamValueLow\000"
 14279      6C655061 
 14279      72616D56 
 14279      616C7565 
 14279      4C6F7700 
 14280              	.LASF122:
 14281 0612 73656E64 		.ascii	"sendMIDIControlChange\000"
 14281      4D494449 
 14281      436F6E74 
 14281      726F6C43 
 14281      68616E67 
 14282              	.LASF222:
 14283 0628 73706943 		.ascii	"spiCounter\000"
 14283      6F756E74 
 14283      657200
 14284              	.LASF39:
 14285 0633 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 14285      4D5F4545 
 14285      50524F4D 
 14285      5F424144 
 14285      5F504152 
 14286              	.LASF318:
 14287 064a 73797365 		.ascii	"sysexPointerMask\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 305


 14287      78506F69 
 14287      6E746572 
 14287      4D61736B 
 14287      00
 14288              	.LASF150:
 14289 065b 4932435F 		.ascii	"I2C_1_initVar\000"
 14289      315F696E 
 14289      69745661 
 14289      7200
 14290              	.LASF52:
 14291 0669 70726573 		.ascii	"presetName\000"
 14291      65744E61 
 14291      6D6500
 14292              	.LASF156:
 14293 0674 70617273 		.ascii	"parsingSysex\000"
 14293      696E6753 
 14293      79736578 
 14293      00
 14294              	.LASF194:
 14295 0681 72657475 		.ascii	"returnedData\000"
 14295      726E6564 
 14295      44617461 
 14295      00
 14296              	.LASF48:
 14297 068e 466F7572 		.ascii	"FourthLine\000"
 14297      74684C69 
 14297      6E6500
 14298              	.LASF246:
 14299 0699 77686963 		.ascii	"whichMacro\000"
 14299      684D6163 
 14299      726F00
 14300              	.LASF260:
 14301 06a4 766F6C75 		.ascii	"volumePedal\000"
 14301      6D655065 
 14301      64616C00 
 14302              	.LASF215:
 14303 06b0 72784275 		.ascii	"rxBufferPluck\000"
 14303      66666572 
 14303      506C7563 
 14303      6B00
 14304              	.LASF292:
 14305 06be 636F7065 		.ascii	"copedent\000"
 14305      64656E74 
 14305      00
 14306              	.LASF263:
 14307 06c7 70656461 		.ascii	"pedals8bit\000"
 14307      6C733862 
 14307      697400
 14308              	.LASF240:
 14309 06d2 70726576 		.ascii	"prevKnobs\000"
 14309      4B6E6F62 
 14309      7300
 14310              	.LASF235:
 14311 06dc 6D795370 		.ascii	"mySpiCounter\000"
 14311      69436F75 
 14311      6E746572 
 14311      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 306


 14312              	.LASF170:
 14313 06e9 73797365 		.ascii	"sysexMessageInProgress\000"
 14313      784D6573 
 14313      73616765 
 14313      496E5072 
 14313      6F677265 
 14314              	.LASF316:
 14315 0700 5350495F 		.ascii	"SPI_errors\000"
 14315      6572726F 
 14315      727300
 14316              	.LASF116:
 14317 070b 43434576 		.ascii	"CCEvent\000"
 14317      656E7400 
 14318              	.LASF127:
 14319 0713 70617273 		.ascii	"parseSysex\000"
 14319      65537973 
 14319      657800
 14320              	.LASF321:
 14321 071e 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 14321      73657273 
 14321      5C4A6566 
 14321      66536E79 
 14321      6465725C 
 14322 074c 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 14322      355F656C 
 14322      65637472 
 14322      6F737465 
 14322      656C5F73 
 14323 077e 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 14323      5F50534F 
 14323      43335F35 
 14323      5F546865 
 14323      726D6973 
 14324              	.LASF299:
 14325 079c 696E7653 		.ascii	"invStringMappedPositions\000"
 14325      7472696E 
 14325      674D6170 
 14325      70656450 
 14325      6F736974 
 14326              	.LASF233:
 14327 07b5 696E7075 		.ascii	"inputData\000"
 14327      74446174 
 14327      6100
 14328              	.LASF66:
 14329 07bf 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 14329      5F696E74 
 14329      6572706F 
 14329      6C617469 
 14329      6F6E5F6C 
 14330              	.LASF313:
 14331 07d9 70726576 		.ascii	"prevNotes\000"
 14331      4E6F7465 
 14331      7300
 14332              	.LASF37:
 14333 07e3 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 14333      74635F65 
 14333      6570726F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 307


 14333      6D5F636F 
 14333      6E746578 
 14334              	.LASF10:
 14335 07fb 6C6F6E67 		.ascii	"long unsigned int\000"
 14335      20756E73 
 14335      69676E65 
 14335      6420696E 
 14335      7400
 14336              	.LASF149:
 14337 080d 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 14337      4550524F 
 14337      4D5F656D 
 14337      5F456570 
 14337      726F6D53 
 14338              	.LASF250:
 14339 0828 65657072 		.ascii	"eepromReturnValue\000"
 14339      6F6D5265 
 14339      7475726E 
 14339      56616C75 
 14339      6500
 14340              	.LASF84:
 14341 083a 74656D70 		.ascii	"tempInt\000"
 14341      496E7400 
 14342              	.LASF83:
 14343 0842 73746174 		.ascii	"status\000"
 14343      757300
 14344              	.LASF254:
 14345 0849 73656E64 		.ascii	"send_it\000"
 14345      5F697400 
 14346              	.LASF192:
 14347 0851 6C696E65 		.ascii	"linearPotValue32Bit\000"
 14347      6172506F 
 14347      7456616C 
 14347      75653332 
 14347      42697400 
 14348              	.LASF119:
 14349 0865 6368616E 		.ascii	"channel\000"
 14349      6E656C00 
 14350              	.LASF243:
 14351 086d 75376269 		.ascii	"u7bit_volumePedal\000"
 14351      745F766F 
 14351      6C756D65 
 14351      50656461 
 14351      6C00
 14352              	.LASF97:
 14353 087f 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 14353      4D617374 
 14353      65725772 
 14353      69746542 
 14353      6C6F636B 
 14354              	.LASF198:
 14355 0897 616E676C 		.ascii	"angle\000"
 14355      6500
 14356              	.LASF182:
 14357 089d 6E756D53 		.ascii	"numStrings\000"
 14357      7472696E 
 14357      677300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 308


 14358              	.LASF42:
 14359 08a8 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 14359      4D5F4545 
 14359      50524F4D 
 14359      5F575249 
 14359      54455F46 
 14360              	.LASF72:
 14361 08c0 6F737461 		.ascii	"ostart\000"
 14361      727400
 14362              	.LASF269:
 14363 08c7 63757272 		.ascii	"currentPresetSelection\000"
 14363      656E7450 
 14363      72657365 
 14363      7453656C 
 14363      65637469 
 14364              	.LASF304:
 14365 08de 6F70656E 		.ascii	"openStringMIDI_Int\000"
 14365      53747269 
 14365      6E674D49 
 14365      44495F49 
 14365      6E7400
 14366              	.LASF71:
 14367 08f1 6973746F 		.ascii	"istop\000"
 14367      7000
 14368              	.LASF145:
 14369 08f7 5553425F 		.ascii	"USB_midiInBuffer\000"
 14369      6D696469 
 14369      496E4275 
 14369      66666572 
 14369      00
 14370              	.LASF319:
 14371 0908 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 14371      43313120 
 14371      352E342E 
 14371      31203230 
 14371      31363036 
 14372 093b 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 14372      20726576 
 14372      6973696F 
 14372      6E203233 
 14372      37373135 
 14373 096e 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 14373      66756E63 
 14373      74696F6E 
 14373      2D736563 
 14373      74696F6E 
 14374              	.LASF117:
 14375 0996 73656E64 		.ascii	"sendMIDINoteOn\000"
 14375      4D494449 
 14375      4E6F7465 
 14375      4F6E00
 14376              	.LASF277:
 14377 09a5 6D61696E 		.ascii	"main_counter\000"
 14377      5F636F75 
 14377      6E746572 
 14377      00
 14378              	.LASF45:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 309


 14379 09b2 46697273 		.ascii	"FirstLine\000"
 14379      744C696E 
 14379      6500
 14380              	.LASF279:
 14381 09bc 6475616C 		.ascii	"dualSlider\000"
 14381      536C6964 
 14381      657200
 14382              	.LASF60:
 14383 09c7 72657374 		.ascii	"restartSystemCheck\000"
 14383      61727453 
 14383      79737465 
 14383      6D436865 
 14383      636B00
 14384              	.LASF187:
 14385 09da 5553425F 		.ascii	"USB_check_flag\000"
 14385      63686563 
 14385      6B5F666C 
 14385      616700
 14386              	.LASF168:
 14387 09e9 6D657373 		.ascii	"messageArraySendCount\000"
 14387      61676541 
 14387      72726179 
 14387      53656E64 
 14387      436F756E 
 14388              	.LASF9:
 14389 09ff 5F5F7569 		.ascii	"__uint32_t\000"
 14389      6E743332 
 14389      5F7400
 14390              	.LASF11:
 14391 0a0a 6C6F6E67 		.ascii	"long long int\000"
 14391      206C6F6E 
 14391      6720696E 
 14391      7400
 14392              	.LASF193:
 14393 0a18 636F756E 		.ascii	"counter\000"
 14393      74657200 
 14394              	.LASF302:
 14395 0a20 73747269 		.ascii	"stringPitch\000"
 14395      6E675069 
 14395      74636800 
 14396              	.LASF209:
 14397 0a2c 72783154 		.ascii	"rx1TD\000"
 14397      4400
 14398              	.LASF306:
 14399 0a32 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 14399      4F4C4544 
 14399      57616974 
 14399      696E6754 
 14399      6F53656E 
 14400              	.LASF82:
 14401 0a48 74656D70 		.ascii	"tempIntLow\000"
 14401      496E744C 
 14401      6F7700
 14402              	.LASF61:
 14403 0a53 74656D70 		.ascii	"tempmin\000"
 14403      6D696E00 
 14404              	.LASF35:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 310


 14405 0a5b 626C6F63 		.ascii	"blockingWrite\000"
 14405      6B696E67 
 14405      57726974 
 14405      6500
 14406              	.LASF213:
 14407 0a69 72783343 		.ascii	"rx3Channel\000"
 14407      68616E6E 
 14407      656C00
 14408              	.LASF23:
 14409 0a74 646F7562 		.ascii	"double\000"
 14409      6C6500
 14410              	.LASF320:
 14411 0a7b 6D61696E 		.ascii	"main.c\000"
 14411      2E6300
 14412              	.LASF287:
 14413 0a82 62757474 		.ascii	"button1Up\000"
 14413      6F6E3155 
 14413      7000
 14414              	.LASF109:
 14415 0a8c 6C6F6732 		.ascii	"log2f_approx\000"
 14415      665F6170 
 14415      70726F78 
 14415      00
 14416              	.LASF164:
 14417 0a99 73696E67 		.ascii	"singleParamValueHigh\000"
 14417      6C655061 
 14417      72616D56 
 14417      616C7565 
 14417      48696768 
 14418              	.LASF151:
 14419 0aae 49544D5F 		.ascii	"ITM_RxBuffer\000"
 14419      52784275 
 14419      66666572 
 14419      00
 14420              	.LASF163:
 14421 0abb 73696E67 		.ascii	"singleParamToUpdateLow\000"
 14421      6C655061 
 14421      72616D54 
 14421      6F557064 
 14421      6174654C 
 14422              	.LASF73:
 14423 0ad2 6F73746F 		.ascii	"ostop\000"
 14423      7000
 14424              	.LASF102:
 14425 0ad8 74696D65 		.ascii	"timeout\000"
 14425      6F757400 
 14426              	.LASF22:
 14427 0ae0 666C6F61 		.ascii	"float\000"
 14427      7400
 14428              	.LASF262:
 14429 0ae6 70726576 		.ascii	"prev_processed_pedals\000"
 14429      5F70726F 
 14429      63657373 
 14429      65645F70 
 14429      6564616C 
 14430              	.LASF226:
 14431 0afc 616D4865 		.ascii	"amHere2\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 311


 14431      72653200 
 14432              	.LASF245:
 14433 0b04 53504932 		.ascii	"SPI2started\000"
 14433      73746172 
 14433      74656400 
 14434              	.LASF229:
 14435 0b10 63757272 		.ascii	"currentPluckBuffer\000"
 14435      656E7450 
 14435      6C75636B 
 14435      42756666 
 14435      657200
 14436              	.LASF88:
 14437 0b23 6261724D 		.ascii	"barMIDI\000"
 14437      49444900 
 14438              	.LASF125:
 14439 0b2b 73656E64 		.ascii	"sendMIDIPitchBend\000"
 14439      4D494449 
 14439      50697463 
 14439      6842656E 
 14439      6400
 14440              	.LASF13:
 14441 0b3d 756E7369 		.ascii	"unsigned int\000"
 14441      676E6564 
 14441      20696E74 
 14441      00
 14442              	.LASF296:
 14443 0b4a 70656461 		.ascii	"pedal_cc_assignments\000"
 14443      6C5F6363 
 14443      5F617373 
 14443      69676E6D 
 14443      656E7473 
 14444              	.LASF155:
 14445 0b5f 72656365 		.ascii	"receivingSysex\000"
 14445      6976696E 
 14445      67537973 
 14445      657800
 14446              	.LASF140:
 14447 0b6e 6361626C 		.ascii	"cable\000"
 14447      6500
 14448              	.LASF242:
 14449 0b74 70726576 		.ascii	"prevKnobs7bit\000"
 14449      4B6E6F62 
 14449      73376269 
 14449      7400
 14450              	.LASF59:
 14451 0b82 56627573 		.ascii	"Vbus_function\000"
 14451      5F66756E 
 14451      6374696F 
 14451      6E00
 14452              	.LASF265:
 14453 0b90 70726576 		.ascii	"prevPedals7bit\000"
 14453      50656461 
 14453      6C733762 
 14453      697400
 14454              	.LASF113:
 14455 0b9f 76656C6F 		.ascii	"velocity\000"
 14455      63697479 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 312


 14455      00
 14456              	.LASF314:
 14457 0ba8 63686563 		.ascii	"checkStatus\000"
 14457      6B537461 
 14457      74757300 
 14458              	.LASF25:
 14459 0bb4 63797374 		.ascii	"cystatus\000"
 14459      61747573 
 14459      00
 14460              	.LASF238:
 14461 0bbd 6261725F 		.ascii	"bar_index\000"
 14461      696E6465 
 14461      7800
 14462              	.LASF241:
 14463 0bc7 6B6E6F62 		.ascii	"knobs7bit\000"
 14463      73376269 
 14463      7400
 14464              	.LASF112:
 14465 0bd1 73747269 		.ascii	"string\000"
 14465      6E6700
 14466              	.LASF236:
 14467 0bd8 6F666673 		.ascii	"offsetErrorCount\000"
 14467      65744572 
 14467      726F7243 
 14467      6F756E74 
 14467      00
 14468              	.LASF267:
 14469 0be9 70726F63 		.ascii	"processed_volumePedal\000"
 14469      65737365 
 14469      645F766F 
 14469      6C756D65 
 14469      50656461 
 14470              	.LASF86:
 14471 0bff 74656D70 		.ascii	"tempMIDI\000"
 14471      4D494449 
 14471      00
 14472              	.LASF216:
 14473 0c08 72784275 		.ascii	"rxBufferBar\000"
 14473      66666572 
 14473      42617200 
 14474              	.LASF211:
 14475 0c14 74784368 		.ascii	"txChannel\000"
 14475      616E6E65 
 14475      6C00
 14476              	.LASF261:
 14477 0c1e 70726F63 		.ascii	"processed_pedals\000"
 14477      65737365 
 14477      645F7065 
 14477      64616C73 
 14477      00
 14478              	.LASF297:
 14479 0c2f 6F70656E 		.ascii	"openStringFrequencies\000"
 14479      53747269 
 14479      6E674672 
 14479      65717565 
 14479      6E636965 
 14480              	.LASF199:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 313


 14481 0c45 70726576 		.ascii	"prevAngle\000"
 14481      416E676C 
 14481      6500
 14482              	.LASF225:
 14483 0c4f 706C7563 		.ascii	"pluck_index\000"
 14483      6B5F696E 
 14483      64657800 
 14484              	.LASF27:
 14485 0c5b 6C6F6E67 		.ascii	"long double\000"
 14485      20646F75 
 14485      626C6500 
 14486              	.LASF103:
 14487 0c67 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 14487      4D617374 
 14487      65725265 
 14487      6164426C 
 14487      6F636B69 
 14488              	.LASF230:
 14489 0c7e 63757272 		.ascii	"currentBarBuffer\000"
 14489      656E7442 
 14489      61724275 
 14489      66666572 
 14489      00
 14490              	.LASF200:
 14491 0c8f 4144435F 		.ascii	"ADC_values\000"
 14491      76616C75 
 14491      657300
 14492              	.LASF65:
 14493 0c9a 66746F6D 		.ascii	"ftom\000"
 14493      00
 14494              	.LASF280:
 14495 0c9f 656E7465 		.ascii	"enterUp\000"
 14495      72557000 
 14496              	.LASF232:
 14497 0ca7 53504931 		.ascii	"SPI1ErrorCount\000"
 14497      4572726F 
 14497      72436F75 
 14497      6E7400
 14498              	.LASF202:
 14499 0cb6 6D696469 		.ascii	"midiSent\000"
 14499      53656E74 
 14499      00
 14500              	.LASF141:
 14501 0cbf 6D696469 		.ascii	"midiMsg\000"
 14501      4D736700 
 14502              	.LASF310:
 14503 0cc7 63757272 		.ascii	"currentNeck\000"
 14503      656E744E 
 14503      65636B00 
 14504              	.LASF311:
 14505 0cd3 65646974 		.ascii	"editMode\000"
 14505      4D6F6465 
 14505      00
 14506              	.LASF12:
 14507 0cdc 6C6F6E67 		.ascii	"long long unsigned int\000"
 14507      206C6F6E 
 14507      6720756E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 314


 14507      7369676E 
 14507      65642069 
 14508              	.LASF16:
 14509 0cf3 75696E74 		.ascii	"uint16_t\000"
 14509      31365F74 
 14509      00
 14510              	.LASF136:
 14511 0cfc 74656D70 		.ascii	"tempHigh\000"
 14511      48696768 
 14511      00
 14512              	.LASF181:
 14513 0d05 74657374 		.ascii	"testVal\000"
 14513      56616C00 
 14514              	.LASF210:
 14515 0d0d 72783254 		.ascii	"rx2TD\000"
 14515      4400
 14516              	.LASF224:
 14517 0d13 70726576 		.ascii	"prevOctave\000"
 14517      4F637461 
 14517      766500
 14518              	.LASF322:
 14519 0d1e 62726561 		.ascii	"breakFloat\000"
 14519      6B466C6F 
 14519      617400
 14520              	.LASF315:
 14521 0d29 63686563 		.ascii	"checkBase\000"
 14521      6B426173 
 14521      6500
 14522              	.LASF58:
 14523 0d33 73706973 		.ascii	"spis_2_ss\000"
 14523      5F325F73 
 14523      7300
 14524              	.LASF288:
 14525 0d3d 62757474 		.ascii	"button2Up\000"
 14525      6F6E3255 
 14525      7000
 14526              	.LASF166:
 14527 0d47 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 14527      4D617070 
 14527      696E6743 
 14527      68616E67 
 14527      65557064 
 14528              	.LASF221:
 14529 0d5f 616D4865 		.ascii	"amHere\000"
 14529      726500
 14530              	.LASF249:
 14531 0d66 61727261 		.ascii	"array\000"
 14531      7900
 14532              	.LASF91:
 14533 0d6c 7363616C 		.ascii	"scaledMIDI\000"
 14533      65644D49 
 14533      444900
 14534              	.LASF26:
 14535 0d77 72656738 		.ascii	"reg8\000"
 14535      00
 14536              	.LASF159:
 14537 0d7c 636F7065 		.ascii	"copedentNumberToWrite\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 315


 14537      64656E74 
 14537      4E756D62 
 14537      6572546F 
 14537      57726974 
 14538              	.LASF55:
 14539 0d92 6D617043 		.ascii	"mapCountNext\000"
 14539      6F756E74 
 14539      4E657874 
 14539      00
 14540              	.LASF227:
 14541 0d9f 73706943 		.ascii	"spiCounter2\000"
 14541      6F756E74 
 14541      65723200 
 14542              	.LASF114:
 14543 0dab 74656D70 		.ascii	"tempVel\000"
 14543      56656C00 
 14544              	.LASF183:
 14545 0db3 75736241 		.ascii	"usbActivityCounter\000"
 14545      63746976 
 14545      69747943 
 14545      6F756E74 
 14545      657200
 14546              	.LASF259:
 14547 0dc6 64656164 		.ascii	"deadzone\000"
 14547      7A6F6E65 
 14547      00
 14548              	.LASF179:
 14549 0dcf 70617273 		.ascii	"parseThatMF\000"
 14549      65546861 
 14549      744D4600 
 14550              	.LASF3:
 14551 0ddb 5F5F696E 		.ascii	"__int16_t\000"
 14551      7431365F 
 14551      7400
 14552              	.LASF54:
 14553 0de5 696E6974 		.ascii	"initialVals\000"
 14553      69616C56 
 14553      616C7300 
 14554              	.LASF186:
 14555 0df1 5553425F 		.ascii	"USB_active\000"
 14555      61637469 
 14555      766500
 14556              	.LASF161:
 14557 0dfc 73656E64 		.ascii	"sendSingleParamUpdate\000"
 14557      53696E67 
 14557      6C655061 
 14557      72616D55 
 14557      70646174 
 14558              	.LASF153:
 14559 0e12 73797365 		.ascii	"sysexBuffer\000"
 14559      78427566 
 14559      66657200 
 14560              	.LASF171:
 14561 0e1e 62756643 		.ascii	"bufCount\000"
 14561      6F756E74 
 14561      00
 14562              	.LASF231:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 316


 14563 0e27 706C7563 		.ascii	"pluckErrorCount\000"
 14563      6B457272 
 14563      6F72436F 
 14563      756E7400 
 14564              	.LASF132:
 14565 0e37 74656D70 		.ascii	"tempChar\000"
 14565      43686172 
 14565      00
 14566              	.LASF305:
 14567 0e40 4F4C4544 		.ascii	"OLEDcount\000"
 14567      636F756E 
 14567      7400
 14568              	.LASF291:
 14569 0e4a 70617463 		.ascii	"patchNum\000"
 14569      684E756D 
 14569      00
 14570              	.LASF309:
 14571 0e53 70656461 		.ascii	"pedals_float\000"
 14571      6C735F66 
 14571      6C6F6174 
 14571      00
 14572              	.LASF247:
 14573 0e60 6D616372 		.ascii	"macroKnobValues7bit\000"
 14573      6F4B6E6F 
 14573      6256616C 
 14573      75657337 
 14573      62697400 
 14574              	.LASF19:
 14575 0e74 75696E74 		.ascii	"uint8\000"
 14575      3800
 14576              	.LASF257:
 14577 0e7a 70656461 		.ascii	"pedals_low\000"
 14577      6C735F6C 
 14577      6F7700
 14578              	.LASF90:
 14579 0e85 70697463 		.ascii	"pitchBendAmount\000"
 14579      6842656E 
 14579      64416D6F 
 14579      756E7400 
 14580              	.LASF162:
 14581 0e95 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 14581      6C655061 
 14581      72616D54 
 14581      6F557064 
 14581      61746548 
 14582              	.LASF4:
 14583 0ead 73686F72 		.ascii	"short int\000"
 14583      7420696E 
 14583      7400
 14584              	.LASF169:
 14585 0eb7 6D657373 		.ascii	"messageArraySize\000"
 14585      61676541 
 14585      72726179 
 14585      53697A65 
 14585      00
 14586              	.LASF268:
 14587 0ec8 66726574 		.ascii	"fretMeasurements\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 317


 14587      4D656173 
 14587      7572656D 
 14587      656E7473 
 14587      00
 14588              	.LASF100:
 14589 0ed9 6D6F6465 		.ascii	"mode\000"
 14589      00
 14590              	.LASF94:
 14591 0ede 62756666 		.ascii	"bufferPointer\000"
 14591      6572506F 
 14591      696E7465 
 14591      7200
 14592              	.LASF303:
 14593 0eec 73747269 		.ascii	"stringMIDI\000"
 14593      6E674D49 
 14593      444900
 14594              	.LASF87:
 14595 0ef7 6F70656E 		.ascii	"openStringMIDI\000"
 14595      53747269 
 14595      6E674D49 
 14595      444900
 14596              	.LASF15:
 14597 0f06 696E7431 		.ascii	"int16_t\000"
 14597      365F7400 
 14598              	.LASF133:
 14599 0f0e 70656461 		.ascii	"pedalToWrite\000"
 14599      6C546F57 
 14599      72697465 
 14599      00
 14600              	.LASF32:
 14601 0f1b 65657072 		.ascii	"eepromSize\000"
 14601      6F6D5369 
 14601      7A6500
 14602              	.LASF106:
 14603 0f26 64697370 		.ascii	"displayCurrentPresetNameAndCopedent\000"
 14603      6C617943 
 14603      75727265 
 14603      6E745072 
 14603      65736574 
 14604              	.LASF298:
 14605 0f4a 73747269 		.ascii	"stringMappedPositions\000"
 14605      6E674D61 
 14605      70706564 
 14605      506F7369 
 14605      74696F6E 
 14606              	.LASF196:
 14607 0f60 70726576 		.ascii	"previousButtons\000"
 14607      696F7573 
 14607      42757474 
 14607      6F6E7300 
 14608              	.LASF33:
 14609 0f70 77656172 		.ascii	"wearLevelingFactor\000"
 14609      4C657665 
 14609      6C696E67 
 14609      46616374 
 14609      6F7200
 14610              	.LASF143:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 318


 14611 0f83 5553425F 		.ascii	"USB_midiInPointer\000"
 14611      6D696469 
 14611      496E506F 
 14611      696E7465 
 14611      7200
 14612              	.LASF312:
 14613 0f95 63616C69 		.ascii	"calibrationMode\000"
 14613      62726174 
 14613      696F6E4D 
 14613      6F646500 
 14614              	.LASF98:
 14615 0fa5 69324341 		.ascii	"i2CAddr\000"
 14615      64647200 
 14616              	.LASF189:
 14617 0fad 696E4275 		.ascii	"inBuffer\000"
 14617      66666572 
 14617      00
 14618              	.LASF220:
 14619 0fb6 6D617853 		.ascii	"maxStrings\000"
 14619      7472696E 
 14619      677300
 14620              	.LASF78:
 14621 0fc1 6C657474 		.ascii	"letter\000"
 14621      657200
 14622              	.LASF147:
 14623 0fc8 5553425F 		.ascii	"USB_midiOutBuffer\000"
 14623      6D696469 
 14623      4F757442 
 14623      75666665 
 14623      7200
 14624              	.LASF204:
 14625 0fda 6D616372 		.ascii	"macroKnobValues\000"
 14625      6F4B6E6F 
 14625      6256616C 
 14625      75657300 
 14626              	.LASF256:
 14627 0fea 6932635F 		.ascii	"i2c_skipped\000"
 14627      736B6970 
 14627      70656400 
 14628              	.LASF264:
 14629 0ff6 70656461 		.ascii	"pedals7bit\000"
 14629      6C733762 
 14629      697400
 14630              	.LASF244:
 14631 1001 70726576 		.ascii	"prev_7bit_volumePedal\000"
 14631      5F376269 
 14631      745F766F 
 14631      6C756D65 
 14631      50656461 
 14632              	.LASF188:
 14633 1017 6D617070 		.ascii	"mappingArray\000"
 14633      696E6741 
 14633      72726179 
 14633      00
 14634              	.LASF234:
 14635 1024 73706941 		.ascii	"spiAdjusted\000"
 14635      646A7573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 319


 14635      74656400 
 14636              	.LASF208:
 14637 1030 72783243 		.ascii	"rx2Channel\000"
 14637      68616E6E 
 14637      656C00
 14638              	.LASF144:
 14639 103b 5553425F 		.ascii	"USB_midi_in_ep\000"
 14639      6D696469 
 14639      5F696E5F 
 14639      657000
 14640              	.LASF96:
 14641 104a 446D6152 		.ascii	"DmaRxConfiguration\000"
 14641      78436F6E 
 14641      66696775 
 14641      72617469 
 14641      6F6E00
 14642              	.LASF18:
 14643 105d 75696E74 		.ascii	"uint32_t\000"
 14643      33325F74 
 14643      00
 14644              	.LASF290:
 14645 1066 62757474 		.ascii	"button4Up\000"
 14645      6F6E3455 
 14645      7000
 14646              	.LASF185:
 14647 1070 70726576 		.ascii	"prevVBUS\000"
 14647      56425553 
 14647      00
 14648              	.LASF214:
 14649 1079 72783354 		.ascii	"rx3TD\000"
 14649      4400
 14650              	.LASF184:
 14651 107f 63757272 		.ascii	"currentVBUS\000"
 14651      656E7456 
 14651      42555300 
 14652              	.LASF284:
 14653 108b 6F637434 		.ascii	"oct4Up\000"
 14653      557000
 14654              	.LASF323:
 14655 1092 63616C63 		.ascii	"calculatePedalRatios\000"
 14655      756C6174 
 14655      65506564 
 14655      616C5261 
 14655      74696F73 
 14656              	.LASF289:
 14657 10a7 62757474 		.ascii	"button3Up\000"
 14657      6F6E3355 
 14657      7000
 14658              	.LASF6:
 14659 10b1 73686F72 		.ascii	"short unsigned int\000"
 14659      7420756E 
 14659      7369676E 
 14659      65642069 
 14659      6E7400
 14660              	.LASF56:
 14661 10c4 6D617070 		.ascii	"mapping\000"
 14661      696E6700 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccv3czwo.s 			page 320


 14662              	.LASF115:
 14663 10cc 6E6F7465 		.ascii	"noteToSend\000"
 14663      546F5365 
 14663      6E6400
 14664              	.LASF212:
 14665 10d7 74785444 		.ascii	"txTD\000"
 14665      00
 14666              	.LASF7:
 14667 10dc 5F5F696E 		.ascii	"__int32_t\000"
 14667      7433325F 
 14667      7400
 14668              	.LASF219:
 14669 10e6 70726576 		.ascii	"prevBar\000"
 14669      42617200 
 14670              	.LASF191:
 14671 10ee 6D79496E 		.ascii	"myInputArray\000"
 14671      70757441 
 14671      72726179 
 14671      00
 14672              	.LASF64:
 14673 10fb 6D746F66 		.ascii	"mtof\000"
 14673      00
 14674              	.LASF295:
 14675 1100 70656461 		.ascii	"pedals\000"
 14675      6C7300
 14676              	.LASF81:
 14677 1107 74656D70 		.ascii	"tempIntHigh\000"
 14677      496E7448 
 14677      69676800 
 14678              	.LASF282:
 14679 1113 65646974 		.ascii	"editUp\000"
 14679      557000
 14680              	.LASF31:
 14681 111a 6C617374 		.ascii	"lastWrRowAddr\000"
 14681      5772526F 
 14681      77416464 
 14681      7200
 14682              	.LASF76:
 14683 1128 6D794172 		.ascii	"myArrayCounter\000"
 14683      72617943 
 14683      6F756E74 
 14683      657200
 14684              	.LASF300:
 14685 1137 73747269 		.ascii	"stringFrequencies\000"
 14685      6E674672 
 14685      65717565 
 14685      6E636965 
 14685      7300
 14686              	.LASF20:
 14687 1149 75696E74 		.ascii	"uint16\000"
 14687      313600
 14688              	.LASF190:
 14689 1150 6D794172 		.ascii	"myArray\000"
 14689      72617900 
 14690              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
