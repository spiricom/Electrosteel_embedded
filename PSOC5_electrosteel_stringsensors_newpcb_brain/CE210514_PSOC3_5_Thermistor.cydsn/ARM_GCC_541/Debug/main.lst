ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	sysexBuffer,2048,4
  20              		.global	sysexPointer
  21              		.bss
  22              		.align	2
  23              		.type	sysexPointer, %object
  24              		.size	sysexPointer, 4
  25              	sysexPointer:
  26 0000 00000000 		.space	4
  27              		.global	receivingSysex
  28              		.type	receivingSysex, %object
  29              		.size	receivingSysex, 1
  30              	receivingSysex:
  31 0004 00       		.space	1
  32              		.global	parsingSysex
  33              		.type	parsingSysex, %object
  34              		.size	parsingSysex, 1
  35              	parsingSysex:
  36 0005 00       		.space	1
  37              		.comm	presetArray,2048,4
  38              		.global	presetNumberToWrite
  39              		.type	presetNumberToWrite, %object
  40              		.size	presetNumberToWrite, 1
  41              	presetNumberToWrite:
  42 0006 00       		.space	1
  43              		.global	copedentNumberToWrite
  44              		.type	copedentNumberToWrite, %object
  45              		.size	copedentNumberToWrite, 1
  46              	copedentNumberToWrite:
  47 0007 00       		.space	1
  48              		.global	sendMessageEnd
  49              		.type	sendMessageEnd, %object
  50              		.size	sendMessageEnd, 1
  51              	sendMessageEnd:
  52 0008 00       		.space	1
  53              		.global	presetArraySection
  54              		.type	presetArraySection, %object
  55              		.size	presetArraySection, 1
  56              	presetArraySection:
  57 0009 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 2


  58              		.global	messageArraySendCount
  59              		.align	1
  60              		.type	messageArraySendCount, %object
  61              		.size	messageArraySendCount, 2
  62              	messageArraySendCount:
  63 000a 0000     		.space	2
  64              		.global	messageArraySize
  65              		.align	1
  66              		.type	messageArraySize, %object
  67              		.size	messageArraySize, 2
  68              	messageArraySize:
  69 000c 0000     		.space	2
  70              		.global	sysexMessageInProgress
  71              		.type	sysexMessageInProgress, %object
  72              		.size	sysexMessageInProgress, 1
  73              	sysexMessageInProgress:
  74 000e 00       		.space	1
  75              		.global	bufCount
  76              		.type	bufCount, %object
  77              		.size	bufCount, 1
  78              	bufCount:
  79 000f 00       		.space	1
  80              		.global	sendingMessage
  81              		.type	sendingMessage, %object
  82              		.size	sendingMessage, 1
  83              	sendingMessage:
  84 0010 00       		.space	1
  85              		.global	sendKnobs
  86              		.type	sendKnobs, %object
  87              		.size	sendKnobs, 1
  88              	sendKnobs:
  89 0011 00       		.space	1
  90              		.global	currentFloat
  91 0012 0000     		.align	2
  92              		.type	currentFloat, %object
  93              		.size	currentFloat, 4
  94              	currentFloat:
  95 0014 00000000 		.space	4
  96              		.global	mapCount
  97              		.align	2
  98              		.type	mapCount, %object
  99              		.size	mapCount, 4
 100              	mapCount:
 101 0018 00000000 		.space	4
 102              		.global	valsCount
 103              		.align	1
 104              		.type	valsCount, %object
 105              		.size	valsCount, 2
 106              	valsCount:
 107 001c 0000     		.space	2
 108              		.global	mapCountExpectation
 109              		.align	1
 110              		.type	mapCountExpectation, %object
 111              		.size	mapCountExpectation, 2
 112              	mapCountExpectation:
 113 001e 0000     		.space	2
 114              		.global	numMappings
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 3


 115              		.align	1
 116              		.type	numMappings, %object
 117              		.size	numMappings, 2
 118              	numMappings:
 119 0020 0000     		.space	2
 120              		.global	parseThatMF
 121              		.type	parseThatMF, %object
 122              		.size	parseThatMF, 1
 123              	parseThatMF:
 124 0022 00       		.space	1
 125              		.global	valCheck
 126 0023 00       		.align	2
 127              		.type	valCheck, %object
 128              		.size	valCheck, 4
 129              	valCheck:
 130 0024 00000000 		.space	4
 131              		.global	testVal
 132              		.align	2
 133              		.type	testVal, %object
 134              		.size	testVal, 4
 135              	testVal:
 136 0028 00000000 		.space	4
 137              		.global	numStrings
 138              		.data
 139              		.align	2
 140              		.type	numStrings, %object
 141              		.size	numStrings, 4
 142              	numStrings:
 143 0000 0A000000 		.word	10
 144              		.global	usbActivityCounter
 145              		.bss
 146              		.type	usbActivityCounter, %object
 147              		.size	usbActivityCounter, 1
 148              	usbActivityCounter:
 149 002c 00       		.space	1
 150              		.comm	midiMsg,4,4
 151              		.global	currentVBUS
 152              		.type	currentVBUS, %object
 153              		.size	currentVBUS, 1
 154              	currentVBUS:
 155 002d 00       		.space	1
 156              		.global	prevVBUS
 157              		.type	prevVBUS, %object
 158              		.size	prevVBUS, 1
 159              	prevVBUS:
 160 002e 00       		.space	1
 161              		.global	USB_active
 162              		.type	USB_active, %object
 163              		.size	USB_active, 1
 164              	USB_active:
 165 002f 00       		.space	1
 166              		.global	USB_check_flag
 167              		.type	USB_check_flag, %object
 168              		.size	USB_check_flag, 1
 169              	USB_check_flag:
 170 0030 00       		.space	1
 171              		.comm	inBuffer,32,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 4


 172              		.comm	myArray,32,4
 173              		.comm	myInputArray,2,4
 174              		.comm	linearPotValue32Bit,8,4
 175              		.global	i
 176              		.type	i, %object
 177              		.size	i, 1
 178              	i:
 179 0031 00       		.space	1
 180              		.global	counter
 181              		.type	counter, %object
 182              		.size	counter, 1
 183              	counter:
 184 0032 00       		.space	1
 185              		.comm	returnedData,32,4
 186              		.comm	temper,4,4
 187              		.comm	previousButtons,44,4
 188              		.global	octave
 189              		.data
 190              		.align	2
 191              		.type	octave, %object
 192              		.size	octave, 4
 193              	octave:
 194 0004 05000000 		.word	5
 195              		.comm	angle,20,4
 196              		.comm	prevAngle,20,4
 197              		.comm	ADC_values,8,4
 198              		.global	rawAngle
 199              		.bss
 200 0033 00       		.align	1
 201              		.type	rawAngle, %object
 202              		.size	rawAngle, 2
 203              	rawAngle:
 204 0034 0000     		.space	2
 205              		.global	midiSent
 206              		.align	1
 207              		.type	midiSent, %object
 208              		.size	midiSent, 2
 209              	midiSent:
 210 0036 0000     		.space	2
 211              		.global	midiOverflow
 212              		.align	1
 213              		.type	midiOverflow, %object
 214              		.size	midiOverflow, 2
 215              	midiOverflow:
 216 0038 0000     		.space	2
 217              		.comm	macroKnobValues,8,4
 218              		.global	currentCopedent
 219              		.type	currentCopedent, %object
 220              		.size	currentCopedent, 1
 221              	currentCopedent:
 222 003a 00       		.space	1
 223              		.global	necks
 224              		.data
 225              		.align	2
 226              		.type	necks, %object
 227              		.size	necks, 2
 228              	necks:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 5


 229 0008 00       		.byte	0
 230 0009 01       		.byte	1
 231              		.comm	rx1Channel,1,1
 232              		.comm	rx2Channel,1,32
 233              		.comm	rx1TD,2,4
 234              		.comm	rx2TD,2,32
 235              		.comm	txChannel,1,32
 236              		.comm	txTD,1,32
 237              		.comm	rx3Channel,1,32
 238              		.comm	rx3TD,1,32
 239              		.comm	rxBufferPluck,52,32
 240              		.comm	rxBufferBar,16,32
 241              		.comm	strings,24,4
 242              		.comm	prevStrings,24,4
 243              		.comm	bar,4,4
 244              		.comm	prevBar,4,4
 245              		.comm	maxStrings,24,4
 246              		.global	amHere
 247              		.bss
 248              		.type	amHere, %object
 249              		.size	amHere, 1
 250              	amHere:
 251 003b 00       		.space	1
 252              		.global	spiCounter
 253              		.type	spiCounter, %object
 254              		.size	spiCounter, 1
 255              	spiCounter:
 256 003c 00       		.space	1
 257              		.global	newDataFlag
 258              		.type	newDataFlag, %object
 259              		.size	newDataFlag, 1
 260              	newDataFlag:
 261 003d 00       		.space	1
 262              		.global	prevOctave
 263 003e 0000     		.align	2
 264              		.type	prevOctave, %object
 265              		.size	prevOctave, 4
 266              	prevOctave:
 267 0040 00000000 		.space	4
 268              		.global	pluck_index
 269              		.type	pluck_index, %object
 270              		.size	pluck_index, 1
 271              	pluck_index:
 272 0044 00       		.space	1
 273              		.global	amHere2
 274              		.type	amHere2, %object
 275              		.size	amHere2, 1
 276              	amHere2:
 277 0045 00       		.space	1
 278              		.global	spiCounter2
 279              		.type	spiCounter2, %object
 280              		.size	spiCounter2, 1
 281              	spiCounter2:
 282 0046 00       		.space	1
 283              		.global	newDataFlag2
 284              		.type	newDataFlag2, %object
 285              		.size	newDataFlag2, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 6


 286              	newDataFlag2:
 287 0047 00       		.space	1
 288              		.global	currentPluckBuffer
 289              		.type	currentPluckBuffer, %object
 290              		.size	currentPluckBuffer, 1
 291              	currentPluckBuffer:
 292 0048 00       		.space	1
 293              		.global	currentBarBuffer
 294              		.type	currentBarBuffer, %object
 295              		.size	currentBarBuffer, 1
 296              	currentBarBuffer:
 297 0049 00       		.space	1
 298              		.global	pluckErrorCount
 299              		.type	pluckErrorCount, %object
 300              		.size	pluckErrorCount, 1
 301              	pluckErrorCount:
 302 004a 00       		.space	1
 303              		.global	SPI1ErrorCount
 304 004b 00       		.align	1
 305              		.type	SPI1ErrorCount, %object
 306              		.size	SPI1ErrorCount, 2
 307              	SPI1ErrorCount:
 308 004c 0000     		.space	2
 309              		.global	inputData
 310              		.type	inputData, %object
 311              		.size	inputData, 1
 312              	inputData:
 313 004e 00       		.space	1
 314              		.section	.text.spis_1_ss,"ax",%progbits
 315              		.align	2
 316              		.global	spis_1_ss
 317              		.thumb
 318              		.thumb_func
 319              		.type	spis_1_ss, %function
 320              	spis_1_ss:
 321              	.LFB64:
 322              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** 
  10:main.c        **** #define EEPROM_NECKS_OFFSET 0
  11:main.c        **** #define EEPROM_COPEDENT_OFFSET 2
  12:main.c        **** #define COPEDENT_SIZE_IN_BYTES 278 //including name bytes
  13:main.c        **** #define COPEDENT_SIZE_IN_FLOATS 132 // not including name bytes
  14:main.c        **** #define NAME_LENGTH_IN_BYTES 14
  15:main.c        **** #define EEPROM_CALIBRATION_OFFSET (EEPROM_NECKS_OFFSET + EEPROM_COPEDENT_OFFSET + (MAX_NUM_COPEDENT
  16:main.c        **** #define CALIBRATION_SIZE_IN_BYTES NUM_PEDALS * 4 //for each pedal, store 2 bytes for high and 2 byt
  17:main.c        **** 
  18:main.c        **** #define myBufferSize 32
  19:main.c        **** void parseSysex(void);
  20:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 7


  21:main.c        **** uint8_t sysexBuffer[2048];
  22:main.c        **** uint32_t sysexPointer = 0;
  23:main.c        **** uint8_t receivingSysex = 0;
  24:main.c        **** uint8_t parsingSysex = 0;
  25:main.c        **** volatile uint8_t presetArray[2048];
  26:main.c        **** uint8_t presetNumberToWrite = 0;
  27:main.c        **** uint8_t copedentNumberToWrite = 0;
  28:main.c        **** uint8_t sendMessageEnd = 0;
  29:main.c        **** enum presetArraySectionState
  30:main.c        **** {
  31:main.c        ****     presetName = 0,
  32:main.c        ****     macroNames = 1,
  33:main.c        ****     initialVals = 2,
  34:main.c        ****     mapCountNext = 3,
  35:main.c        ****     mapping = 4,
  36:main.c        ****     presetEnd = 5,
  37:main.c        **** };
  38:main.c        **** uint8_t presetArraySection = presetName;
  39:main.c        **** 
  40:main.c        **** uint16_t messageArraySendCount = 0;
  41:main.c        **** uint16_t messageArraySize = 0;
  42:main.c        **** 
  43:main.c        **** uint8_t sysexMessageInProgress = 0;
  44:main.c        **** 
  45:main.c        **** uint8_t bufCount = 0;
  46:main.c        **** volatile uint8_t sendingMessage = 0;
  47:main.c        **** volatile uint8_t sendKnobs = 0;
  48:main.c        **** uint32_t currentFloat = 0;
  49:main.c        **** uint32_t mapCount = 0;
  50:main.c        **** 
  51:main.c        **** uint16_t valsCount = 0;
  52:main.c        **** uint16_t mapCountExpectation = 0;
  53:main.c        **** uint16_t numMappings = 0;
  54:main.c        **** volatile uint8_t parseThatMF = 0;
  55:main.c        **** volatile float valCheck = 0.0f;
  56:main.c        **** volatile float testVal = 0.0f;
  57:main.c        **** 
  58:main.c        **** int numStrings = 10;
  59:main.c        **** /*
  60:main.c        **** #define TUNING_ARRAY_SIZE 258
  61:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  62:main.c        **** */
  63:main.c        **** 
  64:main.c        **** volatile uint8 usbActivityCounter = 0u;
  65:main.c        **** uint8 midiMsg[4];
  66:main.c        **** uint8_t currentVBUS = 0;
  67:main.c        **** uint8_t prevVBUS = 0;
  68:main.c        **** volatile uint8_t USB_active = 0;
  69:main.c        **** volatile uint8_t USB_check_flag = 0;
  70:main.c        **** 
  71:main.c        **** 
  72:main.c        **** uint8 inBuffer[myBufferSize];
  73:main.c        **** 
  74:main.c        **** uint8 myArray[myBufferSize];
  75:main.c        **** uint8 myInputArray[2];
  76:main.c        **** int32_t linearPotValue32Bit[2];
  77:main.c        **** uint8_t i = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 8


  78:main.c        **** uint8_t counter = 0;
  79:main.c        **** uint8_t returnedData[myBufferSize];
  80:main.c        **** int32_t temper;
  81:main.c        **** int previousButtons[11];
  82:main.c        **** int octave = 5;
  83:main.c        **** uint16_t angle[10];
  84:main.c        **** uint16_t prevAngle[10];
  85:main.c        **** 
  86:main.c        **** uint16_t ADC_values[4];
  87:main.c        **** uint16_t rawAngle = 0;
  88:main.c        **** uint16_t midiSent = 0;
  89:main.c        **** uint16_t midiOverflow = 0;
  90:main.c        **** 
  91:main.c        **** uint8_t macroKnobValues[8];
  92:main.c        **** 
  93:main.c        **** uint8_t currentCopedent = 0;
  94:main.c        **** uint8_t necks[2] = {0,1};
  95:main.c        **** 
  96:main.c        **** void checkUSB_Vbus(void);
  97:main.c        **** void sendMIDIAllNotesOff(void);
  98:main.c        **** void sendMIDIPitchBend(int val, int channel);
  99:main.c        **** void firstCheckUSB_Vbus(void);
 100:main.c        **** void restartSystemCheck(void);
 101:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 102:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 103:main.c        **** CY_ISR_PROTO(SleepIsr_function);
 104:main.c        **** void noteEvent(int string);
 105:main.c        **** void I2C_reset(void);
 106:main.c        **** void CCEvent(int cc, int val);
 107:main.c        **** void DmaRxConfiguration(void);
 108:main.c        **** /* DMA Configuration for DMA_RX */
 109:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
 110:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
 111:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
 112:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
 113:main.c        **** 
 114:main.c        **** void DmaTxConfiguration(void);
 115:main.c        **** 
 116:main.c        **** /* DMA Configuration for DMA_TX */
 117:main.c        **** #define DMA_TX_BYTES_PER_BURST      (1u)
 118:main.c        **** #define DMA_TX_REQUEST_PER_BURST    (1u)
 119:main.c        **** #define DMA_TX_SRC_BASE             (CYDEV_SRAM_BASE)
 120:main.c        **** #define DMA_TX_DST_BASE             (CYDEV_PERIPH_BASE)
 121:main.c        **** 
 122:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
 123:main.c        **** #define BAR_BUFFER_SIZE                 (8u)
 124:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
 125:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 126:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 127:main.c        **** 
 128:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 129:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 130:main.c        **** 
 131:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 132:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 133:main.c        **** 
 134:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 9


 135:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 136:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 137:main.c        **** 
 138:main.c        **** volatile uint16_t strings[12];
 139:main.c        **** volatile uint16_t prevStrings[12];
 140:main.c        **** volatile uint16_t bar[2];
 141:main.c        **** volatile uint16_t prevBar[2];
 142:main.c        **** volatile uint16_t maxStrings[12];
 143:main.c        **** volatile uint8_t amHere = 0;
 144:main.c        **** volatile uint8_t spiCounter = 0;
 145:main.c        **** volatile uint8_t newDataFlag = 0;
 146:main.c        **** int prevOctave = 0;
 147:main.c        **** uint8_t pluck_index = 0;
 148:main.c        **** volatile uint8_t amHere2 = 0;
 149:main.c        **** volatile uint8_t spiCounter2 = 0;
 150:main.c        **** volatile uint8_t newDataFlag2 = 0;
 151:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 152:main.c        **** volatile uint8_t currentBarBuffer = 0;
 153:main.c        **** volatile uint8_t pluckErrorCount = 0;
 154:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 155:main.c        **** 
 156:main.c        **** 
 157:main.c        **** 
 158:main.c        **** volatile uint8_t inputData = 0;
 159:main.c        **** 
 160:main.c        **** 
 161:main.c        **** union breakFloat {
 162:main.c        ****  float f;
 163:main.c        ****  uint8_t b[4];  
 164:main.c        ****  uint32_t u32;
 165:main.c        **** };
 166:main.c        **** 
 167:main.c        **** 
 168:main.c        **** CY_ISR(spis_1_ss)
 169:main.c        **** {
 323              		.loc 1 169 0
 324              		.cfi_startproc
 325              		@ args = 0, pretend = 0, frame = 8
 326              		@ frame_needed = 1, uses_anonymous_args = 0
 327 0000 90B5     		push	{r4, r7, lr}
 328              		.cfi_def_cfa_offset 12
 329              		.cfi_offset 4, -12
 330              		.cfi_offset 7, -8
 331              		.cfi_offset 14, -4
 332 0002 83B0     		sub	sp, sp, #12
 333              		.cfi_def_cfa_offset 24
 334 0004 00AF     		add	r7, sp, #0
 335              		.cfi_def_cfa_register 7
 170:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 336              		.loc 1 170 0
 337 0006 554B     		ldr	r3, .L5
 338 0008 1B78     		ldrb	r3, [r3]
 339 000a DBB2     		uxtb	r3, r3
 340 000c 002B     		cmp	r3, #0
 341 000e 0CBF     		ite	eq
 342 0010 0123     		moveq	r3, #1
 343 0012 0023     		movne	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 10


 344 0014 DBB2     		uxtb	r3, r3
 345 0016 1A46     		mov	r2, r3
 346 0018 504B     		ldr	r3, .L5
 347 001a 1A70     		strb	r2, [r3]
 171:main.c        **** 
 172:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][25] =
 348              		.loc 1 172 0
 349 001c 4F4B     		ldr	r3, .L5
 350 001e 1B78     		ldrb	r3, [r3]
 351 0020 DBB2     		uxtb	r3, r3
 352 0022 002B     		cmp	r3, #0
 353 0024 0CBF     		ite	eq
 354 0026 0123     		moveq	r3, #1
 355 0028 0023     		movne	r3, #0
 356 002a DBB2     		uxtb	r3, r3
 357 002c 1946     		mov	r1, r3
 358 002e 4C4A     		ldr	r2, .L5+4
 359 0030 1A23     		movs	r3, #26
 360 0032 03FB01F3 		mul	r3, r3, r1
 361 0036 1344     		add	r3, r3, r2
 362 0038 1B78     		ldrb	r3, [r3]
 363 003a DBB2     		uxtb	r3, r3
 364 003c FE2B     		cmp	r3, #254
 365 003e 4FD1     		bne	.L2
 366              		.loc 1 172 0 is_stmt 0 discriminator 1
 367 0040 464B     		ldr	r3, .L5
 368 0042 1B78     		ldrb	r3, [r3]
 369 0044 DBB2     		uxtb	r3, r3
 370 0046 002B     		cmp	r3, #0
 371 0048 0CBF     		ite	eq
 372 004a 0123     		moveq	r3, #1
 373 004c 0023     		movne	r3, #0
 374 004e DBB2     		uxtb	r3, r3
 375 0050 1946     		mov	r1, r3
 376 0052 434A     		ldr	r2, .L5+4
 377 0054 1A23     		movs	r3, #26
 378 0056 03FB01F3 		mul	r3, r3, r1
 379 005a 1344     		add	r3, r3, r2
 380 005c 1933     		adds	r3, r3, #25
 381 005e 1B78     		ldrb	r3, [r3]
 382 0060 DBB2     		uxtb	r3, r3
 383 0062 FD2B     		cmp	r3, #253
 384 0064 3CD1     		bne	.L2
 385              	.LBB2:
 173:main.c        ****     {
 174:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 386              		.loc 1 174 0 is_stmt 1
 387 0066 0023     		movs	r3, #0
 388 0068 7B60     		str	r3, [r7, #4]
 389 006a 34E0     		b	.L3
 390              	.L4:
 175:main.c        ****         {
 176:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 391              		.loc 1 176 0 discriminator 3
 392 006c 3B4B     		ldr	r3, .L5
 393 006e 1B78     		ldrb	r3, [r3]
 394 0070 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 11


 395 0072 002B     		cmp	r3, #0
 396 0074 0CBF     		ite	eq
 397 0076 0123     		moveq	r3, #1
 398 0078 0023     		movne	r3, #0
 399 007a DBB2     		uxtb	r3, r3
 400 007c 1846     		mov	r0, r3
 401 007e 7B68     		ldr	r3, [r7, #4]
 402 0080 5B00     		lsls	r3, r3, #1
 403 0082 0133     		adds	r3, r3, #1
 404 0084 3649     		ldr	r1, .L5+4
 405 0086 1A22     		movs	r2, #26
 406 0088 02FB00F2 		mul	r2, r2, r0
 407 008c 0A44     		add	r2, r2, r1
 408 008e 1344     		add	r3, r3, r2
 409 0090 1B78     		ldrb	r3, [r3]
 410 0092 DBB2     		uxtb	r3, r3
 411 0094 9BB2     		uxth	r3, r3
 412 0096 1B02     		lsls	r3, r3, #8
 413 0098 9AB2     		uxth	r2, r3
 414 009a 304B     		ldr	r3, .L5
 415 009c 1B78     		ldrb	r3, [r3]
 416 009e DBB2     		uxtb	r3, r3
 417 00a0 002B     		cmp	r3, #0
 418 00a2 0CBF     		ite	eq
 419 00a4 0123     		moveq	r3, #1
 420 00a6 0023     		movne	r3, #0
 421 00a8 DBB2     		uxtb	r3, r3
 422 00aa 1C46     		mov	r4, r3
 423 00ac 7B68     		ldr	r3, [r7, #4]
 424 00ae 0133     		adds	r3, r3, #1
 425 00b0 5B00     		lsls	r3, r3, #1
 426 00b2 2B48     		ldr	r0, .L5+4
 427 00b4 1A21     		movs	r1, #26
 428 00b6 01FB04F1 		mul	r1, r1, r4
 429 00ba 0144     		add	r1, r1, r0
 430 00bc 0B44     		add	r3, r3, r1
 431 00be 1B78     		ldrb	r3, [r3]
 432 00c0 DBB2     		uxtb	r3, r3
 433 00c2 9BB2     		uxth	r3, r3
 434 00c4 1344     		add	r3, r3, r2
 435 00c6 99B2     		uxth	r1, r3
 436 00c8 264A     		ldr	r2, .L5+8
 437 00ca 7B68     		ldr	r3, [r7, #4]
 438 00cc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 174:main.c        ****         {
 439              		.loc 1 174 0 discriminator 3
 440 00d0 7B68     		ldr	r3, [r7, #4]
 441 00d2 0133     		adds	r3, r3, #1
 442 00d4 7B60     		str	r3, [r7, #4]
 443              	.L3:
 174:main.c        ****         {
 444              		.loc 1 174 0 is_stmt 0 discriminator 1
 445 00d6 244B     		ldr	r3, .L5+12
 446 00d8 1B68     		ldr	r3, [r3]
 447 00da 7A68     		ldr	r2, [r7, #4]
 448 00dc 9A42     		cmp	r2, r3
 449 00de C5DB     		blt	.L4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 12


 450              	.L2:
 451              	.LBE2:
 177:main.c        ****         }
 178:main.c        ****     }
 179:main.c        ****     SPIS_1_ClearRxBuffer();
 452              		.loc 1 179 0 is_stmt 1
 453 00e0 FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 180:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 454              		.loc 1 180 0
 455 00e4 214B     		ldr	r3, .L5+16
 456 00e6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 457 00e8 1846     		mov	r0, r3
 458 00ea FFF7FEFF 		bl	CyDmaClearPendingDrq
 181:main.c        **** 
 182:main.c        ****     //set up the next DMA transaction
 183:main.c        **** 
 184:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 459              		.loc 1 184 0
 460 00ee 1B4B     		ldr	r3, .L5
 461 00f0 1B78     		ldrb	r3, [r3]
 462 00f2 DBB2     		uxtb	r3, r3
 463 00f4 1A46     		mov	r2, r3
 464 00f6 1E4B     		ldr	r3, .L5+20
 465 00f8 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 466 00fa 0223     		movs	r3, #2
 467 00fc FE22     		movs	r2, #254
 468 00fe 1A21     		movs	r1, #26
 469 0100 FFF7FEFF 		bl	CyDmaTdSetConfiguration
 185:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 470              		.loc 1 185 0
 471 0104 154B     		ldr	r3, .L5
 472 0106 1B78     		ldrb	r3, [r3]
 473 0108 DBB2     		uxtb	r3, r3
 474 010a 1A46     		mov	r2, r3
 475 010c 184B     		ldr	r3, .L5+20
 476 010e 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 477 0110 124B     		ldr	r3, .L5
 478 0112 1B78     		ldrb	r3, [r3]
 479 0114 DBB2     		uxtb	r3, r3
 480 0116 1A46     		mov	r2, r3
 481 0118 1A23     		movs	r3, #26
 482 011a 03FB02F3 		mul	r3, r3, r2
 483 011e 104A     		ldr	r2, .L5+4
 484 0120 1344     		add	r3, r3, r2
 485 0122 9BB2     		uxth	r3, r3
 486 0124 1A46     		mov	r2, r3
 487 0126 46F25451 		movw	r1, #25940
 488 012a FFF7FEFF 		bl	CyDmaTdSetAddress
 186:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 489              		.loc 1 186 0
 490 012e 0F4B     		ldr	r3, .L5+16
 491 0130 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 492 0132 0A4B     		ldr	r3, .L5
 493 0134 1B78     		ldrb	r3, [r3]
 494 0136 DBB2     		uxtb	r3, r3
 495 0138 1946     		mov	r1, r3
 496 013a 0D4B     		ldr	r3, .L5+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 13


 497 013c 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 498 013e 1946     		mov	r1, r3
 499 0140 1046     		mov	r0, r2
 500 0142 FFF7FEFF 		bl	CyDmaChSetInitialTd
 187:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 501              		.loc 1 187 0
 502 0146 094B     		ldr	r3, .L5+16
 503 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 504 014a 0121     		movs	r1, #1
 505 014c 1846     		mov	r0, r3
 506 014e FFF7FEFF 		bl	CyDmaChEnable
 188:main.c        **** 
 189:main.c        **** }
 507              		.loc 1 189 0
 508 0152 00BF     		nop
 509 0154 0C37     		adds	r7, r7, #12
 510              		.cfi_def_cfa_offset 12
 511 0156 BD46     		mov	sp, r7
 512              		.cfi_def_cfa_register 13
 513              		@ sp needed
 514 0158 90BD     		pop	{r4, r7, pc}
 515              	.L6:
 516 015a 00BF     		.align	2
 517              	.L5:
 518 015c 00000000 		.word	currentPluckBuffer
 519 0160 00000000 		.word	rxBufferPluck
 520 0164 00000000 		.word	strings
 521 0168 00000000 		.word	numStrings
 522 016c 00000000 		.word	rx1Channel
 523 0170 00000000 		.word	rx1TD
 524              		.cfi_endproc
 525              	.LFE64:
 526              		.size	spis_1_ss, .-spis_1_ss
 527              		.global	spiAdjusted
 528              		.bss
 529              		.type	spiAdjusted, %object
 530              		.size	spiAdjusted, 1
 531              	spiAdjusted:
 532 004f 00       		.space	1
 533              		.global	mySpiCounter
 534              		.type	mySpiCounter, %object
 535              		.size	mySpiCounter, 1
 536              	mySpiCounter:
 537 0050 00       		.space	1
 538              		.global	offsetErrorCount
 539 0051 00       		.align	1
 540              		.type	offsetErrorCount, %object
 541              		.size	offsetErrorCount, 2
 542              	offsetErrorCount:
 543 0052 0000     		.space	2
 544              		.global	SPI2errorflag
 545              		.type	SPI2errorflag, %object
 546              		.size	SPI2errorflag, 1
 547              	SPI2errorflag:
 548 0054 00       		.space	1
 549              		.global	bar_index
 550 0055 000000   		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 14


 551              		.type	bar_index, %object
 552              		.size	bar_index, 4
 553              	bar_index:
 554 0058 00000000 		.space	4
 555              		.comm	knobs,4,4
 556              		.comm	prevKnobs,4,4
 557              		.global	SPI2started
 558              		.type	SPI2started, %object
 559              		.size	SPI2started, 1
 560              	SPI2started:
 561 005c 00       		.space	1
 562              		.section	.text.spis_2_ss,"ax",%progbits
 563              		.align	2
 564              		.global	spis_2_ss
 565              		.thumb
 566              		.thumb_func
 567              		.type	spis_2_ss, %function
 568              	spis_2_ss:
 569              	.LFB65:
 190:main.c        **** 
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        **** uint8_t spiAdjusted = 0;
 194:main.c        **** uint8_t mySpiCounter = 0;
 195:main.c        **** volatile uint16_t offsetErrorCount = 0;
 196:main.c        **** volatile uint8_t SPI2errorflag = 0;
 197:main.c        **** volatile int bar_index = 0;
 198:main.c        **** uint8_t knobs[4];
 199:main.c        **** uint8_t prevKnobs[4];
 200:main.c        **** 
 201:main.c        **** volatile uint8_t SPI2started = 0;
 202:main.c        **** 
 203:main.c        **** 
 204:main.c        **** CY_ISR(spis_2_ss)
 205:main.c        **** {
 570              		.loc 1 205 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574 0000 80B5     		push	{r7, lr}
 575              		.cfi_def_cfa_offset 8
 576              		.cfi_offset 7, -8
 577              		.cfi_offset 14, -4
 578 0002 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 206:main.c        **** 
 207:main.c        ****     currentBarBuffer = !currentBarBuffer;
 580              		.loc 1 207 0
 581 0004 214B     		ldr	r3, .L8
 582 0006 1B78     		ldrb	r3, [r3]
 583 0008 DBB2     		uxtb	r3, r3
 584 000a 002B     		cmp	r3, #0
 585 000c 0CBF     		ite	eq
 586 000e 0123     		moveq	r3, #1
 587 0010 0023     		movne	r3, #0
 588 0012 DBB2     		uxtb	r3, r3
 589 0014 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 15


 590 0016 1D4B     		ldr	r3, .L8
 591 0018 1A70     		strb	r2, [r3]
 208:main.c        ****     SPIS_2_ClearRxBuffer();
 592              		.loc 1 208 0
 593 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 209:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 594              		.loc 1 209 0
 595 001e 1C4B     		ldr	r3, .L8+4
 596 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 597 0022 1846     		mov	r0, r3
 598 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 210:main.c        **** 
 211:main.c        ****     //set up the next DMA transaction
 212:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 599              		.loc 1 212 0
 600 0028 184B     		ldr	r3, .L8
 601 002a 1B78     		ldrb	r3, [r3]
 602 002c DBB2     		uxtb	r3, r3
 603 002e 1A46     		mov	r2, r3
 604 0030 184B     		ldr	r3, .L8+8
 605 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 606 0034 0623     		movs	r3, #6
 607 0036 FE22     		movs	r2, #254
 608 0038 0821     		movs	r1, #8
 609 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 213:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 610              		.loc 1 213 0
 611 003e 134B     		ldr	r3, .L8
 612 0040 1B78     		ldrb	r3, [r3]
 613 0042 DBB2     		uxtb	r3, r3
 614 0044 1A46     		mov	r2, r3
 615 0046 134B     		ldr	r3, .L8+8
 616 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 617 004a 104B     		ldr	r3, .L8
 618 004c 1B78     		ldrb	r3, [r3]
 619 004e DBB2     		uxtb	r3, r3
 620 0050 DB00     		lsls	r3, r3, #3
 621 0052 114A     		ldr	r2, .L8+12
 622 0054 1344     		add	r3, r3, r2
 623 0056 9BB2     		uxth	r3, r3
 624 0058 1A46     		mov	r2, r3
 625 005a 46F25751 		movw	r1, #25943
 626 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 214:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 627              		.loc 1 214 0
 628 0062 0B4B     		ldr	r3, .L8+4
 629 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 630 0066 094B     		ldr	r3, .L8
 631 0068 1B78     		ldrb	r3, [r3]
 632 006a DBB2     		uxtb	r3, r3
 633 006c 1946     		mov	r1, r3
 634 006e 094B     		ldr	r3, .L8+8
 635 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 636 0072 1946     		mov	r1, r3
 637 0074 1046     		mov	r0, r2
 638 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 215:main.c        ****     CyDmaChEnable(rx2Channel, 1);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 16


 639              		.loc 1 215 0
 640 007a 054B     		ldr	r3, .L8+4
 641 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 642 007e 0121     		movs	r1, #1
 643 0080 1846     		mov	r0, r3
 644 0082 FFF7FEFF 		bl	CyDmaChEnable
 216:main.c        **** }
 645              		.loc 1 216 0
 646 0086 00BF     		nop
 647 0088 80BD     		pop	{r7, pc}
 648              	.L9:
 649 008a 00BF     		.align	2
 650              	.L8:
 651 008c 00000000 		.word	currentBarBuffer
 652 0090 00000000 		.word	rx2Channel
 653 0094 00000000 		.word	rx2TD
 654 0098 00000000 		.word	rxBufferBar
 655              		.cfi_endproc
 656              	.LFE65:
 657              		.size	spis_2_ss, .-spis_2_ss
 658              		.bss
 659 005d 000000   		.align	2
 660              	eepromArray:
 661 0060 0000     		.space	2
 662              		.global	array
 663 0062 0000     		.align	2
 664              		.type	array, %object
 665              		.size	array, 2
 666              	array:
 667 0064 0000     		.space	2
 668              		.comm	eepromReturnValue,1,1
 669              		.global	Em_EEPROM_em_EepromStorage
 670              		.section	.rodata
 671              		.align	8
 672              		.type	Em_EEPROM_em_EepromStorage, %object
 673              		.size	Em_EEPROM_em_EepromStorage, 1024
 674              	Em_EEPROM_em_EepromStorage:
 675 0000 00000000 		.space	1024
 675      00000000 
 675      00000000 
 675      00000000 
 675      00000000 
 676              		.comm	eeprom_cnt,1,1
 677              		.comm	status,4,4
 678              		.comm	ptr,4,4
 679              		.global	barCount
 680              		.bss
 681 0066 0000     		.align	2
 682              		.type	barCount, %object
 683              		.size	barCount, 4
 684              	barCount:
 685 0068 00000000 		.space	4
 686              		.section	.text.Vbus_function,"ax",%progbits
 687              		.align	2
 688              		.global	Vbus_function
 689              		.thumb
 690              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 17


 691              		.type	Vbus_function, %function
 692              	Vbus_function:
 693              	.LFB66:
 217:main.c        **** 
 218:main.c        **** 
 219:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 220:main.c        ****                                             
 221:main.c        ****     uint8 array[] ={ 0, 0 };
 222:main.c        ****                                 
 223:main.c        ****     /*Return status for EEPROM and UART*/ 
 224:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 225:main.c        **** 
 226:main.c        **** 
 227:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 228:main.c        **** #if defined (__ICCARM__)
 229:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 230:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 231:main.c        **** #else
 232:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 233:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 234:main.c        **** #endif /* defined (__ICCARM__) */
 235:main.c        **** 
 236:main.c        ****     uint8 eeprom_cnt;
 237:main.c        ****     cystatus status;
 238:main.c        ****     volatile const uint8 * ptr;
 239:main.c        **** volatile int barCount = 0;
 240:main.c        **** 
 241:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 242:main.c        ****     
 243:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 244:main.c        **** 
 245:main.c        **** CY_ISR(Vbus_function)
 246:main.c        **** {
 694              		.loc 1 246 0
 695              		.cfi_startproc
 696              		@ args = 0, pretend = 0, frame = 0
 697              		@ frame_needed = 1, uses_anonymous_args = 0
 698 0000 80B5     		push	{r7, lr}
 699              		.cfi_def_cfa_offset 8
 700              		.cfi_offset 7, -8
 701              		.cfi_offset 14, -4
 702 0002 00AF     		add	r7, sp, #0
 703              		.cfi_def_cfa_register 7
 247:main.c        ****     //plug or unplug event
 248:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 249:main.c        ****     //otherwise, restart
 250:main.c        ****     my_Vbus_ISR_ClearPending();
 704              		.loc 1 250 0
 705 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 251:main.c        ****     vBusPin_ClearInterrupt();
 706              		.loc 1 251 0
 707 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 252:main.c        ****     restartSystemCheck();
 708              		.loc 1 252 0
 709 000c FFF7FEFF 		bl	restartSystemCheck
 253:main.c        **** 
 254:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 18


 710              		.loc 1 254 0
 711 0010 00BF     		nop
 712 0012 80BD     		pop	{r7, pc}
 713              		.cfi_endproc
 714              	.LFE66:
 715              		.size	Vbus_function, .-Vbus_function
 716              		.section	.text.restartSystemCheck,"ax",%progbits
 717              		.align	2
 718              		.global	restartSystemCheck
 719              		.thumb
 720              		.thumb_func
 721              		.type	restartSystemCheck, %function
 722              	restartSystemCheck:
 723              	.LFB67:
 255:main.c        **** 
 256:main.c        **** void restartSystemCheck()
 257:main.c        **** {
 724              		.loc 1 257 0
 725              		.cfi_startproc
 726              		@ args = 0, pretend = 0, frame = 0
 727              		@ frame_needed = 1, uses_anonymous_args = 0
 728 0000 80B5     		push	{r7, lr}
 729              		.cfi_def_cfa_offset 8
 730              		.cfi_offset 7, -8
 731              		.cfi_offset 14, -4
 732 0002 00AF     		add	r7, sp, #0
 733              		.cfi_def_cfa_register 7
 258:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 734              		.loc 1 258 0
 735 0004 184B     		ldr	r3, .L15
 736 0006 0222     		movs	r2, #2
 737 0008 1849     		ldr	r1, .L15+4
 738 000a 0020     		movs	r0, #0
 739 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 740 0010 0346     		mov	r3, r0
 741 0012 1A46     		mov	r2, r3
 742 0014 164B     		ldr	r3, .L15+8
 743 0016 1A70     		strb	r2, [r3]
 259:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 260:main.c        ****     if (USB_VBusPresent() == 1)
 744              		.loc 1 260 0
 745 0018 FFF7FEFF 		bl	USB_VBusPresent
 746 001c 0346     		mov	r3, r0
 747 001e 012B     		cmp	r3, #1
 748 0020 20D1     		bne	.L14
 261:main.c        ****     {
 262:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 749              		.loc 1 262 0
 750 0022 124B     		ldr	r3, .L15+4
 751 0024 1B78     		ldrb	r3, [r3]
 752 0026 DBB2     		uxtb	r3, r3
 753 0028 012B     		cmp	r3, #1
 754 002a 0CD1     		bne	.L13
 263:main.c        ****         {
 264:main.c        ****             //a flag says we just restarted
 265:main.c        ****             //write a zero so it knows next time that it's OK to restart
 266:main.c        ****             array[0] = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 19


 755              		.loc 1 266 0
 756 002c 114B     		ldr	r3, .L15+12
 757 002e 0022     		movs	r2, #0
 758 0030 1A70     		strb	r2, [r3]
 267:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 759              		.loc 1 267 0
 760 0032 0D4B     		ldr	r3, .L15
 761 0034 0222     		movs	r2, #2
 762 0036 0F49     		ldr	r1, .L15+12
 763 0038 0020     		movs	r0, #0
 764 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 268:main.c        ****             USB_check_flag = 1;
 765              		.loc 1 268 0
 766 003e 0E4B     		ldr	r3, .L15+16
 767 0040 0122     		movs	r2, #1
 768 0042 1A70     		strb	r2, [r3]
 269:main.c        ****         }
 270:main.c        ****         else
 271:main.c        ****         {
 272:main.c        ****            //otherwise, we need to restart
 273:main.c        ****            array[0] = 1;
 274:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 275:main.c        ****             USB_Stop();
 276:main.c        ****             I2C_1_Stop();
 277:main.c        ****             CySoftwareReset();
 278:main.c        ****         }
 279:main.c        ****     }
 280:main.c        **** }
 769              		.loc 1 280 0
 770 0044 0EE0     		b	.L14
 771              	.L13:
 273:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 772              		.loc 1 273 0
 773 0046 0B4B     		ldr	r3, .L15+12
 774 0048 0122     		movs	r2, #1
 775 004a 1A70     		strb	r2, [r3]
 274:main.c        ****             USB_Stop();
 776              		.loc 1 274 0
 777 004c 064B     		ldr	r3, .L15
 778 004e 0222     		movs	r2, #2
 779 0050 0849     		ldr	r1, .L15+12
 780 0052 0020     		movs	r0, #0
 781 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 275:main.c        ****             I2C_1_Stop();
 782              		.loc 1 275 0
 783 0058 FFF7FEFF 		bl	USB_Stop
 276:main.c        ****             CySoftwareReset();
 784              		.loc 1 276 0
 785 005c FFF7FEFF 		bl	I2C_1_Stop
 277:main.c        ****         }
 786              		.loc 1 277 0
 787 0060 FFF7FEFF 		bl	CySoftwareReset
 788              	.L14:
 789              		.loc 1 280 0
 790 0064 00BF     		nop
 791 0066 80BD     		pop	{r7, pc}
 792              	.L16:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 20


 793              		.align	2
 794              	.L15:
 795 0068 00000000 		.word	Em_EEPROM_context
 796 006c 60000000 		.word	eepromArray
 797 0070 00000000 		.word	eepromReturnValue
 798 0074 00000000 		.word	array
 799 0078 00000000 		.word	USB_check_flag
 800              		.cfi_endproc
 801              	.LFE67:
 802              		.size	restartSystemCheck, .-restartSystemCheck
 803              		.global	__aeabi_fcmpgt
 804              		.global	__aeabi_fcmplt
 805              		.section	.text.LEAF_clip,"ax",%progbits
 806              		.align	2
 807              		.global	LEAF_clip
 808              		.thumb
 809              		.thumb_func
 810              		.type	LEAF_clip, %function
 811              	LEAF_clip:
 812              	.LFB68:
 281:main.c        ****     
 282:main.c        **** #define INV_440 0.0022727272727273f
 283:main.c        **** 
 284:main.c        **** float   LEAF_clip(float min, float val, float max)
 285:main.c        **** {
 813              		.loc 1 285 0
 814              		.cfi_startproc
 815              		@ args = 0, pretend = 0, frame = 24
 816              		@ frame_needed = 1, uses_anonymous_args = 0
 817 0000 80B5     		push	{r7, lr}
 818              		.cfi_def_cfa_offset 8
 819              		.cfi_offset 7, -8
 820              		.cfi_offset 14, -4
 821 0002 86B0     		sub	sp, sp, #24
 822              		.cfi_def_cfa_offset 32
 823 0004 00AF     		add	r7, sp, #0
 824              		.cfi_def_cfa_register 7
 825 0006 F860     		str	r0, [r7, #12]	@ float
 826 0008 B960     		str	r1, [r7, #8]	@ float
 827 000a 7A60     		str	r2, [r7, #4]	@ float
 286:main.c        ****     float tempmin = min;
 828              		.loc 1 286 0
 829 000c FB68     		ldr	r3, [r7, #12]	@ float
 830 000e 7B61     		str	r3, [r7, #20]	@ float
 287:main.c        ****     float tempmax = max;
 831              		.loc 1 287 0
 832 0010 7B68     		ldr	r3, [r7, #4]	@ float
 833 0012 3B61     		str	r3, [r7, #16]	@ float
 288:main.c        ****     if (min > max)
 834              		.loc 1 288 0
 835 0014 7968     		ldr	r1, [r7, #4]	@ float
 836 0016 F868     		ldr	r0, [r7, #12]	@ float
 837 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 838 001c 0346     		mov	r3, r0
 839 001e 002B     		cmp	r3, #0
 840 0020 03D0     		beq	.L18
 289:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 21


 290:main.c        ****         tempmin = max;
 841              		.loc 1 290 0
 842 0022 7B68     		ldr	r3, [r7, #4]	@ float
 843 0024 7B61     		str	r3, [r7, #20]	@ float
 291:main.c        ****         tempmax = min;
 844              		.loc 1 291 0
 845 0026 FB68     		ldr	r3, [r7, #12]	@ float
 846 0028 3B61     		str	r3, [r7, #16]	@ float
 847              	.L18:
 292:main.c        ****     }
 293:main.c        ****     if (val < tempmin)
 848              		.loc 1 293 0
 849 002a 7969     		ldr	r1, [r7, #20]	@ float
 850 002c B868     		ldr	r0, [r7, #8]	@ float
 851 002e FFF7FEFF 		bl	__aeabi_fcmplt
 852 0032 0346     		mov	r3, r0
 853 0034 002B     		cmp	r3, #0
 854 0036 01D0     		beq	.L28
 294:main.c        ****     {
 295:main.c        ****         return tempmin;
 855              		.loc 1 295 0
 856 0038 7B69     		ldr	r3, [r7, #20]	@ float
 857 003a 09E0     		b	.L22
 858              	.L28:
 296:main.c        ****     }
 297:main.c        ****     else if (val > tempmax)
 859              		.loc 1 297 0
 860 003c 3969     		ldr	r1, [r7, #16]	@ float
 861 003e B868     		ldr	r0, [r7, #8]	@ float
 862 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 863 0044 0346     		mov	r3, r0
 864 0046 002B     		cmp	r3, #0
 865 0048 01D0     		beq	.L29
 298:main.c        ****     {
 299:main.c        ****         return tempmax;
 866              		.loc 1 299 0
 867 004a 3B69     		ldr	r3, [r7, #16]	@ float
 868 004c 00E0     		b	.L22
 869              	.L29:
 300:main.c        ****     }
 301:main.c        ****     else
 302:main.c        ****     {
 303:main.c        ****         return val;
 870              		.loc 1 303 0
 871 004e BB68     		ldr	r3, [r7, #8]	@ float
 872              	.L22:
 304:main.c        ****     }
 305:main.c        **** }
 873              		.loc 1 305 0
 874 0050 1846     		mov	r0, r3
 875 0052 1837     		adds	r7, r7, #24
 876              		.cfi_def_cfa_offset 8
 877 0054 BD46     		mov	sp, r7
 878              		.cfi_def_cfa_register 13
 879              		@ sp needed
 880 0056 80BD     		pop	{r7, pc}
 881              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 22


 882              	.LFE68:
 883              		.size	LEAF_clip, .-LEAF_clip
 884              		.global	__aeabi_fcmple
 885              		.global	__aeabi_fmul
 886              		.section	.text.mtof,"ax",%progbits
 887              		.align	2
 888              		.global	mtof
 889              		.thumb
 890              		.thumb_func
 891              		.type	mtof, %function
 892              	mtof:
 893              	.LFB69:
 306:main.c        **** float mtof(float f)
 307:main.c        **** {
 894              		.loc 1 307 0
 895              		.cfi_startproc
 896              		@ args = 0, pretend = 0, frame = 8
 897              		@ frame_needed = 1, uses_anonymous_args = 0
 898 0000 80B5     		push	{r7, lr}
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 82B0     		sub	sp, sp, #8
 903              		.cfi_def_cfa_offset 16
 904 0004 00AF     		add	r7, sp, #0
 905              		.cfi_def_cfa_register 7
 906 0006 7860     		str	r0, [r7, #4]	@ float
 308:main.c        ****     if (f <= -1500.0f) return(0);
 907              		.loc 1 308 0
 908 0008 1349     		ldr	r1, .L40
 909 000a 7868     		ldr	r0, [r7, #4]	@ float
 910 000c FFF7FEFF 		bl	__aeabi_fcmple
 911 0010 0346     		mov	r3, r0
 912 0012 002B     		cmp	r3, #0
 913 0014 02D0     		beq	.L38
 914              		.loc 1 308 0 is_stmt 0 discriminator 1
 915 0016 4FF00003 		mov	r3, #0
 916 001a 19E0     		b	.L33
 917              	.L38:
 309:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 918              		.loc 1 309 0 is_stmt 1
 919 001c 0F49     		ldr	r1, .L40+4
 920 001e 7868     		ldr	r0, [r7, #4]	@ float
 921 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 922 0024 0346     		mov	r3, r0
 923 0026 002B     		cmp	r3, #0
 924 0028 04D0     		beq	.L39
 925              		.loc 1 309 0 is_stmt 0 discriminator 1
 926 002a 0C48     		ldr	r0, .L40+4
 927 002c FFF7FEFF 		bl	mtof
 928 0030 0346     		mov	r3, r0
 929 0032 0DE0     		b	.L33
 930              	.L39:
 310:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 931              		.loc 1 310 0 is_stmt 1
 932 0034 0A49     		ldr	r1, .L40+8
 933 0036 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 23


 934 0038 FFF7FEFF 		bl	__aeabi_fmul
 935 003c 0346     		mov	r3, r0
 936 003e 1846     		mov	r0, r3
 937 0040 FFF7FEFF 		bl	expf
 938 0044 0346     		mov	r3, r0
 939 0046 0749     		ldr	r1, .L40+12
 940 0048 1846     		mov	r0, r3
 941 004a FFF7FEFF 		bl	__aeabi_fmul
 942 004e 0346     		mov	r3, r0
 943              	.L33:
 311:main.c        **** }
 944              		.loc 1 311 0
 945 0050 1846     		mov	r0, r3
 946 0052 0837     		adds	r7, r7, #8
 947              		.cfi_def_cfa_offset 8
 948 0054 BD46     		mov	sp, r7
 949              		.cfi_def_cfa_register 13
 950              		@ sp needed
 951 0056 80BD     		pop	{r7, pc}
 952              	.L41:
 953              		.align	2
 954              	.L40:
 955 0058 0080BBC4 		.word	-994344960
 956 005c 0060BB44 		.word	1153130496
 957 0060 20986C3D 		.word	1030527008
 958 0064 13D00241 		.word	1090703379
 959              		.cfi_endproc
 960              	.LFE69:
 961              		.size	mtof, .-mtof
 962              		.section	.text.ftom,"ax",%progbits
 963              		.align	2
 964              		.global	ftom
 965              		.thumb
 966              		.thumb_func
 967              		.type	ftom, %function
 968              	ftom:
 969              	.LFB70:
 312:main.c        **** 
 313:main.c        **** float ftom(float f)
 314:main.c        **** {
 970              		.loc 1 314 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 8
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974 0000 80B5     		push	{r7, lr}
 975              		.cfi_def_cfa_offset 8
 976              		.cfi_offset 7, -8
 977              		.cfi_offset 14, -4
 978 0002 82B0     		sub	sp, sp, #8
 979              		.cfi_def_cfa_offset 16
 980 0004 00AF     		add	r7, sp, #0
 981              		.cfi_def_cfa_register 7
 982 0006 7860     		str	r0, [r7, #4]	@ float
 315:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 983              		.loc 1 315 0
 984 0008 4FF00001 		mov	r1, #0
 985 000c 7868     		ldr	r0, [r7, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 24


 986 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 987 0012 0346     		mov	r3, r0
 988 0014 002B     		cmp	r3, #0
 989 0016 0ED0     		beq	.L48
 990              		.loc 1 315 0 is_stmt 0 discriminator 1
 991 0018 0949     		ldr	r1, .L49
 992 001a 7868     		ldr	r0, [r7, #4]	@ float
 993 001c FFF7FEFF 		bl	__aeabi_fmul
 994 0020 0346     		mov	r3, r0
 995 0022 1846     		mov	r0, r3
 996 0024 FFF7FEFF 		bl	logf
 997 0028 0346     		mov	r3, r0
 998 002a 0649     		ldr	r1, .L49+4
 999 002c 1846     		mov	r0, r3
 1000 002e FFF7FEFF 		bl	__aeabi_fmul
 1001 0032 0346     		mov	r3, r0
 1002 0034 00E0     		b	.L46
 1003              	.L48:
 1004              		.loc 1 315 0 discriminator 2
 1005 0036 044B     		ldr	r3, .L49+8
 1006              	.L46:
 316:main.c        **** }
 1007              		.loc 1 316 0 is_stmt 1 discriminator 5
 1008 0038 1846     		mov	r0, r3
 1009 003a 0837     		adds	r7, r7, #8
 1010              		.cfi_def_cfa_offset 8
 1011 003c BD46     		mov	sp, r7
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 003e 80BD     		pop	{r7, pc}
 1015              	.L50:
 1016              		.align	2
 1017              	.L49:
 1018 0040 D27EFA3D 		.word	1039826642
 1019 0044 AC7F8A41 		.word	1099595692
 1020 0048 0080BBC4 		.word	-994344960
 1021              		.cfi_endproc
 1022              	.LFE70:
 1023              		.size	ftom, .-ftom
 1024              		.global	__aeabi_fsub
 1025              		.global	__aeabi_fadd
 1026              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1027              		.align	2
 1028              		.global	LEAF_interpolation_linear
 1029              		.thumb
 1030              		.thumb_func
 1031              		.type	LEAF_interpolation_linear, %function
 1032              	LEAF_interpolation_linear:
 1033              	.LFB71:
 317:main.c        **** 
 318:main.c        **** // alpha, [0.0, 1.0]
 319:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 320:main.c        **** {
 1034              		.loc 1 320 0
 1035              		.cfi_startproc
 1036              		@ args = 0, pretend = 0, frame = 24
 1037              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 25


 1038 0000 80B5     		push	{r7, lr}
 1039              		.cfi_def_cfa_offset 8
 1040              		.cfi_offset 7, -8
 1041              		.cfi_offset 14, -4
 1042 0002 86B0     		sub	sp, sp, #24
 1043              		.cfi_def_cfa_offset 32
 1044 0004 00AF     		add	r7, sp, #0
 1045              		.cfi_def_cfa_register 7
 1046 0006 F860     		str	r0, [r7, #12]	@ float
 1047 0008 B960     		str	r1, [r7, #8]	@ float
 1048 000a 7A60     		str	r2, [r7, #4]	@ float
 321:main.c        ****     float omAlpha = 1.0f - alpha;
 1049              		.loc 1 321 0
 1050 000c 7968     		ldr	r1, [r7, #4]	@ float
 1051 000e 4FF07E50 		mov	r0, #1065353216
 1052 0012 FFF7FEFF 		bl	__aeabi_fsub
 1053 0016 0346     		mov	r3, r0
 1054 0018 7B61     		str	r3, [r7, #20]	@ float
 322:main.c        ****     
 323:main.c        ****     // First 1/2 of interpolation
 324:main.c        ****     float out = A * omAlpha;
 1055              		.loc 1 324 0
 1056 001a 7969     		ldr	r1, [r7, #20]	@ float
 1057 001c F868     		ldr	r0, [r7, #12]	@ float
 1058 001e FFF7FEFF 		bl	__aeabi_fmul
 1059 0022 0346     		mov	r3, r0
 1060 0024 3B61     		str	r3, [r7, #16]	@ float
 325:main.c        ****     
 326:main.c        ****     out += B * alpha;
 1061              		.loc 1 326 0
 1062 0026 7968     		ldr	r1, [r7, #4]	@ float
 1063 0028 B868     		ldr	r0, [r7, #8]	@ float
 1064 002a FFF7FEFF 		bl	__aeabi_fmul
 1065 002e 0346     		mov	r3, r0
 1066 0030 1946     		mov	r1, r3
 1067 0032 3869     		ldr	r0, [r7, #16]	@ float
 1068 0034 FFF7FEFF 		bl	__aeabi_fadd
 1069 0038 0346     		mov	r3, r0
 1070 003a 3B61     		str	r3, [r7, #16]	@ float
 327:main.c        ****     
 328:main.c        ****     return out;
 1071              		.loc 1 328 0
 1072 003c 3B69     		ldr	r3, [r7, #16]	@ float
 329:main.c        **** }
 1073              		.loc 1 329 0
 1074 003e 1846     		mov	r0, r3
 1075 0040 1837     		adds	r7, r7, #24
 1076              		.cfi_def_cfa_offset 8
 1077 0042 BD46     		mov	sp, r7
 1078              		.cfi_def_cfa_register 13
 1079              		@ sp needed
 1080 0044 80BD     		pop	{r7, pc}
 1081              		.cfi_endproc
 1082              	.LFE71:
 1083              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1084              		.comm	I2Cbuff1,256,4
 1085              		.comm	I2Cbuff2,16,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 26


 1086              		.global	send_it
 1087 0046 00BF     		.bss
 1088              		.type	send_it, %object
 1089              		.size	send_it, 1
 1090              	send_it:
 1091 006c 00       		.space	1
 1092              		.global	mux_states
 1093              		.data
 1094 000a 0000     		.align	2
 1095              		.type	mux_states, %object
 1096              		.size	mux_states, 24
 1097              	mux_states:
 1098 000c 05       		.byte	5
 1099 000d 00       		.byte	0
 1100 000e 05       		.byte	5
 1101 000f 01       		.byte	1
 1102 0010 05       		.byte	5
 1103 0011 02       		.byte	2
 1104 0012 05       		.byte	5
 1105 0013 03       		.byte	3
 1106 0014 05       		.byte	5
 1107 0015 04       		.byte	4
 1108 0016 00       		.byte	0
 1109 0017 00       		.byte	0
 1110 0018 01       		.byte	1
 1111 0019 00       		.byte	0
 1112 001a 03       		.byte	3
 1113 001b 00       		.byte	0
 1114 001c 04       		.byte	4
 1115 001d 00       		.byte	0
 1116 001e 02       		.byte	2
 1117 001f 00       		.byte	0
 1118 0020 05       		.byte	5
 1119 0021 05       		.byte	5
 1120 0022 06       		.byte	6
 1121 0023 00       		.byte	0
 1122              		.global	i2c_skipped
 1123              		.bss
 1124 006d 000000   		.align	2
 1125              		.type	i2c_skipped, %object
 1126              		.size	i2c_skipped, 12
 1127              	i2c_skipped:
 1128 0070 00000000 		.space	12
 1128      00000000 
 1128      00000000 
 1129              		.global	pedals_low
 1130              		.data
 1131              		.align	2
 1132              		.type	pedals_low, %object
 1133              		.size	pedals_low, 20
 1134              	pedals_low:
 1135 0024 830A     		.short	2691
 1136 0026 0109     		.short	2305
 1137 0028 9909     		.short	2457
 1138 002a 0E02     		.short	526
 1139 002c 9A0E     		.short	3738
 1140 002e 0309     		.short	2307
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 27


 1141 0030 C60B     		.short	3014
 1142 0032 8E08     		.short	2190
 1143 0034 E90A     		.short	2793
 1144 0036 2605     		.short	1318
 1145              		.global	pedals_high
 1146              		.align	2
 1147              		.type	pedals_high, %object
 1148              		.size	pedals_high, 20
 1149              	pedals_high:
 1150 0038 ED0A     		.short	2797
 1151 003a 6509     		.short	2405
 1152 003c 140A     		.short	2580
 1153 003e 8702     		.short	647
 1154 0040 0E0F     		.short	3854
 1155 0042 9D09     		.short	2461
 1156 0044 450C     		.short	3141
 1157 0046 3109     		.short	2353
 1158 0048 760B     		.short	2934
 1159 004a E005     		.short	1504
 1160              		.global	deadzone
 1161              		.align	1
 1162              		.type	deadzone, %object
 1163              		.size	deadzone, 2
 1164              	deadzone:
 1165 004c 9600     		.short	150
 1166              		.global	volumePedal
 1167              		.align	1
 1168              		.type	volumePedal, %object
 1169              		.size	volumePedal, 2
 1170              	volumePedal:
 1171 004e FF0F     		.short	4095
 1172              		.comm	processed_pedals,20,4
 1173              		.comm	prev_processed_pedals,20,4
 1174              		.comm	pedals8bit,10,4
 1175              		.comm	prev_processed_volumePedal,2,2
 1176              		.comm	processed_volumePedal,2,2
 1177              		.global	fretMeasurements
 1178              		.align	2
 1179              		.type	fretMeasurements, %object
 1180              		.size	fretMeasurements, 64
 1181              	fretMeasurements:
 1182 0050 001E7547 		.word	1198857728
 1183 0054 00A07047 		.word	1198563328
 1184 0058 0052F846 		.word	1190679040
 1185 005c 00000000 		.word	0
 1186 0060 00B01A47 		.word	1192931328
 1187 0064 001C2247 		.word	1193417728
 1188 0068 00507546 		.word	1182093312
 1189 006c 00000000 		.word	0
 1190 0070 0000D746 		.word	1188495360
 1191 0074 00F0EB46 		.word	1189867520
 1192 0078 00280446 		.word	1174677504
 1193 007c 00000000 		.word	0
 1194 0080 00481446 		.word	1175734272
 1195 0084 00805446 		.word	1179942912
 1196 0088 00202745 		.word	1160192000
 1197 008c 00000000 		.word	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 28


 1198              		.global	currentPresetSelection
 1199              		.bss
 1200              		.align	2
 1201              		.type	currentPresetSelection, %object
 1202              		.size	currentPresetSelection, 4
 1203              	currentPresetSelection:
 1204 007c 00000000 		.space	4
 1205              		.comm	presetNamesArray,896,4
 1206              		.global	presetNumberToLoad
 1207              		.type	presetNumberToLoad, %object
 1208              		.size	presetNumberToLoad, 1
 1209              	presetNumberToLoad:
 1210 0080 00       		.space	1
 1211              		.global	presetLoadedResponse
 1212              		.data
 1213              		.align	2
 1214              		.type	presetLoadedResponse, %object
 1215              		.size	presetLoadedResponse, 2
 1216              	presetLoadedResponse:
 1217 0090 FF       		.byte	-1
 1218 0091 00       		.byte	0
 1219              		.comm	macroNamesArray,7168,4
 1220              		.global	fretScaling
 1221 0092 0000     		.align	2
 1222              		.type	fretScaling, %object
 1223              		.size	fretScaling, 16
 1224              	fretScaling:
 1225 0094 0000803F 		.word	1065353216
 1226 0098 ABAA2A3F 		.word	1059760811
 1227 009c 0000003F 		.word	1056964608
 1228 00a0 0000803E 		.word	1048576000
 1229              		.comm	pedalRatios,40,4
 1230              		.global	last_mux
 1231              		.type	last_mux, %object
 1232              		.size	last_mux, 1
 1233              	last_mux:
 1234 00a4 01       		.byte	1
 1235              		.global	main_counter
 1236              		.bss
 1237              		.type	main_counter, %object
 1238              		.size	main_counter, 1
 1239              	main_counter:
 1240 0081 00       		.space	1
 1241              		.global	neck
 1242              		.type	neck, %object
 1243              		.size	neck, 1
 1244              	neck:
 1245 0082 00       		.space	1
 1246              		.global	dualSlider
 1247              		.type	dualSlider, %object
 1248              		.size	dualSlider, 1
 1249              	dualSlider:
 1250 0083 00       		.space	1
 1251              		.global	enterUp
 1252              		.data
 1253              		.type	enterUp, %object
 1254              		.size	enterUp, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 29


 1255              	enterUp:
 1256 00a5 01       		.byte	1
 1257              		.global	voice
 1258              		.bss
 1259              		.type	voice, %object
 1260              		.size	voice, 1
 1261              	voice:
 1262 0084 00       		.space	1
 1263              		.global	editUp
 1264              		.data
 1265              		.type	editUp, %object
 1266              		.size	editUp, 1
 1267              	editUp:
 1268 00a6 01       		.byte	1
 1269              		.global	oct1Up
 1270              		.type	oct1Up, %object
 1271              		.size	oct1Up, 1
 1272              	oct1Up:
 1273 00a7 01       		.byte	1
 1274              		.global	oct4Up
 1275              		.type	oct4Up, %object
 1276              		.size	oct4Up, 1
 1277              	oct4Up:
 1278 00a8 01       		.byte	1
 1279              		.comm	encoderVal,16,4
 1280              		.global	encoderNum
 1281              		.bss
 1282 0085 000000   		.align	2
 1283              		.type	encoderNum, %object
 1284              		.size	encoderNum, 4
 1285              	encoderNum:
 1286 0088 00000000 		.space	4
 1287              		.global	button1Up
 1288              		.type	button1Up, %object
 1289              		.size	button1Up, 1
 1290              	button1Up:
 1291 008c 00       		.space	1
 1292              		.global	button2Up
 1293              		.type	button2Up, %object
 1294              		.size	button2Up, 1
 1295              	button2Up:
 1296 008d 00       		.space	1
 1297              		.global	button3Up
 1298              		.type	button3Up, %object
 1299              		.size	button3Up, 1
 1300              	button3Up:
 1301 008e 00       		.space	1
 1302              		.global	button4Up
 1303              		.type	button4Up, %object
 1304              		.size	button4Up, 1
 1305              	button4Up:
 1306 008f 00       		.space	1
 1307              		.global	patchNum
 1308              		.type	patchNum, %object
 1309              		.size	patchNum, 1
 1310              	patchNum:
 1311 0090 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 30


 1312              		.comm	copedent,3696,4
 1313              		.comm	copedentNamesArray,98,4
 1314              		.comm	prevStringPitchBend,48,4
 1315              		.comm	pedals,480,4
 1316              		.comm	openStringFrequencies,48,4
 1317              		.comm	stringMappedPositions,48,4
 1318              		.comm	invStringMappedPositions,48,4
 1319              		.comm	stringFrequencies,48,4
 1320              		.comm	stringOctave,48,4
 1321              		.comm	stringPitch,48,4
 1322              		.comm	stringMIDI,48,4
 1323              		.comm	openStringMIDI_Int,48,4
 1324              		.global	OLEDcount
 1325 0091 000000   		.align	2
 1326              		.type	OLEDcount, %object
 1327              		.size	OLEDcount, 4
 1328              	OLEDcount:
 1329 0094 00000000 		.space	4
 1330              		.global	mainOLEDWaitingToSend
 1331              		.align	2
 1332              		.type	mainOLEDWaitingToSend, %object
 1333              		.size	mainOLEDWaitingToSend, 4
 1334              	mainOLEDWaitingToSend:
 1335 0098 00000000 		.space	4
 1336              		.global	macroOLEDWaitingToSend
 1337              		.align	2
 1338              		.type	macroOLEDWaitingToSend, %object
 1339              		.size	macroOLEDWaitingToSend, 4
 1340              	macroOLEDWaitingToSend:
 1341 009c 00000000 		.space	4
 1342              		.comm	presetAlreadyDisplayed,256,4
 1343              		.global	pedals_float
 1344              		.align	2
 1345              		.type	pedals_float, %object
 1346              		.size	pedals_float, 40
 1347              	pedals_float:
 1348 00a0 00000000 		.space	40
 1348      00000000 
 1348      00000000 
 1348      00000000 
 1348      00000000 
 1349              		.global	__aeabi_fdiv
 1350              		.section	.text.map,"ax",%progbits
 1351              		.align	2
 1352              		.global	map
 1353              		.thumb
 1354              		.thumb_func
 1355              		.type	map, %function
 1356              	map:
 1357              	.LFB72:
 330:main.c        **** 
 331:main.c        **** 
 332:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 333:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 334:main.c        **** void USB_service(void);
 335:main.c        **** 
 336:main.c        **** volatile uint8_t I2Cbuff1[256];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 31


 337:main.c        **** volatile uint8_t I2Cbuff2[16];
 338:main.c        **** volatile uint8_t send_it = 0;
 339:main.c        **** 
 340:main.c        **** 
 341:main.c        **** //first mux, 0x70 is first element of array. 
 342:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 343:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 344:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 345:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 346:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 347:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 348:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 349:main.c        **** uint16_t deadzone = 150;
 350:main.c        **** uint16_t volumePedal = 4095;
 351:main.c        **** uint16_t processed_pedals[10];
 352:main.c        **** uint16_t prev_processed_pedals[10];
 353:main.c        **** uint8_t pedals8bit[10];
 354:main.c        **** int16_t prev_processed_volumePedal;
 355:main.c        **** int16_t processed_volumePedal;
 356:main.c        **** 
 357:main.c        **** 
 358:main.c        **** float fretMeasurements[4][4] ={
 359:main.c        **** 
 360:main.c        **** 		{62750.0f, 61600.0f, 31785.0f, 0.0f },
 361:main.c        **** 
 362:main.c        **** 		{39600.0f, 41500.0f, 15700.0f, 0.0f},
 363:main.c        **** 
 364:main.c        **** 		{27520.0f, 30200.0f, 8458.0f, 0.0f},
 365:main.c        **** 
 366:main.c        **** 		{9490.0f, 13600.0f, 2674.0f, 0.0f}
 367:main.c        **** 
 368:main.c        **** 	};
 369:main.c        **** #define NUM_MACROS 8
 370:main.c        **** #define MAX_NUM_PRESETS 64
 371:main.c        **** int currentPresetSelection = 0;
 372:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][NAME_LENGTH_IN_BYTES];
 373:main.c        **** uint8_t presetNumberToLoad = 0;
 374:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 375:main.c        **** 
 376:main.c        **** 
 377:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS][NAME_LENGTH_IN_BYTES];
 378:main.c        **** 
 379:main.c        **** 
 380:main.c        **** 
 381:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 382:main.c        **** 
 383:main.c        **** 
 384:main.c        **** #define MAX_ENCODERS 16
 385:main.c        **** 
 386:main.c        **** float pedalRatios[10];
 387:main.c        **** uint8_t last_mux = 1;
 388:main.c        **** volatile uint8_t main_counter = 0;
 389:main.c        **** uint8_t neck = 0;
 390:main.c        **** uint8_t dualSlider = 0;
 391:main.c        **** uint8_t enterUp = 1;
 392:main.c        **** uint8_t voice = 0;
 393:main.c        **** uint8_t editUp = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 32


 394:main.c        **** uint8_t oct1Up = 1;
 395:main.c        **** uint8_t oct4Up = 1;
 396:main.c        **** 
 397:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 398:main.c        **** int encoderNum = 0;
 399:main.c        **** uint8_t button1Up = 0;
 400:main.c        **** uint8_t button2Up = 0;
 401:main.c        **** uint8_t button3Up = 0;
 402:main.c        **** uint8_t button4Up = 0;
 403:main.c        **** uint8_t patchNum = 0;
 404:main.c        **** #define NUM_STRINGS 12
 405:main.c        **** #define NUM_PEDALS 10
 406:main.c        **** 
 407:main.c        **** 
 408:main.c        **** #define MAX_NUM_COPEDENTS 7
 409:main.c        **** float copedent[MAX_NUM_COPEDENTS][11][NUM_STRINGS];
 410:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][NAME_LENGTH_IN_BYTES];
 411:main.c        **** 
 412:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 413:main.c        **** 
 414:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 415:main.c        **** 
 416:main.c        **** 
 417:main.c        **** float openStringFrequencies[NUM_STRINGS];
 418:main.c        **** float stringMappedPositions[NUM_STRINGS];
 419:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 420:main.c        **** float stringFrequencies[NUM_STRINGS];
 421:main.c        **** float stringOctave[NUM_STRINGS];
 422:main.c        **** float stringPitch[NUM_STRINGS];
 423:main.c        **** float stringMIDI[NUM_STRINGS];
 424:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 425:main.c        **** int OLEDcount = 0;
 426:main.c        **** 
 427:main.c        **** int mainOLEDWaitingToSend = 0;
 428:main.c        **** int macroOLEDWaitingToSend = 0;
 429:main.c        **** 
 430:main.c        **** int presetAlreadyDisplayed[MAX_NUM_PRESETS];
 431:main.c        **** 
 432:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 433:main.c        **** 
 434:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 435:main.c        **** {
 1358              		.loc 1 435 0
 1359              		.cfi_startproc
 1360              		@ args = 4, pretend = 0, frame = 16
 1361              		@ frame_needed = 1, uses_anonymous_args = 0
 1362 0000 B0B5     		push	{r4, r5, r7, lr}
 1363              		.cfi_def_cfa_offset 16
 1364              		.cfi_offset 4, -16
 1365              		.cfi_offset 5, -12
 1366              		.cfi_offset 7, -8
 1367              		.cfi_offset 14, -4
 1368 0002 84B0     		sub	sp, sp, #16
 1369              		.cfi_def_cfa_offset 32
 1370 0004 00AF     		add	r7, sp, #0
 1371              		.cfi_def_cfa_register 7
 1372 0006 F860     		str	r0, [r7, #12]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 33


 1373 0008 B960     		str	r1, [r7, #8]	@ float
 1374 000a 7A60     		str	r2, [r7, #4]	@ float
 1375 000c 3B60     		str	r3, [r7]	@ float
 436:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1376              		.loc 1 436 0
 1377 000e 3968     		ldr	r1, [r7]	@ float
 1378 0010 386A     		ldr	r0, [r7, #32]	@ float
 1379 0012 FFF7FEFF 		bl	__aeabi_fsub
 1380 0016 0346     		mov	r3, r0
 1381 0018 1C46     		mov	r4, r3
 1382 001a B968     		ldr	r1, [r7, #8]	@ float
 1383 001c F868     		ldr	r0, [r7, #12]	@ float
 1384 001e FFF7FEFF 		bl	__aeabi_fsub
 1385 0022 0346     		mov	r3, r0
 1386 0024 1D46     		mov	r5, r3
 1387 0026 B968     		ldr	r1, [r7, #8]	@ float
 1388 0028 7868     		ldr	r0, [r7, #4]	@ float
 1389 002a FFF7FEFF 		bl	__aeabi_fsub
 1390 002e 0346     		mov	r3, r0
 1391 0030 1946     		mov	r1, r3
 1392 0032 2846     		mov	r0, r5
 1393 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1394 0038 0346     		mov	r3, r0
 1395 003a 1946     		mov	r1, r3
 1396 003c 2046     		mov	r0, r4
 1397 003e FFF7FEFF 		bl	__aeabi_fmul
 1398 0042 0346     		mov	r3, r0
 1399 0044 3968     		ldr	r1, [r7]	@ float
 1400 0046 1846     		mov	r0, r3
 1401 0048 FFF7FEFF 		bl	__aeabi_fadd
 1402 004c 0346     		mov	r3, r0
 437:main.c        **** }
 1403              		.loc 1 437 0
 1404 004e 1846     		mov	r0, r3
 1405 0050 1037     		adds	r7, r7, #16
 1406              		.cfi_def_cfa_offset 16
 1407 0052 BD46     		mov	sp, r7
 1408              		.cfi_def_cfa_register 13
 1409              		@ sp needed
 1410 0054 B0BD     		pop	{r4, r5, r7, pc}
 1411              		.cfi_endproc
 1412              	.LFE72:
 1413              		.size	map, .-map
 1414              		.global	currentNeck
 1415 0056 00BF     		.bss
 1416              		.align	2
 1417              		.type	currentNeck, %object
 1418              		.size	currentNeck, 4
 1419              	currentNeck:
 1420 00c8 00000000 		.space	4
 1421              		.global	editMode
 1422              		.align	2
 1423              		.type	editMode, %object
 1424              		.size	editMode, 4
 1425              	editMode:
 1426 00cc 00000000 		.space	4
 1427              		.global	calibrationMode
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 34


 1428              		.align	2
 1429              		.type	calibrationMode, %object
 1430              		.size	calibrationMode, 4
 1431              	calibrationMode:
 1432 00d0 00000000 		.space	4
 1433              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1434              		.align	2
 1435              		.global	burnInitialPedalZeroPositions
 1436              		.thumb
 1437              		.thumb_func
 1438              		.type	burnInitialPedalZeroPositions, %function
 1439              	burnInitialPedalZeroPositions:
 1440              	.LFB73:
 438:main.c        **** void displayCurrentPresetName();
 439:main.c        **** 
 440:main.c        **** int currentNeck = 0;
 441:main.c        **** 
 442:main.c        **** int editMode = 0;
 443:main.c        **** int calibrationMode = 0;
 444:main.c        **** 
 445:main.c        **** void burnInitialPedalZeroPositions()
 446:main.c        **** {
 1441              		.loc 1 446 0
 1442              		.cfi_startproc
 1443              		@ args = 0, pretend = 0, frame = 0
 1444              		@ frame_needed = 1, uses_anonymous_args = 0
 1445              		@ link register save eliminated.
 1446 0000 80B4     		push	{r7}
 1447              		.cfi_def_cfa_offset 4
 1448              		.cfi_offset 7, -4
 1449 0002 00AF     		add	r7, sp, #0
 1450              		.cfi_def_cfa_register 7
 447:main.c        ****     
 448:main.c        **** }
 1451              		.loc 1 448 0
 1452 0004 00BF     		nop
 1453 0006 BD46     		mov	sp, r7
 1454              		.cfi_def_cfa_register 13
 1455              		@ sp needed
 1456 0008 80BC     		pop	{r7}
 1457              		.cfi_restore 7
 1458              		.cfi_def_cfa_offset 0
 1459 000a 7047     		bx	lr
 1460              		.cfi_endproc
 1461              	.LFE73:
 1462              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1463              		.section	.text.calibratePedals,"ax",%progbits
 1464              		.align	2
 1465              		.global	calibratePedals
 1466              		.thumb
 1467              		.thumb_func
 1468              		.type	calibratePedals, %function
 1469              	calibratePedals:
 1470              	.LFB74:
 449:main.c        **** 
 450:main.c        **** void calibratePedals()
 451:main.c        **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 35


 1471              		.loc 1 451 0
 1472              		.cfi_startproc
 1473              		@ args = 0, pretend = 0, frame = 0
 1474              		@ frame_needed = 1, uses_anonymous_args = 0
 1475              		@ link register save eliminated.
 1476 0000 80B4     		push	{r7}
 1477              		.cfi_def_cfa_offset 4
 1478              		.cfi_offset 7, -4
 1479 0002 00AF     		add	r7, sp, #0
 1480              		.cfi_def_cfa_register 7
 452:main.c        **** 
 453:main.c        ****     
 454:main.c        **** }
 1481              		.loc 1 454 0
 1482 0004 00BF     		nop
 1483 0006 BD46     		mov	sp, r7
 1484              		.cfi_def_cfa_register 13
 1485              		@ sp needed
 1486 0008 80BC     		pop	{r7}
 1487              		.cfi_restore 7
 1488              		.cfi_def_cfa_offset 0
 1489 000a 7047     		bx	lr
 1490              		.cfi_endproc
 1491              	.LFE74:
 1492              		.size	calibratePedals, .-calibratePedals
 1493              		.global	__aeabi_ui2f
 1494              		.global	__aeabi_i2f
 1495              		.global	__aeabi_f2uiz
 1496              		.section	.text.calculatePedalRatios,"ax",%progbits
 1497              		.align	2
 1498              		.global	calculatePedalRatios
 1499              		.thumb
 1500              		.thumb_func
 1501              		.type	calculatePedalRatios, %function
 1502              	calculatePedalRatios:
 1503              	.LFB75:
 455:main.c        **** 
 456:main.c        **** void calculatePedalRatios()
 457:main.c        **** {
 1504              		.loc 1 457 0
 1505              		.cfi_startproc
 1506              		@ args = 0, pretend = 0, frame = 8
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508 0000 90B5     		push	{r4, r7, lr}
 1509              		.cfi_def_cfa_offset 12
 1510              		.cfi_offset 4, -12
 1511              		.cfi_offset 7, -8
 1512              		.cfi_offset 14, -4
 1513 0002 83B0     		sub	sp, sp, #12
 1514              		.cfi_def_cfa_offset 24
 1515 0004 00AF     		add	r7, sp, #0
 1516              		.cfi_def_cfa_register 7
 1517              	.LBB3:
 458:main.c        **** 
 459:main.c        ****     //add deadzones on edges of pedal sensing
 460:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1518              		.loc 1 460 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 36


 1519 0006 0023     		movs	r3, #0
 1520 0008 7B60     		str	r3, [r7, #4]
 1521 000a 6EE0     		b	.L58
 1522              	.L59:
 1523              	.LBB4:
 461:main.c        ****     {
 462:main.c        **** 
 463:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1524              		.loc 1 463 0 discriminator 3
 1525 000c 3A4A     		ldr	r2, .L60
 1526 000e 7B68     		ldr	r3, [r7, #4]
 1527 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1528 0014 1846     		mov	r0, r3
 1529 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1530 001a 0446     		mov	r4, r0
 1531 001c 374A     		ldr	r2, .L60+4
 1532 001e 7B68     		ldr	r3, [r7, #4]
 1533 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1534 0024 1846     		mov	r0, r3
 1535 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1536 002a 0346     		mov	r3, r0
 1537 002c 1946     		mov	r1, r3
 1538 002e 2046     		mov	r0, r4
 1539 0030 FFF7FEFF 		bl	__aeabi_fsub
 1540 0034 0346     		mov	r3, r0
 1541 0036 3B60     		str	r3, [r7]	@ float
 464:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1542              		.loc 1 464 0 discriminator 3
 1543 0038 304A     		ldr	r2, .L60+4
 1544 003a 7B68     		ldr	r3, [r7, #4]
 1545 003c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1546 0040 1846     		mov	r0, r3
 1547 0042 FFF7FEFF 		bl	__aeabi_i2f
 1548 0046 0446     		mov	r4, r0
 1549 0048 2D49     		ldr	r1, .L60+8
 1550 004a 3868     		ldr	r0, [r7]	@ float
 1551 004c FFF7FEFF 		bl	__aeabi_fmul
 1552 0050 0346     		mov	r3, r0
 1553 0052 1946     		mov	r1, r3
 1554 0054 2046     		mov	r0, r4
 1555 0056 FFF7FEFF 		bl	__aeabi_fadd
 1556 005a 0346     		mov	r3, r0
 1557 005c 1846     		mov	r0, r3
 1558 005e FFF7FEFF 		bl	__aeabi_f2uiz
 1559 0062 0346     		mov	r3, r0
 1560 0064 99B2     		uxth	r1, r3
 1561 0066 254A     		ldr	r2, .L60+4
 1562 0068 7B68     		ldr	r3, [r7, #4]
 1563 006a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 465:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
 1564              		.loc 1 465 0 discriminator 3
 1565 006e 224A     		ldr	r2, .L60
 1566 0070 7B68     		ldr	r3, [r7, #4]
 1567 0072 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1568 0076 1846     		mov	r0, r3
 1569 0078 FFF7FEFF 		bl	__aeabi_i2f
 1570 007c 0446     		mov	r4, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 37


 1571 007e 2049     		ldr	r1, .L60+8
 1572 0080 3868     		ldr	r0, [r7]	@ float
 1573 0082 FFF7FEFF 		bl	__aeabi_fmul
 1574 0086 0346     		mov	r3, r0
 1575 0088 1946     		mov	r1, r3
 1576 008a 2046     		mov	r0, r4
 1577 008c FFF7FEFF 		bl	__aeabi_fsub
 1578 0090 0346     		mov	r3, r0
 1579 0092 1846     		mov	r0, r3
 1580 0094 FFF7FEFF 		bl	__aeabi_f2uiz
 1581 0098 0346     		mov	r3, r0
 1582 009a 99B2     		uxth	r1, r3
 1583 009c 164A     		ldr	r2, .L60
 1584 009e 7B68     		ldr	r3, [r7, #4]
 1585 00a0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 466:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1586              		.loc 1 466 0 discriminator 3
 1587 00a4 144A     		ldr	r2, .L60
 1588 00a6 7B68     		ldr	r3, [r7, #4]
 1589 00a8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1590 00ac 1846     		mov	r0, r3
 1591 00ae FFF7FEFF 		bl	__aeabi_ui2f
 1592 00b2 0446     		mov	r4, r0
 1593 00b4 114A     		ldr	r2, .L60+4
 1594 00b6 7B68     		ldr	r3, [r7, #4]
 1595 00b8 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1596 00bc 1846     		mov	r0, r3
 1597 00be FFF7FEFF 		bl	__aeabi_ui2f
 1598 00c2 0346     		mov	r3, r0
 1599 00c4 1946     		mov	r1, r3
 1600 00c6 2046     		mov	r0, r4
 1601 00c8 FFF7FEFF 		bl	__aeabi_fsub
 1602 00cc 0346     		mov	r3, r0
 1603 00ce 3B60     		str	r3, [r7]	@ float
 467:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1604              		.loc 1 467 0 discriminator 3
 1605 00d0 3968     		ldr	r1, [r7]	@ float
 1606 00d2 0C48     		ldr	r0, .L60+12
 1607 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1608 00d8 0346     		mov	r3, r0
 1609 00da 1946     		mov	r1, r3
 1610 00dc 0A4A     		ldr	r2, .L60+16
 1611 00de 7B68     		ldr	r3, [r7, #4]
 1612 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1613              	.LBE4:
 460:main.c        ****     {
 1614              		.loc 1 460 0 discriminator 3
 1615 00e4 7B68     		ldr	r3, [r7, #4]
 1616 00e6 0133     		adds	r3, r3, #1
 1617 00e8 7B60     		str	r3, [r7, #4]
 1618              	.L58:
 460:main.c        ****     {
 1619              		.loc 1 460 0 is_stmt 0 discriminator 1
 1620 00ea 7B68     		ldr	r3, [r7, #4]
 1621 00ec 092B     		cmp	r3, #9
 1622 00ee 8DDD     		ble	.L59
 1623              	.LBE3:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 38


 468:main.c        ****     }
 469:main.c        **** }
 1624              		.loc 1 469 0 is_stmt 1
 1625 00f0 00BF     		nop
 1626 00f2 0C37     		adds	r7, r7, #12
 1627              		.cfi_def_cfa_offset 12
 1628 00f4 BD46     		mov	sp, r7
 1629              		.cfi_def_cfa_register 13
 1630              		@ sp needed
 1631 00f6 90BD     		pop	{r4, r7, pc}
 1632              	.L61:
 1633              		.align	2
 1634              	.L60:
 1635 00f8 00000000 		.word	pedals_high
 1636 00fc 00000000 		.word	pedals_low
 1637 0100 CDCCCC3D 		.word	1036831949
 1638 0104 00F07F45 		.word	1166012416
 1639 0108 00000000 		.word	pedalRatios
 1640              		.cfi_endproc
 1641              	.LFE75:
 1642              		.size	calculatePedalRatios, .-calculatePedalRatios
 1643              		.section	.rodata
 1644              		.align	2
 1645              	.LC0:
 1646 0400 2000     		.ascii	" \000"
 1647              		.global	__aeabi_f2iz
 1648 0402 0000     		.align	2
 1649              	.LC1:
 1650 0404 43414C49 		.ascii	"CALIBRATION\000"
 1650      42524154 
 1650      494F4E00 
 1651              		.align	2
 1652              	.LC2:
 1653 0410 4D4F5645 		.ascii	"MOVE PEDALS\000"
 1653      20504544 
 1653      414C5300 
 1654              		.align	2
 1655              	.LC3:
 1656 041c 414E4420 		.ascii	"AND LEVERS\000"
 1656      4C455645 
 1656      525300
 1657 0427 00       		.align	2
 1658              	.LC4:
 1659 0428 5448454E 		.ascii	"THEN EXIT\000"
 1659      20455849 
 1659      5400
 1660              		.section	.text.main,"ax",%progbits
 1661              		.align	2
 1662              		.global	main
 1663              		.thumb
 1664              		.thumb_func
 1665              		.type	main, %function
 1666              	main:
 1667              	.LFB76:
 470:main.c        **** int main(void)
 471:main.c        **** {
 1668              		.loc 1 471 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 39


 1669              		.cfi_startproc
 1670              		@ args = 0, pretend = 0, frame = 128
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 0000 90B5     		push	{r4, r7, lr}
 1673              		.cfi_def_cfa_offset 12
 1674              		.cfi_offset 4, -12
 1675              		.cfi_offset 7, -8
 1676              		.cfi_offset 14, -4
 1677 0002 A1B0     		sub	sp, sp, #132
 1678              		.cfi_def_cfa_offset 144
 1679 0004 00AF     		add	r7, sp, #0
 1680              		.cfi_def_cfa_register 7
 472:main.c        ****     
 473:main.c        **** 	CYGlobalIntEnable; 
 1681              		.loc 1 473 0
 1682              		.syntax unified
 1683              	@ 473 "main.c" 1
 1684 0006 62B6     		CPSIE   i
 1685              	@ 0 "" 2
 474:main.c        **** 
 475:main.c        ****     EEPROM_Start();
 1686              		.loc 1 475 0
 1687              		.thumb
 1688              		.syntax unified
 1689 0008 FFF7FEFF 		bl	EEPROM_Start
 476:main.c        **** 
 477:main.c        **** 
 478:main.c        ****     
 479:main.c        ****     //read from eeprom which copedents are loaded on which necks
 480:main.c        ****     necks[0] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 1690              		.loc 1 480 0
 1691 000c 0020     		movs	r0, #0
 1692 000e FFF7FEFF 		bl	EEPROM_ReadByte
 1693 0012 0346     		mov	r3, r0
 1694 0014 1A46     		mov	r2, r3
 1695 0016 814B     		ldr	r3, .L182
 1696 0018 1A70     		strb	r2, [r3]
 481:main.c        ****     necks[1] = EEPROM_ReadByte(EEPROM_NECKS_OFFSET + 1);
 1697              		.loc 1 481 0
 1698 001a 0120     		movs	r0, #1
 1699 001c FFF7FEFF 		bl	EEPROM_ReadByte
 1700 0020 0346     		mov	r3, r0
 1701 0022 1A46     		mov	r2, r3
 1702 0024 7D4B     		ldr	r3, .L182
 1703 0026 5A70     		strb	r2, [r3, #1]
 1704              	.LBB5:
 482:main.c        ****     
 483:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 1705              		.loc 1 483 0
 1706 0028 0023     		movs	r3, #0
 1707 002a FB67     		str	r3, [r7, #124]
 1708 002c A1E0     		b	.L63
 1709              	.L70:
 1710              	.LBB6:
 484:main.c        ****     {
 485:main.c        ****         
 486:main.c        ****         for (int letter = 0; letter < NAME_LENGTH_IN_BYTES; letter++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 40


 1711              		.loc 1 486 0
 1712 002e 0023     		movs	r3, #0
 1713 0030 BB67     		str	r3, [r7, #120]
 1714 0032 23E0     		b	.L64
 1715              	.L65:
 487:main.c        ****         {
 488:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 1716              		.loc 1 488 0 discriminator 3
 1717 0034 FB6F     		ldr	r3, [r7, #124]
 1718 0036 9BB2     		uxth	r3, r3
 1719 0038 1A46     		mov	r2, r3	@ movhi
 1720 003a 1201     		lsls	r2, r2, #4
 1721 003c 1A44     		add	r2, r2, r3
 1722 003e 9200     		lsls	r2, r2, #2
 1723 0040 1A44     		add	r2, r2, r3
 1724 0042 5200     		lsls	r2, r2, #1
 1725 0044 1344     		add	r3, r3, r2
 1726 0046 5B00     		lsls	r3, r3, #1
 1727 0048 9AB2     		uxth	r2, r3
 1728 004a BB6F     		ldr	r3, [r7, #120]
 1729 004c 9BB2     		uxth	r3, r3
 1730 004e 1344     		add	r3, r3, r2
 1731 0050 9BB2     		uxth	r3, r3
 1732 0052 0233     		adds	r3, r3, #2
 1733 0054 9BB2     		uxth	r3, r3
 1734 0056 1846     		mov	r0, r3
 1735 0058 FFF7FEFF 		bl	EEPROM_ReadByte
 1736 005c 0346     		mov	r3, r0
 1737 005e 1846     		mov	r0, r3
 1738 0060 6F49     		ldr	r1, .L182+4
 1739 0062 FA6F     		ldr	r2, [r7, #124]
 1740 0064 1346     		mov	r3, r2
 1741 0066 DB00     		lsls	r3, r3, #3
 1742 0068 9B1A     		subs	r3, r3, r2
 1743 006a 5B00     		lsls	r3, r3, #1
 1744 006c CA18     		adds	r2, r1, r3
 1745 006e BB6F     		ldr	r3, [r7, #120]
 1746 0070 1344     		add	r3, r3, r2
 1747 0072 0246     		mov	r2, r0
 1748 0074 1A70     		strb	r2, [r3]
 486:main.c        ****         {
 1749              		.loc 1 486 0 discriminator 3
 1750 0076 BB6F     		ldr	r3, [r7, #120]
 1751 0078 0133     		adds	r3, r3, #1
 1752 007a BB67     		str	r3, [r7, #120]
 1753              	.L64:
 486:main.c        ****         {
 1754              		.loc 1 486 0 is_stmt 0 discriminator 1
 1755 007c BB6F     		ldr	r3, [r7, #120]
 1756 007e 0D2B     		cmp	r3, #13
 1757 0080 D8DD     		ble	.L65
 1758              	.LBE6:
 1759              	.LBB7:
 489:main.c        ****         }
 490:main.c        ****         for (int i = 0; i < 11; i++)
 1760              		.loc 1 490 0 is_stmt 1
 1761 0082 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 41


 1762 0084 7B67     		str	r3, [r7, #116]
 1763 0086 6EE0     		b	.L66
 1764              	.L69:
 1765              	.LBB8:
 491:main.c        ****     	{
 492:main.c        ****     		int pedalStartLoc = (i*24);
 1766              		.loc 1 492 0
 1767 0088 7A6F     		ldr	r2, [r7, #116]
 1768 008a 1346     		mov	r3, r2
 1769 008c 5B00     		lsls	r3, r3, #1
 1770 008e 1344     		add	r3, r3, r2
 1771 0090 DB00     		lsls	r3, r3, #3
 1772 0092 BB62     		str	r3, [r7, #40]
 1773              	.LBB9:
 493:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 1774              		.loc 1 493 0
 1775 0094 0023     		movs	r3, #0
 1776 0096 3B67     		str	r3, [r7, #112]
 1777 0098 5FE0     		b	.L67
 1778              	.L68:
 1779              	.LBB10:
 494:main.c        ****     		{
 495:main.c        ****                 
 496:main.c        ****                 int stringStartLoc = (j*2);
 1780              		.loc 1 496 0 discriminator 3
 1781 009a 3B6F     		ldr	r3, [r7, #112]
 1782 009c 5B00     		lsls	r3, r3, #1
 1783 009e 7B62     		str	r3, [r7, #36]
 497:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 1784              		.loc 1 497 0 discriminator 3
 1785 00a0 7B6A     		ldr	r3, [r7, #36]
 1786 00a2 9AB2     		uxth	r2, r3
 1787 00a4 BB6A     		ldr	r3, [r7, #40]
 1788 00a6 9BB2     		uxth	r3, r3
 1789 00a8 1344     		add	r3, r3, r2
 1790 00aa 9AB2     		uxth	r2, r3
 1791 00ac FB6F     		ldr	r3, [r7, #124]
 1792 00ae 9BB2     		uxth	r3, r3
 1793 00b0 1946     		mov	r1, r3	@ movhi
 1794 00b2 0901     		lsls	r1, r1, #4
 1795 00b4 1944     		add	r1, r1, r3
 1796 00b6 8900     		lsls	r1, r1, #2
 1797 00b8 1944     		add	r1, r1, r3
 1798 00ba 4900     		lsls	r1, r1, #1
 1799 00bc 0B44     		add	r3, r3, r1
 1800 00be 5B00     		lsls	r3, r3, #1
 1801 00c0 9BB2     		uxth	r3, r3
 1802 00c2 1344     		add	r3, r3, r2
 1803 00c4 9BB2     		uxth	r3, r3
 1804 00c6 1033     		adds	r3, r3, #16
 1805 00c8 9BB2     		uxth	r3, r3
 1806 00ca 1846     		mov	r0, r3
 1807 00cc FFF7FEFF 		bl	EEPROM_ReadByte
 1808 00d0 0346     		mov	r3, r0
 1809 00d2 7B84     		strh	r3, [r7, #34]	@ movhi
 498:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 1810              		.loc 1 498 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 42


 1811 00d4 7B6A     		ldr	r3, [r7, #36]
 1812 00d6 9AB2     		uxth	r2, r3
 1813 00d8 BB6A     		ldr	r3, [r7, #40]
 1814 00da 9BB2     		uxth	r3, r3
 1815 00dc 1344     		add	r3, r3, r2
 1816 00de 9AB2     		uxth	r2, r3
 1817 00e0 FB6F     		ldr	r3, [r7, #124]
 1818 00e2 9BB2     		uxth	r3, r3
 1819 00e4 1946     		mov	r1, r3	@ movhi
 1820 00e6 0901     		lsls	r1, r1, #4
 1821 00e8 1944     		add	r1, r1, r3
 1822 00ea 8900     		lsls	r1, r1, #2
 1823 00ec 1944     		add	r1, r1, r3
 1824 00ee 4900     		lsls	r1, r1, #1
 1825 00f0 0B44     		add	r3, r3, r1
 1826 00f2 5B00     		lsls	r3, r3, #1
 1827 00f4 9BB2     		uxth	r3, r3
 1828 00f6 1344     		add	r3, r3, r2
 1829 00f8 9BB2     		uxth	r3, r3
 1830 00fa 1133     		adds	r3, r3, #17
 1831 00fc 9BB2     		uxth	r3, r3
 1832 00fe 1846     		mov	r0, r3
 1833 0100 FFF7FEFF 		bl	EEPROM_ReadByte
 1834 0104 0346     		mov	r3, r0
 1835 0106 3B84     		strh	r3, [r7, #32]	@ movhi
 499:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 1836              		.loc 1 499 0 discriminator 3
 1837 0108 7B8C     		ldrh	r3, [r7, #34]
 1838 010a 1A02     		lsls	r2, r3, #8
 1839 010c 3B8C     		ldrh	r3, [r7, #32]
 1840 010e 1344     		add	r3, r3, r2
 1841 0110 1846     		mov	r0, r3
 1842 0112 FFF7FEFF 		bl	__aeabi_i2f
 1843 0116 0346     		mov	r3, r0
 1844 0118 4FF06E51 		mov	r1, #998244352
 1845 011c 1846     		mov	r0, r3
 1846 011e FFF7FEFF 		bl	__aeabi_fmul
 1847 0122 0346     		mov	r3, r0
 1848 0124 4FF08641 		mov	r1, #1124073472
 1849 0128 1846     		mov	r0, r3
 1850 012a FFF7FEFF 		bl	__aeabi_fsub
 1851 012e 0346     		mov	r3, r0
 1852 0130 1C46     		mov	r4, r3
 1853 0132 3C48     		ldr	r0, .L182+8
 1854 0134 7B6F     		ldr	r3, [r7, #116]
 1855 0136 F96F     		ldr	r1, [r7, #124]
 1856 0138 1A46     		mov	r2, r3
 1857 013a 5200     		lsls	r2, r2, #1
 1858 013c 1A44     		add	r2, r2, r3
 1859 013e 9300     		lsls	r3, r2, #2
 1860 0140 1A46     		mov	r2, r3
 1861 0142 0B46     		mov	r3, r1
 1862 0144 5B01     		lsls	r3, r3, #5
 1863 0146 0B44     		add	r3, r3, r1
 1864 0148 9B00     		lsls	r3, r3, #2
 1865 014a 1A44     		add	r2, r2, r3
 1866 014c 3B6F     		ldr	r3, [r7, #112]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 43


 1867 014e 1344     		add	r3, r3, r2
 1868 0150 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 1869              	.LBE10:
 493:main.c        ****     		{
 1870              		.loc 1 493 0 discriminator 3
 1871 0154 3B6F     		ldr	r3, [r7, #112]
 1872 0156 0133     		adds	r3, r3, #1
 1873 0158 3B67     		str	r3, [r7, #112]
 1874              	.L67:
 493:main.c        ****     		{
 1875              		.loc 1 493 0 is_stmt 0 discriminator 1
 1876 015a 3B6F     		ldr	r3, [r7, #112]
 1877 015c 0B2B     		cmp	r3, #11
 1878 015e 9CDD     		ble	.L68
 1879              	.LBE9:
 1880              	.LBE8:
 490:main.c        ****     	{
 1881              		.loc 1 490 0 is_stmt 1 discriminator 2
 1882 0160 7B6F     		ldr	r3, [r7, #116]
 1883 0162 0133     		adds	r3, r3, #1
 1884 0164 7B67     		str	r3, [r7, #116]
 1885              	.L66:
 490:main.c        ****     	{
 1886              		.loc 1 490 0 is_stmt 0 discriminator 1
 1887 0166 7B6F     		ldr	r3, [r7, #116]
 1888 0168 0A2B     		cmp	r3, #10
 1889 016a 8DDD     		ble	.L69
 1890              	.LBE7:
 483:main.c        ****     {
 1891              		.loc 1 483 0 is_stmt 1 discriminator 2
 1892 016c FB6F     		ldr	r3, [r7, #124]
 1893 016e 0133     		adds	r3, r3, #1
 1894 0170 FB67     		str	r3, [r7, #124]
 1895              	.L63:
 483:main.c        ****     {
 1896              		.loc 1 483 0 is_stmt 0 discriminator 1
 1897 0172 FB6F     		ldr	r3, [r7, #124]
 1898 0174 062B     		cmp	r3, #6
 1899 0176 7FF75AAF 		ble	.L70
 1900              	.LBE5:
 1901              	.LBB11:
 500:main.c        ****             }
 501:main.c        ****     	}
 502:main.c        ****     }
 503:main.c        **** 
 504:main.c        ****     
 505:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1902              		.loc 1 505 0 is_stmt 1
 1903 017a 0023     		movs	r3, #0
 1904 017c FB66     		str	r3, [r7, #108]
 1905 017e 41E0     		b	.L71
 1906              	.L72:
 506:main.c        ****     {
 507:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_ReadByt
 1907              		.loc 1 507 0 discriminator 3
 1908 0180 FB6E     		ldr	r3, [r7, #108]
 1909 0182 03F2E713 		addw	r3, r3, #487
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 44


 1910 0186 9BB2     		uxth	r3, r3
 1911 0188 9B00     		lsls	r3, r3, #2
 1912 018a 9BB2     		uxth	r3, r3
 1913 018c 1846     		mov	r0, r3
 1914 018e FFF7FEFF 		bl	EEPROM_ReadByte
 1915 0192 0346     		mov	r3, r0
 1916 0194 9BB2     		uxth	r3, r3
 1917 0196 1B02     		lsls	r3, r3, #8
 1918 0198 9CB2     		uxth	r4, r3
 1919 019a FB6E     		ldr	r3, [r7, #108]
 1920 019c 9BB2     		uxth	r3, r3
 1921 019e 9B00     		lsls	r3, r3, #2
 1922 01a0 9BB2     		uxth	r3, r3
 1923 01a2 03F29D73 		addw	r3, r3, #1949
 1924 01a6 9BB2     		uxth	r3, r3
 1925 01a8 1846     		mov	r0, r3
 1926 01aa FFF7FEFF 		bl	EEPROM_ReadByte
 1927 01ae 0346     		mov	r3, r0
 1928 01b0 9BB2     		uxth	r3, r3
 1929 01b2 2344     		add	r3, r3, r4
 1930 01b4 99B2     		uxth	r1, r3
 1931 01b6 1C4A     		ldr	r2, .L182+12
 1932 01b8 FB6E     		ldr	r3, [r7, #108]
 1933 01ba 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 508:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (EEPROM_
 1934              		.loc 1 508 0 discriminator 3
 1935 01be FB6E     		ldr	r3, [r7, #108]
 1936 01c0 9BB2     		uxth	r3, r3
 1937 01c2 9B00     		lsls	r3, r3, #2
 1938 01c4 9BB2     		uxth	r3, r3
 1939 01c6 03F29E73 		addw	r3, r3, #1950
 1940 01ca 9BB2     		uxth	r3, r3
 1941 01cc 1846     		mov	r0, r3
 1942 01ce FFF7FEFF 		bl	EEPROM_ReadByte
 1943 01d2 0346     		mov	r3, r0
 1944 01d4 9BB2     		uxth	r3, r3
 1945 01d6 1B02     		lsls	r3, r3, #8
 1946 01d8 9CB2     		uxth	r4, r3
 1947 01da FB6E     		ldr	r3, [r7, #108]
 1948 01dc 9BB2     		uxth	r3, r3
 1949 01de 9B00     		lsls	r3, r3, #2
 1950 01e0 9BB2     		uxth	r3, r3
 1951 01e2 03F29F73 		addw	r3, r3, #1951
 1952 01e6 9BB2     		uxth	r3, r3
 1953 01e8 1846     		mov	r0, r3
 1954 01ea FFF7FEFF 		bl	EEPROM_ReadByte
 1955 01ee 0346     		mov	r3, r0
 1956 01f0 9BB2     		uxth	r3, r3
 1957 01f2 2344     		add	r3, r3, r4
 1958 01f4 99B2     		uxth	r1, r3
 1959 01f6 0D4A     		ldr	r2, .L182+16
 1960 01f8 FB6E     		ldr	r3, [r7, #108]
 1961 01fa 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 505:main.c        ****     {
 1962              		.loc 1 505 0 discriminator 3
 1963 01fe FB6E     		ldr	r3, [r7, #108]
 1964 0200 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 45


 1965 0202 FB66     		str	r3, [r7, #108]
 1966              	.L71:
 505:main.c        ****     {
 1967              		.loc 1 505 0 is_stmt 0 discriminator 1
 1968 0204 FB6E     		ldr	r3, [r7, #108]
 1969 0206 092B     		cmp	r3, #9
 1970 0208 BADD     		ble	.L72
 1971              	.LBE11:
 509:main.c        ****     }
 510:main.c        ****     calculatePedalRatios();
 1972              		.loc 1 510 0 is_stmt 1
 1973 020a FFF7FEFF 		bl	calculatePedalRatios
 1974              	.LBB12:
 511:main.c        ****                 
 512:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 513:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 1975              		.loc 1 513 0
 1976 020e 0023     		movs	r3, #0
 1977 0210 BB66     		str	r3, [r7, #104]
 1978 0212 26E0     		b	.L73
 1979              	.L76:
 1980              	.LBB13:
 514:main.c        ****     {
 515:main.c        ****         for (int j = 0; j < NAME_LENGTH_IN_BYTES; j++)
 1981              		.loc 1 515 0
 1982 0214 0023     		movs	r3, #0
 1983 0216 7B66     		str	r3, [r7, #100]
 1984 0218 18E0     		b	.L74
 1985              	.L183:
 1986 021a 00BF     		.align	2
 1987              	.L182:
 1988 021c 00000000 		.word	necks
 1989 0220 00000000 		.word	copedentNamesArray
 1990 0224 00000000 		.word	copedent
 1991 0228 00000000 		.word	pedals_low
 1992 022c 00000000 		.word	pedals_high
 1993              	.L75:
 516:main.c        ****         {
 517:main.c        ****             presetNamesArray[i][j] = 255;
 1994              		.loc 1 517 0 discriminator 3
 1995 0230 C049     		ldr	r1, .L184
 1996 0232 BA6E     		ldr	r2, [r7, #104]
 1997 0234 1346     		mov	r3, r2
 1998 0236 DB00     		lsls	r3, r3, #3
 1999 0238 9B1A     		subs	r3, r3, r2
 2000 023a 5B00     		lsls	r3, r3, #1
 2001 023c CA18     		adds	r2, r1, r3
 2002 023e 7B6E     		ldr	r3, [r7, #100]
 2003 0240 1344     		add	r3, r3, r2
 2004 0242 FF22     		movs	r2, #255
 2005 0244 1A70     		strb	r2, [r3]
 515:main.c        ****         {
 2006              		.loc 1 515 0 discriminator 3
 2007 0246 7B6E     		ldr	r3, [r7, #100]
 2008 0248 0133     		adds	r3, r3, #1
 2009 024a 7B66     		str	r3, [r7, #100]
 2010              	.L74:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 46


 515:main.c        ****         {
 2011              		.loc 1 515 0 is_stmt 0 discriminator 1
 2012 024c 7B6E     		ldr	r3, [r7, #100]
 2013 024e 0D2B     		cmp	r3, #13
 2014 0250 EEDD     		ble	.L75
 2015              	.LBE13:
 518:main.c        ****         }
 519:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2016              		.loc 1 519 0 is_stmt 1 discriminator 2
 2017 0252 B94A     		ldr	r2, .L184+4
 2018 0254 BB6E     		ldr	r3, [r7, #104]
 2019 0256 0021     		movs	r1, #0
 2020 0258 42F82310 		str	r1, [r2, r3, lsl #2]
 513:main.c        ****     {
 2021              		.loc 1 513 0 discriminator 2
 2022 025c BB6E     		ldr	r3, [r7, #104]
 2023 025e 0133     		adds	r3, r3, #1
 2024 0260 BB66     		str	r3, [r7, #104]
 2025              	.L73:
 513:main.c        ****     {
 2026              		.loc 1 513 0 is_stmt 0 discriminator 1
 2027 0262 BB6E     		ldr	r3, [r7, #104]
 2028 0264 3F2B     		cmp	r3, #63
 2029 0266 D5DD     		ble	.L76
 2030              	.LBE12:
 520:main.c        ****     }
 521:main.c        ****     
 522:main.c        ****     QuadDec_1_Start();
 2031              		.loc 1 522 0 is_stmt 1
 2032 0268 FFF7FEFF 		bl	QuadDec_1_Start
 523:main.c        ****     LED_amber1_Write(0);
 2033              		.loc 1 523 0
 2034 026c 0020     		movs	r0, #0
 2035 026e FFF7FEFF 		bl	LED_amber1_Write
 524:main.c        ****     LED_amber2_Write(1);
 2036              		.loc 1 524 0
 2037 0272 0120     		movs	r0, #1
 2038 0274 FFF7FEFF 		bl	LED_amber2_Write
 525:main.c        ****     LED_amber3_Write(0);
 2039              		.loc 1 525 0
 2040 0278 0020     		movs	r0, #0
 2041 027a FFF7FEFF 		bl	LED_amber3_Write
 526:main.c        ****     LED_amber4_Write(0);
 2042              		.loc 1 526 0
 2043 027e 0020     		movs	r0, #0
 2044 0280 FFF7FEFF 		bl	LED_amber4_Write
 527:main.c        **** 
 528:main.c        **** 
 529:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2045              		.loc 1 529 0
 2046 0284 AD4B     		ldr	r3, .L184+8
 2047 0286 1846     		mov	r0, r3
 2048 0288 FFF7FEFF 		bl	Em_EEPROM_Init
 2049 028c 0346     		mov	r3, r0
 2050 028e 1A46     		mov	r2, r3
 2051 0290 AB4B     		ldr	r3, .L184+12
 2052 0292 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 47


 530:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 531:main.c        ****     {
 532:main.c        ****        // HandleError();
 533:main.c        ****     }
 534:main.c        ****     uint8_t myArrayCounter = 0;
 2053              		.loc 1 534 0
 2054 0294 0023     		movs	r3, #0
 2055 0296 FB77     		strb	r3, [r7, #31]
 535:main.c        ****   
 536:main.c        ****     I2C_1_Start();  
 2056              		.loc 1 536 0
 2057 0298 FFF7FEFF 		bl	I2C_1_Start
 537:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2058              		.loc 1 537 0
 2059 029c 0120     		movs	r0, #1
 2060 029e FFF7FEFF 		bl	USB_SetPowerStatus
 538:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2061              		.loc 1 538 0
 2062 02a2 A848     		ldr	r0, .L184+16
 2063 02a4 FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 539:main.c        **** 
 540:main.c        ****     
 541:main.c        ****     LED_red1_Write(0);
 2064              		.loc 1 541 0
 2065 02a8 0020     		movs	r0, #0
 2066 02aa FFF7FEFF 		bl	LED_red1_Write
 542:main.c        ****     LED_green2_Write(1);
 2067              		.loc 1 542 0
 2068 02ae 0120     		movs	r0, #1
 2069 02b0 FFF7FEFF 		bl	LED_green2_Write
 543:main.c        **** 
 544:main.c        ****     
 545:main.c        ****     ADC_SAR_Seq_1_Start();
 2070              		.loc 1 545 0
 2071 02b4 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 546:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2072              		.loc 1 546 0
 2073 02b8 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 547:main.c        **** 
 548:main.c        ****             
 549:main.c        ****     currentCopedent = necks[currentNeck];
 2074              		.loc 1 549 0
 2075 02bc A24B     		ldr	r3, .L184+20
 2076 02be 1B68     		ldr	r3, [r3]
 2077 02c0 A24A     		ldr	r2, .L184+24
 2078 02c2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2079 02c4 A24B     		ldr	r3, .L184+28
 2080 02c6 1A70     		strb	r2, [r3]
 550:main.c        ****     CyDelay(10);
 2081              		.loc 1 550 0
 2082 02c8 0A20     		movs	r0, #10
 2083 02ca FFF7FEFF 		bl	CyDelay
 551:main.c        ****     
 552:main.c        ****     //set up for the OLED screen's first write
 553:main.c        ****     I2Cbuff1[0] = 1<<6;
 2084              		.loc 1 553 0
 2085 02ce A14B     		ldr	r3, .L184+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 48


 2086 02d0 4022     		movs	r2, #64
 2087 02d2 1A70     		strb	r2, [r3]
 554:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2088              		.loc 1 554 0
 2089 02d4 0022     		movs	r2, #0
 2090 02d6 0121     		movs	r1, #1
 2091 02d8 7020     		movs	r0, #112
 2092 02da FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2093 02de 0346     		mov	r3, r0
 2094 02e0 1A46     		mov	r2, r3
 2095 02e2 9D4B     		ldr	r3, .L184+36
 2096 02e4 1A60     		str	r2, [r3]
 555:main.c        **** 
 556:main.c        ****     OLED_init();
 2097              		.loc 1 556 0
 2098 02e6 FFF7FEFF 		bl	OLED_init
 557:main.c        ****     OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 2099              		.loc 1 557 0
 2100 02ea 994B     		ldr	r3, .L184+28
 2101 02ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2102 02ee 1846     		mov	r0, r3
 2103 02f0 0323     		movs	r3, #3
 2104 02f2 0022     		movs	r2, #0
 2105 02f4 0221     		movs	r1, #2
 2106 02f6 FFF7FEFF 		bl	OLEDwriteInt
 558:main.c        ****     OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 2107              		.loc 1 558 0
 2108 02fa FFF7FEFF 		bl	OLEDgetCursor
 2109 02fe 0246     		mov	r2, r0
 2110 0300 0323     		movs	r3, #3
 2111 0302 0121     		movs	r1, #1
 2112 0304 9548     		ldr	r0, .L184+40
 2113 0306 FFF7FEFF 		bl	OLEDwriteString
 559:main.c        ****     OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, OLEDgetC
 2114              		.loc 1 559 0
 2115 030a 914B     		ldr	r3, .L184+28
 2116 030c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2117 030e 1A46     		mov	r2, r3
 2118 0310 1346     		mov	r3, r2
 2119 0312 DB00     		lsls	r3, r3, #3
 2120 0314 9B1A     		subs	r3, r3, r2
 2121 0316 5B00     		lsls	r3, r3, #1
 2122 0318 914A     		ldr	r2, .L184+44
 2123 031a 9C18     		adds	r4, r3, r2
 2124 031c FFF7FEFF 		bl	OLEDgetCursor
 2125 0320 0246     		mov	r2, r0
 2126 0322 0323     		movs	r3, #3
 2127 0324 0E21     		movs	r1, #14
 2128 0326 2046     		mov	r0, r4
 2129 0328 FFF7FEFF 		bl	OLEDwriteString
 560:main.c        ****     OLED_draw();
 2130              		.loc 1 560 0
 2131 032c FFF7FEFF 		bl	OLED_draw
 561:main.c        ****     
 562:main.c        ****     //initialize the macro knob adc to scan all knobs
 563:main.c        ****     I2Cbuff1[0] = 1<<2;
 2132              		.loc 1 563 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 49


 2133 0330 884B     		ldr	r3, .L184+32
 2134 0332 0422     		movs	r2, #4
 2135 0334 1A70     		strb	r2, [r3]
 564:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2136              		.loc 1 564 0
 2137 0336 0022     		movs	r2, #0
 2138 0338 0121     		movs	r1, #1
 2139 033a 7020     		movs	r0, #112
 2140 033c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2141 0340 0346     		mov	r3, r0
 2142 0342 1A46     		mov	r2, r3
 2143 0344 844B     		ldr	r3, .L184+36
 2144 0346 1A60     		str	r2, [r3]
 565:main.c        ****     main_counter = 9;
 2145              		.loc 1 565 0
 2146 0348 864B     		ldr	r3, .L184+48
 2147 034a 0922     		movs	r2, #9
 2148 034c 1A70     		strb	r2, [r3]
 566:main.c        **** 
 567:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 2149              		.loc 1 567 0
 2150 034e 814B     		ldr	r3, .L184+32
 2151 0350 0F22     		movs	r2, #15
 2152 0352 1A70     		strb	r2, [r3]
 568:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 2153              		.loc 1 568 0
 2154 0354 0022     		movs	r2, #0
 2155 0356 0121     		movs	r1, #1
 2156 0358 3520     		movs	r0, #53
 2157 035a FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2158 035e 0346     		mov	r3, r0
 2159 0360 1A46     		mov	r2, r3
 2160 0362 7D4B     		ldr	r3, .L184+36
 2161 0364 1A60     		str	r2, [r3]
 569:main.c        ****     
 570:main.c        **** #if 0
 571:main.c        ****     while(1)
 572:main.c        ****     {
 573:main.c        ****         for (int i=  0; i < 4; i++)
 574:main.c        ****         {
 575:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 576:main.c        ****             if (knobs[i] != prevKnobs[i])
 577:main.c        ****             {
 578:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 579:main.c        ****             }
 580:main.c        ****             prevKnobs[i] = knobs[i];
 581:main.c        ****         }
 582:main.c        ****         
 583:main.c        **** 
 584:main.c        ****         I2Cbuff1[0] = 1<<0;
 585:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 586:main.c        **** 
 587:main.c        ****         //CyDelayUs(100);
 588:main.c        ****         I2Cbuff1[0] = 0x0E;
 589:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 590:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 591:main.c        ****        // CyDelayUs(100);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 50


 592:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 593:main.c        ****         angle[0] +=  I2Cbuff2[1];
 594:main.c        ****         
 595:main.c        ****     }
 596:main.c        ****     #endif
 597:main.c        ****     //OLEDclear();
 598:main.c        ****     /*
 599:main.c        ****     while(1)
 600:main.c        ****     {
 601:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 602:main.c        ****         OLED_draw();
 603:main.c        ****         CyDelay(1);
 604:main.c        ****         
 605:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 606:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 607:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 608:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
 609:main.c        ****         for (int i=  0; i < 4; i++)
 610:main.c        ****         {
 611:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 612:main.c        ****         }
 613:main.c        **** 
 614:main.c        ****     }
 615:main.c        ****     */
 616:main.c        **** #if 0
 617:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 618:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 619:main.c        **** 
 620:main.c        **** 
 621:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 622:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 623:main.c        **** 
 624:main.c        ****     //address 0x48
 625:main.c        ****     I2Cbuff1[0] = 0x1;
 626:main.c        ****     I2Cbuff1[1] = 0b11000000;
 627:main.c        ****     I2Cbuff1[2] = 0b10000011;
 628:main.c        **** 
 629:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 630:main.c        ****     #endif
 631:main.c        ****     
 632:main.c        ****     SPIS_1_Start();  
 2162              		.loc 1 632 0
 2163 0366 FFF7FEFF 		bl	SPIS_1_Start
 633:main.c        ****     SPIM_1_Start();  
 2164              		.loc 1 633 0
 2165 036a FFF7FEFF 		bl	SPIM_1_Start
 634:main.c        ****     SPIS_2_Start(); 
 2166              		.loc 1 634 0
 2167 036e FFF7FEFF 		bl	SPIS_2_Start
 635:main.c        ****     DmaTxConfiguration();
 2168              		.loc 1 635 0
 2169 0372 FFF7FEFF 		bl	DmaTxConfiguration
 636:main.c        ****     DmaRxConfiguration();
 2170              		.loc 1 636 0
 2171 0376 FFF7FEFF 		bl	DmaRxConfiguration
 637:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 2172              		.loc 1 637 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 51


 2173 037a 7B48     		ldr	r0, .L184+52
 2174 037c FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 638:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 2175              		.loc 1 638 0
 2176 0380 7A48     		ldr	r0, .L184+56
 2177 0382 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 639:main.c        ****     
 640:main.c        ****     myArray[30] = 254;
 2178              		.loc 1 640 0
 2179 0386 7A4B     		ldr	r3, .L184+60
 2180 0388 FE22     		movs	r2, #254
 2181 038a 9A77     		strb	r2, [r3, #30]
 641:main.c        ****     myArray[31] = 253;
 2182              		.loc 1 641 0
 2183 038c 784B     		ldr	r3, .L184+60
 2184 038e FD22     		movs	r2, #253
 2185 0390 DA77     		strb	r2, [r3, #31]
 642:main.c        **** 
 643:main.c        ****     main_counter = 0;
 2186              		.loc 1 643 0
 2187 0392 744B     		ldr	r3, .L184+48
 2188 0394 0022     		movs	r2, #0
 2189 0396 1A70     		strb	r2, [r3]
 2190              	.L179:
 644:main.c        **** 
 645:main.c        **** 	for(;;)
 646:main.c        ****     {
 647:main.c        ****         
 648:main.c        ****         if (parseThatMF)
 2191              		.loc 1 648 0
 2192 0398 764B     		ldr	r3, .L184+64
 2193 039a 1B78     		ldrb	r3, [r3]
 2194 039c DBB2     		uxtb	r3, r3
 2195 039e 002B     		cmp	r3, #0
 2196 03a0 01D0     		beq	.L77
 649:main.c        ****         {
 650:main.c        ****             parseSysex();
 2197              		.loc 1 650 0
 2198 03a2 FFF7FEFF 		bl	parseSysex
 2199              	.L77:
 651:main.c        ****         }
 652:main.c        ****         
 653:main.c        ****         //if (newDataFlag)
 654:main.c        ****         //{
 655:main.c        ****         //}
 656:main.c        ****             /*
 657:main.c        ****             for (int i = 0; i < 5; i++)
 658:main.c        ****             {
 659:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 660:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 661:main.c        ****                 I2C_1_MasterSendStop(); 
 662:main.c        **** 
 663:main.c        **** 
 664:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 665:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 666:main.c        ****                 //I2C_1_MasterSendStop();
 667:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 52


 668:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 669:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 670:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 671:main.c        ****                  I2C_1_MasterSendStop(); 
 672:main.c        ****                 
 673:main.c        ****                 CyDelay(1);
 674:main.c        **** 
 675:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 676:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 677:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 678:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 679:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 680:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 681:main.c        ****                 I2C_1_MasterSendStop(); 
 682:main.c        ****                 
 683:main.c        ****                 CyDelay(2);
 684:main.c        **** 
 685:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 686:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 687:main.c        ****                I2C_1_MasterWriteByte(0x80);
 688:main.c        ****                 I2C_1_MasterSendStop(); 
 689:main.c        ****                CyDelay(2);
 690:main.c        ****             }
 691:main.c        ****         */
 692:main.c        ****         //set main i2c mux
 693:main.c        ****     
 694:main.c        ****         
 695:main.c        ****         /*
 696:main.c        ****         for (int i = 0; i < 4; i++)
 697:main.c        ****         {
 698:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 699:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 700:main.c        ****             I2C_1_MasterSendStop(); 
 701:main.c        **** 
 702:main.c        **** 
 703:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 704:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 705:main.c        ****             //I2C_1_MasterSendStop();
 706:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 707:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 708:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 709:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 710:main.c        ****              I2C_1_MasterSendStop(); 
 711:main.c        ****             
 712:main.c        ****             CyDelay(1);
 713:main.c        **** 
 714:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 715:main.c        ****             I2C_1_MasterWriteByte(0x01);
 716:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 717:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 718:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 719:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 720:main.c        ****             I2C_1_MasterSendStop(); 
 721:main.c        ****             
 722:main.c        ****             CyDelay(2);
 723:main.c        **** 
 724:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 53


 725:main.c        ****             I2C_1_MasterWriteByte(0xff);
 726:main.c        ****             I2C_1_MasterWriteByte(0x80);
 727:main.c        ****             I2C_1_MasterSendStop(); 
 728:main.c        ****            CyDelay(2);
 729:main.c        ****         }
 730:main.c        ****             */
 731:main.c        ****         /*    
 732:main.c        ****         if (main_counter == 6)
 733:main.c        ****         {
 734:main.c        ****             main_counter = 8;
 735:main.c        ****         }
 736:main.c        ****         */    
 737:main.c        ****         testpin3_Write(1);
 2200              		.loc 1 737 0
 2201 03a6 0120     		movs	r0, #1
 2202 03a8 FFF7FEFF 		bl	testpin3_Write
 738:main.c        ****        //sense levers and pedals
 739:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 2203              		.loc 1 739 0
 2204 03ac 6D4B     		ldr	r3, .L184+48
 2205 03ae 1B78     		ldrb	r3, [r3]
 2206 03b0 DBB2     		uxtb	r3, r3
 2207 03b2 1A46     		mov	r2, r3
 2208 03b4 704B     		ldr	r3, .L184+68
 2209 03b6 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2210 03ba 704B     		ldr	r3, .L184+72
 2211 03bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2212 03be 9A42     		cmp	r2, r3
 2213 03c0 13D0     		beq	.L78
 2214              	.LBB14:
 740:main.c        ****         {
 741:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 2215              		.loc 1 741 0
 2216 03c2 684B     		ldr	r3, .L184+48
 2217 03c4 1B78     		ldrb	r3, [r3]
 2218 03c6 DBB2     		uxtb	r3, r3
 2219 03c8 1A46     		mov	r2, r3
 2220 03ca 6B4B     		ldr	r3, .L184+68
 2221 03cc 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2222 03d0 1A46     		mov	r2, r3
 2223 03d2 0123     		movs	r3, #1
 2224 03d4 9340     		lsls	r3, r3, r2
 2225 03d6 DAB2     		uxtb	r2, r3
 2226 03d8 5E4B     		ldr	r3, .L184+32
 2227 03da 1A70     		strb	r2, [r3]
 742:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2228              		.loc 1 742 0
 2229 03dc 0022     		movs	r2, #0
 2230 03de 0121     		movs	r1, #1
 2231 03e0 7020     		movs	r0, #112
 2232 03e2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2233 03e6 0346     		mov	r3, r0
 2234 03e8 BB77     		strb	r3, [r7, #30]
 2235              	.L78:
 2236              	.LBE14:
 743:main.c        ****         }
 744:main.c        ****         last_mux = mux_states[main_counter][0];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 54


 2237              		.loc 1 744 0
 2238 03ea 5E4B     		ldr	r3, .L184+48
 2239 03ec 1B78     		ldrb	r3, [r3]
 2240 03ee DBB2     		uxtb	r3, r3
 2241 03f0 1A46     		mov	r2, r3
 2242 03f2 614B     		ldr	r3, .L184+68
 2243 03f4 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 2244 03f8 604B     		ldr	r3, .L184+72
 2245 03fa 1A70     		strb	r2, [r3]
 745:main.c        ****         
 746:main.c        ****         
 747:main.c        ****         CyDelayUs(10);
 2246              		.loc 1 747 0
 2247 03fc 0A20     		movs	r0, #10
 2248 03fe FFF7FEFF 		bl	CyDelayUs
 748:main.c        ****         if (mux_states[main_counter][0] == 5)
 2249              		.loc 1 748 0
 2250 0402 584B     		ldr	r3, .L184+48
 2251 0404 1B78     		ldrb	r3, [r3]
 2252 0406 DBB2     		uxtb	r3, r3
 2253 0408 1A46     		mov	r2, r3
 2254 040a 5B4B     		ldr	r3, .L184+68
 2255 040c 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 2256 0410 052B     		cmp	r3, #5
 2257 0412 1DD1     		bne	.L79
 749:main.c        ****         {
 750:main.c        ****             if (!i2c_skipped[main_counter])
 2258              		.loc 1 750 0
 2259 0414 534B     		ldr	r3, .L184+48
 2260 0416 1B78     		ldrb	r3, [r3]
 2261 0418 DBB2     		uxtb	r3, r3
 2262 041a 1A46     		mov	r2, r3
 2263 041c 584B     		ldr	r3, .L184+76
 2264 041e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2265 0420 002B     		cmp	r3, #0
 2266 0422 15D1     		bne	.L79
 751:main.c        ****             {
 752:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 2267              		.loc 1 752 0
 2268 0424 4F4B     		ldr	r3, .L184+48
 2269 0426 1B78     		ldrb	r3, [r3]
 2270 0428 DBB2     		uxtb	r3, r3
 2271 042a 534A     		ldr	r2, .L184+68
 2272 042c 5B00     		lsls	r3, r3, #1
 2273 042e 1344     		add	r3, r3, r2
 2274 0430 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 2275 0432 1A46     		mov	r2, r3
 2276 0434 0123     		movs	r3, #1
 2277 0436 9340     		lsls	r3, r3, r2
 2278 0438 DAB2     		uxtb	r2, r3
 2279 043a 464B     		ldr	r3, .L184+32
 2280 043c 1A70     		strb	r2, [r3]
 753:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 2281              		.loc 1 753 0
 2282 043e 0022     		movs	r2, #0
 2283 0440 0121     		movs	r1, #1
 2284 0442 7120     		movs	r0, #113
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 55


 2285 0444 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2286 0448 0346     		mov	r3, r0
 2287 044a 1A46     		mov	r2, r3
 2288 044c 424B     		ldr	r3, .L184+36
 2289 044e 1A60     		str	r2, [r3]
 2290              	.L79:
 754:main.c        ****             }
 755:main.c        ****         }
 756:main.c        **** 
 757:main.c        ****         CyDelayUs(10);
 2291              		.loc 1 757 0
 2292 0450 0A20     		movs	r0, #10
 2293 0452 FFF7FEFF 		bl	CyDelayUs
 758:main.c        ****         //if it's a hall sensor
 759:main.c        **** 
 760:main.c        ****         //temporarily don't scan vertical knee lever, should be <10 normally
 761:main.c        ****         if (main_counter < 9)
 2294              		.loc 1 761 0
 2295 0456 434B     		ldr	r3, .L184+48
 2296 0458 1B78     		ldrb	r3, [r3]
 2297 045a DBB2     		uxtb	r3, r3
 2298 045c 082B     		cmp	r3, #8
 2299 045e 00F2AE80 		bhi	.L80
 762:main.c        ****         {
 763:main.c        ****             if (!i2c_skipped[main_counter])
 2300              		.loc 1 763 0
 2301 0462 404B     		ldr	r3, .L184+48
 2302 0464 1B78     		ldrb	r3, [r3]
 2303 0466 DBB2     		uxtb	r3, r3
 2304 0468 1A46     		mov	r2, r3
 2305 046a 454B     		ldr	r3, .L184+76
 2306 046c 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2307 046e 002B     		cmp	r3, #0
 2308 0470 40F0A580 		bne	.L80
 764:main.c        ****             {
 765:main.c        ****                 //CyDelayUs(100);
 766:main.c        ****                 I2Cbuff1[0] = 0x0E;
 2309              		.loc 1 766 0
 2310 0474 374B     		ldr	r3, .L184+32
 2311 0476 0E22     		movs	r2, #14
 2312 0478 1A70     		strb	r2, [r3]
 767:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 2313              		.loc 1 767 0
 2314 047a 0222     		movs	r2, #2
 2315 047c 0121     		movs	r1, #1
 2316 047e 3620     		movs	r0, #54
 2317 0480 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2318 0484 0346     		mov	r3, r0
 2319 0486 1A46     		mov	r2, r3
 2320 0488 334B     		ldr	r3, .L184+36
 2321 048a 1A60     		str	r2, [r3]
 768:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 2322              		.loc 1 768 0
 2323 048c 0122     		movs	r2, #1
 2324 048e 0221     		movs	r1, #2
 2325 0490 3620     		movs	r0, #54
 2326 0492 FFF7FEFF 		bl	I2C_MasterReadBlocking
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 56


 2327 0496 0346     		mov	r3, r0
 2328 0498 1A46     		mov	r2, r3
 2329 049a 2F4B     		ldr	r3, .L184+36
 2330 049c 1A60     		str	r2, [r3]
 769:main.c        ****                // CyDelayUs(100);
 770:main.c        ****                 angle[main_counter] = I2Cbuff2[0] << 8;
 2331              		.loc 1 770 0
 2332 049e 314B     		ldr	r3, .L184+48
 2333 04a0 1B78     		ldrb	r3, [r3]
 2334 04a2 DBB2     		uxtb	r3, r3
 2335 04a4 1A46     		mov	r2, r3
 2336 04a6 374B     		ldr	r3, .L184+80
 2337 04a8 1B78     		ldrb	r3, [r3]
 2338 04aa DBB2     		uxtb	r3, r3
 2339 04ac 9BB2     		uxth	r3, r3
 2340 04ae 1B02     		lsls	r3, r3, #8
 2341 04b0 99B2     		uxth	r1, r3
 2342 04b2 354B     		ldr	r3, .L184+84
 2343 04b4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 771:main.c        ****                 angle[main_counter] +=  I2Cbuff2[1];
 2344              		.loc 1 771 0
 2345 04b8 324B     		ldr	r3, .L184+80
 2346 04ba 5B78     		ldrb	r3, [r3, #1]
 2347 04bc D8B2     		uxtb	r0, r3
 2348 04be 294B     		ldr	r3, .L184+48
 2349 04c0 1B78     		ldrb	r3, [r3]
 2350 04c2 DBB2     		uxtb	r3, r3
 2351 04c4 1946     		mov	r1, r3
 2352 04c6 1A46     		mov	r2, r3
 2353 04c8 2F4B     		ldr	r3, .L184+84
 2354 04ca 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2355 04ce 83B2     		uxth	r3, r0
 2356 04d0 1344     		add	r3, r3, r2
 2357 04d2 9AB2     		uxth	r2, r3
 2358 04d4 2C4B     		ldr	r3, .L184+84
 2359 04d6 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 772:main.c        ****                 
 773:main.c        ****                 if (calibrationMode)
 2360              		.loc 1 773 0
 2361 04da 2C4B     		ldr	r3, .L184+88
 2362 04dc 1B68     		ldr	r3, [r3]
 2363 04de 002B     		cmp	r3, #0
 2364 04e0 6DD0     		beq	.L80
 774:main.c        ****                 {
 775:main.c        ****                     if (angle[main_counter] < pedals_low[main_counter])
 2365              		.loc 1 775 0
 2366 04e2 204B     		ldr	r3, .L184+48
 2367 04e4 1B78     		ldrb	r3, [r3]
 2368 04e6 DBB2     		uxtb	r3, r3
 2369 04e8 1A46     		mov	r2, r3
 2370 04ea 274B     		ldr	r3, .L184+84
 2371 04ec 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2372 04f0 1C4B     		ldr	r3, .L184+48
 2373 04f2 1B78     		ldrb	r3, [r3]
 2374 04f4 DBB2     		uxtb	r3, r3
 2375 04f6 1946     		mov	r1, r3
 2376 04f8 254B     		ldr	r3, .L184+92
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 57


 2377 04fa 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2378 04fe 9A42     		cmp	r2, r3
 2379 0500 0DD2     		bcs	.L81
 776:main.c        ****                     {
 777:main.c        ****                         pedals_low[main_counter] = angle[main_counter];
 2380              		.loc 1 777 0
 2381 0502 184B     		ldr	r3, .L184+48
 2382 0504 1B78     		ldrb	r3, [r3]
 2383 0506 DBB2     		uxtb	r3, r3
 2384 0508 1A46     		mov	r2, r3
 2385 050a 164B     		ldr	r3, .L184+48
 2386 050c 1B78     		ldrb	r3, [r3]
 2387 050e DBB2     		uxtb	r3, r3
 2388 0510 1946     		mov	r1, r3
 2389 0512 1D4B     		ldr	r3, .L184+84
 2390 0514 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2391 0518 1D4B     		ldr	r3, .L184+92
 2392 051a 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2393              	.L81:
 778:main.c        ****                         
 779:main.c        ****                     }
 780:main.c        ****                     if (angle[main_counter] > pedals_high[main_counter])
 2394              		.loc 1 780 0
 2395 051e 114B     		ldr	r3, .L184+48
 2396 0520 1B78     		ldrb	r3, [r3]
 2397 0522 DBB2     		uxtb	r3, r3
 2398 0524 1A46     		mov	r2, r3
 2399 0526 184B     		ldr	r3, .L184+84
 2400 0528 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2401 052c 0D4B     		ldr	r3, .L184+48
 2402 052e 1B78     		ldrb	r3, [r3]
 2403 0530 30E0     		b	.L185
 2404              	.L186:
 2405 0532 00BF     		.align	2
 2406              	.L184:
 2407 0534 00000000 		.word	presetNamesArray
 2408 0538 00000000 		.word	presetAlreadyDisplayed
 2409 053c 00000000 		.word	Em_EEPROM_em_EepromStorage
 2410 0540 00000000 		.word	eepromReturnValue
 2411 0544 00000000 		.word	Vbus_function
 2412 0548 00000000 		.word	currentNeck
 2413 054c 00000000 		.word	necks
 2414 0550 00000000 		.word	currentCopedent
 2415 0554 00000000 		.word	I2Cbuff1
 2416 0558 00000000 		.word	status
 2417 055c 00040000 		.word	.LC0
 2418 0560 00000000 		.word	copedentNamesArray
 2419 0564 00000000 		.word	main_counter
 2420 0568 00000000 		.word	spis_1_ss
 2421 056c 00000000 		.word	spis_2_ss
 2422 0570 00000000 		.word	myArray
 2423 0574 00000000 		.word	parseThatMF
 2424 0578 00000000 		.word	mux_states
 2425 057c 00000000 		.word	last_mux
 2426 0580 00000000 		.word	i2c_skipped
 2427 0584 00000000 		.word	I2Cbuff2
 2428 0588 00000000 		.word	angle
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 58


 2429 058c 00000000 		.word	calibrationMode
 2430 0590 00000000 		.word	pedals_low
 2431              	.L185:
 2432 0594 DBB2     		uxtb	r3, r3
 2433 0596 1946     		mov	r1, r3
 2434 0598 A24B     		ldr	r3, .L187
 2435 059a 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2436 059e 9A42     		cmp	r2, r3
 2437 05a0 0DD9     		bls	.L80
 781:main.c        ****                     {
 782:main.c        ****                          pedals_high[main_counter] = angle[main_counter];
 2438              		.loc 1 782 0
 2439 05a2 A14B     		ldr	r3, .L187+4
 2440 05a4 1B78     		ldrb	r3, [r3]
 2441 05a6 DBB2     		uxtb	r3, r3
 2442 05a8 1A46     		mov	r2, r3
 2443 05aa 9F4B     		ldr	r3, .L187+4
 2444 05ac 1B78     		ldrb	r3, [r3]
 2445 05ae DBB2     		uxtb	r3, r3
 2446 05b0 1946     		mov	r1, r3
 2447 05b2 9E4B     		ldr	r3, .L187+8
 2448 05b4 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2449 05b8 9A4B     		ldr	r3, .L187
 2450 05ba 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2451              	.L80:
 783:main.c        ****                     }
 784:main.c        ****                 }
 785:main.c        ****             }
 786:main.c        ****         }
 787:main.c        ****         
 788:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 789:main.c        ****         if (main_counter == 9)
 2452              		.loc 1 789 0
 2453 05be 9A4B     		ldr	r3, .L187+4
 2454 05c0 1B78     		ldrb	r3, [r3]
 2455 05c2 DBB2     		uxtb	r3, r3
 2456 05c4 092B     		cmp	r3, #9
 2457 05c6 42D1     		bne	.L82
 790:main.c        ****         {
 791:main.c        ****             if (!i2c_skipped[main_counter])
 2458              		.loc 1 791 0
 2459 05c8 974B     		ldr	r3, .L187+4
 2460 05ca 1B78     		ldrb	r3, [r3]
 2461 05cc DBB2     		uxtb	r3, r3
 2462 05ce 1A46     		mov	r2, r3
 2463 05d0 974B     		ldr	r3, .L187+12
 2464 05d2 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2465 05d4 002B     		cmp	r3, #0
 2466 05d6 74D1     		bne	.L86
 792:main.c        ****             {
 793:main.c        ****                 //scan the knob adc
 794:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2467              		.loc 1 794 0
 2468 05d8 964B     		ldr	r3, .L187+16
 2469 05da 0022     		movs	r2, #0
 2470 05dc 1A70     		strb	r2, [r3]
 795:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 59


 2471              		.loc 1 795 0
 2472 05de 0022     		movs	r2, #0
 2473 05e0 1021     		movs	r1, #16
 2474 05e2 3520     		movs	r0, #53
 2475 05e4 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2476 05e8 0346     		mov	r3, r0
 2477 05ea 1A46     		mov	r2, r3
 2478 05ec 924B     		ldr	r3, .L187+20
 2479 05ee 1A60     		str	r2, [r3]
 2480              	.LBB15:
 796:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2481              		.loc 1 796 0
 2482 05f0 0023     		movs	r3, #0
 2483 05f2 3B66     		str	r3, [r7, #96]
 2484 05f4 20E0     		b	.L84
 2485              	.L85:
 2486              	.LBB16:
 797:main.c        ****                 {
 798:main.c        ****                    uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[i*2] & 255)) & 4095; // nece
 2487              		.loc 1 798 0 discriminator 3
 2488 05f6 3B6E     		ldr	r3, [r7, #96]
 2489 05f8 5B00     		lsls	r3, r3, #1
 2490 05fa 904A     		ldr	r2, .L187+24
 2491 05fc D35C     		ldrb	r3, [r2, r3]
 2492 05fe DBB2     		uxtb	r3, r3
 2493 0600 9BB2     		uxth	r3, r3
 2494 0602 1B02     		lsls	r3, r3, #8
 2495 0604 9AB2     		uxth	r2, r3
 2496 0606 3B6E     		ldr	r3, [r7, #96]
 2497 0608 5B00     		lsls	r3, r3, #1
 2498 060a 8C49     		ldr	r1, .L187+24
 2499 060c CB5C     		ldrb	r3, [r1, r3]
 2500 060e DBB2     		uxtb	r3, r3
 2501 0610 9BB2     		uxth	r3, r3
 2502 0612 1344     		add	r3, r3, r2
 2503 0614 9BB2     		uxth	r3, r3
 2504 0616 C3F30B03 		ubfx	r3, r3, #0, #12
 2505 061a FB80     		strh	r3, [r7, #6]	@ movhi
 799:main.c        ****                     macroKnobValues[i] = 255 - (tempInt >> 4); //now squish it down to 8 bit for se
 2506              		.loc 1 799 0 discriminator 3
 2507 061c FB88     		ldrh	r3, [r7, #6]
 2508 061e 1B09     		lsrs	r3, r3, #4
 2509 0620 9BB2     		uxth	r3, r3
 2510 0622 DBB2     		uxtb	r3, r3
 2511 0624 DB43     		mvns	r3, r3
 2512 0626 D9B2     		uxtb	r1, r3
 2513 0628 854A     		ldr	r2, .L187+28
 2514 062a 3B6E     		ldr	r3, [r7, #96]
 2515 062c 1344     		add	r3, r3, r2
 2516 062e 0A46     		mov	r2, r1
 2517 0630 1A70     		strb	r2, [r3]
 2518              	.LBE16:
 796:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2519              		.loc 1 796 0 discriminator 3
 2520 0632 3B6E     		ldr	r3, [r7, #96]
 2521 0634 0133     		adds	r3, r3, #1
 2522 0636 3B66     		str	r3, [r7, #96]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 60


 2523              	.L84:
 796:main.c        ****                 for (int i = 0; i < NUM_MACROS; i++)
 2524              		.loc 1 796 0 is_stmt 0 discriminator 1
 2525 0638 3B6E     		ldr	r3, [r7, #96]
 2526 063a 072B     		cmp	r3, #7
 2527 063c DBDD     		ble	.L85
 2528              	.LBE15:
 800:main.c        ****                 }
 801:main.c        ****                 //
 802:main.c        ****                 if (macroOLEDWaitingToSend)
 2529              		.loc 1 802 0 is_stmt 1
 2530 063e 814B     		ldr	r3, .L187+32
 2531 0640 1B68     		ldr	r3, [r3]
 2532 0642 002B     		cmp	r3, #0
 2533 0644 3DD0     		beq	.L86
 803:main.c        ****                 {
 804:main.c        ****                     //send the data to the little macro OLED screens
 805:main.c        ****                     
 806:main.c        ****                     macroOLEDWaitingToSend = 0;
 2534              		.loc 1 806 0
 2535 0646 7F4B     		ldr	r3, .L187+32
 2536 0648 0022     		movs	r2, #0
 2537 064a 1A60     		str	r2, [r3]
 2538 064c 39E0     		b	.L86
 2539              	.L82:
 807:main.c        ****                 }
 808:main.c        ****             }
 809:main.c        ****             
 810:main.c        ****         }
 811:main.c        ****         //otherwise it's the ADC for the foot pedal
 812:main.c        ****         else if (main_counter == 10)
 2540              		.loc 1 812 0
 2541 064e 764B     		ldr	r3, .L187+4
 2542 0650 1B78     		ldrb	r3, [r3]
 2543 0652 DBB2     		uxtb	r3, r3
 2544 0654 0A2B     		cmp	r3, #10
 2545 0656 26D1     		bne	.L87
 813:main.c        ****         {
 814:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 815:main.c        ****             if (!i2c_skipped[main_counter])
 2546              		.loc 1 815 0
 2547 0658 734B     		ldr	r3, .L187+4
 2548 065a 1B78     		ldrb	r3, [r3]
 2549 065c DBB2     		uxtb	r3, r3
 2550 065e 1A46     		mov	r2, r3
 2551 0660 734B     		ldr	r3, .L187+12
 2552 0662 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 2553 0664 002B     		cmp	r3, #0
 2554 0666 2CD1     		bne	.L86
 816:main.c        ****             {
 817:main.c        ****                 I2Cbuff1[0] = 0x0;      
 2555              		.loc 1 817 0
 2556 0668 724B     		ldr	r3, .L187+16
 2557 066a 0022     		movs	r2, #0
 2558 066c 1A70     		strb	r2, [r3]
 818:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 2559              		.loc 1 818 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 61


 2560 066e 0022     		movs	r2, #0
 2561 0670 0221     		movs	r1, #2
 2562 0672 4F20     		movs	r0, #79
 2563 0674 FFF7FEFF 		bl	I2C_MasterReadBlocking
 2564 0678 0346     		mov	r3, r0
 2565 067a 1A46     		mov	r2, r3
 2566 067c 6E4B     		ldr	r3, .L187+20
 2567 067e 1A60     		str	r2, [r3]
 819:main.c        ****                 volumePedal = I2Cbuff2[0] << 8;
 2568              		.loc 1 819 0
 2569 0680 6E4B     		ldr	r3, .L187+24
 2570 0682 1B78     		ldrb	r3, [r3]
 2571 0684 DBB2     		uxtb	r3, r3
 2572 0686 9BB2     		uxth	r3, r3
 2573 0688 1B02     		lsls	r3, r3, #8
 2574 068a 9AB2     		uxth	r2, r3
 2575 068c 6E4B     		ldr	r3, .L187+36
 2576 068e 1A80     		strh	r2, [r3]	@ movhi
 820:main.c        ****                 volumePedal +=  I2Cbuff2[1];
 2577              		.loc 1 820 0
 2578 0690 6A4B     		ldr	r3, .L187+24
 2579 0692 5B78     		ldrb	r3, [r3, #1]
 2580 0694 DBB2     		uxtb	r3, r3
 2581 0696 9AB2     		uxth	r2, r3
 2582 0698 6B4B     		ldr	r3, .L187+36
 2583 069a 1B88     		ldrh	r3, [r3]
 2584 069c 1344     		add	r3, r3, r2
 2585 069e 9AB2     		uxth	r2, r3
 2586 06a0 694B     		ldr	r3, .L187+36
 2587 06a2 1A80     		strh	r2, [r3]	@ movhi
 2588 06a4 0DE0     		b	.L86
 2589              	.L87:
 821:main.c        ****             }
 822:main.c        ****         }
 823:main.c        ****         else
 824:main.c        ****         if (main_counter == 11)
 2590              		.loc 1 824 0
 2591 06a6 604B     		ldr	r3, .L187+4
 2592 06a8 1B78     		ldrb	r3, [r3]
 2593 06aa DBB2     		uxtb	r3, r3
 2594 06ac 0B2B     		cmp	r3, #11
 2595 06ae 08D1     		bne	.L86
 825:main.c        ****         { 
 826:main.c        ****             if (mainOLEDWaitingToSend)
 2596              		.loc 1 826 0
 2597 06b0 664B     		ldr	r3, .L187+40
 2598 06b2 1B68     		ldr	r3, [r3]
 2599 06b4 002B     		cmp	r3, #0
 2600 06b6 04D0     		beq	.L86
 827:main.c        ****             {
 828:main.c        ****                 OLED_draw();
 2601              		.loc 1 828 0
 2602 06b8 FFF7FEFF 		bl	OLED_draw
 829:main.c        ****                 mainOLEDWaitingToSend = 0;
 2603              		.loc 1 829 0
 2604 06bc 634B     		ldr	r3, .L187+40
 2605 06be 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 62


 2606 06c0 1A60     		str	r2, [r3]
 2607              	.L86:
 830:main.c        ****             }
 831:main.c        ****             
 832:main.c        ****             #if 0
 833:main.c        ****             if (OLEDcount == 0)
 834:main.c        ****             {
 835:main.c        ****                 OLEDclearLine(FirstLine);
 836:main.c        ****             }
 837:main.c        ****             else if (OLEDcount == 1)
 838:main.c        ****             {
 839:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 840:main.c        **** 		    }
 841:main.c        ****             else if (OLEDcount == 2)
 842:main.c        ****             {
 843:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 844:main.c        ****             }
 845:main.c        ****             else if (OLEDcount == 3)
 846:main.c        ****             {
 847:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 848:main.c        ****             }
 849:main.c        ****             else if (OLEDcount == 4)
 850:main.c        ****             {
 851:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 852:main.c        ****             }
 853:main.c        ****             else if (OLEDcount == 5)
 854:main.c        ****             {
 855:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 856:main.c        ****             }
 857:main.c        ****             else if (OLEDcount == 6)
 858:main.c        ****             {
 859:main.c        ****                 //OLED_drawFirstLine();
 860:main.c        ****                 
 861:main.c        ****                 //OLEDwriteInt( bar[0] , 6, 0,SecondLine);
 862:main.c        ****                 //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 863:main.c        ****                 //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 864:main.c        ****                 //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_B
 865:main.c        ****                  //OLED_draw();
 866:main.c        ****             }
 867:main.c        ****             OLEDcount++;
 868:main.c        ****             if (OLEDcount > 6)
 869:main.c        ****             {
 870:main.c        ****                 OLEDcount = 0;
 871:main.c        ****             }
 872:main.c        ****             #endif
 873:main.c        ****         }
 874:main.c        **** 
 875:main.c        ****         /*
 876:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 877:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 878:main.c        **** 
 879:main.c        ****                 for (int i = 0; i < 5; i++)
 880:main.c        ****                 {
 881:main.c        ****                     I2Cbuff1[0] = 1<<i;
 882:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 883:main.c        **** 
 884:main.c        ****                     I2Cbuff1[0] = 0x0E;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 63


 885:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 886:main.c        **** 
 887:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 888:main.c        **** 
 889:main.c        **** 
 890:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 891:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 892:main.c        ****                 }
 893:main.c        ****             if (main_counter == 0)
 894:main.c        ****             {               
 895:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 896:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 897:main.c        **** 
 898:main.c        ****                 for (int i = 0; i < 5; i++)
 899:main.c        ****                 {
 900:main.c        ****                     I2Cbuff1[0] = 1<<i;
 901:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 902:main.c        **** 
 903:main.c        ****                     I2Cbuff1[0] = 0x0E;
 904:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 905:main.c        **** 
 906:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 907:main.c        **** 
 908:main.c        **** 
 909:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 910:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 911:main.c        ****                 }
 912:main.c        ****             }
 913:main.c        ****             else
 914:main.c        ****             {
 915:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 916:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 917:main.c        ****                 I2Cbuff1[0] = 0x0E;
 918:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 919:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 920:main.c        ****                 {
 921:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 922:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 923:main.c        ****                 }
 924:main.c        ****            
 925:main.c        **** 
 926:main.c        **** 
 927:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 928:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 929:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 930:main.c        ****                 {
 931:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 932:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 933:main.c        ****                 }
 934:main.c        ****                 
 935:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
 936:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
 937:main.c        ****             }    
 938:main.c        ****                 
 939:main.c        **** 
 940:main.c        ****             send_it = 1;
 941:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 64


 942:main.c        ****         */
 943:main.c        ****         
 944:main.c        ****         if (main_counter < 10)
 2608              		.loc 1 944 0
 2609 06c2 594B     		ldr	r3, .L187+4
 2610 06c4 1B78     		ldrb	r3, [r3]
 2611 06c6 DBB2     		uxtb	r3, r3
 2612 06c8 092B     		cmp	r3, #9
 2613 06ca 00F29080 		bhi	.L89
 2614              	.LBB17:
 945:main.c        ****         {
 946:main.c        ****             
 947:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 948:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2615              		.loc 1 948 0
 2616 06ce 564B     		ldr	r3, .L187+4
 2617 06d0 1B78     		ldrb	r3, [r3]
 2618 06d2 DBB2     		uxtb	r3, r3
 2619 06d4 1A46     		mov	r2, r3
 2620 06d6 554B     		ldr	r3, .L187+8
 2621 06d8 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2622 06dc 524B     		ldr	r3, .L187+4
 2623 06de 1B78     		ldrb	r3, [r3]
 2624 06e0 DBB2     		uxtb	r3, r3
 2625 06e2 1946     		mov	r1, r3
 2626 06e4 5A4B     		ldr	r3, .L187+44
 2627 06e6 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2628 06ea D31A     		subs	r3, r2, r3
 2629 06ec 9BB2     		uxth	r3, r3
 2630 06ee BB83     		strh	r3, [r7, #28]	@ movhi
 949:main.c        ****             
 950:main.c        ****             if (tempangle > 0)
 2631              		.loc 1 950 0
 2632 06f0 B7F91C30 		ldrsh	r3, [r7, #28]
 2633 06f4 002B     		cmp	r3, #0
 2634 06f6 1CDD     		ble	.L90
 951:main.c        ****             {
 952:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2635              		.loc 1 952 0
 2636 06f8 4B4B     		ldr	r3, .L187+4
 2637 06fa 1B78     		ldrb	r3, [r3]
 2638 06fc DBB2     		uxtb	r3, r3
 2639 06fe 1C46     		mov	r4, r3
 2640 0700 B7F91C30 		ldrsh	r3, [r7, #28]
 2641 0704 1846     		mov	r0, r3
 2642 0706 FFF7FEFF 		bl	__aeabi_i2f
 2643 070a 474B     		ldr	r3, .L187+4
 2644 070c 1B78     		ldrb	r3, [r3]
 2645 070e DBB2     		uxtb	r3, r3
 2646 0710 1A46     		mov	r2, r3
 2647 0712 504B     		ldr	r3, .L187+48
 2648 0714 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2649 0718 1946     		mov	r1, r3
 2650 071a FFF7FEFF 		bl	__aeabi_fmul
 2651 071e 0346     		mov	r3, r0
 2652 0720 1846     		mov	r0, r3
 2653 0722 FFF7FEFF 		bl	__aeabi_f2uiz
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 65


 2654 0726 0346     		mov	r3, r0
 2655 0728 9AB2     		uxth	r2, r3
 2656 072a 4B4B     		ldr	r3, .L187+52
 2657 072c 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2658 0730 07E0     		b	.L91
 2659              	.L90:
 953:main.c        ****             }
 954:main.c        ****             else
 955:main.c        ****             {
 956:main.c        ****                 processed_pedals[main_counter] = 0;
 2660              		.loc 1 956 0
 2661 0732 3D4B     		ldr	r3, .L187+4
 2662 0734 1B78     		ldrb	r3, [r3]
 2663 0736 DBB2     		uxtb	r3, r3
 2664 0738 1A46     		mov	r2, r3
 2665 073a 474B     		ldr	r3, .L187+52
 2666 073c 0021     		movs	r1, #0
 2667 073e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2668              	.L91:
 957:main.c        ****             }
 958:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2669              		.loc 1 958 0
 2670 0742 394B     		ldr	r3, .L187+4
 2671 0744 1B78     		ldrb	r3, [r3]
 2672 0746 DBB2     		uxtb	r3, r3
 2673 0748 1A46     		mov	r2, r3
 2674 074a 434B     		ldr	r3, .L187+52
 2675 074c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2676 0750 B3F5805F 		cmp	r3, #4096
 2677 0754 08D3     		bcc	.L92
 959:main.c        ****             {
 960:main.c        ****                 processed_pedals[main_counter] = 4095;
 2678              		.loc 1 960 0
 2679 0756 344B     		ldr	r3, .L187+4
 2680 0758 1B78     		ldrb	r3, [r3]
 2681 075a DBB2     		uxtb	r3, r3
 2682 075c 1A46     		mov	r2, r3
 2683 075e 3E4B     		ldr	r3, .L187+52
 2684 0760 40F6FF71 		movw	r1, #4095
 2685 0764 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2686              	.L92:
 961:main.c        ****             }
 962:main.c        ****             
 963:main.c        ****             
 964:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 965:main.c        ****             {
 966:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 967:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 968:main.c        ****             }
 969:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2687              		.loc 1 969 0
 2688 0768 2F4B     		ldr	r3, .L187+4
 2689 076a 1B78     		ldrb	r3, [r3]
 2690 076c DBB2     		uxtb	r3, r3
 2691 076e 1C46     		mov	r4, r3
 2692 0770 2D4B     		ldr	r3, .L187+4
 2693 0772 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 66


 2694 0774 DBB2     		uxtb	r3, r3
 2695 0776 1A46     		mov	r2, r3
 2696 0778 374B     		ldr	r3, .L187+52
 2697 077a 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2698 077e 1846     		mov	r0, r3
 2699 0780 FFF7FEFF 		bl	__aeabi_ui2f
 2700 0784 0346     		mov	r3, r0
 2701 0786 3549     		ldr	r1, .L187+56
 2702 0788 1846     		mov	r0, r3
 2703 078a FFF7FEFF 		bl	__aeabi_fmul
 2704 078e 0346     		mov	r3, r0
 2705 0790 1A46     		mov	r2, r3
 2706 0792 334B     		ldr	r3, .L187+60
 2707 0794 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 970:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[main_counter] * 0.0625f;
 2708              		.loc 1 970 0
 2709 0798 234B     		ldr	r3, .L187+4
 2710 079a 1B78     		ldrb	r3, [r3]
 2711 079c DBB2     		uxtb	r3, r3
 2712 079e 1C46     		mov	r4, r3
 2713 07a0 214B     		ldr	r3, .L187+4
 2714 07a2 1B78     		ldrb	r3, [r3]
 2715 07a4 DBB2     		uxtb	r3, r3
 2716 07a6 1A46     		mov	r2, r3
 2717 07a8 2B4B     		ldr	r3, .L187+52
 2718 07aa 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2719 07ae 1846     		mov	r0, r3
 2720 07b0 FFF7FEFF 		bl	__aeabi_ui2f
 2721 07b4 0346     		mov	r3, r0
 2722 07b6 4FF07651 		mov	r1, #1031798784
 2723 07ba 1846     		mov	r0, r3
 2724 07bc FFF7FEFF 		bl	__aeabi_fmul
 2725 07c0 0346     		mov	r3, r0
 2726 07c2 1846     		mov	r0, r3
 2727 07c4 FFF7FEFF 		bl	__aeabi_f2uiz
 2728 07c8 0346     		mov	r3, r0
 2729 07ca DAB2     		uxtb	r2, r3
 2730 07cc 254B     		ldr	r3, .L187+64
 2731 07ce 1A55     		strb	r2, [r3, r4]
 971:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 2732              		.loc 1 971 0
 2733 07d0 154B     		ldr	r3, .L187+4
 2734 07d2 1B78     		ldrb	r3, [r3]
 2735 07d4 DBB2     		uxtb	r3, r3
 2736 07d6 1A46     		mov	r2, r3
 2737 07d8 134B     		ldr	r3, .L187+4
 2738 07da 1B78     		ldrb	r3, [r3]
 2739 07dc DBB2     		uxtb	r3, r3
 2740 07de 1946     		mov	r1, r3
 2741 07e0 1D4B     		ldr	r3, .L187+52
 2742 07e2 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2743 07e6 204B     		ldr	r3, .L187+68
 2744 07e8 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2745              	.LBE17:
 2746 07ec 6DE0     		b	.L93
 2747              	.L89:
 972:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 67


 973:main.c        ****         else
 974:main.c        ****         {
 975:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2748              		.loc 1 975 0
 2749 07ee 164B     		ldr	r3, .L187+36
 2750 07f0 1B88     		ldrh	r3, [r3]
 2751 07f2 1846     		mov	r0, r3
 2752 07f4 FFF7FEFF 		bl	__aeabi_ui2f
 2753 07f8 0346     		mov	r3, r0
 2754 07fa 1C49     		ldr	r1, .L187+72
 2755 07fc 1846     		mov	r0, r3
 2756 07fe FFF7FEFF 		bl	__aeabi_fmul
 2757 0802 0346     		mov	r3, r0
 2758 0804 1846     		mov	r0, r3
 2759 0806 FFF7FEFF 		bl	__aeabi_f2iz
 2760 080a 0346     		mov	r3, r0
 2761 080c 1AB2     		sxth	r2, r3
 2762 080e 184B     		ldr	r3, .L187+76
 2763 0810 1A80     		strh	r2, [r3]	@ movhi
 976:main.c        **** 
 977:main.c        ****             if (processed_volumePedal < 0)
 2764              		.loc 1 977 0
 2765 0812 174B     		ldr	r3, .L187+76
 2766 0814 B3F90030 		ldrsh	r3, [r3]
 2767 0818 002B     		cmp	r3, #0
 2768 081a 2BDA     		bge	.L94
 978:main.c        ****             {
 979:main.c        ****                 processed_volumePedal = 0;
 2769              		.loc 1 979 0
 2770 081c 144B     		ldr	r3, .L187+76
 2771 081e 0022     		movs	r2, #0
 2772 0820 1A80     		strh	r2, [r3]	@ movhi
 2773 0822 31E0     		b	.L95
 2774              	.L188:
 2775              		.align	2
 2776              	.L187:
 2777 0824 00000000 		.word	pedals_high
 2778 0828 00000000 		.word	main_counter
 2779 082c 00000000 		.word	angle
 2780 0830 00000000 		.word	i2c_skipped
 2781 0834 00000000 		.word	I2Cbuff1
 2782 0838 00000000 		.word	status
 2783 083c 00000000 		.word	I2Cbuff2
 2784 0840 00000000 		.word	macroKnobValues
 2785 0844 00000000 		.word	macroOLEDWaitingToSend
 2786 0848 00000000 		.word	volumePedal
 2787 084c 00000000 		.word	mainOLEDWaitingToSend
 2788 0850 00000000 		.word	pedals_low
 2789 0854 00000000 		.word	pedalRatios
 2790 0858 00000000 		.word	processed_pedals
 2791 085c 01088039 		.word	964691969
 2792 0860 00000000 		.word	pedals_float
 2793 0864 00000000 		.word	pedals8bit
 2794 0868 00000000 		.word	prev_processed_pedals
 2795 086c C5F1803F 		.word	1065415109
 2796 0870 00000000 		.word	processed_volumePedal
 2797              	.L94:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 68


 980:main.c        ****             }
 981:main.c        ****             else if (processed_volumePedal > 4095)
 2798              		.loc 1 981 0
 2799 0874 744B     		ldr	r3, .L189
 2800 0876 B3F90030 		ldrsh	r3, [r3]
 2801 087a B3F5805F 		cmp	r3, #4096
 2802 087e 03DB     		blt	.L95
 982:main.c        ****             {
 983:main.c        ****                  processed_volumePedal = 4095;
 2803              		.loc 1 983 0
 2804 0880 714B     		ldr	r3, .L189
 2805 0882 40F6FF72 		movw	r2, #4095
 2806 0886 1A80     		strh	r2, [r3]	@ movhi
 2807              	.L95:
 984:main.c        ****             }
 985:main.c        ****             
 986:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 2808              		.loc 1 986 0
 2809 0888 6F4B     		ldr	r3, .L189
 2810 088a B3F90020 		ldrsh	r2, [r3]
 2811 088e 6F4B     		ldr	r3, .L189+4
 2812 0890 B3F90030 		ldrsh	r3, [r3]
 2813 0894 9A42     		cmp	r2, r3
 2814 0896 13D0     		beq	.L96
 2815              	.LBB18:
 987:main.c        ****             {
 988:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 2816              		.loc 1 988 0
 2817 0898 6B4B     		ldr	r3, .L189
 2818 089a B3F90030 		ldrsh	r3, [r3]
 2819 089e 7B83     		strh	r3, [r7, #26]	@ movhi
 989:main.c        ****                 
 990:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 2820              		.loc 1 990 0
 2821 08a0 7B8B     		ldrh	r3, [r7, #26]
 2822 08a2 DB09     		lsrs	r3, r3, #7
 2823 08a4 9BB2     		uxth	r3, r3
 2824 08a6 0022     		movs	r2, #0
 2825 08a8 1946     		mov	r1, r3
 2826 08aa 1520     		movs	r0, #21
 2827 08ac FFF7FEFF 		bl	sendMIDIControlChange
 991:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 2828              		.loc 1 991 0
 2829 08b0 7B8B     		ldrh	r3, [r7, #26]
 2830 08b2 03F07F03 		and	r3, r3, #127
 2831 08b6 0022     		movs	r2, #0
 2832 08b8 1946     		mov	r1, r3
 2833 08ba 1620     		movs	r0, #22
 2834 08bc FFF7FEFF 		bl	sendMIDIControlChange
 2835              	.L96:
 2836              	.LBE18:
 992:main.c        ****             }
 993:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 2837              		.loc 1 993 0
 2838 08c0 614B     		ldr	r3, .L189
 2839 08c2 B3F90020 		ldrsh	r2, [r3]
 2840 08c6 614B     		ldr	r3, .L189+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 69


 2841 08c8 1A80     		strh	r2, [r3]	@ movhi
 2842              	.L93:
 994:main.c        ****         }
 995:main.c        ****         
 996:main.c        ****         main_counter++;
 2843              		.loc 1 996 0
 2844 08ca 614B     		ldr	r3, .L189+8
 2845 08cc 1B78     		ldrb	r3, [r3]
 2846 08ce DBB2     		uxtb	r3, r3
 2847 08d0 0133     		adds	r3, r3, #1
 2848 08d2 DAB2     		uxtb	r2, r3
 2849 08d4 5E4B     		ldr	r3, .L189+8
 2850 08d6 1A70     		strb	r2, [r3]
 997:main.c        **** 
 998:main.c        ****         if (main_counter > 11)
 2851              		.loc 1 998 0
 2852 08d8 5D4B     		ldr	r3, .L189+8
 2853 08da 1B78     		ldrb	r3, [r3]
 2854 08dc DBB2     		uxtb	r3, r3
 2855 08de 0B2B     		cmp	r3, #11
 2856 08e0 02D9     		bls	.L97
 999:main.c        ****         {
1000:main.c        ****             main_counter = 0;
 2857              		.loc 1 1000 0
 2858 08e2 5B4B     		ldr	r3, .L189+8
 2859 08e4 0022     		movs	r2, #0
 2860 08e6 1A70     		strb	r2, [r3]
 2861              	.L97:
1001:main.c        ****         }
1002:main.c        ****         testpin3_Write(0);
 2862              		.loc 1 1002 0
 2863 08e8 0020     		movs	r0, #0
 2864 08ea FFF7FEFF 		bl	testpin3_Write
1003:main.c        ****         #if 0
1004:main.c        ****             
1005:main.c        ****             
1006:main.c        ****         main_counter++;
1007:main.c        ****         if (main_counter >= 11)
1008:main.c        ****         {
1009:main.c        ****                /*  
1010:main.c        ****             testpin3_Write(1);
1011:main.c        ****             I2Cbuff1[0] = 1<<6;
1012:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1013:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1014:main.c        **** 
1015:main.c        ****         //CyDelay(1);
1016:main.c        ****         
1017:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1018:main.c        **** 
1019:main.c        ****         OLED_draw();
1020:main.c        ****                     I2Cbuff1[0] = 1<<0;
1021:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1022:main.c        ****         testpin3_Write(0);
1023:main.c        ****             */
1024:main.c        ****             main_counter = 0;
1025:main.c        ****         }
1026:main.c        ****         #endif
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 70


1027:main.c        ****         testpin5_Write(1);
 2865              		.loc 1 1027 0
 2866 08ee 0120     		movs	r0, #1
 2867 08f0 FFF7FEFF 		bl	testpin5_Write
1028:main.c        ****         /*
1029:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
1030:main.c        ****         {
1031:main.c        ****             for (int i = 0; i < 2; i++)
1032:main.c        ****             {
1033:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
1034:main.c        ****     
1035:main.c        ****                 if (bar[i] != prevBar[i])
1036:main.c        ****                 {
1037:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
1038:main.c        ****     				{
1039:main.c        ****     					stringMappedPositions[i] = 1.0f;
1040:main.c        ****     				}
1041:main.c        **** 
1042:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
1043:main.c        ****     				{
1044:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
1045:main.c        ****     				}
1046:main.c        **** 
1047:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
1048:main.c        ****     				{
1049:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
1050:main.c        ****     				}
1051:main.c        **** 
1052:main.c        ****     				else
1053:main.c        ****     				{
1054:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
1055:main.c        ****     				}
1056:main.c        **** 
1057:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
1058:main.c        ****                 }
1059:main.c        ****                 prevBar[i] = bar[i];
1060:main.c        ****             }
1061:main.c        ****         }
1062:main.c        ****         */
1063:main.c        ****         testpin5_Write(0);
 2868              		.loc 1 1063 0
 2869 08f4 0020     		movs	r0, #0
 2870 08f6 FFF7FEFF 		bl	testpin5_Write
 2871              	.LBB19:
1064:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 2872              		.loc 1 1064 0
 2873 08fa 0023     		movs	r3, #0
 2874 08fc FB65     		str	r3, [r7, #92]
 2875 08fe 1AE0     		b	.L98
 2876              	.L100:
1065:main.c        ****         {
1066:main.c        ****             if (strings[i] != prevStrings[i])
 2877              		.loc 1 1066 0
 2878 0900 544A     		ldr	r2, .L189+12
 2879 0902 FB6D     		ldr	r3, [r7, #92]
 2880 0904 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2881 0908 9AB2     		uxth	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 71


 2882 090a 5349     		ldr	r1, .L189+16
 2883 090c FB6D     		ldr	r3, [r7, #92]
 2884 090e 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2885 0912 9BB2     		uxth	r3, r3
 2886 0914 9A42     		cmp	r2, r3
 2887 0916 02D0     		beq	.L99
1067:main.c        ****             {
1068:main.c        ****                 noteEvent(i);
 2888              		.loc 1 1068 0
 2889 0918 F86D     		ldr	r0, [r7, #92]
 2890 091a FFF7FEFF 		bl	noteEvent
 2891              	.L99:
1069:main.c        ****             }
1070:main.c        ****             prevStrings[i] = strings[i];
 2892              		.loc 1 1070 0 discriminator 2
 2893 091e 4D4A     		ldr	r2, .L189+12
 2894 0920 FB6D     		ldr	r3, [r7, #92]
 2895 0922 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2896 0926 99B2     		uxth	r1, r3
 2897 0928 4B4A     		ldr	r2, .L189+16
 2898 092a FB6D     		ldr	r3, [r7, #92]
 2899 092c 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1064:main.c        ****         {
 2900              		.loc 1 1064 0 discriminator 2
 2901 0930 FB6D     		ldr	r3, [r7, #92]
 2902 0932 0133     		adds	r3, r3, #1
 2903 0934 FB65     		str	r3, [r7, #92]
 2904              	.L98:
1064:main.c        ****         {
 2905              		.loc 1 1064 0 is_stmt 0 discriminator 1
 2906 0936 494B     		ldr	r3, .L189+20
 2907 0938 1B68     		ldr	r3, [r3]
 2908 093a FA6D     		ldr	r2, [r7, #92]
 2909 093c 9A42     		cmp	r2, r3
 2910 093e DFDB     		blt	.L100
 2911              	.LBE19:
1071:main.c        ****         }
1072:main.c        ****         
1073:main.c        **** 
1074:main.c        **** 
1075:main.c        ****         
1076:main.c        ****         
1077:main.c        ****         if (!oct1_Read())
 2912              		.loc 1 1077 0 is_stmt 1
 2913 0940 FFF7FEFF 		bl	oct1_Read
 2914 0944 0346     		mov	r3, r0
 2915 0946 002B     		cmp	r3, #0
 2916 0948 24D1     		bne	.L101
1078:main.c        ****         {
1079:main.c        ****             if (octave > 4)
 2917              		.loc 1 1079 0
 2918 094a 454B     		ldr	r3, .L189+24
 2919 094c 1B68     		ldr	r3, [r3]
 2920 094e 042B     		cmp	r3, #4
 2921 0950 03DD     		ble	.L102
1080:main.c        ****             {
1081:main.c        ****                 octave = 4;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 72


 2922              		.loc 1 1081 0
 2923 0952 434B     		ldr	r3, .L189+24
 2924 0954 0422     		movs	r2, #4
 2925 0956 1A60     		str	r2, [r3]
 2926 0958 0CE0     		b	.L103
 2927              	.L102:
1082:main.c        **** 
1083:main.c        ****             }
1084:main.c        ****             else if ((oct1Up) && (octave > 0))
 2928              		.loc 1 1084 0
 2929 095a 424B     		ldr	r3, .L189+28
 2930 095c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2931 095e 002B     		cmp	r3, #0
 2932 0960 08D0     		beq	.L103
 2933              		.loc 1 1084 0 is_stmt 0 discriminator 1
 2934 0962 3F4B     		ldr	r3, .L189+24
 2935 0964 1B68     		ldr	r3, [r3]
 2936 0966 002B     		cmp	r3, #0
 2937 0968 04DD     		ble	.L103
1085:main.c        ****             {
1086:main.c        ****                 octave--;
 2938              		.loc 1 1086 0 is_stmt 1
 2939 096a 3D4B     		ldr	r3, .L189+24
 2940 096c 1B68     		ldr	r3, [r3]
 2941 096e 013B     		subs	r3, r3, #1
 2942 0970 3B4A     		ldr	r2, .L189+24
 2943 0972 1360     		str	r3, [r2]
 2944              	.L103:
1087:main.c        ****             }
1088:main.c        ****             LED_amber1_Write(1);
 2945              		.loc 1 1088 0
 2946 0974 0120     		movs	r0, #1
 2947 0976 FFF7FEFF 		bl	LED_amber1_Write
1089:main.c        ****             LED_amber2_Write(0);
 2948              		.loc 1 1089 0
 2949 097a 0020     		movs	r0, #0
 2950 097c FFF7FEFF 		bl	LED_amber2_Write
1090:main.c        ****             LED_amber3_Write(0);
 2951              		.loc 1 1090 0
 2952 0980 0020     		movs	r0, #0
 2953 0982 FFF7FEFF 		bl	LED_amber3_Write
1091:main.c        ****             LED_amber4_Write(0);
 2954              		.loc 1 1091 0
 2955 0986 0020     		movs	r0, #0
 2956 0988 FFF7FEFF 		bl	LED_amber4_Write
1092:main.c        ****             oct1Up = 0;
 2957              		.loc 1 1092 0
 2958 098c 354B     		ldr	r3, .L189+28
 2959 098e 0022     		movs	r2, #0
 2960 0990 1A70     		strb	r2, [r3]
 2961 0992 07E0     		b	.L104
 2962              	.L101:
1093:main.c        ****         }
1094:main.c        ****         
1095:main.c        ****         else if (oct1_Read())
 2963              		.loc 1 1095 0
 2964 0994 FFF7FEFF 		bl	oct1_Read
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 73


 2965 0998 0346     		mov	r3, r0
 2966 099a 002B     		cmp	r3, #0
 2967 099c 02D0     		beq	.L104
1096:main.c        ****         {
1097:main.c        ****             oct1Up = 1;
 2968              		.loc 1 1097 0
 2969 099e 314B     		ldr	r3, .L189+28
 2970 09a0 0122     		movs	r2, #1
 2971 09a2 1A70     		strb	r2, [r3]
 2972              	.L104:
1098:main.c        ****         }
1099:main.c        ****         
1100:main.c        ****         if (!oct2_Read())
 2973              		.loc 1 1100 0
 2974 09a4 FFF7FEFF 		bl	oct2_Read
 2975 09a8 0346     		mov	r3, r0
 2976 09aa 002B     		cmp	r3, #0
 2977 09ac 0ED1     		bne	.L105
1101:main.c        ****         {
1102:main.c        ****             octave = 5;
 2978              		.loc 1 1102 0
 2979 09ae 2C4B     		ldr	r3, .L189+24
 2980 09b0 0522     		movs	r2, #5
 2981 09b2 1A60     		str	r2, [r3]
1103:main.c        ****             LED_amber1_Write(0);
 2982              		.loc 1 1103 0
 2983 09b4 0020     		movs	r0, #0
 2984 09b6 FFF7FEFF 		bl	LED_amber1_Write
1104:main.c        ****             LED_amber2_Write(1);
 2985              		.loc 1 1104 0
 2986 09ba 0120     		movs	r0, #1
 2987 09bc FFF7FEFF 		bl	LED_amber2_Write
1105:main.c        ****             LED_amber3_Write(0);
 2988              		.loc 1 1105 0
 2989 09c0 0020     		movs	r0, #0
 2990 09c2 FFF7FEFF 		bl	LED_amber3_Write
1106:main.c        ****             LED_amber4_Write(0);
 2991              		.loc 1 1106 0
 2992 09c6 0020     		movs	r0, #0
 2993 09c8 FFF7FEFF 		bl	LED_amber4_Write
 2994              	.L105:
1107:main.c        ****         }
1108:main.c        ****         if (!oct3_Read())
 2995              		.loc 1 1108 0
 2996 09cc FFF7FEFF 		bl	oct3_Read
 2997 09d0 0346     		mov	r3, r0
 2998 09d2 002B     		cmp	r3, #0
 2999 09d4 0ED1     		bne	.L106
1109:main.c        ****         {
1110:main.c        ****             octave = 6;
 3000              		.loc 1 1110 0
 3001 09d6 224B     		ldr	r3, .L189+24
 3002 09d8 0622     		movs	r2, #6
 3003 09da 1A60     		str	r2, [r3]
1111:main.c        ****             LED_amber1_Write(0);
 3004              		.loc 1 1111 0
 3005 09dc 0020     		movs	r0, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 74


 3006 09de FFF7FEFF 		bl	LED_amber1_Write
1112:main.c        ****             LED_amber2_Write(0);
 3007              		.loc 1 1112 0
 3008 09e2 0020     		movs	r0, #0
 3009 09e4 FFF7FEFF 		bl	LED_amber2_Write
1113:main.c        ****             LED_amber3_Write(1);
 3010              		.loc 1 1113 0
 3011 09e8 0120     		movs	r0, #1
 3012 09ea FFF7FEFF 		bl	LED_amber3_Write
1114:main.c        ****             LED_amber4_Write(0);            
 3013              		.loc 1 1114 0
 3014 09ee 0020     		movs	r0, #0
 3015 09f0 FFF7FEFF 		bl	LED_amber4_Write
 3016              	.L106:
1115:main.c        ****         }
1116:main.c        ****         if (!oct4_Read())
 3017              		.loc 1 1116 0
 3018 09f4 FFF7FEFF 		bl	oct4_Read
 3019 09f8 0346     		mov	r3, r0
 3020 09fa 002B     		cmp	r3, #0
 3021 09fc 36D1     		bne	.L107
1117:main.c        ****         {
1118:main.c        ****             if (octave < 7)
 3022              		.loc 1 1118 0
 3023 09fe 184B     		ldr	r3, .L189+24
 3024 0a00 1B68     		ldr	r3, [r3]
 3025 0a02 062B     		cmp	r3, #6
 3026 0a04 03DC     		bgt	.L108
1119:main.c        ****             {
1120:main.c        ****                 octave = 7;
 3027              		.loc 1 1120 0
 3028 0a06 164B     		ldr	r3, .L189+24
 3029 0a08 0722     		movs	r2, #7
 3030 0a0a 1A60     		str	r2, [r3]
 3031 0a0c 0CE0     		b	.L109
 3032              	.L108:
1121:main.c        **** 
1122:main.c        ****             }
1123:main.c        ****             else if ((oct4Up) && (octave < 11))
 3033              		.loc 1 1123 0
 3034 0a0e 164B     		ldr	r3, .L189+32
 3035 0a10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3036 0a12 002B     		cmp	r3, #0
 3037 0a14 08D0     		beq	.L109
 3038              		.loc 1 1123 0 is_stmt 0 discriminator 1
 3039 0a16 124B     		ldr	r3, .L189+24
 3040 0a18 1B68     		ldr	r3, [r3]
 3041 0a1a 0A2B     		cmp	r3, #10
 3042 0a1c 04DC     		bgt	.L109
1124:main.c        ****             {
1125:main.c        ****                 octave++;
 3043              		.loc 1 1125 0 is_stmt 1
 3044 0a1e 104B     		ldr	r3, .L189+24
 3045 0a20 1B68     		ldr	r3, [r3]
 3046 0a22 0133     		adds	r3, r3, #1
 3047 0a24 0E4A     		ldr	r2, .L189+24
 3048 0a26 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 75


 3049              	.L109:
1126:main.c        **** 
1127:main.c        ****             }
1128:main.c        ****             LED_amber1_Write(0);
 3050              		.loc 1 1128 0
 3051 0a28 0020     		movs	r0, #0
 3052 0a2a FFF7FEFF 		bl	LED_amber1_Write
1129:main.c        ****             LED_amber2_Write(0);
 3053              		.loc 1 1129 0
 3054 0a2e 0020     		movs	r0, #0
 3055 0a30 FFF7FEFF 		bl	LED_amber2_Write
1130:main.c        ****             LED_amber3_Write(0);
 3056              		.loc 1 1130 0
 3057 0a34 0020     		movs	r0, #0
 3058 0a36 FFF7FEFF 		bl	LED_amber3_Write
1131:main.c        ****             LED_amber4_Write(1);
 3059              		.loc 1 1131 0
 3060 0a3a 0120     		movs	r0, #1
 3061 0a3c FFF7FEFF 		bl	LED_amber4_Write
1132:main.c        ****             oct4Up = 0;
 3062              		.loc 1 1132 0
 3063 0a40 094B     		ldr	r3, .L189+32
 3064 0a42 0022     		movs	r2, #0
 3065 0a44 1A70     		strb	r2, [r3]
 3066 0a46 19E0     		b	.L110
 3067              	.L190:
 3068              		.align	2
 3069              	.L189:
 3070 0a48 00000000 		.word	processed_volumePedal
 3071 0a4c 00000000 		.word	prev_processed_volumePedal
 3072 0a50 00000000 		.word	main_counter
 3073 0a54 00000000 		.word	strings
 3074 0a58 00000000 		.word	prevStrings
 3075 0a5c 00000000 		.word	numStrings
 3076 0a60 00000000 		.word	octave
 3077 0a64 00000000 		.word	oct1Up
 3078 0a68 00000000 		.word	oct4Up
 3079              	.L107:
1133:main.c        ****         }
1134:main.c        ****         
1135:main.c        ****         else if (oct4_Read())
 3080              		.loc 1 1135 0
 3081 0a6c FFF7FEFF 		bl	oct4_Read
 3082 0a70 0346     		mov	r3, r0
 3083 0a72 002B     		cmp	r3, #0
 3084 0a74 02D0     		beq	.L110
1136:main.c        ****         {
1137:main.c        ****             oct4Up = 1;
 3085              		.loc 1 1137 0
 3086 0a76 B54B     		ldr	r3, .L191
 3087 0a78 0122     		movs	r2, #1
 3088 0a7a 1A70     		strb	r2, [r3]
 3089              	.L110:
1138:main.c        ****         }
1139:main.c        ****         
1140:main.c        ****         if (!neck1_button_Read())
 3090              		.loc 1 1140 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 76


 3091 0a7c FFF7FEFF 		bl	neck1_button_Read
 3092 0a80 0346     		mov	r3, r0
 3093 0a82 002B     		cmp	r3, #0
 3094 0a84 32D1     		bne	.L111
1141:main.c        ****         {
1142:main.c        ****             currentNeck = 0;
 3095              		.loc 1 1142 0
 3096 0a86 B24B     		ldr	r3, .L191+4
 3097 0a88 0022     		movs	r2, #0
 3098 0a8a 1A60     		str	r2, [r3]
1143:main.c        ****             currentCopedent = necks[currentNeck];
 3099              		.loc 1 1143 0
 3100 0a8c B04B     		ldr	r3, .L191+4
 3101 0a8e 1B68     		ldr	r3, [r3]
 3102 0a90 B04A     		ldr	r2, .L191+8
 3103 0a92 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3104 0a94 B04B     		ldr	r3, .L191+12
 3105 0a96 1A70     		strb	r2, [r3]
1144:main.c        ****             LED_red1_Write(0);
 3106              		.loc 1 1144 0
 3107 0a98 0020     		movs	r0, #0
 3108 0a9a FFF7FEFF 		bl	LED_red1_Write
1145:main.c        ****             LED_green2_Write(1);
 3109              		.loc 1 1145 0
 3110 0a9e 0120     		movs	r0, #1
 3111 0aa0 FFF7FEFF 		bl	LED_green2_Write
1146:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3112              		.loc 1 1146 0
 3113 0aa4 AC4B     		ldr	r3, .L191+12
 3114 0aa6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3115 0aa8 1846     		mov	r0, r3
 3116 0aaa 0323     		movs	r3, #3
 3117 0aac 0022     		movs	r2, #0
 3118 0aae 0221     		movs	r1, #2
 3119 0ab0 FFF7FEFF 		bl	OLEDwriteInt
1147:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3120              		.loc 1 1147 0
 3121 0ab4 FFF7FEFF 		bl	OLEDgetCursor
 3122 0ab8 0246     		mov	r2, r0
 3123 0aba 0323     		movs	r3, #3
 3124 0abc 0121     		movs	r1, #1
 3125 0abe A748     		ldr	r0, .L191+16
 3126 0ac0 FFF7FEFF 		bl	OLEDwriteString
1148:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 3127              		.loc 1 1148 0
 3128 0ac4 A44B     		ldr	r3, .L191+12
 3129 0ac6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3130 0ac8 1A46     		mov	r2, r3
 3131 0aca 1346     		mov	r3, r2
 3132 0acc DB00     		lsls	r3, r3, #3
 3133 0ace 9B1A     		subs	r3, r3, r2
 3134 0ad0 5B00     		lsls	r3, r3, #1
 3135 0ad2 A34A     		ldr	r2, .L191+20
 3136 0ad4 9C18     		adds	r4, r3, r2
 3137 0ad6 FFF7FEFF 		bl	OLEDgetCursor
 3138 0ada 0246     		mov	r2, r0
 3139 0adc 0323     		movs	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 77


 3140 0ade 0E21     		movs	r1, #14
 3141 0ae0 2046     		mov	r0, r4
 3142 0ae2 FFF7FEFF 		bl	OLEDwriteString
1149:main.c        ****             mainOLEDWaitingToSend = 1;
 3143              		.loc 1 1149 0
 3144 0ae6 9F4B     		ldr	r3, .L191+24
 3145 0ae8 0122     		movs	r2, #1
 3146 0aea 1A60     		str	r2, [r3]
 3147              	.L111:
1150:main.c        ****         }
1151:main.c        ****         if (!neck2_button_Read())
 3148              		.loc 1 1151 0
 3149 0aec FFF7FEFF 		bl	neck2_button_Read
 3150 0af0 0346     		mov	r3, r0
 3151 0af2 002B     		cmp	r3, #0
 3152 0af4 3BD1     		bne	.L112
1152:main.c        ****         {
1153:main.c        ****             currentNeck = 1;
 3153              		.loc 1 1153 0
 3154 0af6 964B     		ldr	r3, .L191+4
 3155 0af8 0122     		movs	r2, #1
 3156 0afa 1A60     		str	r2, [r3]
1154:main.c        ****             currentCopedent = necks[currentNeck];
 3157              		.loc 1 1154 0
 3158 0afc 944B     		ldr	r3, .L191+4
 3159 0afe 1B68     		ldr	r3, [r3]
 3160 0b00 944A     		ldr	r2, .L191+8
 3161 0b02 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3162 0b04 944B     		ldr	r3, .L191+12
 3163 0b06 1A70     		strb	r2, [r3]
1155:main.c        ****             
1156:main.c        ****             LED_red1_Write(1);
 3164              		.loc 1 1156 0
 3165 0b08 0120     		movs	r0, #1
 3166 0b0a FFF7FEFF 		bl	LED_red1_Write
1157:main.c        ****             LED_green2_Write(0);
 3167              		.loc 1 1157 0
 3168 0b0e 0020     		movs	r0, #0
 3169 0b10 FFF7FEFF 		bl	LED_green2_Write
1158:main.c        ****             EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3170              		.loc 1 1158 0
 3171 0b14 904B     		ldr	r3, .L191+12
 3172 0b16 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3173 0b18 8D4B     		ldr	r3, .L191+4
 3174 0b1a 1B68     		ldr	r3, [r3]
 3175 0b1c 9BB2     		uxth	r3, r3
 3176 0b1e 1946     		mov	r1, r3
 3177 0b20 1046     		mov	r0, r2
 3178 0b22 FFF7FEFF 		bl	EEPROM_WriteByte
1159:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3179              		.loc 1 1159 0
 3180 0b26 8C4B     		ldr	r3, .L191+12
 3181 0b28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3182 0b2a 1846     		mov	r0, r3
 3183 0b2c 0323     		movs	r3, #3
 3184 0b2e 0022     		movs	r2, #0
 3185 0b30 0221     		movs	r1, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 78


 3186 0b32 FFF7FEFF 		bl	OLEDwriteInt
1160:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3187              		.loc 1 1160 0
 3188 0b36 FFF7FEFF 		bl	OLEDgetCursor
 3189 0b3a 0246     		mov	r2, r0
 3190 0b3c 0323     		movs	r3, #3
 3191 0b3e 0121     		movs	r1, #1
 3192 0b40 8648     		ldr	r0, .L191+16
 3193 0b42 FFF7FEFF 		bl	OLEDwriteString
1161:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 3194              		.loc 1 1161 0
 3195 0b46 844B     		ldr	r3, .L191+12
 3196 0b48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3197 0b4a 1A46     		mov	r2, r3
 3198 0b4c 1346     		mov	r3, r2
 3199 0b4e DB00     		lsls	r3, r3, #3
 3200 0b50 9B1A     		subs	r3, r3, r2
 3201 0b52 5B00     		lsls	r3, r3, #1
 3202 0b54 824A     		ldr	r2, .L191+20
 3203 0b56 9C18     		adds	r4, r3, r2
 3204 0b58 FFF7FEFF 		bl	OLEDgetCursor
 3205 0b5c 0246     		mov	r2, r0
 3206 0b5e 0323     		movs	r3, #3
 3207 0b60 0E21     		movs	r1, #14
 3208 0b62 2046     		mov	r0, r4
 3209 0b64 FFF7FEFF 		bl	OLEDwriteString
1162:main.c        ****             mainOLEDWaitingToSend = 1;
 3210              		.loc 1 1162 0
 3211 0b68 7E4B     		ldr	r3, .L191+24
 3212 0b6a 0122     		movs	r2, #1
 3213 0b6c 1A60     		str	r2, [r3]
 3214              	.L112:
1163:main.c        ****         }
1164:main.c        ****         
1165:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 3215              		.loc 1 1165 0
 3216 0b6e FFF7FEFF 		bl	enter_button_Read
 3217 0b72 0346     		mov	r3, r0
 3218 0b74 002B     		cmp	r3, #0
 3219 0b76 16D1     		bne	.L113
 3220              		.loc 1 1165 0 is_stmt 0 discriminator 1
 3221 0b78 7B4B     		ldr	r3, .L191+28
 3222 0b7a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3223 0b7c 002B     		cmp	r3, #0
 3224 0b7e 12D0     		beq	.L113
1166:main.c        ****         {
1167:main.c        ****             dualSlider = !dualSlider;
 3225              		.loc 1 1167 0 is_stmt 1
 3226 0b80 7A4B     		ldr	r3, .L191+32
 3227 0b82 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3228 0b84 002B     		cmp	r3, #0
 3229 0b86 0CBF     		ite	eq
 3230 0b88 0123     		moveq	r3, #1
 3231 0b8a 0023     		movne	r3, #0
 3232 0b8c DBB2     		uxtb	r3, r3
 3233 0b8e 1A46     		mov	r2, r3
 3234 0b90 764B     		ldr	r3, .L191+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 79


 3235 0b92 1A70     		strb	r2, [r3]
1168:main.c        ****             LED_green1_Write(dualSlider);
 3236              		.loc 1 1168 0
 3237 0b94 754B     		ldr	r3, .L191+32
 3238 0b96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3239 0b98 1846     		mov	r0, r3
 3240 0b9a FFF7FEFF 		bl	LED_green1_Write
1169:main.c        ****             enterUp = 0;
 3241              		.loc 1 1169 0
 3242 0b9e 724B     		ldr	r3, .L191+28
 3243 0ba0 0022     		movs	r2, #0
 3244 0ba2 1A70     		strb	r2, [r3]
 3245 0ba4 07E0     		b	.L114
 3246              	.L113:
1170:main.c        ****         }
1171:main.c        ****         else if (enter_button_Read())
 3247              		.loc 1 1171 0
 3248 0ba6 FFF7FEFF 		bl	enter_button_Read
 3249 0baa 0346     		mov	r3, r0
 3250 0bac 002B     		cmp	r3, #0
 3251 0bae 02D0     		beq	.L114
1172:main.c        ****         {
1173:main.c        ****             enterUp = 1;
 3252              		.loc 1 1173 0
 3253 0bb0 6D4B     		ldr	r3, .L191+28
 3254 0bb2 0122     		movs	r2, #1
 3255 0bb4 1A70     		strb	r2, [r3]
 3256              	.L114:
1174:main.c        ****         }
1175:main.c        ****         
1176:main.c        ****         
1177:main.c        ****         if (!editMode)
 3257              		.loc 1 1177 0
 3258 0bb6 6E4B     		ldr	r3, .L191+36
 3259 0bb8 1B68     		ldr	r3, [r3]
 3260 0bba 002B     		cmp	r3, #0
 3261 0bbc 40F01081 		bne	.L115
1178:main.c        ****         {
1179:main.c        ****         
1180:main.c        ****             if ((!button1_Read()) && (button1Up))
 3262              		.loc 1 1180 0
 3263 0bc0 FFF7FEFF 		bl	button1_Read
 3264 0bc4 0346     		mov	r3, r0
 3265 0bc6 002B     		cmp	r3, #0
 3266 0bc8 47D1     		bne	.L116
 3267              		.loc 1 1180 0 is_stmt 0 discriminator 1
 3268 0bca 6A4B     		ldr	r3, .L191+40
 3269 0bcc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3270 0bce 002B     		cmp	r3, #0
 3271 0bd0 43D0     		beq	.L116
1181:main.c        ****             {
1182:main.c        ****                 currentCopedent -= 1;
 3272              		.loc 1 1182 0 is_stmt 1
 3273 0bd2 614B     		ldr	r3, .L191+12
 3274 0bd4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3275 0bd6 013B     		subs	r3, r3, #1
 3276 0bd8 DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 80


 3277 0bda 5F4B     		ldr	r3, .L191+12
 3278 0bdc 1A70     		strb	r2, [r3]
1183:main.c        ****                 currentCopedent &= 31;
 3279              		.loc 1 1183 0
 3280 0bde 5E4B     		ldr	r3, .L191+12
 3281 0be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3282 0be2 03F01F03 		and	r3, r3, #31
 3283 0be6 DAB2     		uxtb	r2, r3
 3284 0be8 5B4B     		ldr	r3, .L191+12
 3285 0bea 1A70     		strb	r2, [r3]
1184:main.c        ****                 necks[currentNeck] = currentCopedent;
 3286              		.loc 1 1184 0
 3287 0bec 584B     		ldr	r3, .L191+4
 3288 0bee 1B68     		ldr	r3, [r3]
 3289 0bf0 594A     		ldr	r2, .L191+12
 3290 0bf2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3291 0bf4 574A     		ldr	r2, .L191+8
 3292 0bf6 D154     		strb	r1, [r2, r3]
1185:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3293              		.loc 1 1185 0
 3294 0bf8 574B     		ldr	r3, .L191+12
 3295 0bfa 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3296 0bfc 544B     		ldr	r3, .L191+4
 3297 0bfe 1B68     		ldr	r3, [r3]
 3298 0c00 9BB2     		uxth	r3, r3
 3299 0c02 1946     		mov	r1, r3
 3300 0c04 1046     		mov	r0, r2
 3301 0c06 FFF7FEFF 		bl	EEPROM_WriteByte
1186:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3302              		.loc 1 1186 0
 3303 0c0a 534B     		ldr	r3, .L191+12
 3304 0c0c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3305 0c0e 1846     		mov	r0, r3
 3306 0c10 0323     		movs	r3, #3
 3307 0c12 0022     		movs	r2, #0
 3308 0c14 0221     		movs	r1, #2
 3309 0c16 FFF7FEFF 		bl	OLEDwriteInt
1187:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3310              		.loc 1 1187 0
 3311 0c1a FFF7FEFF 		bl	OLEDgetCursor
 3312 0c1e 0246     		mov	r2, r0
 3313 0c20 0323     		movs	r3, #3
 3314 0c22 0121     		movs	r1, #1
 3315 0c24 4D48     		ldr	r0, .L191+16
 3316 0c26 FFF7FEFF 		bl	OLEDwriteString
1188:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3317              		.loc 1 1188 0
 3318 0c2a 4B4B     		ldr	r3, .L191+12
 3319 0c2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3320 0c2e 1A46     		mov	r2, r3
 3321 0c30 1346     		mov	r3, r2
 3322 0c32 DB00     		lsls	r3, r3, #3
 3323 0c34 9B1A     		subs	r3, r3, r2
 3324 0c36 5B00     		lsls	r3, r3, #1
 3325 0c38 494A     		ldr	r2, .L191+20
 3326 0c3a 9C18     		adds	r4, r3, r2
 3327 0c3c FFF7FEFF 		bl	OLEDgetCursor
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 81


 3328 0c40 0246     		mov	r2, r0
 3329 0c42 0323     		movs	r3, #3
 3330 0c44 0E21     		movs	r1, #14
 3331 0c46 2046     		mov	r0, r4
 3332 0c48 FFF7FEFF 		bl	OLEDwriteString
1189:main.c        ****                 mainOLEDWaitingToSend = 1;
 3333              		.loc 1 1189 0
 3334 0c4c 454B     		ldr	r3, .L191+24
 3335 0c4e 0122     		movs	r2, #1
 3336 0c50 1A60     		str	r2, [r3]
1190:main.c        ****                 button1Up = 0;
 3337              		.loc 1 1190 0
 3338 0c52 484B     		ldr	r3, .L191+40
 3339 0c54 0022     		movs	r2, #0
 3340 0c56 1A70     		strb	r2, [r3]
 3341 0c58 07E0     		b	.L117
 3342              	.L116:
1191:main.c        ****             }
1192:main.c        ****             else if (button1_Read())
 3343              		.loc 1 1192 0
 3344 0c5a FFF7FEFF 		bl	button1_Read
 3345 0c5e 0346     		mov	r3, r0
 3346 0c60 002B     		cmp	r3, #0
 3347 0c62 02D0     		beq	.L117
1193:main.c        ****             {
1194:main.c        ****                 button1Up = 1;
 3348              		.loc 1 1194 0
 3349 0c64 434B     		ldr	r3, .L191+40
 3350 0c66 0122     		movs	r2, #1
 3351 0c68 1A70     		strb	r2, [r3]
 3352              	.L117:
1195:main.c        ****             }
1196:main.c        ****             
1197:main.c        ****             if ((!button2_Read()) && (button2Up))
 3353              		.loc 1 1197 0
 3354 0c6a FFF7FEFF 		bl	button2_Read
 3355 0c6e 0346     		mov	r3, r0
 3356 0c70 002B     		cmp	r3, #0
 3357 0c72 47D1     		bne	.L118
 3358              		.loc 1 1197 0 is_stmt 0 discriminator 1
 3359 0c74 404B     		ldr	r3, .L191+44
 3360 0c76 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3361 0c78 002B     		cmp	r3, #0
 3362 0c7a 43D0     		beq	.L118
1198:main.c        ****             {
1199:main.c        ****                 currentCopedent += 1;
 3363              		.loc 1 1199 0 is_stmt 1
 3364 0c7c 364B     		ldr	r3, .L191+12
 3365 0c7e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3366 0c80 0133     		adds	r3, r3, #1
 3367 0c82 DAB2     		uxtb	r2, r3
 3368 0c84 344B     		ldr	r3, .L191+12
 3369 0c86 1A70     		strb	r2, [r3]
1200:main.c        ****                 currentCopedent &= 31;
 3370              		.loc 1 1200 0
 3371 0c88 334B     		ldr	r3, .L191+12
 3372 0c8a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 82


 3373 0c8c 03F01F03 		and	r3, r3, #31
 3374 0c90 DAB2     		uxtb	r2, r3
 3375 0c92 314B     		ldr	r3, .L191+12
 3376 0c94 1A70     		strb	r2, [r3]
1201:main.c        ****                 necks[currentNeck] = currentCopedent;
 3377              		.loc 1 1201 0
 3378 0c96 2E4B     		ldr	r3, .L191+4
 3379 0c98 1B68     		ldr	r3, [r3]
 3380 0c9a 2F4A     		ldr	r2, .L191+12
 3381 0c9c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3382 0c9e 2D4A     		ldr	r2, .L191+8
 3383 0ca0 D154     		strb	r1, [r2, r3]
1202:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3384              		.loc 1 1202 0
 3385 0ca2 2D4B     		ldr	r3, .L191+12
 3386 0ca4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3387 0ca6 2A4B     		ldr	r3, .L191+4
 3388 0ca8 1B68     		ldr	r3, [r3]
 3389 0caa 9BB2     		uxth	r3, r3
 3390 0cac 1946     		mov	r1, r3
 3391 0cae 1046     		mov	r0, r2
 3392 0cb0 FFF7FEFF 		bl	EEPROM_WriteByte
1203:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3393              		.loc 1 1203 0
 3394 0cb4 284B     		ldr	r3, .L191+12
 3395 0cb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3396 0cb8 1846     		mov	r0, r3
 3397 0cba 0323     		movs	r3, #3
 3398 0cbc 0022     		movs	r2, #0
 3399 0cbe 0221     		movs	r1, #2
 3400 0cc0 FFF7FEFF 		bl	OLEDwriteInt
1204:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3401              		.loc 1 1204 0
 3402 0cc4 FFF7FEFF 		bl	OLEDgetCursor
 3403 0cc8 0246     		mov	r2, r0
 3404 0cca 0323     		movs	r3, #3
 3405 0ccc 0121     		movs	r1, #1
 3406 0cce 2348     		ldr	r0, .L191+16
 3407 0cd0 FFF7FEFF 		bl	OLEDwriteString
1205:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3408              		.loc 1 1205 0
 3409 0cd4 204B     		ldr	r3, .L191+12
 3410 0cd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3411 0cd8 1A46     		mov	r2, r3
 3412 0cda 1346     		mov	r3, r2
 3413 0cdc DB00     		lsls	r3, r3, #3
 3414 0cde 9B1A     		subs	r3, r3, r2
 3415 0ce0 5B00     		lsls	r3, r3, #1
 3416 0ce2 1F4A     		ldr	r2, .L191+20
 3417 0ce4 9C18     		adds	r4, r3, r2
 3418 0ce6 FFF7FEFF 		bl	OLEDgetCursor
 3419 0cea 0246     		mov	r2, r0
 3420 0cec 0323     		movs	r3, #3
 3421 0cee 0E21     		movs	r1, #14
 3422 0cf0 2046     		mov	r0, r4
 3423 0cf2 FFF7FEFF 		bl	OLEDwriteString
1206:main.c        ****                 mainOLEDWaitingToSend = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 83


 3424              		.loc 1 1206 0
 3425 0cf6 1B4B     		ldr	r3, .L191+24
 3426 0cf8 0122     		movs	r2, #1
 3427 0cfa 1A60     		str	r2, [r3]
1207:main.c        ****                 button2Up = 0;
 3428              		.loc 1 1207 0
 3429 0cfc 1E4B     		ldr	r3, .L191+44
 3430 0cfe 0022     		movs	r2, #0
 3431 0d00 1A70     		strb	r2, [r3]
 3432 0d02 07E0     		b	.L119
 3433              	.L118:
1208:main.c        ****             }
1209:main.c        ****             else if (button2_Read())
 3434              		.loc 1 1209 0
 3435 0d04 FFF7FEFF 		bl	button2_Read
 3436 0d08 0346     		mov	r3, r0
 3437 0d0a 002B     		cmp	r3, #0
 3438 0d0c 02D0     		beq	.L119
1210:main.c        ****             {
1211:main.c        ****                 button2Up = 1;
 3439              		.loc 1 1211 0
 3440 0d0e 1A4B     		ldr	r3, .L191+44
 3441 0d10 0122     		movs	r2, #1
 3442 0d12 1A70     		strb	r2, [r3]
 3443              	.L119:
1212:main.c        ****             }
1213:main.c        ****             
1214:main.c        ****             if ((!button3_Read()) && (button3Up))
 3444              		.loc 1 1214 0
 3445 0d14 FFF7FEFF 		bl	button3_Read
 3446 0d18 0346     		mov	r3, r0
 3447 0d1a 002B     		cmp	r3, #0
 3448 0d1c 32D1     		bne	.L120
 3449              		.loc 1 1214 0 is_stmt 0 discriminator 1
 3450 0d1e 174B     		ldr	r3, .L191+48
 3451 0d20 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3452 0d22 002B     		cmp	r3, #0
 3453 0d24 2ED0     		beq	.L120
1215:main.c        ****             {
1216:main.c        ****                 patchNum -= 1;
 3454              		.loc 1 1216 0 is_stmt 1
 3455 0d26 164B     		ldr	r3, .L191+52
 3456 0d28 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3457 0d2a 013B     		subs	r3, r3, #1
 3458 0d2c DAB2     		uxtb	r2, r3
 3459 0d2e 144B     		ldr	r3, .L191+52
 3460 0d30 1A70     		strb	r2, [r3]
1217:main.c        ****                 patchNum &= 63;
 3461              		.loc 1 1217 0
 3462 0d32 134B     		ldr	r3, .L191+52
 3463 0d34 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3464 0d36 03F03F03 		and	r3, r3, #63
 3465 0d3a DAB2     		uxtb	r2, r3
 3466 0d3c 104B     		ldr	r3, .L191+52
 3467 0d3e 1A70     		strb	r2, [r3]
1218:main.c        ****                         displayCurrentPresetName();
 3468              		.loc 1 1218 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 84


 3469 0d40 FFF7FEFF 		bl	displayCurrentPresetName
1219:main.c        ****                 button3Up = 0;
 3470              		.loc 1 1219 0
 3471 0d44 0D4B     		ldr	r3, .L191+48
 3472 0d46 0022     		movs	r2, #0
 3473 0d48 1A70     		strb	r2, [r3]
 3474 0d4a 23E0     		b	.L121
 3475              	.L192:
 3476              		.align	2
 3477              	.L191:
 3478 0d4c 00000000 		.word	oct4Up
 3479 0d50 00000000 		.word	currentNeck
 3480 0d54 00000000 		.word	necks
 3481 0d58 00000000 		.word	currentCopedent
 3482 0d5c 00040000 		.word	.LC0
 3483 0d60 00000000 		.word	copedentNamesArray
 3484 0d64 00000000 		.word	mainOLEDWaitingToSend
 3485 0d68 00000000 		.word	enterUp
 3486 0d6c 00000000 		.word	dualSlider
 3487 0d70 00000000 		.word	editMode
 3488 0d74 00000000 		.word	button1Up
 3489 0d78 00000000 		.word	button2Up
 3490 0d7c 00000000 		.word	button3Up
 3491 0d80 00000000 		.word	patchNum
 3492              	.L120:
1220:main.c        ****             }
1221:main.c        ****             else if (button3_Read())
 3493              		.loc 1 1221 0
 3494 0d84 FFF7FEFF 		bl	button3_Read
 3495 0d88 0346     		mov	r3, r0
 3496 0d8a 002B     		cmp	r3, #0
 3497 0d8c 02D0     		beq	.L121
1222:main.c        ****             {
1223:main.c        ****                 button3Up = 1;
 3498              		.loc 1 1223 0
 3499 0d8e 894B     		ldr	r3, .L193
 3500 0d90 0122     		movs	r2, #1
 3501 0d92 1A70     		strb	r2, [r3]
 3502              	.L121:
1224:main.c        ****             }
1225:main.c        ****             
1226:main.c        ****             if ((!button4_Read()) && (button4Up))
 3503              		.loc 1 1226 0
 3504 0d94 FFF7FEFF 		bl	button4_Read
 3505 0d98 0346     		mov	r3, r0
 3506 0d9a 002B     		cmp	r3, #0
 3507 0d9c 16D1     		bne	.L122
 3508              		.loc 1 1226 0 is_stmt 0 discriminator 1
 3509 0d9e 864B     		ldr	r3, .L193+4
 3510 0da0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3511 0da2 002B     		cmp	r3, #0
 3512 0da4 12D0     		beq	.L122
1227:main.c        ****             {
1228:main.c        ****                 patchNum += 1;
 3513              		.loc 1 1228 0 is_stmt 1
 3514 0da6 854B     		ldr	r3, .L193+8
 3515 0da8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 85


 3516 0daa 0133     		adds	r3, r3, #1
 3517 0dac DAB2     		uxtb	r2, r3
 3518 0dae 834B     		ldr	r3, .L193+8
 3519 0db0 1A70     		strb	r2, [r3]
1229:main.c        ****                 patchNum &= 63;
 3520              		.loc 1 1229 0
 3521 0db2 824B     		ldr	r3, .L193+8
 3522 0db4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3523 0db6 03F03F03 		and	r3, r3, #63
 3524 0dba DAB2     		uxtb	r2, r3
 3525 0dbc 7F4B     		ldr	r3, .L193+8
 3526 0dbe 1A70     		strb	r2, [r3]
1230:main.c        ****                 displayCurrentPresetName();
 3527              		.loc 1 1230 0
 3528 0dc0 FFF7FEFF 		bl	displayCurrentPresetName
1231:main.c        ****                 button4Up = 0;
 3529              		.loc 1 1231 0
 3530 0dc4 7C4B     		ldr	r3, .L193+4
 3531 0dc6 0022     		movs	r2, #0
 3532 0dc8 1A70     		strb	r2, [r3]
 3533 0dca 11E1     		b	.L124
 3534              	.L122:
1232:main.c        ****             }
1233:main.c        ****             else if (button4_Read())
 3535              		.loc 1 1233 0
 3536 0dcc FFF7FEFF 		bl	button4_Read
 3537 0dd0 0346     		mov	r3, r0
 3538 0dd2 002B     		cmp	r3, #0
 3539 0dd4 00F00C81 		beq	.L124
1234:main.c        ****             {
1235:main.c        ****                 button4Up = 1;
 3540              		.loc 1 1235 0
 3541 0dd8 774B     		ldr	r3, .L193+4
 3542 0dda 0122     		movs	r2, #1
 3543 0ddc 1A70     		strb	r2, [r3]
 3544 0dde 07E1     		b	.L124
 3545              	.L115:
1236:main.c        ****             }
1237:main.c        ****         }
1238:main.c        ****         //if in edit mode, then /left right up down work differently
1239:main.c        ****         else
1240:main.c        ****         {
1241:main.c        ****         
1242:main.c        ****             if ((!button1_Read()) && (button1Up))
 3546              		.loc 1 1242 0
 3547 0de0 FFF7FEFF 		bl	button1_Read
 3548 0de4 0346     		mov	r3, r0
 3549 0de6 002B     		cmp	r3, #0
 3550 0de8 47D1     		bne	.L125
 3551              		.loc 1 1242 0 is_stmt 0 discriminator 1
 3552 0dea 754B     		ldr	r3, .L193+12
 3553 0dec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3554 0dee 002B     		cmp	r3, #0
 3555 0df0 43D0     		beq	.L125
1243:main.c        ****             {
1244:main.c        ****                 currentCopedent -= 1;
 3556              		.loc 1 1244 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 86


 3557 0df2 744B     		ldr	r3, .L193+16
 3558 0df4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3559 0df6 013B     		subs	r3, r3, #1
 3560 0df8 DAB2     		uxtb	r2, r3
 3561 0dfa 724B     		ldr	r3, .L193+16
 3562 0dfc 1A70     		strb	r2, [r3]
1245:main.c        ****                 currentCopedent &= 31;
 3563              		.loc 1 1245 0
 3564 0dfe 714B     		ldr	r3, .L193+16
 3565 0e00 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3566 0e02 03F01F03 		and	r3, r3, #31
 3567 0e06 DAB2     		uxtb	r2, r3
 3568 0e08 6E4B     		ldr	r3, .L193+16
 3569 0e0a 1A70     		strb	r2, [r3]
1246:main.c        ****                 necks[currentNeck] = currentCopedent;
 3570              		.loc 1 1246 0
 3571 0e0c 6E4B     		ldr	r3, .L193+20
 3572 0e0e 1B68     		ldr	r3, [r3]
 3573 0e10 6C4A     		ldr	r2, .L193+16
 3574 0e12 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3575 0e14 6D4A     		ldr	r2, .L193+24
 3576 0e16 D154     		strb	r1, [r2, r3]
1247:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3577              		.loc 1 1247 0
 3578 0e18 6A4B     		ldr	r3, .L193+16
 3579 0e1a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3580 0e1c 6A4B     		ldr	r3, .L193+20
 3581 0e1e 1B68     		ldr	r3, [r3]
 3582 0e20 9BB2     		uxth	r3, r3
 3583 0e22 1946     		mov	r1, r3
 3584 0e24 1046     		mov	r0, r2
 3585 0e26 FFF7FEFF 		bl	EEPROM_WriteByte
1248:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3586              		.loc 1 1248 0
 3587 0e2a 664B     		ldr	r3, .L193+16
 3588 0e2c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3589 0e2e 1846     		mov	r0, r3
 3590 0e30 0323     		movs	r3, #3
 3591 0e32 0022     		movs	r2, #0
 3592 0e34 0221     		movs	r1, #2
 3593 0e36 FFF7FEFF 		bl	OLEDwriteInt
1249:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3594              		.loc 1 1249 0
 3595 0e3a FFF7FEFF 		bl	OLEDgetCursor
 3596 0e3e 0246     		mov	r2, r0
 3597 0e40 0323     		movs	r3, #3
 3598 0e42 0121     		movs	r1, #1
 3599 0e44 6248     		ldr	r0, .L193+28
 3600 0e46 FFF7FEFF 		bl	OLEDwriteString
1250:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3601              		.loc 1 1250 0
 3602 0e4a 5E4B     		ldr	r3, .L193+16
 3603 0e4c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3604 0e4e 1A46     		mov	r2, r3
 3605 0e50 1346     		mov	r3, r2
 3606 0e52 DB00     		lsls	r3, r3, #3
 3607 0e54 9B1A     		subs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 87


 3608 0e56 5B00     		lsls	r3, r3, #1
 3609 0e58 5E4A     		ldr	r2, .L193+32
 3610 0e5a 9C18     		adds	r4, r3, r2
 3611 0e5c FFF7FEFF 		bl	OLEDgetCursor
 3612 0e60 0246     		mov	r2, r0
 3613 0e62 0323     		movs	r3, #3
 3614 0e64 0E21     		movs	r1, #14
 3615 0e66 2046     		mov	r0, r4
 3616 0e68 FFF7FEFF 		bl	OLEDwriteString
1251:main.c        ****                 mainOLEDWaitingToSend = 1;
 3617              		.loc 1 1251 0
 3618 0e6c 5A4B     		ldr	r3, .L193+36
 3619 0e6e 0122     		movs	r2, #1
 3620 0e70 1A60     		str	r2, [r3]
1252:main.c        ****                 button1Up = 0;
 3621              		.loc 1 1252 0
 3622 0e72 534B     		ldr	r3, .L193+12
 3623 0e74 0022     		movs	r2, #0
 3624 0e76 1A70     		strb	r2, [r3]
 3625 0e78 07E0     		b	.L126
 3626              	.L125:
1253:main.c        ****             }
1254:main.c        ****             else if (button1_Read())
 3627              		.loc 1 1254 0
 3628 0e7a FFF7FEFF 		bl	button1_Read
 3629 0e7e 0346     		mov	r3, r0
 3630 0e80 002B     		cmp	r3, #0
 3631 0e82 02D0     		beq	.L126
1255:main.c        ****             {
1256:main.c        ****                 button1Up = 1;
 3632              		.loc 1 1256 0
 3633 0e84 4E4B     		ldr	r3, .L193+12
 3634 0e86 0122     		movs	r2, #1
 3635 0e88 1A70     		strb	r2, [r3]
 3636              	.L126:
1257:main.c        ****             }
1258:main.c        ****             
1259:main.c        ****             if ((!button2_Read()) && (button2Up))
 3637              		.loc 1 1259 0
 3638 0e8a FFF7FEFF 		bl	button2_Read
 3639 0e8e 0346     		mov	r3, r0
 3640 0e90 002B     		cmp	r3, #0
 3641 0e92 47D1     		bne	.L127
 3642              		.loc 1 1259 0 is_stmt 0 discriminator 1
 3643 0e94 514B     		ldr	r3, .L193+40
 3644 0e96 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3645 0e98 002B     		cmp	r3, #0
 3646 0e9a 43D0     		beq	.L127
1260:main.c        ****             {
1261:main.c        ****                 currentCopedent += 1;
 3647              		.loc 1 1261 0 is_stmt 1
 3648 0e9c 494B     		ldr	r3, .L193+16
 3649 0e9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3650 0ea0 0133     		adds	r3, r3, #1
 3651 0ea2 DAB2     		uxtb	r2, r3
 3652 0ea4 474B     		ldr	r3, .L193+16
 3653 0ea6 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 88


1262:main.c        ****                 currentCopedent &= 31;
 3654              		.loc 1 1262 0
 3655 0ea8 464B     		ldr	r3, .L193+16
 3656 0eaa 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3657 0eac 03F01F03 		and	r3, r3, #31
 3658 0eb0 DAB2     		uxtb	r2, r3
 3659 0eb2 444B     		ldr	r3, .L193+16
 3660 0eb4 1A70     		strb	r2, [r3]
1263:main.c        ****                 necks[currentNeck] = currentCopedent;
 3661              		.loc 1 1263 0
 3662 0eb6 444B     		ldr	r3, .L193+20
 3663 0eb8 1B68     		ldr	r3, [r3]
 3664 0eba 424A     		ldr	r2, .L193+16
 3665 0ebc 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3666 0ebe 434A     		ldr	r2, .L193+24
 3667 0ec0 D154     		strb	r1, [r2, r3]
1264:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3668              		.loc 1 1264 0
 3669 0ec2 404B     		ldr	r3, .L193+16
 3670 0ec4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3671 0ec6 404B     		ldr	r3, .L193+20
 3672 0ec8 1B68     		ldr	r3, [r3]
 3673 0eca 9BB2     		uxth	r3, r3
 3674 0ecc 1946     		mov	r1, r3
 3675 0ece 1046     		mov	r0, r2
 3676 0ed0 FFF7FEFF 		bl	EEPROM_WriteByte
1265:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3677              		.loc 1 1265 0
 3678 0ed4 3B4B     		ldr	r3, .L193+16
 3679 0ed6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3680 0ed8 1846     		mov	r0, r3
 3681 0eda 0323     		movs	r3, #3
 3682 0edc 0022     		movs	r2, #0
 3683 0ede 0221     		movs	r1, #2
 3684 0ee0 FFF7FEFF 		bl	OLEDwriteInt
1266:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3685              		.loc 1 1266 0
 3686 0ee4 FFF7FEFF 		bl	OLEDgetCursor
 3687 0ee8 0246     		mov	r2, r0
 3688 0eea 0323     		movs	r3, #3
 3689 0eec 0121     		movs	r1, #1
 3690 0eee 3848     		ldr	r0, .L193+28
 3691 0ef0 FFF7FEFF 		bl	OLEDwriteString
1267:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3692              		.loc 1 1267 0
 3693 0ef4 334B     		ldr	r3, .L193+16
 3694 0ef6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3695 0ef8 1A46     		mov	r2, r3
 3696 0efa 1346     		mov	r3, r2
 3697 0efc DB00     		lsls	r3, r3, #3
 3698 0efe 9B1A     		subs	r3, r3, r2
 3699 0f00 5B00     		lsls	r3, r3, #1
 3700 0f02 344A     		ldr	r2, .L193+32
 3701 0f04 9C18     		adds	r4, r3, r2
 3702 0f06 FFF7FEFF 		bl	OLEDgetCursor
 3703 0f0a 0246     		mov	r2, r0
 3704 0f0c 0323     		movs	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 89


 3705 0f0e 0E21     		movs	r1, #14
 3706 0f10 2046     		mov	r0, r4
 3707 0f12 FFF7FEFF 		bl	OLEDwriteString
1268:main.c        ****                 mainOLEDWaitingToSend = 1;
 3708              		.loc 1 1268 0
 3709 0f16 304B     		ldr	r3, .L193+36
 3710 0f18 0122     		movs	r2, #1
 3711 0f1a 1A60     		str	r2, [r3]
1269:main.c        ****                 button2Up = 0;
 3712              		.loc 1 1269 0
 3713 0f1c 2F4B     		ldr	r3, .L193+40
 3714 0f1e 0022     		movs	r2, #0
 3715 0f20 1A70     		strb	r2, [r3]
 3716 0f22 07E0     		b	.L128
 3717              	.L127:
1270:main.c        ****             }
1271:main.c        ****             else if (button2_Read())
 3718              		.loc 1 1271 0
 3719 0f24 FFF7FEFF 		bl	button2_Read
 3720 0f28 0346     		mov	r3, r0
 3721 0f2a 002B     		cmp	r3, #0
 3722 0f2c 02D0     		beq	.L128
1272:main.c        ****             {
1273:main.c        ****                 button2Up = 1;
 3723              		.loc 1 1273 0
 3724 0f2e 2B4B     		ldr	r3, .L193+40
 3725 0f30 0122     		movs	r2, #1
 3726 0f32 1A70     		strb	r2, [r3]
 3727              	.L128:
1274:main.c        ****             }
1275:main.c        ****             
1276:main.c        ****             if ((!button3_Read()) && (button3Up))
 3728              		.loc 1 1276 0
 3729 0f34 FFF7FEFF 		bl	button3_Read
 3730 0f38 0346     		mov	r3, r0
 3731 0f3a 002B     		cmp	r3, #0
 3732 0f3c 16D1     		bne	.L129
 3733              		.loc 1 1276 0 is_stmt 0 discriminator 1
 3734 0f3e 1D4B     		ldr	r3, .L193
 3735 0f40 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3736 0f42 002B     		cmp	r3, #0
 3737 0f44 12D0     		beq	.L129
1277:main.c        ****             {
1278:main.c        ****                 patchNum -= 1;
 3738              		.loc 1 1278 0 is_stmt 1
 3739 0f46 1D4B     		ldr	r3, .L193+8
 3740 0f48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3741 0f4a 013B     		subs	r3, r3, #1
 3742 0f4c DAB2     		uxtb	r2, r3
 3743 0f4e 1B4B     		ldr	r3, .L193+8
 3744 0f50 1A70     		strb	r2, [r3]
1279:main.c        ****                 patchNum &= 63;
 3745              		.loc 1 1279 0
 3746 0f52 1A4B     		ldr	r3, .L193+8
 3747 0f54 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3748 0f56 03F03F03 		and	r3, r3, #63
 3749 0f5a DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 90


 3750 0f5c 174B     		ldr	r3, .L193+8
 3751 0f5e 1A70     		strb	r2, [r3]
1280:main.c        ****                         displayCurrentPresetName();
 3752              		.loc 1 1280 0
 3753 0f60 FFF7FEFF 		bl	displayCurrentPresetName
1281:main.c        ****                 button3Up = 0;
 3754              		.loc 1 1281 0
 3755 0f64 134B     		ldr	r3, .L193
 3756 0f66 0022     		movs	r2, #0
 3757 0f68 1A70     		strb	r2, [r3]
 3758 0f6a 07E0     		b	.L130
 3759              	.L129:
1282:main.c        ****             }
1283:main.c        ****             else if (button3_Read())
 3760              		.loc 1 1283 0
 3761 0f6c FFF7FEFF 		bl	button3_Read
 3762 0f70 0346     		mov	r3, r0
 3763 0f72 002B     		cmp	r3, #0
 3764 0f74 02D0     		beq	.L130
1284:main.c        ****             {
1285:main.c        ****                 button3Up = 1;
 3765              		.loc 1 1285 0
 3766 0f76 0F4B     		ldr	r3, .L193
 3767 0f78 0122     		movs	r2, #1
 3768 0f7a 1A70     		strb	r2, [r3]
 3769              	.L130:
1286:main.c        ****             }
1287:main.c        ****             
1288:main.c        ****             if ((!button4_Read()) && (button4Up))
 3770              		.loc 1 1288 0
 3771 0f7c FFF7FEFF 		bl	button4_Read
 3772 0f80 0346     		mov	r3, r0
 3773 0f82 002B     		cmp	r3, #0
 3774 0f84 2CD1     		bne	.L131
 3775              		.loc 1 1288 0 is_stmt 0 discriminator 1
 3776 0f86 0C4B     		ldr	r3, .L193+4
 3777 0f88 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3778 0f8a 002B     		cmp	r3, #0
 3779 0f8c 28D0     		beq	.L131
1289:main.c        ****             {
1290:main.c        ****                 patchNum += 1;
 3780              		.loc 1 1290 0 is_stmt 1
 3781 0f8e 0B4B     		ldr	r3, .L193+8
 3782 0f90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3783 0f92 0133     		adds	r3, r3, #1
 3784 0f94 DAB2     		uxtb	r2, r3
 3785 0f96 094B     		ldr	r3, .L193+8
 3786 0f98 1A70     		strb	r2, [r3]
1291:main.c        ****                 patchNum &= 63;
 3787              		.loc 1 1291 0
 3788 0f9a 084B     		ldr	r3, .L193+8
 3789 0f9c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3790 0f9e 03F03F03 		and	r3, r3, #63
 3791 0fa2 DAB2     		uxtb	r2, r3
 3792 0fa4 054B     		ldr	r3, .L193+8
 3793 0fa6 1A70     		strb	r2, [r3]
1292:main.c        ****                 displayCurrentPresetName();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 91


 3794              		.loc 1 1292 0
 3795 0fa8 FFF7FEFF 		bl	displayCurrentPresetName
1293:main.c        ****                 button4Up = 0;
 3796              		.loc 1 1293 0
 3797 0fac 024B     		ldr	r3, .L193+4
 3798 0fae 0022     		movs	r2, #0
 3799 0fb0 1A70     		strb	r2, [r3]
 3800 0fb2 1DE0     		b	.L124
 3801              	.L194:
 3802              		.align	2
 3803              	.L193:
 3804 0fb4 00000000 		.word	button3Up
 3805 0fb8 00000000 		.word	button4Up
 3806 0fbc 00000000 		.word	patchNum
 3807 0fc0 00000000 		.word	button1Up
 3808 0fc4 00000000 		.word	currentCopedent
 3809 0fc8 00000000 		.word	currentNeck
 3810 0fcc 00000000 		.word	necks
 3811 0fd0 00040000 		.word	.LC0
 3812 0fd4 00000000 		.word	copedentNamesArray
 3813 0fd8 00000000 		.word	mainOLEDWaitingToSend
 3814 0fdc 00000000 		.word	button2Up
 3815              	.L131:
1294:main.c        ****             }
1295:main.c        ****             else if (button4_Read())
 3816              		.loc 1 1295 0
 3817 0fe0 FFF7FEFF 		bl	button4_Read
 3818 0fe4 0346     		mov	r3, r0
 3819 0fe6 002B     		cmp	r3, #0
 3820 0fe8 02D0     		beq	.L124
1296:main.c        ****             {
1297:main.c        ****                 button4Up = 1;
 3821              		.loc 1 1297 0
 3822 0fea 9A4B     		ldr	r3, .L195
 3823 0fec 0122     		movs	r2, #1
 3824 0fee 1A70     		strb	r2, [r3]
 3825              	.L124:
1298:main.c        ****             }
1299:main.c        ****         }
1300:main.c        ****         if ((!edit_button_Read()) && (editUp))
 3826              		.loc 1 1300 0
 3827 0ff0 FFF7FEFF 		bl	edit_button_Read
 3828 0ff4 0346     		mov	r3, r0
 3829 0ff6 002B     		cmp	r3, #0
 3830 0ff8 40F0D580 		bne	.L132
 3831              		.loc 1 1300 0 is_stmt 0 discriminator 1
 3832 0ffc 964B     		ldr	r3, .L195+4
 3833 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3834 1000 002B     		cmp	r3, #0
 3835 1002 00F0D080 		beq	.L132
1301:main.c        ****         {
1302:main.c        ****             editMode = !editMode;
 3836              		.loc 1 1302 0 is_stmt 1
 3837 1006 954B     		ldr	r3, .L195+8
 3838 1008 1B68     		ldr	r3, [r3]
 3839 100a 002B     		cmp	r3, #0
 3840 100c 0CBF     		ite	eq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 92


 3841 100e 0123     		moveq	r3, #1
 3842 1010 0023     		movne	r3, #0
 3843 1012 DBB2     		uxtb	r3, r3
 3844 1014 1A46     		mov	r2, r3
 3845 1016 914B     		ldr	r3, .L195+8
 3846 1018 1A60     		str	r2, [r3]
1303:main.c        ****             //for now edit mode is calibration mode
1304:main.c        ****             calibrationMode = !calibrationMode;
 3847              		.loc 1 1304 0
 3848 101a 914B     		ldr	r3, .L195+12
 3849 101c 1B68     		ldr	r3, [r3]
 3850 101e 002B     		cmp	r3, #0
 3851 1020 0CBF     		ite	eq
 3852 1022 0123     		moveq	r3, #1
 3853 1024 0023     		movne	r3, #0
 3854 1026 DBB2     		uxtb	r3, r3
 3855 1028 1A46     		mov	r2, r3
 3856 102a 8D4B     		ldr	r3, .L195+12
 3857 102c 1A60     		str	r2, [r3]
1305:main.c        ****             LED_red2_Write(editMode);
 3858              		.loc 1 1305 0
 3859 102e 8B4B     		ldr	r3, .L195+8
 3860 1030 1B68     		ldr	r3, [r3]
 3861 1032 DBB2     		uxtb	r3, r3
 3862 1034 1846     		mov	r0, r3
 3863 1036 FFF7FEFF 		bl	LED_red2_Write
1306:main.c        ****             editUp = 0;
 3864              		.loc 1 1306 0
 3865 103a 874B     		ldr	r3, .L195+4
 3866 103c 0022     		movs	r2, #0
 3867 103e 1A70     		strb	r2, [r3]
1307:main.c        ****             if (editMode)
 3868              		.loc 1 1307 0
 3869 1040 864B     		ldr	r3, .L195+8
 3870 1042 1B68     		ldr	r3, [r3]
 3871 1044 002B     		cmp	r3, #0
 3872 1046 31D0     		beq	.L133
1308:main.c        ****             {
1309:main.c        ****                 OLEDclear();
 3873              		.loc 1 1309 0
 3874 1048 FFF7FEFF 		bl	OLEDclear
1310:main.c        ****                 OLEDwriteString("CALIBRATION", 11, 2, FirstLine);
 3875              		.loc 1 1310 0
 3876 104c 0023     		movs	r3, #0
 3877 104e 0222     		movs	r2, #2
 3878 1050 0B21     		movs	r1, #11
 3879 1052 8448     		ldr	r0, .L195+16
 3880 1054 FFF7FEFF 		bl	OLEDwriteString
1311:main.c        ****                 OLEDwriteString("MOVE PEDALS", 11, 2, SecondLine);
 3881              		.loc 1 1311 0
 3882 1058 0123     		movs	r3, #1
 3883 105a 0222     		movs	r2, #2
 3884 105c 0B21     		movs	r1, #11
 3885 105e 8248     		ldr	r0, .L195+20
 3886 1060 FFF7FEFF 		bl	OLEDwriteString
1312:main.c        ****                 OLEDwriteString("AND LEVERS", 11, 2, ThirdLine);
 3887              		.loc 1 1312 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 93


 3888 1064 0223     		movs	r3, #2
 3889 1066 0222     		movs	r2, #2
 3890 1068 0B21     		movs	r1, #11
 3891 106a 8048     		ldr	r0, .L195+24
 3892 106c FFF7FEFF 		bl	OLEDwriteString
1313:main.c        ****                 OLEDwriteString("THEN EXIT", 11, 2, FourthLine);
 3893              		.loc 1 1313 0
 3894 1070 0323     		movs	r3, #3
 3895 1072 0222     		movs	r2, #2
 3896 1074 0B21     		movs	r1, #11
 3897 1076 7E48     		ldr	r0, .L195+28
 3898 1078 FFF7FEFF 		bl	OLEDwriteString
1314:main.c        ****                 mainOLEDWaitingToSend = 1;
 3899              		.loc 1 1314 0
 3900 107c 7D4B     		ldr	r3, .L195+32
 3901 107e 0122     		movs	r2, #1
 3902 1080 1A60     		str	r2, [r3]
 3903              	.LBB20:
1315:main.c        ****                 
1316:main.c        ****                 //entering calibration mode, clear the pedals low and high arrays
1317:main.c        ****                 for (int i = 0; i < 10; i++)
 3904              		.loc 1 1317 0
 3905 1082 0023     		movs	r3, #0
 3906 1084 BB65     		str	r3, [r7, #88]
 3907 1086 0DE0     		b	.L134
 3908              	.L135:
1318:main.c        ****                 {
1319:main.c        ****                     pedals_low[i] = 4095;
 3909              		.loc 1 1319 0 discriminator 3
 3910 1088 7B4A     		ldr	r2, .L195+36
 3911 108a BB6D     		ldr	r3, [r7, #88]
 3912 108c 40F6FF71 		movw	r1, #4095
 3913 1090 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1320:main.c        ****                     pedals_high[i] = 0;
 3914              		.loc 1 1320 0 discriminator 3
 3915 1094 794A     		ldr	r2, .L195+40
 3916 1096 BB6D     		ldr	r3, [r7, #88]
 3917 1098 0021     		movs	r1, #0
 3918 109a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1317:main.c        ****                 {
 3919              		.loc 1 1317 0 discriminator 3
 3920 109e BB6D     		ldr	r3, [r7, #88]
 3921 10a0 0133     		adds	r3, r3, #1
 3922 10a2 BB65     		str	r3, [r7, #88]
 3923              	.L134:
1317:main.c        ****                 {
 3924              		.loc 1 1317 0 is_stmt 0 discriminator 1
 3925 10a4 BB6D     		ldr	r3, [r7, #88]
 3926 10a6 092B     		cmp	r3, #9
 3927 10a8 EEDD     		ble	.L135
 3928              	.LBE20:
1307:main.c        ****             {
 3929              		.loc 1 1307 0 is_stmt 1
 3930 10aa 84E0     		b	.L139
 3931              	.L133:
1321:main.c        ****                 }
1322:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 94


1323:main.c        ****             else
1324:main.c        ****             {
1325:main.c        ****                 //draw normal screen
1326:main.c        ****                 OLEDclear();
 3932              		.loc 1 1326 0
 3933 10ac FFF7FEFF 		bl	OLEDclear
1327:main.c        ****                 OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 3934              		.loc 1 1327 0
 3935 10b0 734B     		ldr	r3, .L195+44
 3936 10b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3937 10b4 1846     		mov	r0, r3
 3938 10b6 0323     		movs	r3, #3
 3939 10b8 0022     		movs	r2, #0
 3940 10ba 0221     		movs	r1, #2
 3941 10bc FFF7FEFF 		bl	OLEDwriteInt
1328:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 3942              		.loc 1 1328 0
 3943 10c0 FFF7FEFF 		bl	OLEDgetCursor
 3944 10c4 0246     		mov	r2, r0
 3945 10c6 0323     		movs	r3, #3
 3946 10c8 0121     		movs	r1, #1
 3947 10ca 6E48     		ldr	r0, .L195+48
 3948 10cc FFF7FEFF 		bl	OLEDwriteString
1329:main.c        ****                 OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYT
 3949              		.loc 1 1329 0
 3950 10d0 6B4B     		ldr	r3, .L195+44
 3951 10d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3952 10d4 1A46     		mov	r2, r3
 3953 10d6 1346     		mov	r3, r2
 3954 10d8 DB00     		lsls	r3, r3, #3
 3955 10da 9B1A     		subs	r3, r3, r2
 3956 10dc 5B00     		lsls	r3, r3, #1
 3957 10de 6A4A     		ldr	r2, .L195+52
 3958 10e0 9C18     		adds	r4, r3, r2
 3959 10e2 FFF7FEFF 		bl	OLEDgetCursor
 3960 10e6 0246     		mov	r2, r0
 3961 10e8 0323     		movs	r3, #3
 3962 10ea 0E21     		movs	r1, #14
 3963 10ec 2046     		mov	r0, r4
 3964 10ee FFF7FEFF 		bl	OLEDwriteString
1330:main.c        ****                 displayCurrentPresetName();
 3965              		.loc 1 1330 0
 3966 10f2 FFF7FEFF 		bl	displayCurrentPresetName
1331:main.c        ****                 calculatePedalRatios();
 3967              		.loc 1 1331 0
 3968 10f6 FFF7FEFF 		bl	calculatePedalRatios
1332:main.c        ****                 //TODO: now need to store this in EEPROM. 
1333:main.c        ****                 EEPROM_WriteByte(currentCopedent, EEPROM_NECKS_OFFSET + currentNeck);
 3969              		.loc 1 1333 0
 3970 10fa 614B     		ldr	r3, .L195+44
 3971 10fc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3972 10fe 634B     		ldr	r3, .L195+56
 3973 1100 1B68     		ldr	r3, [r3]
 3974 1102 9BB2     		uxth	r3, r3
 3975 1104 1946     		mov	r1, r3
 3976 1106 1046     		mov	r0, r2
 3977 1108 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 95


 3978              	.LBB21:
1334:main.c        ****                 
1335:main.c        ****                 for (int i = 0; i < NUM_PEDALS; i++)
 3979              		.loc 1 1335 0
 3980 110c 0023     		movs	r3, #0
 3981 110e 7B65     		str	r3, [r7, #84]
 3982 1110 45E0     		b	.L137
 3983              	.L138:
1336:main.c        ****                 {
1337:main.c        ****                      EEPROM_WriteByte((pedals_low[i] >> 8), EEPROM_CALIBRATION_OFFSET + (i*4));
 3984              		.loc 1 1337 0 discriminator 3
 3985 1112 594A     		ldr	r2, .L195+36
 3986 1114 7B6D     		ldr	r3, [r7, #84]
 3987 1116 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 3988 111a 1B0A     		lsrs	r3, r3, #8
 3989 111c 9BB2     		uxth	r3, r3
 3990 111e DAB2     		uxtb	r2, r3
 3991 1120 7B6D     		ldr	r3, [r7, #84]
 3992 1122 03F2E713 		addw	r3, r3, #487
 3993 1126 9BB2     		uxth	r3, r3
 3994 1128 9B00     		lsls	r3, r3, #2
 3995 112a 9BB2     		uxth	r3, r3
 3996 112c 1946     		mov	r1, r3
 3997 112e 1046     		mov	r0, r2
 3998 1130 FFF7FEFF 		bl	EEPROM_WriteByte
1338:main.c        ****                      EEPROM_WriteByte((pedals_low[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 1
 3999              		.loc 1 1338 0 discriminator 3
 4000 1134 504A     		ldr	r2, .L195+36
 4001 1136 7B6D     		ldr	r3, [r7, #84]
 4002 1138 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4003 113c DAB2     		uxtb	r2, r3
 4004 113e 7B6D     		ldr	r3, [r7, #84]
 4005 1140 9BB2     		uxth	r3, r3
 4006 1142 9B00     		lsls	r3, r3, #2
 4007 1144 9BB2     		uxth	r3, r3
 4008 1146 03F29D73 		addw	r3, r3, #1949
 4009 114a 9BB2     		uxth	r3, r3
 4010 114c 1946     		mov	r1, r3
 4011 114e 1046     		mov	r0, r2
 4012 1150 FFF7FEFF 		bl	EEPROM_WriteByte
1339:main.c        ****                      EEPROM_WriteByte((pedals_high[i] >> 8), EEPROM_CALIBRATION_OFFSET + ((i*4) + 2
 4013              		.loc 1 1339 0 discriminator 3
 4014 1154 494A     		ldr	r2, .L195+40
 4015 1156 7B6D     		ldr	r3, [r7, #84]
 4016 1158 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4017 115c 1B0A     		lsrs	r3, r3, #8
 4018 115e 9BB2     		uxth	r3, r3
 4019 1160 DAB2     		uxtb	r2, r3
 4020 1162 7B6D     		ldr	r3, [r7, #84]
 4021 1164 9BB2     		uxth	r3, r3
 4022 1166 9B00     		lsls	r3, r3, #2
 4023 1168 9BB2     		uxth	r3, r3
 4024 116a 03F29E73 		addw	r3, r3, #1950
 4025 116e 9BB2     		uxth	r3, r3
 4026 1170 1946     		mov	r1, r3
 4027 1172 1046     		mov	r0, r2
 4028 1174 FFF7FEFF 		bl	EEPROM_WriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 96


1340:main.c        ****                      EEPROM_WriteByte((pedals_high[i] & 255), EEPROM_CALIBRATION_OFFSET + ((i*4) + 
 4029              		.loc 1 1340 0 discriminator 3
 4030 1178 404A     		ldr	r2, .L195+40
 4031 117a 7B6D     		ldr	r3, [r7, #84]
 4032 117c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4033 1180 DAB2     		uxtb	r2, r3
 4034 1182 7B6D     		ldr	r3, [r7, #84]
 4035 1184 9BB2     		uxth	r3, r3
 4036 1186 9B00     		lsls	r3, r3, #2
 4037 1188 9BB2     		uxth	r3, r3
 4038 118a 03F29F73 		addw	r3, r3, #1951
 4039 118e 9BB2     		uxth	r3, r3
 4040 1190 1946     		mov	r1, r3
 4041 1192 1046     		mov	r0, r2
 4042 1194 FFF7FEFF 		bl	EEPROM_WriteByte
1335:main.c        ****                 {
 4043              		.loc 1 1335 0 discriminator 3
 4044 1198 7B6D     		ldr	r3, [r7, #84]
 4045 119a 0133     		adds	r3, r3, #1
 4046 119c 7B65     		str	r3, [r7, #84]
 4047              	.L137:
1335:main.c        ****                 {
 4048              		.loc 1 1335 0 is_stmt 0 discriminator 1
 4049 119e 7B6D     		ldr	r3, [r7, #84]
 4050 11a0 092B     		cmp	r3, #9
 4051 11a2 B6DD     		ble	.L138
 4052              	.LBE21:
1307:main.c        ****             {
 4053              		.loc 1 1307 0 is_stmt 1
 4054 11a4 07E0     		b	.L139
 4055              	.L132:
1341:main.c        ****                 }
1342:main.c        **** 
1343:main.c        ****                 // also need to make this a little more hidden - maybe first edit then Enter?
1344:main.c        ****             }
1345:main.c        ****         }
1346:main.c        ****         else if (edit_button_Read())
 4056              		.loc 1 1346 0
 4057 11a6 FFF7FEFF 		bl	edit_button_Read
 4058 11aa 0346     		mov	r3, r0
 4059 11ac 002B     		cmp	r3, #0
 4060 11ae 02D0     		beq	.L139
1347:main.c        ****         {
1348:main.c        ****             editUp = 1;
 4061              		.loc 1 1348 0
 4062 11b0 294B     		ldr	r3, .L195+4
 4063 11b2 0122     		movs	r2, #1
 4064 11b4 1A70     		strb	r2, [r3]
 4065              	.L139:
1349:main.c        ****         }
1350:main.c        ****         
1351:main.c        ****         if (octave != prevOctave)
1352:main.c        ****         {
1353:main.c        ****             //sendMIDIControlChange(90, octave);
1354:main.c        ****         }
1355:main.c        ****         prevOctave = octave;
 4066              		.loc 1 1355 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 97


 4067 11b6 364B     		ldr	r3, .L195+60
 4068 11b8 1B68     		ldr	r3, [r3]
 4069 11ba 364A     		ldr	r2, .L195+64
 4070 11bc 1360     		str	r3, [r2]
 4071              	.LBB22:
1356:main.c        ****         
1357:main.c        ****         
1358:main.c        ****         for (int i=  0; i < 4; i++)
 4072              		.loc 1 1358 0
 4073 11be 0023     		movs	r3, #0
 4074 11c0 3B65     		str	r3, [r7, #80]
 4075 11c2 3EE0     		b	.L140
 4076              	.L143:
1359:main.c        ****         {
1360:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/16);
 4077              		.loc 1 1360 0
 4078 11c4 3B6D     		ldr	r3, [r7, #80]
 4079 11c6 9BB2     		uxth	r3, r3
 4080 11c8 1846     		mov	r0, r3
 4081 11ca FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4082 11ce 0346     		mov	r3, r0
 4083 11d0 002B     		cmp	r3, #0
 4084 11d2 00DA     		bge	.L141
 4085 11d4 0F33     		adds	r3, r3, #15
 4086              	.L141:
 4087 11d6 1B11     		asrs	r3, r3, #4
 4088 11d8 1BB2     		sxth	r3, r3
 4089 11da D9B2     		uxtb	r1, r3
 4090 11dc 2E4A     		ldr	r2, .L195+68
 4091 11de 3B6D     		ldr	r3, [r7, #80]
 4092 11e0 1344     		add	r3, r3, r2
 4093 11e2 0A46     		mov	r2, r1
 4094 11e4 1A70     		strb	r2, [r3]
1361:main.c        ****             
1362:main.c        ****             knobs[i] = 255 - knobs[i];
 4095              		.loc 1 1362 0
 4096 11e6 2C4A     		ldr	r2, .L195+68
 4097 11e8 3B6D     		ldr	r3, [r7, #80]
 4098 11ea 1344     		add	r3, r3, r2
 4099 11ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4100 11ee DB43     		mvns	r3, r3
 4101 11f0 D9B2     		uxtb	r1, r3
 4102 11f2 294A     		ldr	r2, .L195+68
 4103 11f4 3B6D     		ldr	r3, [r7, #80]
 4104 11f6 1344     		add	r3, r3, r2
 4105 11f8 0A46     		mov	r2, r1
 4106 11fa 1A70     		strb	r2, [r3]
1363:main.c        ****             
1364:main.c        ****             if (knobs[i] != prevKnobs[i])
 4107              		.loc 1 1364 0
 4108 11fc 264A     		ldr	r2, .L195+68
 4109 11fe 3B6D     		ldr	r3, [r7, #80]
 4110 1200 1344     		add	r3, r3, r2
 4111 1202 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4112 1204 2549     		ldr	r1, .L195+72
 4113 1206 3B6D     		ldr	r3, [r7, #80]
 4114 1208 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 98


 4115 120a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4116 120c 9A42     		cmp	r2, r3
 4117 120e 0CD0     		beq	.L142
1365:main.c        ****             {
1366:main.c        ****                 sendMIDIControlChange(i+17, knobs[i]/2, 0);
 4118              		.loc 1 1366 0
 4119 1210 3B6D     		ldr	r3, [r7, #80]
 4120 1212 03F11100 		add	r0, r3, #17
 4121 1216 204A     		ldr	r2, .L195+68
 4122 1218 3B6D     		ldr	r3, [r7, #80]
 4123 121a 1344     		add	r3, r3, r2
 4124 121c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4125 121e 5B08     		lsrs	r3, r3, #1
 4126 1220 DBB2     		uxtb	r3, r3
 4127 1222 0022     		movs	r2, #0
 4128 1224 1946     		mov	r1, r3
 4129 1226 FFF7FEFF 		bl	sendMIDIControlChange
 4130              	.L142:
1367:main.c        ****             }
1368:main.c        ****             prevKnobs[i] = knobs[i];
 4131              		.loc 1 1368 0 discriminator 2
 4132 122a 1B4A     		ldr	r2, .L195+68
 4133 122c 3B6D     		ldr	r3, [r7, #80]
 4134 122e 1344     		add	r3, r3, r2
 4135 1230 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4136 1232 1A4A     		ldr	r2, .L195+72
 4137 1234 3B6D     		ldr	r3, [r7, #80]
 4138 1236 1344     		add	r3, r3, r2
 4139 1238 0A46     		mov	r2, r1
 4140 123a 1A70     		strb	r2, [r3]
1358:main.c        ****         {
 4141              		.loc 1 1358 0 discriminator 2
 4142 123c 3B6D     		ldr	r3, [r7, #80]
 4143 123e 0133     		adds	r3, r3, #1
 4144 1240 3B65     		str	r3, [r7, #80]
 4145              	.L140:
1358:main.c        ****         {
 4146              		.loc 1 1358 0 is_stmt 0 discriminator 1
 4147 1242 3B6D     		ldr	r3, [r7, #80]
 4148 1244 032B     		cmp	r3, #3
 4149 1246 BDDD     		ble	.L143
 4150              	.LBE22:
1369:main.c        ****         }
1370:main.c        ****         
1371:main.c        ****         testpin4_Write(1);
 4151              		.loc 1 1371 0 is_stmt 1
 4152 1248 0120     		movs	r0, #1
 4153 124a FFF7FEFF 		bl	testpin4_Write
 4154              	.LBB23:
1372:main.c        ****         //calculate the pitch of each string based on the current Copedent
1373:main.c        ****         for (int i = 0; i < numStrings; i++)
 4155              		.loc 1 1373 0
 4156 124e 0023     		movs	r3, #0
 4157 1250 FB64     		str	r3, [r7, #76]
 4158 1252 47E1     		b	.L144
 4159              	.L196:
 4160              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 99


 4161              	.L195:
 4162 1254 00000000 		.word	button4Up
 4163 1258 00000000 		.word	editUp
 4164 125c 00000000 		.word	editMode
 4165 1260 00000000 		.word	calibrationMode
 4166 1264 04040000 		.word	.LC1
 4167 1268 10040000 		.word	.LC2
 4168 126c 1C040000 		.word	.LC3
 4169 1270 28040000 		.word	.LC4
 4170 1274 00000000 		.word	mainOLEDWaitingToSend
 4171 1278 00000000 		.word	pedals_low
 4172 127c 00000000 		.word	pedals_high
 4173 1280 00000000 		.word	currentCopedent
 4174 1284 00040000 		.word	.LC0
 4175 1288 00000000 		.word	copedentNamesArray
 4176 128c 00000000 		.word	currentNeck
 4177 1290 00000000 		.word	octave
 4178 1294 00000000 		.word	prevOctave
 4179 1298 00000000 		.word	knobs
 4180 129c 00000000 		.word	prevKnobs
 4181              	.L147:
 4182              	.LBB24:
1374:main.c        ****     	{
1375:main.c        ****     		//interpolate ratios for each of the strings
1376:main.c        ****            /*
1377:main.c        ****             float myMappedPos;
1378:main.c        ****             if (dualSlider)
1379:main.c        ****             {
1380:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1381:main.c        ****             }
1382:main.c        ****             else
1383:main.c        ****             {
1384:main.c        ****                 myMappedPos = stringMappedPositions[0];
1385:main.c        ****             }
1386:main.c        **** 
1387:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1388:main.c        ****             */
1389:main.c        ****     		//then apply those ratios to the fundamental frequencies
1390:main.c        ****     		float tempMIDI = (copedent[necks[currentNeck]][0][i] +
 4183              		.loc 1 1390 0
 4184 12a0 A04B     		ldr	r3, .L197
 4185 12a2 1B68     		ldr	r3, [r3]
 4186 12a4 A04A     		ldr	r2, .L197+4
 4187 12a6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 4188 12a8 1A46     		mov	r2, r3
 4189 12aa A049     		ldr	r1, .L197+8
 4190 12ac 1346     		mov	r3, r2
 4191 12ae 5B01     		lsls	r3, r3, #5
 4192 12b0 1344     		add	r3, r3, r2
 4193 12b2 9B00     		lsls	r3, r3, #2
 4194 12b4 FA6C     		ldr	r2, [r7, #76]
 4195 12b6 1344     		add	r3, r3, r2
 4196 12b8 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1391:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4197              		.loc 1 1391 0
 4198 12bc 9C4B     		ldr	r3, .L197+12
 4199 12be 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 100


 4200 12c0 1A46     		mov	r2, r3
 4201 12c2 9A49     		ldr	r1, .L197+8
 4202 12c4 1346     		mov	r3, r2
 4203 12c6 5B01     		lsls	r3, r3, #5
 4204 12c8 1344     		add	r3, r3, r2
 4205 12ca 9B00     		lsls	r3, r3, #2
 4206 12cc FA6C     		ldr	r2, [r7, #76]
 4207 12ce 1344     		add	r3, r3, r2
 4208 12d0 3033     		adds	r3, r3, #48
 4209 12d2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4210 12d6 974B     		ldr	r3, .L197+16
 4211 12d8 1B68     		ldr	r3, [r3]	@ float
 4212 12da 1946     		mov	r1, r3
 4213 12dc 1046     		mov	r0, r2
 4214 12de FFF7FEFF 		bl	__aeabi_fmul
 4215 12e2 0346     		mov	r3, r0
1390:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4216              		.loc 1 1390 0
 4217 12e4 1946     		mov	r1, r3
 4218 12e6 2046     		mov	r0, r4
 4219 12e8 FFF7FEFF 		bl	__aeabi_fadd
 4220 12ec 0346     		mov	r3, r0
 4221 12ee 1C46     		mov	r4, r3
1392:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4222              		.loc 1 1392 0
 4223 12f0 8F4B     		ldr	r3, .L197+12
 4224 12f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4225 12f4 1A46     		mov	r2, r3
 4226 12f6 8D49     		ldr	r1, .L197+8
 4227 12f8 1346     		mov	r3, r2
 4228 12fa 5B01     		lsls	r3, r3, #5
 4229 12fc 1344     		add	r3, r3, r2
 4230 12fe 9B00     		lsls	r3, r3, #2
 4231 1300 FA6C     		ldr	r2, [r7, #76]
 4232 1302 1344     		add	r3, r3, r2
 4233 1304 3C33     		adds	r3, r3, #60
 4234 1306 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4235 130a 8A4B     		ldr	r3, .L197+16
 4236 130c 5B68     		ldr	r3, [r3, #4]	@ float
 4237 130e 1946     		mov	r1, r3
 4238 1310 1046     		mov	r0, r2
 4239 1312 FFF7FEFF 		bl	__aeabi_fmul
 4240 1316 0346     		mov	r3, r0
1391:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4241              		.loc 1 1391 0
 4242 1318 1946     		mov	r1, r3
 4243 131a 2046     		mov	r0, r4
 4244 131c FFF7FEFF 		bl	__aeabi_fadd
 4245 1320 0346     		mov	r3, r0
 4246 1322 1C46     		mov	r4, r3
1393:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4247              		.loc 1 1393 0
 4248 1324 824B     		ldr	r3, .L197+12
 4249 1326 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4250 1328 1A46     		mov	r2, r3
 4251 132a 8049     		ldr	r1, .L197+8
 4252 132c 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 101


 4253 132e 5B01     		lsls	r3, r3, #5
 4254 1330 1344     		add	r3, r3, r2
 4255 1332 9B00     		lsls	r3, r3, #2
 4256 1334 FA6C     		ldr	r2, [r7, #76]
 4257 1336 1344     		add	r3, r3, r2
 4258 1338 4833     		adds	r3, r3, #72
 4259 133a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4260 133e 7D4B     		ldr	r3, .L197+16
 4261 1340 9B68     		ldr	r3, [r3, #8]	@ float
 4262 1342 1946     		mov	r1, r3
 4263 1344 1046     		mov	r0, r2
 4264 1346 FFF7FEFF 		bl	__aeabi_fmul
 4265 134a 0346     		mov	r3, r0
1392:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4266              		.loc 1 1392 0
 4267 134c 1946     		mov	r1, r3
 4268 134e 2046     		mov	r0, r4
 4269 1350 FFF7FEFF 		bl	__aeabi_fadd
 4270 1354 0346     		mov	r3, r0
 4271 1356 1C46     		mov	r4, r3
1394:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4272              		.loc 1 1394 0
 4273 1358 754B     		ldr	r3, .L197+12
 4274 135a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4275 135c 1A46     		mov	r2, r3
 4276 135e 7349     		ldr	r1, .L197+8
 4277 1360 1346     		mov	r3, r2
 4278 1362 5B01     		lsls	r3, r3, #5
 4279 1364 1344     		add	r3, r3, r2
 4280 1366 9B00     		lsls	r3, r3, #2
 4281 1368 FA6C     		ldr	r2, [r7, #76]
 4282 136a 1344     		add	r3, r3, r2
 4283 136c 5433     		adds	r3, r3, #84
 4284 136e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4285 1372 704B     		ldr	r3, .L197+16
 4286 1374 DB68     		ldr	r3, [r3, #12]	@ float
 4287 1376 1946     		mov	r1, r3
 4288 1378 1046     		mov	r0, r2
 4289 137a FFF7FEFF 		bl	__aeabi_fmul
 4290 137e 0346     		mov	r3, r0
1393:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4291              		.loc 1 1393 0
 4292 1380 1946     		mov	r1, r3
 4293 1382 2046     		mov	r0, r4
 4294 1384 FFF7FEFF 		bl	__aeabi_fadd
 4295 1388 0346     		mov	r3, r0
 4296 138a 1C46     		mov	r4, r3
1395:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4297              		.loc 1 1395 0
 4298 138c 684B     		ldr	r3, .L197+12
 4299 138e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4300 1390 1A46     		mov	r2, r3
 4301 1392 6649     		ldr	r1, .L197+8
 4302 1394 1346     		mov	r3, r2
 4303 1396 5B01     		lsls	r3, r3, #5
 4304 1398 1344     		add	r3, r3, r2
 4305 139a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 102


 4306 139c FA6C     		ldr	r2, [r7, #76]
 4307 139e 1344     		add	r3, r3, r2
 4308 13a0 6033     		adds	r3, r3, #96
 4309 13a2 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4310 13a6 634B     		ldr	r3, .L197+16
 4311 13a8 1B69     		ldr	r3, [r3, #16]	@ float
 4312 13aa 1946     		mov	r1, r3
 4313 13ac 1046     		mov	r0, r2
 4314 13ae FFF7FEFF 		bl	__aeabi_fmul
 4315 13b2 0346     		mov	r3, r0
1394:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 4316              		.loc 1 1394 0
 4317 13b4 1946     		mov	r1, r3
 4318 13b6 2046     		mov	r0, r4
 4319 13b8 FFF7FEFF 		bl	__aeabi_fadd
 4320 13bc 0346     		mov	r3, r0
 4321 13be 1C46     		mov	r4, r3
1396:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4322              		.loc 1 1396 0
 4323 13c0 5B4B     		ldr	r3, .L197+12
 4324 13c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4325 13c4 1A46     		mov	r2, r3
 4326 13c6 5949     		ldr	r1, .L197+8
 4327 13c8 1346     		mov	r3, r2
 4328 13ca 5B01     		lsls	r3, r3, #5
 4329 13cc 1344     		add	r3, r3, r2
 4330 13ce 9B00     		lsls	r3, r3, #2
 4331 13d0 FA6C     		ldr	r2, [r7, #76]
 4332 13d2 1344     		add	r3, r3, r2
 4333 13d4 7833     		adds	r3, r3, #120
 4334 13d6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4335 13da 564B     		ldr	r3, .L197+16
 4336 13dc 5B69     		ldr	r3, [r3, #20]	@ float
 4337 13de 1946     		mov	r1, r3
 4338 13e0 1046     		mov	r0, r2
 4339 13e2 FFF7FEFF 		bl	__aeabi_fmul
 4340 13e6 0346     		mov	r3, r0
1395:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 4341              		.loc 1 1395 0
 4342 13e8 1946     		mov	r1, r3
 4343 13ea 2046     		mov	r0, r4
 4344 13ec FFF7FEFF 		bl	__aeabi_fadd
 4345 13f0 0346     		mov	r3, r0
 4346 13f2 1C46     		mov	r4, r3
1397:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4347              		.loc 1 1397 0
 4348 13f4 4E4B     		ldr	r3, .L197+12
 4349 13f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4350 13f8 1A46     		mov	r2, r3
 4351 13fa 4C49     		ldr	r1, .L197+8
 4352 13fc 1346     		mov	r3, r2
 4353 13fe 5B01     		lsls	r3, r3, #5
 4354 1400 1344     		add	r3, r3, r2
 4355 1402 9B00     		lsls	r3, r3, #2
 4356 1404 FA6C     		ldr	r2, [r7, #76]
 4357 1406 1344     		add	r3, r3, r2
 4358 1408 6C33     		adds	r3, r3, #108
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 103


 4359 140a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4360 140e 494B     		ldr	r3, .L197+16
 4361 1410 9B69     		ldr	r3, [r3, #24]	@ float
 4362 1412 1946     		mov	r1, r3
 4363 1414 1046     		mov	r0, r2
 4364 1416 FFF7FEFF 		bl	__aeabi_fmul
 4365 141a 0346     		mov	r3, r0
1396:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 4366              		.loc 1 1396 0
 4367 141c 1946     		mov	r1, r3
 4368 141e 2046     		mov	r0, r4
 4369 1420 FFF7FEFF 		bl	__aeabi_fadd
 4370 1424 0346     		mov	r3, r0
 4371 1426 1C46     		mov	r4, r3
1398:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4372              		.loc 1 1398 0
 4373 1428 414B     		ldr	r3, .L197+12
 4374 142a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4375 142c 1A46     		mov	r2, r3
 4376 142e 3F49     		ldr	r1, .L197+8
 4377 1430 1346     		mov	r3, r2
 4378 1432 5B01     		lsls	r3, r3, #5
 4379 1434 1344     		add	r3, r3, r2
 4380 1436 9B00     		lsls	r3, r3, #2
 4381 1438 FA6C     		ldr	r2, [r7, #76]
 4382 143a 1344     		add	r3, r3, r2
 4383 143c 2433     		adds	r3, r3, #36
 4384 143e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4385 1442 3C4B     		ldr	r3, .L197+16
 4386 1444 DB69     		ldr	r3, [r3, #28]	@ float
 4387 1446 1946     		mov	r1, r3
 4388 1448 1046     		mov	r0, r2
 4389 144a FFF7FEFF 		bl	__aeabi_fmul
 4390 144e 0346     		mov	r3, r0
1397:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 4391              		.loc 1 1397 0
 4392 1450 1946     		mov	r1, r3
 4393 1452 2046     		mov	r0, r4
 4394 1454 FFF7FEFF 		bl	__aeabi_fadd
 4395 1458 0346     		mov	r3, r0
 4396 145a 1C46     		mov	r4, r3
1399:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 4397              		.loc 1 1399 0
 4398 145c 344B     		ldr	r3, .L197+12
 4399 145e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4400 1460 1A46     		mov	r2, r3
 4401 1462 3249     		ldr	r1, .L197+8
 4402 1464 1346     		mov	r3, r2
 4403 1466 5B01     		lsls	r3, r3, #5
 4404 1468 1344     		add	r3, r3, r2
 4405 146a 9B00     		lsls	r3, r3, #2
 4406 146c FA6C     		ldr	r2, [r7, #76]
 4407 146e 1344     		add	r3, r3, r2
 4408 1470 0C33     		adds	r3, r3, #12
 4409 1472 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4410 1476 2F4B     		ldr	r3, .L197+16
 4411 1478 1B6A     		ldr	r3, [r3, #32]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 104


 4412 147a 1946     		mov	r1, r3
 4413 147c 1046     		mov	r0, r2
 4414 147e FFF7FEFF 		bl	__aeabi_fmul
 4415 1482 0346     		mov	r3, r0
1398:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 4416              		.loc 1 1398 0
 4417 1484 1946     		mov	r1, r3
 4418 1486 2046     		mov	r0, r4
 4419 1488 FFF7FEFF 		bl	__aeabi_fadd
 4420 148c 0346     		mov	r3, r0
 4421 148e 1C46     		mov	r4, r3
1400:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9]));
 4422              		.loc 1 1400 0
 4423 1490 274B     		ldr	r3, .L197+12
 4424 1492 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4425 1494 1A46     		mov	r2, r3
 4426 1496 2549     		ldr	r1, .L197+8
 4427 1498 1346     		mov	r3, r2
 4428 149a 5B01     		lsls	r3, r3, #5
 4429 149c 1344     		add	r3, r3, r2
 4430 149e 9B00     		lsls	r3, r3, #2
 4431 14a0 FA6C     		ldr	r2, [r7, #76]
 4432 14a2 1344     		add	r3, r3, r2
 4433 14a4 1833     		adds	r3, r3, #24
 4434 14a6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4435 14aa 224B     		ldr	r3, .L197+16
 4436 14ac 5B6A     		ldr	r3, [r3, #36]	@ float
 4437 14ae 1946     		mov	r1, r3
 4438 14b0 1046     		mov	r0, r2
 4439 14b2 FFF7FEFF 		bl	__aeabi_fmul
 4440 14b6 0346     		mov	r3, r0
1390:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4441              		.loc 1 1390 0
 4442 14b8 1946     		mov	r1, r3
 4443 14ba 2046     		mov	r0, r4
 4444 14bc FFF7FEFF 		bl	__aeabi_fadd
 4445 14c0 0346     		mov	r3, r0
 4446 14c2 7B61     		str	r3, [r7, #20]	@ float
1401:main.c        **** 
1402:main.c        ****             /*
1403:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
1404:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
1405:main.c        ****             
1406:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
1407:main.c        ****             
1408:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
1409:main.c        ****             
1410:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
1411:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
1412:main.c        ****             {
1413:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
1414:main.c        ****             }
1415:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
1416:main.c        ****             */
1417:main.c        ****             if (tempMIDI > 0.0f)
 4447              		.loc 1 1417 0
 4448 14c4 4FF00001 		mov	r1, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 105


 4449 14c8 7869     		ldr	r0, [r7, #20]	@ float
 4450 14ca FFF7FEFF 		bl	__aeabi_fcmpgt
 4451 14ce 0346     		mov	r3, r0
 4452 14d0 002B     		cmp	r3, #0
 4453 14d2 04D0     		beq	.L145
1418:main.c        ****             {
1419:main.c        ****                 stringMIDI[i] = tempMIDI;
 4454              		.loc 1 1419 0
 4455 14d4 1849     		ldr	r1, .L197+20
 4456 14d6 FB6C     		ldr	r3, [r7, #76]
 4457 14d8 7A69     		ldr	r2, [r7, #20]	@ float
 4458 14da 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 4459              	.L145:
 4460              	.LBE24:
1373:main.c        ****     	{
 4461              		.loc 1 1373 0 discriminator 2
 4462 14de FB6C     		ldr	r3, [r7, #76]
 4463 14e0 0133     		adds	r3, r3, #1
 4464 14e2 FB64     		str	r3, [r7, #76]
 4465              	.L144:
1373:main.c        ****     	{
 4466              		.loc 1 1373 0 is_stmt 0 discriminator 1
 4467 14e4 154B     		ldr	r3, .L197+24
 4468 14e6 1B68     		ldr	r3, [r3]
 4469 14e8 FA6C     		ldr	r2, [r7, #76]
 4470 14ea 9A42     		cmp	r2, r3
 4471 14ec FFF6D8AE 		blt	.L147
 4472              	.LBE23:
1420:main.c        ****             }
1421:main.c        ****     	}
1422:main.c        ****         testpin4_Write(0);
 4473              		.loc 1 1422 0 is_stmt 1
 4474 14f0 0020     		movs	r0, #0
 4475 14f2 FFF7FEFF 		bl	testpin4_Write
1423:main.c        ****         if (encoder_button_Read())
 4476              		.loc 1 1423 0
 4477 14f6 FFF7FEFF 		bl	encoder_button_Read
 4478 14fa 0346     		mov	r3, r0
 4479 14fc 002B     		cmp	r3, #0
 4480 14fe 23D0     		beq	.L148
1424:main.c        ****         {
1425:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 4481              		.loc 1 1425 0
 4482 1500 FFF7FEFF 		bl	QuadDec_1_GetCounter
 4483 1504 0346     		mov	r3, r0
 4484 1506 9800     		lsls	r0, r3, #2
 4485 1508 0D4B     		ldr	r3, .L197+28
 4486 150a 1B68     		ldr	r3, [r3]
 4487 150c 0C4A     		ldr	r2, .L197+28
 4488 150e 1268     		ldr	r2, [r2]
 4489 1510 0C49     		ldr	r1, .L197+32
 4490 1512 8A5C     		ldrb	r2, [r1, r2]
 4491 1514 D1B2     		uxtb	r1, r2
 4492 1516 C2B2     		uxtb	r2, r0
 4493 1518 0A44     		add	r2, r2, r1
 4494 151a D1B2     		uxtb	r1, r2
 4495 151c 094A     		ldr	r2, .L197+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 106


 4496 151e D154     		strb	r1, [r2, r3]
 4497 1520 22E0     		b	.L149
 4498              	.L198:
 4499 1522 00BF     		.align	2
 4500              	.L197:
 4501 1524 00000000 		.word	currentNeck
 4502 1528 00000000 		.word	necks
 4503 152c 00000000 		.word	copedent
 4504 1530 00000000 		.word	currentCopedent
 4505 1534 00000000 		.word	pedals_float
 4506 1538 00000000 		.word	stringMIDI
 4507 153c 00000000 		.word	numStrings
 4508 1540 00000000 		.word	encoderNum
 4509 1544 00000000 		.word	encoderVal
 4510              	.L148:
1426:main.c        ****         }
1427:main.c        ****         else
1428:main.c        ****         {
1429:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 4511              		.loc 1 1429 0
 4512 1548 FFF7FEFF 		bl	QuadDec_1_GetCounter
 4513 154c 0346     		mov	r3, r0
 4514 154e 1846     		mov	r0, r3
 4515 1550 8B4B     		ldr	r3, .L199
 4516 1552 1B68     		ldr	r3, [r3]
 4517 1554 8A4A     		ldr	r2, .L199
 4518 1556 1268     		ldr	r2, [r2]
 4519 1558 8A49     		ldr	r1, .L199+4
 4520 155a 8A5C     		ldrb	r2, [r1, r2]
 4521 155c D1B2     		uxtb	r1, r2
 4522 155e C2B2     		uxtb	r2, r0
 4523 1560 0A44     		add	r2, r2, r1
 4524 1562 D1B2     		uxtb	r1, r2
 4525 1564 874A     		ldr	r2, .L199+4
 4526 1566 D154     		strb	r1, [r2, r3]
 4527              	.L149:
1430:main.c        ****         }
1431:main.c        ****         QuadDec_1_SetCounter(0);
 4528              		.loc 1 1431 0
 4529 1568 0020     		movs	r0, #0
 4530 156a FFF7FEFF 		bl	QuadDec_1_SetCounter
1432:main.c        ****         
1433:main.c        **** 
1434:main.c        ****         
1435:main.c        ****         if (USB_check_flag)
 4531              		.loc 1 1435 0
 4532 156e 864B     		ldr	r3, .L199+8
 4533 1570 1B78     		ldrb	r3, [r3]
 4534 1572 DBB2     		uxtb	r3, r3
 4535 1574 002B     		cmp	r3, #0
 4536 1576 01D0     		beq	.L150
1436:main.c        ****         {
1437:main.c        ****             checkUSB_Vbus();
 4537              		.loc 1 1437 0
 4538 1578 FFF7FEFF 		bl	checkUSB_Vbus
 4539              	.L150:
1438:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 107


1439:main.c        ****         //only service the USB bus if there is a computer plugged in
1440:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 4540              		.loc 1 1440 0
 4541 157c 834B     		ldr	r3, .L199+12
 4542 157e 1B78     		ldrb	r3, [r3]
 4543 1580 DBB2     		uxtb	r3, r3
 4544 1582 002B     		cmp	r3, #0
 4545 1584 13D0     		beq	.L181
 4546              		.loc 1 1440 0 is_stmt 0 discriminator 1
 4547 1586 FFF7FEFF 		bl	USB_VBusPresent
 4548 158a 0346     		mov	r3, r0
 4549 158c 002B     		cmp	r3, #0
 4550 158e 0ED0     		beq	.L181
1441:main.c        ****         {
1442:main.c        ****             if (midiSent > 64)
 4551              		.loc 1 1442 0 is_stmt 1
 4552 1590 7F4B     		ldr	r3, .L199+16
 4553 1592 1B88     		ldrh	r3, [r3]
 4554 1594 402B     		cmp	r3, #64
 4555 1596 05D9     		bls	.L152
1443:main.c        ****             {
1444:main.c        ****                 midiOverflow++;
 4556              		.loc 1 1444 0
 4557 1598 7E4B     		ldr	r3, .L199+20
 4558 159a 1B88     		ldrh	r3, [r3]
 4559 159c 0133     		adds	r3, r3, #1
 4560 159e 9AB2     		uxth	r2, r3
 4561 15a0 7C4B     		ldr	r3, .L199+20
 4562 15a2 1A80     		strh	r2, [r3]	@ movhi
 4563              	.L152:
1445:main.c        ****             }
1446:main.c        ****             midiSent = 0;
 4564              		.loc 1 1446 0
 4565 15a4 7A4B     		ldr	r3, .L199+16
 4566 15a6 0022     		movs	r2, #0
 4567 15a8 1A80     		strh	r2, [r3]	@ movhi
1447:main.c        ****             USB_service();
 4568              		.loc 1 1447 0
 4569 15aa FFF7FEFF 		bl	USB_service
 4570              	.L181:
1448:main.c        ****         }
1449:main.c        **** 
1450:main.c        ****         
1451:main.c        ****         /*
1452:main.c        ****         for (int i = 0; i < 10; i++)
1453:main.c        ****         {
1454:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1455:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1456:main.c        ****         }
1457:main.c        ****         
1458:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1459:main.c        ****         for (int i = 0; i < 4; i++)
1460:main.c        ****         {
1461:main.c        ****             myArray[i+21] = knobs[i];
1462:main.c        ****         }
1463:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1464:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 108


1465:main.c        ****         */
1466:main.c        ****                 //make sure previous SPI2 transmission has completed before transferring the remain
1467:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 4571              		.loc 1 1467 0
 4572 15ae 00BF     		nop
 4573              	.L156:
 4574              		.loc 1 1467 0 is_stmt 0 discriminator 7
 4575 15b0 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4576 15b4 0346     		mov	r3, r0
 4577 15b6 03F00103 		and	r3, r3, #1
 4578 15ba 002B     		cmp	r3, #0
 4579 15bc 06D1     		bne	.L153
 4580              		.loc 1 1467 0 discriminator 2
 4581 15be FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 4582 15c2 0346     		mov	r3, r0
 4583 15c4 03F01003 		and	r3, r3, #16
 4584 15c8 002B     		cmp	r3, #0
 4585 15ca 01D0     		beq	.L154
 4586              	.L153:
 4587              		.loc 1 1467 0 discriminator 3
 4588 15cc 0123     		movs	r3, #1
 4589 15ce 00E0     		b	.L155
 4590              	.L154:
 4591              		.loc 1 1467 0 discriminator 4
 4592 15d0 0023     		movs	r3, #0
 4593              	.L155:
 4594              		.loc 1 1467 0 discriminator 6
 4595 15d2 002B     		cmp	r3, #0
 4596 15d4 ECD0     		beq	.L156
1468:main.c        ****         {
1469:main.c        ****             ;
1470:main.c        ****         }
1471:main.c        ****         testpin6_Write(1);
 4597              		.loc 1 1471 0 is_stmt 1
 4598 15d6 0120     		movs	r0, #1
 4599 15d8 FFF7FEFF 		bl	testpin6_Write
1472:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 4600              		.loc 1 1472 0
 4601 15dc 6E4B     		ldr	r3, .L199+24
 4602 15de 1B78     		ldrb	r3, [r3]
 4603 15e0 DBB2     		uxtb	r3, r3
 4604 15e2 012B     		cmp	r3, #1
 4605 15e4 56D1     		bne	.L157
1473:main.c        ****         {
1474:main.c        ****             if (sendMessageEnd) //send end message
 4606              		.loc 1 1474 0
 4607 15e6 6D4B     		ldr	r3, .L199+28
 4608 15e8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4609 15ea 002B     		cmp	r3, #0
 4610 15ec 1DD0     		beq	.L158
1475:main.c        ****             {
1476:main.c        ****                 myArray[0] = 253;
 4611              		.loc 1 1476 0
 4612 15ee 6C4B     		ldr	r3, .L199+32
 4613 15f0 FD22     		movs	r2, #253
 4614 15f2 1A70     		strb	r2, [r3]
1477:main.c        ****                 myArray[1] = presetNumberToWrite;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 109


 4615              		.loc 1 1477 0
 4616 15f4 6B4B     		ldr	r3, .L199+36
 4617 15f6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4618 15f8 694B     		ldr	r3, .L199+32
 4619 15fa 5A70     		strb	r2, [r3, #1]
1478:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 4620              		.loc 1 1478 0
 4621 15fc 694B     		ldr	r3, .L199+36
 4622 15fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4623 1600 1A46     		mov	r2, r3
 4624 1602 694B     		ldr	r3, .L199+40
 4625 1604 1A60     		str	r2, [r3]
1479:main.c        ****                 //display previous preset as loaded
1480:main.c        ****                 displayCurrentPresetName();
 4626              		.loc 1 1480 0
 4627 1606 FFF7FEFF 		bl	displayCurrentPresetName
1481:main.c        ****                 //OLED_invert(0);
1482:main.c        ****                 sendMessageEnd = 0;
 4628              		.loc 1 1482 0
 4629 160a 644B     		ldr	r3, .L199+28
 4630 160c 0022     		movs	r2, #0
 4631 160e 1A70     		strb	r2, [r3]
1483:main.c        ****                 sendingMessage = 0;
 4632              		.loc 1 1483 0
 4633 1610 614B     		ldr	r3, .L199+24
 4634 1612 0022     		movs	r2, #0
 4635 1614 1A70     		strb	r2, [r3]
1484:main.c        ****                 messageArraySendCount = 0;
 4636              		.loc 1 1484 0
 4637 1616 654B     		ldr	r3, .L199+44
 4638 1618 0022     		movs	r2, #0
 4639 161a 1A80     		strh	r2, [r3]	@ movhi
1485:main.c        ****                 myArray[30] = 254;
 4640              		.loc 1 1485 0
 4641 161c 604B     		ldr	r3, .L199+32
 4642 161e FE22     		movs	r2, #254
 4643 1620 9A77     		strb	r2, [r3, #30]
1486:main.c        ****                 myArray[31] = 253;
 4644              		.loc 1 1486 0
 4645 1622 5F4B     		ldr	r3, .L199+32
 4646 1624 FD22     		movs	r2, #253
 4647 1626 DA77     		strb	r2, [r3, #31]
 4648 1628 35E1     		b	.L164
 4649              	.L158:
1487:main.c        ****                 
1488:main.c        ****             }
1489:main.c        ****             else //send chunks
1490:main.c        ****             {
1491:main.c        ****                 //send the next preset Chunkkkkk
1492:main.c        ****                 myArray[0] = 2;
 4650              		.loc 1 1492 0
 4651 162a 5D4B     		ldr	r3, .L199+32
 4652 162c 0222     		movs	r2, #2
 4653 162e 1A70     		strb	r2, [r3]
1493:main.c        ****                 myArray[1] = presetNumberToWrite;
 4654              		.loc 1 1493 0
 4655 1630 5C4B     		ldr	r3, .L199+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 110


 4656 1632 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4657 1634 5A4B     		ldr	r3, .L199+32
 4658 1636 5A70     		strb	r2, [r3, #1]
 4659              	.LBB25:
1494:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 4660              		.loc 1 1494 0
 4661 1638 0223     		movs	r3, #2
 4662 163a BB64     		str	r3, [r7, #72]
 4663 163c 20E0     		b	.L160
 4664              	.L163:
1495:main.c        ****                 {
1496:main.c        ****                     if (messageArraySendCount < messageArraySize)
 4665              		.loc 1 1496 0
 4666 163e 5B4B     		ldr	r3, .L199+44
 4667 1640 1A88     		ldrh	r2, [r3]
 4668 1642 5B4B     		ldr	r3, .L199+48
 4669 1644 1B88     		ldrh	r3, [r3]
 4670 1646 9A42     		cmp	r2, r3
 4671 1648 0FD2     		bcs	.L161
1497:main.c        ****                     {
1498:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 4672              		.loc 1 1498 0
 4673 164a 584B     		ldr	r3, .L199+44
 4674 164c 1B88     		ldrh	r3, [r3]
 4675 164e 5A1C     		adds	r2, r3, #1
 4676 1650 91B2     		uxth	r1, r2
 4677 1652 564A     		ldr	r2, .L199+44
 4678 1654 1180     		strh	r1, [r2]	@ movhi
 4679 1656 1A46     		mov	r2, r3
 4680 1658 564B     		ldr	r3, .L199+52
 4681 165a 9B5C     		ldrb	r3, [r3, r2]
 4682 165c D9B2     		uxtb	r1, r3
 4683 165e 504A     		ldr	r2, .L199+32
 4684 1660 BB6C     		ldr	r3, [r7, #72]
 4685 1662 1344     		add	r3, r3, r2
 4686 1664 0A46     		mov	r2, r1
 4687 1666 1A70     		strb	r2, [r3]
 4688 1668 07E0     		b	.L162
 4689              	.L161:
1499:main.c        ****                     }
1500:main.c        ****                     else
1501:main.c        ****                     {
1502:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 4690              		.loc 1 1502 0
 4691 166a 4D4A     		ldr	r2, .L199+32
 4692 166c BB6C     		ldr	r3, [r7, #72]
 4693 166e 1344     		add	r3, r3, r2
 4694 1670 EE22     		movs	r2, #238
 4695 1672 1A70     		strb	r2, [r3]
1503:main.c        ****                         sendMessageEnd = 1;
 4696              		.loc 1 1503 0
 4697 1674 494B     		ldr	r3, .L199+28
 4698 1676 0122     		movs	r2, #1
 4699 1678 1A70     		strb	r2, [r3]
 4700              	.L162:
1494:main.c        ****                 {
 4701              		.loc 1 1494 0 discriminator 2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 111


 4702 167a BB6C     		ldr	r3, [r7, #72]
 4703 167c 0133     		adds	r3, r3, #1
 4704 167e BB64     		str	r3, [r7, #72]
 4705              	.L160:
1494:main.c        ****                 {
 4706              		.loc 1 1494 0 is_stmt 0 discriminator 1
 4707 1680 BB6C     		ldr	r3, [r7, #72]
 4708 1682 1D2B     		cmp	r3, #29
 4709 1684 DBD9     		bls	.L163
 4710              	.LBE25:
1504:main.c        ****                     }
1505:main.c        ****                 }
1506:main.c        ****                 myArray[30] = 254;
 4711              		.loc 1 1506 0 is_stmt 1
 4712 1686 464B     		ldr	r3, .L199+32
 4713 1688 FE22     		movs	r2, #254
 4714 168a 9A77     		strb	r2, [r3, #30]
1507:main.c        ****                 myArray[31] = 253;
 4715              		.loc 1 1507 0
 4716 168c 444B     		ldr	r3, .L199+32
 4717 168e FD22     		movs	r2, #253
 4718 1690 DA77     		strb	r2, [r3, #31]
 4719 1692 00E1     		b	.L164
 4720              	.L157:
1508:main.c        ****             }    
1509:main.c        ****         }
1510:main.c        ****         else if (sendKnobs)
 4721              		.loc 1 1510 0
 4722 1694 484B     		ldr	r3, .L199+56
 4723 1696 1B78     		ldrb	r3, [r3]
 4724 1698 DBB2     		uxtb	r3, r3
 4725 169a 002B     		cmp	r3, #0
 4726 169c 69D0     		beq	.L165
1511:main.c        ****         {
1512:main.c        ****             myArray[0] = 3; //sending knob stuff, not a preset send
 4727              		.loc 1 1512 0
 4728 169e 404B     		ldr	r3, .L199+32
 4729 16a0 0322     		movs	r2, #3
 4730 16a2 1A70     		strb	r2, [r3]
 4731              	.LBB26:
1513:main.c        ****             for (int i = 0; i < 8; i++)
 4732              		.loc 1 1513 0
 4733 16a4 0023     		movs	r3, #0
 4734 16a6 7B64     		str	r3, [r7, #68]
 4735 16a8 0AE0     		b	.L166
 4736              	.L167:
1514:main.c        ****             {
1515:main.c        ****                 myArray[i + 1] = macroKnobValues[i];
 4737              		.loc 1 1515 0 discriminator 3
 4738 16aa 7B6C     		ldr	r3, [r7, #68]
 4739 16ac 0133     		adds	r3, r3, #1
 4740 16ae 4349     		ldr	r1, .L199+60
 4741 16b0 7A6C     		ldr	r2, [r7, #68]
 4742 16b2 0A44     		add	r2, r2, r1
 4743 16b4 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4744 16b6 3A4A     		ldr	r2, .L199+32
 4745 16b8 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 112


1513:main.c        ****             for (int i = 0; i < 8; i++)
 4746              		.loc 1 1513 0 discriminator 3
 4747 16ba 7B6C     		ldr	r3, [r7, #68]
 4748 16bc 0133     		adds	r3, r3, #1
 4749 16be 7B64     		str	r3, [r7, #68]
 4750              	.L166:
1513:main.c        ****             for (int i = 0; i < 8; i++)
 4751              		.loc 1 1513 0 is_stmt 0 discriminator 1
 4752 16c0 7B6C     		ldr	r3, [r7, #68]
 4753 16c2 072B     		cmp	r3, #7
 4754 16c4 F1DD     		ble	.L167
 4755              	.LBE26:
 4756              	.LBB27:
1516:main.c        ****             }
1517:main.c        ****             for (int i = 0; i < 4; i++)
 4757              		.loc 1 1517 0 is_stmt 1
 4758 16c6 0023     		movs	r3, #0
 4759 16c8 3B64     		str	r3, [r7, #64]
 4760 16ca 0AE0     		b	.L168
 4761              	.L169:
1518:main.c        ****             {
1519:main.c        ****                 myArray[i + 9] = knobs[i];
 4762              		.loc 1 1519 0 discriminator 3
 4763 16cc 3B6C     		ldr	r3, [r7, #64]
 4764 16ce 0933     		adds	r3, r3, #9
 4765 16d0 3B49     		ldr	r1, .L199+64
 4766 16d2 3A6C     		ldr	r2, [r7, #64]
 4767 16d4 0A44     		add	r2, r2, r1
 4768 16d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4769 16d8 314A     		ldr	r2, .L199+32
 4770 16da D154     		strb	r1, [r2, r3]
1517:main.c        ****             {
 4771              		.loc 1 1517 0 discriminator 3
 4772 16dc 3B6C     		ldr	r3, [r7, #64]
 4773 16de 0133     		adds	r3, r3, #1
 4774 16e0 3B64     		str	r3, [r7, #64]
 4775              	.L168:
1517:main.c        ****             {
 4776              		.loc 1 1517 0 is_stmt 0 discriminator 1
 4777 16e2 3B6C     		ldr	r3, [r7, #64]
 4778 16e4 032B     		cmp	r3, #3
 4779 16e6 F1DD     		ble	.L169
 4780              	.LBE27:
 4781              	.LBB28:
1520:main.c        ****             }
1521:main.c        ****             for (int i = 0; i < 10; i++)
 4782              		.loc 1 1521 0 is_stmt 1
 4783 16e8 0023     		movs	r3, #0
 4784 16ea FB63     		str	r3, [r7, #60]
 4785 16ec 0AE0     		b	.L170
 4786              	.L171:
1522:main.c        ****             {
1523:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 4787              		.loc 1 1523 0 discriminator 3
 4788 16ee FB6B     		ldr	r3, [r7, #60]
 4789 16f0 0D33     		adds	r3, r3, #13
 4790 16f2 3449     		ldr	r1, .L199+68
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 113


 4791 16f4 FA6B     		ldr	r2, [r7, #60]
 4792 16f6 0A44     		add	r2, r2, r1
 4793 16f8 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 4794 16fa 294A     		ldr	r2, .L199+32
 4795 16fc D154     		strb	r1, [r2, r3]
1521:main.c        ****             {
 4796              		.loc 1 1521 0 discriminator 3
 4797 16fe FB6B     		ldr	r3, [r7, #60]
 4798 1700 0133     		adds	r3, r3, #1
 4799 1702 FB63     		str	r3, [r7, #60]
 4800              	.L170:
1521:main.c        ****             {
 4801              		.loc 1 1521 0 is_stmt 0 discriminator 1
 4802 1704 FB6B     		ldr	r3, [r7, #60]
 4803 1706 092B     		cmp	r3, #9
 4804 1708 F1DD     		ble	.L171
 4805              	.LBE28:
1524:main.c        ****             }
1525:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4806              		.loc 1 1525 0 is_stmt 1
 4807 170a 2F4B     		ldr	r3, .L199+72
 4808 170c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4809 170e 1B01     		lsls	r3, r3, #4
 4810 1710 5AB2     		sxtb	r2, r3
 4811 1712 2E4B     		ldr	r3, .L199+76
 4812 1714 1B68     		ldr	r3, [r3]
 4813 1716 5BB2     		sxtb	r3, r3
 4814 1718 1343     		orrs	r3, r3, r2
 4815 171a 5AB2     		sxtb	r2, r3
 4816 171c 2C4B     		ldr	r3, .L199+80
 4817 171e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4818 1720 5B01     		lsls	r3, r3, #5
 4819 1722 5BB2     		sxtb	r3, r3
 4820 1724 1343     		orrs	r3, r3, r2
 4821 1726 5AB2     		sxtb	r2, r3
 4822 1728 2A4B     		ldr	r3, .L199+84
 4823 172a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4824 172c 9B01     		lsls	r3, r3, #6
 4825 172e 5BB2     		sxtb	r3, r3
 4826 1730 1343     		orrs	r3, r3, r2
 4827 1732 5BB2     		sxtb	r3, r3
 4828 1734 DAB2     		uxtb	r2, r3
 4829 1736 1A4B     		ldr	r3, .L199+32
 4830 1738 1A76     		strb	r2, [r3, #24]
1526:main.c        ****             myArray[25] = patchNum;
 4831              		.loc 1 1526 0
 4832 173a 274B     		ldr	r3, .L199+88
 4833 173c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4834 173e 184B     		ldr	r3, .L199+32
 4835 1740 5A76     		strb	r2, [r3, #25]
1527:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 4836              		.loc 1 1527 0
 4837 1742 264B     		ldr	r3, .L199+92
 4838 1744 B3F90030 		ldrsh	r3, [r3]
 4839 1748 1B12     		asrs	r3, r3, #8
 4840 174a 1BB2     		sxth	r3, r3
 4841 174c DAB2     		uxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 114


 4842 174e 144B     		ldr	r3, .L199+32
 4843 1750 9A76     		strb	r2, [r3, #26]
1528:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 4844              		.loc 1 1528 0
 4845 1752 224B     		ldr	r3, .L199+92
 4846 1754 B3F90030 		ldrsh	r3, [r3]
 4847 1758 DAB2     		uxtb	r2, r3
 4848 175a 114B     		ldr	r3, .L199+32
 4849 175c DA76     		strb	r2, [r3, #27]
1529:main.c        ****             myArray[30] = 254;
 4850              		.loc 1 1529 0
 4851 175e 104B     		ldr	r3, .L199+32
 4852 1760 FE22     		movs	r2, #254
 4853 1762 9A77     		strb	r2, [r3, #30]
1530:main.c        ****             myArray[31] = 253;
 4854              		.loc 1 1530 0
 4855 1764 0E4B     		ldr	r3, .L199+32
 4856 1766 FD22     		movs	r2, #253
 4857 1768 DA77     		strb	r2, [r3, #31]
1531:main.c        ****             
1532:main.c        ****             
1533:main.c        ****             sendKnobs = 0;
 4858              		.loc 1 1533 0
 4859 176a 134B     		ldr	r3, .L199+56
 4860 176c 0022     		movs	r2, #0
 4861 176e 1A70     		strb	r2, [r3]
 4862 1770 91E0     		b	.L164
 4863              	.L165:
1534:main.c        ****         }
1535:main.c        ****         else
1536:main.c        ****         {
1537:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 4864              		.loc 1 1537 0
 4865 1772 0B4B     		ldr	r3, .L199+32
 4866 1774 0122     		movs	r2, #1
 4867 1776 1A70     		strb	r2, [r3]
 4868              	.LBB29:
1538:main.c        ****             for (int i = 0; i < 12; i++)
 4869              		.loc 1 1538 0
 4870 1778 0023     		movs	r3, #0
 4871 177a BB63     		str	r3, [r7, #56]
 4872 177c 55E0     		b	.L172
 4873              	.L200:
 4874 177e 00BF     		.align	2
 4875              	.L199:
 4876 1780 00000000 		.word	encoderNum
 4877 1784 00000000 		.word	encoderVal
 4878 1788 00000000 		.word	USB_check_flag
 4879 178c 00000000 		.word	USB_active
 4880 1790 00000000 		.word	midiSent
 4881 1794 00000000 		.word	midiOverflow
 4882 1798 00000000 		.word	sendingMessage
 4883 179c 00000000 		.word	sendMessageEnd
 4884 17a0 00000000 		.word	myArray
 4885 17a4 00000000 		.word	presetNumberToWrite
 4886 17a8 00000000 		.word	currentPresetSelection
 4887 17ac 00000000 		.word	messageArraySendCount
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 115


 4888 17b0 00000000 		.word	messageArraySize
 4889 17b4 00000000 		.word	presetArray
 4890 17b8 00000000 		.word	sendKnobs
 4891 17bc 00000000 		.word	macroKnobValues
 4892 17c0 00000000 		.word	knobs
 4893 17c4 00000000 		.word	pedals8bit
 4894 17c8 00000000 		.word	voice
 4895 17cc 00000000 		.word	octave
 4896 17d0 00000000 		.word	dualSlider
 4897 17d4 00000000 		.word	neck
 4898 17d8 00000000 		.word	patchNum
 4899 17dc 00000000 		.word	processed_volumePedal
 4900              	.L173:
 4901              	.LBB30:
1539:main.c        ****             {
1540:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 4902              		.loc 1 1540 0 discriminator 3
 4903 17e0 674A     		ldr	r2, .L201
 4904 17e2 BB6B     		ldr	r3, [r7, #56]
 4905 17e4 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4906 17e8 4FF08841 		mov	r1, #1140850688
 4907 17ec 1846     		mov	r0, r3
 4908 17ee FFF7FEFF 		bl	__aeabi_fmul
 4909 17f2 0346     		mov	r3, r0
 4910 17f4 1846     		mov	r0, r3
 4911 17f6 FFF7FEFF 		bl	roundf
 4912 17fa 0346     		mov	r3, r0
 4913 17fc 1846     		mov	r0, r3
 4914 17fe FFF7FEFF 		bl	__aeabi_f2iz
 4915 1802 0346     		mov	r3, r0
 4916 1804 3B61     		str	r3, [r7, #16]
1541:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 4917              		.loc 1 1541 0 discriminator 3
 4918 1806 BB6B     		ldr	r3, [r7, #56]
 4919 1808 5B00     		lsls	r3, r3, #1
 4920 180a 0133     		adds	r3, r3, #1
 4921 180c 3A69     		ldr	r2, [r7, #16]
 4922 180e 1212     		asrs	r2, r2, #8
 4923 1810 D1B2     		uxtb	r1, r2
 4924 1812 5C4A     		ldr	r2, .L201+4
 4925 1814 D154     		strb	r1, [r2, r3]
1542:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 4926              		.loc 1 1542 0 discriminator 3
 4927 1816 BB6B     		ldr	r3, [r7, #56]
 4928 1818 0133     		adds	r3, r3, #1
 4929 181a 5B00     		lsls	r3, r3, #1
 4930 181c 3A69     		ldr	r2, [r7, #16]
 4931 181e D1B2     		uxtb	r1, r2
 4932 1820 584A     		ldr	r2, .L201+4
 4933 1822 D154     		strb	r1, [r2, r3]
 4934              	.LBE30:
1538:main.c        ****             {
 4935              		.loc 1 1538 0 discriminator 3
 4936 1824 BB6B     		ldr	r3, [r7, #56]
 4937 1826 0133     		adds	r3, r3, #1
 4938 1828 BB63     		str	r3, [r7, #56]
 4939              	.L172:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 116


1538:main.c        ****             {
 4940              		.loc 1 1538 0 is_stmt 0 discriminator 1
 4941 182a BB6B     		ldr	r3, [r7, #56]
 4942 182c 0B2B     		cmp	r3, #11
 4943 182e D7DD     		ble	.L173
 4944              	.LBE29:
1543:main.c        ****             }
1544:main.c        ****             
1545:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (neck << 6);
 4945              		.loc 1 1545 0 is_stmt 1
 4946 1830 554B     		ldr	r3, .L201+8
 4947 1832 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4948 1834 1B01     		lsls	r3, r3, #4
 4949 1836 5AB2     		sxtb	r2, r3
 4950 1838 544B     		ldr	r3, .L201+12
 4951 183a 1B68     		ldr	r3, [r3]
 4952 183c 5BB2     		sxtb	r3, r3
 4953 183e 1343     		orrs	r3, r3, r2
 4954 1840 5AB2     		sxtb	r2, r3
 4955 1842 534B     		ldr	r3, .L201+16
 4956 1844 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4957 1846 5B01     		lsls	r3, r3, #5
 4958 1848 5BB2     		sxtb	r3, r3
 4959 184a 1343     		orrs	r3, r3, r2
 4960 184c 5AB2     		sxtb	r2, r3
 4961 184e 514B     		ldr	r3, .L201+20
 4962 1850 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4963 1852 9B01     		lsls	r3, r3, #6
 4964 1854 5BB2     		sxtb	r3, r3
 4965 1856 1343     		orrs	r3, r3, r2
 4966 1858 5BB2     		sxtb	r3, r3
 4967 185a DAB2     		uxtb	r2, r3
 4968 185c 494B     		ldr	r3, .L201+4
 4969 185e 1A76     		strb	r2, [r3, #24]
1546:main.c        ****             /*
1547:main.c        ****             for (int i = 0; i < 4; i++)
1548:main.c        ****             {
1549:main.c        ****                 myArray[i+49] = knobs[i];
1550:main.c        ****             }
1551:main.c        ****             */
1552:main.c        ****             myArray[25] = patchNum;
 4970              		.loc 1 1552 0
 4971 1860 4D4B     		ldr	r3, .L201+24
 4972 1862 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4973 1864 474B     		ldr	r3, .L201+4
 4974 1866 5A76     		strb	r2, [r3, #25]
1553:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 4975              		.loc 1 1553 0
 4976 1868 4C4B     		ldr	r3, .L201+28
 4977 186a B3F90030 		ldrsh	r3, [r3]
 4978 186e 1B12     		asrs	r3, r3, #8
 4979 1870 1BB2     		sxth	r3, r3
 4980 1872 DAB2     		uxtb	r2, r3
 4981 1874 434B     		ldr	r3, .L201+4
 4982 1876 9A76     		strb	r2, [r3, #26]
1554:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 4983              		.loc 1 1554 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 117


 4984 1878 484B     		ldr	r3, .L201+28
 4985 187a B3F90030 		ldrsh	r3, [r3]
 4986 187e DAB2     		uxtb	r2, r3
 4987 1880 404B     		ldr	r3, .L201+4
 4988 1882 DA76     		strb	r2, [r3, #27]
1555:main.c        ****             myArray[30] = 254;
 4989              		.loc 1 1555 0
 4990 1884 3F4B     		ldr	r3, .L201+4
 4991 1886 FE22     		movs	r2, #254
 4992 1888 9A77     		strb	r2, [r3, #30]
1556:main.c        ****             myArray[31] = 253;
 4993              		.loc 1 1556 0
 4994 188a 3E4B     		ldr	r3, .L201+4
 4995 188c FD22     		movs	r2, #253
 4996 188e DA77     		strb	r2, [r3, #31]
1557:main.c        ****             
1558:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 4997              		.loc 1 1558 0
 4998 1890 434B     		ldr	r3, .L201+32
 4999 1892 0122     		movs	r2, #1
 5000 1894 1A70     		strb	r2, [r3]
 5001              	.L164:
1559:main.c        ****             /*
1560:main.c        ****             for (int i = 0; i < 16; i++)
1561:main.c        ****             {
1562:main.c        ****                 myArray[i+56] = encoderVal[i];
1563:main.c        ****             }
1564:main.c        ****             */
1565:main.c        ****         }
1566:main.c        **** 
1567:main.c        ****         
1568:main.c        **** 
1569:main.c        **** /*
1570:main.c        ****         for(int i = 0; i < myBufferSize; i++)
1571:main.c        ****         {
1572:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
1573:main.c        ****         }
1574:main.c        ****     */    
1575:main.c        ****         
1576:main.c        **** 
1577:main.c        ****        
1578:main.c        ****         
1579:main.c        ****         
1580:main.c        ****         //parse input from synth board (names)
1581:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 5002              		.loc 1 1581 0
 5003 1896 434B     		ldr	r3, .L201+36
 5004 1898 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5005 189a FD2B     		cmp	r3, #253
 5006 189c 5BD1     		bne	.L174
 5007              		.loc 1 1581 0 is_stmt 0 discriminator 1
 5008 189e 414B     		ldr	r3, .L201+36
 5009 18a0 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 5010 18a2 FE2B     		cmp	r3, #254
 5011 18a4 57D1     		bne	.L174
 5012              	.LBB31:
1582:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 118


1583:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 5013              		.loc 1 1583 0 is_stmt 1
 5014 18a6 3F4B     		ldr	r3, .L201+36
 5015 18a8 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5016 18aa FB60     		str	r3, [r7, #12]
1584:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 5017              		.loc 1 1584 0
 5018 18ac 3D4B     		ldr	r3, .L201+36
 5019 18ae 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 5020 18b0 BB60     		str	r3, [r7, #8]
1585:main.c        ****             int bufferPointer = 2;
 5021              		.loc 1 1585 0
 5022 18b2 0223     		movs	r3, #2
 5023 18b4 7B63     		str	r3, [r7, #52]
 5024              	.LBB32:
1586:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5025              		.loc 1 1586 0
 5026 18b6 0023     		movs	r3, #0
 5027 18b8 3B63     		str	r3, [r7, #48]
 5028 18ba 14E0     		b	.L175
 5029              	.L176:
1587:main.c        ****             {
1588:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 5030              		.loc 1 1588 0 discriminator 3
 5031 18bc 394A     		ldr	r2, .L201+36
 5032 18be 7B6B     		ldr	r3, [r7, #52]
 5033 18c0 1344     		add	r3, r3, r2
 5034 18c2 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5035 18c4 3849     		ldr	r1, .L201+40
 5036 18c6 FA68     		ldr	r2, [r7, #12]
 5037 18c8 1346     		mov	r3, r2
 5038 18ca DB00     		lsls	r3, r3, #3
 5039 18cc 9B1A     		subs	r3, r3, r2
 5040 18ce 5B00     		lsls	r3, r3, #1
 5041 18d0 CA18     		adds	r2, r1, r3
 5042 18d2 3B6B     		ldr	r3, [r7, #48]
 5043 18d4 1344     		add	r3, r3, r2
 5044 18d6 0246     		mov	r2, r0
 5045 18d8 1A70     		strb	r2, [r3]
1589:main.c        ****                 bufferPointer++;
 5046              		.loc 1 1589 0 discriminator 3
 5047 18da 7B6B     		ldr	r3, [r7, #52]
 5048 18dc 0133     		adds	r3, r3, #1
 5049 18de 7B63     		str	r3, [r7, #52]
1586:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5050              		.loc 1 1586 0 discriminator 3
 5051 18e0 3B6B     		ldr	r3, [r7, #48]
 5052 18e2 0133     		adds	r3, r3, #1
 5053 18e4 3B63     		str	r3, [r7, #48]
 5054              	.L175:
1586:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5055              		.loc 1 1586 0 is_stmt 0 discriminator 1
 5056 18e6 3B6B     		ldr	r3, [r7, #48]
 5057 18e8 0D2B     		cmp	r3, #13
 5058 18ea E7DD     		ble	.L176
 5059              	.LBE32:
1590:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 119


1591:main.c        ****             bufferPointer = 17;
 5060              		.loc 1 1591 0 is_stmt 1
 5061 18ec 1123     		movs	r3, #17
 5062 18ee 7B63     		str	r3, [r7, #52]
 5063              	.LBB33:
1592:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5064              		.loc 1 1592 0
 5065 18f0 0023     		movs	r3, #0
 5066 18f2 FB62     		str	r3, [r7, #44]
 5067 18f4 1BE0     		b	.L177
 5068              	.L178:
1593:main.c        ****             {
1594:main.c        ****                 macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[buffer
 5069              		.loc 1 1594 0 discriminator 3
 5070 18f6 2B4A     		ldr	r2, .L201+36
 5071 18f8 7B6B     		ldr	r3, [r7, #52]
 5072 18fa 1344     		add	r3, r3, r2
 5073 18fc 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 5074 18fe 2B48     		ldr	r0, .L201+44
 5075 1900 BB68     		ldr	r3, [r7, #8]
 5076 1902 F968     		ldr	r1, [r7, #12]
 5077 1904 1A46     		mov	r2, r3
 5078 1906 D200     		lsls	r2, r2, #3
 5079 1908 D21A     		subs	r2, r2, r3
 5080 190a 5300     		lsls	r3, r2, #1
 5081 190c 1A46     		mov	r2, r3
 5082 190e 0B46     		mov	r3, r1
 5083 1910 DB00     		lsls	r3, r3, #3
 5084 1912 5B1A     		subs	r3, r3, r1
 5085 1914 1B01     		lsls	r3, r3, #4
 5086 1916 1344     		add	r3, r3, r2
 5087 1918 C218     		adds	r2, r0, r3
 5088 191a FB6A     		ldr	r3, [r7, #44]
 5089 191c 1344     		add	r3, r3, r2
 5090 191e 2246     		mov	r2, r4
 5091 1920 1A70     		strb	r2, [r3]
1595:main.c        ****                 bufferPointer++;
 5092              		.loc 1 1595 0 discriminator 3
 5093 1922 7B6B     		ldr	r3, [r7, #52]
 5094 1924 0133     		adds	r3, r3, #1
 5095 1926 7B63     		str	r3, [r7, #52]
1592:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5096              		.loc 1 1592 0 discriminator 3
 5097 1928 FB6A     		ldr	r3, [r7, #44]
 5098 192a 0133     		adds	r3, r3, #1
 5099 192c FB62     		str	r3, [r7, #44]
 5100              	.L177:
1592:main.c        ****             for (int i = 0; i < NAME_LENGTH_IN_BYTES; i++)
 5101              		.loc 1 1592 0 is_stmt 0 discriminator 1
 5102 192e FB6A     		ldr	r3, [r7, #44]
 5103 1930 0D2B     		cmp	r3, #13
 5104 1932 E0DD     		ble	.L178
 5105              	.LBE33:
1596:main.c        ****             }
1597:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 5106              		.loc 1 1597 0 is_stmt 1
 5107 1934 184B     		ldr	r3, .L201+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 120


 5108 1936 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5109 1938 1A46     		mov	r2, r3
 5110 193a FB68     		ldr	r3, [r7, #12]
 5111 193c 9A42     		cmp	r2, r3
 5112 193e 0AD1     		bne	.L174
 5113              		.loc 1 1597 0 is_stmt 0 discriminator 1
 5114 1940 BB68     		ldr	r3, [r7, #8]
 5115 1942 072B     		cmp	r3, #7
 5116 1944 07D1     		bne	.L174
 5117              		.loc 1 1597 0 discriminator 2
 5118 1946 1A4A     		ldr	r2, .L201+48
 5119 1948 FB68     		ldr	r3, [r7, #12]
 5120 194a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5121 194e 002B     		cmp	r3, #0
 5122 1950 01D1     		bne	.L174
1598:main.c        ****             {
1599:main.c        ****                 displayCurrentPresetName();
 5123              		.loc 1 1599 0 is_stmt 1
 5124 1952 FFF7FEFF 		bl	displayCurrentPresetName
 5125              	.L174:
 5126              	.LBE31:
1600:main.c        ****             }
1601:main.c        ****         }
1602:main.c        ****         
1603:main.c        ****         SPIM_1_ClearRxBuffer();
 5127              		.loc 1 1603 0
 5128 1956 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1604:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 5129              		.loc 1 1604 0
 5130 195a 164B     		ldr	r3, .L201+52
 5131 195c 1B78     		ldrb	r3, [r3]
 5132 195e DBB2     		uxtb	r3, r3
 5133 1960 0121     		movs	r1, #1
 5134 1962 1846     		mov	r0, r3
 5135 1964 FFF7FEFF 		bl	CyDmaChEnable
1605:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 5136              		.loc 1 1605 0
 5137 1968 134B     		ldr	r3, .L201+56
 5138 196a 1B78     		ldrb	r3, [r3]
 5139 196c DBB2     		uxtb	r3, r3
 5140 196e 0121     		movs	r1, #1
 5141 1970 1846     		mov	r0, r3
 5142 1972 FFF7FEFF 		bl	CyDmaChEnable
1606:main.c        ****         
1607:main.c        ****         testpin6_Write(0);
 5143              		.loc 1 1607 0
 5144 1976 0020     		movs	r0, #0
 5145 1978 FFF7FEFF 		bl	testpin6_Write
1608:main.c        ****        
1609:main.c        **** 
1610:main.c        ****      }
 5146              		.loc 1 1610 0
 5147 197c FEF70CBD 		b	.L179
 5148              	.L202:
 5149              		.align	2
 5150              	.L201:
 5151 1980 00000000 		.word	stringMIDI
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 121


 5152 1984 00000000 		.word	myArray
 5153 1988 00000000 		.word	voice
 5154 198c 00000000 		.word	octave
 5155 1990 00000000 		.word	dualSlider
 5156 1994 00000000 		.word	neck
 5157 1998 00000000 		.word	patchNum
 5158 199c 00000000 		.word	processed_volumePedal
 5159 19a0 00000000 		.word	sendKnobs
 5160 19a4 00000000 		.word	inBuffer
 5161 19a8 00000000 		.word	presetNamesArray
 5162 19ac 00000000 		.word	macroNamesArray
 5163 19b0 00000000 		.word	presetAlreadyDisplayed
 5164 19b4 00000000 		.word	rx3Channel
 5165 19b8 00000000 		.word	txChannel
 5166              		.cfi_endproc
 5167              	.LFE76:
 5168              		.size	main, .-main
 5169              		.section	.text.DmaTxConfiguration,"ax",%progbits
 5170              		.align	2
 5171              		.global	DmaTxConfiguration
 5172              		.thumb
 5173              		.thumb_func
 5174              		.type	DmaTxConfiguration, %function
 5175              	DmaTxConfiguration:
 5176              	.LFB77:
1611:main.c        **** }
1612:main.c        **** 
1613:main.c        **** void DmaTxConfiguration()
1614:main.c        **** {
 5177              		.loc 1 1614 0
 5178              		.cfi_startproc
 5179              		@ args = 0, pretend = 0, frame = 0
 5180              		@ frame_needed = 1, uses_anonymous_args = 0
 5181 0000 80B5     		push	{r7, lr}
 5182              		.cfi_def_cfa_offset 8
 5183              		.cfi_offset 7, -8
 5184              		.cfi_offset 14, -4
 5185 0002 00AF     		add	r7, sp, #0
 5186              		.cfi_def_cfa_register 7
1615:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1616:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 5187              		.loc 1 1616 0
 5188 0004 4FF48043 		mov	r3, #16384
 5189 0008 41F6FF72 		movw	r2, #8191
 5190 000c 0121     		movs	r1, #1
 5191 000e 0120     		movs	r0, #1
 5192 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 5193 0014 0346     		mov	r3, r0
 5194 0016 1A46     		mov	r2, r3
 5195 0018 124B     		ldr	r3, .L204
 5196 001a 1A70     		strb	r2, [r3]
1617:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1618:main.c        **** 
1619:main.c        ****     txTD = CyDmaTdAllocate();
 5197              		.loc 1 1619 0
 5198 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5199 0020 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 122


 5200 0022 1A46     		mov	r2, r3
 5201 0024 104B     		ldr	r3, .L204+4
 5202 0026 1A70     		strb	r2, [r3]
1620:main.c        **** 
1621:main.c        ****     /* Configure this Td as follows:
1622:main.c        ****     *  - Increment the source address, but not the destination address   
1623:main.c        ****     */
1624:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 5203              		.loc 1 1624 0
 5204 0028 0F4B     		ldr	r3, .L204+4
 5205 002a 1B78     		ldrb	r3, [r3]
 5206 002c D8B2     		uxtb	r0, r3
 5207 002e 0123     		movs	r3, #1
 5208 0030 FE22     		movs	r2, #254
 5209 0032 2021     		movs	r1, #32
 5210 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1625:main.c        **** 
1626:main.c        ****     /* From the memory to the SPIM */
1627:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 5211              		.loc 1 1627 0
 5212 0038 0B4B     		ldr	r3, .L204+4
 5213 003a 1B78     		ldrb	r3, [r3]
 5214 003c DBB2     		uxtb	r3, r3
 5215 003e 0B4A     		ldr	r2, .L204+8
 5216 0040 91B2     		uxth	r1, r2
 5217 0042 46F24242 		movw	r2, #25666
 5218 0046 1846     		mov	r0, r3
 5219 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1628:main.c        ****     
1629:main.c        ****     /* Associate the TD with the channel */
1630:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 5220              		.loc 1 1630 0
 5221 004c 054B     		ldr	r3, .L204
 5222 004e 1B78     		ldrb	r3, [r3]
 5223 0050 DAB2     		uxtb	r2, r3
 5224 0052 054B     		ldr	r3, .L204+4
 5225 0054 1B78     		ldrb	r3, [r3]
 5226 0056 DBB2     		uxtb	r3, r3
 5227 0058 1946     		mov	r1, r3
 5228 005a 1046     		mov	r0, r2
 5229 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1631:main.c        ****    
1632:main.c        **** } 
 5230              		.loc 1 1632 0
 5231 0060 00BF     		nop
 5232 0062 80BD     		pop	{r7, pc}
 5233              	.L205:
 5234              		.align	2
 5235              	.L204:
 5236 0064 00000000 		.word	txChannel
 5237 0068 00000000 		.word	txTD
 5238 006c 00000000 		.word	myArray
 5239              		.cfi_endproc
 5240              	.LFE77:
 5241              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 5242              		.section	.text.DmaRxConfiguration,"ax",%progbits
 5243              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 123


 5244              		.global	DmaRxConfiguration
 5245              		.thumb
 5246              		.thumb_func
 5247              		.type	DmaRxConfiguration, %function
 5248              	DmaRxConfiguration:
 5249              	.LFB78:
1633:main.c        **** 
1634:main.c        **** void DmaRxConfiguration()
1635:main.c        **** { 
 5250              		.loc 1 1635 0
 5251              		.cfi_startproc
 5252              		@ args = 0, pretend = 0, frame = 0
 5253              		@ frame_needed = 1, uses_anonymous_args = 0
 5254 0000 80B5     		push	{r7, lr}
 5255              		.cfi_def_cfa_offset 8
 5256              		.cfi_offset 7, -8
 5257              		.cfi_offset 14, -4
 5258 0002 00AF     		add	r7, sp, #0
 5259              		.cfi_def_cfa_register 7
1636:main.c        ****     //pluck dma
1637:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5260              		.loc 1 1637 0
 5261 0004 41F6FF73 		movw	r3, #8191
 5262 0008 4FF48042 		mov	r2, #16384
 5263 000c 0121     		movs	r1, #1
 5264 000e 0120     		movs	r0, #1
 5265 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 5266 0014 0346     		mov	r3, r0
 5267 0016 1A46     		mov	r2, r3
 5268 0018 4A4B     		ldr	r3, .L207
 5269 001a 1A70     		strb	r2, [r3]
1638:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1639:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 5270              		.loc 1 1639 0
 5271 001c FFF7FEFF 		bl	CyDmaTdAllocate
 5272 0020 0346     		mov	r3, r0
 5273 0022 1A46     		mov	r2, r3
 5274 0024 484B     		ldr	r3, .L207+4
 5275 0026 1A70     		strb	r2, [r3]
1640:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 5276              		.loc 1 1640 0
 5277 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 5278 002c 0346     		mov	r3, r0
 5279 002e 1A46     		mov	r2, r3
 5280 0030 454B     		ldr	r3, .L207+4
 5281 0032 5A70     		strb	r2, [r3, #1]
1641:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 5282              		.loc 1 1641 0
 5283 0034 444B     		ldr	r3, .L207+4
 5284 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5285 0038 0223     		movs	r3, #2
 5286 003a FE22     		movs	r2, #254
 5287 003c 1A21     		movs	r1, #26
 5288 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1642:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 5289              		.loc 1 1642 0
 5290 0042 414B     		ldr	r3, .L207+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 124


 5291 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5292 0046 0223     		movs	r3, #2
 5293 0048 FE22     		movs	r2, #254
 5294 004a 1A21     		movs	r1, #26
 5295 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1643:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 5296              		.loc 1 1643 0
 5297 0050 3D4B     		ldr	r3, .L207+4
 5298 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5299 0054 3D4A     		ldr	r2, .L207+8
 5300 0056 92B2     		uxth	r2, r2
 5301 0058 46F25451 		movw	r1, #25940
 5302 005c 1846     		mov	r0, r3
 5303 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1644:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 5304              		.loc 1 1644 0
 5305 0062 394B     		ldr	r3, .L207+4
 5306 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5307 0066 3A4A     		ldr	r2, .L207+12
 5308 0068 92B2     		uxth	r2, r2
 5309 006a 46F25451 		movw	r1, #25940
 5310 006e 1846     		mov	r0, r3
 5311 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1645:main.c        **** 
1646:main.c        ****     //bar dma
1647:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5312              		.loc 1 1647 0
 5313 0074 41F6FF73 		movw	r3, #8191
 5314 0078 4FF48042 		mov	r2, #16384
 5315 007c 0121     		movs	r1, #1
 5316 007e 0120     		movs	r0, #1
 5317 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 5318 0084 0346     		mov	r3, r0
 5319 0086 1A46     		mov	r2, r3
 5320 0088 324B     		ldr	r3, .L207+16
 5321 008a 1A70     		strb	r2, [r3]
1648:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1649:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 5322              		.loc 1 1649 0
 5323 008c FFF7FEFF 		bl	CyDmaTdAllocate
 5324 0090 0346     		mov	r3, r0
 5325 0092 1A46     		mov	r2, r3
 5326 0094 304B     		ldr	r3, .L207+20
 5327 0096 1A70     		strb	r2, [r3]
1650:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 5328              		.loc 1 1650 0
 5329 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 5330 009c 0346     		mov	r3, r0
 5331 009e 1A46     		mov	r2, r3
 5332 00a0 2D4B     		ldr	r3, .L207+20
 5333 00a2 5A70     		strb	r2, [r3, #1]
1651:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5334              		.loc 1 1651 0
 5335 00a4 2C4B     		ldr	r3, .L207+20
 5336 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 5337 00a8 0623     		movs	r3, #6
 5338 00aa FE22     		movs	r2, #254
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 125


 5339 00ac 0821     		movs	r1, #8
 5340 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1652:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 5341              		.loc 1 1652 0
 5342 00b2 294B     		ldr	r3, .L207+20
 5343 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 5344 00b6 0623     		movs	r3, #6
 5345 00b8 FE22     		movs	r2, #254
 5346 00ba 0821     		movs	r1, #8
 5347 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1653:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 5348              		.loc 1 1653 0
 5349 00c0 254B     		ldr	r3, .L207+20
 5350 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5351 00c4 254A     		ldr	r2, .L207+24
 5352 00c6 92B2     		uxth	r2, r2
 5353 00c8 46F25751 		movw	r1, #25943
 5354 00cc 1846     		mov	r0, r3
 5355 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1654:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 5356              		.loc 1 1654 0
 5357 00d2 214B     		ldr	r3, .L207+20
 5358 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 5359 00d6 224A     		ldr	r2, .L207+28
 5360 00d8 92B2     		uxth	r2, r2
 5361 00da 46F25751 		movw	r1, #25943
 5362 00de 1846     		mov	r0, r3
 5363 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1655:main.c        ****     
1656:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1657:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 5364              		.loc 1 1657 0
 5365 00e4 41F6FF73 		movw	r3, #8191
 5366 00e8 4FF48042 		mov	r2, #16384
 5367 00ec 0121     		movs	r1, #1
 5368 00ee 0120     		movs	r0, #1
 5369 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 5370 00f4 0346     		mov	r3, r0
 5371 00f6 1A46     		mov	r2, r3
 5372 00f8 1A4B     		ldr	r3, .L207+32
 5373 00fa 1A70     		strb	r2, [r3]
1658:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1659:main.c        **** 
1660:main.c        ****     rx3TD = CyDmaTdAllocate();
 5374              		.loc 1 1660 0
 5375 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 5376 0100 0346     		mov	r3, r0
 5377 0102 1A46     		mov	r2, r3
 5378 0104 184B     		ldr	r3, .L207+36
 5379 0106 1A70     		strb	r2, [r3]
1661:main.c        ****     
1662:main.c        ****     /* Configure this Td as follows:
1663:main.c        ****     *  - Increment the destination address, but not the source address
1664:main.c        ****     */
1665:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 5380              		.loc 1 1665 0
 5381 0108 174B     		ldr	r3, .L207+36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 126


 5382 010a 1B78     		ldrb	r3, [r3]
 5383 010c D8B2     		uxtb	r0, r3
 5384 010e 0223     		movs	r3, #2
 5385 0110 FE22     		movs	r2, #254
 5386 0112 2021     		movs	r1, #32
 5387 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1666:main.c        **** 
1667:main.c        ****     /* From the SPIM to the memory */
1668:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 5388              		.loc 1 1668 0
 5389 0118 134B     		ldr	r3, .L207+36
 5390 011a 1B78     		ldrb	r3, [r3]
 5391 011c DBB2     		uxtb	r3, r3
 5392 011e 134A     		ldr	r2, .L207+40
 5393 0120 92B2     		uxth	r2, r2
 5394 0122 46F25241 		movw	r1, #25682
 5395 0126 1846     		mov	r0, r3
 5396 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1669:main.c        **** 
1670:main.c        ****     /* Associate the TD with the channel */
1671:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 5397              		.loc 1 1671 0
 5398 012c 0D4B     		ldr	r3, .L207+32
 5399 012e 1B78     		ldrb	r3, [r3]
 5400 0130 DAB2     		uxtb	r2, r3
 5401 0132 0D4B     		ldr	r3, .L207+36
 5402 0134 1B78     		ldrb	r3, [r3]
 5403 0136 DBB2     		uxtb	r3, r3
 5404 0138 1946     		mov	r1, r3
 5405 013a 1046     		mov	r0, r2
 5406 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1672:main.c        **** }
 5407              		.loc 1 1672 0
 5408 0140 00BF     		nop
 5409 0142 80BD     		pop	{r7, pc}
 5410              	.L208:
 5411              		.align	2
 5412              	.L207:
 5413 0144 00000000 		.word	rx1Channel
 5414 0148 00000000 		.word	rx1TD
 5415 014c 00000000 		.word	rxBufferPluck
 5416 0150 1A000000 		.word	rxBufferPluck+26
 5417 0154 00000000 		.word	rx2Channel
 5418 0158 00000000 		.word	rx2TD
 5419 015c 00000000 		.word	rxBufferBar
 5420 0160 08000000 		.word	rxBufferBar+8
 5421 0164 00000000 		.word	rx3Channel
 5422 0168 00000000 		.word	rx3TD
 5423 016c 00000000 		.word	inBuffer
 5424              		.cfi_endproc
 5425              	.LFE78:
 5426              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 5427              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 5428              		.align	2
 5429              		.global	I2C_MasterWriteBlocking
 5430              		.thumb
 5431              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 127


 5432              		.type	I2C_MasterWriteBlocking, %function
 5433              	I2C_MasterWriteBlocking:
 5434              	.LFB79:
1673:main.c        **** 
1674:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1675:main.c        **** {
 5435              		.loc 1 1675 0
 5436              		.cfi_startproc
 5437              		@ args = 0, pretend = 0, frame = 16
 5438              		@ frame_needed = 1, uses_anonymous_args = 0
 5439 0000 80B5     		push	{r7, lr}
 5440              		.cfi_def_cfa_offset 8
 5441              		.cfi_offset 7, -8
 5442              		.cfi_offset 14, -4
 5443 0002 84B0     		sub	sp, sp, #16
 5444              		.cfi_def_cfa_offset 24
 5445 0004 00AF     		add	r7, sp, #0
 5446              		.cfi_def_cfa_register 7
 5447 0006 0346     		mov	r3, r0
 5448 0008 FB71     		strb	r3, [r7, #7]
 5449 000a 0B46     		mov	r3, r1	@ movhi
 5450 000c BB80     		strh	r3, [r7, #4]	@ movhi
 5451 000e 1346     		mov	r3, r2
 5452 0010 BB71     		strb	r3, [r7, #6]
1676:main.c        ****     uint8 volatile status;
1677:main.c        ****     uint32_t timeout = 50000;
 5453              		.loc 1 1677 0
 5454 0012 4CF25033 		movw	r3, #50000
 5455 0016 FB60     		str	r3, [r7, #12]
1678:main.c        ****     status = I2C_1_MasterClearStatus();
 5456              		.loc 1 1678 0
 5457 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5458 001c 0346     		mov	r3, r0
 5459 001e FB72     		strb	r3, [r7, #11]
1679:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5460              		.loc 1 1679 0
 5461 0020 FB7A     		ldrb	r3, [r7, #11]
 5462 0022 DBB2     		uxtb	r3, r3
 5463 0024 5BB2     		sxtb	r3, r3
 5464 0026 002B     		cmp	r3, #0
 5465 0028 3ADB     		blt	.L210
1680:main.c        ****     {
1681:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 5466              		.loc 1 1681 0
 5467 002a BB88     		ldrh	r3, [r7, #4]	@ movhi
 5468 002c DAB2     		uxtb	r2, r3
 5469 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 5470 0030 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5471 0032 2849     		ldr	r1, .L219
 5472 0034 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 5473 0038 0346     		mov	r3, r0
 5474 003a FB72     		strb	r3, [r7, #11]
1682:main.c        ****                                      mode);
1683:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5475              		.loc 1 1683 0
 5476 003c FB7A     		ldrb	r3, [r7, #11]
 5477 003e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 128


 5478 0040 002B     		cmp	r3, #0
 5479 0042 29D1     		bne	.L211
 5480              	.L215:
1684:main.c        ****         {
1685:main.c        ****             /* wait for write complete and no error */
1686:main.c        ****             do
1687:main.c        ****             {
1688:main.c        ****                 status = I2C_1_MasterStatus();
 5481              		.loc 1 1688 0
 5482 0044 FFF7FEFF 		bl	I2C_1_MasterStatus
 5483 0048 0346     		mov	r3, r0
 5484 004a FB72     		strb	r3, [r7, #11]
1689:main.c        ****                 timeout--;
 5485              		.loc 1 1689 0
 5486 004c FB68     		ldr	r3, [r7, #12]
 5487 004e 013B     		subs	r3, r3, #1
 5488 0050 FB60     		str	r3, [r7, #12]
1690:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5489              		.loc 1 1690 0
 5490 0052 FB7A     		ldrb	r3, [r7, #11]
 5491 0054 DBB2     		uxtb	r3, r3
 5492 0056 802B     		cmp	r3, #128
 5493 0058 01D1     		bne	.L212
1691:main.c        ****                 {
1692:main.c        ****                     I2C_reset();
 5494              		.loc 1 1692 0
 5495 005a FFF7FEFF 		bl	I2C_reset
 5496              	.L212:
1693:main.c        ****                 }
1694:main.c        ****                 if (timeout == 0)
 5497              		.loc 1 1694 0
 5498 005e FB68     		ldr	r3, [r7, #12]
 5499 0060 002B     		cmp	r3, #0
 5500 0062 03D1     		bne	.L213
1695:main.c        ****                 {
1696:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5501              		.loc 1 1696 0
 5502 0064 8023     		movs	r3, #128
 5503 0066 FB72     		strb	r3, [r7, #11]
1697:main.c        ****                     I2C_reset();
 5504              		.loc 1 1697 0
 5505 0068 FFF7FEFF 		bl	I2C_reset
 5506              	.L213:
1698:main.c        ****                 }
1699:main.c        ****                 
1700:main.c        ****                 if (status == 0)
 5507              		.loc 1 1700 0
 5508 006c FB7A     		ldrb	r3, [r7, #11]
 5509 006e DBB2     		uxtb	r3, r3
 5510 0070 002B     		cmp	r3, #0
 5511 0072 03D1     		bne	.L214
1701:main.c        ****                 {
1702:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5512              		.loc 1 1702 0
 5513 0074 8023     		movs	r3, #128
 5514 0076 FB72     		strb	r3, [r7, #11]
1703:main.c        ****                     I2C_reset();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 129


 5515              		.loc 1 1703 0
 5516 0078 FFF7FEFF 		bl	I2C_reset
 5517              	.L214:
1704:main.c        ****                 }
1705:main.c        ****                 
1706:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5518              		.loc 1 1706 0
 5519 007c FB7A     		ldrb	r3, [r7, #11]
 5520 007e DBB2     		uxtb	r3, r3
 5521 0080 03F08203 		and	r3, r3, #130
 5522 0084 002B     		cmp	r3, #0
 5523 0086 0BD1     		bne	.L210
 5524              		.loc 1 1706 0 is_stmt 0 discriminator 1
 5525 0088 FB7A     		ldrb	r3, [r7, #11]
 5526 008a DBB2     		uxtb	r3, r3
 5527 008c 002B     		cmp	r3, #0
 5528 008e 07D0     		beq	.L210
 5529              		.loc 1 1706 0 discriminator 2
 5530 0090 FB68     		ldr	r3, [r7, #12]
 5531 0092 002B     		cmp	r3, #0
 5532 0094 D6D1     		bne	.L215
 5533 0096 03E0     		b	.L210
 5534              	.L211:
1707:main.c        ****         }
1708:main.c        ****         else
1709:main.c        ****         {
1710:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1711:main.c        ****             *  I2CM_MasterStatus() error output */
1712:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 5535              		.loc 1 1712 0 is_stmt 1
 5536 0098 8023     		movs	r3, #128
 5537 009a FB72     		strb	r3, [r7, #11]
1713:main.c        ****             I2C_reset();
 5538              		.loc 1 1713 0
 5539 009c FFF7FEFF 		bl	I2C_reset
 5540              	.L210:
1714:main.c        ****         } 
1715:main.c        ****     }  
1716:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5541              		.loc 1 1716 0
 5542 00a0 FB7A     		ldrb	r3, [r7, #11]
 5543 00a2 DBB2     		uxtb	r3, r3
 5544 00a4 03F02003 		and	r3, r3, #32
 5545 00a8 002B     		cmp	r3, #0
 5546 00aa 04D1     		bne	.L216
 5547              		.loc 1 1716 0 is_stmt 0 discriminator 1
 5548 00ac FB7A     		ldrb	r3, [r7, #11]
 5549 00ae DBB2     		uxtb	r3, r3
 5550 00b0 5BB2     		sxtb	r3, r3
 5551 00b2 002B     		cmp	r3, #0
 5552 00b4 08DA     		bge	.L217
 5553              	.L216:
1717:main.c        ****     {
1718:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1719:main.c        ****         i2c_skipped[main_counter] = 1;
 5554              		.loc 1 1719 0 is_stmt 1
 5555 00b6 084B     		ldr	r3, .L219+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 130


 5556 00b8 1B78     		ldrb	r3, [r3]
 5557 00ba DBB2     		uxtb	r3, r3
 5558 00bc 1A46     		mov	r2, r3
 5559 00be 074B     		ldr	r3, .L219+8
 5560 00c0 0121     		movs	r1, #1
 5561 00c2 9954     		strb	r1, [r3, r2]
1720:main.c        ****         I2C_reset();
 5562              		.loc 1 1720 0
 5563 00c4 FFF7FEFF 		bl	I2C_reset
 5564              	.L217:
1721:main.c        ****     }
1722:main.c        ****     return status;
 5565              		.loc 1 1722 0
 5566 00c8 FB7A     		ldrb	r3, [r7, #11]
 5567 00ca DBB2     		uxtb	r3, r3
1723:main.c        **** }
 5568              		.loc 1 1723 0
 5569 00cc 1846     		mov	r0, r3
 5570 00ce 1037     		adds	r7, r7, #16
 5571              		.cfi_def_cfa_offset 8
 5572 00d0 BD46     		mov	sp, r7
 5573              		.cfi_def_cfa_register 13
 5574              		@ sp needed
 5575 00d2 80BD     		pop	{r7, pc}
 5576              	.L220:
 5577              		.align	2
 5578              	.L219:
 5579 00d4 00000000 		.word	I2Cbuff1
 5580 00d8 00000000 		.word	main_counter
 5581 00dc 00000000 		.word	i2c_skipped
 5582              		.cfi_endproc
 5583              	.LFE79:
 5584              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 5585              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 5586              		.align	2
 5587              		.global	I2C_MasterReadBlocking
 5588              		.thumb
 5589              		.thumb_func
 5590              		.type	I2C_MasterReadBlocking, %function
 5591              	I2C_MasterReadBlocking:
 5592              	.LFB80:
1724:main.c        **** 
1725:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1726:main.c        **** {
 5593              		.loc 1 1726 0
 5594              		.cfi_startproc
 5595              		@ args = 0, pretend = 0, frame = 16
 5596              		@ frame_needed = 1, uses_anonymous_args = 0
 5597 0000 80B5     		push	{r7, lr}
 5598              		.cfi_def_cfa_offset 8
 5599              		.cfi_offset 7, -8
 5600              		.cfi_offset 14, -4
 5601 0002 84B0     		sub	sp, sp, #16
 5602              		.cfi_def_cfa_offset 24
 5603 0004 00AF     		add	r7, sp, #0
 5604              		.cfi_def_cfa_register 7
 5605 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 131


 5606 0008 FB71     		strb	r3, [r7, #7]
 5607 000a 0B46     		mov	r3, r1
 5608 000c BB71     		strb	r3, [r7, #6]
 5609 000e 1346     		mov	r3, r2
 5610 0010 7B71     		strb	r3, [r7, #5]
1727:main.c        ****     uint8 volatile status;
1728:main.c        ****     uint32_t timeout = 50000;
 5611              		.loc 1 1728 0
 5612 0012 4CF25033 		movw	r3, #50000
 5613 0016 FB60     		str	r3, [r7, #12]
1729:main.c        ****     status = I2C_1_MasterClearStatus();
 5614              		.loc 1 1729 0
 5615 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 5616 001c 0346     		mov	r3, r0
 5617 001e FB72     		strb	r3, [r7, #11]
1730:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 5618              		.loc 1 1730 0
 5619 0020 FB7A     		ldrb	r3, [r7, #11]
 5620 0022 DBB2     		uxtb	r3, r3
 5621 0024 5BB2     		sxtb	r3, r3
 5622 0026 002B     		cmp	r3, #0
 5623 0028 37DB     		blt	.L222
1731:main.c        ****     {
1732:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 5624              		.loc 1 1732 0
 5625 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 5626 002c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 5627 002e F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 5628 0030 2749     		ldr	r1, .L230
 5629 0032 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 5630 0036 0346     		mov	r3, r0
 5631 0038 FB72     		strb	r3, [r7, #11]
1733:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1734:main.c        ****                                     nbytes, mode); 
1735:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 5632              		.loc 1 1735 0
 5633 003a FB7A     		ldrb	r3, [r7, #11]
 5634 003c DBB2     		uxtb	r3, r3
 5635 003e 002B     		cmp	r3, #0
 5636 0040 27D1     		bne	.L223
 5637              	.L226:
1736:main.c        ****         {
1737:main.c        ****             /* wait for read complete and no error */
1738:main.c        ****             do
1739:main.c        ****             {
1740:main.c        ****                 status = I2C_1_MasterStatus();
 5638              		.loc 1 1740 0
 5639 0042 FFF7FEFF 		bl	I2C_1_MasterStatus
 5640 0046 0346     		mov	r3, r0
 5641 0048 FB72     		strb	r3, [r7, #11]
1741:main.c        ****                 timeout--;
 5642              		.loc 1 1741 0
 5643 004a FB68     		ldr	r3, [r7, #12]
 5644 004c 013B     		subs	r3, r3, #1
 5645 004e FB60     		str	r3, [r7, #12]
1742:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 5646              		.loc 1 1742 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 132


 5647 0050 FB7A     		ldrb	r3, [r7, #11]
 5648 0052 DBB2     		uxtb	r3, r3
 5649 0054 802B     		cmp	r3, #128
 5650 0056 07D1     		bne	.L224
1743:main.c        ****                 {
1744:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 5651              		.loc 1 1744 0
 5652 0058 1E4B     		ldr	r3, .L230+4
 5653 005a 1022     		movs	r2, #16
 5654 005c 1A70     		strb	r2, [r3]
 5655 005e 1E4B     		ldr	r3, .L230+8
 5656 0060 0422     		movs	r2, #4
 5657 0062 1A70     		strb	r2, [r3]
1745:main.c        ****                     I2C_reset();
 5658              		.loc 1 1745 0
 5659 0064 FFF7FEFF 		bl	I2C_reset
 5660              	.L224:
1746:main.c        ****                 }
1747:main.c        ****                 if (timeout == 0)
 5661              		.loc 1 1747 0
 5662 0068 FB68     		ldr	r3, [r7, #12]
 5663 006a 002B     		cmp	r3, #0
 5664 006c 03D1     		bne	.L225
1748:main.c        ****                 {
1749:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 5665              		.loc 1 1749 0
 5666 006e 8023     		movs	r3, #128
 5667 0070 FB72     		strb	r3, [r7, #11]
1750:main.c        ****                     I2C_reset();
 5668              		.loc 1 1750 0
 5669 0072 FFF7FEFF 		bl	I2C_reset
 5670              	.L225:
1751:main.c        ****                 }
1752:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 5671              		.loc 1 1752 0
 5672 0076 FB7A     		ldrb	r3, [r7, #11]
 5673 0078 DBB2     		uxtb	r3, r3
 5674 007a 03F08103 		and	r3, r3, #129
 5675 007e 002B     		cmp	r3, #0
 5676 0080 0BD1     		bne	.L222
 5677              		.loc 1 1752 0 is_stmt 0 discriminator 1
 5678 0082 FB7A     		ldrb	r3, [r7, #11]
 5679 0084 DBB2     		uxtb	r3, r3
 5680 0086 002B     		cmp	r3, #0
 5681 0088 07D0     		beq	.L222
 5682              		.loc 1 1752 0 discriminator 2
 5683 008a FB68     		ldr	r3, [r7, #12]
 5684 008c 002B     		cmp	r3, #0
 5685 008e D8D1     		bne	.L226
 5686 0090 03E0     		b	.L222
 5687              	.L223:
1753:main.c        ****         }
1754:main.c        ****         else
1755:main.c        ****         {
1756:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1757:main.c        ****             *  I2CM_MasterStatus() error output */
1758:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 133


 5688              		.loc 1 1758 0 is_stmt 1
 5689 0092 8023     		movs	r3, #128
 5690 0094 FB72     		strb	r3, [r7, #11]
1759:main.c        ****             I2C_reset();
 5691              		.loc 1 1759 0
 5692 0096 FFF7FEFF 		bl	I2C_reset
 5693              	.L222:
1760:main.c        ****         }
1761:main.c        ****     }
1762:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 5694              		.loc 1 1762 0
 5695 009a FB7A     		ldrb	r3, [r7, #11]
 5696 009c DBB2     		uxtb	r3, r3
 5697 009e 03F02003 		and	r3, r3, #32
 5698 00a2 002B     		cmp	r3, #0
 5699 00a4 04D1     		bne	.L227
 5700              		.loc 1 1762 0 is_stmt 0 discriminator 1
 5701 00a6 FB7A     		ldrb	r3, [r7, #11]
 5702 00a8 DBB2     		uxtb	r3, r3
 5703 00aa 5BB2     		sxtb	r3, r3
 5704 00ac 002B     		cmp	r3, #0
 5705 00ae 08DA     		bge	.L228
 5706              	.L227:
1763:main.c        ****     {
1764:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1765:main.c        ****         i2c_skipped[main_counter] = 1;
 5707              		.loc 1 1765 0 is_stmt 1
 5708 00b0 0A4B     		ldr	r3, .L230+12
 5709 00b2 1B78     		ldrb	r3, [r3]
 5710 00b4 DBB2     		uxtb	r3, r3
 5711 00b6 1A46     		mov	r2, r3
 5712 00b8 094B     		ldr	r3, .L230+16
 5713 00ba 0121     		movs	r1, #1
 5714 00bc 9954     		strb	r1, [r3, r2]
1766:main.c        ****         I2C_reset();
 5715              		.loc 1 1766 0
 5716 00be FFF7FEFF 		bl	I2C_reset
 5717              	.L228:
1767:main.c        ****     }
1768:main.c        ****     return status;
 5718              		.loc 1 1768 0
 5719 00c2 FB7A     		ldrb	r3, [r7, #11]
 5720 00c4 DBB2     		uxtb	r3, r3
1769:main.c        **** }
 5721              		.loc 1 1769 0
 5722 00c6 1846     		mov	r0, r3
 5723 00c8 1037     		adds	r7, r7, #16
 5724              		.cfi_def_cfa_offset 8
 5725 00ca BD46     		mov	sp, r7
 5726              		.cfi_def_cfa_register 13
 5727              		@ sp needed
 5728 00cc 80BD     		pop	{r7, pc}
 5729              	.L231:
 5730 00ce 00BF     		.align	2
 5731              	.L230:
 5732 00d0 00000000 		.word	I2Cbuff2
 5733 00d4 D9490040 		.word	1073760729
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 134


 5734 00d8 D7490040 		.word	1073760727
 5735 00dc 00000000 		.word	main_counter
 5736 00e0 00000000 		.word	i2c_skipped
 5737              		.cfi_endproc
 5738              	.LFE80:
 5739              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 5740              		.section	.text.I2C_reset,"ax",%progbits
 5741              		.align	2
 5742              		.global	I2C_reset
 5743              		.thumb
 5744              		.thumb_func
 5745              		.type	I2C_reset, %function
 5746              	I2C_reset:
 5747              	.LFB81:
1770:main.c        **** 
1771:main.c        **** void I2C_reset(void)
1772:main.c        **** {
 5748              		.loc 1 1772 0
 5749              		.cfi_startproc
 5750              		@ args = 0, pretend = 0, frame = 0
 5751              		@ frame_needed = 1, uses_anonymous_args = 0
 5752 0000 80B5     		push	{r7, lr}
 5753              		.cfi_def_cfa_offset 8
 5754              		.cfi_offset 7, -8
 5755              		.cfi_offset 14, -4
 5756 0002 00AF     		add	r7, sp, #0
 5757              		.cfi_def_cfa_register 7
1773:main.c        ****   I2C_1_Stop();
 5758              		.loc 1 1773 0
 5759 0004 FFF7FEFF 		bl	I2C_1_Stop
1774:main.c        **** 
1775:main.c        ****   /* Disable/clear everything, then reinitialize. */
1776:main.c        **** 
1777:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 5760              		.loc 1 1777 0
 5761 0008 064B     		ldr	r3, .L233
 5762 000a 0022     		movs	r2, #0
 5763 000c 1A70     		strb	r2, [r3]
1778:main.c        **** 
1779:main.c        ****   I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
 5764              		.loc 1 1779 0
 5765 000e 064B     		ldr	r3, .L233+4
 5766 0010 0022     		movs	r2, #0
 5767 0012 1A70     		strb	r2, [r3]
1780:main.c        **** 
1781:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 5768              		.loc 1 1781 0
 5769 0014 054B     		ldr	r3, .L233+8
 5770 0016 0022     		movs	r2, #0
 5771 0018 1A70     		strb	r2, [r3]
1782:main.c        **** 
1783:main.c        ****   I2C_1_Start();
 5772              		.loc 1 1783 0
 5773 001a FFF7FEFF 		bl	I2C_1_Start
1784:main.c        **** }
 5774              		.loc 1 1784 0
 5775 001e 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 135


 5776 0020 80BD     		pop	{r7, pc}
 5777              	.L234:
 5778 0022 00BF     		.align	2
 5779              	.L233:
 5780 0024 D6490040 		.word	1073760726
 5781 0028 C8490040 		.word	1073760712
 5782 002c 00000000 		.word	I2C_1_initVar
 5783              		.cfi_endproc
 5784              	.LFE81:
 5785              		.size	I2C_reset, .-I2C_reset
 5786              		.section	.text.displayCurrentPresetName,"ax",%progbits
 5787              		.align	2
 5788              		.global	displayCurrentPresetName
 5789              		.thumb
 5790              		.thumb_func
 5791              		.type	displayCurrentPresetName, %function
 5792              	displayCurrentPresetName:
 5793              	.LFB82:
1785:main.c        **** 
1786:main.c        **** void displayCurrentPresetName()
1787:main.c        **** {
 5794              		.loc 1 1787 0
 5795              		.cfi_startproc
 5796              		@ args = 0, pretend = 0, frame = 0
 5797              		@ frame_needed = 1, uses_anonymous_args = 0
 5798 0000 80B5     		push	{r7, lr}
 5799              		.cfi_def_cfa_offset 8
 5800              		.cfi_offset 7, -8
 5801              		.cfi_offset 14, -4
 5802 0002 00AF     		add	r7, sp, #0
 5803              		.cfi_def_cfa_register 7
1788:main.c        ****     if (presetNamesArray[patchNum][0] != 255) //don't display if the name data still hasn't been re
 5804              		.loc 1 1788 0
 5805 0004 184B     		ldr	r3, .L238
 5806 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5807 0008 1946     		mov	r1, r3
 5808 000a 184A     		ldr	r2, .L238+4
 5809 000c 0B46     		mov	r3, r1
 5810 000e DB00     		lsls	r3, r3, #3
 5811 0010 5B1A     		subs	r3, r3, r1
 5812 0012 5B00     		lsls	r3, r3, #1
 5813 0014 1344     		add	r3, r3, r2
 5814 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5815 0018 FF2B     		cmp	r3, #255
 5816 001a 22D0     		beq	.L237
1789:main.c        ****     {
1790:main.c        ****         OLEDwriteInt(patchNum , 2, 0,FirstLine);
 5817              		.loc 1 1790 0
 5818 001c 124B     		ldr	r3, .L238
 5819 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5820 0020 1846     		mov	r0, r3
 5821 0022 0023     		movs	r3, #0
 5822 0024 0022     		movs	r2, #0
 5823 0026 0221     		movs	r1, #2
 5824 0028 FFF7FEFF 		bl	OLEDwriteInt
1791:main.c        ****         //OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
1792:main.c        ****         OLEDwriteString((char *)&presetNamesArray[patchNum][0], NAME_LENGTH_IN_BYTES, 0, SecondLine
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 136


 5825              		.loc 1 1792 0
 5826 002c 0E4B     		ldr	r3, .L238
 5827 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5828 0030 1A46     		mov	r2, r3
 5829 0032 1346     		mov	r3, r2
 5830 0034 DB00     		lsls	r3, r3, #3
 5831 0036 9B1A     		subs	r3, r3, r2
 5832 0038 5B00     		lsls	r3, r3, #1
 5833 003a 0C4A     		ldr	r2, .L238+4
 5834 003c 9818     		adds	r0, r3, r2
 5835 003e 0123     		movs	r3, #1
 5836 0040 0022     		movs	r2, #0
 5837 0042 0E21     		movs	r1, #14
 5838 0044 FFF7FEFF 		bl	OLEDwriteString
1793:main.c        ****         mainOLEDWaitingToSend = 1;
 5839              		.loc 1 1793 0
 5840 0048 094B     		ldr	r3, .L238+8
 5841 004a 0122     		movs	r2, #1
 5842 004c 1A60     		str	r2, [r3]
1794:main.c        ****         presetAlreadyDisplayed[patchNum] = 1;
 5843              		.loc 1 1794 0
 5844 004e 064B     		ldr	r3, .L238
 5845 0050 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5846 0052 1946     		mov	r1, r3
 5847 0054 074B     		ldr	r3, .L238+12
 5848 0056 0122     		movs	r2, #1
 5849 0058 43F82120 		str	r2, [r3, r1, lsl #2]
1795:main.c        ****         //and update the macro OLED screens
1796:main.c        ****         macroOLEDWaitingToSend = 1;
 5850              		.loc 1 1796 0
 5851 005c 064B     		ldr	r3, .L238+16
 5852 005e 0122     		movs	r2, #1
 5853 0060 1A60     		str	r2, [r3]
 5854              	.L237:
1797:main.c        ****     }
1798:main.c        **** }
 5855              		.loc 1 1798 0
 5856 0062 00BF     		nop
 5857 0064 80BD     		pop	{r7, pc}
 5858              	.L239:
 5859 0066 00BF     		.align	2
 5860              	.L238:
 5861 0068 00000000 		.word	patchNum
 5862 006c 00000000 		.word	presetNamesArray
 5863 0070 00000000 		.word	mainOLEDWaitingToSend
 5864 0074 00000000 		.word	presetAlreadyDisplayed
 5865 0078 00000000 		.word	macroOLEDWaitingToSend
 5866              		.cfi_endproc
 5867              	.LFE82:
 5868              		.size	displayCurrentPresetName, .-displayCurrentPresetName
 5869              		.section	.text.checkUSB_Vbus,"ax",%progbits
 5870              		.align	2
 5871              		.global	checkUSB_Vbus
 5872              		.thumb
 5873              		.thumb_func
 5874              		.type	checkUSB_Vbus, %function
 5875              	checkUSB_Vbus:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 137


 5876              	.LFB83:
1799:main.c        ****     
1800:main.c        **** void checkUSB_Vbus(void)
1801:main.c        **** {
 5877              		.loc 1 1801 0
 5878              		.cfi_startproc
 5879              		@ args = 0, pretend = 0, frame = 0
 5880              		@ frame_needed = 1, uses_anonymous_args = 0
 5881 0000 80B5     		push	{r7, lr}
 5882              		.cfi_def_cfa_offset 8
 5883              		.cfi_offset 7, -8
 5884              		.cfi_offset 14, -4
 5885 0002 00AF     		add	r7, sp, #0
 5886              		.cfi_def_cfa_register 7
1802:main.c        ****    if (USB_VBusPresent() == 0)
 5887              		.loc 1 1802 0
 5888 0004 FFF7FEFF 		bl	USB_VBusPresent
 5889 0008 0346     		mov	r3, r0
 5890 000a 002B     		cmp	r3, #0
 5891 000c 05D1     		bne	.L241
1803:main.c        ****    {
1804:main.c        ****        USB_Stop();
 5892              		.loc 1 1804 0
 5893 000e FFF7FEFF 		bl	USB_Stop
1805:main.c        ****        USB_active = 0; 
 5894              		.loc 1 1805 0
 5895 0012 0E4B     		ldr	r3, .L244
 5896 0014 0022     		movs	r2, #0
 5897 0016 1A70     		strb	r2, [r3]
 5898 0018 13E0     		b	.L242
 5899              	.L241:
1806:main.c        ****    }
1807:main.c        ****    else if (USB_active == 0 )
 5900              		.loc 1 1807 0
 5901 001a 0C4B     		ldr	r3, .L244
 5902 001c 1B78     		ldrb	r3, [r3]
 5903 001e DBB2     		uxtb	r3, r3
 5904 0020 002B     		cmp	r3, #0
 5905 0022 0ED1     		bne	.L242
1808:main.c        ****    {
1809:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 5906              		.loc 1 1809 0
 5907 0024 0021     		movs	r1, #0
 5908 0026 0020     		movs	r0, #0
 5909 0028 FFF7FEFF 		bl	USB_Start
1810:main.c        ****         while (0u == USB_GetConfiguration());
 5910              		.loc 1 1810 0
 5911 002c 00BF     		nop
 5912              	.L243:
 5913              		.loc 1 1810 0 is_stmt 0 discriminator 1
 5914 002e FFF7FEFF 		bl	USB_GetConfiguration
 5915 0032 0346     		mov	r3, r0
 5916 0034 002B     		cmp	r3, #0
 5917 0036 FAD0     		beq	.L243
1811:main.c        ****         USB_MIDI_EP_Init();
 5918              		.loc 1 1811 0 is_stmt 1
 5919 0038 FFF7FEFF 		bl	USB_MIDI_Init
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 138


1812:main.c        ****        USB_active = 1;
 5920              		.loc 1 1812 0
 5921 003c 034B     		ldr	r3, .L244
 5922 003e 0122     		movs	r2, #1
 5923 0040 1A70     		strb	r2, [r3]
 5924              	.L242:
1813:main.c        ****    }
1814:main.c        ****    USB_check_flag = 0;
 5925              		.loc 1 1814 0
 5926 0042 034B     		ldr	r3, .L244+4
 5927 0044 0022     		movs	r2, #0
 5928 0046 1A70     		strb	r2, [r3]
1815:main.c        **** }
 5929              		.loc 1 1815 0
 5930 0048 00BF     		nop
 5931 004a 80BD     		pop	{r7, pc}
 5932              	.L245:
 5933              		.align	2
 5934              	.L244:
 5935 004c 00000000 		.word	USB_active
 5936 0050 00000000 		.word	USB_check_flag
 5937              		.cfi_endproc
 5938              	.LFE83:
 5939              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 5940              		.section	.text.USB_service,"ax",%progbits
 5941              		.align	2
 5942              		.global	USB_service
 5943              		.thumb
 5944              		.thumb_func
 5945              		.type	USB_service, %function
 5946              	USB_service:
 5947              	.LFB84:
1816:main.c        **** 
1817:main.c        **** 
1818:main.c        **** 
1819:main.c        **** void USB_service(void)
1820:main.c        **** {
 5948              		.loc 1 1820 0
 5949              		.cfi_startproc
 5950              		@ args = 0, pretend = 0, frame = 0
 5951              		@ frame_needed = 1, uses_anonymous_args = 0
 5952 0000 80B5     		push	{r7, lr}
 5953              		.cfi_def_cfa_offset 8
 5954              		.cfi_offset 7, -8
 5955              		.cfi_offset 14, -4
 5956 0002 00AF     		add	r7, sp, #0
 5957              		.cfi_def_cfa_register 7
1821:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 5958              		.loc 1 1821 0
 5959 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 5960 0008 0346     		mov	r3, r0
 5961 000a 002B     		cmp	r3, #0
 5962 000c 10D0     		beq	.L247
1822:main.c        ****     {
1823:main.c        ****         if(USB_GetConfiguration() != 0u)   
 5963              		.loc 1 1823 0
 5964 000e FFF7FEFF 		bl	USB_GetConfiguration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 139


 5965 0012 0346     		mov	r3, r0
 5966 0014 002B     		cmp	r3, #0
 5967 0016 0BD0     		beq	.L247
1824:main.c        ****         {
1825:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1826:main.c        ****             
1827:main.c        ****             //SleepTimer_Start();
1828:main.c        ****         	
1829:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 5968              		.loc 1 1829 0
 5969 0018 244B     		ldr	r3, .L253
 5970 001a 1B78     		ldrb	r3, [r3]
 5971 001c DBB2     		uxtb	r3, r3
 5972 001e 002B     		cmp	r3, #0
 5973 0020 06D0     		beq	.L247
 5974              		.loc 1 1829 0 is_stmt 0 discriminator 1
 5975 0022 FFF7FEFF 		bl	USB_VBusPresent
 5976 0026 0346     		mov	r3, r0
 5977 0028 002B     		cmp	r3, #0
 5978 002a 01D0     		beq	.L247
1830:main.c        ****             {
1831:main.c        ****                 USB_MIDI_EP_Init();
 5979              		.loc 1 1831 0 is_stmt 1
 5980 002c FFF7FEFF 		bl	USB_MIDI_Init
 5981              	.L247:
1832:main.c        ****             }
1833:main.c        ****         }
1834:main.c        ****         else
1835:main.c        ****         {
1836:main.c        ****             //SleepTimer_Stop();
1837:main.c        ****         }    
1838:main.c        ****     }        
1839:main.c        ****     
1840:main.c        ****     if(USB_GetConfiguration() != 0u)    
 5982              		.loc 1 1840 0
 5983 0030 FFF7FEFF 		bl	USB_GetConfiguration
 5984 0034 0346     		mov	r3, r0
 5985 0036 002B     		cmp	r3, #0
 5986 0038 35D0     		beq	.L252
1841:main.c        ****     {
1842:main.c        **** 
1843:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1844:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 5987              		.loc 1 1844 0
 5988 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 5989 003e 0346     		mov	r3, r0
 5990 0040 002B     		cmp	r3, #0
 5991 0042 18D0     		beq	.L250
1845:main.c        ****         {
1846:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 5992              		.loc 1 1846 0
 5993 0044 1A4B     		ldr	r3, .L253+4
 5994 0046 1B78     		ldrb	r3, [r3]
 5995 0048 D8B2     		uxtb	r0, r3
 5996 004a 1A4B     		ldr	r3, .L253+8
 5997 004c 1B78     		ldrb	r3, [r3]
 5998 004e DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 140


 5999 0050 9BB2     		uxth	r3, r3
 6000 0052 1A46     		mov	r2, r3
 6001 0054 1849     		ldr	r1, .L253+12
 6002 0056 FFF7FEFF 		bl	USB_LoadInEP
1847:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1848:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 6003              		.loc 1 1848 0
 6004 005a 184B     		ldr	r3, .L253+16
 6005 005c 1B78     		ldrb	r3, [r3]
 6006 005e DBB2     		uxtb	r3, r3
 6007 0060 4022     		movs	r2, #64
 6008 0062 1749     		ldr	r1, .L253+20
 6009 0064 1846     		mov	r0, r3
 6010 0066 FFF7FEFF 		bl	USB_ReadOutEP
1849:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1850:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1851:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 6011              		.loc 1 1851 0
 6012 006a 144B     		ldr	r3, .L253+16
 6013 006c 1B78     		ldrb	r3, [r3]
 6014 006e DBB2     		uxtb	r3, r3
 6015 0070 1846     		mov	r0, r3
 6016 0072 FFF7FEFF 		bl	USB_EnableOutEP
 6017              	.L250:
1852:main.c        ****         }
1853:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6018              		.loc 1 1853 0
 6019 0076 0D4B     		ldr	r3, .L253
 6020 0078 1B78     		ldrb	r3, [r3]
 6021 007a DBB2     		uxtb	r3, r3
 6022 007c 002B     		cmp	r3, #0
 6023 007e 06D0     		beq	.L251
 6024              		.loc 1 1853 0 is_stmt 0 discriminator 1
 6025 0080 FFF7FEFF 		bl	USB_VBusPresent
 6026 0084 0346     		mov	r3, r0
 6027 0086 002B     		cmp	r3, #0
 6028 0088 01D0     		beq	.L251
1854:main.c        ****         {
1855:main.c        ****             USB_MIDI_IN_Service();
 6029              		.loc 1 1855 0 is_stmt 1
 6030 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 6031              	.L251:
1856:main.c        ****         }
1857:main.c        **** 
1858:main.c        **** 
1859:main.c        **** 
1860:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6032              		.loc 1 1860 0
 6033 008e 074B     		ldr	r3, .L253
 6034 0090 1B78     		ldrb	r3, [r3]
 6035 0092 DBB2     		uxtb	r3, r3
 6036 0094 002B     		cmp	r3, #0
 6037 0096 06D0     		beq	.L252
 6038              		.loc 1 1860 0 is_stmt 0 discriminator 1
 6039 0098 FFF7FEFF 		bl	USB_VBusPresent
 6040 009c 0346     		mov	r3, r0
 6041 009e 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 141


 6042 00a0 01D0     		beq	.L252
1861:main.c        ****         {
1862:main.c        ****             USB_MIDI_OUT_Service();
 6043              		.loc 1 1862 0 is_stmt 1
 6044 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 6045              	.L252:
1863:main.c        ****         }
1864:main.c        ****     }
1865:main.c        ****         
1866:main.c        **** }
 6046              		.loc 1 1866 0
 6047 00a6 00BF     		nop
 6048 00a8 80BD     		pop	{r7, pc}
 6049              	.L254:
 6050 00aa 00BF     		.align	2
 6051              	.L253:
 6052 00ac 00000000 		.word	USB_active
 6053 00b0 00000000 		.word	USB_midi_in_ep
 6054 00b4 00000000 		.word	USB_midiInPointer
 6055 00b8 00000000 		.word	USB_midiInBuffer
 6056 00bc 00000000 		.word	USB_midi_out_ep
 6057 00c0 00000000 		.word	USB_midiOutBuffer
 6058              		.cfi_endproc
 6059              	.LFE84:
 6060              		.size	USB_service, .-USB_service
 6061              		.section	.text.log2f_approx,"ax",%progbits
 6062              		.align	2
 6063              		.global	log2f_approx
 6064              		.thumb
 6065              		.thumb_func
 6066              		.type	log2f_approx, %function
 6067              	log2f_approx:
 6068              	.LFB85:
1867:main.c        **** 
1868:main.c        **** // This is a fast approximation to log2()
1869:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1870:main.c        **** float log2f_approx(float X) {
 6069              		.loc 1 1870 0
 6070              		.cfi_startproc
 6071              		@ args = 0, pretend = 0, frame = 24
 6072              		@ frame_needed = 1, uses_anonymous_args = 0
 6073 0000 80B5     		push	{r7, lr}
 6074              		.cfi_def_cfa_offset 8
 6075              		.cfi_offset 7, -8
 6076              		.cfi_offset 14, -4
 6077 0002 86B0     		sub	sp, sp, #24
 6078              		.cfi_def_cfa_offset 32
 6079 0004 00AF     		add	r7, sp, #0
 6080              		.cfi_def_cfa_register 7
 6081 0006 7860     		str	r0, [r7, #4]	@ float
1871:main.c        ****   float Y, F;
1872:main.c        ****   int E;
1873:main.c        ****   F = frexpf(fabsf(X), &E);
 6082              		.loc 1 1873 0
 6083 0008 7B68     		ldr	r3, [r7, #4]
 6084 000a 23F00043 		bic	r3, r3, #-2147483648
 6085 000e 07F10C02 		add	r2, r7, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 142


 6086 0012 1146     		mov	r1, r2
 6087 0014 1846     		mov	r0, r3
 6088 0016 FFF7FEFF 		bl	frexpf
 6089 001a 7861     		str	r0, [r7, #20]	@ float
1874:main.c        ****   Y = 1.23149591368684f;
 6090              		.loc 1 1874 0
 6091 001c 1A4B     		ldr	r3, .L257
 6092 001e 3B61     		str	r3, [r7, #16]	@ float
1875:main.c        ****   Y *= F;
 6093              		.loc 1 1875 0
 6094 0020 7969     		ldr	r1, [r7, #20]	@ float
 6095 0022 3869     		ldr	r0, [r7, #16]	@ float
 6096 0024 FFF7FEFF 		bl	__aeabi_fmul
 6097 0028 0346     		mov	r3, r0
 6098 002a 3B61     		str	r3, [r7, #16]	@ float
1876:main.c        ****   Y += -4.11852516267426f;
 6099              		.loc 1 1876 0
 6100 002c 1749     		ldr	r1, .L257+4
 6101 002e 3869     		ldr	r0, [r7, #16]	@ float
 6102 0030 FFF7FEFF 		bl	__aeabi_fsub
 6103 0034 0346     		mov	r3, r0
 6104 0036 3B61     		str	r3, [r7, #16]	@ float
1877:main.c        ****   Y *= F;
 6105              		.loc 1 1877 0
 6106 0038 7969     		ldr	r1, [r7, #20]	@ float
 6107 003a 3869     		ldr	r0, [r7, #16]	@ float
 6108 003c FFF7FEFF 		bl	__aeabi_fmul
 6109 0040 0346     		mov	r3, r0
 6110 0042 3B61     		str	r3, [r7, #16]	@ float
1878:main.c        ****   Y += 6.02197014179219f;
 6111              		.loc 1 1878 0
 6112 0044 1249     		ldr	r1, .L257+8
 6113 0046 3869     		ldr	r0, [r7, #16]	@ float
 6114 0048 FFF7FEFF 		bl	__aeabi_fadd
 6115 004c 0346     		mov	r3, r0
 6116 004e 3B61     		str	r3, [r7, #16]	@ float
1879:main.c        ****   Y *= F;
 6117              		.loc 1 1879 0
 6118 0050 7969     		ldr	r1, [r7, #20]	@ float
 6119 0052 3869     		ldr	r0, [r7, #16]	@ float
 6120 0054 FFF7FEFF 		bl	__aeabi_fmul
 6121 0058 0346     		mov	r3, r0
 6122 005a 3B61     		str	r3, [r7, #16]	@ float
1880:main.c        ****   Y += -3.13396450166353f;
 6123              		.loc 1 1880 0
 6124 005c 0D49     		ldr	r1, .L257+12
 6125 005e 3869     		ldr	r0, [r7, #16]	@ float
 6126 0060 FFF7FEFF 		bl	__aeabi_fsub
 6127 0064 0346     		mov	r3, r0
 6128 0066 3B61     		str	r3, [r7, #16]	@ float
1881:main.c        ****   Y += E;
 6129              		.loc 1 1881 0
 6130 0068 FB68     		ldr	r3, [r7, #12]
 6131 006a 1846     		mov	r0, r3
 6132 006c FFF7FEFF 		bl	__aeabi_i2f
 6133 0070 0346     		mov	r3, r0
 6134 0072 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 143


 6135 0074 3869     		ldr	r0, [r7, #16]	@ float
 6136 0076 FFF7FEFF 		bl	__aeabi_fadd
 6137 007a 0346     		mov	r3, r0
 6138 007c 3B61     		str	r3, [r7, #16]	@ float
1882:main.c        ****   return(Y);
 6139              		.loc 1 1882 0
 6140 007e 3B69     		ldr	r3, [r7, #16]	@ float
1883:main.c        **** }
 6141              		.loc 1 1883 0
 6142 0080 1846     		mov	r0, r3
 6143 0082 1837     		adds	r7, r7, #24
 6144              		.cfi_def_cfa_offset 8
 6145 0084 BD46     		mov	sp, r7
 6146              		.cfi_def_cfa_register 13
 6147              		@ sp needed
 6148 0086 80BD     		pop	{r7, pc}
 6149              	.L258:
 6150              		.align	2
 6151              	.L257:
 6152 0088 A8A19D3F 		.word	1067295144
 6153 008c F5CA8340 		.word	1082378997
 6154 0090 FBB3C040 		.word	1086370811
 6155 0094 E0924840 		.word	1078498016
 6156              		.cfi_endproc
 6157              	.LFE85:
 6158              		.size	log2f_approx, .-log2f_approx
 6159              		.global	prevNotes
 6160              		.bss
 6161              		.align	2
 6162              		.type	prevNotes, %object
 6163              		.size	prevNotes, 48
 6164              	prevNotes:
 6165 00d4 00000000 		.space	48
 6165      00000000 
 6165      00000000 
 6165      00000000 
 6165      00000000 
 6166              		.section	.text.noteEvent,"ax",%progbits
 6167              		.align	2
 6168              		.global	noteEvent
 6169              		.thumb
 6170              		.thumb_func
 6171              		.type	noteEvent, %function
 6172              	noteEvent:
 6173              	.LFB86:
1884:main.c        **** 
1885:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1886:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1887:main.c        **** 
1888:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1889:main.c        **** 
1890:main.c        **** void noteEvent(int string)
1891:main.c        **** {
 6174              		.loc 1 1891 0
 6175              		.cfi_startproc
 6176              		@ args = 0, pretend = 0, frame = 24
 6177              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 144


 6178 0000 80B5     		push	{r7, lr}
 6179              		.cfi_def_cfa_offset 8
 6180              		.cfi_offset 7, -8
 6181              		.cfi_offset 14, -4
 6182 0002 86B0     		sub	sp, sp, #24
 6183              		.cfi_def_cfa_offset 32
 6184 0004 00AF     		add	r7, sp, #0
 6185              		.cfi_def_cfa_register 7
 6186 0006 7860     		str	r0, [r7, #4]
1892:main.c        ****     
1893:main.c        ****     /*
1894:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1895:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1896:main.c        ****     int vInt  = (int) (v*4.0f);
1897:main.c        ****     if (vInt > 127)
1898:main.c        ****     {
1899:main.c        ****         vInt = 127;
1900:main.c        ****     }
1901:main.c        ****     */
1902:main.c        ****     uint16_t velocity = strings[string];
 6187              		.loc 1 1902 0
 6188 0008 2C4A     		ldr	r2, .L264
 6189 000a 7B68     		ldr	r3, [r7, #4]
 6190 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 6191 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1903:main.c        ****     if (velocity > 0)
 6192              		.loc 1 1903 0
 6193 0012 FB8A     		ldrh	r3, [r7, #22]
 6194 0014 002B     		cmp	r3, #0
 6195 0016 43D0     		beq	.L260
 6196              	.LBB34:
1904:main.c        ****     {
1905:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1906:main.c        ****         float tempVel = (float)velocity;
 6197              		.loc 1 1906 0
 6198 0018 FB8A     		ldrh	r3, [r7, #22]
 6199 001a 1846     		mov	r0, r3
 6200 001c FFF7FEFF 		bl	__aeabi_ui2f
 6201 0020 0346     		mov	r3, r0
 6202 0022 3B61     		str	r3, [r7, #16]	@ float
1907:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 6203              		.loc 1 1907 0
 6204 0024 4FF05E51 		mov	r1, #931135488
 6205 0028 3869     		ldr	r0, [r7, #16]	@ float
 6206 002a FFF7FEFF 		bl	__aeabi_fmul
 6207 002e 0346     		mov	r3, r0
 6208 0030 3B61     		str	r3, [r7, #16]	@ float
1908:main.c        ****         tempVel = sqrtf(tempVel);
 6209              		.loc 1 1908 0
 6210 0032 3869     		ldr	r0, [r7, #16]	@ float
 6211 0034 FFF7FEFF 		bl	sqrtf
 6212 0038 3861     		str	r0, [r7, #16]	@ float
1909:main.c        ****         tempVel = tempVel - 0.0239372430f;
 6213              		.loc 1 1909 0
 6214 003a 2149     		ldr	r1, .L264+4
 6215 003c 3869     		ldr	r0, [r7, #16]	@ float
 6216 003e FFF7FEFF 		bl	__aeabi_fsub
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 145


 6217 0042 0346     		mov	r3, r0
 6218 0044 3B61     		str	r3, [r7, #16]	@ float
1910:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 6219              		.loc 1 1910 0
 6220 0046 1F49     		ldr	r1, .L264+8
 6221 0048 3869     		ldr	r0, [r7, #16]	@ float
 6222 004a FFF7FEFF 		bl	__aeabi_fmul
 6223 004e 0346     		mov	r3, r0
 6224 0050 3B61     		str	r3, [r7, #16]	@ float
1911:main.c        ****         velocity = (int)tempVel;
 6225              		.loc 1 1911 0
 6226 0052 3869     		ldr	r0, [r7, #16]	@ float
 6227 0054 FFF7FEFF 		bl	__aeabi_f2iz
 6228 0058 0346     		mov	r3, r0
 6229 005a FB82     		strh	r3, [r7, #22]	@ movhi
1912:main.c        ****         
1913:main.c        **** 
1914:main.c        ****         if (velocity > 127)
 6230              		.loc 1 1914 0
 6231 005c FB8A     		ldrh	r3, [r7, #22]
 6232 005e 7F2B     		cmp	r3, #127
 6233 0060 01D9     		bls	.L261
1915:main.c        ****         {
1916:main.c        ****             velocity = 127;
 6234              		.loc 1 1916 0
 6235 0062 7F23     		movs	r3, #127
 6236 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 6237              	.L261:
1917:main.c        ****         }
1918:main.c        ****         
1919:main.c        ****         //only update octave on note-ons
1920:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1921:main.c        ****         int noteToSend = ((octave - 4) * 12) + openStringMIDI_Int[string];
 6238              		.loc 1 1921 0
 6239 0066 184B     		ldr	r3, .L264+12
 6240 0068 1B68     		ldr	r3, [r3]
 6241 006a 1A1F     		subs	r2, r3, #4
 6242 006c 1346     		mov	r3, r2
 6243 006e 5B00     		lsls	r3, r3, #1
 6244 0070 1344     		add	r3, r3, r2
 6245 0072 9B00     		lsls	r3, r3, #2
 6246 0074 1946     		mov	r1, r3
 6247 0076 154A     		ldr	r2, .L264+16
 6248 0078 7B68     		ldr	r3, [r7, #4]
 6249 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 6250 007e 0B44     		add	r3, r3, r1
 6251 0080 FB60     		str	r3, [r7, #12]
1922:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 6252              		.loc 1 1922 0
 6253 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 6254 0084 DBB2     		uxtb	r3, r3
 6255 0086 1946     		mov	r1, r3
 6256 0088 7B68     		ldr	r3, [r7, #4]
 6257 008a 0133     		adds	r3, r3, #1
 6258 008c 1A46     		mov	r2, r3
 6259 008e F868     		ldr	r0, [r7, #12]
 6260 0090 FFF7FEFF 		bl	sendMIDINoteOn
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 146


1923:main.c        ****         prevNotes[string] = noteToSend;
 6261              		.loc 1 1923 0
 6262 0094 0E49     		ldr	r1, .L264+20
 6263 0096 7B68     		ldr	r3, [r7, #4]
 6264 0098 FA68     		ldr	r2, [r7, #12]
 6265 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 6266              	.LBE34:
1924:main.c        ****             
1925:main.c        ****     }
1926:main.c        ****     else
1927:main.c        ****     {
1928:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1929:main.c        ****     }
1930:main.c        **** 
1931:main.c        **** }
 6267              		.loc 1 1931 0
 6268 009e 09E0     		b	.L263
 6269              	.L260:
1928:main.c        ****     }
 6270              		.loc 1 1928 0
 6271 00a0 0B4A     		ldr	r2, .L264+20
 6272 00a2 7B68     		ldr	r3, [r7, #4]
 6273 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 6274 00a8 7B68     		ldr	r3, [r7, #4]
 6275 00aa 0133     		adds	r3, r3, #1
 6276 00ac 1A46     		mov	r2, r3
 6277 00ae 0021     		movs	r1, #0
 6278 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 6279              	.L263:
 6280              		.loc 1 1931 0
 6281 00b4 00BF     		nop
 6282 00b6 1837     		adds	r7, r7, #24
 6283              		.cfi_def_cfa_offset 8
 6284 00b8 BD46     		mov	sp, r7
 6285              		.cfi_def_cfa_register 13
 6286              		@ sp needed
 6287 00ba 80BD     		pop	{r7, pc}
 6288              	.L265:
 6289              		.align	2
 6290              	.L264:
 6291 00bc 00000000 		.word	strings
 6292 00c0 0918C43C 		.word	1019484169
 6293 00c4 551D0243 		.word	1124212053
 6294 00c8 00000000 		.word	octave
 6295 00cc 00000000 		.word	openStringMIDI_Int
 6296 00d0 00000000 		.word	prevNotes
 6297              		.cfi_endproc
 6298              	.LFE86:
 6299              		.size	noteEvent, .-noteEvent
 6300              		.section	.text.CCEvent,"ax",%progbits
 6301              		.align	2
 6302              		.global	CCEvent
 6303              		.thumb
 6304              		.thumb_func
 6305              		.type	CCEvent, %function
 6306              	CCEvent:
 6307              	.LFB87:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 147


1932:main.c        **** 
1933:main.c        **** void CCEvent(int cc, int val)
1934:main.c        **** {
 6308              		.loc 1 1934 0
 6309              		.cfi_startproc
 6310              		@ args = 0, pretend = 0, frame = 8
 6311              		@ frame_needed = 1, uses_anonymous_args = 0
 6312 0000 80B5     		push	{r7, lr}
 6313              		.cfi_def_cfa_offset 8
 6314              		.cfi_offset 7, -8
 6315              		.cfi_offset 14, -4
 6316 0002 82B0     		sub	sp, sp, #8
 6317              		.cfi_def_cfa_offset 16
 6318 0004 00AF     		add	r7, sp, #0
 6319              		.cfi_def_cfa_register 7
 6320 0006 7860     		str	r0, [r7, #4]
 6321 0008 3960     		str	r1, [r7]
1935:main.c        ****     
1936:main.c        ****     sendMIDIControlChange(cc, val, 0);
 6322              		.loc 1 1936 0
 6323 000a 0022     		movs	r2, #0
 6324 000c 3968     		ldr	r1, [r7]
 6325 000e 7868     		ldr	r0, [r7, #4]
 6326 0010 FFF7FEFF 		bl	sendMIDIControlChange
1937:main.c        **** }
 6327              		.loc 1 1937 0
 6328 0014 00BF     		nop
 6329 0016 0837     		adds	r7, r7, #8
 6330              		.cfi_def_cfa_offset 8
 6331 0018 BD46     		mov	sp, r7
 6332              		.cfi_def_cfa_register 13
 6333              		@ sp needed
 6334 001a 80BD     		pop	{r7, pc}
 6335              		.cfi_endproc
 6336              	.LFE87:
 6337              		.size	CCEvent, .-CCEvent
 6338              		.section	.text.sendMIDINoteOn,"ax",%progbits
 6339              		.align	2
 6340              		.global	sendMIDINoteOn
 6341              		.thumb
 6342              		.thumb_func
 6343              		.type	sendMIDINoteOn, %function
 6344              	sendMIDINoteOn:
 6345              	.LFB88:
1938:main.c        **** 
1939:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1940:main.c        **** {  
 6346              		.loc 1 1940 0
 6347              		.cfi_startproc
 6348              		@ args = 0, pretend = 0, frame = 16
 6349              		@ frame_needed = 1, uses_anonymous_args = 0
 6350 0000 80B5     		push	{r7, lr}
 6351              		.cfi_def_cfa_offset 8
 6352              		.cfi_offset 7, -8
 6353              		.cfi_offset 14, -4
 6354 0002 84B0     		sub	sp, sp, #16
 6355              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 148


 6356 0004 00AF     		add	r7, sp, #0
 6357              		.cfi_def_cfa_register 7
 6358 0006 F860     		str	r0, [r7, #12]
 6359 0008 B960     		str	r1, [r7, #8]
 6360 000a 7A60     		str	r2, [r7, #4]
1941:main.c        ****    
1942:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 6361              		.loc 1 1942 0
 6362 000c 7B68     		ldr	r3, [r7, #4]
 6363 000e DBB2     		uxtb	r3, r3
 6364 0010 703B     		subs	r3, r3, #112
 6365 0012 DAB2     		uxtb	r2, r3
 6366 0014 114B     		ldr	r3, .L269
 6367 0016 1A70     		strb	r2, [r3]
1943:main.c        ****     midiMsg[1] = MIDInoteNum;
 6368              		.loc 1 1943 0
 6369 0018 FB68     		ldr	r3, [r7, #12]
 6370 001a DAB2     		uxtb	r2, r3
 6371 001c 0F4B     		ldr	r3, .L269
 6372 001e 5A70     		strb	r2, [r3, #1]
1944:main.c        ****     midiMsg[2] = velocity;	
 6373              		.loc 1 1944 0
 6374 0020 BB68     		ldr	r3, [r7, #8]
 6375 0022 DAB2     		uxtb	r2, r3
 6376 0024 0D4B     		ldr	r3, .L269
 6377 0026 9A70     		strb	r2, [r3, #2]
1945:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6378              		.loc 1 1945 0
 6379 0028 0D4B     		ldr	r3, .L269+4
 6380 002a 1B78     		ldrb	r3, [r3]
 6381 002c DBB2     		uxtb	r3, r3
 6382 002e 002B     		cmp	r3, #0
 6383 0030 09D0     		beq	.L268
 6384              		.loc 1 1945 0 is_stmt 0 discriminator 1
 6385 0032 FFF7FEFF 		bl	USB_VBusPresent
 6386 0036 0346     		mov	r3, r0
 6387 0038 002B     		cmp	r3, #0
 6388 003a 04D0     		beq	.L268
1946:main.c        ****     {
1947:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6389              		.loc 1 1947 0 is_stmt 1
 6390 003c 0022     		movs	r2, #0
 6391 003e 0749     		ldr	r1, .L269
 6392 0040 0320     		movs	r0, #3
 6393 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6394              	.L268:
1948:main.c        ****     } 
1949:main.c        ****     midiSent += 4;
 6395              		.loc 1 1949 0
 6396 0046 074B     		ldr	r3, .L269+8
 6397 0048 1B88     		ldrh	r3, [r3]
 6398 004a 0433     		adds	r3, r3, #4
 6399 004c 9AB2     		uxth	r2, r3
 6400 004e 054B     		ldr	r3, .L269+8
 6401 0050 1A80     		strh	r2, [r3]	@ movhi
1950:main.c        **** }
 6402              		.loc 1 1950 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 149


 6403 0052 00BF     		nop
 6404 0054 1037     		adds	r7, r7, #16
 6405              		.cfi_def_cfa_offset 8
 6406 0056 BD46     		mov	sp, r7
 6407              		.cfi_def_cfa_register 13
 6408              		@ sp needed
 6409 0058 80BD     		pop	{r7, pc}
 6410              	.L270:
 6411 005a 00BF     		.align	2
 6412              	.L269:
 6413 005c 00000000 		.word	midiMsg
 6414 0060 00000000 		.word	USB_active
 6415 0064 00000000 		.word	midiSent
 6416              		.cfi_endproc
 6417              	.LFE88:
 6418              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 6419              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 6420              		.align	2
 6421              		.global	sendMIDIPolyKeyPressure
 6422              		.thumb
 6423              		.thumb_func
 6424              		.type	sendMIDIPolyKeyPressure, %function
 6425              	sendMIDIPolyKeyPressure:
 6426              	.LFB89:
1951:main.c        **** 
1952:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1953:main.c        **** {
 6427              		.loc 1 1953 0
 6428              		.cfi_startproc
 6429              		@ args = 0, pretend = 0, frame = 16
 6430              		@ frame_needed = 1, uses_anonymous_args = 0
 6431 0000 80B5     		push	{r7, lr}
 6432              		.cfi_def_cfa_offset 8
 6433              		.cfi_offset 7, -8
 6434              		.cfi_offset 14, -4
 6435 0002 84B0     		sub	sp, sp, #16
 6436              		.cfi_def_cfa_offset 24
 6437 0004 00AF     		add	r7, sp, #0
 6438              		.cfi_def_cfa_register 7
 6439 0006 F860     		str	r0, [r7, #12]
 6440 0008 B960     		str	r1, [r7, #8]
 6441 000a 7A60     		str	r2, [r7, #4]
1954:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 6442              		.loc 1 1954 0
 6443 000c 7B68     		ldr	r3, [r7, #4]
 6444 000e DBB2     		uxtb	r3, r3
 6445 0010 603B     		subs	r3, r3, #96
 6446 0012 DAB2     		uxtb	r2, r3
 6447 0014 114B     		ldr	r3, .L273
 6448 0016 1A70     		strb	r2, [r3]
1955:main.c        ****     midiMsg[1] = MIDInoteNum;
 6449              		.loc 1 1955 0
 6450 0018 FB68     		ldr	r3, [r7, #12]
 6451 001a DAB2     		uxtb	r2, r3
 6452 001c 0F4B     		ldr	r3, .L273
 6453 001e 5A70     		strb	r2, [r3, #1]
1956:main.c        ****     midiMsg[2] = pressure;		
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 150


 6454              		.loc 1 1956 0
 6455 0020 BB68     		ldr	r3, [r7, #8]
 6456 0022 DAB2     		uxtb	r2, r3
 6457 0024 0D4B     		ldr	r3, .L273
 6458 0026 9A70     		strb	r2, [r3, #2]
1957:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6459              		.loc 1 1957 0
 6460 0028 0D4B     		ldr	r3, .L273+4
 6461 002a 1B78     		ldrb	r3, [r3]
 6462 002c DBB2     		uxtb	r3, r3
 6463 002e 002B     		cmp	r3, #0
 6464 0030 09D0     		beq	.L272
 6465              		.loc 1 1957 0 is_stmt 0 discriminator 1
 6466 0032 FFF7FEFF 		bl	USB_VBusPresent
 6467 0036 0346     		mov	r3, r0
 6468 0038 002B     		cmp	r3, #0
 6469 003a 04D0     		beq	.L272
1958:main.c        ****     {
1959:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6470              		.loc 1 1959 0 is_stmt 1
 6471 003c 0022     		movs	r2, #0
 6472 003e 0749     		ldr	r1, .L273
 6473 0040 0320     		movs	r0, #3
 6474 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6475              	.L272:
1960:main.c        ****     } 
1961:main.c        ****     midiSent += 4;
 6476              		.loc 1 1961 0
 6477 0046 074B     		ldr	r3, .L273+8
 6478 0048 1B88     		ldrh	r3, [r3]
 6479 004a 0433     		adds	r3, r3, #4
 6480 004c 9AB2     		uxth	r2, r3
 6481 004e 054B     		ldr	r3, .L273+8
 6482 0050 1A80     		strh	r2, [r3]	@ movhi
1962:main.c        **** }
 6483              		.loc 1 1962 0
 6484 0052 00BF     		nop
 6485 0054 1037     		adds	r7, r7, #16
 6486              		.cfi_def_cfa_offset 8
 6487 0056 BD46     		mov	sp, r7
 6488              		.cfi_def_cfa_register 13
 6489              		@ sp needed
 6490 0058 80BD     		pop	{r7, pc}
 6491              	.L274:
 6492 005a 00BF     		.align	2
 6493              	.L273:
 6494 005c 00000000 		.word	midiMsg
 6495 0060 00000000 		.word	USB_active
 6496 0064 00000000 		.word	midiSent
 6497              		.cfi_endproc
 6498              	.LFE89:
 6499              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 6500              		.section	.text.sendMIDIControlChange,"ax",%progbits
 6501              		.align	2
 6502              		.global	sendMIDIControlChange
 6503              		.thumb
 6504              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 151


 6505              		.type	sendMIDIControlChange, %function
 6506              	sendMIDIControlChange:
 6507              	.LFB90:
1963:main.c        **** 
1964:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1965:main.c        **** {
 6508              		.loc 1 1965 0
 6509              		.cfi_startproc
 6510              		@ args = 0, pretend = 0, frame = 16
 6511              		@ frame_needed = 1, uses_anonymous_args = 0
 6512 0000 80B5     		push	{r7, lr}
 6513              		.cfi_def_cfa_offset 8
 6514              		.cfi_offset 7, -8
 6515              		.cfi_offset 14, -4
 6516 0002 84B0     		sub	sp, sp, #16
 6517              		.cfi_def_cfa_offset 24
 6518 0004 00AF     		add	r7, sp, #0
 6519              		.cfi_def_cfa_register 7
 6520 0006 F860     		str	r0, [r7, #12]
 6521 0008 B960     		str	r1, [r7, #8]
 6522 000a 7A60     		str	r2, [r7, #4]
1966:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 6523              		.loc 1 1966 0
 6524 000c 7B68     		ldr	r3, [r7, #4]
 6525 000e DBB2     		uxtb	r3, r3
 6526 0010 503B     		subs	r3, r3, #80
 6527 0012 DAB2     		uxtb	r2, r3
 6528 0014 114B     		ldr	r3, .L277
 6529 0016 1A70     		strb	r2, [r3]
1967:main.c        ****     midiMsg[1] = CCnum;
 6530              		.loc 1 1967 0
 6531 0018 FB68     		ldr	r3, [r7, #12]
 6532 001a DAB2     		uxtb	r2, r3
 6533 001c 0F4B     		ldr	r3, .L277
 6534 001e 5A70     		strb	r2, [r3, #1]
1968:main.c        ****     midiMsg[2] = CCval;			
 6535              		.loc 1 1968 0
 6536 0020 BB68     		ldr	r3, [r7, #8]
 6537 0022 DAB2     		uxtb	r2, r3
 6538 0024 0D4B     		ldr	r3, .L277
 6539 0026 9A70     		strb	r2, [r3, #2]
1969:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6540              		.loc 1 1969 0
 6541 0028 0D4B     		ldr	r3, .L277+4
 6542 002a 1B78     		ldrb	r3, [r3]
 6543 002c DBB2     		uxtb	r3, r3
 6544 002e 002B     		cmp	r3, #0
 6545 0030 09D0     		beq	.L276
 6546              		.loc 1 1969 0 is_stmt 0 discriminator 1
 6547 0032 FFF7FEFF 		bl	USB_VBusPresent
 6548 0036 0346     		mov	r3, r0
 6549 0038 002B     		cmp	r3, #0
 6550 003a 04D0     		beq	.L276
1970:main.c        ****     {
1971:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6551              		.loc 1 1971 0 is_stmt 1
 6552 003c 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 152


 6553 003e 0749     		ldr	r1, .L277
 6554 0040 0320     		movs	r0, #3
 6555 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6556              	.L276:
1972:main.c        ****     } 
1973:main.c        ****     midiSent += 4;
 6557              		.loc 1 1973 0
 6558 0046 074B     		ldr	r3, .L277+8
 6559 0048 1B88     		ldrh	r3, [r3]
 6560 004a 0433     		adds	r3, r3, #4
 6561 004c 9AB2     		uxth	r2, r3
 6562 004e 054B     		ldr	r3, .L277+8
 6563 0050 1A80     		strh	r2, [r3]	@ movhi
1974:main.c        **** }
 6564              		.loc 1 1974 0
 6565 0052 00BF     		nop
 6566 0054 1037     		adds	r7, r7, #16
 6567              		.cfi_def_cfa_offset 8
 6568 0056 BD46     		mov	sp, r7
 6569              		.cfi_def_cfa_register 13
 6570              		@ sp needed
 6571 0058 80BD     		pop	{r7, pc}
 6572              	.L278:
 6573 005a 00BF     		.align	2
 6574              	.L277:
 6575 005c 00000000 		.word	midiMsg
 6576 0060 00000000 		.word	USB_active
 6577 0064 00000000 		.word	midiSent
 6578              		.cfi_endproc
 6579              	.LFE90:
 6580              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 6581              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 6582              		.align	2
 6583              		.global	sendMIDIPitchBend
 6584              		.thumb
 6585              		.thumb_func
 6586              		.type	sendMIDIPitchBend, %function
 6587              	sendMIDIPitchBend:
 6588              	.LFB91:
1975:main.c        **** 
1976:main.c        **** void sendMIDIPitchBend(int val, int channel)
1977:main.c        **** {
 6589              		.loc 1 1977 0
 6590              		.cfi_startproc
 6591              		@ args = 0, pretend = 0, frame = 8
 6592              		@ frame_needed = 1, uses_anonymous_args = 0
 6593 0000 80B5     		push	{r7, lr}
 6594              		.cfi_def_cfa_offset 8
 6595              		.cfi_offset 7, -8
 6596              		.cfi_offset 14, -4
 6597 0002 82B0     		sub	sp, sp, #8
 6598              		.cfi_def_cfa_offset 16
 6599 0004 00AF     		add	r7, sp, #0
 6600              		.cfi_def_cfa_register 7
 6601 0006 7860     		str	r0, [r7, #4]
 6602 0008 3960     		str	r1, [r7]
1978:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 153


 6603              		.loc 1 1978 0
 6604 000a 3B68     		ldr	r3, [r7]
 6605 000c DBB2     		uxtb	r3, r3
 6606 000e 203B     		subs	r3, r3, #32
 6607 0010 DAB2     		uxtb	r2, r3
 6608 0012 134B     		ldr	r3, .L281
 6609 0014 1A70     		strb	r2, [r3]
1979:main.c        ****     midiMsg[1] = (val & 127); //LSB
 6610              		.loc 1 1979 0
 6611 0016 7B68     		ldr	r3, [r7, #4]
 6612 0018 DBB2     		uxtb	r3, r3
 6613 001a 03F07F03 		and	r3, r3, #127
 6614 001e DAB2     		uxtb	r2, r3
 6615 0020 0F4B     		ldr	r3, .L281
 6616 0022 5A70     		strb	r2, [r3, #1]
1980:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 6617              		.loc 1 1980 0
 6618 0024 7B68     		ldr	r3, [r7, #4]
 6619 0026 DB11     		asrs	r3, r3, #7
 6620 0028 DAB2     		uxtb	r2, r3
 6621 002a 0D4B     		ldr	r3, .L281
 6622 002c 9A70     		strb	r2, [r3, #2]
1981:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 6623              		.loc 1 1981 0
 6624 002e 0D4B     		ldr	r3, .L281+4
 6625 0030 1B78     		ldrb	r3, [r3]
 6626 0032 DBB2     		uxtb	r3, r3
 6627 0034 002B     		cmp	r3, #0
 6628 0036 09D0     		beq	.L280
 6629              		.loc 1 1981 0 is_stmt 0 discriminator 1
 6630 0038 FFF7FEFF 		bl	USB_VBusPresent
 6631 003c 0346     		mov	r3, r0
 6632 003e 002B     		cmp	r3, #0
 6633 0040 04D0     		beq	.L280
1982:main.c        ****     {
1983:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6634              		.loc 1 1983 0 is_stmt 1
 6635 0042 0022     		movs	r2, #0
 6636 0044 0649     		ldr	r1, .L281
 6637 0046 0320     		movs	r0, #3
 6638 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 6639              	.L280:
1984:main.c        ****     } 
1985:main.c        ****     midiSent += 4;
 6640              		.loc 1 1985 0
 6641 004c 064B     		ldr	r3, .L281+8
 6642 004e 1B88     		ldrh	r3, [r3]
 6643 0050 0433     		adds	r3, r3, #4
 6644 0052 9AB2     		uxth	r2, r3
 6645 0054 044B     		ldr	r3, .L281+8
 6646 0056 1A80     		strh	r2, [r3]	@ movhi
1986:main.c        **** }
 6647              		.loc 1 1986 0
 6648 0058 00BF     		nop
 6649 005a 0837     		adds	r7, r7, #8
 6650              		.cfi_def_cfa_offset 8
 6651 005c BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 154


 6652              		.cfi_def_cfa_register 13
 6653              		@ sp needed
 6654 005e 80BD     		pop	{r7, pc}
 6655              	.L282:
 6656              		.align	2
 6657              	.L281:
 6658 0060 00000000 		.word	midiMsg
 6659 0064 00000000 		.word	USB_active
 6660 0068 00000000 		.word	midiSent
 6661              		.cfi_endproc
 6662              	.LFE91:
 6663              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 6664              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 6665              		.align	2
 6666              		.global	sendMIDIAllNotesOff
 6667              		.thumb
 6668              		.thumb_func
 6669              		.type	sendMIDIAllNotesOff, %function
 6670              	sendMIDIAllNotesOff:
 6671              	.LFB92:
1987:main.c        **** 
1988:main.c        **** void sendMIDIAllNotesOff(void)
1989:main.c        **** {   
 6672              		.loc 1 1989 0
 6673              		.cfi_startproc
 6674              		@ args = 0, pretend = 0, frame = 0
 6675              		@ frame_needed = 1, uses_anonymous_args = 0
 6676 0000 80B5     		push	{r7, lr}
 6677              		.cfi_def_cfa_offset 8
 6678              		.cfi_offset 7, -8
 6679              		.cfi_offset 14, -4
 6680 0002 00AF     		add	r7, sp, #0
 6681              		.cfi_def_cfa_register 7
1990:main.c        ****     for (i = 0; i < 128; i++)
 6682              		.loc 1 1990 0
 6683 0004 144B     		ldr	r3, .L287
 6684 0006 0022     		movs	r2, #0
 6685 0008 1A70     		strb	r2, [r3]
 6686 000a 1EE0     		b	.L284
 6687              	.L286:
1991:main.c        ****     {
1992:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 6688              		.loc 1 1992 0
 6689 000c 134B     		ldr	r3, .L287+4
 6690 000e 9022     		movs	r2, #144
 6691 0010 1A70     		strb	r2, [r3]
1993:main.c        ****         midiMsg[1] = i;
 6692              		.loc 1 1993 0
 6693 0012 114B     		ldr	r3, .L287
 6694 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6695 0016 114B     		ldr	r3, .L287+4
 6696 0018 5A70     		strb	r2, [r3, #1]
1994:main.c        ****         midiMsg[2] = 0;	
 6697              		.loc 1 1994 0
 6698 001a 104B     		ldr	r3, .L287+4
 6699 001c 0022     		movs	r2, #0
 6700 001e 9A70     		strb	r2, [r3, #2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 155


1995:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 6701              		.loc 1 1995 0
 6702 0020 0F4B     		ldr	r3, .L287+8
 6703 0022 1B78     		ldrb	r3, [r3]
 6704 0024 DBB2     		uxtb	r3, r3
 6705 0026 002B     		cmp	r3, #0
 6706 0028 09D0     		beq	.L285
 6707              		.loc 1 1995 0 is_stmt 0 discriminator 1
 6708 002a FFF7FEFF 		bl	USB_VBusPresent
 6709 002e 0346     		mov	r3, r0
 6710 0030 002B     		cmp	r3, #0
 6711 0032 04D0     		beq	.L285
1996:main.c        ****         {       
1997:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 6712              		.loc 1 1997 0 is_stmt 1
 6713 0034 0022     		movs	r2, #0
 6714 0036 0949     		ldr	r1, .L287+4
 6715 0038 0320     		movs	r0, #3
 6716 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 6717              	.L285:
1990:main.c        ****     {
 6718              		.loc 1 1990 0 discriminator 2
 6719 003e 064B     		ldr	r3, .L287
 6720 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6721 0042 0133     		adds	r3, r3, #1
 6722 0044 DAB2     		uxtb	r2, r3
 6723 0046 044B     		ldr	r3, .L287
 6724 0048 1A70     		strb	r2, [r3]
 6725              	.L284:
1990:main.c        ****     {
 6726              		.loc 1 1990 0 is_stmt 0 discriminator 1
 6727 004a 034B     		ldr	r3, .L287
 6728 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6729 004e 5BB2     		sxtb	r3, r3
 6730 0050 002B     		cmp	r3, #0
 6731 0052 DBDA     		bge	.L286
1998:main.c        ****         }
1999:main.c        ****     }
2000:main.c        **** }
 6732              		.loc 1 2000 0 is_stmt 1
 6733 0054 00BF     		nop
 6734 0056 80BD     		pop	{r7, pc}
 6735              	.L288:
 6736              		.align	2
 6737              	.L287:
 6738 0058 00000000 		.word	i
 6739 005c 00000000 		.word	midiMsg
 6740 0060 00000000 		.word	USB_active
 6741              		.cfi_endproc
 6742              	.LFE92:
 6743              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 6744              		.global	checkStatus
 6745              		.bss
 6746              		.type	checkStatus, %object
 6747              		.size	checkStatus, 1
 6748              	checkStatus:
 6749 0104 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 156


 6750              		.global	checkBase
 6751 0105 00       		.align	1
 6752              		.type	checkBase, %object
 6753              		.size	checkBase, 2
 6754              	checkBase:
 6755 0106 0000     		.space	2
 6756              		.global	SPI_errors
 6757              		.align	2
 6758              		.type	SPI_errors, %object
 6759              		.size	SPI_errors, 4
 6760              	SPI_errors:
 6761 0108 00000000 		.space	4
 6762              		.section	.text.parseSysex,"ax",%progbits
 6763              		.align	2
 6764              		.global	parseSysex
 6765              		.thumb
 6766              		.thumb_func
 6767              		.type	parseSysex, %function
 6768              	parseSysex:
 6769              	.LFB93:
2001:main.c        **** 
2002:main.c        **** 
2003:main.c        **** 
2004:main.c        **** 
2005:main.c        **** volatile uint8_t checkStatus = 0;
2006:main.c        **** volatile uint16_t checkBase = 0;
2007:main.c        **** 
2008:main.c        **** 
2009:main.c        **** 
2010:main.c        **** int SPI_errors = 0;
2011:main.c        **** 
2012:main.c        **** void parseSysex(void)
2013:main.c        **** {
 6770              		.loc 1 2013 0
 6771              		.cfi_startproc
 6772              		@ args = 0, pretend = 0, frame = 56
 6773              		@ frame_needed = 1, uses_anonymous_args = 0
 6774 0000 90B5     		push	{r4, r7, lr}
 6775              		.cfi_def_cfa_offset 12
 6776              		.cfi_offset 4, -12
 6777              		.cfi_offset 7, -8
 6778              		.cfi_offset 14, -4
 6779 0002 8FB0     		sub	sp, sp, #60
 6780              		.cfi_def_cfa_offset 72
 6781 0004 00AF     		add	r7, sp, #0
 6782              		.cfi_def_cfa_register 7
2014:main.c        ****     parsingSysex = 1;
 6783              		.loc 1 2014 0
 6784 0006 864B     		ldr	r3, .L336
 6785 0008 0122     		movs	r2, #1
 6786 000a 1A70     		strb	r2, [r3]
2015:main.c        ****     //0 = it's a preset
2016:main.c        ****     if (sysexBuffer[0] == 0)
 6787              		.loc 1 2016 0
 6788 000c 854B     		ldr	r3, .L336+4
 6789 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6790 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 157


 6791 0012 40F09E82 		bne	.L290
 6792              	.LBB35:
2017:main.c        ****     {
2018:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 6793              		.loc 1 2018 0
 6794 0016 844B     		ldr	r3, .L336+8
 6795 0018 0122     		movs	r2, #1
 6796 001a 1A70     		strb	r2, [r3]
2019:main.c        ****         currentFloat = 0;
 6797              		.loc 1 2019 0
 6798 001c 834B     		ldr	r3, .L336+12
 6799 001e 0022     		movs	r2, #0
 6800 0020 1A60     		str	r2, [r3]
2020:main.c        ****         presetArraySection = presetName;
 6801              		.loc 1 2020 0
 6802 0022 834B     		ldr	r3, .L336+16
 6803 0024 0022     		movs	r2, #0
 6804 0026 1A70     		strb	r2, [r3]
2021:main.c        ****         presetNumberToWrite = sysexBuffer[1];
 6805              		.loc 1 2021 0
 6806 0028 7E4B     		ldr	r3, .L336+4
 6807 002a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 6808 002c 814B     		ldr	r3, .L336+20
 6809 002e 1A70     		strb	r2, [r3]
2022:main.c        ****         
2023:main.c        ****         union breakFloat theVal;
2024:main.c        ****         uint32_t i = 2;
 6810              		.loc 1 2024 0
 6811 0030 0223     		movs	r3, #2
 6812 0032 7B63     		str	r3, [r7, #52]
2025:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 6813              		.loc 1 2025 0
 6814 0034 1023     		movs	r3, #16
 6815 0036 FB77     		strb	r3, [r7, #31]
2026:main.c        ****         for (; i < stoppingPoint; i++)
 6816              		.loc 1 2026 0
 6817 0038 22E0     		b	.L291
 6818              	.L292:
2027:main.c        ****         {
2028:main.c        ****             presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit byte
 6819              		.loc 1 2028 0 discriminator 2
 6820 003a 7B6B     		ldr	r3, [r7, #52]
 6821 003c 023B     		subs	r3, r3, #2
 6822 003e 7949     		ldr	r1, .L336+4
 6823 0040 7A6B     		ldr	r2, [r7, #52]
 6824 0042 0A44     		add	r2, r2, r1
 6825 0044 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6826 0046 02F07F02 		and	r2, r2, #127
 6827 004a D1B2     		uxtb	r1, r2
 6828 004c 7A4A     		ldr	r2, .L336+24
 6829 004e D154     		strb	r1, [r2, r3]
2029:main.c        ****             presetNamesArray[presetNumberToWrite][i-2] = sysexBuffer[i] & 127;
 6830              		.loc 1 2029 0 discriminator 2
 6831 0050 784B     		ldr	r3, .L336+20
 6832 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6833 0054 1846     		mov	r0, r3
 6834 0056 7B6B     		ldr	r3, [r7, #52]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 158


 6835 0058 9A1E     		subs	r2, r3, #2
 6836 005a 7249     		ldr	r1, .L336+4
 6837 005c 7B6B     		ldr	r3, [r7, #52]
 6838 005e 0B44     		add	r3, r3, r1
 6839 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6840 0062 03F07F03 		and	r3, r3, #127
 6841 0066 DCB2     		uxtb	r4, r3
 6842 0068 7449     		ldr	r1, .L336+28
 6843 006a 0346     		mov	r3, r0
 6844 006c DB00     		lsls	r3, r3, #3
 6845 006e 1B1A     		subs	r3, r3, r0
 6846 0070 5B00     		lsls	r3, r3, #1
 6847 0072 0B44     		add	r3, r3, r1
 6848 0074 1344     		add	r3, r3, r2
 6849 0076 2246     		mov	r2, r4
 6850 0078 1A70     		strb	r2, [r3]
2026:main.c        ****         for (; i < stoppingPoint; i++)
 6851              		.loc 1 2026 0 discriminator 2
 6852 007a 7B6B     		ldr	r3, [r7, #52]
 6853 007c 0133     		adds	r3, r3, #1
 6854 007e 7B63     		str	r3, [r7, #52]
 6855              	.L291:
2026:main.c        ****         for (; i < stoppingPoint; i++)
 6856              		.loc 1 2026 0 is_stmt 0 discriminator 1
 6857 0080 FA7F     		ldrb	r2, [r7, #31]	@ zero_extendqisi2
 6858 0082 7B6B     		ldr	r3, [r7, #52]
 6859 0084 9A42     		cmp	r2, r3
 6860 0086 D8D8     		bhi	.L292
2030:main.c        ****         }
2031:main.c        ****         
2032:main.c        ****         presetArraySection = macroNames;
 6861              		.loc 1 2032 0 is_stmt 1
 6862 0088 694B     		ldr	r3, .L336+16
 6863 008a 0122     		movs	r2, #1
 6864 008c 1A70     		strb	r2, [r3]
 6865              	.LBB36:
2033:main.c        **** 
2034:main.c        ****         
2035:main.c        ****         for (int j = 0; j < NUM_MACROS; j++)
 6866              		.loc 1 2035 0
 6867 008e 0023     		movs	r3, #0
 6868 0090 3B63     		str	r3, [r7, #48]
 6869 0092 34E0     		b	.L293
 6870              	.L296:
 6871              	.LBB37:
2036:main.c        ****         {
2037:main.c        ****             for (int k = 0; k < NAME_LENGTH_IN_BYTES; k++)
 6872              		.loc 1 2037 0
 6873 0094 0023     		movs	r3, #0
 6874 0096 FB62     		str	r3, [r7, #44]
 6875 0098 2BE0     		b	.L294
 6876              	.L295:
2038:main.c        ****             {
2039:main.c        ****                 presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit 
 6877              		.loc 1 2039 0 discriminator 3
 6878 009a 7B6B     		ldr	r3, [r7, #52]
 6879 009c 023B     		subs	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 159


 6880 009e 6149     		ldr	r1, .L336+4
 6881 00a0 7A6B     		ldr	r2, [r7, #52]
 6882 00a2 0A44     		add	r2, r2, r1
 6883 00a4 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6884 00a6 02F07F02 		and	r2, r2, #127
 6885 00aa D1B2     		uxtb	r1, r2
 6886 00ac 624A     		ldr	r2, .L336+24
 6887 00ae D154     		strb	r1, [r2, r3]
2040:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[i] & 127; // pass on the f
 6888              		.loc 1 2040 0 discriminator 3
 6889 00b0 604B     		ldr	r3, .L336+20
 6890 00b2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6891 00b4 1846     		mov	r0, r3
 6892 00b6 5B4A     		ldr	r2, .L336+4
 6893 00b8 7B6B     		ldr	r3, [r7, #52]
 6894 00ba 1344     		add	r3, r3, r2
 6895 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6896 00be 03F07F03 		and	r3, r3, #127
 6897 00c2 DCB2     		uxtb	r4, r3
 6898 00c4 5E49     		ldr	r1, .L336+32
 6899 00c6 3B6B     		ldr	r3, [r7, #48]
 6900 00c8 1A46     		mov	r2, r3
 6901 00ca D200     		lsls	r2, r2, #3
 6902 00cc D21A     		subs	r2, r2, r3
 6903 00ce 5300     		lsls	r3, r2, #1
 6904 00d0 1A46     		mov	r2, r3
 6905 00d2 0346     		mov	r3, r0
 6906 00d4 DB00     		lsls	r3, r3, #3
 6907 00d6 1B1A     		subs	r3, r3, r0
 6908 00d8 1B01     		lsls	r3, r3, #4
 6909 00da 1344     		add	r3, r3, r2
 6910 00dc CA18     		adds	r2, r1, r3
 6911 00de FB6A     		ldr	r3, [r7, #44]
 6912 00e0 1344     		add	r3, r3, r2
 6913 00e2 2246     		mov	r2, r4
 6914 00e4 1A70     		strb	r2, [r3]
2041:main.c        ****                 i++;
 6915              		.loc 1 2041 0 discriminator 3
 6916 00e6 7B6B     		ldr	r3, [r7, #52]
 6917 00e8 0133     		adds	r3, r3, #1
 6918 00ea 7B63     		str	r3, [r7, #52]
2037:main.c        ****             {
 6919              		.loc 1 2037 0 discriminator 3
 6920 00ec FB6A     		ldr	r3, [r7, #44]
 6921 00ee 0133     		adds	r3, r3, #1
 6922 00f0 FB62     		str	r3, [r7, #44]
 6923              	.L294:
2037:main.c        ****             {
 6924              		.loc 1 2037 0 is_stmt 0 discriminator 1
 6925 00f2 FB6A     		ldr	r3, [r7, #44]
 6926 00f4 0D2B     		cmp	r3, #13
 6927 00f6 D0DD     		ble	.L295
 6928              	.LBE37:
2035:main.c        ****         {
 6929              		.loc 1 2035 0 is_stmt 1 discriminator 2
 6930 00f8 3B6B     		ldr	r3, [r7, #48]
 6931 00fa 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 160


 6932 00fc 3B63     		str	r3, [r7, #48]
 6933              	.L293:
2035:main.c        ****         {
 6934              		.loc 1 2035 0 is_stmt 0 discriminator 1
 6935 00fe 3B6B     		ldr	r3, [r7, #48]
 6936 0100 072B     		cmp	r3, #7
 6937 0102 C7DD     		ble	.L296
 6938              	.LBE36:
2042:main.c        ****             }
2043:main.c        ****         }
2044:main.c        ****         
2045:main.c        ****         uint16_t valsStart = NAME_LENGTH_IN_BYTES + (NAME_LENGTH_IN_BYTES * NUM_MACROS);
 6939              		.loc 1 2045 0 is_stmt 1
 6940 0104 7E23     		movs	r3, #126
 6941 0106 BB83     		strh	r3, [r7, #28]	@ movhi
2046:main.c        ****         
2047:main.c        ****         presetArraySection = initialVals;
 6942              		.loc 1 2047 0
 6943 0108 494B     		ldr	r3, .L336+16
 6944 010a 0222     		movs	r2, #2
 6945 010c 1A70     		strb	r2, [r3]
2048:main.c        ****         
2049:main.c        ****         for (; i < sysexPointer; i = i+5)
 6946              		.loc 1 2049 0
 6947 010e 19E2     		b	.L297
 6948              	.L318:
2050:main.c        ****         {
2051:main.c        ****             theVal.u32 = 0;
 6949              		.loc 1 2051 0
 6950 0110 0023     		movs	r3, #0
 6951 0112 BB60     		str	r3, [r7, #8]
2052:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 6952              		.loc 1 2052 0
 6953 0114 BB68     		ldr	r3, [r7, #8]
 6954 0116 4349     		ldr	r1, .L336+4
 6955 0118 7A6B     		ldr	r2, [r7, #52]
 6956 011a 0A44     		add	r2, r2, r1
 6957 011c 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6958 011e 1207     		lsls	r2, r2, #28
 6959 0120 1343     		orrs	r3, r3, r2
 6960 0122 BB60     		str	r3, [r7, #8]
2053:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
 6961              		.loc 1 2053 0
 6962 0124 BB68     		ldr	r3, [r7, #8]
 6963 0126 7A6B     		ldr	r2, [r7, #52]
 6964 0128 0132     		adds	r2, r2, #1
 6965 012a 3E49     		ldr	r1, .L336+4
 6966 012c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6967 012e 5205     		lsls	r2, r2, #21
 6968 0130 1343     		orrs	r3, r3, r2
 6969 0132 BB60     		str	r3, [r7, #8]
2054:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
 6970              		.loc 1 2054 0
 6971 0134 BB68     		ldr	r3, [r7, #8]
 6972 0136 7A6B     		ldr	r2, [r7, #52]
 6973 0138 0232     		adds	r2, r2, #2
 6974 013a 3A49     		ldr	r1, .L336+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 161


 6975 013c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6976 013e 9203     		lsls	r2, r2, #14
 6977 0140 1343     		orrs	r3, r3, r2
 6978 0142 BB60     		str	r3, [r7, #8]
2055:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
 6979              		.loc 1 2055 0
 6980 0144 BB68     		ldr	r3, [r7, #8]
 6981 0146 7A6B     		ldr	r2, [r7, #52]
 6982 0148 0332     		adds	r2, r2, #3
 6983 014a 3649     		ldr	r1, .L336+4
 6984 014c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 6985 014e D201     		lsls	r2, r2, #7
 6986 0150 1343     		orrs	r3, r3, r2
 6987 0152 BB60     		str	r3, [r7, #8]
2056:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
 6988              		.loc 1 2056 0
 6989 0154 BA68     		ldr	r2, [r7, #8]
 6990 0156 7B6B     		ldr	r3, [r7, #52]
 6991 0158 0433     		adds	r3, r3, #4
 6992 015a 3249     		ldr	r1, .L336+4
 6993 015c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 6994 015e 03F07F03 		and	r3, r3, #127
 6995 0162 1343     		orrs	r3, r3, r2
 6996 0164 BB60     		str	r3, [r7, #8]
2057:main.c        ****             testVal = theVal.f;
 6997              		.loc 1 2057 0
 6998 0166 BB68     		ldr	r3, [r7, #8]	@ float
 6999 0168 364A     		ldr	r2, .L336+36
 7000 016a 1360     		str	r3, [r2]	@ float
2058:main.c        ****             if (presetArraySection == initialVals)
 7001              		.loc 1 2058 0
 7002 016c 304B     		ldr	r3, .L336+16
 7003 016e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7004 0170 022B     		cmp	r3, #2
 7005 0172 40F0B980 		bne	.L298
2059:main.c        ****             {
2060:main.c        **** 
2061:main.c        ****                 if (currentFloat == 0)
 7006              		.loc 1 2061 0
 7007 0176 2D4B     		ldr	r3, .L336+12
 7008 0178 1B68     		ldr	r3, [r3]
 7009 017a 002B     		cmp	r3, #0
 7010 017c 22D1     		bne	.L299
2062:main.c        ****                 {
2063:main.c        ****                     valsCount = (uint16_t) theVal.f;
 7011              		.loc 1 2063 0
 7012 017e BB68     		ldr	r3, [r7, #8]	@ float
 7013 0180 1846     		mov	r0, r3
 7014 0182 FFF7FEFF 		bl	__aeabi_f2uiz
 7015 0186 0346     		mov	r3, r0
 7016 0188 9AB2     		uxth	r2, r3
 7017 018a 2F4B     		ldr	r3, .L336+40
 7018 018c 1A80     		strh	r2, [r3]	@ movhi
2064:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 7019              		.loc 1 2064 0
 7020 018e BA8B     		ldrh	r2, [r7, #28]
 7021 0190 264B     		ldr	r3, .L336+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 162


 7022 0192 1B68     		ldr	r3, [r3]
 7023 0194 591C     		adds	r1, r3, #1
 7024 0196 2548     		ldr	r0, .L336+12
 7025 0198 0160     		str	r1, [r0]
 7026 019a 1344     		add	r3, r3, r2
 7027 019c 2A4A     		ldr	r2, .L336+40
 7028 019e 1288     		ldrh	r2, [r2]
 7029 01a0 120A     		lsrs	r2, r2, #8
 7030 01a2 92B2     		uxth	r2, r2
 7031 01a4 D1B2     		uxtb	r1, r2
 7032 01a6 244A     		ldr	r2, .L336+24
 7033 01a8 D154     		strb	r1, [r2, r3]
2065:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 7034              		.loc 1 2065 0
 7035 01aa BA8B     		ldrh	r2, [r7, #28]
 7036 01ac 1F4B     		ldr	r3, .L336+12
 7037 01ae 1B68     		ldr	r3, [r3]
 7038 01b0 591C     		adds	r1, r3, #1
 7039 01b2 1E48     		ldr	r0, .L336+12
 7040 01b4 0160     		str	r1, [r0]
 7041 01b6 1344     		add	r3, r3, r2
 7042 01b8 234A     		ldr	r2, .L336+40
 7043 01ba 1288     		ldrh	r2, [r2]
 7044 01bc D1B2     		uxtb	r1, r2
 7045 01be 1E4A     		ldr	r2, .L336+24
 7046 01c0 D154     		strb	r1, [r2, r3]
 7047 01c2 BCE1     		b	.L305
 7048              	.L299:
2066:main.c        ****                 }
2067:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 7049              		.loc 1 2067 0
 7050 01c4 204B     		ldr	r3, .L336+40
 7051 01c6 1B88     		ldrh	r3, [r3]
 7052 01c8 0133     		adds	r3, r3, #1
 7053 01ca 5B00     		lsls	r3, r3, #1
 7054 01cc 1A46     		mov	r2, r3
 7055 01ce 174B     		ldr	r3, .L336+12
 7056 01d0 1B68     		ldr	r3, [r3]
 7057 01d2 9A42     		cmp	r2, r3
 7058 01d4 3CD9     		bls	.L301
 7059              	.LBB38:
2068:main.c        ****                 { 
2069:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 7060              		.loc 1 2069 0
 7061 01d6 BB68     		ldr	r3, [r7, #8]	@ float
 7062 01d8 1C49     		ldr	r1, .L336+44
 7063 01da 1846     		mov	r0, r3
 7064 01dc FFF7FEFF 		bl	__aeabi_fmul
 7065 01e0 0346     		mov	r3, r0
 7066 01e2 1846     		mov	r0, r3
 7067 01e4 FFF7FEFF 		bl	__aeabi_f2uiz
 7068 01e8 0346     		mov	r3, r0
 7069 01ea 7B83     		strh	r3, [r7, #26]	@ movhi
2070:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 7070              		.loc 1 2070 0
 7071 01ec BA8B     		ldrh	r2, [r7, #28]
 7072 01ee 0F4B     		ldr	r3, .L336+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 163


 7073 01f0 1B68     		ldr	r3, [r3]
 7074 01f2 591C     		adds	r1, r3, #1
 7075 01f4 0D48     		ldr	r0, .L336+12
 7076 01f6 0160     		str	r1, [r0]
 7077 01f8 1344     		add	r3, r3, r2
 7078 01fa 7A8B     		ldrh	r2, [r7, #26]
 7079 01fc 120A     		lsrs	r2, r2, #8
 7080 01fe 92B2     		uxth	r2, r2
 7081 0200 D1B2     		uxtb	r1, r2
 7082 0202 0D4A     		ldr	r2, .L336+24
 7083 0204 D154     		strb	r1, [r2, r3]
2071:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7084              		.loc 1 2071 0
 7085 0206 BA8B     		ldrh	r2, [r7, #28]
 7086 0208 084B     		ldr	r3, .L336+12
 7087 020a 1B68     		ldr	r3, [r3]
 7088 020c 591C     		adds	r1, r3, #1
 7089 020e 0748     		ldr	r0, .L336+12
 7090 0210 0160     		str	r1, [r0]
 7091 0212 1344     		add	r3, r3, r2
 7092 0214 7A8B     		ldrh	r2, [r7, #26]	@ movhi
 7093 0216 D1B2     		uxtb	r1, r2
 7094 0218 074A     		ldr	r2, .L336+24
 7095 021a D154     		strb	r1, [r2, r3]
 7096              	.LBE38:
 7097 021c 8FE1     		b	.L305
 7098              	.L337:
 7099 021e 00BF     		.align	2
 7100              	.L336:
 7101 0220 00000000 		.word	parsingSysex
 7102 0224 00000000 		.word	sysexBuffer
 7103 0228 00000000 		.word	sysexMessageInProgress
 7104 022c 00000000 		.word	currentFloat
 7105 0230 00000000 		.word	presetArraySection
 7106 0234 00000000 		.word	presetNumberToWrite
 7107 0238 00000000 		.word	presetArray
 7108 023c 00000000 		.word	presetNamesArray
 7109 0240 00000000 		.word	macroNamesArray
 7110 0244 00000000 		.word	testVal
 7111 0248 00000000 		.word	valsCount
 7112 024c 00FF7F47 		.word	1199570688
 7113              	.L301:
2072:main.c        ****                 }
2073:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 7114              		.loc 1 2073 0
 7115 0250 854B     		ldr	r3, .L338
 7116 0252 1B88     		ldrh	r3, [r3]
 7117 0254 0133     		adds	r3, r3, #1
 7118 0256 5B00     		lsls	r3, r3, #1
 7119 0258 1A46     		mov	r2, r3
 7120 025a 844B     		ldr	r3, .L338+4
 7121 025c 1B68     		ldr	r3, [r3]
 7122 025e 9A42     		cmp	r2, r3
 7123 0260 40F06D81 		bne	.L305
2074:main.c        ****                 {
2075:main.c        ****                     valCheck = theVal.f;
 7124              		.loc 1 2075 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 164


 7125 0264 BB68     		ldr	r3, [r7, #8]	@ float
 7126 0266 824A     		ldr	r2, .L338+8
 7127 0268 1360     		str	r3, [r2]	@ float
2076:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 7128              		.loc 1 2076 0
 7129 026a 814B     		ldr	r3, .L338+8
 7130 026c 1B68     		ldr	r3, [r3]	@ float
 7131 026e 8149     		ldr	r1, .L338+12
 7132 0270 1846     		mov	r0, r3
 7133 0272 FFF7FEFF 		bl	__aeabi_fcmplt
 7134 0276 0346     		mov	r3, r0
 7135 0278 002B     		cmp	r3, #0
 7136 027a 23D0     		beq	.L302
 7137              		.loc 1 2076 0 is_stmt 0 discriminator 1
 7138 027c 7C4B     		ldr	r3, .L338+8
 7139 027e 1B68     		ldr	r3, [r3]	@ float
 7140 0280 7D49     		ldr	r1, .L338+16
 7141 0282 1846     		mov	r0, r3
 7142 0284 FFF7FEFF 		bl	__aeabi_fcmpgt
 7143 0288 0346     		mov	r3, r0
 7144 028a 002B     		cmp	r3, #0
 7145 028c 1AD0     		beq	.L302
2077:main.c        ****                     {
2078:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7146              		.loc 1 2078 0 is_stmt 1
 7147 028e BA8B     		ldrh	r2, [r7, #28]
 7148 0290 764B     		ldr	r3, .L338+4
 7149 0292 1B68     		ldr	r3, [r3]
 7150 0294 591C     		adds	r1, r3, #1
 7151 0296 7548     		ldr	r0, .L338+4
 7152 0298 0160     		str	r1, [r0]
 7153 029a 1344     		add	r3, r3, r2
 7154 029c 774A     		ldr	r2, .L338+20
 7155 029e EF21     		movs	r1, #239
 7156 02a0 D154     		strb	r1, [r2, r3]
2079:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 7157              		.loc 1 2079 0
 7158 02a2 BA8B     		ldrh	r2, [r7, #28]
 7159 02a4 714B     		ldr	r3, .L338+4
 7160 02a6 1B68     		ldr	r3, [r3]
 7161 02a8 591C     		adds	r1, r3, #1
 7162 02aa 7048     		ldr	r0, .L338+4
 7163 02ac 0160     		str	r1, [r0]
 7164 02ae 1344     		add	r3, r3, r2
 7165 02b0 724A     		ldr	r2, .L338+20
 7166 02b2 EF21     		movs	r1, #239
 7167 02b4 D154     		strb	r1, [r2, r3]
2080:main.c        ****                         presetArraySection = mapCountNext;
 7168              		.loc 1 2080 0
 7169 02b6 724B     		ldr	r3, .L338+24
 7170 02b8 0322     		movs	r2, #3
 7171 02ba 1A70     		strb	r2, [r3]
2081:main.c        ****                         mapCount = 0;
 7172              		.loc 1 2081 0
 7173 02bc 714B     		ldr	r3, .L338+28
 7174 02be 0022     		movs	r2, #0
 7175 02c0 1A60     		str	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 165


 7176 02c2 3CE1     		b	.L305
 7177              	.L302:
2082:main.c        ****                     }
2083:main.c        ****                     else
2084:main.c        ****                     {
2085:main.c        ****                         //error state
2086:main.c        ****                         SPI_errors++;
 7178              		.loc 1 2086 0
 7179 02c4 704B     		ldr	r3, .L338+32
 7180 02c6 1B68     		ldr	r3, [r3]
 7181 02c8 0133     		adds	r3, r3, #1
 7182 02ca 6F4A     		ldr	r2, .L338+32
 7183 02cc 1360     		str	r3, [r2]
2087:main.c        ****                         sysexMessageInProgress = 0;
 7184              		.loc 1 2087 0
 7185 02ce 6F4B     		ldr	r3, .L338+36
 7186 02d0 0022     		movs	r2, #0
 7187 02d2 1A70     		strb	r2, [r3]
2088:main.c        ****                         sysexPointer = 0;
 7188              		.loc 1 2088 0
 7189 02d4 6E4B     		ldr	r3, .L338+40
 7190 02d6 0022     		movs	r2, #0
 7191 02d8 1A60     		str	r2, [r3]
2089:main.c        ****                         sendingMessage = 0;
 7192              		.loc 1 2089 0
 7193 02da 6E4B     		ldr	r3, .L338+44
 7194 02dc 0022     		movs	r2, #0
 7195 02de 1A70     		strb	r2, [r3]
2090:main.c        ****                         parseThatMF = 0;
 7196              		.loc 1 2090 0
 7197 02e0 6D4B     		ldr	r3, .L338+48
 7198 02e2 0022     		movs	r2, #0
 7199 02e4 1A70     		strb	r2, [r3]
 7200 02e6 2AE1     		b	.L305
 7201              	.L298:
2091:main.c        ****                     }
2092:main.c        ****                 }
2093:main.c        ****             }
2094:main.c        ****             else if (presetArraySection == mapCountNext)
 7202              		.loc 1 2094 0
 7203 02e8 654B     		ldr	r3, .L338+24
 7204 02ea 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7205 02ec 032B     		cmp	r3, #3
 7206 02ee 28D1     		bne	.L306
2095:main.c        ****             {
2096:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 7207              		.loc 1 2096 0
 7208 02f0 BB68     		ldr	r3, [r7, #8]	@ float
 7209 02f2 1846     		mov	r0, r3
 7210 02f4 FFF7FEFF 		bl	__aeabi_f2uiz
 7211 02f8 0346     		mov	r3, r0
 7212 02fa 9AB2     		uxth	r2, r3
 7213 02fc 674B     		ldr	r3, .L338+52
 7214 02fe 1A80     		strh	r2, [r3]	@ movhi
2097:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 7215              		.loc 1 2097 0
 7216 0300 BA8B     		ldrh	r2, [r7, #28]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 166


 7217 0302 5A4B     		ldr	r3, .L338+4
 7218 0304 1B68     		ldr	r3, [r3]
 7219 0306 591C     		adds	r1, r3, #1
 7220 0308 5848     		ldr	r0, .L338+4
 7221 030a 0160     		str	r1, [r0]
 7222 030c 1344     		add	r3, r3, r2
 7223 030e 634A     		ldr	r2, .L338+52
 7224 0310 1288     		ldrh	r2, [r2]
 7225 0312 120A     		lsrs	r2, r2, #8
 7226 0314 92B2     		uxth	r2, r2
 7227 0316 D1B2     		uxtb	r1, r2
 7228 0318 584A     		ldr	r2, .L338+20
 7229 031a D154     		strb	r1, [r2, r3]
2098:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 7230              		.loc 1 2098 0
 7231 031c BA8B     		ldrh	r2, [r7, #28]
 7232 031e 534B     		ldr	r3, .L338+4
 7233 0320 1B68     		ldr	r3, [r3]
 7234 0322 591C     		adds	r1, r3, #1
 7235 0324 5148     		ldr	r0, .L338+4
 7236 0326 0160     		str	r1, [r0]
 7237 0328 1344     		add	r3, r3, r2
 7238 032a 5C4A     		ldr	r2, .L338+52
 7239 032c 1288     		ldrh	r2, [r2]
 7240 032e D1B2     		uxtb	r1, r2
 7241 0330 524A     		ldr	r2, .L338+20
 7242 0332 D154     		strb	r1, [r2, r3]
2099:main.c        ****                 presetArraySection = mapping;
 7243              		.loc 1 2099 0
 7244 0334 524B     		ldr	r3, .L338+24
 7245 0336 0422     		movs	r2, #4
 7246 0338 1A70     		strb	r2, [r3]
2100:main.c        ****                 numMappings = 0;
 7247              		.loc 1 2100 0
 7248 033a 594B     		ldr	r3, .L338+56
 7249 033c 0022     		movs	r2, #0
 7250 033e 1A80     		strh	r2, [r3]	@ movhi
 7251 0340 FDE0     		b	.L305
 7252              	.L306:
2101:main.c        ****             }
2102:main.c        ****             else if (presetArraySection == mapping)
 7253              		.loc 1 2102 0
 7254 0342 4F4B     		ldr	r3, .L338+24
 7255 0344 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7256 0346 042B     		cmp	r3, #4
 7257 0348 40F0F980 		bne	.L305
2103:main.c        ****             {
2104:main.c        ****                 // this is the order
2105:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2106:main.c        ****                 if (numMappings < mapCountExpectation)
 7258              		.loc 1 2106 0
 7259 034c 544B     		ldr	r3, .L338+56
 7260 034e 1A88     		ldrh	r2, [r3]
 7261 0350 524B     		ldr	r3, .L338+52
 7262 0352 1B88     		ldrh	r3, [r3]
 7263 0354 9A42     		cmp	r2, r3
 7264 0356 80F0A780 		bcs	.L307
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 167


2107:main.c        ****                 {
2108:main.c        ****                     if ((mapCount % 4) == 0)
 7265              		.loc 1 2108 0
 7266 035a 4A4B     		ldr	r3, .L338+28
 7267 035c 1B68     		ldr	r3, [r3]
 7268 035e 03F00303 		and	r3, r3, #3
 7269 0362 002B     		cmp	r3, #0
 7270 0364 0FD1     		bne	.L308
2109:main.c        ****                     {
2110:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7271              		.loc 1 2110 0
 7272 0366 BA8B     		ldrh	r2, [r7, #28]
 7273 0368 404B     		ldr	r3, .L338+4
 7274 036a 1B68     		ldr	r3, [r3]
 7275 036c 591C     		adds	r1, r3, #1
 7276 036e 3F48     		ldr	r0, .L338+4
 7277 0370 0160     		str	r1, [r0]
 7278 0372 D418     		adds	r4, r2, r3
 7279 0374 BB68     		ldr	r3, [r7, #8]	@ float
 7280 0376 1846     		mov	r0, r3
 7281 0378 FFF7FEFF 		bl	__aeabi_f2uiz
 7282 037c 0346     		mov	r3, r0
 7283 037e DAB2     		uxtb	r2, r3
 7284 0380 3E4B     		ldr	r3, .L338+20
 7285 0382 1A55     		strb	r2, [r3, r4]
 7286 0384 69E0     		b	.L309
 7287              	.L308:
2111:main.c        ****                     }
2112:main.c        ****                     else if  (mapCount % 4 == 1)
 7288              		.loc 1 2112 0
 7289 0386 3F4B     		ldr	r3, .L338+28
 7290 0388 1B68     		ldr	r3, [r3]
 7291 038a 03F00303 		and	r3, r3, #3
 7292 038e 012B     		cmp	r3, #1
 7293 0390 0FD1     		bne	.L310
2113:main.c        ****                     {
2114:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7294              		.loc 1 2114 0
 7295 0392 BA8B     		ldrh	r2, [r7, #28]
 7296 0394 354B     		ldr	r3, .L338+4
 7297 0396 1B68     		ldr	r3, [r3]
 7298 0398 591C     		adds	r1, r3, #1
 7299 039a 3448     		ldr	r0, .L338+4
 7300 039c 0160     		str	r1, [r0]
 7301 039e D418     		adds	r4, r2, r3
 7302 03a0 BB68     		ldr	r3, [r7, #8]	@ float
 7303 03a2 1846     		mov	r0, r3
 7304 03a4 FFF7FEFF 		bl	__aeabi_f2uiz
 7305 03a8 0346     		mov	r3, r0
 7306 03aa DAB2     		uxtb	r2, r3
 7307 03ac 334B     		ldr	r3, .L338+20
 7308 03ae 1A55     		strb	r2, [r3, r4]
 7309 03b0 53E0     		b	.L309
 7310              	.L310:
2115:main.c        ****                     }
2116:main.c        ****                     else if (mapCount % 4 == 2) //check if the scalar source is -1 (if so send 255 
 7311              		.loc 1 2116 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 168


 7312 03b2 344B     		ldr	r3, .L338+28
 7313 03b4 1B68     		ldr	r3, [r3]
 7314 03b6 03F00303 		and	r3, r3, #3
 7315 03ba 022B     		cmp	r3, #2
 7316 03bc 23D1     		bne	.L311
2117:main.c        ****                     {
2118:main.c        ****                         if (theVal.f < 0.0f)
 7317              		.loc 1 2118 0
 7318 03be BB68     		ldr	r3, [r7, #8]	@ float
 7319 03c0 4FF00001 		mov	r1, #0
 7320 03c4 1846     		mov	r0, r3
 7321 03c6 FFF7FEFF 		bl	__aeabi_fcmplt
 7322 03ca 0346     		mov	r3, r0
 7323 03cc 002B     		cmp	r3, #0
 7324 03ce 0AD0     		beq	.L335
2119:main.c        ****                         {
2120:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 7325              		.loc 1 2120 0
 7326 03d0 BA8B     		ldrh	r2, [r7, #28]
 7327 03d2 264B     		ldr	r3, .L338+4
 7328 03d4 1B68     		ldr	r3, [r3]
 7329 03d6 591C     		adds	r1, r3, #1
 7330 03d8 2448     		ldr	r0, .L338+4
 7331 03da 0160     		str	r1, [r0]
 7332 03dc 1344     		add	r3, r3, r2
 7333 03de 274A     		ldr	r2, .L338+20
 7334 03e0 FF21     		movs	r1, #255
 7335 03e2 D154     		strb	r1, [r2, r3]
 7336 03e4 39E0     		b	.L309
 7337              	.L335:
2121:main.c        ****                         }
2122:main.c        ****                         else
2123:main.c        ****                         {
2124:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 7338              		.loc 1 2124 0
 7339 03e6 BA8B     		ldrh	r2, [r7, #28]
 7340 03e8 204B     		ldr	r3, .L338+4
 7341 03ea 1B68     		ldr	r3, [r3]
 7342 03ec 591C     		adds	r1, r3, #1
 7343 03ee 1F48     		ldr	r0, .L338+4
 7344 03f0 0160     		str	r1, [r0]
 7345 03f2 D418     		adds	r4, r2, r3
 7346 03f4 BB68     		ldr	r3, [r7, #8]	@ float
 7347 03f6 1846     		mov	r0, r3
 7348 03f8 FFF7FEFF 		bl	__aeabi_f2uiz
 7349 03fc 0346     		mov	r3, r0
 7350 03fe DAB2     		uxtb	r2, r3
 7351 0400 1E4B     		ldr	r3, .L338+20
 7352 0402 1A55     		strb	r2, [r3, r4]
 7353 0404 29E0     		b	.L309
 7354              	.L311:
 7355              	.LBB39:
2125:main.c        ****                         }
2126:main.c        ****                     }
2127:main.c        ****                     else
2128:main.c        ****                     {
2129:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 169


 7356              		.loc 1 2129 0
 7357 0406 BB68     		ldr	r3, [r7, #8]	@ float
 7358 0408 2649     		ldr	r1, .L338+60
 7359 040a 1846     		mov	r0, r3
 7360 040c FFF7FEFF 		bl	__aeabi_fmul
 7361 0410 0346     		mov	r3, r0
 7362 0412 1846     		mov	r0, r3
 7363 0414 FFF7FEFF 		bl	__aeabi_f2iz
 7364 0418 0346     		mov	r3, r0
 7365 041a 3B83     		strh	r3, [r7, #24]	@ movhi
2130:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 7366              		.loc 1 2130 0
 7367 041c BA8B     		ldrh	r2, [r7, #28]
 7368 041e 134B     		ldr	r3, .L338+4
 7369 0420 1B68     		ldr	r3, [r3]
 7370 0422 591C     		adds	r1, r3, #1
 7371 0424 1148     		ldr	r0, .L338+4
 7372 0426 0160     		str	r1, [r0]
 7373 0428 1344     		add	r3, r3, r2
 7374 042a B7F91820 		ldrsh	r2, [r7, #24]
 7375 042e 1212     		asrs	r2, r2, #8
 7376 0430 12B2     		sxth	r2, r2
 7377 0432 D1B2     		uxtb	r1, r2
 7378 0434 114A     		ldr	r2, .L338+20
 7379 0436 D154     		strb	r1, [r2, r3]
2131:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 7380              		.loc 1 2131 0
 7381 0438 BA8B     		ldrh	r2, [r7, #28]
 7382 043a 0C4B     		ldr	r3, .L338+4
 7383 043c 1B68     		ldr	r3, [r3]
 7384 043e 591C     		adds	r1, r3, #1
 7385 0440 0A48     		ldr	r0, .L338+4
 7386 0442 0160     		str	r1, [r0]
 7387 0444 1344     		add	r3, r3, r2
 7388 0446 3A8B     		ldrh	r2, [r7, #24]	@ movhi
 7389 0448 D1B2     		uxtb	r1, r2
 7390 044a 0C4A     		ldr	r2, .L338+20
 7391 044c D154     		strb	r1, [r2, r3]
2132:main.c        ****                         numMappings++;
 7392              		.loc 1 2132 0
 7393 044e 144B     		ldr	r3, .L338+56
 7394 0450 1B88     		ldrh	r3, [r3]
 7395 0452 0133     		adds	r3, r3, #1
 7396 0454 9AB2     		uxth	r2, r3
 7397 0456 124B     		ldr	r3, .L338+56
 7398 0458 1A80     		strh	r2, [r3]	@ movhi
 7399              	.L309:
 7400              	.LBE39:
2133:main.c        ****                     }
2134:main.c        ****                     mapCount++;
 7401              		.loc 1 2134 0
 7402 045a 0A4B     		ldr	r3, .L338+28
 7403 045c 1B68     		ldr	r3, [r3]
 7404 045e 0133     		adds	r3, r3, #1
 7405 0460 084A     		ldr	r2, .L338+28
 7406 0462 1360     		str	r3, [r2]
 7407 0464 6BE0     		b	.L305
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 170


 7408              	.L339:
 7409 0466 00BF     		.align	2
 7410              	.L338:
 7411 0468 00000000 		.word	valsCount
 7412 046c 00000000 		.word	currentFloat
 7413 0470 00000000 		.word	valCheck
 7414 0474 0000C0BF 		.word	-1077936128
 7415 0478 000020C0 		.word	-1071644672
 7416 047c 00000000 		.word	presetArray
 7417 0480 00000000 		.word	presetArraySection
 7418 0484 00000000 		.word	mapCount
 7419 0488 00000000 		.word	SPI_errors
 7420 048c 00000000 		.word	sysexMessageInProgress
 7421 0490 00000000 		.word	sysexPointer
 7422 0494 00000000 		.word	sendingMessage
 7423 0498 00000000 		.word	parseThatMF
 7424 049c 00000000 		.word	mapCountExpectation
 7425 04a0 00000000 		.word	numMappings
 7426 04a4 00FEFF46 		.word	1191181824
 7427              	.L307:
2135:main.c        ****                 }
2136:main.c        ****                 
2137:main.c        **** 
2138:main.c        ****                 else
2139:main.c        ****                 {
2140:main.c        ****                     //mapcount ended
2141:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 7428              		.loc 1 2141 0
 7429 04a8 BB68     		ldr	r3, [r7, #8]	@ float
 7430 04aa 6349     		ldr	r1, .L340
 7431 04ac 1846     		mov	r0, r3
 7432 04ae FFF7FEFF 		bl	__aeabi_fcmplt
 7433 04b2 0346     		mov	r3, r0
 7434 04b4 002B     		cmp	r3, #0
 7435 04b6 31D0     		beq	.L315
 7436              		.loc 1 2141 0 is_stmt 0 discriminator 1
 7437 04b8 BB68     		ldr	r3, [r7, #8]	@ float
 7438 04ba 6049     		ldr	r1, .L340+4
 7439 04bc 1846     		mov	r0, r3
 7440 04be FFF7FEFF 		bl	__aeabi_fcmpgt
 7441 04c2 0346     		mov	r3, r0
 7442 04c4 002B     		cmp	r3, #0
 7443 04c6 29D0     		beq	.L315
2142:main.c        ****                     {
2143:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 7444              		.loc 1 2143 0 is_stmt 1
 7445 04c8 BA8B     		ldrh	r2, [r7, #28]
 7446 04ca 5D4B     		ldr	r3, .L340+8
 7447 04cc 1B68     		ldr	r3, [r3]
 7448 04ce 591C     		adds	r1, r3, #1
 7449 04d0 5B48     		ldr	r0, .L340+8
 7450 04d2 0160     		str	r1, [r0]
 7451 04d4 1344     		add	r3, r3, r2
 7452 04d6 5B4A     		ldr	r2, .L340+12
 7453 04d8 FE21     		movs	r1, #254
 7454 04da D154     		strb	r1, [r2, r3]
2144:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 171


 7455              		.loc 1 2144 0
 7456 04dc BA8B     		ldrh	r2, [r7, #28]
 7457 04de 584B     		ldr	r3, .L340+8
 7458 04e0 1B68     		ldr	r3, [r3]
 7459 04e2 591C     		adds	r1, r3, #1
 7460 04e4 5648     		ldr	r0, .L340+8
 7461 04e6 0160     		str	r1, [r0]
 7462 04e8 1344     		add	r3, r3, r2
 7463 04ea 564A     		ldr	r2, .L340+12
 7464 04ec FE21     		movs	r1, #254
 7465 04ee D154     		strb	r1, [r2, r3]
2145:main.c        ****                         presetArraySection = presetEnd;
 7466              		.loc 1 2145 0
 7467 04f0 554B     		ldr	r3, .L340+16
 7468 04f2 0522     		movs	r2, #5
 7469 04f4 1A70     		strb	r2, [r3]
2146:main.c        ****                         sysexMessageInProgress = 0;
 7470              		.loc 1 2146 0
 7471 04f6 554B     		ldr	r3, .L340+20
 7472 04f8 0022     		movs	r2, #0
 7473 04fa 1A70     		strb	r2, [r3]
2147:main.c        ****                         sendingMessage = 1;
 7474              		.loc 1 2147 0
 7475 04fc 544B     		ldr	r3, .L340+24
 7476 04fe 0122     		movs	r2, #1
 7477 0500 1A70     		strb	r2, [r3]
2148:main.c        ****                         patchNum = presetNumberToWrite;
 7478              		.loc 1 2148 0
 7479 0502 544B     		ldr	r3, .L340+28
 7480 0504 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7481 0506 544B     		ldr	r3, .L340+32
 7482 0508 1A70     		strb	r2, [r3]
2149:main.c        ****                         messageArraySize = valsStart + currentFloat;
 7483              		.loc 1 2149 0
 7484 050a 4D4B     		ldr	r3, .L340+8
 7485 050c 1B68     		ldr	r3, [r3]
 7486 050e 9AB2     		uxth	r2, r3
 7487 0510 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 7488 0512 1344     		add	r3, r3, r2
 7489 0514 9AB2     		uxth	r2, r3
 7490 0516 514B     		ldr	r3, .L340+36
 7491 0518 1A80     		strh	r2, [r3]	@ movhi
 7492 051a 10E0     		b	.L305
 7493              	.L315:
2150:main.c        ****                     }
2151:main.c        ****                     else
2152:main.c        ****                     {
2153:main.c        ****                         //error state
2154:main.c        ****                         SPI_errors++;
 7494              		.loc 1 2154 0
 7495 051c 504B     		ldr	r3, .L340+40
 7496 051e 1B68     		ldr	r3, [r3]
 7497 0520 0133     		adds	r3, r3, #1
 7498 0522 4F4A     		ldr	r2, .L340+40
 7499 0524 1360     		str	r3, [r2]
2155:main.c        ****                         sysexMessageInProgress = 0;
 7500              		.loc 1 2155 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 172


 7501 0526 494B     		ldr	r3, .L340+20
 7502 0528 0022     		movs	r2, #0
 7503 052a 1A70     		strb	r2, [r3]
2156:main.c        ****                         sysexPointer = 0;
 7504              		.loc 1 2156 0
 7505 052c 4D4B     		ldr	r3, .L340+44
 7506 052e 0022     		movs	r2, #0
 7507 0530 1A60     		str	r2, [r3]
2157:main.c        ****                         sendingMessage = 0;
 7508              		.loc 1 2157 0
 7509 0532 474B     		ldr	r3, .L340+24
 7510 0534 0022     		movs	r2, #0
 7511 0536 1A70     		strb	r2, [r3]
2158:main.c        ****                         parseThatMF = 0;
 7512              		.loc 1 2158 0
 7513 0538 4B4B     		ldr	r3, .L340+48
 7514 053a 0022     		movs	r2, #0
 7515 053c 1A70     		strb	r2, [r3]
 7516              	.L305:
2049:main.c        ****         {
 7517              		.loc 1 2049 0
 7518 053e 7B6B     		ldr	r3, [r7, #52]
 7519 0540 0533     		adds	r3, r3, #5
 7520 0542 7B63     		str	r3, [r7, #52]
 7521              	.L297:
2049:main.c        ****         {
 7522              		.loc 1 2049 0 is_stmt 0 discriminator 1
 7523 0544 474B     		ldr	r3, .L340+44
 7524 0546 1B68     		ldr	r3, [r3]
 7525 0548 7A6B     		ldr	r2, [r7, #52]
 7526 054a 9A42     		cmp	r2, r3
 7527 054c FFF4E0AD 		bcc	.L318
 7528 0550 85E1     		b	.L319
 7529              	.L290:
 7530              	.LBE35:
2159:main.c        ****                     }
2160:main.c        ****                 }
2161:main.c        ****             }
2162:main.c        ****             
2163:main.c        ****         }
2164:main.c        ****     }
2165:main.c        ****     #if 0
2166:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2167:main.c        ****     {
2168:main.c        ****         
2169:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2170:main.c        ****         currentFloat = 0;
2171:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2172:main.c        ****         union breakFloat theVal;
2173:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2174:main.c        ****         {
2175:main.c        ****             theVal.u32 = 0;
2176:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2177:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2178:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2179:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2180:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 173


2181:main.c        ****             testVal = theVal.f;
2182:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2183:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2184:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2185:main.c        ****         }
2186:main.c        ****         
2187:main.c        ****         tuningArray[currentFloat++] = 0xef;
2188:main.c        ****         tuningArray[currentFloat++] = 0xef;
2189:main.c        ****                         
2190:main.c        ****         
2191:main.c        ****         messageArraySize = currentFloat;
2192:main.c        ****                     
2193:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
2194:main.c        ****         {
2195:main.c        ****             //error state
2196:main.c        ****             SPI_errors++;
2197:main.c        ****             sysexMessageInProgress = 0;
2198:main.c        ****             sysexPointer = 0;
2199:main.c        ****             sendingMessage = 0;
2200:main.c        ****             parseThatMF = 0;
2201:main.c        ****         } else 
2202:main.c        ****         {
2203:main.c        ****             sysexMessageInProgress = 0;
2204:main.c        ****             sendingMessage = 2;
2205:main.c        ****         }
2206:main.c        ****     }
2207:main.c        ****     #endif
2208:main.c        ****     else if (sysexBuffer[0] == 2) //its a copedent
 7531              		.loc 1 2208 0 is_stmt 1
 7532 0552 464B     		ldr	r3, .L340+52
 7533 0554 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7534 0556 022B     		cmp	r3, #2
 7535 0558 40F08181 		bne	.L319
 7536              	.LBB40:
2209:main.c        ****     {
2210:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 7537              		.loc 1 2210 0
 7538 055c 3B4B     		ldr	r3, .L340+20
 7539 055e 0122     		movs	r2, #1
 7540 0560 1A70     		strb	r2, [r3]
2211:main.c        ****         currentFloat = 0;
 7541              		.loc 1 2211 0
 7542 0562 374B     		ldr	r3, .L340+8
 7543 0564 0022     		movs	r2, #0
 7544 0566 1A60     		str	r2, [r3]
2212:main.c        ****         copedentNumberToWrite = sysexBuffer[1];
 7545              		.loc 1 2212 0
 7546 0568 404B     		ldr	r3, .L340+52
 7547 056a 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 7548 056c 404B     		ldr	r3, .L340+56
 7549 056e 1A70     		strb	r2, [r3]
2213:main.c        ****         currentCopedent = copedentNumberToWrite;
 7550              		.loc 1 2213 0
 7551 0570 3F4B     		ldr	r3, .L340+56
 7552 0572 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 7553 0574 3F4B     		ldr	r3, .L340+60
 7554 0576 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 174


2214:main.c        ****         necks[currentNeck] = currentCopedent;
 7555              		.loc 1 2214 0
 7556 0578 3F4B     		ldr	r3, .L340+64
 7557 057a 1B68     		ldr	r3, [r3]
 7558 057c 3D4A     		ldr	r2, .L340+60
 7559 057e 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 7560 0580 3E4A     		ldr	r2, .L340+68
 7561 0582 D154     		strb	r1, [r2, r3]
2215:main.c        **** 
2216:main.c        ****               
2217:main.c        ****         
2218:main.c        ****         union breakFloat theVal;
2219:main.c        ****         uint32_t i = 2;
 7562              		.loc 1 2219 0
 7563 0584 0223     		movs	r3, #2
 7564 0586 BB62     		str	r3, [r7, #40]
2220:main.c        ****         uint8_t stoppingPoint = NAME_LENGTH_IN_BYTES+2;
 7565              		.loc 1 2220 0
 7566 0588 1023     		movs	r3, #16
 7567 058a FB75     		strb	r3, [r7, #23]
2221:main.c        ****         for (; i < stoppingPoint; i++)
 7568              		.loc 1 2221 0
 7569 058c 40E0     		b	.L320
 7570              	.L321:
 7571              	.LBB41:
2222:main.c        ****         {
2223:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2224:main.c        ****             uint8_t tempChar = sysexBuffer[i] & 127;
 7572              		.loc 1 2224 0 discriminator 2
 7573 058e 374A     		ldr	r2, .L340+52
 7574 0590 BB6A     		ldr	r3, [r7, #40]
 7575 0592 1344     		add	r3, r3, r2
 7576 0594 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7577 0596 03F07F03 		and	r3, r3, #127
 7578 059a BB75     		strb	r3, [r7, #22]
2225:main.c        ****             copedentNamesArray[copedentNumberToWrite][i-2] = tempChar;
 7579              		.loc 1 2225 0 discriminator 2
 7580 059c 344B     		ldr	r3, .L340+56
 7581 059e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7582 05a0 1846     		mov	r0, r3
 7583 05a2 BB6A     		ldr	r3, [r7, #40]
 7584 05a4 9A1E     		subs	r2, r3, #2
 7585 05a6 3649     		ldr	r1, .L340+72
 7586 05a8 0346     		mov	r3, r0
 7587 05aa DB00     		lsls	r3, r3, #3
 7588 05ac 1B1A     		subs	r3, r3, r0
 7589 05ae 5B00     		lsls	r3, r3, #1
 7590 05b0 0B44     		add	r3, r3, r1
 7591 05b2 1344     		add	r3, r3, r2
 7592 05b4 BA7D     		ldrb	r2, [r7, #22]
 7593 05b6 1A70     		strb	r2, [r3]
2226:main.c        ****             checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrite);
 7594              		.loc 1 2226 0 discriminator 2
 7595 05b8 2D4B     		ldr	r3, .L340+56
 7596 05ba 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7597 05bc 9BB2     		uxth	r3, r3
 7598 05be 1A46     		mov	r2, r3	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 175


 7599 05c0 1201     		lsls	r2, r2, #4
 7600 05c2 1A44     		add	r2, r2, r3
 7601 05c4 9200     		lsls	r2, r2, #2
 7602 05c6 1A44     		add	r2, r2, r3
 7603 05c8 5200     		lsls	r2, r2, #1
 7604 05ca 1344     		add	r3, r3, r2
 7605 05cc 5B00     		lsls	r3, r3, #1
 7606 05ce 9BB2     		uxth	r3, r3
 7607 05d0 0233     		adds	r3, r3, #2
 7608 05d2 9AB2     		uxth	r2, r3
 7609 05d4 2B4B     		ldr	r3, .L340+76
 7610 05d6 1A80     		strh	r2, [r3]	@ movhi
2227:main.c        ****             checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDENT_S
 7611              		.loc 1 2227 0 discriminator 2
 7612 05d8 254B     		ldr	r3, .L340+56
 7613 05da 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7614 05dc 9BB2     		uxth	r3, r3
 7615 05de 1A46     		mov	r2, r3	@ movhi
 7616 05e0 1201     		lsls	r2, r2, #4
 7617 05e2 1A44     		add	r2, r2, r3
 7618 05e4 9200     		lsls	r2, r2, #2
 7619 05e6 1A44     		add	r2, r2, r3
 7620 05e8 5200     		lsls	r2, r2, #1
 7621 05ea 1344     		add	r3, r3, r2
 7622 05ec 5B00     		lsls	r3, r3, #1
 7623 05ee 9AB2     		uxth	r2, r3
 7624 05f0 BB6A     		ldr	r3, [r7, #40]
 7625 05f2 9BB2     		uxth	r3, r3
 7626 05f4 1344     		add	r3, r3, r2
 7627 05f6 9AB2     		uxth	r2, r3
 7628 05f8 BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 7629 05fa 1146     		mov	r1, r2
 7630 05fc 1846     		mov	r0, r3
 7631 05fe FFF7FEFF 		bl	EEPROM_WriteByte
 7632 0602 0346     		mov	r3, r0
 7633 0604 DAB2     		uxtb	r2, r3
 7634 0606 204B     		ldr	r3, .L340+80
 7635 0608 1A70     		strb	r2, [r3]
 7636              	.LBE41:
2221:main.c        ****         {
 7637              		.loc 1 2221 0 discriminator 2
 7638 060a BB6A     		ldr	r3, [r7, #40]
 7639 060c 0133     		adds	r3, r3, #1
 7640 060e BB62     		str	r3, [r7, #40]
 7641              	.L320:
2221:main.c        ****         {
 7642              		.loc 1 2221 0 is_stmt 0 discriminator 1
 7643 0610 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 7644 0612 BB6A     		ldr	r3, [r7, #40]
 7645 0614 9A42     		cmp	r2, r3
 7646 0616 BAD8     		bhi	.L321
2228:main.c        ****         }
2229:main.c        ****         
2230:main.c        ****         i = NAME_LENGTH_IN_BYTES + 2; // start after the name storage to store the actual values
 7647              		.loc 1 2230 0 is_stmt 1
 7648 0618 1023     		movs	r3, #16
 7649 061a BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 176


2231:main.c        **** 
2232:main.c        ****  
2233:main.c        ****         while(i < sysexPointer)
 7650              		.loc 1 2233 0
 7651 061c D7E0     		b	.L322
 7652              	.L327:
 7653              	.LBB42:
2234:main.c        ****         {
2235:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 7654              		.loc 1 2235 0
 7655 061e 0023     		movs	r3, #0
 7656 0620 7B62     		str	r3, [r7, #36]
 7657 0622 D0E0     		b	.L323
 7658              	.L326:
 7659              	.LBB43:
2236:main.c        ****             {
2237:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 7660              		.loc 1 2237 0
 7661 0624 7B6A     		ldr	r3, [r7, #36]
 7662 0626 9BB2     		uxth	r3, r3
 7663 0628 1A46     		mov	r2, r3	@ movhi
 7664 062a 5200     		lsls	r2, r2, #1
 7665 062c 1344     		add	r3, r3, r2
 7666 062e DB00     		lsls	r3, r3, #3
 7667 0630 BB82     		strh	r3, [r7, #20]	@ movhi
 7668              	.LBB44:
2238:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
 7669              		.loc 1 2238 0
 7670 0632 0023     		movs	r3, #0
 7671 0634 3B62     		str	r3, [r7, #32]
 7672 0636 BFE0     		b	.L324
 7673              	.L341:
 7674              		.align	2
 7675              	.L340:
 7676 0638 000020C0 		.word	-1071644672
 7677 063c 000060C0 		.word	-1067450368
 7678 0640 00000000 		.word	currentFloat
 7679 0644 00000000 		.word	presetArray
 7680 0648 00000000 		.word	presetArraySection
 7681 064c 00000000 		.word	sysexMessageInProgress
 7682 0650 00000000 		.word	sendingMessage
 7683 0654 00000000 		.word	presetNumberToWrite
 7684 0658 00000000 		.word	patchNum
 7685 065c 00000000 		.word	messageArraySize
 7686 0660 00000000 		.word	SPI_errors
 7687 0664 00000000 		.word	sysexPointer
 7688 0668 00000000 		.word	parseThatMF
 7689 066c 00000000 		.word	sysexBuffer
 7690 0670 00000000 		.word	copedentNumberToWrite
 7691 0674 00000000 		.word	currentCopedent
 7692 0678 00000000 		.word	currentNeck
 7693 067c 00000000 		.word	necks
 7694 0680 00000000 		.word	copedentNamesArray
 7695 0684 00000000 		.word	checkBase
 7696 0688 00000000 		.word	checkStatus
 7697              	.L325:
 7698              	.LBB45:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 177


2239:main.c        ****                 {
2240:main.c        ****                     
2241:main.c        ****                     theVal.u32 = 0;
 7699              		.loc 1 2241 0 discriminator 3
 7700 068c 0023     		movs	r3, #0
 7701 068e 7B60     		str	r3, [r7, #4]
2242:main.c        ****                     theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 7702              		.loc 1 2242 0 discriminator 3
 7703 0690 7B68     		ldr	r3, [r7, #4]
 7704 0692 7949     		ldr	r1, .L342
 7705 0694 BA6A     		ldr	r2, [r7, #40]
 7706 0696 0A44     		add	r2, r2, r1
 7707 0698 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 7708 069a 1207     		lsls	r2, r2, #28
 7709 069c 1343     		orrs	r3, r3, r2
 7710 069e 7B60     		str	r3, [r7, #4]
2243:main.c        ****                     theVal.u32 |= (sysexBuffer[i+1] << 21);
 7711              		.loc 1 2243 0 discriminator 3
 7712 06a0 7B68     		ldr	r3, [r7, #4]
 7713 06a2 BA6A     		ldr	r2, [r7, #40]
 7714 06a4 0132     		adds	r2, r2, #1
 7715 06a6 7449     		ldr	r1, .L342
 7716 06a8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7717 06aa 5205     		lsls	r2, r2, #21
 7718 06ac 1343     		orrs	r3, r3, r2
 7719 06ae 7B60     		str	r3, [r7, #4]
2244:main.c        ****                     theVal.u32 |= (sysexBuffer[i+2] << 14);
 7720              		.loc 1 2244 0 discriminator 3
 7721 06b0 7B68     		ldr	r3, [r7, #4]
 7722 06b2 BA6A     		ldr	r2, [r7, #40]
 7723 06b4 0232     		adds	r2, r2, #2
 7724 06b6 7049     		ldr	r1, .L342
 7725 06b8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7726 06ba 9203     		lsls	r2, r2, #14
 7727 06bc 1343     		orrs	r3, r3, r2
 7728 06be 7B60     		str	r3, [r7, #4]
2245:main.c        ****                     theVal.u32 |= (sysexBuffer[i+3] << 7);
 7729              		.loc 1 2245 0 discriminator 3
 7730 06c0 7B68     		ldr	r3, [r7, #4]
 7731 06c2 BA6A     		ldr	r2, [r7, #40]
 7732 06c4 0332     		adds	r2, r2, #3
 7733 06c6 6C49     		ldr	r1, .L342
 7734 06c8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 7735 06ca D201     		lsls	r2, r2, #7
 7736 06cc 1343     		orrs	r3, r3, r2
 7737 06ce 7B60     		str	r3, [r7, #4]
2246:main.c        ****                     theVal.u32 |= (sysexBuffer[i+4] & 127);
 7738              		.loc 1 2246 0 discriminator 3
 7739 06d0 7A68     		ldr	r2, [r7, #4]
 7740 06d2 BB6A     		ldr	r3, [r7, #40]
 7741 06d4 0433     		adds	r3, r3, #4
 7742 06d6 6849     		ldr	r1, .L342
 7743 06d8 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 7744 06da 03F07F03 		and	r3, r3, #127
 7745 06de 1343     		orrs	r3, r3, r2
 7746 06e0 7B60     		str	r3, [r7, #4]
2247:main.c        ****                     copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 178


 7747              		.loc 1 2247 0 discriminator 3
 7748 06e2 664B     		ldr	r3, .L342+4
 7749 06e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7750 06e6 1C46     		mov	r4, r3
 7751 06e8 7968     		ldr	r1, [r7, #4]	@ float
 7752 06ea 6548     		ldr	r0, .L342+8
 7753 06ec 7B6A     		ldr	r3, [r7, #36]
 7754 06ee 1A46     		mov	r2, r3
 7755 06f0 5200     		lsls	r2, r2, #1
 7756 06f2 1A44     		add	r2, r2, r3
 7757 06f4 9300     		lsls	r3, r2, #2
 7758 06f6 1A46     		mov	r2, r3
 7759 06f8 2346     		mov	r3, r4
 7760 06fa 5B01     		lsls	r3, r3, #5
 7761 06fc 2344     		add	r3, r3, r4
 7762 06fe 9B00     		lsls	r3, r3, #2
 7763 0700 1A44     		add	r2, r2, r3
 7764 0702 3B6A     		ldr	r3, [r7, #32]
 7765 0704 1344     		add	r3, r3, r2
 7766 0706 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2248:main.c        ****                     uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 7767              		.loc 1 2248 0 discriminator 3
 7768 070a 7B68     		ldr	r3, [r7, #4]	@ float
 7769 070c 4FF08741 		mov	r1, #1132462080
 7770 0710 1846     		mov	r0, r3
 7771 0712 FFF7FEFF 		bl	__aeabi_fmul
 7772 0716 0346     		mov	r3, r0
 7773 0718 4FF08E41 		mov	r1, #1191182336
 7774 071c 1846     		mov	r0, r3
 7775 071e FFF7FEFF 		bl	__aeabi_fadd
 7776 0722 0346     		mov	r3, r0
 7777 0724 1846     		mov	r0, r3
 7778 0726 FFF7FEFF 		bl	__aeabi_f2uiz
 7779 072a 0346     		mov	r3, r0
 7780 072c 7B82     		strh	r3, [r7, #18]	@ movhi
2249:main.c        ****                     uint8_t tempHigh = tempIntVersion >> 8;
 7781              		.loc 1 2249 0 discriminator 3
 7782 072e 7B8A     		ldrh	r3, [r7, #18]
 7783 0730 1B0A     		lsrs	r3, r3, #8
 7784 0732 9BB2     		uxth	r3, r3
 7785 0734 7B74     		strb	r3, [r7, #17]
2250:main.c        ****                     uint8_t tempLow = tempIntVersion & 255;
 7786              		.loc 1 2250 0 discriminator 3
 7787 0736 7B8A     		ldrh	r3, [r7, #18]	@ movhi
 7788 0738 3B74     		strb	r3, [r7, #16]
2251:main.c        ****                     
2252:main.c        ****                     
2253:main.c        ****                     uint16_t stringStartLoc = stringChange * 2;
 7789              		.loc 1 2253 0 discriminator 3
 7790 073a 3B6A     		ldr	r3, [r7, #32]
 7791 073c 9BB2     		uxth	r3, r3
 7792 073e 5B00     		lsls	r3, r3, #1
 7793 0740 FB81     		strh	r3, [r7, #14]	@ movhi
2254:main.c        ****                     checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT
 7794              		.loc 1 2254 0 discriminator 3
 7795 0742 FA89     		ldrh	r2, [r7, #14]	@ movhi
 7796 0744 BB8A     		ldrh	r3, [r7, #20]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 179


 7797 0746 1344     		add	r3, r3, r2
 7798 0748 9AB2     		uxth	r2, r3
 7799 074a 4C4B     		ldr	r3, .L342+4
 7800 074c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7801 074e 9BB2     		uxth	r3, r3
 7802 0750 1946     		mov	r1, r3	@ movhi
 7803 0752 0901     		lsls	r1, r1, #4
 7804 0754 1944     		add	r1, r1, r3
 7805 0756 8900     		lsls	r1, r1, #2
 7806 0758 1944     		add	r1, r1, r3
 7807 075a 4900     		lsls	r1, r1, #1
 7808 075c 0B44     		add	r3, r3, r1
 7809 075e 5B00     		lsls	r3, r3, #1
 7810 0760 9BB2     		uxth	r3, r3
 7811 0762 1344     		add	r3, r3, r2
 7812 0764 9BB2     		uxth	r3, r3
 7813 0766 1033     		adds	r3, r3, #16
 7814 0768 9AB2     		uxth	r2, r3
 7815 076a 464B     		ldr	r3, .L342+12
 7816 076c 1A80     		strh	r2, [r3]	@ movhi
2255:main.c        ****                     checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 7817              		.loc 1 2255 0 discriminator 3
 7818 076e 454B     		ldr	r3, .L342+12
 7819 0770 1B88     		ldrh	r3, [r3]	@ movhi
 7820 0772 9AB2     		uxth	r2, r3
 7821 0774 7B7C     		ldrb	r3, [r7, #17]	@ zero_extendqisi2
 7822 0776 1146     		mov	r1, r2
 7823 0778 1846     		mov	r0, r3
 7824 077a FFF7FEFF 		bl	EEPROM_WriteByte
 7825 077e 0346     		mov	r3, r0
 7826 0780 DAB2     		uxtb	r2, r3
 7827 0782 414B     		ldr	r3, .L342+16
 7828 0784 1A70     		strb	r2, [r3]
2256:main.c        ****                     checkStatus = EEPROM_WriteByte(tempLow, checkBase + 1);
 7829              		.loc 1 2256 0 discriminator 3
 7830 0786 3F4B     		ldr	r3, .L342+12
 7831 0788 1B88     		ldrh	r3, [r3]	@ movhi
 7832 078a 9BB2     		uxth	r3, r3
 7833 078c 0133     		adds	r3, r3, #1
 7834 078e 9AB2     		uxth	r2, r3
 7835 0790 3B7C     		ldrb	r3, [r7, #16]	@ zero_extendqisi2
 7836 0792 1146     		mov	r1, r2
 7837 0794 1846     		mov	r0, r3
 7838 0796 FFF7FEFF 		bl	EEPROM_WriteByte
 7839 079a 0346     		mov	r3, r0
 7840 079c DAB2     		uxtb	r2, r3
 7841 079e 3A4B     		ldr	r3, .L342+16
 7842 07a0 1A70     		strb	r2, [r3]
2257:main.c        ****                     currentFloat++;
 7843              		.loc 1 2257 0 discriminator 3
 7844 07a2 3A4B     		ldr	r3, .L342+20
 7845 07a4 1B68     		ldr	r3, [r3]
 7846 07a6 0133     		adds	r3, r3, #1
 7847 07a8 384A     		ldr	r2, .L342+20
 7848 07aa 1360     		str	r3, [r2]
2258:main.c        ****                     i = i+5;
 7849              		.loc 1 2258 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 180


 7850 07ac BB6A     		ldr	r3, [r7, #40]
 7851 07ae 0533     		adds	r3, r3, #5
 7852 07b0 BB62     		str	r3, [r7, #40]
 7853              	.LBE45:
2238:main.c        ****                 {
 7854              		.loc 1 2238 0 discriminator 3
 7855 07b2 3B6A     		ldr	r3, [r7, #32]
 7856 07b4 0133     		adds	r3, r3, #1
 7857 07b6 3B62     		str	r3, [r7, #32]
 7858              	.L324:
2238:main.c        ****                 {
 7859              		.loc 1 2238 0 is_stmt 0 discriminator 1
 7860 07b8 3B6A     		ldr	r3, [r7, #32]
 7861 07ba 0B2B     		cmp	r3, #11
 7862 07bc 7FF666AF 		bls	.L325
 7863              	.LBE44:
 7864              	.LBE43:
2235:main.c        ****             {
 7865              		.loc 1 2235 0 is_stmt 1 discriminator 2
 7866 07c0 7B6A     		ldr	r3, [r7, #36]
 7867 07c2 0133     		adds	r3, r3, #1
 7868 07c4 7B62     		str	r3, [r7, #36]
 7869              	.L323:
2235:main.c        ****             {
 7870              		.loc 1 2235 0 is_stmt 0 discriminator 1
 7871 07c6 7B6A     		ldr	r3, [r7, #36]
 7872 07c8 0A2B     		cmp	r3, #10
 7873 07ca 7FF62BAF 		bls	.L326
 7874              	.L322:
 7875              	.LBE42:
2233:main.c        ****         {
 7876              		.loc 1 2233 0 is_stmt 1
 7877 07ce 304B     		ldr	r3, .L342+24
 7878 07d0 1B68     		ldr	r3, [r3]
 7879 07d2 BA6A     		ldr	r2, [r7, #40]
 7880 07d4 9A42     		cmp	r2, r3
 7881 07d6 FFF422AF 		bcc	.L327
2259:main.c        ****                 }
2260:main.c        ****                 
2261:main.c        ****             }
2262:main.c        ****         }
2263:main.c        ****                         
2264:main.c        ****         
2265:main.c        ****         messageArraySize = currentFloat;
 7882              		.loc 1 2265 0
 7883 07da 2C4B     		ldr	r3, .L342+20
 7884 07dc 1B68     		ldr	r3, [r3]
 7885 07de 9AB2     		uxth	r2, r3
 7886 07e0 2C4B     		ldr	r3, .L342+28
 7887 07e2 1A80     		strh	r2, [r3]	@ movhi
2266:main.c        ****                     
2267:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 7888              		.loc 1 2267 0
 7889 07e4 2B4B     		ldr	r3, .L342+28
 7890 07e6 1B88     		ldrh	r3, [r3]
 7891 07e8 842B     		cmp	r3, #132
 7892 07ea 11D0     		beq	.L328
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 181


2268:main.c        ****         {
2269:main.c        ****             //error state
2270:main.c        ****             SPI_errors++;
 7893              		.loc 1 2270 0
 7894 07ec 2A4B     		ldr	r3, .L342+32
 7895 07ee 1B68     		ldr	r3, [r3]
 7896 07f0 0133     		adds	r3, r3, #1
 7897 07f2 294A     		ldr	r2, .L342+32
 7898 07f4 1360     		str	r3, [r2]
2271:main.c        ****             sysexMessageInProgress = 0;
 7899              		.loc 1 2271 0
 7900 07f6 294B     		ldr	r3, .L342+36
 7901 07f8 0022     		movs	r2, #0
 7902 07fa 1A70     		strb	r2, [r3]
2272:main.c        ****             sysexPointer = 0;
 7903              		.loc 1 2272 0
 7904 07fc 244B     		ldr	r3, .L342+24
 7905 07fe 0022     		movs	r2, #0
 7906 0800 1A60     		str	r2, [r3]
2273:main.c        ****             sendingMessage = 0;
 7907              		.loc 1 2273 0
 7908 0802 274B     		ldr	r3, .L342+40
 7909 0804 0022     		movs	r2, #0
 7910 0806 1A70     		strb	r2, [r3]
2274:main.c        ****             parseThatMF = 0;
 7911              		.loc 1 2274 0
 7912 0808 264B     		ldr	r3, .L342+44
 7913 080a 0022     		movs	r2, #0
 7914 080c 1A70     		strb	r2, [r3]
 7915 080e 26E0     		b	.L319
 7916              	.L328:
2275:main.c        ****         } 
2276:main.c        ****         else 
2277:main.c        ****         {
2278:main.c        ****             sysexMessageInProgress = 0;
 7917              		.loc 1 2278 0
 7918 0810 224B     		ldr	r3, .L342+36
 7919 0812 0022     		movs	r2, #0
 7920 0814 1A70     		strb	r2, [r3]
2279:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2280:main.c        ****             
2281:main.c        ****             OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 7921              		.loc 1 2281 0
 7922 0816 244B     		ldr	r3, .L342+48
 7923 0818 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7924 081a 1846     		mov	r0, r3
 7925 081c 0323     		movs	r3, #3
 7926 081e 0022     		movs	r2, #0
 7927 0820 0221     		movs	r1, #2
 7928 0822 FFF7FEFF 		bl	OLEDwriteInt
2282:main.c        ****             OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 7929              		.loc 1 2282 0
 7930 0826 FFF7FEFF 		bl	OLEDgetCursor
 7931 082a 0246     		mov	r2, r0
 7932 082c 0323     		movs	r3, #3
 7933 082e 0121     		movs	r1, #1
 7934 0830 1E48     		ldr	r0, .L342+52
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 182


 7935 0832 FFF7FEFF 		bl	OLEDwriteString
2283:main.c        ****             OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], NAME_LENGTH_IN_BYTES, 
 7936              		.loc 1 2283 0
 7937 0836 1C4B     		ldr	r3, .L342+48
 7938 0838 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7939 083a 1A46     		mov	r2, r3
 7940 083c 1346     		mov	r3, r2
 7941 083e DB00     		lsls	r3, r3, #3
 7942 0840 9B1A     		subs	r3, r3, r2
 7943 0842 5B00     		lsls	r3, r3, #1
 7944 0844 1A4A     		ldr	r2, .L342+56
 7945 0846 9C18     		adds	r4, r3, r2
 7946 0848 FFF7FEFF 		bl	OLEDgetCursor
 7947 084c 0246     		mov	r2, r0
 7948 084e 0323     		movs	r3, #3
 7949 0850 0E21     		movs	r1, #14
 7950 0852 2046     		mov	r0, r4
 7951 0854 FFF7FEFF 		bl	OLEDwriteString
2284:main.c        ****             mainOLEDWaitingToSend = 1;
 7952              		.loc 1 2284 0
 7953 0858 164B     		ldr	r3, .L342+60
 7954 085a 0122     		movs	r2, #1
 7955 085c 1A60     		str	r2, [r3]
 7956              	.L319:
 7957              	.LBE40:
2285:main.c        ****         }
2286:main.c        ****     }
2287:main.c        ****     
2288:main.c        **** 
2289:main.c        ****     parsingSysex = 0;
 7958              		.loc 1 2289 0
 7959 085e 164B     		ldr	r3, .L342+64
 7960 0860 0022     		movs	r2, #0
 7961 0862 1A70     		strb	r2, [r3]
2290:main.c        ****     sysexPointer = 0;
 7962              		.loc 1 2290 0
 7963 0864 0A4B     		ldr	r3, .L342+24
 7964 0866 0022     		movs	r2, #0
 7965 0868 1A60     		str	r2, [r3]
2291:main.c        ****     parseThatMF = 0;
 7966              		.loc 1 2291 0
 7967 086a 0E4B     		ldr	r3, .L342+44
 7968 086c 0022     		movs	r2, #0
 7969 086e 1A70     		strb	r2, [r3]
2292:main.c        **** }
 7970              		.loc 1 2292 0
 7971 0870 00BF     		nop
 7972 0872 3C37     		adds	r7, r7, #60
 7973              		.cfi_def_cfa_offset 12
 7974 0874 BD46     		mov	sp, r7
 7975              		.cfi_def_cfa_register 13
 7976              		@ sp needed
 7977 0876 90BD     		pop	{r4, r7, pc}
 7978              	.L343:
 7979              		.align	2
 7980              	.L342:
 7981 0878 00000000 		.word	sysexBuffer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 183


 7982 087c 00000000 		.word	copedentNumberToWrite
 7983 0880 00000000 		.word	copedent
 7984 0884 00000000 		.word	checkBase
 7985 0888 00000000 		.word	checkStatus
 7986 088c 00000000 		.word	currentFloat
 7987 0890 00000000 		.word	sysexPointer
 7988 0894 00000000 		.word	messageArraySize
 7989 0898 00000000 		.word	SPI_errors
 7990 089c 00000000 		.word	sysexMessageInProgress
 7991 08a0 00000000 		.word	sendingMessage
 7992 08a4 00000000 		.word	parseThatMF
 7993 08a8 00000000 		.word	currentCopedent
 7994 08ac 00040000 		.word	.LC0
 7995 08b0 00000000 		.word	copedentNamesArray
 7996 08b4 00000000 		.word	mainOLEDWaitingToSend
 7997 08b8 00000000 		.word	parsingSysex
 7998              		.cfi_endproc
 7999              	.LFE93:
 8000              		.size	parseSysex, .-parseSysex
 8001              		.comm	tempMIDI,4,4
 8002              		.global	firstSysex
 8003              		.bss
 8004              		.type	firstSysex, %object
 8005              		.size	firstSysex, 1
 8006              	firstSysex:
 8007 010c 00       		.space	1
 8008              		.global	sysexPointerMask
 8009              		.section	.rodata
 8010              		.align	1
 8011              		.type	sysexPointerMask, %object
 8012              		.size	sysexPointerMask, 2
 8013              	sysexPointerMask:
 8014 0432 FF07     		.short	2047
 8015              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 8016              		.align	2
 8017              		.global	USB_callbackLocalMidiEvent
 8018              		.thumb
 8019              		.thumb_func
 8020              		.type	USB_callbackLocalMidiEvent, %function
 8021              	USB_callbackLocalMidiEvent:
 8022              	.LFB94:
2293:main.c        **** 
2294:main.c        **** volatile uint8_t tempMIDI[4];
2295:main.c        **** volatile uint8_t firstSysex = 0;
2296:main.c        **** const uint16_t sysexPointerMask = 2047;
2297:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2298:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2299:main.c        **** {   
 8023              		.loc 1 2299 0
 8024              		.cfi_startproc
 8025              		@ args = 0, pretend = 0, frame = 16
 8026              		@ frame_needed = 1, uses_anonymous_args = 0
 8027 0000 80B5     		push	{r7, lr}
 8028              		.cfi_def_cfa_offset 8
 8029              		.cfi_offset 7, -8
 8030              		.cfi_offset 14, -4
 8031 0002 84B0     		sub	sp, sp, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 184


 8032              		.cfi_def_cfa_offset 24
 8033 0004 00AF     		add	r7, sp, #0
 8034              		.cfi_def_cfa_register 7
 8035 0006 0346     		mov	r3, r0
 8036 0008 3960     		str	r1, [r7]
 8037 000a FB71     		strb	r3, [r7, #7]
2300:main.c        ****     tempMIDI[0] = midiMsg[0];
 8038              		.loc 1 2300 0
 8039 000c 3B68     		ldr	r3, [r7]
 8040 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 8041 0010 434B     		ldr	r3, .L354
 8042 0012 1A70     		strb	r2, [r3]
2301:main.c        ****     tempMIDI[1] = midiMsg[1];
 8043              		.loc 1 2301 0
 8044 0014 3B68     		ldr	r3, [r7]
 8045 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 8046 0018 414B     		ldr	r3, .L354
 8047 001a 5A70     		strb	r2, [r3, #1]
2302:main.c        ****      tempMIDI[2] = midiMsg[2];
 8048              		.loc 1 2302 0
 8049 001c 3B68     		ldr	r3, [r7]
 8050 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 8051 0020 3F4B     		ldr	r3, .L354
 8052 0022 9A70     		strb	r2, [r3, #2]
2303:main.c        ****      tempMIDI[3] = midiMsg[3];
 8053              		.loc 1 2303 0
 8054 0024 3B68     		ldr	r3, [r7]
 8055 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 8056 0028 3D4B     		ldr	r3, .L354
 8057 002a DA70     		strb	r2, [r3, #3]
2304:main.c        ****     //check that we got here
2305:main.c        ****     
2306:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8058              		.loc 1 2306 0
 8059 002c 3D4B     		ldr	r3, .L354+4
 8060 002e 1B78     		ldrb	r3, [r3]
 8061 0030 DBB2     		uxtb	r3, r3
 8062 0032 002B     		cmp	r3, #0
 8063 0034 71D0     		beq	.L344
 8064              		.loc 1 2306 0 is_stmt 0 discriminator 1
 8065 0036 FFF7FEFF 		bl	USB_VBusPresent
 8066 003a 0346     		mov	r3, r0
 8067 003c 002B     		cmp	r3, #0
 8068 003e 6CD0     		beq	.L344
2307:main.c        ****     {
2308:main.c        ****         if (receivingSysex)
 8069              		.loc 1 2308 0 is_stmt 1
 8070 0040 394B     		ldr	r3, .L354+8
 8071 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8072 0044 002B     		cmp	r3, #0
 8073 0046 29D0     		beq	.L346
 8074              	.LBB46:
2309:main.c        ****         {
2310:main.c        ****             for (int i = 0; i < 3; i++)
 8075              		.loc 1 2310 0
 8076 0048 0023     		movs	r3, #0
 8077 004a FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 185


 8078 004c 22E0     		b	.L347
 8079              	.L350:
2311:main.c        ****             {
2312:main.c        ****                 if (midiMsg[i] < 128)
 8080              		.loc 1 2312 0
 8081 004e FB68     		ldr	r3, [r7, #12]
 8082 0050 3A68     		ldr	r2, [r7]
 8083 0052 1344     		add	r3, r3, r2
 8084 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8085 0056 5BB2     		sxtb	r3, r3
 8086 0058 002B     		cmp	r3, #0
 8087 005a 0EDB     		blt	.L348
2313:main.c        ****                 {
2314:main.c        ****                     sysexBuffer[(sysexPointer++) & sysexPointerMask] = midiMsg[i];
 8088              		.loc 1 2314 0
 8089 005c 334B     		ldr	r3, .L354+12
 8090 005e 1B68     		ldr	r3, [r3]
 8091 0060 5A1C     		adds	r2, r3, #1
 8092 0062 3249     		ldr	r1, .L354+12
 8093 0064 0A60     		str	r2, [r1]
 8094 0066 40F2FF72 		movw	r2, #2047
 8095 006a 1340     		ands	r3, r3, r2
 8096 006c FA68     		ldr	r2, [r7, #12]
 8097 006e 3968     		ldr	r1, [r7]
 8098 0070 0A44     		add	r2, r2, r1
 8099 0072 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 8100 0074 2E4A     		ldr	r2, .L354+16
 8101 0076 D154     		strb	r1, [r2, r3]
 8102 0078 09E0     		b	.L349
 8103              	.L348:
2315:main.c        ****                 }
2316:main.c        ****                 else
2317:main.c        ****                 {
2318:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 8104              		.loc 1 2318 0
 8105 007a FB68     		ldr	r3, [r7, #12]
 8106 007c 3A68     		ldr	r2, [r7]
 8107 007e 1344     		add	r3, r3, r2
 8108 0080 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8109 0082 F72B     		cmp	r3, #247
 8110 0084 03D1     		bne	.L349
2319:main.c        ****                     {
2320:main.c        ****                         receivingSysex = 0;
 8111              		.loc 1 2320 0
 8112 0086 284B     		ldr	r3, .L354+8
 8113 0088 0022     		movs	r2, #0
 8114 008a 1A70     		strb	r2, [r3]
2321:main.c        ****                         //parseSysex();
2322:main.c        ****                         return;
 8115              		.loc 1 2322 0
 8116 008c 45E0     		b	.L344
 8117              	.L349:
2310:main.c        ****             {
 8118              		.loc 1 2310 0 discriminator 2
 8119 008e FB68     		ldr	r3, [r7, #12]
 8120 0090 0133     		adds	r3, r3, #1
 8121 0092 FB60     		str	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 186


 8122              	.L347:
2310:main.c        ****             {
 8123              		.loc 1 2310 0 is_stmt 0 discriminator 1
 8124 0094 FB68     		ldr	r3, [r7, #12]
 8125 0096 022B     		cmp	r3, #2
 8126 0098 D9DD     		ble	.L350
 8127 009a 3EE0     		b	.L344
 8128              	.L346:
 8129              	.LBE46:
2323:main.c        ****                      }
2324:main.c        ****                 }
2325:main.c        ****             }
2326:main.c        ****         }
2327:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 8130              		.loc 1 2327 0 is_stmt 1
 8131 009c 3B68     		ldr	r3, [r7]
 8132 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8133 00a0 F02B     		cmp	r3, #240
 8134 00a2 3AD1     		bne	.L344
2328:main.c        ****         {
2329:main.c        ****             if (!parsingSysex)
 8135              		.loc 1 2329 0
 8136 00a4 234B     		ldr	r3, .L354+20
 8137 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8138 00a8 002B     		cmp	r3, #0
 8139 00aa 36D1     		bne	.L344
2330:main.c        ****             {
2331:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 8140              		.loc 1 2331 0
 8141 00ac 3B68     		ldr	r3, [r7]
 8142 00ae 0133     		adds	r3, r3, #1
 8143 00b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8144 00b2 7E2B     		cmp	r3, #126
 8145 00b4 03D1     		bne	.L352
2332:main.c        ****                 {
2333:main.c        ****                     parseThatMF = 1;
 8146              		.loc 1 2333 0
 8147 00b6 204B     		ldr	r3, .L354+24
 8148 00b8 0122     		movs	r2, #1
 8149 00ba 1A70     		strb	r2, [r3]
 8150 00bc 2DE0     		b	.L344
 8151              	.L352:
2334:main.c        **** 
2335:main.c        ****                     //sysexPointer = 0;
2336:main.c        ****                 }
2337:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2)
 8152              		.loc 1 2337 0
 8153 00be 3B68     		ldr	r3, [r7]
 8154 00c0 0133     		adds	r3, r3, #1
 8155 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8156 00c4 002B     		cmp	r3, #0
 8157 00c6 09D0     		beq	.L353
 8158              		.loc 1 2337 0 is_stmt 0 discriminator 1
 8159 00c8 3B68     		ldr	r3, [r7]
 8160 00ca 0133     		adds	r3, r3, #1
 8161 00cc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8162 00ce 012B     		cmp	r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 187


 8163 00d0 04D0     		beq	.L353
 8164              		.loc 1 2337 0 discriminator 2
 8165 00d2 3B68     		ldr	r3, [r7]
 8166 00d4 0133     		adds	r3, r3, #1
 8167 00d6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8168 00d8 022B     		cmp	r3, #2
 8169 00da 1ED1     		bne	.L344
 8170              	.L353:
2338:main.c        ****                 {
2339:main.c        ****                     receivingSysex = 1;
 8171              		.loc 1 2339 0 is_stmt 1
 8172 00dc 124B     		ldr	r3, .L354+8
 8173 00de 0122     		movs	r2, #1
 8174 00e0 1A70     		strb	r2, [r3]
2340:main.c        ****                     
2341:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2342:main.c        ****                     if (sysexPointer == 0)
 8175              		.loc 1 2342 0
 8176 00e2 124B     		ldr	r3, .L354+12
 8177 00e4 1B68     		ldr	r3, [r3]
 8178 00e6 002B     		cmp	r3, #0
 8179 00e8 17D1     		bne	.L344
2343:main.c        ****                     {
2344:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[1];
 8180              		.loc 1 2344 0
 8181 00ea 104B     		ldr	r3, .L354+12
 8182 00ec 1B68     		ldr	r3, [r3]
 8183 00ee 5A1C     		adds	r2, r3, #1
 8184 00f0 0E49     		ldr	r1, .L354+12
 8185 00f2 0A60     		str	r2, [r1]
 8186 00f4 40F2FF72 		movw	r2, #2047
 8187 00f8 1340     		ands	r3, r3, r2
 8188 00fa 3A68     		ldr	r2, [r7]
 8189 00fc 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 8190 00fe 0C4A     		ldr	r2, .L354+16
 8191 0100 D154     		strb	r1, [r2, r3]
2345:main.c        ****                         sysexBuffer[sysexPointer++ & sysexPointerMask] = midiMsg[2];
 8192              		.loc 1 2345 0
 8193 0102 0A4B     		ldr	r3, .L354+12
 8194 0104 1B68     		ldr	r3, [r3]
 8195 0106 5A1C     		adds	r2, r3, #1
 8196 0108 0849     		ldr	r1, .L354+12
 8197 010a 0A60     		str	r2, [r1]
 8198 010c 40F2FF72 		movw	r2, #2047
 8199 0110 1340     		ands	r3, r3, r2
 8200 0112 3A68     		ldr	r2, [r7]
 8201 0114 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 8202 0116 064A     		ldr	r2, .L354+16
 8203 0118 D154     		strb	r1, [r2, r3]
 8204              	.L344:
2346:main.c        ****                     }
2347:main.c        ****                 }
2348:main.c        ****             }
2349:main.c        ****         }
2350:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2351:main.c        ****     }
2352:main.c        **** }    
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 188


 8205              		.loc 1 2352 0
 8206 011a 1037     		adds	r7, r7, #16
 8207              		.cfi_def_cfa_offset 8
 8208 011c BD46     		mov	sp, r7
 8209              		.cfi_def_cfa_register 13
 8210              		@ sp needed
 8211 011e 80BD     		pop	{r7, pc}
 8212              	.L355:
 8213              		.align	2
 8214              	.L354:
 8215 0120 00000000 		.word	tempMIDI
 8216 0124 00000000 		.word	USB_active
 8217 0128 00000000 		.word	receivingSysex
 8218 012c 00000000 		.word	sysexPointer
 8219 0130 00000000 		.word	sysexBuffer
 8220 0134 00000000 		.word	parsingSysex
 8221 0138 00000000 		.word	parseThatMF
 8222              		.cfi_endproc
 8223              	.LFE94:
 8224              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 8225              		.text
 8226              	.Letext0:
 8227              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8228              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8229              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 8230              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 8231              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 8232              		.file 7 "oled.h"
 8233              		.file 8 "Generated_Source\\PSoC5/USB_midi.h"
 8234              		.file 9 "Generated_Source\\PSoC5/Em_EEPROM.h"
 8235              		.file 10 "Generated_Source\\PSoC5/I2C_1.h"
 8236              		.file 11 "Generated_Source\\PSoC5/core_cm3.h"
 8237              		.section	.debug_info,"",%progbits
 8238              	.Ldebug_info0:
 8239 0000 821B0000 		.4byte	0x1b82
 8240 0004 0400     		.2byte	0x4
 8241 0006 00000000 		.4byte	.Ldebug_abbrev0
 8242 000a 04       		.byte	0x4
 8243 000b 01       		.uleb128 0x1
 8244 000c B1080000 		.4byte	.LASF298
 8245 0010 0C       		.byte	0xc
 8246 0011 240A0000 		.4byte	.LASF299
 8247 0015 C0060000 		.4byte	.LASF300
 8248 0019 00000000 		.4byte	.Ldebug_ranges0+0
 8249 001d 00000000 		.4byte	0
 8250 0021 00000000 		.4byte	.Ldebug_line0
 8251 0025 02       		.uleb128 0x2
 8252 0026 01       		.byte	0x1
 8253 0027 06       		.byte	0x6
 8254 0028 68030000 		.4byte	.LASF0
 8255 002c 03       		.uleb128 0x3
 8256 002d 12020000 		.4byte	.LASF2
 8257 0031 02       		.byte	0x2
 8258 0032 1D       		.byte	0x1d
 8259 0033 37000000 		.4byte	0x37
 8260 0037 02       		.uleb128 0x2
 8261 0038 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 189


 8262 0039 08       		.byte	0x8
 8263 003a EF030000 		.4byte	.LASF1
 8264 003e 03       		.uleb128 0x3
 8265 003f E90C0000 		.4byte	.LASF3
 8266 0043 02       		.byte	0x2
 8267 0044 29       		.byte	0x29
 8268 0045 49000000 		.4byte	0x49
 8269 0049 02       		.uleb128 0x2
 8270 004a 02       		.byte	0x2
 8271 004b 05       		.byte	0x5
 8272 004c 8F0D0000 		.4byte	.LASF4
 8273 0050 03       		.uleb128 0x3
 8274 0051 1B050000 		.4byte	.LASF5
 8275 0055 02       		.byte	0x2
 8276 0056 2B       		.byte	0x2b
 8277 0057 5B000000 		.4byte	0x5b
 8278 005b 02       		.uleb128 0x2
 8279 005c 02       		.byte	0x2
 8280 005d 07       		.byte	0x7
 8281 005e 3A0F0000 		.4byte	.LASF6
 8282 0062 03       		.uleb128 0x3
 8283 0063 650F0000 		.4byte	.LASF7
 8284 0067 02       		.byte	0x2
 8285 0068 3F       		.byte	0x3f
 8286 0069 6D000000 		.4byte	0x6d
 8287 006d 02       		.uleb128 0x2
 8288 006e 04       		.byte	0x4
 8289 006f 05       		.byte	0x5
 8290 0070 65020000 		.4byte	.LASF8
 8291 0074 03       		.uleb128 0x3
 8292 0075 A8090000 		.4byte	.LASF9
 8293 0079 02       		.byte	0x2
 8294 007a 41       		.byte	0x41
 8295 007b 7F000000 		.4byte	0x7f
 8296 007f 02       		.uleb128 0x2
 8297 0080 04       		.byte	0x4
 8298 0081 07       		.byte	0x7
 8299 0082 9D070000 		.4byte	.LASF10
 8300 0086 02       		.uleb128 0x2
 8301 0087 08       		.byte	0x8
 8302 0088 05       		.byte	0x5
 8303 0089 B3090000 		.4byte	.LASF11
 8304 008d 02       		.uleb128 0x2
 8305 008e 08       		.byte	0x8
 8306 008f 07       		.byte	0x7
 8307 0090 0D0C0000 		.4byte	.LASF12
 8308 0094 04       		.uleb128 0x4
 8309 0095 04       		.byte	0x4
 8310 0096 05       		.byte	0x5
 8311 0097 696E7400 		.ascii	"int\000"
 8312 009b 02       		.uleb128 0x2
 8313 009c 04       		.byte	0x4
 8314 009d 07       		.byte	0x7
 8315 009e B10A0000 		.4byte	.LASF13
 8316 00a2 03       		.uleb128 0x3
 8317 00a3 74030000 		.4byte	.LASF14
 8318 00a7 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 190


 8319 00a8 18       		.byte	0x18
 8320 00a9 2C000000 		.4byte	0x2c
 8321 00ad 03       		.uleb128 0x3
 8322 00ae D90D0000 		.4byte	.LASF15
 8323 00b2 03       		.byte	0x3
 8324 00b3 20       		.byte	0x20
 8325 00b4 3E000000 		.4byte	0x3e
 8326 00b8 03       		.uleb128 0x3
 8327 00b9 240C0000 		.4byte	.LASF16
 8328 00bd 03       		.byte	0x3
 8329 00be 24       		.byte	0x24
 8330 00bf 50000000 		.4byte	0x50
 8331 00c3 03       		.uleb128 0x3
 8332 00c4 99000000 		.4byte	.LASF17
 8333 00c8 03       		.byte	0x3
 8334 00c9 2C       		.byte	0x2c
 8335 00ca 62000000 		.4byte	0x62
 8336 00ce 03       		.uleb128 0x3
 8337 00cf E60E0000 		.4byte	.LASF18
 8338 00d3 03       		.byte	0x3
 8339 00d4 30       		.byte	0x30
 8340 00d5 74000000 		.4byte	0x74
 8341 00d9 05       		.uleb128 0x5
 8342 00da 730D0000 		.4byte	.LASF19
 8343 00de 04       		.byte	0x4
 8344 00df E901     		.2byte	0x1e9
 8345 00e1 37000000 		.4byte	0x37
 8346 00e5 05       		.uleb128 0x5
 8347 00e6 D20F0000 		.4byte	.LASF20
 8348 00ea 04       		.byte	0x4
 8349 00eb EA01     		.2byte	0x1ea
 8350 00ed 5B000000 		.4byte	0x5b
 8351 00f1 05       		.uleb128 0x5
 8352 00f2 D5000000 		.4byte	.LASF21
 8353 00f6 04       		.byte	0x4
 8354 00f7 EB01     		.2byte	0x1eb
 8355 00f9 7F000000 		.4byte	0x7f
 8356 00fd 02       		.uleb128 0x2
 8357 00fe 04       		.byte	0x4
 8358 00ff 04       		.byte	0x4
 8359 0100 5D0A0000 		.4byte	.LASF22
 8360 0104 02       		.uleb128 0x2
 8361 0105 08       		.byte	0x8
 8362 0106 04       		.byte	0x4
 8363 0107 1D0A0000 		.4byte	.LASF23
 8364 010b 02       		.uleb128 0x2
 8365 010c 01       		.byte	0x1
 8366 010d 08       		.byte	0x8
 8367 010e CF040000 		.4byte	.LASF24
 8368 0112 05       		.uleb128 0x5
 8369 0113 F60A0000 		.4byte	.LASF25
 8370 0117 04       		.byte	0x4
 8371 0118 8B02     		.2byte	0x28b
 8372 011a 7F000000 		.4byte	0x7f
 8373 011e 05       		.uleb128 0x5
 8374 011f 850C0000 		.4byte	.LASF26
 8375 0123 04       		.byte	0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 191


 8376 0124 9302     		.2byte	0x293
 8377 0126 2A010000 		.4byte	0x12a
 8378 012a 06       		.uleb128 0x6
 8379 012b D9000000 		.4byte	0xd9
 8380 012f 02       		.uleb128 0x2
 8381 0130 08       		.byte	0x8
 8382 0131 04       		.byte	0x4
 8383 0132 8C0B0000 		.4byte	.LASF27
 8384 0136 02       		.uleb128 0x2
 8385 0137 04       		.byte	0x4
 8386 0138 07       		.byte	0x7
 8387 0139 2A000000 		.4byte	.LASF28
 8388 013d 07       		.uleb128 0x7
 8389 013e D9000000 		.4byte	0xd9
 8390 0142 4D010000 		.4byte	0x14d
 8391 0146 08       		.uleb128 0x8
 8392 0147 36010000 		.4byte	0x136
 8393 014b 03       		.byte	0x3
 8394 014c 00       		.byte	0
 8395 014d 09       		.uleb128 0x9
 8396 014e 1C       		.byte	0x1c
 8397 014f 05       		.byte	0x5
 8398 0150 1601     		.2byte	0x116
 8399 0152 BF010000 		.4byte	0x1bf
 8400 0156 0A       		.uleb128 0xa
 8401 0157 7C030000 		.4byte	.LASF29
 8402 015b 05       		.byte	0x5
 8403 015c 1B01     		.2byte	0x11b
 8404 015e F1000000 		.4byte	0xf1
 8405 0162 00       		.byte	0
 8406 0163 0A       		.uleb128 0xa
 8407 0164 D8010000 		.4byte	.LASF30
 8408 0168 05       		.byte	0x5
 8409 0169 2001     		.2byte	0x120
 8410 016b F1000000 		.4byte	0xf1
 8411 016f 04       		.byte	0x4
 8412 0170 0A       		.uleb128 0xa
 8413 0171 A30F0000 		.4byte	.LASF31
 8414 0175 05       		.byte	0x5
 8415 0176 2301     		.2byte	0x123
 8416 0178 F1000000 		.4byte	0xf1
 8417 017c 08       		.byte	0x8
 8418 017d 0A       		.uleb128 0xa
 8419 017e EE0D0000 		.4byte	.LASF32
 8420 0182 05       		.byte	0x5
 8421 0183 2601     		.2byte	0x126
 8422 0185 F1000000 		.4byte	0xf1
 8423 0189 0C       		.byte	0xc
 8424 018a 0A       		.uleb128 0xa
 8425 018b 270E0000 		.4byte	.LASF33
 8426 018f 05       		.byte	0x5
 8427 0190 2B01     		.2byte	0x12b
 8428 0192 F1000000 		.4byte	0xf1
 8429 0196 10       		.byte	0x10
 8430 0197 0A       		.uleb128 0xa
 8431 0198 04020000 		.4byte	.LASF34
 8432 019c 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 192


 8433 019d 2E01     		.2byte	0x12e
 8434 019f D9000000 		.4byte	0xd9
 8435 01a3 14       		.byte	0x14
 8436 01a4 0A       		.uleb128 0xa
 8437 01a5 040A0000 		.4byte	.LASF35
 8438 01a9 05       		.byte	0x5
 8439 01aa 3301     		.2byte	0x133
 8440 01ac D9000000 		.4byte	0xd9
 8441 01b0 15       		.byte	0x15
 8442 01b1 0A       		.uleb128 0xa
 8443 01b2 C5010000 		.4byte	.LASF36
 8444 01b6 05       		.byte	0x5
 8445 01b7 3601     		.2byte	0x136
 8446 01b9 F1000000 		.4byte	0xf1
 8447 01bd 18       		.byte	0x18
 8448 01be 00       		.byte	0
 8449 01bf 05       		.uleb128 0x5
 8450 01c0 85070000 		.4byte	.LASF37
 8451 01c4 05       		.byte	0x5
 8452 01c5 3701     		.2byte	0x137
 8453 01c7 4D010000 		.4byte	0x14d
 8454 01cb 0B       		.uleb128 0xb
 8455 01cc 01       		.byte	0x1
 8456 01cd 37000000 		.4byte	0x37
 8457 01d1 05       		.byte	0x5
 8458 01d2 5401     		.2byte	0x154
 8459 01d4 F7010000 		.4byte	0x1f7
 8460 01d8 0C       		.uleb128 0xc
 8461 01d9 84000000 		.4byte	.LASF38
 8462 01dd 00       		.byte	0
 8463 01de 0C       		.uleb128 0xc
 8464 01df EB050000 		.4byte	.LASF39
 8465 01e3 01       		.byte	0x1
 8466 01e4 0C       		.uleb128 0xc
 8467 01e5 AB010000 		.4byte	.LASF40
 8468 01e9 02       		.byte	0x2
 8469 01ea 0C       		.uleb128 0xc
 8470 01eb AB030000 		.4byte	.LASF41
 8471 01ef 03       		.byte	0x3
 8472 01f0 0C       		.uleb128 0xc
 8473 01f1 51080000 		.4byte	.LASF42
 8474 01f5 04       		.byte	0x4
 8475 01f6 00       		.byte	0
 8476 01f7 05       		.uleb128 0x5
 8477 01f8 3E010000 		.4byte	.LASF43
 8478 01fc 05       		.byte	0x5
 8479 01fd 5A01     		.2byte	0x15a
 8480 01ff CB010000 		.4byte	0x1cb
 8481 0203 06       		.uleb128 0x6
 8482 0204 A2000000 		.4byte	0xa2
 8483 0208 06       		.uleb128 0x6
 8484 0209 B8000000 		.4byte	0xb8
 8485 020d 03       		.uleb128 0x3
 8486 020e 75050000 		.4byte	.LASF44
 8487 0212 06       		.byte	0x6
 8488 0213 6C       		.byte	0x6c
 8489 0214 9B000000 		.4byte	0x9b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 193


 8490 0218 0D       		.uleb128 0xd
 8491 0219 C1030000 		.4byte	.LASF50
 8492 021d 01       		.byte	0x1
 8493 021e 37000000 		.4byte	0x37
 8494 0222 07       		.byte	0x7
 8495 0223 1C       		.byte	0x1c
 8496 0224 47020000 		.4byte	0x247
 8497 0228 0C       		.uleb128 0xc
 8498 0229 5B090000 		.4byte	.LASF45
 8499 022d 00       		.byte	0
 8500 022e 0C       		.uleb128 0xc
 8501 022f 05030000 		.4byte	.LASF46
 8502 0233 01       		.byte	0x1
 8503 0234 0C       		.uleb128 0xc
 8504 0235 B3000000 		.4byte	.LASF47
 8505 0239 02       		.byte	0x2
 8506 023a 0C       		.uleb128 0xc
 8507 023b 46060000 		.4byte	.LASF48
 8508 023f 03       		.byte	0x3
 8509 0240 0C       		.uleb128 0xc
 8510 0241 36010000 		.4byte	.LASF49
 8511 0245 04       		.byte	0x4
 8512 0246 00       		.byte	0
 8513 0247 0D       		.uleb128 0xd
 8514 0248 26030000 		.4byte	.LASF51
 8515 024c 01       		.byte	0x1
 8516 024d 37000000 		.4byte	0x37
 8517 0251 01       		.byte	0x1
 8518 0252 1D       		.byte	0x1d
 8519 0253 7C020000 		.4byte	0x27c
 8520 0257 0C       		.uleb128 0xc
 8521 0258 21060000 		.4byte	.LASF52
 8522 025c 00       		.byte	0
 8523 025d 0C       		.uleb128 0xc
 8524 025e B8040000 		.4byte	.LASF53
 8525 0262 01       		.byte	0x1
 8526 0263 0C       		.uleb128 0xc
 8527 0264 F30C0000 		.4byte	.LASF54
 8528 0268 02       		.byte	0x2
 8529 0269 0C       		.uleb128 0xc
 8530 026a A00C0000 		.4byte	.LASF55
 8531 026e 03       		.byte	0x3
 8532 026f 0C       		.uleb128 0xc
 8533 0270 4D0F0000 		.4byte	.LASF56
 8534 0274 04       		.byte	0x4
 8535 0275 0C       		.uleb128 0xc
 8536 0276 22020000 		.4byte	.LASF57
 8537 027a 05       		.byte	0x5
 8538 027b 00       		.byte	0
 8539 027c 0E       		.uleb128 0xe
 8540 027d 440C0000 		.4byte	.LASF301
 8541 0281 04       		.byte	0x4
 8542 0282 01       		.byte	0x1
 8543 0283 A1       		.byte	0xa1
 8544 0284 A6020000 		.4byte	0x2a6
 8545 0288 0F       		.uleb128 0xf
 8546 0289 6600     		.ascii	"f\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 194


 8547 028b 01       		.byte	0x1
 8548 028c A2       		.byte	0xa2
 8549 028d FD000000 		.4byte	0xfd
 8550 0291 0F       		.uleb128 0xf
 8551 0292 6200     		.ascii	"b\000"
 8552 0294 01       		.byte	0x1
 8553 0295 A3       		.byte	0xa3
 8554 0296 A6020000 		.4byte	0x2a6
 8555 029a 0F       		.uleb128 0xf
 8556 029b 75333200 		.ascii	"u32\000"
 8557 029f 01       		.byte	0x1
 8558 02a0 A4       		.byte	0xa4
 8559 02a1 CE000000 		.4byte	0xce
 8560 02a5 00       		.byte	0
 8561 02a6 07       		.uleb128 0x7
 8562 02a7 A2000000 		.4byte	0xa2
 8563 02ab B6020000 		.4byte	0x2b6
 8564 02af 08       		.uleb128 0x8
 8565 02b0 36010000 		.4byte	0x136
 8566 02b4 03       		.byte	0x3
 8567 02b5 00       		.byte	0
 8568 02b6 10       		.uleb128 0x10
 8569 02b7 A1030000 		.4byte	.LASF107
 8570 02bb 01       		.byte	0x1
 8571 02bc A8       		.byte	0xa8
 8572 02bd 00000000 		.4byte	.LFB64
 8573 02c1 74010000 		.4byte	.LFE64-.LFB64
 8574 02c5 01       		.uleb128 0x1
 8575 02c6 9C       		.byte	0x9c
 8576 02c7 E2020000 		.4byte	0x2e2
 8577 02cb 11       		.uleb128 0x11
 8578 02cc 66000000 		.4byte	.LBB2
 8579 02d0 7A000000 		.4byte	.LBE2-.LBB2
 8580 02d4 12       		.uleb128 0x12
 8581 02d5 6900     		.ascii	"i\000"
 8582 02d7 01       		.byte	0x1
 8583 02d8 AE       		.byte	0xae
 8584 02d9 94000000 		.4byte	0x94
 8585 02dd 02       		.uleb128 0x2
 8586 02de 91       		.byte	0x91
 8587 02df 6C       		.sleb128 -20
 8588 02e0 00       		.byte	0
 8589 02e1 00       		.byte	0
 8590 02e2 13       		.uleb128 0x13
 8591 02e3 590C0000 		.4byte	.LASF58
 8592 02e7 01       		.byte	0x1
 8593 02e8 CC       		.byte	0xcc
 8594 02e9 00000000 		.4byte	.LFB65
 8595 02ed 9C000000 		.4byte	.LFE65-.LFB65
 8596 02f1 01       		.uleb128 0x1
 8597 02f2 9C       		.byte	0x9c
 8598 02f3 13       		.uleb128 0x13
 8599 02f4 D30A0000 		.4byte	.LASF59
 8600 02f8 01       		.byte	0x1
 8601 02f9 F5       		.byte	0xf5
 8602 02fa 00000000 		.4byte	.LFB66
 8603 02fe 14000000 		.4byte	.LFE66-.LFB66
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 195


 8604 0302 01       		.uleb128 0x1
 8605 0303 9C       		.byte	0x9c
 8606 0304 14       		.uleb128 0x14
 8607 0305 70090000 		.4byte	.LASF60
 8608 0309 01       		.byte	0x1
 8609 030a 0001     		.2byte	0x100
 8610 030c 00000000 		.4byte	.LFB67
 8611 0310 7C000000 		.4byte	.LFE67-.LFB67
 8612 0314 01       		.uleb128 0x1
 8613 0315 9C       		.byte	0x9c
 8614 0316 15       		.uleb128 0x15
 8615 0317 F9040000 		.4byte	.LASF63
 8616 031b 01       		.byte	0x1
 8617 031c 1C01     		.2byte	0x11c
 8618 031e FD000000 		.4byte	0xfd
 8619 0322 00000000 		.4byte	.LFB68
 8620 0326 58000000 		.4byte	.LFE68-.LFB68
 8621 032a 01       		.uleb128 0x1
 8622 032b 9C       		.byte	0x9c
 8623 032c 7C030000 		.4byte	0x37c
 8624 0330 16       		.uleb128 0x16
 8625 0331 6D696E00 		.ascii	"min\000"
 8626 0335 01       		.byte	0x1
 8627 0336 1C01     		.2byte	0x11c
 8628 0338 FD000000 		.4byte	0xfd
 8629 033c 02       		.uleb128 0x2
 8630 033d 91       		.byte	0x91
 8631 033e 6C       		.sleb128 -20
 8632 033f 16       		.uleb128 0x16
 8633 0340 76616C00 		.ascii	"val\000"
 8634 0344 01       		.byte	0x1
 8635 0345 1C01     		.2byte	0x11c
 8636 0347 FD000000 		.4byte	0xfd
 8637 034b 02       		.uleb128 0x2
 8638 034c 91       		.byte	0x91
 8639 034d 68       		.sleb128 -24
 8640 034e 16       		.uleb128 0x16
 8641 034f 6D617800 		.ascii	"max\000"
 8642 0353 01       		.byte	0x1
 8643 0354 1C01     		.2byte	0x11c
 8644 0356 FD000000 		.4byte	0xfd
 8645 035a 02       		.uleb128 0x2
 8646 035b 91       		.byte	0x91
 8647 035c 64       		.sleb128 -28
 8648 035d 17       		.uleb128 0x17
 8649 035e FC090000 		.4byte	.LASF61
 8650 0362 01       		.byte	0x1
 8651 0363 1E01     		.2byte	0x11e
 8652 0365 FD000000 		.4byte	0xfd
 8653 0369 02       		.uleb128 0x2
 8654 036a 91       		.byte	0x91
 8655 036b 74       		.sleb128 -12
 8656 036c 17       		.uleb128 0x17
 8657 036d 68040000 		.4byte	.LASF62
 8658 0371 01       		.byte	0x1
 8659 0372 1F01     		.2byte	0x11f
 8660 0374 FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 196


 8661 0378 02       		.uleb128 0x2
 8662 0379 91       		.byte	0x91
 8663 037a 70       		.sleb128 -16
 8664 037b 00       		.byte	0
 8665 037c 15       		.uleb128 0x15
 8666 037d 840F0000 		.4byte	.LASF64
 8667 0381 01       		.byte	0x1
 8668 0382 3201     		.2byte	0x132
 8669 0384 FD000000 		.4byte	0xfd
 8670 0388 00000000 		.4byte	.LFB69
 8671 038c 68000000 		.4byte	.LFE69-.LFB69
 8672 0390 01       		.uleb128 0x1
 8673 0391 9C       		.byte	0x9c
 8674 0392 A4030000 		.4byte	0x3a4
 8675 0396 16       		.uleb128 0x16
 8676 0397 6600     		.ascii	"f\000"
 8677 0399 01       		.byte	0x1
 8678 039a 3201     		.2byte	0x132
 8679 039c FD000000 		.4byte	0xfd
 8680 03a0 02       		.uleb128 0x2
 8681 03a1 91       		.byte	0x91
 8682 03a2 74       		.sleb128 -12
 8683 03a3 00       		.byte	0
 8684 03a4 15       		.uleb128 0x15
 8685 03a5 CB0B0000 		.4byte	.LASF65
 8686 03a9 01       		.byte	0x1
 8687 03aa 3901     		.2byte	0x139
 8688 03ac FD000000 		.4byte	0xfd
 8689 03b0 00000000 		.4byte	.LFB70
 8690 03b4 4C000000 		.4byte	.LFE70-.LFB70
 8691 03b8 01       		.uleb128 0x1
 8692 03b9 9C       		.byte	0x9c
 8693 03ba CC030000 		.4byte	0x3cc
 8694 03be 16       		.uleb128 0x16
 8695 03bf 6600     		.ascii	"f\000"
 8696 03c1 01       		.byte	0x1
 8697 03c2 3901     		.2byte	0x139
 8698 03c4 FD000000 		.4byte	0xfd
 8699 03c8 02       		.uleb128 0x2
 8700 03c9 91       		.byte	0x91
 8701 03ca 74       		.sleb128 -12
 8702 03cb 00       		.byte	0
 8703 03cc 15       		.uleb128 0x15
 8704 03cd 61070000 		.4byte	.LASF66
 8705 03d1 01       		.byte	0x1
 8706 03d2 3F01     		.2byte	0x13f
 8707 03d4 FD000000 		.4byte	0xfd
 8708 03d8 00000000 		.4byte	.LFB71
 8709 03dc 46000000 		.4byte	.LFE71-.LFB71
 8710 03e0 01       		.uleb128 0x1
 8711 03e1 9C       		.byte	0x9c
 8712 03e2 2E040000 		.4byte	0x42e
 8713 03e6 16       		.uleb128 0x16
 8714 03e7 4100     		.ascii	"A\000"
 8715 03e9 01       		.byte	0x1
 8716 03ea 3F01     		.2byte	0x13f
 8717 03ec FD000000 		.4byte	0xfd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 197


 8718 03f0 02       		.uleb128 0x2
 8719 03f1 91       		.byte	0x91
 8720 03f2 6C       		.sleb128 -20
 8721 03f3 16       		.uleb128 0x16
 8722 03f4 4200     		.ascii	"B\000"
 8723 03f6 01       		.byte	0x1
 8724 03f7 3F01     		.2byte	0x13f
 8725 03f9 FD000000 		.4byte	0xfd
 8726 03fd 02       		.uleb128 0x2
 8727 03fe 91       		.byte	0x91
 8728 03ff 68       		.sleb128 -24
 8729 0400 18       		.uleb128 0x18
 8730 0401 1C020000 		.4byte	.LASF67
 8731 0405 01       		.byte	0x1
 8732 0406 3F01     		.2byte	0x13f
 8733 0408 FD000000 		.4byte	0xfd
 8734 040c 02       		.uleb128 0x2
 8735 040d 91       		.byte	0x91
 8736 040e 64       		.sleb128 -28
 8737 040f 17       		.uleb128 0x17
 8738 0410 51030000 		.4byte	.LASF68
 8739 0414 01       		.byte	0x1
 8740 0415 4101     		.2byte	0x141
 8741 0417 FD000000 		.4byte	0xfd
 8742 041b 02       		.uleb128 0x2
 8743 041c 91       		.byte	0x91
 8744 041d 74       		.sleb128 -12
 8745 041e 19       		.uleb128 0x19
 8746 041f 6F757400 		.ascii	"out\000"
 8747 0423 01       		.byte	0x1
 8748 0424 4401     		.2byte	0x144
 8749 0426 FD000000 		.4byte	0xfd
 8750 042a 02       		.uleb128 0x2
 8751 042b 91       		.byte	0x91
 8752 042c 70       		.sleb128 -16
 8753 042d 00       		.byte	0
 8754 042e 1A       		.uleb128 0x1a
 8755 042f 6D617000 		.ascii	"map\000"
 8756 0433 01       		.byte	0x1
 8757 0434 B201     		.2byte	0x1b2
 8758 0436 FD000000 		.4byte	0xfd
 8759 043a 00000000 		.4byte	.LFB72
 8760 043e 56000000 		.4byte	.LFE72-.LFB72
 8761 0442 01       		.uleb128 0x1
 8762 0443 9C       		.byte	0x9c
 8763 0444 94040000 		.4byte	0x494
 8764 0448 18       		.uleb128 0x18
 8765 0449 7E040000 		.4byte	.LASF69
 8766 044d 01       		.byte	0x1
 8767 044e B201     		.2byte	0x1b2
 8768 0450 FD000000 		.4byte	0xfd
 8769 0454 02       		.uleb128 0x2
 8770 0455 91       		.byte	0x91
 8771 0456 6C       		.sleb128 -20
 8772 0457 18       		.uleb128 0x18
 8773 0458 EC010000 		.4byte	.LASF70
 8774 045c 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 198


 8775 045d B201     		.2byte	0x1b2
 8776 045f FD000000 		.4byte	0xfd
 8777 0463 02       		.uleb128 0x2
 8778 0464 91       		.byte	0x91
 8779 0465 68       		.sleb128 -24
 8780 0466 18       		.uleb128 0x18
 8781 0467 9A080000 		.4byte	.LASF71
 8782 046b 01       		.byte	0x1
 8783 046c B201     		.2byte	0x1b2
 8784 046e FD000000 		.4byte	0xfd
 8785 0472 02       		.uleb128 0x2
 8786 0473 91       		.byte	0x91
 8787 0474 64       		.sleb128 -28
 8788 0475 18       		.uleb128 0x18
 8789 0476 69080000 		.4byte	.LASF72
 8790 047a 01       		.byte	0x1
 8791 047b B201     		.2byte	0x1b2
 8792 047d FD000000 		.4byte	0xfd
 8793 0481 02       		.uleb128 0x2
 8794 0482 91       		.byte	0x91
 8795 0483 60       		.sleb128 -32
 8796 0484 18       		.uleb128 0x18
 8797 0485 4F0A0000 		.4byte	.LASF73
 8798 0489 01       		.byte	0x1
 8799 048a B201     		.2byte	0x1b2
 8800 048c FD000000 		.4byte	0xfd
 8801 0490 02       		.uleb128 0x2
 8802 0491 91       		.byte	0x91
 8803 0492 00       		.sleb128 0
 8804 0493 00       		.byte	0
 8805 0494 1B       		.uleb128 0x1b
 8806 0495 87050000 		.4byte	.LASF74
 8807 0499 01       		.byte	0x1
 8808 049a BD01     		.2byte	0x1bd
 8809 049c 00000000 		.4byte	.LFB73
 8810 04a0 0C000000 		.4byte	.LFE73-.LFB73
 8811 04a4 01       		.uleb128 0x1
 8812 04a5 9C       		.byte	0x9c
 8813 04a6 1B       		.uleb128 0x1b
 8814 04a7 4D0D0000 		.4byte	.LASF75
 8815 04ab 01       		.byte	0x1
 8816 04ac C201     		.2byte	0x1c2
 8817 04ae 00000000 		.4byte	.LFB74
 8818 04b2 0C000000 		.4byte	.LFE74-.LFB74
 8819 04b6 01       		.uleb128 0x1
 8820 04b7 9C       		.byte	0x9c
 8821 04b8 1C       		.uleb128 0x1c
 8822 04b9 1B0F0000 		.4byte	.LASF302
 8823 04bd 01       		.byte	0x1
 8824 04be C801     		.2byte	0x1c8
 8825 04c0 00000000 		.4byte	.LFB75
 8826 04c4 0C010000 		.4byte	.LFE75-.LFB75
 8827 04c8 01       		.uleb128 0x1
 8828 04c9 9C       		.byte	0x9c
 8829 04ca FF040000 		.4byte	0x4ff
 8830 04ce 11       		.uleb128 0x11
 8831 04cf 06000000 		.4byte	.LBB3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 199


 8832 04d3 EA000000 		.4byte	.LBE3-.LBB3
 8833 04d7 19       		.uleb128 0x19
 8834 04d8 6900     		.ascii	"i\000"
 8835 04da 01       		.byte	0x1
 8836 04db CC01     		.2byte	0x1cc
 8837 04dd 94000000 		.4byte	0x94
 8838 04e1 02       		.uleb128 0x2
 8839 04e2 91       		.byte	0x91
 8840 04e3 6C       		.sleb128 -20
 8841 04e4 11       		.uleb128 0x11
 8842 04e5 0C000000 		.4byte	.LBB4
 8843 04e9 D8000000 		.4byte	.LBE4-.LBB4
 8844 04ed 17       		.uleb128 0x17
 8845 04ee F3010000 		.4byte	.LASF76
 8846 04f2 01       		.byte	0x1
 8847 04f3 CF01     		.2byte	0x1cf
 8848 04f5 FD000000 		.4byte	0xfd
 8849 04f9 02       		.uleb128 0x2
 8850 04fa 91       		.byte	0x91
 8851 04fb 68       		.sleb128 -24
 8852 04fc 00       		.byte	0
 8853 04fd 00       		.byte	0
 8854 04fe 00       		.byte	0
 8855 04ff 15       		.uleb128 0x15
 8856 0500 CC020000 		.4byte	.LASF77
 8857 0504 01       		.byte	0x1
 8858 0505 D601     		.2byte	0x1d6
 8859 0507 94000000 		.4byte	0x94
 8860 050b 00000000 		.4byte	.LFB76
 8861 050f BC190000 		.4byte	.LFE76-.LFB76
 8862 0513 01       		.uleb128 0x1
 8863 0514 9C       		.byte	0x9c
 8864 0515 78080000 		.4byte	0x878
 8865 0519 17       		.uleb128 0x17
 8866 051a B10F0000 		.4byte	.LASF78
 8867 051e 01       		.byte	0x1
 8868 051f 1602     		.2byte	0x216
 8869 0521 A2000000 		.4byte	0xa2
 8870 0525 03       		.uleb128 0x3
 8871 0526 91       		.byte	0x91
 8872 0527 8F7F     		.sleb128 -113
 8873 0529 1D       		.uleb128 0x1d
 8874 052a 28000000 		.4byte	.LBB5
 8875 052e 52010000 		.4byte	.LBE5-.LBB5
 8876 0532 E5050000 		.4byte	0x5e5
 8877 0536 17       		.uleb128 0x17
 8878 0537 10040000 		.4byte	.LASF79
 8879 053b 01       		.byte	0x1
 8880 053c E301     		.2byte	0x1e3
 8881 053e 94000000 		.4byte	0x94
 8882 0542 02       		.uleb128 0x2
 8883 0543 91       		.byte	0x91
 8884 0544 6C       		.sleb128 -20
 8885 0545 1D       		.uleb128 0x1d
 8886 0546 2E000000 		.4byte	.LBB6
 8887 054a 54000000 		.4byte	.LBE6-.LBB6
 8888 054e 62050000 		.4byte	0x562
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 200


 8889 0552 17       		.uleb128 0x17
 8890 0553 780E0000 		.4byte	.LASF80
 8891 0557 01       		.byte	0x1
 8892 0558 E601     		.2byte	0x1e6
 8893 055a 94000000 		.4byte	0x94
 8894 055e 02       		.uleb128 0x2
 8895 055f 91       		.byte	0x91
 8896 0560 68       		.sleb128 -24
 8897 0561 00       		.byte	0
 8898 0562 11       		.uleb128 0x11
 8899 0563 82000000 		.4byte	.LBB7
 8900 0567 EA000000 		.4byte	.LBE7-.LBB7
 8901 056b 19       		.uleb128 0x19
 8902 056c 6900     		.ascii	"i\000"
 8903 056e 01       		.byte	0x1
 8904 056f EA01     		.2byte	0x1ea
 8905 0571 94000000 		.4byte	0x94
 8906 0575 02       		.uleb128 0x2
 8907 0576 91       		.byte	0x91
 8908 0577 64       		.sleb128 -28
 8909 0578 11       		.uleb128 0x11
 8910 0579 88000000 		.4byte	.LBB8
 8911 057d D8000000 		.4byte	.LBE8-.LBB8
 8912 0581 17       		.uleb128 0x17
 8913 0582 21040000 		.4byte	.LASF81
 8914 0586 01       		.byte	0x1
 8915 0587 EC01     		.2byte	0x1ec
 8916 0589 94000000 		.4byte	0x94
 8917 058d 03       		.uleb128 0x3
 8918 058e 91       		.byte	0x91
 8919 058f 987F     		.sleb128 -104
 8920 0591 11       		.uleb128 0x11
 8921 0592 94000000 		.4byte	.LBB9
 8922 0596 CC000000 		.4byte	.LBE9-.LBB9
 8923 059a 19       		.uleb128 0x19
 8924 059b 6A00     		.ascii	"j\000"
 8925 059d 01       		.byte	0x1
 8926 059e ED01     		.2byte	0x1ed
 8927 05a0 94000000 		.4byte	0x94
 8928 05a4 02       		.uleb128 0x2
 8929 05a5 91       		.byte	0x91
 8930 05a6 60       		.sleb128 -32
 8931 05a7 11       		.uleb128 0x11
 8932 05a8 9A000000 		.4byte	.LBB10
 8933 05ac BA000000 		.4byte	.LBE10-.LBB10
 8934 05b0 17       		.uleb128 0x17
 8935 05b1 59030000 		.4byte	.LASF82
 8936 05b5 01       		.byte	0x1
 8937 05b6 F001     		.2byte	0x1f0
 8938 05b8 94000000 		.4byte	0x94
 8939 05bc 03       		.uleb128 0x3
 8940 05bd 91       		.byte	0x91
 8941 05be 947F     		.sleb128 -108
 8942 05c0 17       		.uleb128 0x17
 8943 05c1 900F0000 		.4byte	.LASF83
 8944 05c5 01       		.byte	0x1
 8945 05c6 F101     		.2byte	0x1f1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 201


 8946 05c8 B8000000 		.4byte	0xb8
 8947 05cc 03       		.uleb128 0x3
 8948 05cd 91       		.byte	0x91
 8949 05ce 927F     		.sleb128 -110
 8950 05d0 17       		.uleb128 0x17
 8951 05d1 F1090000 		.4byte	.LASF84
 8952 05d5 01       		.byte	0x1
 8953 05d6 F201     		.2byte	0x1f2
 8954 05d8 B8000000 		.4byte	0xb8
 8955 05dc 03       		.uleb128 0x3
 8956 05dd 91       		.byte	0x91
 8957 05de 907F     		.sleb128 -112
 8958 05e0 00       		.byte	0
 8959 05e1 00       		.byte	0
 8960 05e2 00       		.byte	0
 8961 05e3 00       		.byte	0
 8962 05e4 00       		.byte	0
 8963 05e5 1D       		.uleb128 0x1d
 8964 05e6 7A010000 		.4byte	.LBB11
 8965 05ea 90000000 		.4byte	.LBE11-.LBB11
 8966 05ee 00060000 		.4byte	0x600
 8967 05f2 19       		.uleb128 0x19
 8968 05f3 6900     		.ascii	"i\000"
 8969 05f5 01       		.byte	0x1
 8970 05f6 F901     		.2byte	0x1f9
 8971 05f8 94000000 		.4byte	0x94
 8972 05fc 02       		.uleb128 0x2
 8973 05fd 91       		.byte	0x91
 8974 05fe 5C       		.sleb128 -36
 8975 05ff 00       		.byte	0
 8976 0600 1D       		.uleb128 0x1d
 8977 0601 0E020000 		.4byte	.LBB12
 8978 0605 5A000000 		.4byte	.LBE12-.LBB12
 8979 0609 32060000 		.4byte	0x632
 8980 060d 19       		.uleb128 0x19
 8981 060e 6900     		.ascii	"i\000"
 8982 0610 01       		.byte	0x1
 8983 0611 0102     		.2byte	0x201
 8984 0613 94000000 		.4byte	0x94
 8985 0617 02       		.uleb128 0x2
 8986 0618 91       		.byte	0x91
 8987 0619 58       		.sleb128 -40
 8988 061a 11       		.uleb128 0x11
 8989 061b 14020000 		.4byte	.LBB13
 8990 061f 3E000000 		.4byte	.LBE13-.LBB13
 8991 0623 19       		.uleb128 0x19
 8992 0624 6A00     		.ascii	"j\000"
 8993 0626 01       		.byte	0x1
 8994 0627 0302     		.2byte	0x203
 8995 0629 94000000 		.4byte	0x94
 8996 062d 02       		.uleb128 0x2
 8997 062e 91       		.byte	0x91
 8998 062f 54       		.sleb128 -44
 8999 0630 00       		.byte	0
 9000 0631 00       		.byte	0
 9001 0632 1D       		.uleb128 0x1d
 9002 0633 C2030000 		.4byte	.LBB14
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 202


 9003 0637 28000000 		.4byte	.LBE14-.LBB14
 9004 063b 50060000 		.4byte	0x650
 9005 063f 17       		.uleb128 0x17
 9006 0640 FD070000 		.4byte	.LASF85
 9007 0644 01       		.byte	0x1
 9008 0645 E602     		.2byte	0x2e6
 9009 0647 A2000000 		.4byte	0xa2
 9010 064b 03       		.uleb128 0x3
 9011 064c 91       		.byte	0x91
 9012 064d 8E7F     		.sleb128 -114
 9013 064f 00       		.byte	0
 9014 0650 1D       		.uleb128 0x1d
 9015 0651 F0050000 		.4byte	.LBB15
 9016 0655 4E000000 		.4byte	.LBE15-.LBB15
 9017 0659 85060000 		.4byte	0x685
 9018 065d 19       		.uleb128 0x19
 9019 065e 6900     		.ascii	"i\000"
 9020 0660 01       		.byte	0x1
 9021 0661 1C03     		.2byte	0x31c
 9022 0663 94000000 		.4byte	0x94
 9023 0667 02       		.uleb128 0x2
 9024 0668 91       		.byte	0x91
 9025 0669 50       		.sleb128 -48
 9026 066a 11       		.uleb128 0x11
 9027 066b F6050000 		.4byte	.LBB16
 9028 066f 3C000000 		.4byte	.LBE16-.LBB16
 9029 0673 17       		.uleb128 0x17
 9030 0674 F5070000 		.4byte	.LASF86
 9031 0678 01       		.byte	0x1
 9032 0679 1E03     		.2byte	0x31e
 9033 067b B8000000 		.4byte	0xb8
 9034 067f 03       		.uleb128 0x3
 9035 0680 91       		.byte	0x91
 9036 0681 F67E     		.sleb128 -138
 9037 0683 00       		.byte	0
 9038 0684 00       		.byte	0
 9039 0685 1D       		.uleb128 0x1d
 9040 0686 CE060000 		.4byte	.LBB17
 9041 068a 1E010000 		.4byte	.LBE17-.LBB17
 9042 068e A3060000 		.4byte	0x6a3
 9043 0692 17       		.uleb128 0x17
 9044 0693 5D000000 		.4byte	.LASF87
 9045 0697 01       		.byte	0x1
 9046 0698 B403     		.2byte	0x3b4
 9047 069a AD000000 		.4byte	0xad
 9048 069e 03       		.uleb128 0x3
 9049 069f 91       		.byte	0x91
 9050 06a0 8C7F     		.sleb128 -116
 9051 06a2 00       		.byte	0
 9052 06a3 1D       		.uleb128 0x1d
 9053 06a4 98080000 		.4byte	.LBB18
 9054 06a8 28000000 		.4byte	.LBE18-.LBB18
 9055 06ac C1060000 		.4byte	0x6c1
 9056 06b0 17       		.uleb128 0x17
 9057 06b1 4F050000 		.4byte	.LASF88
 9058 06b5 01       		.byte	0x1
 9059 06b6 DC03     		.2byte	0x3dc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 203


 9060 06b8 B8000000 		.4byte	0xb8
 9061 06bc 03       		.uleb128 0x3
 9062 06bd 91       		.byte	0x91
 9063 06be 8A7F     		.sleb128 -118
 9064 06c0 00       		.byte	0
 9065 06c1 1D       		.uleb128 0x1d
 9066 06c2 FA080000 		.4byte	.LBB19
 9067 06c6 46000000 		.4byte	.LBE19-.LBB19
 9068 06ca DC060000 		.4byte	0x6dc
 9069 06ce 19       		.uleb128 0x19
 9070 06cf 6900     		.ascii	"i\000"
 9071 06d1 01       		.byte	0x1
 9072 06d2 2804     		.2byte	0x428
 9073 06d4 94000000 		.4byte	0x94
 9074 06d8 02       		.uleb128 0x2
 9075 06d9 91       		.byte	0x91
 9076 06da 4C       		.sleb128 -52
 9077 06db 00       		.byte	0
 9078 06dc 1D       		.uleb128 0x1d
 9079 06dd 82100000 		.4byte	.LBB20
 9080 06e1 28000000 		.4byte	.LBE20-.LBB20
 9081 06e5 F7060000 		.4byte	0x6f7
 9082 06e9 19       		.uleb128 0x19
 9083 06ea 6900     		.ascii	"i\000"
 9084 06ec 01       		.byte	0x1
 9085 06ed 2505     		.2byte	0x525
 9086 06ef 94000000 		.4byte	0x94
 9087 06f3 02       		.uleb128 0x2
 9088 06f4 91       		.byte	0x91
 9089 06f5 48       		.sleb128 -56
 9090 06f6 00       		.byte	0
 9091 06f7 1D       		.uleb128 0x1d
 9092 06f8 0C110000 		.4byte	.LBB21
 9093 06fc 98000000 		.4byte	.LBE21-.LBB21
 9094 0700 12070000 		.4byte	0x712
 9095 0704 19       		.uleb128 0x19
 9096 0705 6900     		.ascii	"i\000"
 9097 0707 01       		.byte	0x1
 9098 0708 3705     		.2byte	0x537
 9099 070a 94000000 		.4byte	0x94
 9100 070e 02       		.uleb128 0x2
 9101 070f 91       		.byte	0x91
 9102 0710 44       		.sleb128 -60
 9103 0711 00       		.byte	0
 9104 0712 1D       		.uleb128 0x1d
 9105 0713 BE110000 		.4byte	.LBB22
 9106 0717 8A000000 		.4byte	.LBE22-.LBB22
 9107 071b 2D070000 		.4byte	0x72d
 9108 071f 19       		.uleb128 0x19
 9109 0720 6900     		.ascii	"i\000"
 9110 0722 01       		.byte	0x1
 9111 0723 4E05     		.2byte	0x54e
 9112 0725 94000000 		.4byte	0x94
 9113 0729 02       		.uleb128 0x2
 9114 072a 91       		.byte	0x91
 9115 072b 40       		.sleb128 -64
 9116 072c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 204


 9117 072d 1D       		.uleb128 0x1d
 9118 072e 4E120000 		.4byte	.LBB23
 9119 0732 A2020000 		.4byte	.LBE23-.LBB23
 9120 0736 63070000 		.4byte	0x763
 9121 073a 19       		.uleb128 0x19
 9122 073b 6900     		.ascii	"i\000"
 9123 073d 01       		.byte	0x1
 9124 073e 5D05     		.2byte	0x55d
 9125 0740 94000000 		.4byte	0x94
 9126 0744 03       		.uleb128 0x3
 9127 0745 91       		.byte	0x91
 9128 0746 BC7F     		.sleb128 -68
 9129 0748 11       		.uleb128 0x11
 9130 0749 A0120000 		.4byte	.LBB24
 9131 074d 3E020000 		.4byte	.LBE24-.LBB24
 9132 0751 17       		.uleb128 0x17
 9133 0752 300B0000 		.4byte	.LASF89
 9134 0756 01       		.byte	0x1
 9135 0757 6E05     		.2byte	0x56e
 9136 0759 FD000000 		.4byte	0xfd
 9137 075d 03       		.uleb128 0x3
 9138 075e 91       		.byte	0x91
 9139 075f 847F     		.sleb128 -124
 9140 0761 00       		.byte	0
 9141 0762 00       		.byte	0
 9142 0763 1D       		.uleb128 0x1d
 9143 0764 38160000 		.4byte	.LBB25
 9144 0768 4E000000 		.4byte	.LBE25-.LBB25
 9145 076c 7F070000 		.4byte	0x77f
 9146 0770 19       		.uleb128 0x19
 9147 0771 6900     		.ascii	"i\000"
 9148 0773 01       		.byte	0x1
 9149 0774 D605     		.2byte	0x5d6
 9150 0776 0D020000 		.4byte	0x20d
 9151 077a 03       		.uleb128 0x3
 9152 077b 91       		.byte	0x91
 9153 077c B87F     		.sleb128 -72
 9154 077e 00       		.byte	0
 9155 077f 1D       		.uleb128 0x1d
 9156 0780 A4160000 		.4byte	.LBB26
 9157 0784 22000000 		.4byte	.LBE26-.LBB26
 9158 0788 9B070000 		.4byte	0x79b
 9159 078c 19       		.uleb128 0x19
 9160 078d 6900     		.ascii	"i\000"
 9161 078f 01       		.byte	0x1
 9162 0790 E905     		.2byte	0x5e9
 9163 0792 94000000 		.4byte	0x94
 9164 0796 03       		.uleb128 0x3
 9165 0797 91       		.byte	0x91
 9166 0798 B47F     		.sleb128 -76
 9167 079a 00       		.byte	0
 9168 079b 1D       		.uleb128 0x1d
 9169 079c C6160000 		.4byte	.LBB27
 9170 07a0 22000000 		.4byte	.LBE27-.LBB27
 9171 07a4 B7070000 		.4byte	0x7b7
 9172 07a8 19       		.uleb128 0x19
 9173 07a9 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 205


 9174 07ab 01       		.byte	0x1
 9175 07ac ED05     		.2byte	0x5ed
 9176 07ae 94000000 		.4byte	0x94
 9177 07b2 03       		.uleb128 0x3
 9178 07b3 91       		.byte	0x91
 9179 07b4 B07F     		.sleb128 -80
 9180 07b6 00       		.byte	0
 9181 07b7 1D       		.uleb128 0x1d
 9182 07b8 E8160000 		.4byte	.LBB28
 9183 07bc 22000000 		.4byte	.LBE28-.LBB28
 9184 07c0 D3070000 		.4byte	0x7d3
 9185 07c4 19       		.uleb128 0x19
 9186 07c5 6900     		.ascii	"i\000"
 9187 07c7 01       		.byte	0x1
 9188 07c8 F105     		.2byte	0x5f1
 9189 07ca 94000000 		.4byte	0x94
 9190 07ce 03       		.uleb128 0x3
 9191 07cf 91       		.byte	0x91
 9192 07d0 AC7F     		.sleb128 -84
 9193 07d2 00       		.byte	0
 9194 07d3 1D       		.uleb128 0x1d
 9195 07d4 78170000 		.4byte	.LBB29
 9196 07d8 B8000000 		.4byte	.LBE29-.LBB29
 9197 07dc 09080000 		.4byte	0x809
 9198 07e0 19       		.uleb128 0x19
 9199 07e1 6900     		.ascii	"i\000"
 9200 07e3 01       		.byte	0x1
 9201 07e4 0206     		.2byte	0x602
 9202 07e6 94000000 		.4byte	0x94
 9203 07ea 03       		.uleb128 0x3
 9204 07eb 91       		.byte	0x91
 9205 07ec A87F     		.sleb128 -88
 9206 07ee 11       		.uleb128 0x11
 9207 07ef E0170000 		.4byte	.LBB30
 9208 07f3 44000000 		.4byte	.LBE30-.LBB30
 9209 07f7 17       		.uleb128 0x17
 9210 07f8 7A0C0000 		.4byte	.LASF90
 9211 07fc 01       		.byte	0x1
 9212 07fd 0406     		.2byte	0x604
 9213 07ff 94000000 		.4byte	0x94
 9214 0803 03       		.uleb128 0x3
 9215 0804 91       		.byte	0x91
 9216 0805 807F     		.sleb128 -128
 9217 0807 00       		.byte	0
 9218 0808 00       		.byte	0
 9219 0809 11       		.uleb128 0x11
 9220 080a A6180000 		.4byte	.LBB31
 9221 080e B0000000 		.4byte	.LBE31-.LBB31
 9222 0812 17       		.uleb128 0x17
 9223 0813 A4020000 		.4byte	.LASF91
 9224 0817 01       		.byte	0x1
 9225 0818 2F06     		.2byte	0x62f
 9226 081a 94000000 		.4byte	0x94
 9227 081e 03       		.uleb128 0x3
 9228 081f 91       		.byte	0x91
 9229 0820 FC7E     		.sleb128 -132
 9230 0822 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 206


 9231 0823 DC000000 		.4byte	.LASF92
 9232 0827 01       		.byte	0x1
 9233 0828 3006     		.2byte	0x630
 9234 082a 94000000 		.4byte	0x94
 9235 082e 03       		.uleb128 0x3
 9236 082f 91       		.byte	0x91
 9237 0830 F87E     		.sleb128 -136
 9238 0832 17       		.uleb128 0x17
 9239 0833 C00D0000 		.4byte	.LASF93
 9240 0837 01       		.byte	0x1
 9241 0838 3106     		.2byte	0x631
 9242 083a 94000000 		.4byte	0x94
 9243 083e 03       		.uleb128 0x3
 9244 083f 91       		.byte	0x91
 9245 0840 A47F     		.sleb128 -92
 9246 0842 1D       		.uleb128 0x1d
 9247 0843 B6180000 		.4byte	.LBB32
 9248 0847 36000000 		.4byte	.LBE32-.LBB32
 9249 084b 5E080000 		.4byte	0x85e
 9250 084f 19       		.uleb128 0x19
 9251 0850 6900     		.ascii	"i\000"
 9252 0852 01       		.byte	0x1
 9253 0853 3206     		.2byte	0x632
 9254 0855 94000000 		.4byte	0x94
 9255 0859 03       		.uleb128 0x3
 9256 085a 91       		.byte	0x91
 9257 085b A07F     		.sleb128 -96
 9258 085d 00       		.byte	0
 9259 085e 11       		.uleb128 0x11
 9260 085f F0180000 		.4byte	.LBB33
 9261 0863 44000000 		.4byte	.LBE33-.LBB33
 9262 0867 19       		.uleb128 0x19
 9263 0868 6900     		.ascii	"i\000"
 9264 086a 01       		.byte	0x1
 9265 086b 3806     		.2byte	0x638
 9266 086d 94000000 		.4byte	0x94
 9267 0871 03       		.uleb128 0x3
 9268 0872 91       		.byte	0x91
 9269 0873 9C7F     		.sleb128 -100
 9270 0875 00       		.byte	0
 9271 0876 00       		.byte	0
 9272 0877 00       		.byte	0
 9273 0878 14       		.uleb128 0x14
 9274 0879 03050000 		.4byte	.LASF94
 9275 087d 01       		.byte	0x1
 9276 087e 4D06     		.2byte	0x64d
 9277 0880 00000000 		.4byte	.LFB77
 9278 0884 70000000 		.4byte	.LFE77-.LFB77
 9279 0888 01       		.uleb128 0x1
 9280 0889 9C       		.byte	0x9c
 9281 088a 14       		.uleb128 0x14
 9282 088b D30E0000 		.4byte	.LASF95
 9283 088f 01       		.byte	0x1
 9284 0890 6206     		.2byte	0x662
 9285 0892 00000000 		.4byte	.LFB78
 9286 0896 70010000 		.4byte	.LFE78-.LFB78
 9287 089a 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 207


 9288 089b 9C       		.byte	0x9c
 9289 089c 15       		.uleb128 0x15
 9290 089d 28080000 		.4byte	.LASF96
 9291 08a1 01       		.byte	0x1
 9292 08a2 8A06     		.2byte	0x68a
 9293 08a4 D9000000 		.4byte	0xd9
 9294 08a8 00000000 		.4byte	.LFB79
 9295 08ac E0000000 		.4byte	.LFE79-.LFB79
 9296 08b0 01       		.uleb128 0x1
 9297 08b1 9C       		.byte	0x9c
 9298 08b2 02090000 		.4byte	0x902
 9299 08b6 18       		.uleb128 0x18
 9300 08b7 5C0E0000 		.4byte	.LASF97
 9301 08bb 01       		.byte	0x1
 9302 08bc 8A06     		.2byte	0x68a
 9303 08be D9000000 		.4byte	0xd9
 9304 08c2 02       		.uleb128 0x2
 9305 08c3 91       		.byte	0x91
 9306 08c4 6F       		.sleb128 -17
 9307 08c5 18       		.uleb128 0x18
 9308 08c6 7A010000 		.4byte	.LASF98
 9309 08ca 01       		.byte	0x1
 9310 08cb 8A06     		.2byte	0x68a
 9311 08cd E5000000 		.4byte	0xe5
 9312 08d1 02       		.uleb128 0x2
 9313 08d2 91       		.byte	0x91
 9314 08d3 6C       		.sleb128 -20
 9315 08d4 18       		.uleb128 0x18
 9316 08d5 BB0D0000 		.4byte	.LASF99
 9317 08d9 01       		.byte	0x1
 9318 08da 8A06     		.2byte	0x68a
 9319 08dc A2000000 		.4byte	0xa2
 9320 08e0 02       		.uleb128 0x2
 9321 08e1 91       		.byte	0x91
 9322 08e2 6E       		.sleb128 -18
 9323 08e3 17       		.uleb128 0x17
 9324 08e4 FD070000 		.4byte	.LASF85
 9325 08e8 01       		.byte	0x1
 9326 08e9 8C06     		.2byte	0x68c
 9327 08eb 2A010000 		.4byte	0x12a
 9328 08ef 02       		.uleb128 0x2
 9329 08f0 91       		.byte	0x91
 9330 08f1 73       		.sleb128 -13
 9331 08f2 17       		.uleb128 0x17
 9332 08f3 550A0000 		.4byte	.LASF100
 9333 08f7 01       		.byte	0x1
 9334 08f8 8D06     		.2byte	0x68d
 9335 08fa CE000000 		.4byte	0xce
 9336 08fe 02       		.uleb128 0x2
 9337 08ff 91       		.byte	0x91
 9338 0900 74       		.sleb128 -12
 9339 0901 00       		.byte	0
 9340 0902 15       		.uleb128 0x15
 9341 0903 980B0000 		.4byte	.LASF101
 9342 0907 01       		.byte	0x1
 9343 0908 BD06     		.2byte	0x6bd
 9344 090a D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 208


 9345 090e 00000000 		.4byte	.LFB80
 9346 0912 E4000000 		.4byte	.LFE80-.LFB80
 9347 0916 01       		.uleb128 0x1
 9348 0917 9C       		.byte	0x9c
 9349 0918 68090000 		.4byte	0x968
 9350 091c 18       		.uleb128 0x18
 9351 091d 5C0E0000 		.4byte	.LASF97
 9352 0921 01       		.byte	0x1
 9353 0922 BD06     		.2byte	0x6bd
 9354 0924 D9000000 		.4byte	0xd9
 9355 0928 02       		.uleb128 0x2
 9356 0929 91       		.byte	0x91
 9357 092a 6F       		.sleb128 -17
 9358 092b 18       		.uleb128 0x18
 9359 092c 7A010000 		.4byte	.LASF98
 9360 0930 01       		.byte	0x1
 9361 0931 BD06     		.2byte	0x6bd
 9362 0933 D9000000 		.4byte	0xd9
 9363 0937 02       		.uleb128 0x2
 9364 0938 91       		.byte	0x91
 9365 0939 6E       		.sleb128 -18
 9366 093a 18       		.uleb128 0x18
 9367 093b BB0D0000 		.4byte	.LASF99
 9368 093f 01       		.byte	0x1
 9369 0940 BD06     		.2byte	0x6bd
 9370 0942 A2000000 		.4byte	0xa2
 9371 0946 02       		.uleb128 0x2
 9372 0947 91       		.byte	0x91
 9373 0948 6D       		.sleb128 -19
 9374 0949 17       		.uleb128 0x17
 9375 094a FD070000 		.4byte	.LASF85
 9376 094e 01       		.byte	0x1
 9377 094f BF06     		.2byte	0x6bf
 9378 0951 2A010000 		.4byte	0x12a
 9379 0955 02       		.uleb128 0x2
 9380 0956 91       		.byte	0x91
 9381 0957 73       		.sleb128 -13
 9382 0958 17       		.uleb128 0x17
 9383 0959 550A0000 		.4byte	.LASF100
 9384 095d 01       		.byte	0x1
 9385 095e C006     		.2byte	0x6c0
 9386 0960 CE000000 		.4byte	0xce
 9387 0964 02       		.uleb128 0x2
 9388 0965 91       		.byte	0x91
 9389 0966 74       		.sleb128 -12
 9390 0967 00       		.byte	0
 9391 0968 14       		.uleb128 0x14
 9392 0969 59050000 		.4byte	.LASF102
 9393 096d 01       		.byte	0x1
 9394 096e EB06     		.2byte	0x6eb
 9395 0970 00000000 		.4byte	.LFB81
 9396 0974 30000000 		.4byte	.LFE81-.LFB81
 9397 0978 01       		.uleb128 0x1
 9398 0979 9C       		.byte	0x9c
 9399 097a 1E       		.uleb128 0x1e
 9400 097b AF070000 		.4byte	.LASF103
 9401 097f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 209


 9402 0980 FA06     		.2byte	0x6fa
 9403 0982 00000000 		.4byte	.LFB82
 9404 0986 7C000000 		.4byte	.LFE82-.LFB82
 9405 098a 01       		.uleb128 0x1
 9406 098b 9C       		.byte	0x9c
 9407 098c 14       		.uleb128 0x14
 9408 098d 26050000 		.4byte	.LASF104
 9409 0991 01       		.byte	0x1
 9410 0992 0807     		.2byte	0x708
 9411 0994 00000000 		.4byte	.LFB83
 9412 0998 54000000 		.4byte	.LFE83-.LFB83
 9413 099c 01       		.uleb128 0x1
 9414 099d 9C       		.byte	0x9c
 9415 099e 14       		.uleb128 0x14
 9416 099f 48040000 		.4byte	.LASF105
 9417 09a3 01       		.byte	0x1
 9418 09a4 1B07     		.2byte	0x71b
 9419 09a6 00000000 		.4byte	.LFB84
 9420 09aa C4000000 		.4byte	.LFE84-.LFB84
 9421 09ae 01       		.uleb128 0x1
 9422 09af 9C       		.byte	0x9c
 9423 09b0 15       		.uleb128 0x15
 9424 09b1 350A0000 		.4byte	.LASF106
 9425 09b5 01       		.byte	0x1
 9426 09b6 4E07     		.2byte	0x74e
 9427 09b8 FD000000 		.4byte	0xfd
 9428 09bc 00000000 		.4byte	.LFB85
 9429 09c0 98000000 		.4byte	.LFE85-.LFB85
 9430 09c4 01       		.uleb128 0x1
 9431 09c5 9C       		.byte	0x9c
 9432 09c6 FF090000 		.4byte	0x9ff
 9433 09ca 16       		.uleb128 0x16
 9434 09cb 5800     		.ascii	"X\000"
 9435 09cd 01       		.byte	0x1
 9436 09ce 4E07     		.2byte	0x74e
 9437 09d0 FD000000 		.4byte	0xfd
 9438 09d4 02       		.uleb128 0x2
 9439 09d5 91       		.byte	0x91
 9440 09d6 64       		.sleb128 -28
 9441 09d7 19       		.uleb128 0x19
 9442 09d8 5900     		.ascii	"Y\000"
 9443 09da 01       		.byte	0x1
 9444 09db 4F07     		.2byte	0x74f
 9445 09dd FD000000 		.4byte	0xfd
 9446 09e1 02       		.uleb128 0x2
 9447 09e2 91       		.byte	0x91
 9448 09e3 70       		.sleb128 -16
 9449 09e4 19       		.uleb128 0x19
 9450 09e5 4600     		.ascii	"F\000"
 9451 09e7 01       		.byte	0x1
 9452 09e8 4F07     		.2byte	0x74f
 9453 09ea FD000000 		.4byte	0xfd
 9454 09ee 02       		.uleb128 0x2
 9455 09ef 91       		.byte	0x91
 9456 09f0 74       		.sleb128 -12
 9457 09f1 19       		.uleb128 0x19
 9458 09f2 4500     		.ascii	"E\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 210


 9459 09f4 01       		.byte	0x1
 9460 09f5 5007     		.2byte	0x750
 9461 09f7 94000000 		.4byte	0x94
 9462 09fb 02       		.uleb128 0x2
 9463 09fc 91       		.byte	0x91
 9464 09fd 6C       		.sleb128 -20
 9465 09fe 00       		.byte	0
 9466 09ff 1F       		.uleb128 0x1f
 9467 0a00 BD000000 		.4byte	.LASF108
 9468 0a04 01       		.byte	0x1
 9469 0a05 6207     		.2byte	0x762
 9470 0a07 00000000 		.4byte	.LFB86
 9471 0a0b D4000000 		.4byte	.LFE86-.LFB86
 9472 0a0f 01       		.uleb128 0x1
 9473 0a10 9C       		.byte	0x9c
 9474 0a11 5C0A0000 		.4byte	0xa5c
 9475 0a15 18       		.uleb128 0x18
 9476 0a16 980A0000 		.4byte	.LASF109
 9477 0a1a 01       		.byte	0x1
 9478 0a1b 6207     		.2byte	0x762
 9479 0a1d 94000000 		.4byte	0x94
 9480 0a21 02       		.uleb128 0x2
 9481 0a22 91       		.byte	0x91
 9482 0a23 64       		.sleb128 -28
 9483 0a24 17       		.uleb128 0x17
 9484 0a25 E10A0000 		.4byte	.LASF110
 9485 0a29 01       		.byte	0x1
 9486 0a2a 6E07     		.2byte	0x76e
 9487 0a2c B8000000 		.4byte	0xb8
 9488 0a30 02       		.uleb128 0x2
 9489 0a31 91       		.byte	0x91
 9490 0a32 76       		.sleb128 -10
 9491 0a33 11       		.uleb128 0x11
 9492 0a34 18000000 		.4byte	.LBB34
 9493 0a38 86000000 		.4byte	.LBE34-.LBB34
 9494 0a3c 17       		.uleb128 0x17
 9495 0a3d B90C0000 		.4byte	.LASF111
 9496 0a41 01       		.byte	0x1
 9497 0a42 7207     		.2byte	0x772
 9498 0a44 FD000000 		.4byte	0xfd
 9499 0a48 02       		.uleb128 0x2
 9500 0a49 91       		.byte	0x91
 9501 0a4a 70       		.sleb128 -16
 9502 0a4b 17       		.uleb128 0x17
 9503 0a4c 550F0000 		.4byte	.LASF112
 9504 0a50 01       		.byte	0x1
 9505 0a51 8107     		.2byte	0x781
 9506 0a53 94000000 		.4byte	0x94
 9507 0a57 02       		.uleb128 0x2
 9508 0a58 91       		.byte	0x91
 9509 0a59 6C       		.sleb128 -20
 9510 0a5a 00       		.byte	0
 9511 0a5b 00       		.byte	0
 9512 0a5c 1F       		.uleb128 0x1f
 9513 0a5d AD060000 		.4byte	.LASF113
 9514 0a61 01       		.byte	0x1
 9515 0a62 8D07     		.2byte	0x78d
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 211


 9516 0a64 00000000 		.4byte	.LFB87
 9517 0a68 1C000000 		.4byte	.LFE87-.LFB87
 9518 0a6c 01       		.uleb128 0x1
 9519 0a6d 9C       		.byte	0x9c
 9520 0a6e 900A0000 		.4byte	0xa90
 9521 0a72 16       		.uleb128 0x16
 9522 0a73 636300   		.ascii	"cc\000"
 9523 0a76 01       		.byte	0x1
 9524 0a77 8D07     		.2byte	0x78d
 9525 0a79 94000000 		.4byte	0x94
 9526 0a7d 02       		.uleb128 0x2
 9527 0a7e 91       		.byte	0x91
 9528 0a7f 74       		.sleb128 -12
 9529 0a80 16       		.uleb128 0x16
 9530 0a81 76616C00 		.ascii	"val\000"
 9531 0a85 01       		.byte	0x1
 9532 0a86 8D07     		.2byte	0x78d
 9533 0a88 94000000 		.4byte	0x94
 9534 0a8c 02       		.uleb128 0x2
 9535 0a8d 91       		.byte	0x91
 9536 0a8e 70       		.sleb128 -16
 9537 0a8f 00       		.byte	0
 9538 0a90 1F       		.uleb128 0x1f
 9539 0a91 3F090000 		.4byte	.LASF114
 9540 0a95 01       		.byte	0x1
 9541 0a96 9307     		.2byte	0x793
 9542 0a98 00000000 		.4byte	.LFB88
 9543 0a9c 68000000 		.4byte	.LFE88-.LFB88
 9544 0aa0 01       		.uleb128 0x1
 9545 0aa1 9C       		.byte	0x9c
 9546 0aa2 D40A0000 		.4byte	0xad4
 9547 0aa6 18       		.uleb128 0x18
 9548 0aa7 E5020000 		.4byte	.LASF115
 9549 0aab 01       		.byte	0x1
 9550 0aac 9307     		.2byte	0x793
 9551 0aae 94000000 		.4byte	0x94
 9552 0ab2 02       		.uleb128 0x2
 9553 0ab3 91       		.byte	0x91
 9554 0ab4 74       		.sleb128 -12
 9555 0ab5 18       		.uleb128 0x18
 9556 0ab6 E10A0000 		.4byte	.LASF110
 9557 0aba 01       		.byte	0x1
 9558 0abb 9307     		.2byte	0x793
 9559 0abd 94000000 		.4byte	0x94
 9560 0ac1 02       		.uleb128 0x2
 9561 0ac2 91       		.byte	0x91
 9562 0ac3 70       		.sleb128 -16
 9563 0ac4 18       		.uleb128 0x18
 9564 0ac5 20080000 		.4byte	.LASF116
 9565 0ac9 01       		.byte	0x1
 9566 0aca 9307     		.2byte	0x793
 9567 0acc 94000000 		.4byte	0x94
 9568 0ad0 02       		.uleb128 0x2
 9569 0ad1 91       		.byte	0x91
 9570 0ad2 6C       		.sleb128 -20
 9571 0ad3 00       		.byte	0
 9572 0ad4 1F       		.uleb128 0x1f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 212


 9573 0ad5 A5050000 		.4byte	.LASF117
 9574 0ad9 01       		.byte	0x1
 9575 0ada A007     		.2byte	0x7a0
 9576 0adc 00000000 		.4byte	.LFB89
 9577 0ae0 68000000 		.4byte	.LFE89-.LFB89
 9578 0ae4 01       		.uleb128 0x1
 9579 0ae5 9C       		.byte	0x9c
 9580 0ae6 180B0000 		.4byte	0xb18
 9581 0aea 18       		.uleb128 0x18
 9582 0aeb E5020000 		.4byte	.LASF115
 9583 0aef 01       		.byte	0x1
 9584 0af0 A007     		.2byte	0x7a0
 9585 0af2 94000000 		.4byte	0x94
 9586 0af6 02       		.uleb128 0x2
 9587 0af7 91       		.byte	0x91
 9588 0af8 74       		.sleb128 -12
 9589 0af9 18       		.uleb128 0x18
 9590 0afa 98040000 		.4byte	.LASF118
 9591 0afe 01       		.byte	0x1
 9592 0aff A007     		.2byte	0x7a0
 9593 0b01 94000000 		.4byte	0x94
 9594 0b05 02       		.uleb128 0x2
 9595 0b06 91       		.byte	0x91
 9596 0b07 70       		.sleb128 -16
 9597 0b08 18       		.uleb128 0x18
 9598 0b09 20080000 		.4byte	.LASF116
 9599 0b0d 01       		.byte	0x1
 9600 0b0e A007     		.2byte	0x7a0
 9601 0b10 94000000 		.4byte	0x94
 9602 0b14 02       		.uleb128 0x2
 9603 0b15 91       		.byte	0x91
 9604 0b16 6C       		.sleb128 -20
 9605 0b17 00       		.byte	0
 9606 0b18 1F       		.uleb128 0x1f
 9607 0b19 CA050000 		.4byte	.LASF119
 9608 0b1d 01       		.byte	0x1
 9609 0b1e AC07     		.2byte	0x7ac
 9610 0b20 00000000 		.4byte	.LFB90
 9611 0b24 68000000 		.4byte	.LFE90-.LFB90
 9612 0b28 01       		.uleb128 0x1
 9613 0b29 9C       		.byte	0x9c
 9614 0b2a 5C0B0000 		.4byte	0xb5c
 9615 0b2e 18       		.uleb128 0x18
 9616 0b2f A5010000 		.4byte	.LASF120
 9617 0b33 01       		.byte	0x1
 9618 0b34 AC07     		.2byte	0x7ac
 9619 0b36 94000000 		.4byte	0x94
 9620 0b3a 02       		.uleb128 0x2
 9621 0b3b 91       		.byte	0x91
 9622 0b3c 74       		.sleb128 -12
 9623 0b3d 18       		.uleb128 0x18
 9624 0b3e F2000000 		.4byte	.LASF121
 9625 0b42 01       		.byte	0x1
 9626 0b43 AC07     		.2byte	0x7ac
 9627 0b45 94000000 		.4byte	0x94
 9628 0b49 02       		.uleb128 0x2
 9629 0b4a 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 213


 9630 0b4b 70       		.sleb128 -16
 9631 0b4c 18       		.uleb128 0x18
 9632 0b4d 20080000 		.4byte	.LASF116
 9633 0b51 01       		.byte	0x1
 9634 0b52 AC07     		.2byte	0x7ac
 9635 0b54 94000000 		.4byte	0x94
 9636 0b58 02       		.uleb128 0x2
 9637 0b59 91       		.byte	0x91
 9638 0b5a 6C       		.sleb128 -20
 9639 0b5b 00       		.byte	0
 9640 0b5c 1F       		.uleb128 0x1f
 9641 0b5d 9F0A0000 		.4byte	.LASF122
 9642 0b61 01       		.byte	0x1
 9643 0b62 B807     		.2byte	0x7b8
 9644 0b64 00000000 		.4byte	.LFB91
 9645 0b68 6C000000 		.4byte	.LFE91-.LFB91
 9646 0b6c 01       		.uleb128 0x1
 9647 0b6d 9C       		.byte	0x9c
 9648 0b6e 910B0000 		.4byte	0xb91
 9649 0b72 16       		.uleb128 0x16
 9650 0b73 76616C00 		.ascii	"val\000"
 9651 0b77 01       		.byte	0x1
 9652 0b78 B807     		.2byte	0x7b8
 9653 0b7a 94000000 		.4byte	0x94
 9654 0b7e 02       		.uleb128 0x2
 9655 0b7f 91       		.byte	0x91
 9656 0b80 74       		.sleb128 -12
 9657 0b81 18       		.uleb128 0x18
 9658 0b82 20080000 		.4byte	.LASF116
 9659 0b86 01       		.byte	0x1
 9660 0b87 B807     		.2byte	0x7b8
 9661 0b89 94000000 		.4byte	0x94
 9662 0b8d 02       		.uleb128 0x2
 9663 0b8e 91       		.byte	0x91
 9664 0b8f 70       		.sleb128 -16
 9665 0b90 00       		.byte	0
 9666 0b91 14       		.uleb128 0x14
 9667 0b92 F1020000 		.4byte	.LASF123
 9668 0b96 01       		.byte	0x1
 9669 0b97 C407     		.2byte	0x7c4
 9670 0b99 00000000 		.4byte	.LFB92
 9671 0b9d 64000000 		.4byte	.LFE92-.LFB92
 9672 0ba1 01       		.uleb128 0x1
 9673 0ba2 9C       		.byte	0x9c
 9674 0ba3 1F       		.uleb128 0x1f
 9675 0ba4 B5060000 		.4byte	.LASF124
 9676 0ba8 01       		.byte	0x1
 9677 0ba9 DC07     		.2byte	0x7dc
 9678 0bab 00000000 		.4byte	.LFB93
 9679 0baf BC080000 		.4byte	.LFE93-.LFB93
 9680 0bb3 01       		.uleb128 0x1
 9681 0bb4 9C       		.byte	0x9c
 9682 0bb5 4E0D0000 		.4byte	0xd4e
 9683 0bb9 1D       		.uleb128 0x1d
 9684 0bba 16000000 		.4byte	.LBB35
 9685 0bbe 3C050000 		.4byte	.LBE35-.LBB35
 9686 0bc2 690C0000 		.4byte	0xc69
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 214


 9687 0bc6 17       		.uleb128 0x17
 9688 0bc7 FD010000 		.4byte	.LASF125
 9689 0bcb 01       		.byte	0x1
 9690 0bcc E707     		.2byte	0x7e7
 9691 0bce 7C020000 		.4byte	0x27c
 9692 0bd2 02       		.uleb128 0x2
 9693 0bd3 91       		.byte	0x91
 9694 0bd4 40       		.sleb128 -64
 9695 0bd5 19       		.uleb128 0x19
 9696 0bd6 6900     		.ascii	"i\000"
 9697 0bd8 01       		.byte	0x1
 9698 0bd9 E807     		.2byte	0x7e8
 9699 0bdb CE000000 		.4byte	0xce
 9700 0bdf 02       		.uleb128 0x2
 9701 0be0 91       		.byte	0x91
 9702 0be1 6C       		.sleb128 -20
 9703 0be2 17       		.uleb128 0x17
 9704 0be3 70040000 		.4byte	.LASF126
 9705 0be7 01       		.byte	0x1
 9706 0be8 E907     		.2byte	0x7e9
 9707 0bea A2000000 		.4byte	0xa2
 9708 0bee 02       		.uleb128 0x2
 9709 0bef 91       		.byte	0x91
 9710 0bf0 57       		.sleb128 -41
 9711 0bf1 17       		.uleb128 0x17
 9712 0bf2 06040000 		.4byte	.LASF127
 9713 0bf6 01       		.byte	0x1
 9714 0bf7 FD07     		.2byte	0x7fd
 9715 0bf9 B8000000 		.4byte	0xb8
 9716 0bfd 02       		.uleb128 0x2
 9717 0bfe 91       		.byte	0x91
 9718 0bff 54       		.sleb128 -44
 9719 0c00 1D       		.uleb128 0x1d
 9720 0c01 8E000000 		.4byte	.LBB36
 9721 0c05 76000000 		.4byte	.LBE36-.LBB36
 9722 0c09 320C0000 		.4byte	0xc32
 9723 0c0d 19       		.uleb128 0x19
 9724 0c0e 6A00     		.ascii	"j\000"
 9725 0c10 01       		.byte	0x1
 9726 0c11 F307     		.2byte	0x7f3
 9727 0c13 94000000 		.4byte	0x94
 9728 0c17 02       		.uleb128 0x2
 9729 0c18 91       		.byte	0x91
 9730 0c19 68       		.sleb128 -24
 9731 0c1a 11       		.uleb128 0x11
 9732 0c1b 94000000 		.4byte	.LBB37
 9733 0c1f 64000000 		.4byte	.LBE37-.LBB37
 9734 0c23 19       		.uleb128 0x19
 9735 0c24 6B00     		.ascii	"k\000"
 9736 0c26 01       		.byte	0x1
 9737 0c27 F507     		.2byte	0x7f5
 9738 0c29 94000000 		.4byte	0x94
 9739 0c2d 02       		.uleb128 0x2
 9740 0c2e 91       		.byte	0x91
 9741 0c2f 64       		.sleb128 -28
 9742 0c30 00       		.byte	0
 9743 0c31 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 215


 9744 0c32 1D       		.uleb128 0x1d
 9745 0c33 D6010000 		.4byte	.LBB38
 9746 0c37 46000000 		.4byte	.LBE38-.LBB38
 9747 0c3b 4F0C0000 		.4byte	0xc4f
 9748 0c3f 17       		.uleb128 0x17
 9749 0c40 E5010000 		.4byte	.LASF128
 9750 0c44 01       		.byte	0x1
 9751 0c45 1508     		.2byte	0x815
 9752 0c47 B8000000 		.4byte	0xb8
 9753 0c4b 02       		.uleb128 0x2
 9754 0c4c 91       		.byte	0x91
 9755 0c4d 52       		.sleb128 -46
 9756 0c4e 00       		.byte	0
 9757 0c4f 11       		.uleb128 0x11
 9758 0c50 06040000 		.4byte	.LBB39
 9759 0c54 54000000 		.4byte	.LBE39-.LBB39
 9760 0c58 17       		.uleb128 0x17
 9761 0c59 E5010000 		.4byte	.LASF128
 9762 0c5d 01       		.byte	0x1
 9763 0c5e 5108     		.2byte	0x851
 9764 0c60 AD000000 		.4byte	0xad
 9765 0c64 02       		.uleb128 0x2
 9766 0c65 91       		.byte	0x91
 9767 0c66 50       		.sleb128 -48
 9768 0c67 00       		.byte	0
 9769 0c68 00       		.byte	0
 9770 0c69 11       		.uleb128 0x11
 9771 0c6a 5C050000 		.4byte	.LBB40
 9772 0c6e 02030000 		.4byte	.LBE40-.LBB40
 9773 0c72 17       		.uleb128 0x17
 9774 0c73 FD010000 		.4byte	.LASF125
 9775 0c77 01       		.byte	0x1
 9776 0c78 AA08     		.2byte	0x8aa
 9777 0c7a 7C020000 		.4byte	0x27c
 9778 0c7e 03       		.uleb128 0x3
 9779 0c7f 91       		.byte	0x91
 9780 0c80 BC7F     		.sleb128 -68
 9781 0c82 19       		.uleb128 0x19
 9782 0c83 6900     		.ascii	"i\000"
 9783 0c85 01       		.byte	0x1
 9784 0c86 AB08     		.2byte	0x8ab
 9785 0c88 CE000000 		.4byte	0xce
 9786 0c8c 02       		.uleb128 0x2
 9787 0c8d 91       		.byte	0x91
 9788 0c8e 60       		.sleb128 -32
 9789 0c8f 17       		.uleb128 0x17
 9790 0c90 70040000 		.4byte	.LASF126
 9791 0c94 01       		.byte	0x1
 9792 0c95 AC08     		.2byte	0x8ac
 9793 0c97 A2000000 		.4byte	0xa2
 9794 0c9b 02       		.uleb128 0x2
 9795 0c9c 91       		.byte	0x91
 9796 0c9d 4F       		.sleb128 -49
 9797 0c9e 1D       		.uleb128 0x1d
 9798 0c9f 8E050000 		.4byte	.LBB41
 9799 0ca3 7C000000 		.4byte	.LBE41-.LBB41
 9800 0ca7 BB0C0000 		.4byte	0xcbb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 216


 9801 0cab 17       		.uleb128 0x17
 9802 0cac 3A0D0000 		.4byte	.LASF129
 9803 0cb0 01       		.byte	0x1
 9804 0cb1 B008     		.2byte	0x8b0
 9805 0cb3 A2000000 		.4byte	0xa2
 9806 0cb7 02       		.uleb128 0x2
 9807 0cb8 91       		.byte	0x91
 9808 0cb9 4E       		.sleb128 -50
 9809 0cba 00       		.byte	0
 9810 0cbb 11       		.uleb128 0x11
 9811 0cbc 1E060000 		.4byte	.LBB42
 9812 0cc0 B0010000 		.4byte	.LBE42-.LBB42
 9813 0cc4 17       		.uleb128 0x17
 9814 0cc5 E10D0000 		.4byte	.LASF130
 9815 0cc9 01       		.byte	0x1
 9816 0cca BB08     		.2byte	0x8bb
 9817 0ccc CE000000 		.4byte	0xce
 9818 0cd0 02       		.uleb128 0x2
 9819 0cd1 91       		.byte	0x91
 9820 0cd2 5C       		.sleb128 -36
 9821 0cd3 11       		.uleb128 0x11
 9822 0cd4 24060000 		.4byte	.LBB43
 9823 0cd8 9C010000 		.4byte	.LBE43-.LBB43
 9824 0cdc 17       		.uleb128 0x17
 9825 0cdd 21040000 		.4byte	.LASF81
 9826 0ce1 01       		.byte	0x1
 9827 0ce2 BD08     		.2byte	0x8bd
 9828 0ce4 B8000000 		.4byte	0xb8
 9829 0ce8 02       		.uleb128 0x2
 9830 0ce9 91       		.byte	0x91
 9831 0cea 4C       		.sleb128 -52
 9832 0ceb 11       		.uleb128 0x11
 9833 0cec 32060000 		.4byte	.LBB44
 9834 0cf0 8E010000 		.4byte	.LBE44-.LBB44
 9835 0cf4 17       		.uleb128 0x17
 9836 0cf5 BD050000 		.4byte	.LASF131
 9837 0cf9 01       		.byte	0x1
 9838 0cfa BE08     		.2byte	0x8be
 9839 0cfc CE000000 		.4byte	0xce
 9840 0d00 02       		.uleb128 0x2
 9841 0d01 91       		.byte	0x91
 9842 0d02 58       		.sleb128 -40
 9843 0d03 11       		.uleb128 0x11
 9844 0d04 8C060000 		.4byte	.LBB45
 9845 0d08 26010000 		.4byte	.LBE45-.LBB45
 9846 0d0c 17       		.uleb128 0x17
 9847 0d0d D4030000 		.4byte	.LASF132
 9848 0d11 01       		.byte	0x1
 9849 0d12 C808     		.2byte	0x8c8
 9850 0d14 B8000000 		.4byte	0xb8
 9851 0d18 02       		.uleb128 0x2
 9852 0d19 91       		.byte	0x91
 9853 0d1a 4A       		.sleb128 -54
 9854 0d1b 17       		.uleb128 0x17
 9855 0d1c 2D0C0000 		.4byte	.LASF133
 9856 0d20 01       		.byte	0x1
 9857 0d21 C908     		.2byte	0x8c9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 217


 9858 0d23 A2000000 		.4byte	0xa2
 9859 0d27 02       		.uleb128 0x2
 9860 0d28 91       		.byte	0x91
 9861 0d29 49       		.sleb128 -55
 9862 0d2a 17       		.uleb128 0x17
 9863 0d2b 21010000 		.4byte	.LASF134
 9864 0d2f 01       		.byte	0x1
 9865 0d30 CA08     		.2byte	0x8ca
 9866 0d32 A2000000 		.4byte	0xa2
 9867 0d36 02       		.uleb128 0x2
 9868 0d37 91       		.byte	0x91
 9869 0d38 48       		.sleb128 -56
 9870 0d39 17       		.uleb128 0x17
 9871 0d3a 59030000 		.4byte	.LASF82
 9872 0d3e 01       		.byte	0x1
 9873 0d3f CD08     		.2byte	0x8cd
 9874 0d41 B8000000 		.4byte	0xb8
 9875 0d45 02       		.uleb128 0x2
 9876 0d46 91       		.byte	0x91
 9877 0d47 46       		.sleb128 -58
 9878 0d48 00       		.byte	0
 9879 0d49 00       		.byte	0
 9880 0d4a 00       		.byte	0
 9881 0d4b 00       		.byte	0
 9882 0d4c 00       		.byte	0
 9883 0d4d 00       		.byte	0
 9884 0d4e 1F       		.uleb128 0x1f
 9885 0d4f 86030000 		.4byte	.LASF135
 9886 0d53 01       		.byte	0x1
 9887 0d54 FA08     		.2byte	0x8fa
 9888 0d56 00000000 		.4byte	.LFB94
 9889 0d5a 3C010000 		.4byte	.LFE94-.LFB94
 9890 0d5e 01       		.uleb128 0x1
 9891 0d5f 9C       		.byte	0x9c
 9892 0d60 9A0D0000 		.4byte	0xd9a
 9893 0d64 18       		.uleb128 0x18
 9894 0d65 CD0A0000 		.4byte	.LASF136
 9895 0d69 01       		.byte	0x1
 9896 0d6a FA08     		.2byte	0x8fa
 9897 0d6c D9000000 		.4byte	0xd9
 9898 0d70 02       		.uleb128 0x2
 9899 0d71 91       		.byte	0x91
 9900 0d72 6F       		.sleb128 -17
 9901 0d73 18       		.uleb128 0x18
 9902 0d74 F00B0000 		.4byte	.LASF137
 9903 0d78 01       		.byte	0x1
 9904 0d79 FA08     		.2byte	0x8fa
 9905 0d7b 9A0D0000 		.4byte	0xd9a
 9906 0d7f 02       		.uleb128 0x2
 9907 0d80 91       		.byte	0x91
 9908 0d81 68       		.sleb128 -24
 9909 0d82 11       		.uleb128 0x11
 9910 0d83 48000000 		.4byte	.LBB46
 9911 0d87 54000000 		.4byte	.LBE46-.LBB46
 9912 0d8b 19       		.uleb128 0x19
 9913 0d8c 6900     		.ascii	"i\000"
 9914 0d8e 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 218


 9915 0d8f 0609     		.2byte	0x906
 9916 0d91 94000000 		.4byte	0x94
 9917 0d95 02       		.uleb128 0x2
 9918 0d96 91       		.byte	0x91
 9919 0d97 74       		.sleb128 -12
 9920 0d98 00       		.byte	0
 9921 0d99 00       		.byte	0
 9922 0d9a 20       		.uleb128 0x20
 9923 0d9b 04       		.byte	0x4
 9924 0d9c D9000000 		.4byte	0xd9
 9925 0da0 07       		.uleb128 0x7
 9926 0da1 D9000000 		.4byte	0xd9
 9927 0da5 B00D0000 		.4byte	0xdb0
 9928 0da9 08       		.uleb128 0x8
 9929 0daa 36010000 		.4byte	0x136
 9930 0dae 01       		.byte	0x1
 9931 0daf 00       		.byte	0
 9932 0db0 21       		.uleb128 0x21
 9933 0db1 D4040000 		.4byte	.LASF138
 9934 0db5 01       		.byte	0x1
 9935 0db6 DB       		.byte	0xdb
 9936 0db7 A00D0000 		.4byte	0xda0
 9937 0dbb 05       		.uleb128 0x5
 9938 0dbc 03       		.byte	0x3
 9939 0dbd 60000000 		.4byte	eepromArray
 9940 0dc1 22       		.uleb128 0x22
 9941 0dc2 3A0E0000 		.4byte	.LASF139
 9942 0dc6 08       		.byte	0x8
 9943 0dc7 F3       		.byte	0xf3
 9944 0dc8 2A010000 		.4byte	0x12a
 9945 0dcc 22       		.uleb128 0x22
 9946 0dcd C40E0000 		.4byte	.LASF140
 9947 0dd1 08       		.byte	0x8
 9948 0dd2 F9       		.byte	0xf9
 9949 0dd3 2A010000 		.4byte	0x12a
 9950 0dd7 07       		.uleb128 0x7
 9951 0dd8 D9000000 		.4byte	0xd9
 9952 0ddc E70D0000 		.4byte	0xde7
 9953 0de0 08       		.uleb128 0x8
 9954 0de1 36010000 		.4byte	0x136
 9955 0de5 3F       		.byte	0x3f
 9956 0de6 00       		.byte	0
 9957 0de7 22       		.uleb128 0x22
 9958 0de8 A0080000 		.4byte	.LASF141
 9959 0dec 08       		.byte	0x8
 9960 0ded FA       		.byte	0xfa
 9961 0dee D70D0000 		.4byte	0xdd7
 9962 0df2 22       		.uleb128 0x22
 9963 0df3 3F050000 		.4byte	.LASF142
 9964 0df7 08       		.byte	0x8
 9965 0df8 FE       		.byte	0xfe
 9966 0df9 2A010000 		.4byte	0x12a
 9967 0dfd 22       		.uleb128 0x22
 9968 0dfe 7F0E0000 		.4byte	.LASF143
 9969 0e02 08       		.byte	0x8
 9970 0e03 FF       		.byte	0xff
 9971 0e04 D70D0000 		.4byte	0xdd7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 219


 9972 0e08 22       		.uleb128 0x22
 9973 0e09 A1000000 		.4byte	.LASF144
 9974 0e0d 09       		.byte	0x9
 9975 0e0e 82       		.byte	0x82
 9976 0e0f BF010000 		.4byte	0x1bf
 9977 0e13 07       		.uleb128 0x7
 9978 0e14 240E0000 		.4byte	0xe24
 9979 0e18 240E0000 		.4byte	0xe24
 9980 0e1c 23       		.uleb128 0x23
 9981 0e1d 36010000 		.4byte	0x136
 9982 0e21 FF03     		.2byte	0x3ff
 9983 0e23 00       		.byte	0
 9984 0e24 24       		.uleb128 0x24
 9985 0e25 A2000000 		.4byte	0xa2
 9986 0e29 25       		.uleb128 0x25
 9987 0e2a C8070000 		.4byte	.LASF145
 9988 0e2e 01       		.byte	0x1
 9989 0e2f E8       		.byte	0xe8
 9990 0e30 3A0E0000 		.4byte	0xe3a
 9991 0e34 05       		.uleb128 0x5
 9992 0e35 03       		.byte	0x3
 9993 0e36 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 9994 0e3a 24       		.uleb128 0x24
 9995 0e3b 130E0000 		.4byte	0xe13
 9996 0e3f 22       		.uleb128 0x22
 9997 0e40 13060000 		.4byte	.LASF146
 9998 0e44 0A       		.byte	0xa
 9999 0e45 F9       		.byte	0xf9
 10000 0e46 D9000000 		.4byte	0xd9
 10001 0e4a 26       		.uleb128 0x26
 10002 0e4b 420A0000 		.4byte	.LASF147
 10003 0e4f 0B       		.byte	0xb
 10004 0e50 1207     		.2byte	0x712
 10005 0e52 560E0000 		.4byte	0xe56
 10006 0e56 06       		.uleb128 0x6
 10007 0e57 C3000000 		.4byte	0xc3
 10008 0e5b 07       		.uleb128 0x7
 10009 0e5c 03020000 		.4byte	0x203
 10010 0e60 6B0E0000 		.4byte	0xe6b
 10011 0e64 08       		.uleb128 0x8
 10012 0e65 36010000 		.4byte	0x136
 10013 0e69 FF       		.byte	0xff
 10014 0e6a 00       		.byte	0
 10015 0e6b 27       		.uleb128 0x27
 10016 0e6c 04010000 		.4byte	.LASF148
 10017 0e70 01       		.byte	0x1
 10018 0e71 5001     		.2byte	0x150
 10019 0e73 7D0E0000 		.4byte	0xe7d
 10020 0e77 05       		.uleb128 0x5
 10021 0e78 03       		.byte	0x3
 10022 0e79 00000000 		.4byte	I2Cbuff1
 10023 0e7d 06       		.uleb128 0x6
 10024 0e7e 5B0E0000 		.4byte	0xe5b
 10025 0e82 07       		.uleb128 0x7
 10026 0e83 A2000000 		.4byte	0xa2
 10027 0e87 930E0000 		.4byte	0xe93
 10028 0e8b 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 220


 10029 0e8c 36010000 		.4byte	0x136
 10030 0e90 FF07     		.2byte	0x7ff
 10031 0e92 00       		.byte	0
 10032 0e93 25       		.uleb128 0x25
 10033 0e94 150D0000 		.4byte	.LASF149
 10034 0e98 01       		.byte	0x1
 10035 0e99 15       		.byte	0x15
 10036 0e9a 820E0000 		.4byte	0xe82
 10037 0e9e 05       		.uleb128 0x5
 10038 0e9f 03       		.byte	0x3
 10039 0ea0 00000000 		.4byte	sysexBuffer
 10040 0ea4 25       		.uleb128 0x25
 10041 0ea5 44030000 		.4byte	.LASF150
 10042 0ea9 01       		.byte	0x1
 10043 0eaa 16       		.byte	0x16
 10044 0eab CE000000 		.4byte	0xce
 10045 0eaf 05       		.uleb128 0x5
 10046 0eb0 03       		.byte	0x3
 10047 0eb1 00000000 		.4byte	sysexPointer
 10048 0eb5 25       		.uleb128 0x25
 10049 0eb6 BE0A0000 		.4byte	.LASF151
 10050 0eba 01       		.byte	0x1
 10051 0ebb 17       		.byte	0x17
 10052 0ebc A2000000 		.4byte	0xa2
 10053 0ec0 05       		.uleb128 0x5
 10054 0ec1 03       		.byte	0x3
 10055 0ec2 00000000 		.4byte	receivingSysex
 10056 0ec6 25       		.uleb128 0x25
 10057 0ec7 2C060000 		.4byte	.LASF152
 10058 0ecb 01       		.byte	0x1
 10059 0ecc 18       		.byte	0x18
 10060 0ecd A2000000 		.4byte	0xa2
 10061 0ed1 05       		.uleb128 0x5
 10062 0ed2 03       		.byte	0x3
 10063 0ed3 00000000 		.4byte	parsingSysex
 10064 0ed7 07       		.uleb128 0x7
 10065 0ed8 03020000 		.4byte	0x203
 10066 0edc E80E0000 		.4byte	0xee8
 10067 0ee0 23       		.uleb128 0x23
 10068 0ee1 36010000 		.4byte	0x136
 10069 0ee5 FF07     		.2byte	0x7ff
 10070 0ee7 00       		.byte	0
 10071 0ee8 25       		.uleb128 0x25
 10072 0ee9 13000000 		.4byte	.LASF153
 10073 0eed 01       		.byte	0x1
 10074 0eee 19       		.byte	0x19
 10075 0eef F90E0000 		.4byte	0xef9
 10076 0ef3 05       		.uleb128 0x5
 10077 0ef4 03       		.byte	0x3
 10078 0ef5 00000000 		.4byte	presetArray
 10079 0ef9 06       		.uleb128 0x6
 10080 0efa D70E0000 		.4byte	0xed7
 10081 0efe 25       		.uleb128 0x25
 10082 0eff 90020000 		.4byte	.LASF154
 10083 0f03 01       		.byte	0x1
 10084 0f04 1A       		.byte	0x1a
 10085 0f05 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 221


 10086 0f09 05       		.uleb128 0x5
 10087 0f0a 03       		.byte	0x3
 10088 0f0b 00000000 		.4byte	presetNumberToWrite
 10089 0f0f 25       		.uleb128 0x25
 10090 0f10 8A0C0000 		.4byte	.LASF155
 10091 0f14 01       		.byte	0x1
 10092 0f15 1B       		.byte	0x1b
 10093 0f16 A2000000 		.4byte	0xa2
 10094 0f1a 05       		.uleb128 0x5
 10095 0f1b 03       		.byte	0x3
 10096 0f1c 00000000 		.4byte	copedentNumberToWrite
 10097 0f20 25       		.uleb128 0x25
 10098 0f21 35020000 		.4byte	.LASF156
 10099 0f25 01       		.byte	0x1
 10100 0f26 1C       		.byte	0x1c
 10101 0f27 A2000000 		.4byte	0xa2
 10102 0f2b 05       		.uleb128 0x5
 10103 0f2c 03       		.byte	0x3
 10104 0f2d 00000000 		.4byte	sendMessageEnd
 10105 0f31 25       		.uleb128 0x25
 10106 0f32 00000000 		.4byte	.LASF157
 10107 0f36 01       		.byte	0x1
 10108 0f37 26       		.byte	0x26
 10109 0f38 A2000000 		.4byte	0xa2
 10110 0f3c 05       		.uleb128 0x5
 10111 0f3d 03       		.byte	0x3
 10112 0f3e 00000000 		.4byte	presetArraySection
 10113 0f42 25       		.uleb128 0x25
 10114 0f43 92090000 		.4byte	.LASF158
 10115 0f47 01       		.byte	0x1
 10116 0f48 28       		.byte	0x28
 10117 0f49 B8000000 		.4byte	0xb8
 10118 0f4d 05       		.uleb128 0x5
 10119 0f4e 03       		.byte	0x3
 10120 0f4f 00000000 		.4byte	messageArraySendCount
 10121 0f53 25       		.uleb128 0x25
 10122 0f54 990D0000 		.4byte	.LASF159
 10123 0f58 01       		.byte	0x1
 10124 0f59 29       		.byte	0x29
 10125 0f5a B8000000 		.4byte	0xb8
 10126 0f5e 05       		.uleb128 0x5
 10127 0f5f 03       		.byte	0x3
 10128 0f60 00000000 		.4byte	messageArraySize
 10129 0f64 25       		.uleb128 0x25
 10130 0f65 96060000 		.4byte	.LASF160
 10131 0f69 01       		.byte	0x1
 10132 0f6a 2B       		.byte	0x2b
 10133 0f6b A2000000 		.4byte	0xa2
 10134 0f6f 05       		.uleb128 0x5
 10135 0f70 03       		.byte	0x3
 10136 0f71 00000000 		.4byte	sysexMessageInProgress
 10137 0f75 25       		.uleb128 0x25
 10138 0f76 210D0000 		.4byte	.LASF161
 10139 0f7a 01       		.byte	0x1
 10140 0f7b 2D       		.byte	0x2d
 10141 0f7c A2000000 		.4byte	0xa2
 10142 0f80 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 222


 10143 0f81 03       		.byte	0x3
 10144 0f82 00000000 		.4byte	bufCount
 10145 0f86 25       		.uleb128 0x25
 10146 0f87 33000000 		.4byte	.LASF162
 10147 0f8b 01       		.byte	0x1
 10148 0f8c 2E       		.byte	0x2e
 10149 0f8d 03020000 		.4byte	0x203
 10150 0f91 05       		.uleb128 0x5
 10151 0f92 03       		.byte	0x3
 10152 0f93 00000000 		.4byte	sendingMessage
 10153 0f97 25       		.uleb128 0x25
 10154 0f98 1C030000 		.4byte	.LASF163
 10155 0f9c 01       		.byte	0x1
 10156 0f9d 2F       		.byte	0x2f
 10157 0f9e 03020000 		.4byte	0x203
 10158 0fa2 05       		.uleb128 0x5
 10159 0fa3 03       		.byte	0x3
 10160 0fa4 00000000 		.4byte	sendKnobs
 10161 0fa8 25       		.uleb128 0x25
 10162 0fa9 6E020000 		.4byte	.LASF164
 10163 0fad 01       		.byte	0x1
 10164 0fae 30       		.byte	0x30
 10165 0faf CE000000 		.4byte	0xce
 10166 0fb3 05       		.uleb128 0x5
 10167 0fb4 03       		.byte	0x3
 10168 0fb5 00000000 		.4byte	currentFloat
 10169 0fb9 25       		.uleb128 0x25
 10170 0fba CB030000 		.4byte	.LASF165
 10171 0fbe 01       		.byte	0x1
 10172 0fbf 31       		.byte	0x31
 10173 0fc0 CE000000 		.4byte	0xce
 10174 0fc4 05       		.uleb128 0x5
 10175 0fc5 03       		.byte	0x3
 10176 0fc6 00000000 		.4byte	mapCount
 10177 0fca 25       		.uleb128 0x25
 10178 0fcb 94010000 		.4byte	.LASF166
 10179 0fcf 01       		.byte	0x1
 10180 0fd0 33       		.byte	0x33
 10181 0fd1 B8000000 		.4byte	0xb8
 10182 0fd5 05       		.uleb128 0x5
 10183 0fd6 03       		.byte	0x3
 10184 0fd7 00000000 		.4byte	valsCount
 10185 0fdb 25       		.uleb128 0x25
 10186 0fdc 54040000 		.4byte	.LASF167
 10187 0fe0 01       		.byte	0x1
 10188 0fe1 34       		.byte	0x34
 10189 0fe2 B8000000 		.4byte	0xb8
 10190 0fe6 05       		.uleb128 0x5
 10191 0fe7 03       		.byte	0x3
 10192 0fe8 00000000 		.4byte	mapCountExpectation
 10193 0fec 25       		.uleb128 0x25
 10194 0fed F8000000 		.4byte	.LASF168
 10195 0ff1 01       		.byte	0x1
 10196 0ff2 35       		.byte	0x35
 10197 0ff3 B8000000 		.4byte	0xb8
 10198 0ff7 05       		.uleb128 0x5
 10199 0ff8 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 223


 10200 0ff9 00000000 		.4byte	numMappings
 10201 0ffd 25       		.uleb128 0x25
 10202 0ffe DD0C0000 		.4byte	.LASF169
 10203 1002 01       		.byte	0x1
 10204 1003 36       		.byte	0x36
 10205 1004 03020000 		.4byte	0x203
 10206 1008 05       		.uleb128 0x5
 10207 1009 03       		.byte	0x3
 10208 100a 00000000 		.4byte	parseThatMF
 10209 100e 25       		.uleb128 0x25
 10210 100f FD030000 		.4byte	.LASF170
 10211 1013 01       		.byte	0x1
 10212 1014 37       		.byte	0x37
 10213 1015 1F100000 		.4byte	0x101f
 10214 1019 05       		.uleb128 0x5
 10215 101a 03       		.byte	0x3
 10216 101b 00000000 		.4byte	valCheck
 10217 101f 06       		.uleb128 0x6
 10218 1020 FD000000 		.4byte	0xfd
 10219 1024 25       		.uleb128 0x25
 10220 1025 360C0000 		.4byte	.LASF171
 10221 1029 01       		.byte	0x1
 10222 102a 38       		.byte	0x38
 10223 102b 1F100000 		.4byte	0x101f
 10224 102f 05       		.uleb128 0x5
 10225 1030 03       		.byte	0x3
 10226 1031 00000000 		.4byte	testVal
 10227 1035 25       		.uleb128 0x25
 10228 1036 46080000 		.4byte	.LASF172
 10229 103a 01       		.byte	0x1
 10230 103b 3A       		.byte	0x3a
 10231 103c 94000000 		.4byte	0x94
 10232 1040 05       		.uleb128 0x5
 10233 1041 03       		.byte	0x3
 10234 1042 00000000 		.4byte	numStrings
 10235 1046 25       		.uleb128 0x25
 10236 1047 C10C0000 		.4byte	.LASF173
 10237 104b 01       		.byte	0x1
 10238 104c 40       		.byte	0x40
 10239 104d 2A010000 		.4byte	0x12a
 10240 1051 05       		.uleb128 0x5
 10241 1052 03       		.byte	0x3
 10242 1053 00000000 		.4byte	usbActivityCounter
 10243 1057 25       		.uleb128 0x25
 10244 1058 F00B0000 		.4byte	.LASF137
 10245 105c 01       		.byte	0x1
 10246 105d 41       		.byte	0x41
 10247 105e 3D010000 		.4byte	0x13d
 10248 1062 05       		.uleb128 0x5
 10249 1063 03       		.byte	0x3
 10250 1064 00000000 		.4byte	midiMsg
 10251 1068 25       		.uleb128 0x25
 10252 1069 080F0000 		.4byte	.LASF174
 10253 106d 01       		.byte	0x1
 10254 106e 42       		.byte	0x42
 10255 106f A2000000 		.4byte	0xa2
 10256 1073 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 224


 10257 1074 03       		.byte	0x3
 10258 1075 00000000 		.4byte	currentVBUS
 10259 1079 25       		.uleb128 0x25
 10260 107a F90E0000 		.4byte	.LASF175
 10261 107e 01       		.byte	0x1
 10262 107f 43       		.byte	0x43
 10263 1080 A2000000 		.4byte	0xa2
 10264 1084 05       		.uleb128 0x5
 10265 1085 03       		.byte	0x3
 10266 1086 00000000 		.4byte	prevVBUS
 10267 108a 25       		.uleb128 0x25
 10268 108b FF0C0000 		.4byte	.LASF176
 10269 108f 01       		.byte	0x1
 10270 1090 44       		.byte	0x44
 10271 1091 03020000 		.4byte	0x203
 10272 1095 05       		.uleb128 0x5
 10273 1096 03       		.byte	0x3
 10274 1097 00000000 		.4byte	USB_active
 10275 109b 25       		.uleb128 0x25
 10276 109c 83090000 		.4byte	.LASF177
 10277 10a0 01       		.byte	0x1
 10278 10a1 45       		.byte	0x45
 10279 10a2 03020000 		.4byte	0x203
 10280 10a6 05       		.uleb128 0x5
 10281 10a7 03       		.byte	0x3
 10282 10a8 00000000 		.4byte	USB_check_flag
 10283 10ac 07       		.uleb128 0x7
 10284 10ad D9000000 		.4byte	0xd9
 10285 10b1 BC100000 		.4byte	0x10bc
 10286 10b5 08       		.uleb128 0x8
 10287 10b6 36010000 		.4byte	0x136
 10288 10ba 1F       		.byte	0x1f
 10289 10bb 00       		.byte	0
 10290 10bc 25       		.uleb128 0x25
 10291 10bd 640E0000 		.4byte	.LASF178
 10292 10c1 01       		.byte	0x1
 10293 10c2 48       		.byte	0x48
 10294 10c3 AC100000 		.4byte	0x10ac
 10295 10c7 05       		.uleb128 0x5
 10296 10c8 03       		.byte	0x3
 10297 10c9 00000000 		.4byte	inBuffer
 10298 10cd 25       		.uleb128 0x25
 10299 10ce D90F0000 		.4byte	.LASF179
 10300 10d2 01       		.byte	0x1
 10301 10d3 4A       		.byte	0x4a
 10302 10d4 AC100000 		.4byte	0x10ac
 10303 10d8 05       		.uleb128 0x5
 10304 10d9 03       		.byte	0x3
 10305 10da 00000000 		.4byte	myArray
 10306 10de 25       		.uleb128 0x25
 10307 10df 770F0000 		.4byte	.LASF180
 10308 10e3 01       		.byte	0x1
 10309 10e4 4B       		.byte	0x4b
 10310 10e5 A00D0000 		.4byte	0xda0
 10311 10e9 05       		.uleb128 0x5
 10312 10ea 03       		.byte	0x3
 10313 10eb 00000000 		.4byte	myInputArray
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 225


 10314 10ef 07       		.uleb128 0x7
 10315 10f0 C3000000 		.4byte	0xc3
 10316 10f4 FF100000 		.4byte	0x10ff
 10317 10f8 08       		.uleb128 0x8
 10318 10f9 36010000 		.4byte	0x136
 10319 10fd 01       		.byte	0x1
 10320 10fe 00       		.byte	0
 10321 10ff 25       		.uleb128 0x25
 10322 1100 0C080000 		.4byte	.LASF181
 10323 1104 01       		.byte	0x1
 10324 1105 4C       		.byte	0x4c
 10325 1106 EF100000 		.4byte	0x10ef
 10326 110a 05       		.uleb128 0x5
 10327 110b 03       		.byte	0x3
 10328 110c 00000000 		.4byte	linearPotValue32Bit
 10329 1110 28       		.uleb128 0x28
 10330 1111 6900     		.ascii	"i\000"
 10331 1113 01       		.byte	0x1
 10332 1114 4D       		.byte	0x4d
 10333 1115 A2000000 		.4byte	0xa2
 10334 1119 05       		.uleb128 0x5
 10335 111a 03       		.byte	0x3
 10336 111b 00000000 		.4byte	i
 10337 111f 25       		.uleb128 0x25
 10338 1120 C1090000 		.4byte	.LASF182
 10339 1124 01       		.byte	0x1
 10340 1125 4E       		.byte	0x4e
 10341 1126 A2000000 		.4byte	0xa2
 10342 112a 05       		.uleb128 0x5
 10343 112b 03       		.byte	0x3
 10344 112c 00000000 		.4byte	counter
 10345 1130 07       		.uleb128 0x7
 10346 1131 A2000000 		.4byte	0xa2
 10347 1135 40110000 		.4byte	0x1140
 10348 1139 08       		.uleb128 0x8
 10349 113a 36010000 		.4byte	0x136
 10350 113e 1F       		.byte	0x1f
 10351 113f 00       		.byte	0
 10352 1140 25       		.uleb128 0x25
 10353 1141 39060000 		.4byte	.LASF183
 10354 1145 01       		.byte	0x1
 10355 1146 4F       		.byte	0x4f
 10356 1147 30110000 		.4byte	0x1130
 10357 114b 05       		.uleb128 0x5
 10358 114c 03       		.byte	0x3
 10359 114d 00000000 		.4byte	returnedData
 10360 1151 25       		.uleb128 0x25
 10361 1152 9E010000 		.4byte	.LASF184
 10362 1156 01       		.byte	0x1
 10363 1157 50       		.byte	0x50
 10364 1158 C3000000 		.4byte	0xc3
 10365 115c 05       		.uleb128 0x5
 10366 115d 03       		.byte	0x3
 10367 115e 00000000 		.4byte	temper
 10368 1162 07       		.uleb128 0x7
 10369 1163 94000000 		.4byte	0x94
 10370 1167 72110000 		.4byte	0x1172
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 226


 10371 116b 08       		.uleb128 0x8
 10372 116c 36010000 		.4byte	0x136
 10373 1170 0A       		.byte	0xa
 10374 1171 00       		.byte	0
 10375 1172 25       		.uleb128 0x25
 10376 1173 170E0000 		.4byte	.LASF185
 10377 1177 01       		.byte	0x1
 10378 1178 51       		.byte	0x51
 10379 1179 62110000 		.4byte	0x1162
 10380 117d 05       		.uleb128 0x5
 10381 117e 03       		.byte	0x3
 10382 117f 00000000 		.4byte	previousButtons
 10383 1183 25       		.uleb128 0x25
 10384 1184 2F010000 		.4byte	.LASF186
 10385 1188 01       		.byte	0x1
 10386 1189 52       		.byte	0x52
 10387 118a 94000000 		.4byte	0x94
 10388 118e 05       		.uleb128 0x5
 10389 118f 03       		.byte	0x3
 10390 1190 00000000 		.4byte	octave
 10391 1194 07       		.uleb128 0x7
 10392 1195 B8000000 		.4byte	0xb8
 10393 1199 A4110000 		.4byte	0x11a4
 10394 119d 08       		.uleb128 0x8
 10395 119e 36010000 		.4byte	0x136
 10396 11a2 09       		.byte	0x9
 10397 11a3 00       		.byte	0
 10398 11a4 25       		.uleb128 0x25
 10399 11a5 40080000 		.4byte	.LASF187
 10400 11a9 01       		.byte	0x1
 10401 11aa 53       		.byte	0x53
 10402 11ab 94110000 		.4byte	0x1194
 10403 11af 05       		.uleb128 0x5
 10404 11b0 03       		.byte	0x3
 10405 11b1 00000000 		.4byte	angle
 10406 11b5 25       		.uleb128 0x25
 10407 11b6 760B0000 		.4byte	.LASF188
 10408 11ba 01       		.byte	0x1
 10409 11bb 54       		.byte	0x54
 10410 11bc 94110000 		.4byte	0x1194
 10411 11c0 05       		.uleb128 0x5
 10412 11c1 03       		.byte	0x3
 10413 11c2 00000000 		.4byte	prevAngle
 10414 11c6 07       		.uleb128 0x7
 10415 11c7 B8000000 		.4byte	0xb8
 10416 11cb D6110000 		.4byte	0x11d6
 10417 11cf 08       		.uleb128 0x8
 10418 11d0 36010000 		.4byte	0x136
 10419 11d4 03       		.byte	0x3
 10420 11d5 00       		.byte	0
 10421 11d6 25       		.uleb128 0x25
 10422 11d7 C00B0000 		.4byte	.LASF189
 10423 11db 01       		.byte	0x1
 10424 11dc 56       		.byte	0x56
 10425 11dd C6110000 		.4byte	0x11c6
 10426 11e1 05       		.uleb128 0x5
 10427 11e2 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 227


 10428 11e3 00000000 		.4byte	ADC_values
 10429 11e7 25       		.uleb128 0x25
 10430 11e8 F0040000 		.4byte	.LASF190
 10431 11ec 01       		.byte	0x1
 10432 11ed 57       		.byte	0x57
 10433 11ee B8000000 		.4byte	0xb8
 10434 11f2 05       		.uleb128 0x5
 10435 11f3 03       		.byte	0x3
 10436 11f4 00000000 		.4byte	rawAngle
 10437 11f8 25       		.uleb128 0x25
 10438 11f9 E70B0000 		.4byte	.LASF191
 10439 11fd 01       		.byte	0x1
 10440 11fe 58       		.byte	0x58
 10441 11ff B8000000 		.4byte	0xb8
 10442 1203 05       		.uleb128 0x5
 10443 1204 03       		.byte	0x3
 10444 1205 00000000 		.4byte	midiSent
 10445 1209 25       		.uleb128 0x25
 10446 120a 7A050000 		.4byte	.LASF192
 10447 120e 01       		.byte	0x1
 10448 120f 59       		.byte	0x59
 10449 1210 B8000000 		.4byte	0xb8
 10450 1214 05       		.uleb128 0x5
 10451 1215 03       		.byte	0x3
 10452 1216 00000000 		.4byte	midiOverflow
 10453 121a 07       		.uleb128 0x7
 10454 121b A2000000 		.4byte	0xa2
 10455 121f 2A120000 		.4byte	0x122a
 10456 1223 08       		.uleb128 0x8
 10457 1224 36010000 		.4byte	0x136
 10458 1228 07       		.byte	0x7
 10459 1229 00       		.byte	0
 10460 122a 25       		.uleb128 0x25
 10461 122b 910E0000 		.4byte	.LASF193
 10462 122f 01       		.byte	0x1
 10463 1230 5B       		.byte	0x5b
 10464 1231 1A120000 		.4byte	0x121a
 10465 1235 05       		.uleb128 0x5
 10466 1236 03       		.byte	0x3
 10467 1237 00000000 		.4byte	macroKnobValues
 10468 123b 25       		.uleb128 0x25
 10469 123c E0040000 		.4byte	.LASF194
 10470 1240 01       		.byte	0x1
 10471 1241 5D       		.byte	0x5d
 10472 1242 A2000000 		.4byte	0xa2
 10473 1246 05       		.uleb128 0x5
 10474 1247 03       		.byte	0x3
 10475 1248 00000000 		.4byte	currentCopedent
 10476 124c 07       		.uleb128 0x7
 10477 124d A2000000 		.4byte	0xa2
 10478 1251 5C120000 		.4byte	0x125c
 10479 1255 08       		.uleb128 0x8
 10480 1256 36010000 		.4byte	0x136
 10481 125a 01       		.byte	0x1
 10482 125b 00       		.byte	0
 10483 125c 25       		.uleb128 0x25
 10484 125d 29010000 		.4byte	.LASF195
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 228


 10485 1261 01       		.byte	0x1
 10486 1262 5E       		.byte	0x5e
 10487 1263 4C120000 		.4byte	0x124c
 10488 1267 05       		.uleb128 0x5
 10489 1268 03       		.byte	0x3
 10490 1269 00000000 		.4byte	necks
 10491 126d 25       		.uleb128 0x25
 10492 126e 16040000 		.4byte	.LASF196
 10493 1272 01       		.byte	0x1
 10494 1273 7D       		.byte	0x7d
 10495 1274 D9000000 		.4byte	0xd9
 10496 1278 05       		.uleb128 0x5
 10497 1279 03       		.byte	0x3
 10498 127a 00000000 		.4byte	rx1Channel
 10499 127e 25       		.uleb128 0x25
 10500 127f B90E0000 		.4byte	.LASF197
 10501 1283 01       		.byte	0x1
 10502 1284 7D       		.byte	0x7d
 10503 1285 D9000000 		.4byte	0xd9
 10504 1289 05       		.uleb128 0x5
 10505 128a 03       		.byte	0x3
 10506 128b 00000000 		.4byte	rx2Channel
 10507 128f 25       		.uleb128 0x25
 10508 1290 D5090000 		.4byte	.LASF198
 10509 1294 01       		.byte	0x1
 10510 1295 7E       		.byte	0x7e
 10511 1296 A00D0000 		.4byte	0xda0
 10512 129a 05       		.uleb128 0x5
 10513 129b 03       		.byte	0x3
 10514 129c 00000000 		.4byte	rx1TD
 10515 12a0 25       		.uleb128 0x25
 10516 12a1 3E0C0000 		.4byte	.LASF199
 10517 12a5 01       		.byte	0x1
 10518 12a6 7E       		.byte	0x7e
 10519 12a7 A00D0000 		.4byte	0xda0
 10520 12ab 05       		.uleb128 0x5
 10521 12ac 03       		.byte	0x3
 10522 12ad 00000000 		.4byte	rx2TD
 10523 12b1 25       		.uleb128 0x25
 10524 12b2 450B0000 		.4byte	.LASF200
 10525 12b6 01       		.byte	0x1
 10526 12b7 80       		.byte	0x80
 10527 12b8 2A010000 		.4byte	0x12a
 10528 12bc 05       		.uleb128 0x5
 10529 12bd 03       		.byte	0x3
 10530 12be 00000000 		.4byte	txChannel
 10531 12c2 25       		.uleb128 0x25
 10532 12c3 600F0000 		.4byte	.LASF201
 10533 12c7 01       		.byte	0x1
 10534 12c8 81       		.byte	0x81
 10535 12c9 2A010000 		.4byte	0x12a
 10536 12cd 05       		.uleb128 0x5
 10537 12ce 03       		.byte	0x3
 10538 12cf 00000000 		.4byte	txTD
 10539 12d3 25       		.uleb128 0x25
 10540 12d4 120A0000 		.4byte	.LASF202
 10541 12d8 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 229


 10542 12d9 83       		.byte	0x83
 10543 12da 2A010000 		.4byte	0x12a
 10544 12de 05       		.uleb128 0x5
 10545 12df 03       		.byte	0x3
 10546 12e0 00000000 		.4byte	rx3Channel
 10547 12e4 25       		.uleb128 0x25
 10548 12e5 020F0000 		.4byte	.LASF203
 10549 12e9 01       		.byte	0x1
 10550 12ea 84       		.byte	0x84
 10551 12eb 2A010000 		.4byte	0x12a
 10552 12ef 05       		.uleb128 0x5
 10553 12f0 03       		.byte	0x3
 10554 12f1 00000000 		.4byte	rx3TD
 10555 12f5 07       		.uleb128 0x7
 10556 12f6 2A010000 		.4byte	0x12a
 10557 12fa 0B130000 		.4byte	0x130b
 10558 12fe 08       		.uleb128 0x8
 10559 12ff 36010000 		.4byte	0x136
 10560 1303 01       		.byte	0x1
 10561 1304 08       		.uleb128 0x8
 10562 1305 36010000 		.4byte	0x136
 10563 1309 19       		.byte	0x19
 10564 130a 00       		.byte	0
 10565 130b 25       		.uleb128 0x25
 10566 130c 5D060000 		.4byte	.LASF204
 10567 1310 01       		.byte	0x1
 10568 1311 87       		.byte	0x87
 10569 1312 1C130000 		.4byte	0x131c
 10570 1316 05       		.uleb128 0x5
 10571 1317 03       		.byte	0x3
 10572 1318 00000000 		.4byte	rxBufferPluck
 10573 131c 06       		.uleb128 0x6
 10574 131d F5120000 		.4byte	0x12f5
 10575 1321 07       		.uleb128 0x7
 10576 1322 2A010000 		.4byte	0x12a
 10577 1326 37130000 		.4byte	0x1337
 10578 132a 08       		.uleb128 0x8
 10579 132b 36010000 		.4byte	0x136
 10580 132f 01       		.byte	0x1
 10581 1330 08       		.uleb128 0x8
 10582 1331 36010000 		.4byte	0x136
 10583 1335 07       		.byte	0x7
 10584 1336 00       		.byte	0
 10585 1337 25       		.uleb128 0x25
 10586 1338 390B0000 		.4byte	.LASF205
 10587 133c 01       		.byte	0x1
 10588 133d 88       		.byte	0x88
 10589 133e 48130000 		.4byte	0x1348
 10590 1342 05       		.uleb128 0x5
 10591 1343 03       		.byte	0x3
 10592 1344 00000000 		.4byte	rxBufferBar
 10593 1348 06       		.uleb128 0x6
 10594 1349 21130000 		.4byte	0x1321
 10595 134d 07       		.uleb128 0x7
 10596 134e 08020000 		.4byte	0x208
 10597 1352 5D130000 		.4byte	0x135d
 10598 1356 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 230


 10599 1357 36010000 		.4byte	0x136
 10600 135b 0B       		.byte	0xb
 10601 135c 00       		.byte	0
 10602 135d 25       		.uleb128 0x25
 10603 135e 5D020000 		.4byte	.LASF206
 10604 1362 01       		.byte	0x1
 10605 1363 8A       		.byte	0x8a
 10606 1364 6E130000 		.4byte	0x136e
 10607 1368 05       		.uleb128 0x5
 10608 1369 03       		.byte	0x3
 10609 136a 00000000 		.4byte	strings
 10610 136e 06       		.uleb128 0x6
 10611 136f 4D130000 		.4byte	0x134d
 10612 1373 25       		.uleb128 0x25
 10613 1374 C3040000 		.4byte	.LASF207
 10614 1378 01       		.byte	0x1
 10615 1379 8B       		.byte	0x8b
 10616 137a 84130000 		.4byte	0x1384
 10617 137e 05       		.uleb128 0x5
 10618 137f 03       		.byte	0x3
 10619 1380 00000000 		.4byte	prevStrings
 10620 1384 06       		.uleb128 0x6
 10621 1385 4D130000 		.4byte	0x134d
 10622 1389 07       		.uleb128 0x7
 10623 138a 08020000 		.4byte	0x208
 10624 138e 99130000 		.4byte	0x1399
 10625 1392 08       		.uleb128 0x8
 10626 1393 36010000 		.4byte	0x136
 10627 1397 01       		.byte	0x1
 10628 1398 00       		.byte	0
 10629 1399 28       		.uleb128 0x28
 10630 139a 62617200 		.ascii	"bar\000"
 10631 139e 01       		.byte	0x1
 10632 139f 8C       		.byte	0x8c
 10633 13a0 AA130000 		.4byte	0x13aa
 10634 13a4 05       		.uleb128 0x5
 10635 13a5 03       		.byte	0x3
 10636 13a6 00000000 		.4byte	bar
 10637 13aa 06       		.uleb128 0x6
 10638 13ab 89130000 		.4byte	0x1389
 10639 13af 25       		.uleb128 0x25
 10640 13b0 6F0F0000 		.4byte	.LASF208
 10641 13b4 01       		.byte	0x1
 10642 13b5 8D       		.byte	0x8d
 10643 13b6 C0130000 		.4byte	0x13c0
 10644 13ba 05       		.uleb128 0x5
 10645 13bb 03       		.byte	0x3
 10646 13bc 00000000 		.4byte	prevBar
 10647 13c0 06       		.uleb128 0x6
 10648 13c1 89130000 		.4byte	0x1389
 10649 13c5 25       		.uleb128 0x25
 10650 13c6 6D0E0000 		.4byte	.LASF209
 10651 13ca 01       		.byte	0x1
 10652 13cb 8E       		.byte	0x8e
 10653 13cc D6130000 		.4byte	0x13d6
 10654 13d0 05       		.uleb128 0x5
 10655 13d1 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 231


 10656 13d2 00000000 		.4byte	maxStrings
 10657 13d6 06       		.uleb128 0x6
 10658 13d7 4D130000 		.4byte	0x134d
 10659 13db 25       		.uleb128 0x25
 10660 13dc 6D0C0000 		.4byte	.LASF210
 10661 13e0 01       		.byte	0x1
 10662 13e1 8F       		.byte	0x8f
 10663 13e2 03020000 		.4byte	0x203
 10664 13e6 05       		.uleb128 0x5
 10665 13e7 03       		.byte	0x3
 10666 13e8 00000000 		.4byte	amHere
 10667 13ec 25       		.uleb128 0x25
 10668 13ed E0050000 		.4byte	.LASF211
 10669 13f1 01       		.byte	0x1
 10670 13f2 90       		.byte	0x90
 10671 13f3 03020000 		.4byte	0x203
 10672 13f7 05       		.uleb128 0x5
 10673 13f8 03       		.byte	0x3
 10674 13f9 00000000 		.4byte	spiCounter
 10675 13fd 25       		.uleb128 0x25
 10676 13fe 2F040000 		.4byte	.LASF212
 10677 1402 01       		.byte	0x1
 10678 1403 91       		.byte	0x91
 10679 1404 03020000 		.4byte	0x203
 10680 1408 05       		.uleb128 0x5
 10681 1409 03       		.byte	0x3
 10682 140a 00000000 		.4byte	newDataFlag
 10683 140e 25       		.uleb128 0x25
 10684 140f 840D0000 		.4byte	.LASF213
 10685 1413 01       		.byte	0x1
 10686 1414 92       		.byte	0x92
 10687 1415 94000000 		.4byte	0x94
 10688 1419 05       		.uleb128 0x5
 10689 141a 03       		.byte	0x3
 10690 141b 00000000 		.4byte	prevOctave
 10691 141f 25       		.uleb128 0x25
 10692 1420 800B0000 		.4byte	.LASF214
 10693 1424 01       		.byte	0x1
 10694 1425 93       		.byte	0x93
 10695 1426 A2000000 		.4byte	0xa2
 10696 142a 05       		.uleb128 0x5
 10697 142b 03       		.byte	0x3
 10698 142c 00000000 		.4byte	pluck_index
 10699 1430 25       		.uleb128 0x25
 10700 1431 F90D0000 		.4byte	.LASF215
 10701 1435 01       		.byte	0x1
 10702 1436 94       		.byte	0x94
 10703 1437 03020000 		.4byte	0x203
 10704 143b 05       		.uleb128 0x5
 10705 143c 03       		.byte	0x3
 10706 143d 00000000 		.4byte	amHere2
 10707 1441 25       		.uleb128 0x25
 10708 1442 AD0C0000 		.4byte	.LASF216
 10709 1446 01       		.byte	0x1
 10710 1447 95       		.byte	0x95
 10711 1448 03020000 		.4byte	0x203
 10712 144c 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 232


 10713 144d 03       		.byte	0x3
 10714 144e 00000000 		.4byte	spiCounter2
 10715 1452 25       		.uleb128 0x25
 10716 1453 67000000 		.4byte	.LASF217
 10717 1457 01       		.byte	0x1
 10718 1458 96       		.byte	0x96
 10719 1459 03020000 		.4byte	0x203
 10720 145d 05       		.uleb128 0x5
 10721 145e 03       		.byte	0x3
 10722 145f 00000000 		.4byte	newDataFlag2
 10723 1463 25       		.uleb128 0x25
 10724 1464 850A0000 		.4byte	.LASF218
 10725 1468 01       		.byte	0x1
 10726 1469 97       		.byte	0x97
 10727 146a 03020000 		.4byte	0x203
 10728 146e 05       		.uleb128 0x5
 10729 146f 03       		.byte	0x3
 10730 1470 00000000 		.4byte	currentPluckBuffer
 10731 1474 25       		.uleb128 0x25
 10732 1475 AF0B0000 		.4byte	.LASF219
 10733 1479 01       		.byte	0x1
 10734 147a 98       		.byte	0x98
 10735 147b 03020000 		.4byte	0x203
 10736 147f 05       		.uleb128 0x5
 10737 1480 03       		.byte	0x3
 10738 1481 00000000 		.4byte	currentBarBuffer
 10739 1485 25       		.uleb128 0x25
 10740 1486 2A0D0000 		.4byte	.LASF220
 10741 148a 01       		.byte	0x1
 10742 148b 99       		.byte	0x99
 10743 148c 03020000 		.4byte	0x203
 10744 1490 05       		.uleb128 0x5
 10745 1491 03       		.byte	0x3
 10746 1492 00000000 		.4byte	pluckErrorCount
 10747 1496 25       		.uleb128 0x25
 10748 1497 D80B0000 		.4byte	.LASF221
 10749 149b 01       		.byte	0x1
 10750 149c 9A       		.byte	0x9a
 10751 149d 08020000 		.4byte	0x208
 10752 14a1 05       		.uleb128 0x5
 10753 14a2 03       		.byte	0x3
 10754 14a3 00000000 		.4byte	SPI1ErrorCount
 10755 14a7 25       		.uleb128 0x25
 10756 14a8 57070000 		.4byte	.LASF222
 10757 14ac 01       		.byte	0x1
 10758 14ad 9E       		.byte	0x9e
 10759 14ae 03020000 		.4byte	0x203
 10760 14b2 05       		.uleb128 0x5
 10761 14b3 03       		.byte	0x3
 10762 14b4 00000000 		.4byte	inputData
 10763 14b8 25       		.uleb128 0x25
 10764 14b9 AD0E0000 		.4byte	.LASF223
 10765 14bd 01       		.byte	0x1
 10766 14be C1       		.byte	0xc1
 10767 14bf A2000000 		.4byte	0xa2
 10768 14c3 05       		.uleb128 0x5
 10769 14c4 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 233


 10770 14c5 00000000 		.4byte	spiAdjusted
 10771 14c9 25       		.uleb128 0x25
 10772 14ca 89060000 		.4byte	.LASF224
 10773 14ce 01       		.byte	0x1
 10774 14cf C2       		.byte	0xc2
 10775 14d0 A2000000 		.4byte	0xa2
 10776 14d4 05       		.uleb128 0x5
 10777 14d5 03       		.byte	0x3
 10778 14d6 00000000 		.4byte	mySpiCounter
 10779 14da 25       		.uleb128 0x25
 10780 14db 090B0000 		.4byte	.LASF225
 10781 14df 01       		.byte	0x1
 10782 14e0 C3       		.byte	0xc3
 10783 14e1 08020000 		.4byte	0x208
 10784 14e5 05       		.uleb128 0x5
 10785 14e6 03       		.byte	0x3
 10786 14e7 00000000 		.4byte	offsetErrorCount
 10787 14eb 25       		.uleb128 0x25
 10788 14ec C7000000 		.4byte	.LASF226
 10789 14f0 01       		.byte	0x1
 10790 14f1 C4       		.byte	0xc4
 10791 14f2 03020000 		.4byte	0x203
 10792 14f6 05       		.uleb128 0x5
 10793 14f7 03       		.byte	0x3
 10794 14f8 00000000 		.4byte	SPI2errorflag
 10795 14fc 25       		.uleb128 0x25
 10796 14fd FF0A0000 		.4byte	.LASF227
 10797 1501 01       		.byte	0x1
 10798 1502 C5       		.byte	0xc5
 10799 1503 0D150000 		.4byte	0x150d
 10800 1507 05       		.uleb128 0x5
 10801 1508 03       		.byte	0x3
 10802 1509 00000000 		.4byte	bar_index
 10803 150d 06       		.uleb128 0x6
 10804 150e 94000000 		.4byte	0x94
 10805 1512 25       		.uleb128 0x25
 10806 1513 3E030000 		.4byte	.LASF228
 10807 1517 01       		.byte	0x1
 10808 1518 C6       		.byte	0xc6
 10809 1519 A6020000 		.4byte	0x2a6
 10810 151d 05       		.uleb128 0x5
 10811 151e 03       		.byte	0x3
 10812 151f 00000000 		.4byte	knobs
 10813 1523 25       		.uleb128 0x25
 10814 1524 7F060000 		.4byte	.LASF229
 10815 1528 01       		.byte	0x1
 10816 1529 C7       		.byte	0xc7
 10817 152a A6020000 		.4byte	0x2a6
 10818 152e 05       		.uleb128 0x5
 10819 152f 03       		.byte	0x3
 10820 1530 00000000 		.4byte	prevKnobs
 10821 1534 25       		.uleb128 0x25
 10822 1535 790A0000 		.4byte	.LASF230
 10823 1539 01       		.byte	0x1
 10824 153a C9       		.byte	0xc9
 10825 153b 03020000 		.4byte	0x203
 10826 153f 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 234


 10827 1540 03       		.byte	0x3
 10828 1541 00000000 		.4byte	SPI2started
 10829 1545 25       		.uleb128 0x25
 10830 1546 740C0000 		.4byte	.LASF231
 10831 154a 01       		.byte	0x1
 10832 154b DD       		.byte	0xdd
 10833 154c A00D0000 		.4byte	0xda0
 10834 1550 05       		.uleb128 0x5
 10835 1551 03       		.byte	0x3
 10836 1552 00000000 		.4byte	array
 10837 1556 25       		.uleb128 0x25
 10838 1557 E3070000 		.4byte	.LASF232
 10839 155b 01       		.byte	0x1
 10840 155c E0       		.byte	0xe0
 10841 155d F7010000 		.4byte	0x1f7
 10842 1561 05       		.uleb128 0x5
 10843 1562 03       		.byte	0x3
 10844 1563 00000000 		.4byte	eepromReturnValue
 10845 1567 25       		.uleb128 0x25
 10846 1568 34050000 		.4byte	.LASF233
 10847 156c 01       		.byte	0x1
 10848 156d EC       		.byte	0xec
 10849 156e D9000000 		.4byte	0xd9
 10850 1572 05       		.uleb128 0x5
 10851 1573 03       		.byte	0x3
 10852 1574 00000000 		.4byte	eeprom_cnt
 10853 1578 25       		.uleb128 0x25
 10854 1579 FD070000 		.4byte	.LASF85
 10855 157d 01       		.byte	0x1
 10856 157e ED       		.byte	0xed
 10857 157f 12010000 		.4byte	0x112
 10858 1583 05       		.uleb128 0x5
 10859 1584 03       		.byte	0x3
 10860 1585 00000000 		.4byte	status
 10861 1589 28       		.uleb128 0x28
 10862 158a 70747200 		.ascii	"ptr\000"
 10863 158e 01       		.byte	0x1
 10864 158f EE       		.byte	0xee
 10865 1590 9A150000 		.4byte	0x159a
 10866 1594 05       		.uleb128 0x5
 10867 1595 03       		.byte	0x3
 10868 1596 00000000 		.4byte	ptr
 10869 159a 20       		.uleb128 0x20
 10870 159b 04       		.byte	0x4
 10871 159c A5150000 		.4byte	0x15a5
 10872 15a0 24       		.uleb128 0x24
 10873 15a1 D9000000 		.4byte	0xd9
 10874 15a5 06       		.uleb128 0x6
 10875 15a6 A0150000 		.4byte	0x15a0
 10876 15aa 25       		.uleb128 0x25
 10877 15ab 2C020000 		.4byte	.LASF234
 10878 15af 01       		.byte	0x1
 10879 15b0 EF       		.byte	0xef
 10880 15b1 0D150000 		.4byte	0x150d
 10881 15b5 05       		.uleb128 0x5
 10882 15b6 03       		.byte	0x3
 10883 15b7 00000000 		.4byte	barCount
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 235


 10884 15bb 07       		.uleb128 0x7
 10885 15bc 03020000 		.4byte	0x203
 10886 15c0 CB150000 		.4byte	0x15cb
 10887 15c4 08       		.uleb128 0x8
 10888 15c5 36010000 		.4byte	0x136
 10889 15c9 0F       		.byte	0xf
 10890 15ca 00       		.byte	0
 10891 15cb 27       		.uleb128 0x27
 10892 15cc 0D010000 		.4byte	.LASF235
 10893 15d0 01       		.byte	0x1
 10894 15d1 5101     		.2byte	0x151
 10895 15d3 DD150000 		.4byte	0x15dd
 10896 15d7 05       		.uleb128 0x5
 10897 15d8 03       		.byte	0x3
 10898 15d9 00000000 		.4byte	I2Cbuff2
 10899 15dd 06       		.uleb128 0x6
 10900 15de BB150000 		.4byte	0x15bb
 10901 15e2 27       		.uleb128 0x27
 10902 15e3 04080000 		.4byte	.LASF236
 10903 15e7 01       		.byte	0x1
 10904 15e8 5201     		.2byte	0x152
 10905 15ea 03020000 		.4byte	0x203
 10906 15ee 05       		.uleb128 0x5
 10907 15ef 03       		.byte	0x3
 10908 15f0 00000000 		.4byte	send_it
 10909 15f4 07       		.uleb128 0x7
 10910 15f5 A2000000 		.4byte	0xa2
 10911 15f9 0A160000 		.4byte	0x160a
 10912 15fd 08       		.uleb128 0x8
 10913 15fe 36010000 		.4byte	0x136
 10914 1602 0B       		.byte	0xb
 10915 1603 08       		.uleb128 0x8
 10916 1604 36010000 		.4byte	0x136
 10917 1608 01       		.byte	0x1
 10918 1609 00       		.byte	0
 10919 160a 27       		.uleb128 0x27
 10920 160b 16010000 		.4byte	.LASF237
 10921 160f 01       		.byte	0x1
 10922 1610 5901     		.2byte	0x159
 10923 1612 F4150000 		.4byte	0x15f4
 10924 1616 05       		.uleb128 0x5
 10925 1617 03       		.byte	0x3
 10926 1618 00000000 		.4byte	mux_states
 10927 161c 07       		.uleb128 0x7
 10928 161d A2000000 		.4byte	0xa2
 10929 1621 2C160000 		.4byte	0x162c
 10930 1625 08       		.uleb128 0x8
 10931 1626 36010000 		.4byte	0x136
 10932 162a 0B       		.byte	0xb
 10933 162b 00       		.byte	0
 10934 162c 27       		.uleb128 0x27
 10935 162d A10E0000 		.4byte	.LASF238
 10936 1631 01       		.byte	0x1
 10937 1632 5A01     		.2byte	0x15a
 10938 1634 1C160000 		.4byte	0x161c
 10939 1638 05       		.uleb128 0x5
 10940 1639 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 236


 10941 163a 00000000 		.4byte	i2c_skipped
 10942 163e 27       		.uleb128 0x27
 10943 163f 790D0000 		.4byte	.LASF239
 10944 1643 01       		.byte	0x1
 10945 1644 5B01     		.2byte	0x15b
 10946 1646 94110000 		.4byte	0x1194
 10947 164a 05       		.uleb128 0x5
 10948 164b 03       		.byte	0x3
 10949 164c 00000000 		.4byte	pedals_low
 10950 1650 27       		.uleb128 0x27
 10951 1651 6E010000 		.4byte	.LASF240
 10952 1655 01       		.byte	0x1
 10953 1656 5C01     		.2byte	0x15c
 10954 1658 94110000 		.4byte	0x1194
 10955 165c 05       		.uleb128 0x5
 10956 165d 03       		.byte	0x3
 10957 165e 00000000 		.4byte	pedals_high
 10958 1662 27       		.uleb128 0x27
 10959 1663 D40C0000 		.4byte	.LASF241
 10960 1667 01       		.byte	0x1
 10961 1668 5D01     		.2byte	0x15d
 10962 166a B8000000 		.4byte	0xb8
 10963 166e 05       		.uleb128 0x5
 10964 166f 03       		.byte	0x3
 10965 1670 00000000 		.4byte	deadzone
 10966 1674 27       		.uleb128 0x27
 10967 1675 51060000 		.4byte	.LASF242
 10968 1679 01       		.byte	0x1
 10969 167a 5E01     		.2byte	0x15e
 10970 167c B8000000 		.4byte	0xb8
 10971 1680 05       		.uleb128 0x5
 10972 1681 03       		.byte	0x3
 10973 1682 00000000 		.4byte	volumePedal
 10974 1686 27       		.uleb128 0x27
 10975 1687 4F0B0000 		.4byte	.LASF243
 10976 168b 01       		.byte	0x1
 10977 168c 5F01     		.2byte	0x15f
 10978 168e 94110000 		.4byte	0x1194
 10979 1692 05       		.uleb128 0x5
 10980 1693 03       		.byte	0x3
 10981 1694 00000000 		.4byte	processed_pedals
 10982 1698 27       		.uleb128 0x27
 10983 1699 630A0000 		.4byte	.LASF244
 10984 169d 01       		.byte	0x1
 10985 169e 6001     		.2byte	0x160
 10986 16a0 94110000 		.4byte	0x1194
 10987 16a4 05       		.uleb128 0x5
 10988 16a5 03       		.byte	0x3
 10989 16a6 00000000 		.4byte	prev_processed_pedals
 10990 16aa 07       		.uleb128 0x7
 10991 16ab A2000000 		.4byte	0xa2
 10992 16af BA160000 		.4byte	0x16ba
 10993 16b3 08       		.uleb128 0x8
 10994 16b4 36010000 		.4byte	0x136
 10995 16b8 09       		.byte	0x9
 10996 16b9 00       		.byte	0
 10997 16ba 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 237


 10998 16bb 74060000 		.4byte	.LASF245
 10999 16bf 01       		.byte	0x1
 11000 16c0 6101     		.2byte	0x161
 11001 16c2 AA160000 		.4byte	0x16aa
 11002 16c6 05       		.uleb128 0x5
 11003 16c7 03       		.byte	0x3
 11004 16c8 00000000 		.4byte	pedals8bit
 11005 16cc 27       		.uleb128 0x27
 11006 16cd 42000000 		.4byte	.LASF246
 11007 16d1 01       		.byte	0x1
 11008 16d2 6201     		.2byte	0x162
 11009 16d4 AD000000 		.4byte	0xad
 11010 16d8 05       		.uleb128 0x5
 11011 16d9 03       		.byte	0x3
 11012 16da 00000000 		.4byte	prev_processed_volumePedal
 11013 16de 27       		.uleb128 0x27
 11014 16df 1A0B0000 		.4byte	.LASF247
 11015 16e3 01       		.byte	0x1
 11016 16e4 6301     		.2byte	0x163
 11017 16e6 AD000000 		.4byte	0xad
 11018 16ea 05       		.uleb128 0x5
 11019 16eb 03       		.byte	0x3
 11020 16ec 00000000 		.4byte	processed_volumePedal
 11021 16f0 07       		.uleb128 0x7
 11022 16f1 FD000000 		.4byte	0xfd
 11023 16f5 06170000 		.4byte	0x1706
 11024 16f9 08       		.uleb128 0x8
 11025 16fa 36010000 		.4byte	0x136
 11026 16fe 03       		.byte	0x3
 11027 16ff 08       		.uleb128 0x8
 11028 1700 36010000 		.4byte	0x136
 11029 1704 03       		.byte	0x3
 11030 1705 00       		.byte	0
 11031 1706 27       		.uleb128 0x27
 11032 1707 AA0D0000 		.4byte	.LASF248
 11033 170b 01       		.byte	0x1
 11034 170c 6601     		.2byte	0x166
 11035 170e F0160000 		.4byte	0x16f0
 11036 1712 05       		.uleb128 0x5
 11037 1713 03       		.byte	0x3
 11038 1714 00000000 		.4byte	fretMeasurements
 11039 1718 27       		.uleb128 0x27
 11040 1719 70080000 		.4byte	.LASF249
 11041 171d 01       		.byte	0x1
 11042 171e 7301     		.2byte	0x173
 11043 1720 94000000 		.4byte	0x94
 11044 1724 05       		.uleb128 0x5
 11045 1725 03       		.byte	0x3
 11046 1726 00000000 		.4byte	currentPresetSelection
 11047 172a 07       		.uleb128 0x7
 11048 172b A2000000 		.4byte	0xa2
 11049 172f 40170000 		.4byte	0x1740
 11050 1733 08       		.uleb128 0x8
 11051 1734 36010000 		.4byte	0x136
 11052 1738 3F       		.byte	0x3f
 11053 1739 08       		.uleb128 0x8
 11054 173a 36010000 		.4byte	0x136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 238


 11055 173e 0D       		.byte	0xd
 11056 173f 00       		.byte	0
 11057 1740 27       		.uleb128 0x27
 11058 1741 BB020000 		.4byte	.LASF250
 11059 1745 01       		.byte	0x1
 11060 1746 7401     		.2byte	0x174
 11061 1748 2A170000 		.4byte	0x172a
 11062 174c 05       		.uleb128 0x5
 11063 174d 03       		.byte	0x3
 11064 174e 00000000 		.4byte	presetNamesArray
 11065 1752 27       		.uleb128 0x27
 11066 1753 44020000 		.4byte	.LASF251
 11067 1757 01       		.byte	0x1
 11068 1758 7501     		.2byte	0x175
 11069 175a A2000000 		.4byte	0xa2
 11070 175e 05       		.uleb128 0x5
 11071 175f 03       		.byte	0x3
 11072 1760 00000000 		.4byte	presetNumberToLoad
 11073 1764 27       		.uleb128 0x27
 11074 1765 7B020000 		.4byte	.LASF252
 11075 1769 01       		.byte	0x1
 11076 176a 7601     		.2byte	0x176
 11077 176c 4C120000 		.4byte	0x124c
 11078 1770 05       		.uleb128 0x5
 11079 1771 03       		.byte	0x3
 11080 1772 00000000 		.4byte	presetLoadedResponse
 11081 1776 07       		.uleb128 0x7
 11082 1777 A2000000 		.4byte	0xa2
 11083 177b 92170000 		.4byte	0x1792
 11084 177f 08       		.uleb128 0x8
 11085 1780 36010000 		.4byte	0x136
 11086 1784 3F       		.byte	0x3f
 11087 1785 08       		.uleb128 0x8
 11088 1786 36010000 		.4byte	0x136
 11089 178a 07       		.byte	0x7
 11090 178b 08       		.uleb128 0x8
 11091 178c 36010000 		.4byte	0x136
 11092 1790 0D       		.byte	0xd
 11093 1791 00       		.byte	0
 11094 1792 27       		.uleb128 0x27
 11095 1793 74000000 		.4byte	.LASF253
 11096 1797 01       		.byte	0x1
 11097 1798 7901     		.2byte	0x179
 11098 179a 76170000 		.4byte	0x1776
 11099 179e 05       		.uleb128 0x5
 11100 179f 03       		.byte	0x3
 11101 17a0 00000000 		.4byte	macroNamesArray
 11102 17a4 07       		.uleb128 0x7
 11103 17a5 FD000000 		.4byte	0xfd
 11104 17a9 B4170000 		.4byte	0x17b4
 11105 17ad 08       		.uleb128 0x8
 11106 17ae 36010000 		.4byte	0x136
 11107 17b2 03       		.byte	0x3
 11108 17b3 00       		.byte	0
 11109 17b4 27       		.uleb128 0x27
 11110 17b5 10030000 		.4byte	.LASF254
 11111 17b9 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 239


 11112 17ba 7D01     		.2byte	0x17d
 11113 17bc A4170000 		.4byte	0x17a4
 11114 17c0 05       		.uleb128 0x5
 11115 17c1 03       		.byte	0x3
 11116 17c2 00000000 		.4byte	fretScaling
 11117 17c6 07       		.uleb128 0x7
 11118 17c7 FD000000 		.4byte	0xfd
 11119 17cb D6170000 		.4byte	0x17d6
 11120 17cf 08       		.uleb128 0x8
 11121 17d0 36010000 		.4byte	0x136
 11122 17d4 09       		.byte	0x9
 11123 17d5 00       		.byte	0
 11124 17d6 27       		.uleb128 0x27
 11125 17d7 E3030000 		.4byte	.LASF255
 11126 17db 01       		.byte	0x1
 11127 17dc 8201     		.2byte	0x182
 11128 17de C6170000 		.4byte	0x17c6
 11129 17e2 05       		.uleb128 0x5
 11130 17e3 03       		.byte	0x3
 11131 17e4 00000000 		.4byte	pedalRatios
 11132 17e8 27       		.uleb128 0x27
 11133 17e9 84040000 		.4byte	.LASF256
 11134 17ed 01       		.byte	0x1
 11135 17ee 8301     		.2byte	0x183
 11136 17f0 A2000000 		.4byte	0xa2
 11137 17f4 05       		.uleb128 0x5
 11138 17f5 03       		.byte	0x3
 11139 17f6 00000000 		.4byte	last_mux
 11140 17fa 27       		.uleb128 0x27
 11141 17fb 4E090000 		.4byte	.LASF257
 11142 17ff 01       		.byte	0x1
 11143 1800 8401     		.2byte	0x184
 11144 1802 03020000 		.4byte	0x203
 11145 1806 05       		.uleb128 0x5
 11146 1807 03       		.byte	0x3
 11147 1808 00000000 		.4byte	main_counter
 11148 180c 27       		.uleb128 0x27
 11149 180d 16050000 		.4byte	.LASF258
 11150 1811 01       		.byte	0x1
 11151 1812 8501     		.2byte	0x185
 11152 1814 A2000000 		.4byte	0xa2
 11153 1818 05       		.uleb128 0x5
 11154 1819 03       		.byte	0x3
 11155 181a 00000000 		.4byte	neck
 11156 181e 27       		.uleb128 0x27
 11157 181f 65090000 		.4byte	.LASF259
 11158 1823 01       		.byte	0x1
 11159 1824 8601     		.2byte	0x186
 11160 1826 A2000000 		.4byte	0xa2
 11161 182a 05       		.uleb128 0x5
 11162 182b 03       		.byte	0x3
 11163 182c 00000000 		.4byte	dualSlider
 11164 1830 27       		.uleb128 0x27
 11165 1831 D00B0000 		.4byte	.LASF260
 11166 1835 01       		.byte	0x1
 11167 1836 8701     		.2byte	0x187
 11168 1838 A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 240


 11169 183c 05       		.uleb128 0x5
 11170 183d 03       		.byte	0x3
 11171 183e 00000000 		.4byte	enterUp
 11172 1842 27       		.uleb128 0x27
 11173 1843 57020000 		.4byte	.LASF261
 11174 1847 01       		.byte	0x1
 11175 1848 8801     		.2byte	0x188
 11176 184a A2000000 		.4byte	0xa2
 11177 184e 05       		.uleb128 0x5
 11178 184f 03       		.byte	0x3
 11179 1850 00000000 		.4byte	voice
 11180 1854 27       		.uleb128 0x27
 11181 1855 9C0F0000 		.4byte	.LASF262
 11182 1859 01       		.byte	0x1
 11183 185a 8901     		.2byte	0x189
 11184 185c A2000000 		.4byte	0xa2
 11185 1860 05       		.uleb128 0x5
 11186 1861 03       		.byte	0x3
 11187 1862 00000000 		.4byte	editUp
 11188 1866 27       		.uleb128 0x27
 11189 1867 6E050000 		.4byte	.LASF263
 11190 186b 01       		.byte	0x1
 11191 186c 8A01     		.2byte	0x18a
 11192 186e A2000000 		.4byte	0xa2
 11193 1872 05       		.uleb128 0x5
 11194 1873 03       		.byte	0x3
 11195 1874 00000000 		.4byte	oct1Up
 11196 1878 27       		.uleb128 0x27
 11197 1879 140F0000 		.4byte	.LASF264
 11198 187d 01       		.byte	0x1
 11199 187e 8B01     		.2byte	0x18b
 11200 1880 A2000000 		.4byte	0xa2
 11201 1884 05       		.uleb128 0x5
 11202 1885 03       		.byte	0x3
 11203 1886 00000000 		.4byte	oct4Up
 11204 188a 27       		.uleb128 0x27
 11205 188b 8D040000 		.4byte	.LASF265
 11206 188f 01       		.byte	0x1
 11207 1890 8D01     		.2byte	0x18d
 11208 1892 9C180000 		.4byte	0x189c
 11209 1896 05       		.uleb128 0x5
 11210 1897 03       		.byte	0x3
 11211 1898 00000000 		.4byte	encoderVal
 11212 189c 06       		.uleb128 0x6
 11213 189d BB150000 		.4byte	0x15bb
 11214 18a1 27       		.uleb128 0x27
 11215 18a2 63050000 		.4byte	.LASF266
 11216 18a6 01       		.byte	0x1
 11217 18a7 8E01     		.2byte	0x18e
 11218 18a9 94000000 		.4byte	0x94
 11219 18ad 05       		.uleb128 0x5
 11220 18ae 03       		.byte	0x3
 11221 18af 00000000 		.4byte	encoderNum
 11222 18b3 27       		.uleb128 0x27
 11223 18b4 2B0A0000 		.4byte	.LASF267
 11224 18b8 01       		.byte	0x1
 11225 18b9 8F01     		.2byte	0x18f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 241


 11226 18bb A2000000 		.4byte	0xa2
 11227 18bf 05       		.uleb128 0x5
 11228 18c0 03       		.byte	0x3
 11229 18c1 00000000 		.4byte	button1Up
 11230 18c5 27       		.uleb128 0x27
 11231 18c6 630C0000 		.4byte	.LASF268
 11232 18ca 01       		.byte	0x1
 11233 18cb 9001     		.2byte	0x190
 11234 18cd A2000000 		.4byte	0xa2
 11235 18d1 05       		.uleb128 0x5
 11236 18d2 03       		.byte	0x3
 11237 18d3 00000000 		.4byte	button2Up
 11238 18d7 27       		.uleb128 0x27
 11239 18d8 300F0000 		.4byte	.LASF269
 11240 18dc 01       		.byte	0x1
 11241 18dd 9101     		.2byte	0x191
 11242 18df A2000000 		.4byte	0xa2
 11243 18e3 05       		.uleb128 0x5
 11244 18e4 03       		.byte	0x3
 11245 18e5 00000000 		.4byte	button3Up
 11246 18e9 27       		.uleb128 0x27
 11247 18ea EF0E0000 		.4byte	.LASF270
 11248 18ee 01       		.byte	0x1
 11249 18ef 9201     		.2byte	0x192
 11250 18f1 A2000000 		.4byte	0xa2
 11251 18f5 05       		.uleb128 0x5
 11252 18f6 03       		.byte	0x3
 11253 18f7 00000000 		.4byte	button4Up
 11254 18fb 27       		.uleb128 0x27
 11255 18fc 5D0D0000 		.4byte	.LASF271
 11256 1900 01       		.byte	0x1
 11257 1901 9301     		.2byte	0x193
 11258 1903 A2000000 		.4byte	0xa2
 11259 1907 05       		.uleb128 0x5
 11260 1908 03       		.byte	0x3
 11261 1909 00000000 		.4byte	patchNum
 11262 190d 07       		.uleb128 0x7
 11263 190e FD000000 		.4byte	0xfd
 11264 1912 29190000 		.4byte	0x1929
 11265 1916 08       		.uleb128 0x8
 11266 1917 36010000 		.4byte	0x136
 11267 191b 06       		.byte	0x6
 11268 191c 08       		.uleb128 0x8
 11269 191d 36010000 		.4byte	0x136
 11270 1921 0A       		.byte	0xa
 11271 1922 08       		.uleb128 0x8
 11272 1923 36010000 		.4byte	0x136
 11273 1927 0B       		.byte	0xb
 11274 1928 00       		.byte	0
 11275 1929 27       		.uleb128 0x27
 11276 192a 6B060000 		.4byte	.LASF272
 11277 192e 01       		.byte	0x1
 11278 192f 9901     		.2byte	0x199
 11279 1931 0D190000 		.4byte	0x190d
 11280 1935 05       		.uleb128 0x5
 11281 1936 03       		.byte	0x3
 11282 1937 00000000 		.4byte	copedent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 242


 11283 193b 07       		.uleb128 0x7
 11284 193c A2000000 		.4byte	0xa2
 11285 1940 51190000 		.4byte	0x1951
 11286 1944 08       		.uleb128 0x8
 11287 1945 36010000 		.4byte	0x136
 11288 1949 06       		.byte	0x6
 11289 194a 08       		.uleb128 0x8
 11290 194b 36010000 		.4byte	0x136
 11291 194f 0D       		.byte	0xd
 11292 1950 00       		.byte	0
 11293 1951 27       		.uleb128 0x27
 11294 1952 81010000 		.4byte	.LASF273
 11295 1956 01       		.byte	0x1
 11296 1957 9A01     		.2byte	0x19a
 11297 1959 3B190000 		.4byte	0x193b
 11298 195d 05       		.uleb128 0x5
 11299 195e 03       		.byte	0x3
 11300 195f 00000000 		.4byte	copedentNamesArray
 11301 1963 07       		.uleb128 0x7
 11302 1964 FD000000 		.4byte	0xfd
 11303 1968 73190000 		.4byte	0x1973
 11304 196c 08       		.uleb128 0x8
 11305 196d 36010000 		.4byte	0x136
 11306 1971 0B       		.byte	0xb
 11307 1972 00       		.byte	0
 11308 1973 27       		.uleb128 0x27
 11309 1974 D1020000 		.4byte	.LASF274
 11310 1978 01       		.byte	0x1
 11311 1979 9C01     		.2byte	0x19c
 11312 197b 63190000 		.4byte	0x1963
 11313 197f 05       		.uleb128 0x5
 11314 1980 03       		.byte	0x3
 11315 1981 00000000 		.4byte	prevStringPitchBend
 11316 1985 07       		.uleb128 0x7
 11317 1986 FD000000 		.4byte	0xfd
 11318 198a 9B190000 		.4byte	0x199b
 11319 198e 08       		.uleb128 0x8
 11320 198f 36010000 		.4byte	0x136
 11321 1993 09       		.byte	0x9
 11322 1994 08       		.uleb128 0x8
 11323 1995 36010000 		.4byte	0x136
 11324 1999 0B       		.byte	0xb
 11325 199a 00       		.byte	0
 11326 199b 27       		.uleb128 0x27
 11327 199c 890F0000 		.4byte	.LASF275
 11328 19a0 01       		.byte	0x1
 11329 19a1 9E01     		.2byte	0x19e
 11330 19a3 85190000 		.4byte	0x1985
 11331 19a7 05       		.uleb128 0x5
 11332 19a8 03       		.byte	0x3
 11333 19a9 00000000 		.4byte	pedals
 11334 19ad 27       		.uleb128 0x27
 11335 19ae 600B0000 		.4byte	.LASF276
 11336 19b2 01       		.byte	0x1
 11337 19b3 A101     		.2byte	0x1a1
 11338 19b5 63190000 		.4byte	0x1963
 11339 19b9 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 243


 11340 19ba 03       		.byte	0x3
 11341 19bb 00000000 		.4byte	openStringFrequencies
 11342 19bf 27       		.uleb128 0x27
 11343 19c0 010E0000 		.4byte	.LASF277
 11344 19c4 01       		.byte	0x1
 11345 19c5 A201     		.2byte	0x1a2
 11346 19c7 63190000 		.4byte	0x1963
 11347 19cb 05       		.uleb128 0x5
 11348 19cc 03       		.byte	0x3
 11349 19cd 00000000 		.4byte	stringMappedPositions
 11350 19d1 27       		.uleb128 0x27
 11351 19d2 3E070000 		.4byte	.LASF278
 11352 19d6 01       		.byte	0x1
 11353 19d7 A301     		.2byte	0x1a3
 11354 19d9 63190000 		.4byte	0x1963
 11355 19dd 05       		.uleb128 0x5
 11356 19de 03       		.byte	0x3
 11357 19df 00000000 		.4byte	invStringMappedPositions
 11358 19e3 27       		.uleb128 0x27
 11359 19e4 C00F0000 		.4byte	.LASF279
 11360 19e8 01       		.byte	0x1
 11361 19e9 A401     		.2byte	0x1a4
 11362 19eb 63190000 		.4byte	0x1963
 11363 19ef 05       		.uleb128 0x5
 11364 19f0 03       		.byte	0x3
 11365 19f1 00000000 		.4byte	stringFrequencies
 11366 19f5 27       		.uleb128 0x27
 11367 19f6 3B040000 		.4byte	.LASF280
 11368 19fa 01       		.byte	0x1
 11369 19fb A501     		.2byte	0x1a5
 11370 19fd 63190000 		.4byte	0x1963
 11371 1a01 05       		.uleb128 0x5
 11372 1a02 03       		.byte	0x3
 11373 1a03 00000000 		.4byte	stringOctave
 11374 1a07 27       		.uleb128 0x27
 11375 1a08 C9090000 		.4byte	.LASF281
 11376 1a0c 01       		.byte	0x1
 11377 1a0d A601     		.2byte	0x1a6
 11378 1a0f 63190000 		.4byte	0x1963
 11379 1a13 05       		.uleb128 0x5
 11380 1a14 03       		.byte	0x3
 11381 1a15 00000000 		.4byte	stringPitch
 11382 1a19 27       		.uleb128 0x27
 11383 1a1a CE0D0000 		.4byte	.LASF282
 11384 1a1e 01       		.byte	0x1
 11385 1a1f A701     		.2byte	0x1a7
 11386 1a21 63190000 		.4byte	0x1963
 11387 1a25 05       		.uleb128 0x5
 11388 1a26 03       		.byte	0x3
 11389 1a27 00000000 		.4byte	stringMIDI
 11390 1a2b 07       		.uleb128 0x7
 11391 1a2c 94000000 		.4byte	0x94
 11392 1a30 3B1A0000 		.4byte	0x1a3b
 11393 1a34 08       		.uleb128 0x8
 11394 1a35 36010000 		.4byte	0x136
 11395 1a39 0B       		.byte	0xb
 11396 1a3a 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 244


 11397 1a3b 27       		.uleb128 0x27
 11398 1a3c 87080000 		.4byte	.LASF283
 11399 1a40 01       		.byte	0x1
 11400 1a41 A801     		.2byte	0x1a8
 11401 1a43 2B1A0000 		.4byte	0x1a2b
 11402 1a47 05       		.uleb128 0x5
 11403 1a48 03       		.byte	0x3
 11404 1a49 00000000 		.4byte	openStringMIDI_Int
 11405 1a4d 27       		.uleb128 0x27
 11406 1a4e 430D0000 		.4byte	.LASF284
 11407 1a52 01       		.byte	0x1
 11408 1a53 A901     		.2byte	0x1a9
 11409 1a55 94000000 		.4byte	0x94
 11410 1a59 05       		.uleb128 0x5
 11411 1a5a 03       		.byte	0x3
 11412 1a5b 00000000 		.4byte	OLEDcount
 11413 1a5f 27       		.uleb128 0x27
 11414 1a60 DB090000 		.4byte	.LASF285
 11415 1a64 01       		.byte	0x1
 11416 1a65 AB01     		.2byte	0x1ab
 11417 1a67 94000000 		.4byte	0x94
 11418 1a6b 05       		.uleb128 0x5
 11419 1a6c 03       		.byte	0x3
 11420 1a6d 00000000 		.4byte	mainOLEDWaitingToSend
 11421 1a71 27       		.uleb128 0x27
 11422 1a72 57010000 		.4byte	.LASF286
 11423 1a76 01       		.byte	0x1
 11424 1a77 AC01     		.2byte	0x1ac
 11425 1a79 94000000 		.4byte	0x94
 11426 1a7d 05       		.uleb128 0x5
 11427 1a7e 03       		.byte	0x3
 11428 1a7f 00000000 		.4byte	macroOLEDWaitingToSend
 11429 1a83 07       		.uleb128 0x7
 11430 1a84 94000000 		.4byte	0x94
 11431 1a88 931A0000 		.4byte	0x1a93
 11432 1a8c 08       		.uleb128 0x8
 11433 1a8d 36010000 		.4byte	0x136
 11434 1a91 3F       		.byte	0x3f
 11435 1a92 00       		.byte	0
 11436 1a93 27       		.uleb128 0x27
 11437 1a94 A1040000 		.4byte	.LASF287
 11438 1a98 01       		.byte	0x1
 11439 1a99 AE01     		.2byte	0x1ae
 11440 1a9b 831A0000 		.4byte	0x1a83
 11441 1a9f 05       		.uleb128 0x5
 11442 1aa0 03       		.byte	0x3
 11443 1aa1 00000000 		.4byte	presetAlreadyDisplayed
 11444 1aa5 27       		.uleb128 0x27
 11445 1aa6 660D0000 		.4byte	.LASF288
 11446 1aaa 01       		.byte	0x1
 11447 1aab B001     		.2byte	0x1b0
 11448 1aad C6170000 		.4byte	0x17c6
 11449 1ab1 05       		.uleb128 0x5
 11450 1ab2 03       		.byte	0x3
 11451 1ab3 00000000 		.4byte	pedals_float
 11452 1ab7 27       		.uleb128 0x27
 11453 1ab8 F80B0000 		.4byte	.LASF289
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 245


 11454 1abc 01       		.byte	0x1
 11455 1abd B801     		.2byte	0x1b8
 11456 1abf 94000000 		.4byte	0x94
 11457 1ac3 05       		.uleb128 0x5
 11458 1ac4 03       		.byte	0x3
 11459 1ac5 00000000 		.4byte	currentNeck
 11460 1ac9 27       		.uleb128 0x27
 11461 1aca 040C0000 		.4byte	.LASF290
 11462 1ace 01       		.byte	0x1
 11463 1acf BA01     		.2byte	0x1ba
 11464 1ad1 94000000 		.4byte	0x94
 11465 1ad5 05       		.uleb128 0x5
 11466 1ad6 03       		.byte	0x3
 11467 1ad7 00000000 		.4byte	editMode
 11468 1adb 27       		.uleb128 0x27
 11469 1adc 4C0E0000 		.4byte	.LASF291
 11470 1ae0 01       		.byte	0x1
 11471 1ae1 BB01     		.2byte	0x1bb
 11472 1ae3 94000000 		.4byte	0x94
 11473 1ae7 05       		.uleb128 0x5
 11474 1ae8 03       		.byte	0x3
 11475 1ae9 00000000 		.4byte	calibrationMode
 11476 1aed 27       		.uleb128 0x27
 11477 1aee 7B070000 		.4byte	.LASF292
 11478 1af2 01       		.byte	0x1
 11479 1af3 6007     		.2byte	0x760
 11480 1af5 2B1A0000 		.4byte	0x1a2b
 11481 1af9 05       		.uleb128 0x5
 11482 1afa 03       		.byte	0x3
 11483 1afb 00000000 		.4byte	prevNotes
 11484 1aff 27       		.uleb128 0x27
 11485 1b00 EA0A0000 		.4byte	.LASF293
 11486 1b04 01       		.byte	0x1
 11487 1b05 D507     		.2byte	0x7d5
 11488 1b07 03020000 		.4byte	0x203
 11489 1b0b 05       		.uleb128 0x5
 11490 1b0c 03       		.byte	0x3
 11491 1b0d 00000000 		.4byte	checkStatus
 11492 1b11 27       		.uleb128 0x27
 11493 1b12 4F0C0000 		.4byte	.LASF294
 11494 1b16 01       		.byte	0x1
 11495 1b17 D607     		.2byte	0x7d6
 11496 1b19 08020000 		.4byte	0x208
 11497 1b1d 05       		.uleb128 0x5
 11498 1b1e 03       		.byte	0x3
 11499 1b1f 00000000 		.4byte	checkBase
 11500 1b23 27       		.uleb128 0x27
 11501 1b24 0A0D0000 		.4byte	.LASF295
 11502 1b28 01       		.byte	0x1
 11503 1b29 DA07     		.2byte	0x7da
 11504 1b2b 94000000 		.4byte	0x94
 11505 1b2f 05       		.uleb128 0x5
 11506 1b30 03       		.byte	0x3
 11507 1b31 00000000 		.4byte	SPI_errors
 11508 1b35 07       		.uleb128 0x7
 11509 1b36 03020000 		.4byte	0x203
 11510 1b3a 451B0000 		.4byte	0x1b45
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 246


 11511 1b3e 08       		.uleb128 0x8
 11512 1b3f 36010000 		.4byte	0x136
 11513 1b43 03       		.byte	0x3
 11514 1b44 00       		.byte	0
 11515 1b45 27       		.uleb128 0x27
 11516 1b46 300B0000 		.4byte	.LASF89
 11517 1b4a 01       		.byte	0x1
 11518 1b4b F608     		.2byte	0x8f6
 11519 1b4d 571B0000 		.4byte	0x1b57
 11520 1b51 05       		.uleb128 0x5
 11521 1b52 03       		.byte	0x3
 11522 1b53 00000000 		.4byte	tempMIDI
 11523 1b57 06       		.uleb128 0x6
 11524 1b58 351B0000 		.4byte	0x1b35
 11525 1b5c 27       		.uleb128 0x27
 11526 1b5d 1F000000 		.4byte	.LASF296
 11527 1b61 01       		.byte	0x1
 11528 1b62 F708     		.2byte	0x8f7
 11529 1b64 03020000 		.4byte	0x203
 11530 1b68 05       		.uleb128 0x5
 11531 1b69 03       		.byte	0x3
 11532 1b6a 00000000 		.4byte	firstSysex
 11533 1b6e 27       		.uleb128 0x27
 11534 1b6f 02060000 		.4byte	.LASF297
 11535 1b73 01       		.byte	0x1
 11536 1b74 F808     		.2byte	0x8f8
 11537 1b76 801B0000 		.4byte	0x1b80
 11538 1b7a 05       		.uleb128 0x5
 11539 1b7b 03       		.byte	0x3
 11540 1b7c 00000000 		.4byte	sysexPointerMask
 11541 1b80 24       		.uleb128 0x24
 11542 1b81 B8000000 		.4byte	0xb8
 11543 1b85 00       		.byte	0
 11544              		.section	.debug_abbrev,"",%progbits
 11545              	.Ldebug_abbrev0:
 11546 0000 01       		.uleb128 0x1
 11547 0001 11       		.uleb128 0x11
 11548 0002 01       		.byte	0x1
 11549 0003 25       		.uleb128 0x25
 11550 0004 0E       		.uleb128 0xe
 11551 0005 13       		.uleb128 0x13
 11552 0006 0B       		.uleb128 0xb
 11553 0007 03       		.uleb128 0x3
 11554 0008 0E       		.uleb128 0xe
 11555 0009 1B       		.uleb128 0x1b
 11556 000a 0E       		.uleb128 0xe
 11557 000b 55       		.uleb128 0x55
 11558 000c 17       		.uleb128 0x17
 11559 000d 11       		.uleb128 0x11
 11560 000e 01       		.uleb128 0x1
 11561 000f 10       		.uleb128 0x10
 11562 0010 17       		.uleb128 0x17
 11563 0011 00       		.byte	0
 11564 0012 00       		.byte	0
 11565 0013 02       		.uleb128 0x2
 11566 0014 24       		.uleb128 0x24
 11567 0015 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 247


 11568 0016 0B       		.uleb128 0xb
 11569 0017 0B       		.uleb128 0xb
 11570 0018 3E       		.uleb128 0x3e
 11571 0019 0B       		.uleb128 0xb
 11572 001a 03       		.uleb128 0x3
 11573 001b 0E       		.uleb128 0xe
 11574 001c 00       		.byte	0
 11575 001d 00       		.byte	0
 11576 001e 03       		.uleb128 0x3
 11577 001f 16       		.uleb128 0x16
 11578 0020 00       		.byte	0
 11579 0021 03       		.uleb128 0x3
 11580 0022 0E       		.uleb128 0xe
 11581 0023 3A       		.uleb128 0x3a
 11582 0024 0B       		.uleb128 0xb
 11583 0025 3B       		.uleb128 0x3b
 11584 0026 0B       		.uleb128 0xb
 11585 0027 49       		.uleb128 0x49
 11586 0028 13       		.uleb128 0x13
 11587 0029 00       		.byte	0
 11588 002a 00       		.byte	0
 11589 002b 04       		.uleb128 0x4
 11590 002c 24       		.uleb128 0x24
 11591 002d 00       		.byte	0
 11592 002e 0B       		.uleb128 0xb
 11593 002f 0B       		.uleb128 0xb
 11594 0030 3E       		.uleb128 0x3e
 11595 0031 0B       		.uleb128 0xb
 11596 0032 03       		.uleb128 0x3
 11597 0033 08       		.uleb128 0x8
 11598 0034 00       		.byte	0
 11599 0035 00       		.byte	0
 11600 0036 05       		.uleb128 0x5
 11601 0037 16       		.uleb128 0x16
 11602 0038 00       		.byte	0
 11603 0039 03       		.uleb128 0x3
 11604 003a 0E       		.uleb128 0xe
 11605 003b 3A       		.uleb128 0x3a
 11606 003c 0B       		.uleb128 0xb
 11607 003d 3B       		.uleb128 0x3b
 11608 003e 05       		.uleb128 0x5
 11609 003f 49       		.uleb128 0x49
 11610 0040 13       		.uleb128 0x13
 11611 0041 00       		.byte	0
 11612 0042 00       		.byte	0
 11613 0043 06       		.uleb128 0x6
 11614 0044 35       		.uleb128 0x35
 11615 0045 00       		.byte	0
 11616 0046 49       		.uleb128 0x49
 11617 0047 13       		.uleb128 0x13
 11618 0048 00       		.byte	0
 11619 0049 00       		.byte	0
 11620 004a 07       		.uleb128 0x7
 11621 004b 01       		.uleb128 0x1
 11622 004c 01       		.byte	0x1
 11623 004d 49       		.uleb128 0x49
 11624 004e 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 248


 11625 004f 01       		.uleb128 0x1
 11626 0050 13       		.uleb128 0x13
 11627 0051 00       		.byte	0
 11628 0052 00       		.byte	0
 11629 0053 08       		.uleb128 0x8
 11630 0054 21       		.uleb128 0x21
 11631 0055 00       		.byte	0
 11632 0056 49       		.uleb128 0x49
 11633 0057 13       		.uleb128 0x13
 11634 0058 2F       		.uleb128 0x2f
 11635 0059 0B       		.uleb128 0xb
 11636 005a 00       		.byte	0
 11637 005b 00       		.byte	0
 11638 005c 09       		.uleb128 0x9
 11639 005d 13       		.uleb128 0x13
 11640 005e 01       		.byte	0x1
 11641 005f 0B       		.uleb128 0xb
 11642 0060 0B       		.uleb128 0xb
 11643 0061 3A       		.uleb128 0x3a
 11644 0062 0B       		.uleb128 0xb
 11645 0063 3B       		.uleb128 0x3b
 11646 0064 05       		.uleb128 0x5
 11647 0065 01       		.uleb128 0x1
 11648 0066 13       		.uleb128 0x13
 11649 0067 00       		.byte	0
 11650 0068 00       		.byte	0
 11651 0069 0A       		.uleb128 0xa
 11652 006a 0D       		.uleb128 0xd
 11653 006b 00       		.byte	0
 11654 006c 03       		.uleb128 0x3
 11655 006d 0E       		.uleb128 0xe
 11656 006e 3A       		.uleb128 0x3a
 11657 006f 0B       		.uleb128 0xb
 11658 0070 3B       		.uleb128 0x3b
 11659 0071 05       		.uleb128 0x5
 11660 0072 49       		.uleb128 0x49
 11661 0073 13       		.uleb128 0x13
 11662 0074 38       		.uleb128 0x38
 11663 0075 0B       		.uleb128 0xb
 11664 0076 00       		.byte	0
 11665 0077 00       		.byte	0
 11666 0078 0B       		.uleb128 0xb
 11667 0079 04       		.uleb128 0x4
 11668 007a 01       		.byte	0x1
 11669 007b 0B       		.uleb128 0xb
 11670 007c 0B       		.uleb128 0xb
 11671 007d 49       		.uleb128 0x49
 11672 007e 13       		.uleb128 0x13
 11673 007f 3A       		.uleb128 0x3a
 11674 0080 0B       		.uleb128 0xb
 11675 0081 3B       		.uleb128 0x3b
 11676 0082 05       		.uleb128 0x5
 11677 0083 01       		.uleb128 0x1
 11678 0084 13       		.uleb128 0x13
 11679 0085 00       		.byte	0
 11680 0086 00       		.byte	0
 11681 0087 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 249


 11682 0088 28       		.uleb128 0x28
 11683 0089 00       		.byte	0
 11684 008a 03       		.uleb128 0x3
 11685 008b 0E       		.uleb128 0xe
 11686 008c 1C       		.uleb128 0x1c
 11687 008d 0B       		.uleb128 0xb
 11688 008e 00       		.byte	0
 11689 008f 00       		.byte	0
 11690 0090 0D       		.uleb128 0xd
 11691 0091 04       		.uleb128 0x4
 11692 0092 01       		.byte	0x1
 11693 0093 03       		.uleb128 0x3
 11694 0094 0E       		.uleb128 0xe
 11695 0095 0B       		.uleb128 0xb
 11696 0096 0B       		.uleb128 0xb
 11697 0097 49       		.uleb128 0x49
 11698 0098 13       		.uleb128 0x13
 11699 0099 3A       		.uleb128 0x3a
 11700 009a 0B       		.uleb128 0xb
 11701 009b 3B       		.uleb128 0x3b
 11702 009c 0B       		.uleb128 0xb
 11703 009d 01       		.uleb128 0x1
 11704 009e 13       		.uleb128 0x13
 11705 009f 00       		.byte	0
 11706 00a0 00       		.byte	0
 11707 00a1 0E       		.uleb128 0xe
 11708 00a2 17       		.uleb128 0x17
 11709 00a3 01       		.byte	0x1
 11710 00a4 03       		.uleb128 0x3
 11711 00a5 0E       		.uleb128 0xe
 11712 00a6 0B       		.uleb128 0xb
 11713 00a7 0B       		.uleb128 0xb
 11714 00a8 3A       		.uleb128 0x3a
 11715 00a9 0B       		.uleb128 0xb
 11716 00aa 3B       		.uleb128 0x3b
 11717 00ab 0B       		.uleb128 0xb
 11718 00ac 01       		.uleb128 0x1
 11719 00ad 13       		.uleb128 0x13
 11720 00ae 00       		.byte	0
 11721 00af 00       		.byte	0
 11722 00b0 0F       		.uleb128 0xf
 11723 00b1 0D       		.uleb128 0xd
 11724 00b2 00       		.byte	0
 11725 00b3 03       		.uleb128 0x3
 11726 00b4 08       		.uleb128 0x8
 11727 00b5 3A       		.uleb128 0x3a
 11728 00b6 0B       		.uleb128 0xb
 11729 00b7 3B       		.uleb128 0x3b
 11730 00b8 0B       		.uleb128 0xb
 11731 00b9 49       		.uleb128 0x49
 11732 00ba 13       		.uleb128 0x13
 11733 00bb 00       		.byte	0
 11734 00bc 00       		.byte	0
 11735 00bd 10       		.uleb128 0x10
 11736 00be 2E       		.uleb128 0x2e
 11737 00bf 01       		.byte	0x1
 11738 00c0 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 250


 11739 00c1 19       		.uleb128 0x19
 11740 00c2 03       		.uleb128 0x3
 11741 00c3 0E       		.uleb128 0xe
 11742 00c4 3A       		.uleb128 0x3a
 11743 00c5 0B       		.uleb128 0xb
 11744 00c6 3B       		.uleb128 0x3b
 11745 00c7 0B       		.uleb128 0xb
 11746 00c8 27       		.uleb128 0x27
 11747 00c9 19       		.uleb128 0x19
 11748 00ca 11       		.uleb128 0x11
 11749 00cb 01       		.uleb128 0x1
 11750 00cc 12       		.uleb128 0x12
 11751 00cd 06       		.uleb128 0x6
 11752 00ce 40       		.uleb128 0x40
 11753 00cf 18       		.uleb128 0x18
 11754 00d0 9642     		.uleb128 0x2116
 11755 00d2 19       		.uleb128 0x19
 11756 00d3 01       		.uleb128 0x1
 11757 00d4 13       		.uleb128 0x13
 11758 00d5 00       		.byte	0
 11759 00d6 00       		.byte	0
 11760 00d7 11       		.uleb128 0x11
 11761 00d8 0B       		.uleb128 0xb
 11762 00d9 01       		.byte	0x1
 11763 00da 11       		.uleb128 0x11
 11764 00db 01       		.uleb128 0x1
 11765 00dc 12       		.uleb128 0x12
 11766 00dd 06       		.uleb128 0x6
 11767 00de 00       		.byte	0
 11768 00df 00       		.byte	0
 11769 00e0 12       		.uleb128 0x12
 11770 00e1 34       		.uleb128 0x34
 11771 00e2 00       		.byte	0
 11772 00e3 03       		.uleb128 0x3
 11773 00e4 08       		.uleb128 0x8
 11774 00e5 3A       		.uleb128 0x3a
 11775 00e6 0B       		.uleb128 0xb
 11776 00e7 3B       		.uleb128 0x3b
 11777 00e8 0B       		.uleb128 0xb
 11778 00e9 49       		.uleb128 0x49
 11779 00ea 13       		.uleb128 0x13
 11780 00eb 02       		.uleb128 0x2
 11781 00ec 18       		.uleb128 0x18
 11782 00ed 00       		.byte	0
 11783 00ee 00       		.byte	0
 11784 00ef 13       		.uleb128 0x13
 11785 00f0 2E       		.uleb128 0x2e
 11786 00f1 00       		.byte	0
 11787 00f2 3F       		.uleb128 0x3f
 11788 00f3 19       		.uleb128 0x19
 11789 00f4 03       		.uleb128 0x3
 11790 00f5 0E       		.uleb128 0xe
 11791 00f6 3A       		.uleb128 0x3a
 11792 00f7 0B       		.uleb128 0xb
 11793 00f8 3B       		.uleb128 0x3b
 11794 00f9 0B       		.uleb128 0xb
 11795 00fa 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 251


 11796 00fb 19       		.uleb128 0x19
 11797 00fc 11       		.uleb128 0x11
 11798 00fd 01       		.uleb128 0x1
 11799 00fe 12       		.uleb128 0x12
 11800 00ff 06       		.uleb128 0x6
 11801 0100 40       		.uleb128 0x40
 11802 0101 18       		.uleb128 0x18
 11803 0102 9642     		.uleb128 0x2116
 11804 0104 19       		.uleb128 0x19
 11805 0105 00       		.byte	0
 11806 0106 00       		.byte	0
 11807 0107 14       		.uleb128 0x14
 11808 0108 2E       		.uleb128 0x2e
 11809 0109 00       		.byte	0
 11810 010a 3F       		.uleb128 0x3f
 11811 010b 19       		.uleb128 0x19
 11812 010c 03       		.uleb128 0x3
 11813 010d 0E       		.uleb128 0xe
 11814 010e 3A       		.uleb128 0x3a
 11815 010f 0B       		.uleb128 0xb
 11816 0110 3B       		.uleb128 0x3b
 11817 0111 05       		.uleb128 0x5
 11818 0112 27       		.uleb128 0x27
 11819 0113 19       		.uleb128 0x19
 11820 0114 11       		.uleb128 0x11
 11821 0115 01       		.uleb128 0x1
 11822 0116 12       		.uleb128 0x12
 11823 0117 06       		.uleb128 0x6
 11824 0118 40       		.uleb128 0x40
 11825 0119 18       		.uleb128 0x18
 11826 011a 9642     		.uleb128 0x2116
 11827 011c 19       		.uleb128 0x19
 11828 011d 00       		.byte	0
 11829 011e 00       		.byte	0
 11830 011f 15       		.uleb128 0x15
 11831 0120 2E       		.uleb128 0x2e
 11832 0121 01       		.byte	0x1
 11833 0122 3F       		.uleb128 0x3f
 11834 0123 19       		.uleb128 0x19
 11835 0124 03       		.uleb128 0x3
 11836 0125 0E       		.uleb128 0xe
 11837 0126 3A       		.uleb128 0x3a
 11838 0127 0B       		.uleb128 0xb
 11839 0128 3B       		.uleb128 0x3b
 11840 0129 05       		.uleb128 0x5
 11841 012a 27       		.uleb128 0x27
 11842 012b 19       		.uleb128 0x19
 11843 012c 49       		.uleb128 0x49
 11844 012d 13       		.uleb128 0x13
 11845 012e 11       		.uleb128 0x11
 11846 012f 01       		.uleb128 0x1
 11847 0130 12       		.uleb128 0x12
 11848 0131 06       		.uleb128 0x6
 11849 0132 40       		.uleb128 0x40
 11850 0133 18       		.uleb128 0x18
 11851 0134 9642     		.uleb128 0x2116
 11852 0136 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 252


 11853 0137 01       		.uleb128 0x1
 11854 0138 13       		.uleb128 0x13
 11855 0139 00       		.byte	0
 11856 013a 00       		.byte	0
 11857 013b 16       		.uleb128 0x16
 11858 013c 05       		.uleb128 0x5
 11859 013d 00       		.byte	0
 11860 013e 03       		.uleb128 0x3
 11861 013f 08       		.uleb128 0x8
 11862 0140 3A       		.uleb128 0x3a
 11863 0141 0B       		.uleb128 0xb
 11864 0142 3B       		.uleb128 0x3b
 11865 0143 05       		.uleb128 0x5
 11866 0144 49       		.uleb128 0x49
 11867 0145 13       		.uleb128 0x13
 11868 0146 02       		.uleb128 0x2
 11869 0147 18       		.uleb128 0x18
 11870 0148 00       		.byte	0
 11871 0149 00       		.byte	0
 11872 014a 17       		.uleb128 0x17
 11873 014b 34       		.uleb128 0x34
 11874 014c 00       		.byte	0
 11875 014d 03       		.uleb128 0x3
 11876 014e 0E       		.uleb128 0xe
 11877 014f 3A       		.uleb128 0x3a
 11878 0150 0B       		.uleb128 0xb
 11879 0151 3B       		.uleb128 0x3b
 11880 0152 05       		.uleb128 0x5
 11881 0153 49       		.uleb128 0x49
 11882 0154 13       		.uleb128 0x13
 11883 0155 02       		.uleb128 0x2
 11884 0156 18       		.uleb128 0x18
 11885 0157 00       		.byte	0
 11886 0158 00       		.byte	0
 11887 0159 18       		.uleb128 0x18
 11888 015a 05       		.uleb128 0x5
 11889 015b 00       		.byte	0
 11890 015c 03       		.uleb128 0x3
 11891 015d 0E       		.uleb128 0xe
 11892 015e 3A       		.uleb128 0x3a
 11893 015f 0B       		.uleb128 0xb
 11894 0160 3B       		.uleb128 0x3b
 11895 0161 05       		.uleb128 0x5
 11896 0162 49       		.uleb128 0x49
 11897 0163 13       		.uleb128 0x13
 11898 0164 02       		.uleb128 0x2
 11899 0165 18       		.uleb128 0x18
 11900 0166 00       		.byte	0
 11901 0167 00       		.byte	0
 11902 0168 19       		.uleb128 0x19
 11903 0169 34       		.uleb128 0x34
 11904 016a 00       		.byte	0
 11905 016b 03       		.uleb128 0x3
 11906 016c 08       		.uleb128 0x8
 11907 016d 3A       		.uleb128 0x3a
 11908 016e 0B       		.uleb128 0xb
 11909 016f 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 253


 11910 0170 05       		.uleb128 0x5
 11911 0171 49       		.uleb128 0x49
 11912 0172 13       		.uleb128 0x13
 11913 0173 02       		.uleb128 0x2
 11914 0174 18       		.uleb128 0x18
 11915 0175 00       		.byte	0
 11916 0176 00       		.byte	0
 11917 0177 1A       		.uleb128 0x1a
 11918 0178 2E       		.uleb128 0x2e
 11919 0179 01       		.byte	0x1
 11920 017a 3F       		.uleb128 0x3f
 11921 017b 19       		.uleb128 0x19
 11922 017c 03       		.uleb128 0x3
 11923 017d 08       		.uleb128 0x8
 11924 017e 3A       		.uleb128 0x3a
 11925 017f 0B       		.uleb128 0xb
 11926 0180 3B       		.uleb128 0x3b
 11927 0181 05       		.uleb128 0x5
 11928 0182 27       		.uleb128 0x27
 11929 0183 19       		.uleb128 0x19
 11930 0184 49       		.uleb128 0x49
 11931 0185 13       		.uleb128 0x13
 11932 0186 11       		.uleb128 0x11
 11933 0187 01       		.uleb128 0x1
 11934 0188 12       		.uleb128 0x12
 11935 0189 06       		.uleb128 0x6
 11936 018a 40       		.uleb128 0x40
 11937 018b 18       		.uleb128 0x18
 11938 018c 9642     		.uleb128 0x2116
 11939 018e 19       		.uleb128 0x19
 11940 018f 01       		.uleb128 0x1
 11941 0190 13       		.uleb128 0x13
 11942 0191 00       		.byte	0
 11943 0192 00       		.byte	0
 11944 0193 1B       		.uleb128 0x1b
 11945 0194 2E       		.uleb128 0x2e
 11946 0195 00       		.byte	0
 11947 0196 3F       		.uleb128 0x3f
 11948 0197 19       		.uleb128 0x19
 11949 0198 03       		.uleb128 0x3
 11950 0199 0E       		.uleb128 0xe
 11951 019a 3A       		.uleb128 0x3a
 11952 019b 0B       		.uleb128 0xb
 11953 019c 3B       		.uleb128 0x3b
 11954 019d 05       		.uleb128 0x5
 11955 019e 11       		.uleb128 0x11
 11956 019f 01       		.uleb128 0x1
 11957 01a0 12       		.uleb128 0x12
 11958 01a1 06       		.uleb128 0x6
 11959 01a2 40       		.uleb128 0x40
 11960 01a3 18       		.uleb128 0x18
 11961 01a4 9742     		.uleb128 0x2117
 11962 01a6 19       		.uleb128 0x19
 11963 01a7 00       		.byte	0
 11964 01a8 00       		.byte	0
 11965 01a9 1C       		.uleb128 0x1c
 11966 01aa 2E       		.uleb128 0x2e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 254


 11967 01ab 01       		.byte	0x1
 11968 01ac 3F       		.uleb128 0x3f
 11969 01ad 19       		.uleb128 0x19
 11970 01ae 03       		.uleb128 0x3
 11971 01af 0E       		.uleb128 0xe
 11972 01b0 3A       		.uleb128 0x3a
 11973 01b1 0B       		.uleb128 0xb
 11974 01b2 3B       		.uleb128 0x3b
 11975 01b3 05       		.uleb128 0x5
 11976 01b4 11       		.uleb128 0x11
 11977 01b5 01       		.uleb128 0x1
 11978 01b6 12       		.uleb128 0x12
 11979 01b7 06       		.uleb128 0x6
 11980 01b8 40       		.uleb128 0x40
 11981 01b9 18       		.uleb128 0x18
 11982 01ba 9642     		.uleb128 0x2116
 11983 01bc 19       		.uleb128 0x19
 11984 01bd 01       		.uleb128 0x1
 11985 01be 13       		.uleb128 0x13
 11986 01bf 00       		.byte	0
 11987 01c0 00       		.byte	0
 11988 01c1 1D       		.uleb128 0x1d
 11989 01c2 0B       		.uleb128 0xb
 11990 01c3 01       		.byte	0x1
 11991 01c4 11       		.uleb128 0x11
 11992 01c5 01       		.uleb128 0x1
 11993 01c6 12       		.uleb128 0x12
 11994 01c7 06       		.uleb128 0x6
 11995 01c8 01       		.uleb128 0x1
 11996 01c9 13       		.uleb128 0x13
 11997 01ca 00       		.byte	0
 11998 01cb 00       		.byte	0
 11999 01cc 1E       		.uleb128 0x1e
 12000 01cd 2E       		.uleb128 0x2e
 12001 01ce 00       		.byte	0
 12002 01cf 3F       		.uleb128 0x3f
 12003 01d0 19       		.uleb128 0x19
 12004 01d1 03       		.uleb128 0x3
 12005 01d2 0E       		.uleb128 0xe
 12006 01d3 3A       		.uleb128 0x3a
 12007 01d4 0B       		.uleb128 0xb
 12008 01d5 3B       		.uleb128 0x3b
 12009 01d6 05       		.uleb128 0x5
 12010 01d7 11       		.uleb128 0x11
 12011 01d8 01       		.uleb128 0x1
 12012 01d9 12       		.uleb128 0x12
 12013 01da 06       		.uleb128 0x6
 12014 01db 40       		.uleb128 0x40
 12015 01dc 18       		.uleb128 0x18
 12016 01dd 9642     		.uleb128 0x2116
 12017 01df 19       		.uleb128 0x19
 12018 01e0 00       		.byte	0
 12019 01e1 00       		.byte	0
 12020 01e2 1F       		.uleb128 0x1f
 12021 01e3 2E       		.uleb128 0x2e
 12022 01e4 01       		.byte	0x1
 12023 01e5 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 255


 12024 01e6 19       		.uleb128 0x19
 12025 01e7 03       		.uleb128 0x3
 12026 01e8 0E       		.uleb128 0xe
 12027 01e9 3A       		.uleb128 0x3a
 12028 01ea 0B       		.uleb128 0xb
 12029 01eb 3B       		.uleb128 0x3b
 12030 01ec 05       		.uleb128 0x5
 12031 01ed 27       		.uleb128 0x27
 12032 01ee 19       		.uleb128 0x19
 12033 01ef 11       		.uleb128 0x11
 12034 01f0 01       		.uleb128 0x1
 12035 01f1 12       		.uleb128 0x12
 12036 01f2 06       		.uleb128 0x6
 12037 01f3 40       		.uleb128 0x40
 12038 01f4 18       		.uleb128 0x18
 12039 01f5 9642     		.uleb128 0x2116
 12040 01f7 19       		.uleb128 0x19
 12041 01f8 01       		.uleb128 0x1
 12042 01f9 13       		.uleb128 0x13
 12043 01fa 00       		.byte	0
 12044 01fb 00       		.byte	0
 12045 01fc 20       		.uleb128 0x20
 12046 01fd 0F       		.uleb128 0xf
 12047 01fe 00       		.byte	0
 12048 01ff 0B       		.uleb128 0xb
 12049 0200 0B       		.uleb128 0xb
 12050 0201 49       		.uleb128 0x49
 12051 0202 13       		.uleb128 0x13
 12052 0203 00       		.byte	0
 12053 0204 00       		.byte	0
 12054 0205 21       		.uleb128 0x21
 12055 0206 34       		.uleb128 0x34
 12056 0207 00       		.byte	0
 12057 0208 03       		.uleb128 0x3
 12058 0209 0E       		.uleb128 0xe
 12059 020a 3A       		.uleb128 0x3a
 12060 020b 0B       		.uleb128 0xb
 12061 020c 3B       		.uleb128 0x3b
 12062 020d 0B       		.uleb128 0xb
 12063 020e 49       		.uleb128 0x49
 12064 020f 13       		.uleb128 0x13
 12065 0210 02       		.uleb128 0x2
 12066 0211 18       		.uleb128 0x18
 12067 0212 00       		.byte	0
 12068 0213 00       		.byte	0
 12069 0214 22       		.uleb128 0x22
 12070 0215 34       		.uleb128 0x34
 12071 0216 00       		.byte	0
 12072 0217 03       		.uleb128 0x3
 12073 0218 0E       		.uleb128 0xe
 12074 0219 3A       		.uleb128 0x3a
 12075 021a 0B       		.uleb128 0xb
 12076 021b 3B       		.uleb128 0x3b
 12077 021c 0B       		.uleb128 0xb
 12078 021d 49       		.uleb128 0x49
 12079 021e 13       		.uleb128 0x13
 12080 021f 3F       		.uleb128 0x3f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 256


 12081 0220 19       		.uleb128 0x19
 12082 0221 3C       		.uleb128 0x3c
 12083 0222 19       		.uleb128 0x19
 12084 0223 00       		.byte	0
 12085 0224 00       		.byte	0
 12086 0225 23       		.uleb128 0x23
 12087 0226 21       		.uleb128 0x21
 12088 0227 00       		.byte	0
 12089 0228 49       		.uleb128 0x49
 12090 0229 13       		.uleb128 0x13
 12091 022a 2F       		.uleb128 0x2f
 12092 022b 05       		.uleb128 0x5
 12093 022c 00       		.byte	0
 12094 022d 00       		.byte	0
 12095 022e 24       		.uleb128 0x24
 12096 022f 26       		.uleb128 0x26
 12097 0230 00       		.byte	0
 12098 0231 49       		.uleb128 0x49
 12099 0232 13       		.uleb128 0x13
 12100 0233 00       		.byte	0
 12101 0234 00       		.byte	0
 12102 0235 25       		.uleb128 0x25
 12103 0236 34       		.uleb128 0x34
 12104 0237 00       		.byte	0
 12105 0238 03       		.uleb128 0x3
 12106 0239 0E       		.uleb128 0xe
 12107 023a 3A       		.uleb128 0x3a
 12108 023b 0B       		.uleb128 0xb
 12109 023c 3B       		.uleb128 0x3b
 12110 023d 0B       		.uleb128 0xb
 12111 023e 49       		.uleb128 0x49
 12112 023f 13       		.uleb128 0x13
 12113 0240 3F       		.uleb128 0x3f
 12114 0241 19       		.uleb128 0x19
 12115 0242 02       		.uleb128 0x2
 12116 0243 18       		.uleb128 0x18
 12117 0244 00       		.byte	0
 12118 0245 00       		.byte	0
 12119 0246 26       		.uleb128 0x26
 12120 0247 34       		.uleb128 0x34
 12121 0248 00       		.byte	0
 12122 0249 03       		.uleb128 0x3
 12123 024a 0E       		.uleb128 0xe
 12124 024b 3A       		.uleb128 0x3a
 12125 024c 0B       		.uleb128 0xb
 12126 024d 3B       		.uleb128 0x3b
 12127 024e 05       		.uleb128 0x5
 12128 024f 49       		.uleb128 0x49
 12129 0250 13       		.uleb128 0x13
 12130 0251 3F       		.uleb128 0x3f
 12131 0252 19       		.uleb128 0x19
 12132 0253 3C       		.uleb128 0x3c
 12133 0254 19       		.uleb128 0x19
 12134 0255 00       		.byte	0
 12135 0256 00       		.byte	0
 12136 0257 27       		.uleb128 0x27
 12137 0258 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 257


 12138 0259 00       		.byte	0
 12139 025a 03       		.uleb128 0x3
 12140 025b 0E       		.uleb128 0xe
 12141 025c 3A       		.uleb128 0x3a
 12142 025d 0B       		.uleb128 0xb
 12143 025e 3B       		.uleb128 0x3b
 12144 025f 05       		.uleb128 0x5
 12145 0260 49       		.uleb128 0x49
 12146 0261 13       		.uleb128 0x13
 12147 0262 3F       		.uleb128 0x3f
 12148 0263 19       		.uleb128 0x19
 12149 0264 02       		.uleb128 0x2
 12150 0265 18       		.uleb128 0x18
 12151 0266 00       		.byte	0
 12152 0267 00       		.byte	0
 12153 0268 28       		.uleb128 0x28
 12154 0269 34       		.uleb128 0x34
 12155 026a 00       		.byte	0
 12156 026b 03       		.uleb128 0x3
 12157 026c 08       		.uleb128 0x8
 12158 026d 3A       		.uleb128 0x3a
 12159 026e 0B       		.uleb128 0xb
 12160 026f 3B       		.uleb128 0x3b
 12161 0270 0B       		.uleb128 0xb
 12162 0271 49       		.uleb128 0x49
 12163 0272 13       		.uleb128 0x13
 12164 0273 3F       		.uleb128 0x3f
 12165 0274 19       		.uleb128 0x19
 12166 0275 02       		.uleb128 0x2
 12167 0276 18       		.uleb128 0x18
 12168 0277 00       		.byte	0
 12169 0278 00       		.byte	0
 12170 0279 00       		.byte	0
 12171              		.section	.debug_aranges,"",%progbits
 12172 0000 0C010000 		.4byte	0x10c
 12173 0004 0200     		.2byte	0x2
 12174 0006 00000000 		.4byte	.Ldebug_info0
 12175 000a 04       		.byte	0x4
 12176 000b 00       		.byte	0
 12177 000c 0000     		.2byte	0
 12178 000e 0000     		.2byte	0
 12179 0010 00000000 		.4byte	.LFB64
 12180 0014 74010000 		.4byte	.LFE64-.LFB64
 12181 0018 00000000 		.4byte	.LFB65
 12182 001c 9C000000 		.4byte	.LFE65-.LFB65
 12183 0020 00000000 		.4byte	.LFB66
 12184 0024 14000000 		.4byte	.LFE66-.LFB66
 12185 0028 00000000 		.4byte	.LFB67
 12186 002c 7C000000 		.4byte	.LFE67-.LFB67
 12187 0030 00000000 		.4byte	.LFB68
 12188 0034 58000000 		.4byte	.LFE68-.LFB68
 12189 0038 00000000 		.4byte	.LFB69
 12190 003c 68000000 		.4byte	.LFE69-.LFB69
 12191 0040 00000000 		.4byte	.LFB70
 12192 0044 4C000000 		.4byte	.LFE70-.LFB70
 12193 0048 00000000 		.4byte	.LFB71
 12194 004c 46000000 		.4byte	.LFE71-.LFB71
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 258


 12195 0050 00000000 		.4byte	.LFB72
 12196 0054 56000000 		.4byte	.LFE72-.LFB72
 12197 0058 00000000 		.4byte	.LFB73
 12198 005c 0C000000 		.4byte	.LFE73-.LFB73
 12199 0060 00000000 		.4byte	.LFB74
 12200 0064 0C000000 		.4byte	.LFE74-.LFB74
 12201 0068 00000000 		.4byte	.LFB75
 12202 006c 0C010000 		.4byte	.LFE75-.LFB75
 12203 0070 00000000 		.4byte	.LFB76
 12204 0074 BC190000 		.4byte	.LFE76-.LFB76
 12205 0078 00000000 		.4byte	.LFB77
 12206 007c 70000000 		.4byte	.LFE77-.LFB77
 12207 0080 00000000 		.4byte	.LFB78
 12208 0084 70010000 		.4byte	.LFE78-.LFB78
 12209 0088 00000000 		.4byte	.LFB79
 12210 008c E0000000 		.4byte	.LFE79-.LFB79
 12211 0090 00000000 		.4byte	.LFB80
 12212 0094 E4000000 		.4byte	.LFE80-.LFB80
 12213 0098 00000000 		.4byte	.LFB81
 12214 009c 30000000 		.4byte	.LFE81-.LFB81
 12215 00a0 00000000 		.4byte	.LFB82
 12216 00a4 7C000000 		.4byte	.LFE82-.LFB82
 12217 00a8 00000000 		.4byte	.LFB83
 12218 00ac 54000000 		.4byte	.LFE83-.LFB83
 12219 00b0 00000000 		.4byte	.LFB84
 12220 00b4 C4000000 		.4byte	.LFE84-.LFB84
 12221 00b8 00000000 		.4byte	.LFB85
 12222 00bc 98000000 		.4byte	.LFE85-.LFB85
 12223 00c0 00000000 		.4byte	.LFB86
 12224 00c4 D4000000 		.4byte	.LFE86-.LFB86
 12225 00c8 00000000 		.4byte	.LFB87
 12226 00cc 1C000000 		.4byte	.LFE87-.LFB87
 12227 00d0 00000000 		.4byte	.LFB88
 12228 00d4 68000000 		.4byte	.LFE88-.LFB88
 12229 00d8 00000000 		.4byte	.LFB89
 12230 00dc 68000000 		.4byte	.LFE89-.LFB89
 12231 00e0 00000000 		.4byte	.LFB90
 12232 00e4 68000000 		.4byte	.LFE90-.LFB90
 12233 00e8 00000000 		.4byte	.LFB91
 12234 00ec 6C000000 		.4byte	.LFE91-.LFB91
 12235 00f0 00000000 		.4byte	.LFB92
 12236 00f4 64000000 		.4byte	.LFE92-.LFB92
 12237 00f8 00000000 		.4byte	.LFB93
 12238 00fc BC080000 		.4byte	.LFE93-.LFB93
 12239 0100 00000000 		.4byte	.LFB94
 12240 0104 3C010000 		.4byte	.LFE94-.LFB94
 12241 0108 00000000 		.4byte	0
 12242 010c 00000000 		.4byte	0
 12243              		.section	.debug_ranges,"",%progbits
 12244              	.Ldebug_ranges0:
 12245 0000 00000000 		.4byte	.LFB64
 12246 0004 74010000 		.4byte	.LFE64
 12247 0008 00000000 		.4byte	.LFB65
 12248 000c 9C000000 		.4byte	.LFE65
 12249 0010 00000000 		.4byte	.LFB66
 12250 0014 14000000 		.4byte	.LFE66
 12251 0018 00000000 		.4byte	.LFB67
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 259


 12252 001c 7C000000 		.4byte	.LFE67
 12253 0020 00000000 		.4byte	.LFB68
 12254 0024 58000000 		.4byte	.LFE68
 12255 0028 00000000 		.4byte	.LFB69
 12256 002c 68000000 		.4byte	.LFE69
 12257 0030 00000000 		.4byte	.LFB70
 12258 0034 4C000000 		.4byte	.LFE70
 12259 0038 00000000 		.4byte	.LFB71
 12260 003c 46000000 		.4byte	.LFE71
 12261 0040 00000000 		.4byte	.LFB72
 12262 0044 56000000 		.4byte	.LFE72
 12263 0048 00000000 		.4byte	.LFB73
 12264 004c 0C000000 		.4byte	.LFE73
 12265 0050 00000000 		.4byte	.LFB74
 12266 0054 0C000000 		.4byte	.LFE74
 12267 0058 00000000 		.4byte	.LFB75
 12268 005c 0C010000 		.4byte	.LFE75
 12269 0060 00000000 		.4byte	.LFB76
 12270 0064 BC190000 		.4byte	.LFE76
 12271 0068 00000000 		.4byte	.LFB77
 12272 006c 70000000 		.4byte	.LFE77
 12273 0070 00000000 		.4byte	.LFB78
 12274 0074 70010000 		.4byte	.LFE78
 12275 0078 00000000 		.4byte	.LFB79
 12276 007c E0000000 		.4byte	.LFE79
 12277 0080 00000000 		.4byte	.LFB80
 12278 0084 E4000000 		.4byte	.LFE80
 12279 0088 00000000 		.4byte	.LFB81
 12280 008c 30000000 		.4byte	.LFE81
 12281 0090 00000000 		.4byte	.LFB82
 12282 0094 7C000000 		.4byte	.LFE82
 12283 0098 00000000 		.4byte	.LFB83
 12284 009c 54000000 		.4byte	.LFE83
 12285 00a0 00000000 		.4byte	.LFB84
 12286 00a4 C4000000 		.4byte	.LFE84
 12287 00a8 00000000 		.4byte	.LFB85
 12288 00ac 98000000 		.4byte	.LFE85
 12289 00b0 00000000 		.4byte	.LFB86
 12290 00b4 D4000000 		.4byte	.LFE86
 12291 00b8 00000000 		.4byte	.LFB87
 12292 00bc 1C000000 		.4byte	.LFE87
 12293 00c0 00000000 		.4byte	.LFB88
 12294 00c4 68000000 		.4byte	.LFE88
 12295 00c8 00000000 		.4byte	.LFB89
 12296 00cc 68000000 		.4byte	.LFE89
 12297 00d0 00000000 		.4byte	.LFB90
 12298 00d4 68000000 		.4byte	.LFE90
 12299 00d8 00000000 		.4byte	.LFB91
 12300 00dc 6C000000 		.4byte	.LFE91
 12301 00e0 00000000 		.4byte	.LFB92
 12302 00e4 64000000 		.4byte	.LFE92
 12303 00e8 00000000 		.4byte	.LFB93
 12304 00ec BC080000 		.4byte	.LFE93
 12305 00f0 00000000 		.4byte	.LFB94
 12306 00f4 3C010000 		.4byte	.LFE94
 12307 00f8 00000000 		.4byte	0
 12308 00fc 00000000 		.4byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 260


 12309              		.section	.debug_line,"",%progbits
 12310              	.Ldebug_line0:
 12311 0000 F70A0000 		.section	.debug_str,"MS",%progbits,1
 12311      02009B01 
 12311      00000201 
 12311      FB0E0D00 
 12311      01010101 
 12312              	.LASF157:
 12313 0000 70726573 		.ascii	"presetArraySection\000"
 12313      65744172 
 12313      72617953 
 12313      65637469 
 12313      6F6E00
 12314              	.LASF153:
 12315 0013 70726573 		.ascii	"presetArray\000"
 12315      65744172 
 12315      72617900 
 12316              	.LASF296:
 12317 001f 66697273 		.ascii	"firstSysex\000"
 12317      74537973 
 12317      657800
 12318              	.LASF28:
 12319 002a 73697A65 		.ascii	"sizetype\000"
 12319      74797065 
 12319      00
 12320              	.LASF162:
 12321 0033 73656E64 		.ascii	"sendingMessage\000"
 12321      696E674D 
 12321      65737361 
 12321      676500
 12322              	.LASF246:
 12323 0042 70726576 		.ascii	"prev_processed_volumePedal\000"
 12323      5F70726F 
 12323      63657373 
 12323      65645F76 
 12323      6F6C756D 
 12324              	.LASF87:
 12325 005d 74656D70 		.ascii	"tempangle\000"
 12325      616E676C 
 12325      6500
 12326              	.LASF217:
 12327 0067 6E657744 		.ascii	"newDataFlag2\000"
 12327      61746146 
 12327      6C616732 
 12327      00
 12328              	.LASF253:
 12329 0074 6D616372 		.ascii	"macroNamesArray\000"
 12329      6F4E616D 
 12329      65734172 
 12329      72617900 
 12330              	.LASF38:
 12331 0084 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 12331      4D5F4545 
 12331      50524F4D 
 12331      5F535543 
 12331      43455353 
 12332              	.LASF17:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 261


 12333 0099 696E7433 		.ascii	"int32_t\000"
 12333      325F7400 
 12334              	.LASF144:
 12335 00a1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 12335      4550524F 
 12335      4D5F636F 
 12335      6E746578 
 12335      7400
 12336              	.LASF47:
 12337 00b3 54686972 		.ascii	"ThirdLine\000"
 12337      644C696E 
 12337      6500
 12338              	.LASF108:
 12339 00bd 6E6F7465 		.ascii	"noteEvent\000"
 12339      4576656E 
 12339      7400
 12340              	.LASF226:
 12341 00c7 53504932 		.ascii	"SPI2errorflag\000"
 12341      6572726F 
 12341      72666C61 
 12341      6700
 12342              	.LASF21:
 12343 00d5 75696E74 		.ascii	"uint32\000"
 12343      333200
 12344              	.LASF92:
 12345 00dc 77686963 		.ascii	"whichMacroToStoreName\000"
 12345      684D6163 
 12345      726F546F 
 12345      53746F72 
 12345      654E616D 
 12346              	.LASF121:
 12347 00f2 43437661 		.ascii	"CCval\000"
 12347      6C00
 12348              	.LASF168:
 12349 00f8 6E756D4D 		.ascii	"numMappings\000"
 12349      61707069 
 12349      6E677300 
 12350              	.LASF148:
 12351 0104 49324362 		.ascii	"I2Cbuff1\000"
 12351      75666631 
 12351      00
 12352              	.LASF235:
 12353 010d 49324362 		.ascii	"I2Cbuff2\000"
 12353      75666632 
 12353      00
 12354              	.LASF237:
 12355 0116 6D75785F 		.ascii	"mux_states\000"
 12355      73746174 
 12355      657300
 12356              	.LASF134:
 12357 0121 74656D70 		.ascii	"tempLow\000"
 12357      4C6F7700 
 12358              	.LASF195:
 12359 0129 6E65636B 		.ascii	"necks\000"
 12359      7300
 12360              	.LASF186:
 12361 012f 6F637461 		.ascii	"octave\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 262


 12361      766500
 12362              	.LASF49:
 12363 0136 4E696C4C 		.ascii	"NilLine\000"
 12363      696E6500 
 12364              	.LASF43:
 12365 013e 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 12365      6E5F656D 
 12365      5F656570 
 12365      726F6D5F 
 12365      73746174 
 12366              	.LASF286:
 12367 0157 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 12367      6F4F4C45 
 12367      44576169 
 12367      74696E67 
 12367      546F5365 
 12368              	.LASF240:
 12369 016e 70656461 		.ascii	"pedals_high\000"
 12369      6C735F68 
 12369      69676800 
 12370              	.LASF98:
 12371 017a 6E627974 		.ascii	"nbytes\000"
 12371      657300
 12372              	.LASF273:
 12373 0181 636F7065 		.ascii	"copedentNamesArray\000"
 12373      64656E74 
 12373      4E616D65 
 12373      73417272 
 12373      617900
 12374              	.LASF166:
 12375 0194 76616C73 		.ascii	"valsCount\000"
 12375      436F756E 
 12375      7400
 12376              	.LASF184:
 12377 019e 74656D70 		.ascii	"temper\000"
 12377      657200
 12378              	.LASF120:
 12379 01a5 43436E75 		.ascii	"CCnum\000"
 12379      6D00
 12380              	.LASF40:
 12381 01ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 12381      4D5F4545 
 12381      50524F4D 
 12381      5F424144 
 12381      5F434845 
 12382              	.LASF36:
 12383 01c5 75736572 		.ascii	"userFlashStartAddr\000"
 12383      466C6173 
 12383      68537461 
 12383      72744164 
 12383      647200
 12384              	.LASF30:
 12385 01d8 6E756D62 		.ascii	"numberOfRows\000"
 12385      65724F66 
 12385      526F7773 
 12385      00
 12386              	.LASF128:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 263


 12387 01e5 696E7456 		.ascii	"intVal\000"
 12387      616C00
 12388              	.LASF70:
 12389 01ec 69737461 		.ascii	"istart\000"
 12389      727400
 12390              	.LASF76:
 12391 01f3 70656461 		.ascii	"pedalDiff\000"
 12391      6C446966 
 12391      6600
 12392              	.LASF125:
 12393 01fd 74686556 		.ascii	"theVal\000"
 12393      616C00
 12394              	.LASF34:
 12395 0204 72656475 		.ascii	"redundantCopy\000"
 12395      6E64616E 
 12395      74436F70 
 12395      7900
 12396              	.LASF2:
 12397 0212 5F5F7569 		.ascii	"__uint8_t\000"
 12397      6E74385F 
 12397      7400
 12398              	.LASF67:
 12399 021c 616C7068 		.ascii	"alpha\000"
 12399      6100
 12400              	.LASF57:
 12401 0222 70726573 		.ascii	"presetEnd\000"
 12401      6574456E 
 12401      6400
 12402              	.LASF234:
 12403 022c 62617243 		.ascii	"barCount\000"
 12403      6F756E74 
 12403      00
 12404              	.LASF156:
 12405 0235 73656E64 		.ascii	"sendMessageEnd\000"
 12405      4D657373 
 12405      61676545 
 12405      6E6400
 12406              	.LASF251:
 12407 0244 70726573 		.ascii	"presetNumberToLoad\000"
 12407      65744E75 
 12407      6D626572 
 12407      546F4C6F 
 12407      616400
 12408              	.LASF261:
 12409 0257 766F6963 		.ascii	"voice\000"
 12409      6500
 12410              	.LASF206:
 12411 025d 73747269 		.ascii	"strings\000"
 12411      6E677300 
 12412              	.LASF8:
 12413 0265 6C6F6E67 		.ascii	"long int\000"
 12413      20696E74 
 12413      00
 12414              	.LASF164:
 12415 026e 63757272 		.ascii	"currentFloat\000"
 12415      656E7446 
 12415      6C6F6174 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 264


 12415      00
 12416              	.LASF252:
 12417 027b 70726573 		.ascii	"presetLoadedResponse\000"
 12417      65744C6F 
 12417      61646564 
 12417      52657370 
 12417      6F6E7365 
 12418              	.LASF154:
 12419 0290 70726573 		.ascii	"presetNumberToWrite\000"
 12419      65744E75 
 12419      6D626572 
 12419      546F5772 
 12419      69746500 
 12420              	.LASF91:
 12421 02a4 77686963 		.ascii	"whichPresetToStoreName\000"
 12421      68507265 
 12421      73657454 
 12421      6F53746F 
 12421      72654E61 
 12422              	.LASF250:
 12423 02bb 70726573 		.ascii	"presetNamesArray\000"
 12423      65744E61 
 12423      6D657341 
 12423      72726179 
 12423      00
 12424              	.LASF77:
 12425 02cc 6D61696E 		.ascii	"main\000"
 12425      00
 12426              	.LASF274:
 12427 02d1 70726576 		.ascii	"prevStringPitchBend\000"
 12427      53747269 
 12427      6E675069 
 12427      74636842 
 12427      656E6400 
 12428              	.LASF115:
 12429 02e5 4D494449 		.ascii	"MIDInoteNum\000"
 12429      6E6F7465 
 12429      4E756D00 
 12430              	.LASF123:
 12431 02f1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 12431      4D494449 
 12431      416C6C4E 
 12431      6F746573 
 12431      4F666600 
 12432              	.LASF46:
 12433 0305 5365636F 		.ascii	"SecondLine\000"
 12433      6E644C69 
 12433      6E6500
 12434              	.LASF254:
 12435 0310 66726574 		.ascii	"fretScaling\000"
 12435      5363616C 
 12435      696E6700 
 12436              	.LASF163:
 12437 031c 73656E64 		.ascii	"sendKnobs\000"
 12437      4B6E6F62 
 12437      7300
 12438              	.LASF51:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 265


 12439 0326 70726573 		.ascii	"presetArraySectionState\000"
 12439      65744172 
 12439      72617953 
 12439      65637469 
 12439      6F6E5374 
 12440              	.LASF228:
 12441 033e 6B6E6F62 		.ascii	"knobs\000"
 12441      7300
 12442              	.LASF150:
 12443 0344 73797365 		.ascii	"sysexPointer\000"
 12443      78506F69 
 12443      6E746572 
 12443      00
 12444              	.LASF68:
 12445 0351 6F6D416C 		.ascii	"omAlpha\000"
 12445      70686100 
 12446              	.LASF82:
 12447 0359 73747269 		.ascii	"stringStartLoc\000"
 12447      6E675374 
 12447      6172744C 
 12447      6F6300
 12448              	.LASF0:
 12449 0368 7369676E 		.ascii	"signed char\000"
 12449      65642063 
 12449      68617200 
 12450              	.LASF14:
 12451 0374 75696E74 		.ascii	"uint8_t\000"
 12451      385F7400 
 12452              	.LASF29:
 12453 037c 776C456E 		.ascii	"wlEndAddr\000"
 12453      64416464 
 12453      7200
 12454              	.LASF135:
 12455 0386 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 12455      63616C6C 
 12455      6261636B 
 12455      4C6F6361 
 12455      6C4D6964 
 12456              	.LASF107:
 12457 03a1 73706973 		.ascii	"spis_1_ss\000"
 12457      5F315F73 
 12457      7300
 12458              	.LASF41:
 12459 03ab 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 12459      4D5F4545 
 12459      50524F4D 
 12459      5F424144 
 12459      5F444154 
 12460              	.LASF50:
 12461 03c1 5F4F4C45 		.ascii	"_OLEDLine\000"
 12461      444C696E 
 12461      6500
 12462              	.LASF165:
 12463 03cb 6D617043 		.ascii	"mapCount\000"
 12463      6F756E74 
 12463      00
 12464              	.LASF132:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 266


 12465 03d4 74656D70 		.ascii	"tempIntVersion\000"
 12465      496E7456 
 12465      65727369 
 12465      6F6E00
 12466              	.LASF255:
 12467 03e3 70656461 		.ascii	"pedalRatios\000"
 12467      6C526174 
 12467      696F7300 
 12468              	.LASF1:
 12469 03ef 756E7369 		.ascii	"unsigned char\000"
 12469      676E6564 
 12469      20636861 
 12469      7200
 12470              	.LASF170:
 12471 03fd 76616C43 		.ascii	"valCheck\000"
 12471      6865636B 
 12471      00
 12472              	.LASF127:
 12473 0406 76616C73 		.ascii	"valsStart\000"
 12473      53746172 
 12473      7400
 12474              	.LASF79:
 12475 0410 636F7065 		.ascii	"coped\000"
 12475      6400
 12476              	.LASF196:
 12477 0416 72783143 		.ascii	"rx1Channel\000"
 12477      68616E6E 
 12477      656C00
 12478              	.LASF81:
 12479 0421 70656461 		.ascii	"pedalStartLoc\000"
 12479      6C537461 
 12479      72744C6F 
 12479      6300
 12480              	.LASF212:
 12481 042f 6E657744 		.ascii	"newDataFlag\000"
 12481      61746146 
 12481      6C616700 
 12482              	.LASF280:
 12483 043b 73747269 		.ascii	"stringOctave\000"
 12483      6E674F63 
 12483      74617665 
 12483      00
 12484              	.LASF105:
 12485 0448 5553425F 		.ascii	"USB_service\000"
 12485      73657276 
 12485      69636500 
 12486              	.LASF167:
 12487 0454 6D617043 		.ascii	"mapCountExpectation\000"
 12487      6F756E74 
 12487      45787065 
 12487      63746174 
 12487      696F6E00 
 12488              	.LASF62:
 12489 0468 74656D70 		.ascii	"tempmax\000"
 12489      6D617800 
 12490              	.LASF126:
 12491 0470 73746F70 		.ascii	"stoppingPoint\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 267


 12491      70696E67 
 12491      506F696E 
 12491      7400
 12492              	.LASF69:
 12493 047e 76616C75 		.ascii	"value\000"
 12493      6500
 12494              	.LASF256:
 12495 0484 6C617374 		.ascii	"last_mux\000"
 12495      5F6D7578 
 12495      00
 12496              	.LASF265:
 12497 048d 656E636F 		.ascii	"encoderVal\000"
 12497      64657256 
 12497      616C00
 12498              	.LASF118:
 12499 0498 70726573 		.ascii	"pressure\000"
 12499      73757265 
 12499      00
 12500              	.LASF287:
 12501 04a1 70726573 		.ascii	"presetAlreadyDisplayed\000"
 12501      6574416C 
 12501      72656164 
 12501      79446973 
 12501      706C6179 
 12502              	.LASF53:
 12503 04b8 6D616372 		.ascii	"macroNames\000"
 12503      6F4E616D 
 12503      657300
 12504              	.LASF207:
 12505 04c3 70726576 		.ascii	"prevStrings\000"
 12505      53747269 
 12505      6E677300 
 12506              	.LASF24:
 12507 04cf 63686172 		.ascii	"char\000"
 12507      00
 12508              	.LASF138:
 12509 04d4 65657072 		.ascii	"eepromArray\000"
 12509      6F6D4172 
 12509      72617900 
 12510              	.LASF194:
 12511 04e0 63757272 		.ascii	"currentCopedent\000"
 12511      656E7443 
 12511      6F706564 
 12511      656E7400 
 12512              	.LASF190:
 12513 04f0 72617741 		.ascii	"rawAngle\000"
 12513      6E676C65 
 12513      00
 12514              	.LASF63:
 12515 04f9 4C454146 		.ascii	"LEAF_clip\000"
 12515      5F636C69 
 12515      7000
 12516              	.LASF94:
 12517 0503 446D6154 		.ascii	"DmaTxConfiguration\000"
 12517      78436F6E 
 12517      66696775 
 12517      72617469 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 268


 12517      6F6E00
 12518              	.LASF258:
 12519 0516 6E65636B 		.ascii	"neck\000"
 12519      00
 12520              	.LASF5:
 12521 051b 5F5F7569 		.ascii	"__uint16_t\000"
 12521      6E743136 
 12521      5F7400
 12522              	.LASF104:
 12523 0526 63686563 		.ascii	"checkUSB_Vbus\000"
 12523      6B555342 
 12523      5F566275 
 12523      7300
 12524              	.LASF233:
 12525 0534 65657072 		.ascii	"eeprom_cnt\000"
 12525      6F6D5F63 
 12525      6E7400
 12526              	.LASF142:
 12527 053f 5553425F 		.ascii	"USB_midi_out_ep\000"
 12527      6D696469 
 12527      5F6F7574 
 12527      5F657000 
 12528              	.LASF88:
 12529 054f 74656D70 		.ascii	"tempPedal\000"
 12529      50656461 
 12529      6C00
 12530              	.LASF102:
 12531 0559 4932435F 		.ascii	"I2C_reset\000"
 12531      72657365 
 12531      7400
 12532              	.LASF266:
 12533 0563 656E636F 		.ascii	"encoderNum\000"
 12533      6465724E 
 12533      756D00
 12534              	.LASF263:
 12535 056e 6F637431 		.ascii	"oct1Up\000"
 12535      557000
 12536              	.LASF44:
 12537 0575 75696E74 		.ascii	"uint\000"
 12537      00
 12538              	.LASF192:
 12539 057a 6D696469 		.ascii	"midiOverflow\000"
 12539      4F766572 
 12539      666C6F77 
 12539      00
 12540              	.LASF74:
 12541 0587 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 12541      496E6974 
 12541      69616C50 
 12541      6564616C 
 12541      5A65726F 
 12542              	.LASF117:
 12543 05a5 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 12543      4D494449 
 12543      506F6C79 
 12543      4B657950 
 12543      72657373 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 269


 12544              	.LASF131:
 12545 05bd 73747269 		.ascii	"stringChange\000"
 12545      6E674368 
 12545      616E6765 
 12545      00
 12546              	.LASF119:
 12547 05ca 73656E64 		.ascii	"sendMIDIControlChange\000"
 12547      4D494449 
 12547      436F6E74 
 12547      726F6C43 
 12547      68616E67 
 12548              	.LASF211:
 12549 05e0 73706943 		.ascii	"spiCounter\000"
 12549      6F756E74 
 12549      657200
 12550              	.LASF39:
 12551 05eb 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 12551      4D5F4545 
 12551      50524F4D 
 12551      5F424144 
 12551      5F504152 
 12552              	.LASF297:
 12553 0602 73797365 		.ascii	"sysexPointerMask\000"
 12553      78506F69 
 12553      6E746572 
 12553      4D61736B 
 12553      00
 12554              	.LASF146:
 12555 0613 4932435F 		.ascii	"I2C_1_initVar\000"
 12555      315F696E 
 12555      69745661 
 12555      7200
 12556              	.LASF52:
 12557 0621 70726573 		.ascii	"presetName\000"
 12557      65744E61 
 12557      6D6500
 12558              	.LASF152:
 12559 062c 70617273 		.ascii	"parsingSysex\000"
 12559      696E6753 
 12559      79736578 
 12559      00
 12560              	.LASF183:
 12561 0639 72657475 		.ascii	"returnedData\000"
 12561      726E6564 
 12561      44617461 
 12561      00
 12562              	.LASF48:
 12563 0646 466F7572 		.ascii	"FourthLine\000"
 12563      74684C69 
 12563      6E6500
 12564              	.LASF242:
 12565 0651 766F6C75 		.ascii	"volumePedal\000"
 12565      6D655065 
 12565      64616C00 
 12566              	.LASF204:
 12567 065d 72784275 		.ascii	"rxBufferPluck\000"
 12567      66666572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 270


 12567      506C7563 
 12567      6B00
 12568              	.LASF272:
 12569 066b 636F7065 		.ascii	"copedent\000"
 12569      64656E74 
 12569      00
 12570              	.LASF245:
 12571 0674 70656461 		.ascii	"pedals8bit\000"
 12571      6C733862 
 12571      697400
 12572              	.LASF229:
 12573 067f 70726576 		.ascii	"prevKnobs\000"
 12573      4B6E6F62 
 12573      7300
 12574              	.LASF224:
 12575 0689 6D795370 		.ascii	"mySpiCounter\000"
 12575      69436F75 
 12575      6E746572 
 12575      00
 12576              	.LASF160:
 12577 0696 73797365 		.ascii	"sysexMessageInProgress\000"
 12577      784D6573 
 12577      73616765 
 12577      496E5072 
 12577      6F677265 
 12578              	.LASF113:
 12579 06ad 43434576 		.ascii	"CCEvent\000"
 12579      656E7400 
 12580              	.LASF124:
 12581 06b5 70617273 		.ascii	"parseSysex\000"
 12581      65537973 
 12581      657800
 12582              	.LASF300:
 12583 06c0 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 12583      73657273 
 12583      5C4A6566 
 12583      66536E79 
 12583      6465725C 
 12584 06ee 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 12584      355F656C 
 12584      65637472 
 12584      6F737465 
 12584      656C5F73 
 12585 0720 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 12585      5F50534F 
 12585      43335F35 
 12585      5F546865 
 12585      726D6973 
 12586              	.LASF278:
 12587 073e 696E7653 		.ascii	"invStringMappedPositions\000"
 12587      7472696E 
 12587      674D6170 
 12587      70656450 
 12587      6F736974 
 12588              	.LASF222:
 12589 0757 696E7075 		.ascii	"inputData\000"
 12589      74446174 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 271


 12589      6100
 12590              	.LASF66:
 12591 0761 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 12591      5F696E74 
 12591      6572706F 
 12591      6C617469 
 12591      6F6E5F6C 
 12592              	.LASF292:
 12593 077b 70726576 		.ascii	"prevNotes\000"
 12593      4E6F7465 
 12593      7300
 12594              	.LASF37:
 12595 0785 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 12595      74635F65 
 12595      6570726F 
 12595      6D5F636F 
 12595      6E746578 
 12596              	.LASF10:
 12597 079d 6C6F6E67 		.ascii	"long unsigned int\000"
 12597      20756E73 
 12597      69676E65 
 12597      6420696E 
 12597      7400
 12598              	.LASF103:
 12599 07af 64697370 		.ascii	"displayCurrentPresetName\000"
 12599      6C617943 
 12599      75727265 
 12599      6E745072 
 12599      65736574 
 12600              	.LASF145:
 12601 07c8 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 12601      4550524F 
 12601      4D5F656D 
 12601      5F456570 
 12601      726F6D53 
 12602              	.LASF232:
 12603 07e3 65657072 		.ascii	"eepromReturnValue\000"
 12603      6F6D5265 
 12603      7475726E 
 12603      56616C75 
 12603      6500
 12604              	.LASF86:
 12605 07f5 74656D70 		.ascii	"tempInt\000"
 12605      496E7400 
 12606              	.LASF85:
 12607 07fd 73746174 		.ascii	"status\000"
 12607      757300
 12608              	.LASF236:
 12609 0804 73656E64 		.ascii	"send_it\000"
 12609      5F697400 
 12610              	.LASF181:
 12611 080c 6C696E65 		.ascii	"linearPotValue32Bit\000"
 12611      6172506F 
 12611      7456616C 
 12611      75653332 
 12611      42697400 
 12612              	.LASF116:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 272


 12613 0820 6368616E 		.ascii	"channel\000"
 12613      6E656C00 
 12614              	.LASF96:
 12615 0828 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 12615      4D617374 
 12615      65725772 
 12615      69746542 
 12615      6C6F636B 
 12616              	.LASF187:
 12617 0840 616E676C 		.ascii	"angle\000"
 12617      6500
 12618              	.LASF172:
 12619 0846 6E756D53 		.ascii	"numStrings\000"
 12619      7472696E 
 12619      677300
 12620              	.LASF42:
 12621 0851 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 12621      4D5F4545 
 12621      50524F4D 
 12621      5F575249 
 12621      54455F46 
 12622              	.LASF72:
 12623 0869 6F737461 		.ascii	"ostart\000"
 12623      727400
 12624              	.LASF249:
 12625 0870 63757272 		.ascii	"currentPresetSelection\000"
 12625      656E7450 
 12625      72657365 
 12625      7453656C 
 12625      65637469 
 12626              	.LASF283:
 12627 0887 6F70656E 		.ascii	"openStringMIDI_Int\000"
 12627      53747269 
 12627      6E674D49 
 12627      44495F49 
 12627      6E7400
 12628              	.LASF71:
 12629 089a 6973746F 		.ascii	"istop\000"
 12629      7000
 12630              	.LASF141:
 12631 08a0 5553425F 		.ascii	"USB_midiInBuffer\000"
 12631      6D696469 
 12631      496E4275 
 12631      66666572 
 12631      00
 12632              	.LASF298:
 12633 08b1 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 12633      43313120 
 12633      352E342E 
 12633      31203230 
 12633      31363036 
 12634 08e4 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 12634      20726576 
 12634      6973696F 
 12634      6E203233 
 12634      37373135 
 12635 0917 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 273


 12635      66756E63 
 12635      74696F6E 
 12635      2D736563 
 12635      74696F6E 
 12636              	.LASF114:
 12637 093f 73656E64 		.ascii	"sendMIDINoteOn\000"
 12637      4D494449 
 12637      4E6F7465 
 12637      4F6E00
 12638              	.LASF257:
 12639 094e 6D61696E 		.ascii	"main_counter\000"
 12639      5F636F75 
 12639      6E746572 
 12639      00
 12640              	.LASF45:
 12641 095b 46697273 		.ascii	"FirstLine\000"
 12641      744C696E 
 12641      6500
 12642              	.LASF259:
 12643 0965 6475616C 		.ascii	"dualSlider\000"
 12643      536C6964 
 12643      657200
 12644              	.LASF60:
 12645 0970 72657374 		.ascii	"restartSystemCheck\000"
 12645      61727453 
 12645      79737465 
 12645      6D436865 
 12645      636B00
 12646              	.LASF177:
 12647 0983 5553425F 		.ascii	"USB_check_flag\000"
 12647      63686563 
 12647      6B5F666C 
 12647      616700
 12648              	.LASF158:
 12649 0992 6D657373 		.ascii	"messageArraySendCount\000"
 12649      61676541 
 12649      72726179 
 12649      53656E64 
 12649      436F756E 
 12650              	.LASF9:
 12651 09a8 5F5F7569 		.ascii	"__uint32_t\000"
 12651      6E743332 
 12651      5F7400
 12652              	.LASF11:
 12653 09b3 6C6F6E67 		.ascii	"long long int\000"
 12653      206C6F6E 
 12653      6720696E 
 12653      7400
 12654              	.LASF182:
 12655 09c1 636F756E 		.ascii	"counter\000"
 12655      74657200 
 12656              	.LASF281:
 12657 09c9 73747269 		.ascii	"stringPitch\000"
 12657      6E675069 
 12657      74636800 
 12658              	.LASF198:
 12659 09d5 72783154 		.ascii	"rx1TD\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 274


 12659      4400
 12660              	.LASF285:
 12661 09db 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 12661      4F4C4544 
 12661      57616974 
 12661      696E6754 
 12661      6F53656E 
 12662              	.LASF84:
 12663 09f1 74656D70 		.ascii	"tempIntLow\000"
 12663      496E744C 
 12663      6F7700
 12664              	.LASF61:
 12665 09fc 74656D70 		.ascii	"tempmin\000"
 12665      6D696E00 
 12666              	.LASF35:
 12667 0a04 626C6F63 		.ascii	"blockingWrite\000"
 12667      6B696E67 
 12667      57726974 
 12667      6500
 12668              	.LASF202:
 12669 0a12 72783343 		.ascii	"rx3Channel\000"
 12669      68616E6E 
 12669      656C00
 12670              	.LASF23:
 12671 0a1d 646F7562 		.ascii	"double\000"
 12671      6C6500
 12672              	.LASF299:
 12673 0a24 6D61696E 		.ascii	"main.c\000"
 12673      2E6300
 12674              	.LASF267:
 12675 0a2b 62757474 		.ascii	"button1Up\000"
 12675      6F6E3155 
 12675      7000
 12676              	.LASF106:
 12677 0a35 6C6F6732 		.ascii	"log2f_approx\000"
 12677      665F6170 
 12677      70726F78 
 12677      00
 12678              	.LASF147:
 12679 0a42 49544D5F 		.ascii	"ITM_RxBuffer\000"
 12679      52784275 
 12679      66666572 
 12679      00
 12680              	.LASF73:
 12681 0a4f 6F73746F 		.ascii	"ostop\000"
 12681      7000
 12682              	.LASF100:
 12683 0a55 74696D65 		.ascii	"timeout\000"
 12683      6F757400 
 12684              	.LASF22:
 12685 0a5d 666C6F61 		.ascii	"float\000"
 12685      7400
 12686              	.LASF244:
 12687 0a63 70726576 		.ascii	"prev_processed_pedals\000"
 12687      5F70726F 
 12687      63657373 
 12687      65645F70 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 275


 12687      6564616C 
 12688              	.LASF230:
 12689 0a79 53504932 		.ascii	"SPI2started\000"
 12689      73746172 
 12689      74656400 
 12690              	.LASF218:
 12691 0a85 63757272 		.ascii	"currentPluckBuffer\000"
 12691      656E7450 
 12691      6C75636B 
 12691      42756666 
 12691      657200
 12692              	.LASF109:
 12693 0a98 73747269 		.ascii	"string\000"
 12693      6E6700
 12694              	.LASF122:
 12695 0a9f 73656E64 		.ascii	"sendMIDIPitchBend\000"
 12695      4D494449 
 12695      50697463 
 12695      6842656E 
 12695      6400
 12696              	.LASF13:
 12697 0ab1 756E7369 		.ascii	"unsigned int\000"
 12697      676E6564 
 12697      20696E74 
 12697      00
 12698              	.LASF151:
 12699 0abe 72656365 		.ascii	"receivingSysex\000"
 12699      6976696E 
 12699      67537973 
 12699      657800
 12700              	.LASF136:
 12701 0acd 6361626C 		.ascii	"cable\000"
 12701      6500
 12702              	.LASF59:
 12703 0ad3 56627573 		.ascii	"Vbus_function\000"
 12703      5F66756E 
 12703      6374696F 
 12703      6E00
 12704              	.LASF110:
 12705 0ae1 76656C6F 		.ascii	"velocity\000"
 12705      63697479 
 12705      00
 12706              	.LASF293:
 12707 0aea 63686563 		.ascii	"checkStatus\000"
 12707      6B537461 
 12707      74757300 
 12708              	.LASF25:
 12709 0af6 63797374 		.ascii	"cystatus\000"
 12709      61747573 
 12709      00
 12710              	.LASF227:
 12711 0aff 6261725F 		.ascii	"bar_index\000"
 12711      696E6465 
 12711      7800
 12712              	.LASF225:
 12713 0b09 6F666673 		.ascii	"offsetErrorCount\000"
 12713      65744572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 276


 12713      726F7243 
 12713      6F756E74 
 12713      00
 12714              	.LASF247:
 12715 0b1a 70726F63 		.ascii	"processed_volumePedal\000"
 12715      65737365 
 12715      645F766F 
 12715      6C756D65 
 12715      50656461 
 12716              	.LASF89:
 12717 0b30 74656D70 		.ascii	"tempMIDI\000"
 12717      4D494449 
 12717      00
 12718              	.LASF205:
 12719 0b39 72784275 		.ascii	"rxBufferBar\000"
 12719      66666572 
 12719      42617200 
 12720              	.LASF200:
 12721 0b45 74784368 		.ascii	"txChannel\000"
 12721      616E6E65 
 12721      6C00
 12722              	.LASF243:
 12723 0b4f 70726F63 		.ascii	"processed_pedals\000"
 12723      65737365 
 12723      645F7065 
 12723      64616C73 
 12723      00
 12724              	.LASF276:
 12725 0b60 6F70656E 		.ascii	"openStringFrequencies\000"
 12725      53747269 
 12725      6E674672 
 12725      65717565 
 12725      6E636965 
 12726              	.LASF188:
 12727 0b76 70726576 		.ascii	"prevAngle\000"
 12727      416E676C 
 12727      6500
 12728              	.LASF214:
 12729 0b80 706C7563 		.ascii	"pluck_index\000"
 12729      6B5F696E 
 12729      64657800 
 12730              	.LASF27:
 12731 0b8c 6C6F6E67 		.ascii	"long double\000"
 12731      20646F75 
 12731      626C6500 
 12732              	.LASF101:
 12733 0b98 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 12733      4D617374 
 12733      65725265 
 12733      6164426C 
 12733      6F636B69 
 12734              	.LASF219:
 12735 0baf 63757272 		.ascii	"currentBarBuffer\000"
 12735      656E7442 
 12735      61724275 
 12735      66666572 
 12735      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 277


 12736              	.LASF189:
 12737 0bc0 4144435F 		.ascii	"ADC_values\000"
 12737      76616C75 
 12737      657300
 12738              	.LASF65:
 12739 0bcb 66746F6D 		.ascii	"ftom\000"
 12739      00
 12740              	.LASF260:
 12741 0bd0 656E7465 		.ascii	"enterUp\000"
 12741      72557000 
 12742              	.LASF221:
 12743 0bd8 53504931 		.ascii	"SPI1ErrorCount\000"
 12743      4572726F 
 12743      72436F75 
 12743      6E7400
 12744              	.LASF191:
 12745 0be7 6D696469 		.ascii	"midiSent\000"
 12745      53656E74 
 12745      00
 12746              	.LASF137:
 12747 0bf0 6D696469 		.ascii	"midiMsg\000"
 12747      4D736700 
 12748              	.LASF289:
 12749 0bf8 63757272 		.ascii	"currentNeck\000"
 12749      656E744E 
 12749      65636B00 
 12750              	.LASF290:
 12751 0c04 65646974 		.ascii	"editMode\000"
 12751      4D6F6465 
 12751      00
 12752              	.LASF12:
 12753 0c0d 6C6F6E67 		.ascii	"long long unsigned int\000"
 12753      206C6F6E 
 12753      6720756E 
 12753      7369676E 
 12753      65642069 
 12754              	.LASF16:
 12755 0c24 75696E74 		.ascii	"uint16_t\000"
 12755      31365F74 
 12755      00
 12756              	.LASF133:
 12757 0c2d 74656D70 		.ascii	"tempHigh\000"
 12757      48696768 
 12757      00
 12758              	.LASF171:
 12759 0c36 74657374 		.ascii	"testVal\000"
 12759      56616C00 
 12760              	.LASF199:
 12761 0c3e 72783254 		.ascii	"rx2TD\000"
 12761      4400
 12762              	.LASF301:
 12763 0c44 62726561 		.ascii	"breakFloat\000"
 12763      6B466C6F 
 12763      617400
 12764              	.LASF294:
 12765 0c4f 63686563 		.ascii	"checkBase\000"
 12765      6B426173 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 278


 12765      6500
 12766              	.LASF58:
 12767 0c59 73706973 		.ascii	"spis_2_ss\000"
 12767      5F325F73 
 12767      7300
 12768              	.LASF268:
 12769 0c63 62757474 		.ascii	"button2Up\000"
 12769      6F6E3255 
 12769      7000
 12770              	.LASF210:
 12771 0c6d 616D4865 		.ascii	"amHere\000"
 12771      726500
 12772              	.LASF231:
 12773 0c74 61727261 		.ascii	"array\000"
 12773      7900
 12774              	.LASF90:
 12775 0c7a 7363616C 		.ascii	"scaledMIDI\000"
 12775      65644D49 
 12775      444900
 12776              	.LASF26:
 12777 0c85 72656738 		.ascii	"reg8\000"
 12777      00
 12778              	.LASF155:
 12779 0c8a 636F7065 		.ascii	"copedentNumberToWrite\000"
 12779      64656E74 
 12779      4E756D62 
 12779      6572546F 
 12779      57726974 
 12780              	.LASF55:
 12781 0ca0 6D617043 		.ascii	"mapCountNext\000"
 12781      6F756E74 
 12781      4E657874 
 12781      00
 12782              	.LASF216:
 12783 0cad 73706943 		.ascii	"spiCounter2\000"
 12783      6F756E74 
 12783      65723200 
 12784              	.LASF111:
 12785 0cb9 74656D70 		.ascii	"tempVel\000"
 12785      56656C00 
 12786              	.LASF173:
 12787 0cc1 75736241 		.ascii	"usbActivityCounter\000"
 12787      63746976 
 12787      69747943 
 12787      6F756E74 
 12787      657200
 12788              	.LASF241:
 12789 0cd4 64656164 		.ascii	"deadzone\000"
 12789      7A6F6E65 
 12789      00
 12790              	.LASF169:
 12791 0cdd 70617273 		.ascii	"parseThatMF\000"
 12791      65546861 
 12791      744D4600 
 12792              	.LASF3:
 12793 0ce9 5F5F696E 		.ascii	"__int16_t\000"
 12793      7431365F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 279


 12793      7400
 12794              	.LASF54:
 12795 0cf3 696E6974 		.ascii	"initialVals\000"
 12795      69616C56 
 12795      616C7300 
 12796              	.LASF176:
 12797 0cff 5553425F 		.ascii	"USB_active\000"
 12797      61637469 
 12797      766500
 12798              	.LASF295:
 12799 0d0a 5350495F 		.ascii	"SPI_errors\000"
 12799      6572726F 
 12799      727300
 12800              	.LASF149:
 12801 0d15 73797365 		.ascii	"sysexBuffer\000"
 12801      78427566 
 12801      66657200 
 12802              	.LASF161:
 12803 0d21 62756643 		.ascii	"bufCount\000"
 12803      6F756E74 
 12803      00
 12804              	.LASF220:
 12805 0d2a 706C7563 		.ascii	"pluckErrorCount\000"
 12805      6B457272 
 12805      6F72436F 
 12805      756E7400 
 12806              	.LASF129:
 12807 0d3a 74656D70 		.ascii	"tempChar\000"
 12807      43686172 
 12807      00
 12808              	.LASF284:
 12809 0d43 4F4C4544 		.ascii	"OLEDcount\000"
 12809      636F756E 
 12809      7400
 12810              	.LASF75:
 12811 0d4d 63616C69 		.ascii	"calibratePedals\000"
 12811      62726174 
 12811      65506564 
 12811      616C7300 
 12812              	.LASF271:
 12813 0d5d 70617463 		.ascii	"patchNum\000"
 12813      684E756D 
 12813      00
 12814              	.LASF288:
 12815 0d66 70656461 		.ascii	"pedals_float\000"
 12815      6C735F66 
 12815      6C6F6174 
 12815      00
 12816              	.LASF19:
 12817 0d73 75696E74 		.ascii	"uint8\000"
 12817      3800
 12818              	.LASF239:
 12819 0d79 70656461 		.ascii	"pedals_low\000"
 12819      6C735F6C 
 12819      6F7700
 12820              	.LASF213:
 12821 0d84 70726576 		.ascii	"prevOctave\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 280


 12821      4F637461 
 12821      766500
 12822              	.LASF4:
 12823 0d8f 73686F72 		.ascii	"short int\000"
 12823      7420696E 
 12823      7400
 12824              	.LASF159:
 12825 0d99 6D657373 		.ascii	"messageArraySize\000"
 12825      61676541 
 12825      72726179 
 12825      53697A65 
 12825      00
 12826              	.LASF248:
 12827 0daa 66726574 		.ascii	"fretMeasurements\000"
 12827      4D656173 
 12827      7572656D 
 12827      656E7473 
 12827      00
 12828              	.LASF99:
 12829 0dbb 6D6F6465 		.ascii	"mode\000"
 12829      00
 12830              	.LASF93:
 12831 0dc0 62756666 		.ascii	"bufferPointer\000"
 12831      6572506F 
 12831      696E7465 
 12831      7200
 12832              	.LASF282:
 12833 0dce 73747269 		.ascii	"stringMIDI\000"
 12833      6E674D49 
 12833      444900
 12834              	.LASF15:
 12835 0dd9 696E7431 		.ascii	"int16_t\000"
 12835      365F7400 
 12836              	.LASF130:
 12837 0de1 70656461 		.ascii	"pedalToWrite\000"
 12837      6C546F57 
 12837      72697465 
 12837      00
 12838              	.LASF32:
 12839 0dee 65657072 		.ascii	"eepromSize\000"
 12839      6F6D5369 
 12839      7A6500
 12840              	.LASF215:
 12841 0df9 616D4865 		.ascii	"amHere2\000"
 12841      72653200 
 12842              	.LASF277:
 12843 0e01 73747269 		.ascii	"stringMappedPositions\000"
 12843      6E674D61 
 12843      70706564 
 12843      506F7369 
 12843      74696F6E 
 12844              	.LASF185:
 12845 0e17 70726576 		.ascii	"previousButtons\000"
 12845      696F7573 
 12845      42757474 
 12845      6F6E7300 
 12846              	.LASF33:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 281


 12847 0e27 77656172 		.ascii	"wearLevelingFactor\000"
 12847      4C657665 
 12847      6C696E67 
 12847      46616374 
 12847      6F7200
 12848              	.LASF139:
 12849 0e3a 5553425F 		.ascii	"USB_midiInPointer\000"
 12849      6D696469 
 12849      496E506F 
 12849      696E7465 
 12849      7200
 12850              	.LASF291:
 12851 0e4c 63616C69 		.ascii	"calibrationMode\000"
 12851      62726174 
 12851      696F6E4D 
 12851      6F646500 
 12852              	.LASF97:
 12853 0e5c 69324341 		.ascii	"i2CAddr\000"
 12853      64647200 
 12854              	.LASF178:
 12855 0e64 696E4275 		.ascii	"inBuffer\000"
 12855      66666572 
 12855      00
 12856              	.LASF209:
 12857 0e6d 6D617853 		.ascii	"maxStrings\000"
 12857      7472696E 
 12857      677300
 12858              	.LASF80:
 12859 0e78 6C657474 		.ascii	"letter\000"
 12859      657200
 12860              	.LASF143:
 12861 0e7f 5553425F 		.ascii	"USB_midiOutBuffer\000"
 12861      6D696469 
 12861      4F757442 
 12861      75666665 
 12861      7200
 12862              	.LASF193:
 12863 0e91 6D616372 		.ascii	"macroKnobValues\000"
 12863      6F4B6E6F 
 12863      6256616C 
 12863      75657300 
 12864              	.LASF238:
 12865 0ea1 6932635F 		.ascii	"i2c_skipped\000"
 12865      736B6970 
 12865      70656400 
 12866              	.LASF223:
 12867 0ead 73706941 		.ascii	"spiAdjusted\000"
 12867      646A7573 
 12867      74656400 
 12868              	.LASF197:
 12869 0eb9 72783243 		.ascii	"rx2Channel\000"
 12869      68616E6E 
 12869      656C00
 12870              	.LASF140:
 12871 0ec4 5553425F 		.ascii	"USB_midi_in_ep\000"
 12871      6D696469 
 12871      5F696E5F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 282


 12871      657000
 12872              	.LASF95:
 12873 0ed3 446D6152 		.ascii	"DmaRxConfiguration\000"
 12873      78436F6E 
 12873      66696775 
 12873      72617469 
 12873      6F6E00
 12874              	.LASF18:
 12875 0ee6 75696E74 		.ascii	"uint32_t\000"
 12875      33325F74 
 12875      00
 12876              	.LASF270:
 12877 0eef 62757474 		.ascii	"button4Up\000"
 12877      6F6E3455 
 12877      7000
 12878              	.LASF175:
 12879 0ef9 70726576 		.ascii	"prevVBUS\000"
 12879      56425553 
 12879      00
 12880              	.LASF203:
 12881 0f02 72783354 		.ascii	"rx3TD\000"
 12881      4400
 12882              	.LASF174:
 12883 0f08 63757272 		.ascii	"currentVBUS\000"
 12883      656E7456 
 12883      42555300 
 12884              	.LASF264:
 12885 0f14 6F637434 		.ascii	"oct4Up\000"
 12885      557000
 12886              	.LASF302:
 12887 0f1b 63616C63 		.ascii	"calculatePedalRatios\000"
 12887      756C6174 
 12887      65506564 
 12887      616C5261 
 12887      74696F73 
 12888              	.LASF269:
 12889 0f30 62757474 		.ascii	"button3Up\000"
 12889      6F6E3355 
 12889      7000
 12890              	.LASF6:
 12891 0f3a 73686F72 		.ascii	"short unsigned int\000"
 12891      7420756E 
 12891      7369676E 
 12891      65642069 
 12891      6E7400
 12892              	.LASF56:
 12893 0f4d 6D617070 		.ascii	"mapping\000"
 12893      696E6700 
 12894              	.LASF112:
 12895 0f55 6E6F7465 		.ascii	"noteToSend\000"
 12895      546F5365 
 12895      6E6400
 12896              	.LASF201:
 12897 0f60 74785444 		.ascii	"txTD\000"
 12897      00
 12898              	.LASF7:
 12899 0f65 5F5F696E 		.ascii	"__int32_t\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccxWdeSu.s 			page 283


 12899      7433325F 
 12899      7400
 12900              	.LASF208:
 12901 0f6f 70726576 		.ascii	"prevBar\000"
 12901      42617200 
 12902              	.LASF180:
 12903 0f77 6D79496E 		.ascii	"myInputArray\000"
 12903      70757441 
 12903      72726179 
 12903      00
 12904              	.LASF64:
 12905 0f84 6D746F66 		.ascii	"mtof\000"
 12905      00
 12906              	.LASF275:
 12907 0f89 70656461 		.ascii	"pedals\000"
 12907      6C7300
 12908              	.LASF83:
 12909 0f90 74656D70 		.ascii	"tempIntHigh\000"
 12909      496E7448 
 12909      69676800 
 12910              	.LASF262:
 12911 0f9c 65646974 		.ascii	"editUp\000"
 12911      557000
 12912              	.LASF31:
 12913 0fa3 6C617374 		.ascii	"lastWrRowAddr\000"
 12913      5772526F 
 12913      77416464 
 12913      7200
 12914              	.LASF78:
 12915 0fb1 6D794172 		.ascii	"myArrayCounter\000"
 12915      72617943 
 12915      6F756E74 
 12915      657200
 12916              	.LASF279:
 12917 0fc0 73747269 		.ascii	"stringFrequencies\000"
 12917      6E674672 
 12917      65717565 
 12917      6E636965 
 12917      7300
 12918              	.LASF20:
 12919 0fd2 75696E74 		.ascii	"uint16\000"
 12919      313600
 12920              	.LASF179:
 12921 0fd9 6D794172 		.ascii	"myArray\000"
 12921      72617900 
 12922              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
