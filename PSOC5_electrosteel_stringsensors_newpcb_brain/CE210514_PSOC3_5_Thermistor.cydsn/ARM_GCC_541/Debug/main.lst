ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	Decoder_1_Enabled,1,1
  20              		.global	versionNumber
  21              		.section	.rodata
  22              		.align	2
  23              		.type	versionNumber, %object
  24              		.size	versionNumber, 4
  25              	versionNumber:
  26 0000 3333933F 		.word	1066611507
  27              		.comm	prevLastBufferBegin,8,4
  28              		.comm	lastBufferBegin,8,4
  29              		.global	masterTimer
  30              		.bss
  31              		.align	2
  32              		.type	masterTimer, %object
  33              		.size	masterTimer, 4
  34              	masterTimer:
  35 0000 00000000 		.space	4
  36              		.global	lastParseCall
  37              		.align	2
  38              		.type	lastParseCall, %object
  39              		.size	lastParseCall, 4
  40              	lastParseCall:
  41 0004 00000000 		.space	4
  42              		.global	prevLastParseCall
  43              		.align	2
  44              		.type	prevLastParseCall, %object
  45              		.size	prevLastParseCall, 4
  46              	prevLastParseCall:
  47 0008 00000000 		.space	4
  48              		.global	lastBufferStuff
  49              		.align	2
  50              		.type	lastBufferStuff, %object
  51              		.size	lastBufferStuff, 4
  52              	lastBufferStuff:
  53 000c 00000000 		.space	4
  54              		.global	lastEndReceive
  55              		.align	2
  56              		.type	lastEndReceive, %object
  57              		.size	lastEndReceive, 4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 2


  58              	lastEndReceive:
  59 0010 00000000 		.space	4
  60              		.comm	sysexBuffer,2048,4
  61              		.global	sysexWritePointer
  62              		.align	2
  63              		.type	sysexWritePointer, %object
  64              		.size	sysexWritePointer, 4
  65              	sysexWritePointer:
  66 0014 00000000 		.space	4
  67              		.global	sysexReadPointer
  68              		.align	2
  69              		.type	sysexReadPointer, %object
  70              		.size	sysexReadPointer, 4
  71              	sysexReadPointer:
  72 0018 00000000 		.space	4
  73              		.global	sysexReset
  74              		.data
  75              		.type	sysexReset, %object
  76              		.size	sysexReset, 1
  77              	sysexReset:
  78 0000 01       		.byte	1
  79              		.comm	sysexMessageStartPoints,1024,4
  80              		.global	sysexMessageStartPointsWritePosition
  81              		.bss
  82              		.type	sysexMessageStartPointsWritePosition, %object
  83              		.size	sysexMessageStartPointsWritePosition, 1
  84              	sysexMessageStartPointsWritePosition:
  85 001c 00       		.space	1
  86              		.global	sysexMessageStartPointsReadPosition
  87              		.type	sysexMessageStartPointsReadPosition, %object
  88              		.size	sysexMessageStartPointsReadPosition, 1
  89              	sysexMessageStartPointsReadPosition:
  90 001d 00       		.space	1
  91              		.global	receivingSysex
  92              		.type	receivingSysex, %object
  93              		.size	receivingSysex, 1
  94              	receivingSysex:
  95 001e 00       		.space	1
  96              		.global	parsingSysex
  97              		.type	parsingSysex, %object
  98              		.size	parsingSysex, 1
  99              	parsingSysex:
 100 001f 00       		.space	1
 101              		.comm	presetArray,2048,4
 102              		.global	presetNumberToWrite
 103              		.type	presetNumberToWrite, %object
 104              		.size	presetNumberToWrite, 1
 105              	presetNumberToWrite:
 106 0020 00       		.space	1
 107              		.global	copedentNumberToWrite
 108              		.type	copedentNumberToWrite, %object
 109              		.size	copedentNumberToWrite, 1
 110              	copedentNumberToWrite:
 111 0021 00       		.space	1
 112              		.global	sendMessageEnd
 113              		.type	sendMessageEnd, %object
 114              		.size	sendMessageEnd, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 3


 115              	sendMessageEnd:
 116 0022 00       		.space	1
 117              		.global	sendSingleParamUpdate
 118              		.type	sendSingleParamUpdate, %object
 119              		.size	sendSingleParamUpdate, 1
 120              	sendSingleParamUpdate:
 121 0023 00       		.space	1
 122              		.global	singleParamToUpdateHigh
 123              		.type	singleParamToUpdateHigh, %object
 124              		.size	singleParamToUpdateHigh, 1
 125              	singleParamToUpdateHigh:
 126 0024 00       		.space	1
 127              		.global	singleParamToUpdateLow
 128              		.type	singleParamToUpdateLow, %object
 129              		.size	singleParamToUpdateLow, 1
 130              	singleParamToUpdateLow:
 131 0025 00       		.space	1
 132              		.global	singleParamValueHigh
 133              		.type	singleParamValueHigh, %object
 134              		.size	singleParamValueHigh, 1
 135              	singleParamValueHigh:
 136 0026 00       		.space	1
 137              		.global	singleParamValueLow
 138              		.type	singleParamValueLow, %object
 139              		.size	singleParamValueLow, 1
 140              	singleParamValueLow:
 141 0027 00       		.space	1
 142              		.global	sendMappingChangeUpdate
 143              		.type	sendMappingChangeUpdate, %object
 144              		.size	sendMappingChangeUpdate, 1
 145              	sendMappingChangeUpdate:
 146 0028 00       		.space	1
 147              		.global	presetNumberToStore
 148              		.type	presetNumberToStore, %object
 149              		.size	presetNumberToStore, 1
 150              	presetNumberToStore:
 151 0029 00       		.space	1
 152              		.global	transposeSemitones
 153              		.type	transposeSemitones, %object
 154              		.size	transposeSemitones, 1
 155              	transposeSemitones:
 156 002a 00       		.space	1
 157              		.global	transposeCents
 158              		.type	transposeCents, %object
 159              		.size	transposeCents, 1
 160              	transposeCents:
 161 002b 00       		.space	1
 162              		.global	transposeFloat
 163              		.align	2
 164              		.type	transposeFloat, %object
 165              		.size	transposeFloat, 4
 166              	transposeFloat:
 167 002c 00000000 		.space	4
 168              		.global	volumeInt
 169              		.type	volumeInt, %object
 170              		.size	volumeInt, 1
 171              	volumeInt:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 4


 172 0030 00       		.space	1
 173              		.global	volumeWaitingToSend
 174              		.type	volumeWaitingToSend, %object
 175              		.size	volumeWaitingToSend, 1
 176              	volumeWaitingToSend:
 177 0031 00       		.space	1
 178              		.global	midiSendOn
 179              		.type	midiSendOn, %object
 180              		.size	midiSendOn, 1
 181              	midiSendOn:
 182 0032 00       		.space	1
 183              		.global	midiBarSendOn
 184              		.type	midiBarSendOn, %object
 185              		.size	midiBarSendOn, 1
 186              	midiBarSendOn:
 187 0033 00       		.space	1
 188              		.global	midiDebugSendOn
 189              		.type	midiDebugSendOn, %object
 190              		.size	midiDebugSendOn, 1
 191              	midiDebugSendOn:
 192 0034 00       		.space	1
 193              		.global	pitchSmoothing
 194              		.type	pitchSmoothing, %object
 195              		.size	pitchSmoothing, 1
 196              	pitchSmoothing:
 197 0035 00       		.space	1
 198              		.global	controlSmoothing
 199              		.type	controlSmoothing, %object
 200              		.size	controlSmoothing, 1
 201              	controlSmoothing:
 202 0036 00       		.space	1
 203              		.global	octaveAction
 204              		.type	octaveAction, %object
 205              		.size	octaveAction, 1
 206              	octaveAction:
 207 0037 00       		.space	1
 208              		.global	stringRepresentation
 209              		.data
 210 0001 000000   		.align	2
 211              		.type	stringRepresentation, %object
 212              		.size	stringRepresentation, 2
 213              	stringRepresentation:
 214 0004 03       		.byte	3
 215 0005 08       		.byte	8
 216              		.global	presetArraySection
 217              		.bss
 218              		.type	presetArraySection, %object
 219              		.size	presetArraySection, 1
 220              	presetArraySection:
 221 0038 00       		.space	1
 222              		.comm	sendLocalPresetStoreCommand,1,1
 223              		.global	messageArraySendCount
 224 0039 00       		.align	1
 225              		.type	messageArraySendCount, %object
 226              		.size	messageArraySendCount, 2
 227              	messageArraySendCount:
 228 003a 0000     		.space	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 5


 229              		.global	messageArraySize
 230              		.align	1
 231              		.type	messageArraySize, %object
 232              		.size	messageArraySize, 2
 233              	messageArraySize:
 234 003c 0000     		.space	2
 235              		.global	sysexMessageInProgress
 236              		.type	sysexMessageInProgress, %object
 237              		.size	sysexMessageInProgress, 1
 238              	sysexMessageInProgress:
 239 003e 00       		.space	1
 240              		.global	pedalHiRes
 241              		.type	pedalHiRes, %object
 242              		.size	pedalHiRes, 1
 243              	pedalHiRes:
 244 003f 00       		.space	1
 245              		.global	bufCount
 246              		.type	bufCount, %object
 247              		.size	bufCount, 1
 248              	bufCount:
 249 0040 00       		.space	1
 250              		.global	sendingMessage
 251              		.type	sendingMessage, %object
 252              		.size	sendingMessage, 1
 253              	sendingMessage:
 254 0041 00       		.space	1
 255              		.global	sendKnobs
 256              		.type	sendKnobs, %object
 257              		.size	sendKnobs, 1
 258              	sendKnobs:
 259 0042 00       		.space	1
 260              		.global	currentFloat
 261 0043 00       		.align	2
 262              		.type	currentFloat, %object
 263              		.size	currentFloat, 4
 264              	currentFloat:
 265 0044 00000000 		.space	4
 266              		.global	mapCount
 267              		.align	2
 268              		.type	mapCount, %object
 269              		.size	mapCount, 4
 270              	mapCount:
 271 0048 00000000 		.space	4
 272              		.global	valsCount
 273              		.align	1
 274              		.type	valsCount, %object
 275              		.size	valsCount, 2
 276              	valsCount:
 277 004c 0000     		.space	2
 278              		.global	mapCountExpectation
 279              		.align	1
 280              		.type	mapCountExpectation, %object
 281              		.size	mapCountExpectation, 2
 282              	mapCountExpectation:
 283 004e 0000     		.space	2
 284              		.global	numMappings
 285              		.align	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 6


 286              		.type	numMappings, %object
 287              		.size	numMappings, 2
 288              	numMappings:
 289 0050 0000     		.space	2
 290              		.global	parseThatMF
 291              		.type	parseThatMF, %object
 292              		.size	parseThatMF, 1
 293              	parseThatMF:
 294 0052 00       		.space	1
 295              		.global	valCheck
 296 0053 00       		.align	2
 297              		.type	valCheck, %object
 298              		.size	valCheck, 4
 299              	valCheck:
 300 0054 00000000 		.space	4
 301              		.global	testVal
 302              		.align	2
 303              		.type	testVal, %object
 304              		.size	testVal, 4
 305              	testVal:
 306 0058 00000000 		.space	4
 307              		.global	sendFirmwareUpdateRequest
 308              		.type	sendFirmwareUpdateRequest, %object
 309              		.size	sendFirmwareUpdateRequest, 1
 310              	sendFirmwareUpdateRequest:
 311 005c 00       		.space	1
 312              		.global	numStrings
 313              		.data
 314              		.type	numStrings, %object
 315              		.size	numStrings, 1
 316              	numStrings:
 317 0006 0A       		.byte	10
 318              		.global	usbActivityCounter
 319              		.bss
 320              		.type	usbActivityCounter, %object
 321              		.size	usbActivityCounter, 1
 322              	usbActivityCounter:
 323 005d 00       		.space	1
 324              		.comm	midiMsg,4,4
 325              		.global	currentVBUS
 326              		.type	currentVBUS, %object
 327              		.size	currentVBUS, 1
 328              	currentVBUS:
 329 005e 00       		.space	1
 330              		.global	prevVBUS
 331              		.type	prevVBUS, %object
 332              		.size	prevVBUS, 1
 333              	prevVBUS:
 334 005f 00       		.space	1
 335              		.global	USB_active
 336              		.type	USB_active, %object
 337              		.size	USB_active, 1
 338              	USB_active:
 339 0060 00       		.space	1
 340              		.global	USB_check_flag
 341              		.type	USB_check_flag, %object
 342              		.size	USB_check_flag, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 7


 343              	USB_check_flag:
 344 0061 00       		.space	1
 345              		.comm	mappingArray,6,4
 346              		.comm	inBuffer,32,4
 347              		.comm	myArray,32,4
 348              		.comm	returnedData,32,4
 349              		.global	octave
 350              		.data
 351 0007 00       		.align	2
 352              		.type	octave, %object
 353              		.size	octave, 4
 354              	octave:
 355 0008 05000000 		.word	5
 356              		.comm	angle,20,4
 357              		.comm	prevAngle,20,4
 358              		.comm	ADC_values,8,4
 359              		.global	rawAngle
 360              		.bss
 361              		.align	1
 362              		.type	rawAngle, %object
 363              		.size	rawAngle, 2
 364              	rawAngle:
 365 0062 0000     		.space	2
 366              		.global	midiSent
 367              		.align	1
 368              		.type	midiSent, %object
 369              		.size	midiSent, 2
 370              	midiSent:
 371 0064 0000     		.space	2
 372              		.global	midiOverflow
 373              		.align	1
 374              		.type	midiOverflow, %object
 375              		.size	midiOverflow, 2
 376              	midiOverflow:
 377 0066 0000     		.space	2
 378              		.comm	macroKnobValues,16,4
 379              		.global	currentCopedent
 380              		.type	currentCopedent, %object
 381              		.size	currentCopedent, 1
 382              	currentCopedent:
 383 0068 00       		.space	1
 384              		.global	necks
 385              		.data
 386              		.align	2
 387              		.type	necks, %object
 388              		.size	necks, 2
 389              	necks:
 390 000c 00       		.byte	0
 391 000d 01       		.byte	1
 392              		.global	neckPreset
 393 000e 0000     		.align	2
 394              		.type	neckPreset, %object
 395              		.size	neckPreset, 2
 396              	neckPreset:
 397 0010 00       		.byte	0
 398 0011 01       		.byte	1
 399              		.comm	neckPresetsByte,1,1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 8


 400              		.comm	rx1Channel,1,1
 401              		.comm	rx2Channel,1,32
 402              		.comm	rx1TD,2,4
 403              		.comm	rx2TD,2,32
 404              		.comm	txChannel,1,32
 405              		.comm	txTD,1,32
 406              		.comm	rx3Channel,1,32
 407              		.comm	rx3TD,1,32
 408              		.comm	rxBufferPluck,64,32
 409              		.comm	rxBufferBar,16,32
 410              		.comm	strings,24,4
 411              		.comm	prevStrings,24,4
 412              		.comm	bar,4,4
 413              		.comm	prevBar,4,4
 414              		.comm	maxStrings,24,4
 415              		.global	amHere
 416              		.bss
 417              		.type	amHere, %object
 418              		.size	amHere, 1
 419              	amHere:
 420 0069 00       		.space	1
 421              		.global	spiCounter
 422              		.type	spiCounter, %object
 423              		.size	spiCounter, 1
 424              	spiCounter:
 425 006a 00       		.space	1
 426              		.global	newDataFlag
 427              		.type	newDataFlag, %object
 428              		.size	newDataFlag, 1
 429              	newDataFlag:
 430 006b 00       		.space	1
 431              		.global	prevOctave
 432              		.align	2
 433              		.type	prevOctave, %object
 434              		.size	prevOctave, 4
 435              	prevOctave:
 436 006c 00000000 		.space	4
 437              		.global	pluck_index
 438              		.type	pluck_index, %object
 439              		.size	pluck_index, 1
 440              	pluck_index:
 441 0070 00       		.space	1
 442              		.global	amHere2
 443              		.type	amHere2, %object
 444              		.size	amHere2, 1
 445              	amHere2:
 446 0071 00       		.space	1
 447              		.global	spiCounter2
 448              		.type	spiCounter2, %object
 449              		.size	spiCounter2, 1
 450              	spiCounter2:
 451 0072 00       		.space	1
 452              		.global	newDataFlag2
 453              		.type	newDataFlag2, %object
 454              		.size	newDataFlag2, 1
 455              	newDataFlag2:
 456 0073 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 9


 457              		.global	currentPluckBuffer
 458              		.type	currentPluckBuffer, %object
 459              		.size	currentPluckBuffer, 1
 460              	currentPluckBuffer:
 461 0074 00       		.space	1
 462              		.global	currentBarBuffer
 463              		.type	currentBarBuffer, %object
 464              		.size	currentBarBuffer, 1
 465              	currentBarBuffer:
 466 0075 00       		.space	1
 467              		.global	pluckErrorCount
 468              		.type	pluckErrorCount, %object
 469              		.size	pluckErrorCount, 1
 470              	pluckErrorCount:
 471 0076 00       		.space	1
 472              		.global	SPI1ErrorCount
 473 0077 00       		.align	1
 474              		.type	SPI1ErrorCount, %object
 475              		.size	SPI1ErrorCount, 2
 476              	SPI1ErrorCount:
 477 0078 0000     		.space	2
 478              		.global	inputData
 479              		.type	inputData, %object
 480              		.size	inputData, 1
 481              	inputData:
 482 007a 00       		.space	1
 483              		.global	spiAdjusted
 484              		.type	spiAdjusted, %object
 485              		.size	spiAdjusted, 1
 486              	spiAdjusted:
 487 007b 00       		.space	1
 488              		.global	mySpiCounter
 489              		.type	mySpiCounter, %object
 490              		.size	mySpiCounter, 1
 491              	mySpiCounter:
 492 007c 00       		.space	1
 493              		.global	offsetErrorCount
 494 007d 00       		.align	1
 495              		.type	offsetErrorCount, %object
 496              		.size	offsetErrorCount, 2
 497              	offsetErrorCount:
 498 007e 0000     		.space	2
 499              		.global	SPI2errorflag
 500              		.type	SPI2errorflag, %object
 501              		.size	SPI2errorflag, 1
 502              	SPI2errorflag:
 503 0080 00       		.space	1
 504              		.comm	knobs,4,4
 505              		.comm	prevKnobs,4,4
 506              		.comm	knobs7bit,4,4
 507              		.comm	prevKnobs7bit,4,4
 508              		.global	u7bit_volumePedal
 509              		.type	u7bit_volumePedal, %object
 510              		.size	u7bit_volumePedal, 1
 511              	u7bit_volumePedal:
 512 0081 00       		.space	1
 513              		.global	prev_7bit_volumePedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 10


 514              		.type	prev_7bit_volumePedal, %object
 515              		.size	prev_7bit_volumePedal, 1
 516              	prev_7bit_volumePedal:
 517 0082 00       		.space	1
 518              		.global	SPI2started
 519              		.type	SPI2started, %object
 520              		.size	SPI2started, 1
 521              	SPI2started:
 522 0083 00       		.space	1
 523              		.global	whichMacro
 524              		.type	whichMacro, %object
 525              		.size	whichMacro, 1
 526              	whichMacro:
 527 0084 00       		.space	1
 528              		.comm	macroKnobValues7bit,16,4
 529              		.comm	prevMacroKnobValues7bit,16,4
 530              		.comm	prevMacroKnobValues,32,4
 531              		.comm	knobFrozen,16,4
 532              		.global	knobPanelLightActive
 533              		.type	knobPanelLightActive, %object
 534              		.size	knobPanelLightActive, 1
 535              	knobPanelLightActive:
 536 0085 00       		.space	1
 537 0086 0000     		.align	2
 538              	eepromArray:
 539 0088 0000     		.space	2
 540              		.global	array
 541 008a 0000     		.align	2
 542              		.type	array, %object
 543              		.size	array, 2
 544              	array:
 545 008c 0000     		.space	2
 546              		.comm	eepromReturnValue,1,1
 547              		.global	Em_EEPROM_em_EepromStorage
 548              		.section	.rodata
 549 0004 00000000 		.align	8
 549      00000000 
 549      00000000 
 549      00000000 
 549      00000000 
 550              		.type	Em_EEPROM_em_EepromStorage, %object
 551              		.size	Em_EEPROM_em_EepromStorage, 1024
 552              	Em_EEPROM_em_EepromStorage:
 553 0100 00000000 		.space	1024
 553      00000000 
 553      00000000 
 553      00000000 
 553      00000000 
 554              		.comm	eeprom_cnt,1,1
 555              		.comm	status,4,4
 556              		.comm	ptr,4,4
 557              		.global	barCount
 558              		.bss
 559 008e 0000     		.align	2
 560              		.type	barCount, %object
 561              		.size	barCount, 4
 562              	barCount:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 11


 563 0090 00000000 		.space	4
 564              		.comm	I2Cbuff1,256,4
 565              		.comm	I2Cbuff2,16,4
 566              		.global	send_it
 567              		.type	send_it, %object
 568              		.size	send_it, 1
 569              	send_it:
 570 0094 00       		.space	1
 571              		.global	mux_states
 572              		.data
 573 0012 0000     		.align	2
 574              		.type	mux_states, %object
 575              		.size	mux_states, 24
 576              	mux_states:
 577 0014 05       		.byte	5
 578 0015 00       		.byte	0
 579 0016 05       		.byte	5
 580 0017 01       		.byte	1
 581 0018 05       		.byte	5
 582 0019 02       		.byte	2
 583 001a 05       		.byte	5
 584 001b 03       		.byte	3
 585 001c 05       		.byte	5
 586 001d 04       		.byte	4
 587 001e 00       		.byte	0
 588 001f 00       		.byte	0
 589 0020 01       		.byte	1
 590 0021 00       		.byte	0
 591 0022 03       		.byte	3
 592 0023 00       		.byte	0
 593 0024 04       		.byte	4
 594 0025 00       		.byte	0
 595 0026 02       		.byte	2
 596 0027 00       		.byte	0
 597 0028 05       		.byte	5
 598 0029 05       		.byte	5
 599 002a 06       		.byte	6
 600 002b 00       		.byte	0
 601              		.global	i2c_skipped
 602              		.bss
 603 0095 000000   		.align	2
 604              		.type	i2c_skipped, %object
 605              		.size	i2c_skipped, 12
 606              	i2c_skipped:
 607 0098 00000000 		.space	12
 607      00000000 
 607      00000000 
 608              		.global	pedals_low
 609              		.data
 610              		.align	2
 611              		.type	pedals_low, %object
 612              		.size	pedals_low, 20
 613              	pedals_low:
 614 002c 830A     		.short	2691
 615 002e 0109     		.short	2305
 616 0030 9909     		.short	2457
 617 0032 0E02     		.short	526
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 12


 618 0034 9A0E     		.short	3738
 619 0036 0309     		.short	2307
 620 0038 C60B     		.short	3014
 621 003a 8E08     		.short	2190
 622 003c E90A     		.short	2793
 623 003e 2605     		.short	1318
 624              		.global	pedals_high
 625              		.align	2
 626              		.type	pedals_high, %object
 627              		.size	pedals_high, 20
 628              	pedals_high:
 629 0040 ED0A     		.short	2797
 630 0042 6509     		.short	2405
 631 0044 140A     		.short	2580
 632 0046 8702     		.short	647
 633 0048 0E0F     		.short	3854
 634 004a 9D09     		.short	2461
 635 004c 450C     		.short	3141
 636 004e 3109     		.short	2353
 637 0050 760B     		.short	2934
 638 0052 E005     		.short	1504
 639              		.global	pedals_lowWithDeadZone
 640              		.align	2
 641              		.type	pedals_lowWithDeadZone, %object
 642              		.size	pedals_lowWithDeadZone, 20
 643              	pedals_lowWithDeadZone:
 644 0054 830A     		.short	2691
 645 0056 0109     		.short	2305
 646 0058 9909     		.short	2457
 647 005a 0E02     		.short	526
 648 005c 9A0E     		.short	3738
 649 005e 0309     		.short	2307
 650 0060 C60B     		.short	3014
 651 0062 8E08     		.short	2190
 652 0064 E90A     		.short	2793
 653 0066 2605     		.short	1318
 654              		.global	pedals_highWithDeadZone
 655              		.align	2
 656              		.type	pedals_highWithDeadZone, %object
 657              		.size	pedals_highWithDeadZone, 20
 658              	pedals_highWithDeadZone:
 659 0068 ED0A     		.short	2797
 660 006a 6509     		.short	2405
 661 006c 140A     		.short	2580
 662 006e 8702     		.short	647
 663 0070 0E0F     		.short	3854
 664 0072 9D09     		.short	2461
 665 0074 450C     		.short	3141
 666 0076 3109     		.short	2353
 667 0078 760B     		.short	2934
 668 007a E005     		.short	1504
 669              		.global	deadZone
 670              		.type	deadZone, %object
 671              		.size	deadZone, 1
 672              	deadZone:
 673 007c 33       		.byte	51
 674              		.global	volumePedal
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 13


 675 007d 00       		.align	1
 676              		.type	volumePedal, %object
 677              		.size	volumePedal, 2
 678              	volumePedal:
 679 007e FF0F     		.short	4095
 680              		.comm	processed_pedals,20,4
 681              		.comm	prev_processed_pedals,20,4
 682              		.comm	pedals8bit,10,4
 683              		.comm	pedals7bit,10,4
 684              		.comm	prevPedals7bit,10,4
 685              		.comm	prev_processed_volumePedal,2,2
 686              		.comm	processed_volumePedal,2,2
 687              		.global	sliderBugOn
 688              		.bss
 689              		.type	sliderBugOn, %object
 690              		.size	sliderBugOn, 1
 691              	sliderBugOn:
 692 00a4 00       		.space	1
 693              		.comm	fretMeasurements,48,4
 694              		.global	currentPresetSelection
 695              		.type	currentPresetSelection, %object
 696              		.size	currentPresetSelection, 1
 697              	currentPresetSelection:
 698 00a5 00       		.space	1
 699              		.comm	presetNamesArray,896,4
 700              		.global	presetNumberToLoad
 701              		.type	presetNumberToLoad, %object
 702              		.size	presetNumberToLoad, 1
 703              	presetNumberToLoad:
 704 00a6 00       		.space	1
 705              		.global	presetLoadedResponse
 706              		.data
 707              		.align	2
 708              		.type	presetLoadedResponse, %object
 709              		.size	presetLoadedResponse, 2
 710              	presetLoadedResponse:
 711 0080 FF       		.byte	-1
 712 0081 00       		.byte	0
 713              		.comm	macroNamesArray,9216,4
 714              		.comm	controlNamesArray,2560,4
 715              		.global	fretScalingInMIDI
 716 0082 0000     		.align	2
 717              		.type	fretScalingInMIDI, %object
 718              		.size	fretScalingInMIDI, 48
 719              	fretScalingInMIDI:
 720 0084 00000000 		.word	0
 721 0088 0000803F 		.word	1065353216
 722 008c 00004040 		.word	1077936128
 723 0090 0000A040 		.word	1084227584
 724 0094 0000E040 		.word	1088421888
 725 0098 00001041 		.word	1091567616
 726 009c 00004041 		.word	1094713344
 727 00a0 00007041 		.word	1097859072
 728 00a4 00008841 		.word	1099431936
 729 00a8 00009841 		.word	1100480512
 730 00ac 0000A841 		.word	1101529088
 731 00b0 0000C041 		.word	1103101952
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 14


 732              		.global	fretScalingInRatios
 733              		.align	2
 734              		.type	fretScalingInRatios, %object
 735              		.size	fretScalingInRatios, 48
 736              	fretScalingInRatios:
 737 00b4 0000803F 		.word	1065353216
 738 00b8 809C873F 		.word	1065852032
 739 00bc F537983F 		.word	1066940405
 740 00c0 01DCAA3F 		.word	1068162049
 741 00c4 85C8BF3F 		.word	1069533317
 742 00c8 F244D73F 		.word	1071072498
 743 00cc 00000040 		.word	1073741824
 744 00d0 F5371840 		.word	1075329013
 745 00d4 01DC2A40 		.word	1076550657
 746 00d8 85C83F40 		.word	1077921925
 747 00dc F2445740 		.word	1079461106
 748 00e0 00008040 		.word	1082130432
 749              		.comm	pedalRatios,40,4
 750              		.global	last_mux
 751              		.type	last_mux, %object
 752              		.size	last_mux, 1
 753              	last_mux:
 754 00e4 01       		.byte	1
 755              		.global	main_counter
 756              		.bss
 757              		.type	main_counter, %object
 758              		.size	main_counter, 1
 759              	main_counter:
 760 00a7 00       		.space	1
 761              		.global	dualSlider
 762              		.type	dualSlider, %object
 763              		.size	dualSlider, 1
 764              	dualSlider:
 765 00a8 00       		.space	1
 766              		.global	voice
 767              		.type	voice, %object
 768              		.size	voice, 1
 769              	voice:
 770 00a9 00       		.space	1
 771              		.global	patchNum
 772              		.type	patchNum, %object
 773              		.size	patchNum, 1
 774              	patchNum:
 775 00aa 00       		.space	1
 776              		.global	pedal_inverted
 777 00ab 00       		.align	2
 778              		.type	pedal_inverted, %object
 779              		.size	pedal_inverted, 10
 780              	pedal_inverted:
 781 00ac 00000000 		.space	10
 781      00000000 
 781      0000
 782              		.global	traditionalPedalAdd
 783              		.type	traditionalPedalAdd, %object
 784              		.size	traditionalPedalAdd, 1
 785              	traditionalPedalAdd:
 786 00b6 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 15


 787              		.global	copedentMapping
 788              		.data
 789 00e5 000000   		.align	2
 790              		.type	copedentMapping, %object
 791              		.size	copedentMapping, 10
 792              	copedentMapping:
 793 00e8 04       		.byte	4
 794 00e9 05       		.byte	5
 795 00ea 06       		.byte	6
 796 00eb 07       		.byte	7
 797 00ec 08       		.byte	8
 798 00ed 0A       		.byte	10
 799 00ee 09       		.byte	9
 800 00ef 03       		.byte	3
 801 00f0 01       		.byte	1
 802 00f1 02       		.byte	2
 803              		.comm	copedent,3696,4
 804              		.comm	copedentNamesArray,70,4
 805              		.comm	prevStringPitchBend,48,4
 806              		.comm	pedals,480,4
 807              		.global	pedal_cc_assignments
 808 00f2 0000     		.align	2
 809              		.type	pedal_cc_assignments, %object
 810              		.size	pedal_cc_assignments, 10
 811              	pedal_cc_assignments:
 812 00f4 00       		.byte	0
 813 00f5 01       		.byte	1
 814 00f6 02       		.byte	2
 815 00f7 03       		.byte	3
 816 00f8 04       		.byte	4
 817 00f9 08       		.byte	8
 818 00fa 09       		.byte	9
 819 00fb 07       		.byte	7
 820 00fc 06       		.byte	6
 821 00fd 05       		.byte	5
 822              		.comm	openStringFrequencies,48,4
 823              		.comm	stringMappedPositionsInRatios,8,4
 824              		.comm	stringMappedPositionsInRatiosInt,4,4
 825              		.comm	stringMappedPositionsInMIDI,8,4
 826              		.comm	barMidiOuterStrings,4,4
 827              		.comm	stringFrequencies,48,4
 828              		.comm	stringOctave,48,4
 829              		.comm	stringPitch,48,4
 830              		.comm	stringMIDI,48,4
 831              		.comm	openStringMIDI_Int,48,4
 832              		.global	mainOLEDWaitingToSend
 833              		.bss
 834              		.type	mainOLEDWaitingToSend, %object
 835              		.size	mainOLEDWaitingToSend, 1
 836              	mainOLEDWaitingToSend:
 837 00b7 00       		.space	1
 838              		.global	macroOLEDWaitingToSend
 839              		.type	macroOLEDWaitingToSend, %object
 840              		.size	macroOLEDWaitingToSend, 1
 841              	macroOLEDWaitingToSend:
 842 00b8 00       		.space	1
 843              		.comm	presetAlreadyDisplayed,64,4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 16


 844              		.global	currentNeck
 845              		.type	currentNeck, %object
 846              		.size	currentNeck, 1
 847              	currentNeck:
 848 00b9 00       		.space	1
 849              		.global	neckByte
 850              		.type	neckByte, %object
 851              		.size	neckByte, 1
 852              	neckByte:
 853 00ba 00       		.space	1
 854              		.global	editMode
 855              		.type	editMode, %object
 856              		.size	editMode, 1
 857              	editMode:
 858 00bb 00       		.space	1
 859              		.global	leverCalibrationMode
 860              		.type	leverCalibrationMode, %object
 861              		.size	leverCalibrationMode, 1
 862              	leverCalibrationMode:
 863 00bc 00       		.space	1
 864              		.global	fretCalibrationMode
 865              		.type	fretCalibrationMode, %object
 866              		.size	fretCalibrationMode, 1
 867              	fretCalibrationMode:
 868 00bd 00       		.space	1
 869              		.global	presetWhenMacroWriteStarted
 870              		.type	presetWhenMacroWriteStarted, %object
 871              		.size	presetWhenMacroWriteStarted, 1
 872              	presetWhenMacroWriteStarted:
 873 00be 00       		.space	1
 874              		.global	macroPageWhenMacroWriteStarted
 875              		.type	macroPageWhenMacroWriteStarted, %object
 876              		.size	macroPageWhenMacroWriteStarted, 1
 877              	macroPageWhenMacroWriteStarted:
 878 00bf 00       		.space	1
 879              		.global	pedals_float
 880              		.align	2
 881              		.type	pedals_float, %object
 882              		.size	pedals_float, 40
 883              	pedals_float:
 884 00c0 00000000 		.space	40
 884      00000000 
 884      00000000 
 884      00000000 
 884      00000000 
 885              		.global	stringRepDivider
 886              		.data
 887 00fe 0000     		.align	2
 888              		.type	stringRepDivider, %object
 889              		.size	stringRepDivider, 4
 890              	stringRepDivider:
 891 0100 0000803F 		.word	1065353216
 892              		.global	__aeabi_fsub
 893              		.global	__aeabi_fdiv
 894              		.global	__aeabi_fmul
 895              		.global	__aeabi_fadd
 896              		.section	.text.map,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 17


 897              		.align	2
 898              		.global	map
 899              		.thumb
 900              		.thumb_func
 901              		.type	map, %function
 902              	map:
 903              	.LFB64:
 904              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** #include "ui.h"
   9:main.c        **** 
  10:main.c        **** #define BOOTLOAD_STYLE
  11:main.c        **** 
  12:main.c        **** const float versionNumber = 1.15f;
  13:main.c        **** 
  14:main.c        **** uint32_t prevLastBufferBegin[2];
  15:main.c        **** uint32_t lastBufferBegin[2];
  16:main.c        **** uint32_t masterTimer = 0;
  17:main.c        **** uint32_t lastParseCall = 0;
  18:main.c        **** uint32_t prevLastParseCall = 0;
  19:main.c        **** uint32_t lastBufferStuff = 0;
  20:main.c        **** uint32_t lastEndReceive = 0;
  21:main.c        **** 
  22:main.c        **** uint8_t sysexBuffer[2048];
  23:main.c        **** uint32_t sysexWritePointer = 0;
  24:main.c        **** uint32_t sysexReadPointer = 0;
  25:main.c        **** uint8_t sysexReset = 1;
  26:main.c        **** uint32_t sysexMessageStartPoints[256];
  27:main.c        **** uint8_t sysexMessageStartPointsWritePosition = 0;
  28:main.c        **** uint8_t sysexMessageStartPointsReadPosition = 0;
  29:main.c        **** uint8_t receivingSysex = 0;
  30:main.c        **** uint8_t parsingSysex = 0;
  31:main.c        **** volatile uint8_t presetArray[2048];
  32:main.c        **** uint8_t presetNumberToWrite = 0;
  33:main.c        **** uint8_t copedentNumberToWrite = 0;
  34:main.c        **** uint8_t sendMessageEnd = 0;
  35:main.c        **** 
  36:main.c        **** uint8_t sendSingleParamUpdate = 0;
  37:main.c        **** uint8_t singleParamToUpdateHigh = 0;
  38:main.c        **** uint8_t singleParamToUpdateLow = 0;
  39:main.c        **** uint8_t singleParamValueHigh = 0;
  40:main.c        **** uint8_t singleParamValueLow = 0;
  41:main.c        ****             
  42:main.c        **** uint8_t sendMappingChangeUpdate = 0;
  43:main.c        **** 
  44:main.c        **** 
  45:main.c        **** int8_t presetNumberToStore = 0;
  46:main.c        ****             
  47:main.c        **** 
  48:main.c        **** int8_t transposeSemitones = 0;
  49:main.c        **** int8_t transposeCents = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 18


  50:main.c        **** float transposeFloat = 0.0f;
  51:main.c        **** int8_t volumeInt = 0;
  52:main.c        **** uint8_t volumeWaitingToSend = 0;
  53:main.c        **** uint8_t midiSendOn = 0;
  54:main.c        **** uint8_t midiBarSendOn = 0;
  55:main.c        **** uint8_t midiDebugSendOn = 0;
  56:main.c        **** uint8_t pitchSmoothing = 0;
  57:main.c        **** uint8_t controlSmoothing = 0;
  58:main.c        **** uint8_t octaveAction = 0;
  59:main.c        **** uint8_t stringRepresentation[2] = {3,8};
  60:main.c        **** 
  61:main.c        **** uint8_t presetArraySection = presetName;
  62:main.c        **** 
  63:main.c        **** uint8_t sendLocalPresetStoreCommand;
  64:main.c        **** 
  65:main.c        **** uint16_t messageArraySendCount = 0;
  66:main.c        **** uint16_t messageArraySize = 0;
  67:main.c        **** 
  68:main.c        **** uint8_t sysexMessageInProgress = 0;
  69:main.c        **** uint8_t pedalHiRes = 0;
  70:main.c        **** 
  71:main.c        **** uint8_t bufCount = 0;
  72:main.c        **** volatile uint8_t sendingMessage = 0;
  73:main.c        **** volatile uint8_t sendKnobs = 0;
  74:main.c        **** uint32_t currentFloat = 0;
  75:main.c        **** uint32_t mapCount = 0;
  76:main.c        **** 
  77:main.c        **** uint16_t valsCount = 0;
  78:main.c        **** uint16_t mapCountExpectation = 0;
  79:main.c        **** uint16_t numMappings = 0;
  80:main.c        **** volatile uint8_t parseThatMF = 0;
  81:main.c        **** volatile float valCheck = 0.0f;
  82:main.c        **** volatile float testVal = 0.0f;
  83:main.c        **** 
  84:main.c        **** uint8_t sendFirmwareUpdateRequest = 0;
  85:main.c        **** 
  86:main.c        **** uint8_t numStrings = 10;
  87:main.c        **** /*
  88:main.c        **** #define TUNING_ARRAY_SIZE 258
  89:main.c        **** uint8_t tuningArray[TUNING_ARRAY_SIZE];
  90:main.c        **** */
  91:main.c        **** 
  92:main.c        **** volatile uint8_t usbActivityCounter = 0u;
  93:main.c        **** uint8_t midiMsg[4];
  94:main.c        **** uint8_t currentVBUS = 0;
  95:main.c        **** uint8_t prevVBUS = 0;
  96:main.c        **** volatile uint8_t USB_active = 0;
  97:main.c        **** volatile uint8_t USB_check_flag = 0;
  98:main.c        **** 
  99:main.c        **** uint8_t mappingArray[6];
 100:main.c        **** 
 101:main.c        **** uint8_t inBuffer[myBufferSize];
 102:main.c        **** 
 103:main.c        **** uint8_t myArray[myBufferSize];
 104:main.c        **** uint8_t returnedData[myBufferSize];
 105:main.c        **** int octave = 5;
 106:main.c        **** uint16_t angle[NUM_PEDALS];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 19


 107:main.c        **** uint16_t prevAngle[NUM_PEDALS];
 108:main.c        **** 
 109:main.c        **** uint16_t ADC_values[4];
 110:main.c        **** uint16_t rawAngle = 0;
 111:main.c        **** uint16_t midiSent = 0;
 112:main.c        **** uint16_t midiOverflow = 0;
 113:main.c        **** 
 114:main.c        **** uint8_t macroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 115:main.c        **** 
 116:main.c        **** uint8_t currentCopedent = 0;
 117:main.c        **** uint8_t necks[2] = {0,1};
 118:main.c        **** uint8_t neckPreset[2] = {0,1};
 119:main.c        **** uint8_t neckPresetsByte;
 120:main.c        **** 
 121:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
 122:main.c        **** uint8 rx1TD[2], rx2TD[2]  __attribute__((aligned(32)));
 123:main.c        **** 
 124:main.c        **** volatile uint8 txChannel __attribute__((aligned(32)));
 125:main.c        **** volatile uint8 txTD __attribute__((aligned(32)));
 126:main.c        **** 
 127:main.c        **** volatile uint8 rx3Channel __attribute__((aligned(32)));
 128:main.c        **** volatile uint8 rx3TD __attribute__((aligned(32)));
 129:main.c        **** 
 130:main.c        **** 
 131:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
 132:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
 133:main.c        **** 
 134:main.c        **** volatile uint16_t strings[12];
 135:main.c        **** volatile uint16_t prevStrings[12];
 136:main.c        **** volatile uint16_t bar[2];
 137:main.c        **** volatile uint16_t prevBar[2];
 138:main.c        **** volatile uint16_t maxStrings[12];
 139:main.c        **** volatile uint8_t amHere = 0;
 140:main.c        **** volatile uint8_t spiCounter = 0;
 141:main.c        **** volatile uint8_t newDataFlag = 0;
 142:main.c        **** int prevOctave = 0;
 143:main.c        **** uint8_t pluck_index = 0;
 144:main.c        **** volatile uint8_t amHere2 = 0;
 145:main.c        **** volatile uint8_t spiCounter2 = 0;
 146:main.c        **** volatile uint8_t newDataFlag2 = 0;
 147:main.c        **** volatile uint8_t currentPluckBuffer = 0;
 148:main.c        **** volatile uint8_t currentBarBuffer = 0;
 149:main.c        **** volatile uint8_t pluckErrorCount = 0;
 150:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
 151:main.c        **** 
 152:main.c        **** volatile uint8_t inputData = 0;
 153:main.c        **** 
 154:main.c        **** union breakFloat {
 155:main.c        ****  float f;
 156:main.c        ****  uint8_t b[4];  
 157:main.c        ****  uint32_t u32;
 158:main.c        **** };
 159:main.c        **** 
 160:main.c        **** 
 161:main.c        **** uint8_t spiAdjusted = 0;
 162:main.c        **** uint8_t mySpiCounter = 0;
 163:main.c        **** volatile uint16_t offsetErrorCount = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 20


 164:main.c        **** volatile uint8_t SPI2errorflag = 0;
 165:main.c        **** uint8_t knobs[4];
 166:main.c        **** uint8_t prevKnobs[4];
 167:main.c        **** 
 168:main.c        **** uint8_t knobs7bit[4];
 169:main.c        **** uint8_t prevKnobs7bit[4];
 170:main.c        **** 
 171:main.c        **** uint8_t u7bit_volumePedal = 0;
 172:main.c        **** uint8_t prev_7bit_volumePedal = 0;
 173:main.c        **** volatile uint8_t SPI2started = 0;
 174:main.c        **** 
 175:main.c        **** uint8_t whichMacro = 0;
 176:main.c        **** 
 177:main.c        **** uint8_t macroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
 178:main.c        **** uint8_t prevMacroKnobValues7bit[NUM_MACROS*NUM_MACRO_PAGES];
 179:main.c        **** int16_t prevMacroKnobValues[NUM_MACROS*NUM_MACRO_PAGES];
 180:main.c        **** uint8_t knobFrozen[NUM_MACROS*NUM_MACRO_PAGES];
 181:main.c        **** 
 182:main.c        **** uint8_t knobPanelLightActive = 0;
 183:main.c        **** 
 184:main.c        **** static uint8 CYCODE eepromArray[]={ 0, 0 };
 185:main.c        ****                                             
 186:main.c        **** uint8 array[] ={ 0, 0 };
 187:main.c        ****                                 
 188:main.c        ****     /*Return status for EEPROM and UART*/ 
 189:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 190:main.c        **** 
 191:main.c        **** 
 192:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 193:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] __ALIGNED(CY_FLASH_SIZEOF_ROW) = 
 194:main.c        **** 
 195:main.c        **** 
 196:main.c        **** uint8 eeprom_cnt;
 197:main.c        **** cystatus status;
 198:main.c        **** volatile const uint8 * ptr;
 199:main.c        **** volatile int barCount = 0;
 200:main.c        **** 
 201:main.c        **** 
 202:main.c        ****     
 203:main.c        **** volatile uint8_t I2Cbuff1[256];
 204:main.c        **** volatile uint8_t I2Cbuff2[16];
 205:main.c        **** volatile uint8_t send_it = 0;
 206:main.c        **** 
 207:main.c        **** //first mux, 0x70 is first element of array. 
 208:main.c        **** //If sent to output 5 of this first mux, signal goes to 
 209:main.c        **** // the ethernet cable, and a second mux is in the foot pedal at the end of that cable. This channel
 210:main.c        **** //so the order of I2C communication is ( foot pedals 1-5, knee levers 1-5, volume pedal, OLED displ
 211:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 212:main.c        **** uint8_t i2c_skipped[12] = {0,0,0,0,0,0,0,0,0,0,0,0}; //so that pedals and levers can be marked as s
 213:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 214:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 215:main.c        **** uint16_t pedals_lowWithDeadZone[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 216:main.c        **** uint16_t pedals_highWithDeadZone[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 217:main.c        **** uint8_t deadZone = 51;
 218:main.c        **** uint16_t volumePedal = 4095;
 219:main.c        **** uint16_t processed_pedals[NUM_PEDALS];
 220:main.c        **** uint16_t prev_processed_pedals[NUM_PEDALS];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 21


 221:main.c        **** uint8_t pedals8bit[NUM_PEDALS];
 222:main.c        **** uint8_t pedals7bit[NUM_PEDALS];
 223:main.c        **** uint8_t prevPedals7bit[NUM_PEDALS];
 224:main.c        **** int16_t prev_processed_volumePedal;
 225:main.c        **** int16_t processed_volumePedal;
 226:main.c        **** 
 227:main.c        **** uint8_t sliderBugOn = 0;
 228:main.c        **** 
 229:main.c        **** uint16_t fretMeasurements[NUM_SLIDERS][NUM_FRET_MEASUREMENTS];
 230:main.c        **** 
 231:main.c        **** 
 232:main.c        **** 
 233:main.c        **** uint8_t currentPresetSelection = 0;
 234:main.c        **** uint8_t presetNamesArray[MAX_NUM_PRESETS][PRESET_NAME_LENGTH_IN_BYTES];
 235:main.c        **** uint8_t presetNumberToLoad = 0;
 236:main.c        **** uint8_t presetLoadedResponse[2] = {255, 0};
 237:main.c        **** 
 238:main.c        **** uint8_t macroNamesArray[MAX_NUM_PRESETS][NUM_MACROS*NUM_MACRO_PAGES][MACRO_NAME_LENGTH_IN_BYTES];
 239:main.c        **** uint8_t controlNamesArray[MAX_NUM_PRESETS][NUM_CONTROLS][CONTROL_NAME_LENGTH_IN_BYTES];
 240:main.c        **** 
 241:main.c        **** //frets 0, 1, 3, 5, 7, 9, 12, 15, 17, 19, 21, 24
 242:main.c        **** float fretScalingInMIDI[NUM_FRET_MEASUREMENTS] = {0.0f, 1.0f, 3.0f, 5.0f, 7.0f, 9.0f, 12.0f, 15.0f,
 243:main.c        **** float fretScalingInRatios[NUM_FRET_MEASUREMENTS] = {1.0f, 1.0594634453327456842756554370605f, 1.189
 244:main.c        **** 
 245:main.c        **** float pedalRatios[NUM_PEDALS];
 246:main.c        **** uint8_t last_mux = 1;
 247:main.c        **** volatile uint8_t main_counter = 0;
 248:main.c        **** uint8_t dualSlider = 0;
 249:main.c        **** uint8_t voice = 0; //unused for now
 250:main.c        **** 
 251:main.c        **** uint8_t patchNum = 0;
 252:main.c        **** 
 253:main.c        **** uint8_t pedal_inverted[NUM_PEDALS] = {0,0,0,0,0,0,0,0,0,0};
 254:main.c        **** 
 255:main.c        **** uint8_t traditionalPedalAdd = 0;
 256:main.c        **** uint8_t copedentMapping[10] = {4, 5, 6, 7, 8, 10, 9, 3, 1, 2};
 257:main.c        **** float copedent[MAX_NUM_COPEDENTS][NUM_PEDALS+1][NUM_STRINGS];
 258:main.c        **** uint8_t copedentNamesArray[MAX_NUM_COPEDENTS][COPEDENT_NAME_LENGTH_IN_BYTES];
 259:main.c        **** 
 260:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 261:main.c        **** 
 262:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 263:main.c        **** 
 264:main.c        **** uint8_t pedal_cc_assignments[NUM_PEDALS] = {0, 1, 2, 3, 4, 8, 9, 7, 6, 5};
 265:main.c        **** float openStringFrequencies[NUM_STRINGS];
 266:main.c        **** float stringMappedPositionsInRatios[NUM_SLIDERS];
 267:main.c        **** uint16_t stringMappedPositionsInRatiosInt[NUM_SLIDERS];
 268:main.c        **** float stringMappedPositionsInMIDI[NUM_SLIDERS];
 269:main.c        **** uint16_t barMidiOuterStrings[2];
 270:main.c        **** float stringFrequencies[NUM_STRINGS];
 271:main.c        **** float stringOctave[NUM_STRINGS];
 272:main.c        **** float stringPitch[NUM_STRINGS];
 273:main.c        **** float stringMIDI[NUM_STRINGS];
 274:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 275:main.c        **** 
 276:main.c        **** uint8_t mainOLEDWaitingToSend = 0;
 277:main.c        **** uint8_t macroOLEDWaitingToSend = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 22


 278:main.c        **** 
 279:main.c        **** uint8_t presetAlreadyDisplayed[MAX_NUM_PRESETS];
 280:main.c        **** 
 281:main.c        **** uint8_t currentNeck = 0;
 282:main.c        **** uint8_t neckByte = 0;
 283:main.c        **** 
 284:main.c        **** uint8_t editMode = 0;
 285:main.c        **** uint8_t leverCalibrationMode = 0;
 286:main.c        **** uint8_t fretCalibrationMode = 0;
 287:main.c        **** 
 288:main.c        **** uint8_t presetWhenMacroWriteStarted = 0;
 289:main.c        **** uint8_t macroPageWhenMacroWriteStarted = 0;
 290:main.c        **** 
 291:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 292:main.c        **** float stringRepDivider = 1.0f;
 293:main.c        **** 
 294:main.c        **** //function prototypes
 295:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 296:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 297:main.c        **** void USB_service(void);
 298:main.c        **** void checkUSB_Vbus(void);
 299:main.c        **** void sendMIDIAllNotesOff(void);
 300:main.c        **** void sendMIDIPitchBend(int val, int channel);
 301:main.c        **** void firstCheckUSB_Vbus(void);
 302:main.c        **** void restartSystemCheck(void);
 303:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
 304:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
 305:main.c        **** void noteEvent(int string);
 306:main.c        **** void I2C_reset(void);
 307:main.c        **** void CCEvent(int cc, int val);
 308:main.c        **** void DmaRxConfiguration(void);
 309:main.c        **** void DmaTxConfiguration(void);
 310:main.c        **** void parseSysex(void);
 311:main.c        **** 
 312:main.c        **** //helper functions
 313:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 314:main.c        **** {
 905              		.loc 1 314 0
 906              		.cfi_startproc
 907              		@ args = 4, pretend = 0, frame = 16
 908              		@ frame_needed = 1, uses_anonymous_args = 0
 909 0000 B0B5     		push	{r4, r5, r7, lr}
 910              		.cfi_def_cfa_offset 16
 911              		.cfi_offset 4, -16
 912              		.cfi_offset 5, -12
 913              		.cfi_offset 7, -8
 914              		.cfi_offset 14, -4
 915 0002 84B0     		sub	sp, sp, #16
 916              		.cfi_def_cfa_offset 32
 917 0004 00AF     		add	r7, sp, #0
 918              		.cfi_def_cfa_register 7
 919 0006 F860     		str	r0, [r7, #12]	@ float
 920 0008 B960     		str	r1, [r7, #8]	@ float
 921 000a 7A60     		str	r2, [r7, #4]	@ float
 922 000c 3B60     		str	r3, [r7]	@ float
 315:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 923              		.loc 1 315 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 23


 924 000e 3968     		ldr	r1, [r7]	@ float
 925 0010 386A     		ldr	r0, [r7, #32]	@ float
 926 0012 FFF7FEFF 		bl	__aeabi_fsub
 927 0016 0346     		mov	r3, r0
 928 0018 1C46     		mov	r4, r3
 929 001a B968     		ldr	r1, [r7, #8]	@ float
 930 001c F868     		ldr	r0, [r7, #12]	@ float
 931 001e FFF7FEFF 		bl	__aeabi_fsub
 932 0022 0346     		mov	r3, r0
 933 0024 1D46     		mov	r5, r3
 934 0026 B968     		ldr	r1, [r7, #8]	@ float
 935 0028 7868     		ldr	r0, [r7, #4]	@ float
 936 002a FFF7FEFF 		bl	__aeabi_fsub
 937 002e 0346     		mov	r3, r0
 938 0030 1946     		mov	r1, r3
 939 0032 2846     		mov	r0, r5
 940 0034 FFF7FEFF 		bl	__aeabi_fdiv
 941 0038 0346     		mov	r3, r0
 942 003a 1946     		mov	r1, r3
 943 003c 2046     		mov	r0, r4
 944 003e FFF7FEFF 		bl	__aeabi_fmul
 945 0042 0346     		mov	r3, r0
 946 0044 3968     		ldr	r1, [r7]	@ float
 947 0046 1846     		mov	r0, r3
 948 0048 FFF7FEFF 		bl	__aeabi_fadd
 949 004c 0346     		mov	r3, r0
 316:main.c        **** }
 950              		.loc 1 316 0
 951 004e 1846     		mov	r0, r3
 952 0050 1037     		adds	r7, r7, #16
 953              		.cfi_def_cfa_offset 16
 954 0052 BD46     		mov	sp, r7
 955              		.cfi_def_cfa_register 13
 956              		@ sp needed
 957 0054 B0BD     		pop	{r4, r5, r7, pc}
 958              		.cfi_endproc
 959              	.LFE64:
 960              		.size	map, .-map
 961              		.global	__aeabi_i2f
 962 0056 00BF     		.section	.text.mapDualSlider,"ax",%progbits
 963              		.align	2
 964              		.global	mapDualSlider
 965              		.thumb
 966              		.thumb_func
 967              		.type	mapDualSlider, %function
 968              	mapDualSlider:
 969              	.LFB65:
 317:main.c        **** 
 318:main.c        **** float mapDualSlider(float value, float ostart, float ostop)
 319:main.c        **** {
 970              		.loc 1 319 0
 971              		.cfi_startproc
 972              		@ args = 0, pretend = 0, frame = 16
 973              		@ frame_needed = 1, uses_anonymous_args = 0
 974 0000 90B5     		push	{r4, r7, lr}
 975              		.cfi_def_cfa_offset 12
 976              		.cfi_offset 4, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 24


 977              		.cfi_offset 7, -8
 978              		.cfi_offset 14, -4
 979 0002 85B0     		sub	sp, sp, #20
 980              		.cfi_def_cfa_offset 32
 981 0004 00AF     		add	r7, sp, #0
 982              		.cfi_def_cfa_register 7
 983 0006 F860     		str	r0, [r7, #12]	@ float
 984 0008 B960     		str	r1, [r7, #8]	@ float
 985 000a 7A60     		str	r2, [r7, #4]	@ float
 320:main.c        ****     return ostart + (ostop - ostart) * ((value - stringRepresentation[0]) * stringRepDivider);
 986              		.loc 1 320 0
 987 000c B968     		ldr	r1, [r7, #8]	@ float
 988 000e 7868     		ldr	r0, [r7, #4]	@ float
 989 0010 FFF7FEFF 		bl	__aeabi_fsub
 990 0014 0346     		mov	r3, r0
 991 0016 1C46     		mov	r4, r3
 992 0018 104B     		ldr	r3, .L5
 993 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 994 001c 1846     		mov	r0, r3
 995 001e FFF7FEFF 		bl	__aeabi_i2f
 996 0022 0346     		mov	r3, r0
 997 0024 1946     		mov	r1, r3
 998 0026 F868     		ldr	r0, [r7, #12]	@ float
 999 0028 FFF7FEFF 		bl	__aeabi_fsub
 1000 002c 0346     		mov	r3, r0
 1001 002e 1A46     		mov	r2, r3
 1002 0030 0B4B     		ldr	r3, .L5+4
 1003 0032 1B68     		ldr	r3, [r3]	@ float
 1004 0034 1946     		mov	r1, r3
 1005 0036 1046     		mov	r0, r2
 1006 0038 FFF7FEFF 		bl	__aeabi_fmul
 1007 003c 0346     		mov	r3, r0
 1008 003e 1946     		mov	r1, r3
 1009 0040 2046     		mov	r0, r4
 1010 0042 FFF7FEFF 		bl	__aeabi_fmul
 1011 0046 0346     		mov	r3, r0
 1012 0048 B968     		ldr	r1, [r7, #8]	@ float
 1013 004a 1846     		mov	r0, r3
 1014 004c FFF7FEFF 		bl	__aeabi_fadd
 1015 0050 0346     		mov	r3, r0
 321:main.c        **** }
 1016              		.loc 1 321 0
 1017 0052 1846     		mov	r0, r3
 1018 0054 1437     		adds	r7, r7, #20
 1019              		.cfi_def_cfa_offset 12
 1020 0056 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0058 90BD     		pop	{r4, r7, pc}
 1024              	.L6:
 1025 005a 00BF     		.align	2
 1026              	.L5:
 1027 005c 00000000 		.word	stringRepresentation
 1028 0060 00000000 		.word	stringRepDivider
 1029              		.cfi_endproc
 1030              	.LFE65:
 1031              		.size	mapDualSlider, .-mapDualSlider
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 25


 1032              		.section	.text.burnInitialPedalZeroPositions,"ax",%progbits
 1033              		.align	2
 1034              		.global	burnInitialPedalZeroPositions
 1035              		.thumb
 1036              		.thumb_func
 1037              		.type	burnInitialPedalZeroPositions, %function
 1038              	burnInitialPedalZeroPositions:
 1039              	.LFB66:
 322:main.c        **** 
 323:main.c        **** void burnInitialPedalZeroPositions()
 324:main.c        **** {
 1040              		.loc 1 324 0
 1041              		.cfi_startproc
 1042              		@ args = 0, pretend = 0, frame = 8
 1043              		@ frame_needed = 1, uses_anonymous_args = 0
 1044 0000 80B5     		push	{r7, lr}
 1045              		.cfi_def_cfa_offset 8
 1046              		.cfi_offset 7, -8
 1047              		.cfi_offset 14, -4
 1048 0002 82B0     		sub	sp, sp, #8
 1049              		.cfi_def_cfa_offset 16
 1050 0004 00AF     		add	r7, sp, #0
 1051              		.cfi_def_cfa_register 7
 1052              	.LBB2:
 325:main.c        ****     for (int i = 0; i < 5; i++)
 1053              		.loc 1 325 0
 1054 0006 0023     		movs	r3, #0
 1055 0008 7B60     		str	r3, [r7, #4]
 1056 000a 6EE0     		b	.L8
 1057              	.L9:
 326:main.c        ****     {
 327:main.c        ****         I2C_1_MasterSendStart(0x70, 0); 
 1058              		.loc 1 327 0 discriminator 3
 1059 000c 0021     		movs	r1, #0
 1060 000e 7020     		movs	r0, #112
 1061 0010 FFF7FEFF 		bl	I2C_1_MasterSendStart
 328:main.c        ****         I2C_1_MasterWriteByte(1<<i);
 1062              		.loc 1 328 0 discriminator 3
 1063 0014 0122     		movs	r2, #1
 1064 0016 7B68     		ldr	r3, [r7, #4]
 1065 0018 02FA03F3 		lsl	r3, r2, r3
 1066 001c DBB2     		uxtb	r3, r3
 1067 001e 1846     		mov	r0, r3
 1068 0020 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 329:main.c        ****         I2C_1_MasterSendStop(); 
 1069              		.loc 1 329 0 discriminator 3
 1070 0024 FFF7FEFF 		bl	I2C_1_MasterSendStop
 330:main.c        **** 
 331:main.c        **** 
 332:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1071              		.loc 1 332 0 discriminator 3
 1072 0028 0021     		movs	r1, #0
 1073 002a 3620     		movs	r0, #54
 1074 002c FFF7FEFF 		bl	I2C_1_MasterSendStart
 333:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1075              		.loc 1 333 0 discriminator 3
 1076 0030 0C20     		movs	r0, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 26


 1077 0032 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 334:main.c        ****         //I2C_1_MasterSendStop();
 335:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1078              		.loc 1 335 0 discriminator 3
 1079 0036 0121     		movs	r1, #1
 1080 0038 3620     		movs	r0, #54
 1081 003a FFF7FEFF 		bl	I2C_1_MasterSendRestart
 336:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1082              		.loc 1 336 0 discriminator 3
 1083 003e 0120     		movs	r0, #1
 1084 0040 FFF7FEFF 		bl	I2C_1_MasterReadByte
 1085 0044 0346     		mov	r3, r0
 1086 0046 9BB2     		uxth	r3, r3
 1087 0048 1B02     		lsls	r3, r3, #8
 1088 004a 9AB2     		uxth	r2, r3
 1089 004c 654B     		ldr	r3, .L12
 1090 004e 1A80     		strh	r2, [r3]	@ movhi
 337:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 338:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1091              		.loc 1 338 0 discriminator 3
 1092 0050 0020     		movs	r0, #0
 1093 0052 FFF7FEFF 		bl	I2C_1_MasterReadByte
 1094 0056 0346     		mov	r3, r0
 1095 0058 9AB2     		uxth	r2, r3
 1096 005a 624B     		ldr	r3, .L12
 1097 005c 1B88     		ldrh	r3, [r3]
 1098 005e 1344     		add	r3, r3, r2
 1099 0060 9AB2     		uxth	r2, r3
 1100 0062 604B     		ldr	r3, .L12
 1101 0064 1A80     		strh	r2, [r3]	@ movhi
 339:main.c        ****          I2C_1_MasterSendStop(); 
 1102              		.loc 1 339 0 discriminator 3
 1103 0066 FFF7FEFF 		bl	I2C_1_MasterSendStop
 340:main.c        ****         
 341:main.c        ****         CyDelay(1);
 1104              		.loc 1 341 0 discriminator 3
 1105 006a 0120     		movs	r0, #1
 1106 006c FFF7FEFF 		bl	CyDelay
 342:main.c        **** 
 343:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1107              		.loc 1 343 0 discriminator 3
 1108 0070 0021     		movs	r1, #0
 1109 0072 3620     		movs	r0, #54
 1110 0074 FFF7FEFF 		bl	I2C_1_MasterSendStart
 344:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1111              		.loc 1 344 0 discriminator 3
 1112 0078 0120     		movs	r0, #1
 1113 007a FFF7FEFF 		bl	I2C_1_MasterWriteByte
 345:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1114              		.loc 1 345 0 discriminator 3
 1115 007e 594B     		ldr	r3, .L12
 1116 0080 1B88     		ldrh	r3, [r3]
 1117 0082 1B0A     		lsrs	r3, r3, #8
 1118 0084 9BB2     		uxth	r3, r3
 1119 0086 DBB2     		uxtb	r3, r3
 1120 0088 1846     		mov	r0, r3
 1121 008a FFF7FEFF 		bl	I2C_1_MasterWriteByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 27


 346:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1122              		.loc 1 346 0 discriminator 3
 1123 008e 554B     		ldr	r3, .L12
 1124 0090 1B88     		ldrh	r3, [r3]
 1125 0092 DBB2     		uxtb	r3, r3
 1126 0094 1846     		mov	r0, r3
 1127 0096 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 347:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 1128              		.loc 1 347 0 discriminator 3
 1129 009a 524B     		ldr	r3, .L12
 1130 009c 1B88     		ldrh	r3, [r3]
 1131 009e 03F5FA73 		add	r3, r3, #500
 1132 00a2 1B12     		asrs	r3, r3, #8
 1133 00a4 DBB2     		uxtb	r3, r3
 1134 00a6 1846     		mov	r0, r3
 1135 00a8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 348:main.c        ****         I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 1136              		.loc 1 348 0 discriminator 3
 1137 00ac 4D4B     		ldr	r3, .L12
 1138 00ae 1B88     		ldrh	r3, [r3]
 1139 00b0 DBB2     		uxtb	r3, r3
 1140 00b2 0C3B     		subs	r3, r3, #12
 1141 00b4 DBB2     		uxtb	r3, r3
 1142 00b6 1846     		mov	r0, r3
 1143 00b8 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 349:main.c        ****         I2C_1_MasterSendStop(); 
 1144              		.loc 1 349 0 discriminator 3
 1145 00bc FFF7FEFF 		bl	I2C_1_MasterSendStop
 350:main.c        ****         
 351:main.c        ****         CyDelay(2);
 1146              		.loc 1 351 0 discriminator 3
 1147 00c0 0220     		movs	r0, #2
 1148 00c2 FFF7FEFF 		bl	CyDelay
 352:main.c        **** 
 353:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1149              		.loc 1 353 0 discriminator 3
 1150 00c6 0021     		movs	r1, #0
 1151 00c8 3620     		movs	r0, #54
 1152 00ca FFF7FEFF 		bl	I2C_1_MasterSendStart
 354:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1153              		.loc 1 354 0 discriminator 3
 1154 00ce FF20     		movs	r0, #255
 1155 00d0 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 355:main.c        ****        I2C_1_MasterWriteByte(0x80);
 1156              		.loc 1 355 0 discriminator 3
 1157 00d4 8020     		movs	r0, #128
 1158 00d6 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 356:main.c        ****         I2C_1_MasterSendStop(); 
 1159              		.loc 1 356 0 discriminator 3
 1160 00da FFF7FEFF 		bl	I2C_1_MasterSendStop
 357:main.c        ****        CyDelay(2);
 1161              		.loc 1 357 0 discriminator 3
 1162 00de 0220     		movs	r0, #2
 1163 00e0 FFF7FEFF 		bl	CyDelay
 325:main.c        ****     {
 1164              		.loc 1 325 0 discriminator 3
 1165 00e4 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 28


 1166 00e6 0133     		adds	r3, r3, #1
 1167 00e8 7B60     		str	r3, [r7, #4]
 1168              	.L8:
 325:main.c        ****     {
 1169              		.loc 1 325 0 is_stmt 0 discriminator 1
 1170 00ea 7B68     		ldr	r3, [r7, #4]
 1171 00ec 042B     		cmp	r3, #4
 1172 00ee 8DDD     		ble	.L9
 1173              	.LBE2:
 1174              	.LBB3:
 358:main.c        ****     }
 359:main.c        ****     
 360:main.c        ****     //set main i2c mux
 361:main.c        ****     for (int i = 0; i < 4; i++)
 1175              		.loc 1 361 0 is_stmt 1
 1176 00f0 0023     		movs	r3, #0
 1177 00f2 3B60     		str	r3, [r7]
 1178 00f4 6FE0     		b	.L10
 1179              	.L11:
 362:main.c        ****     {
 363:main.c        ****         I2C_1_MasterSendStart(0x71, 0); 
 1180              		.loc 1 363 0 discriminator 3
 1181 00f6 0021     		movs	r1, #0
 1182 00f8 7120     		movs	r0, #113
 1183 00fa FFF7FEFF 		bl	I2C_1_MasterSendStart
 364:main.c        ****         I2C_1_MasterWriteByte(1<<(i+2));
 1184              		.loc 1 364 0 discriminator 3
 1185 00fe 3B68     		ldr	r3, [r7]
 1186 0100 0233     		adds	r3, r3, #2
 1187 0102 0122     		movs	r2, #1
 1188 0104 02FA03F3 		lsl	r3, r2, r3
 1189 0108 DBB2     		uxtb	r3, r3
 1190 010a 1846     		mov	r0, r3
 1191 010c FFF7FEFF 		bl	I2C_1_MasterWriteByte
 365:main.c        ****         I2C_1_MasterSendStop(); 
 1192              		.loc 1 365 0 discriminator 3
 1193 0110 FFF7FEFF 		bl	I2C_1_MasterSendStop
 366:main.c        **** 
 367:main.c        **** 
 368:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1194              		.loc 1 368 0 discriminator 3
 1195 0114 0021     		movs	r1, #0
 1196 0116 3620     		movs	r0, #54
 1197 0118 FFF7FEFF 		bl	I2C_1_MasterSendStart
 369:main.c        ****         I2C_1_MasterWriteByte(0x0C);
 1198              		.loc 1 369 0 discriminator 3
 1199 011c 0C20     		movs	r0, #12
 1200 011e FFF7FEFF 		bl	I2C_1_MasterWriteByte
 370:main.c        ****         //I2C_1_MasterSendStop();
 371:main.c        ****         I2C_1_MasterSendRestart(0x36, 1); 
 1201              		.loc 1 371 0 discriminator 3
 1202 0122 0121     		movs	r1, #1
 1203 0124 3620     		movs	r0, #54
 1204 0126 FFF7FEFF 		bl	I2C_1_MasterSendRestart
 372:main.c        ****         rawAngle = I2C_1_MasterReadByte(1) << 8;
 1205              		.loc 1 372 0 discriminator 3
 1206 012a 0120     		movs	r0, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 29


 1207 012c FFF7FEFF 		bl	I2C_1_MasterReadByte
 1208 0130 0346     		mov	r3, r0
 1209 0132 9BB2     		uxth	r3, r3
 1210 0134 1B02     		lsls	r3, r3, #8
 1211 0136 9AB2     		uxth	r2, r3
 1212 0138 2A4B     		ldr	r3, .L12
 1213 013a 1A80     		strh	r2, [r3]	@ movhi
 373:main.c        ****         //I2C_1_MasterSendRestart(0x36, 1);
 374:main.c        ****         rawAngle +=  I2C_1_MasterReadByte(0);
 1214              		.loc 1 374 0 discriminator 3
 1215 013c 0020     		movs	r0, #0
 1216 013e FFF7FEFF 		bl	I2C_1_MasterReadByte
 1217 0142 0346     		mov	r3, r0
 1218 0144 9AB2     		uxth	r2, r3
 1219 0146 274B     		ldr	r3, .L12
 1220 0148 1B88     		ldrh	r3, [r3]
 1221 014a 1344     		add	r3, r3, r2
 1222 014c 9AB2     		uxth	r2, r3
 1223 014e 254B     		ldr	r3, .L12
 1224 0150 1A80     		strh	r2, [r3]	@ movhi
 375:main.c        ****         I2C_1_MasterSendStop(); 
 1225              		.loc 1 375 0 discriminator 3
 1226 0152 FFF7FEFF 		bl	I2C_1_MasterSendStop
 376:main.c        ****         
 377:main.c        ****         CyDelay(1);
 1227              		.loc 1 377 0 discriminator 3
 1228 0156 0120     		movs	r0, #1
 1229 0158 FFF7FEFF 		bl	CyDelay
 378:main.c        **** 
 379:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1230              		.loc 1 379 0 discriminator 3
 1231 015c 0021     		movs	r1, #0
 1232 015e 3620     		movs	r0, #54
 1233 0160 FFF7FEFF 		bl	I2C_1_MasterSendStart
 380:main.c        ****         I2C_1_MasterWriteByte(0x01);
 1234              		.loc 1 380 0 discriminator 3
 1235 0164 0120     		movs	r0, #1
 1236 0166 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 381:main.c        ****         I2C_1_MasterWriteByte(rawAngle >> 8);
 1237              		.loc 1 381 0 discriminator 3
 1238 016a 1E4B     		ldr	r3, .L12
 1239 016c 1B88     		ldrh	r3, [r3]
 1240 016e 1B0A     		lsrs	r3, r3, #8
 1241 0170 9BB2     		uxth	r3, r3
 1242 0172 DBB2     		uxtb	r3, r3
 1243 0174 1846     		mov	r0, r3
 1244 0176 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 382:main.c        ****         I2C_1_MasterWriteByte(rawAngle & 0xff);
 1245              		.loc 1 382 0 discriminator 3
 1246 017a 1A4B     		ldr	r3, .L12
 1247 017c 1B88     		ldrh	r3, [r3]
 1248 017e DBB2     		uxtb	r3, r3
 1249 0180 1846     		mov	r0, r3
 1250 0182 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 383:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 1251              		.loc 1 383 0 discriminator 3
 1252 0186 174B     		ldr	r3, .L12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 30


 1253 0188 1B88     		ldrh	r3, [r3]
 1254 018a 03F52F73 		add	r3, r3, #700
 1255 018e 1B12     		asrs	r3, r3, #8
 1256 0190 DBB2     		uxtb	r3, r3
 1257 0192 1846     		mov	r0, r3
 1258 0194 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 384:main.c        ****         I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 1259              		.loc 1 384 0 discriminator 3
 1260 0198 124B     		ldr	r3, .L12
 1261 019a 1B88     		ldrh	r3, [r3]
 1262 019c DBB2     		uxtb	r3, r3
 1263 019e 443B     		subs	r3, r3, #68
 1264 01a0 DBB2     		uxtb	r3, r3
 1265 01a2 1846     		mov	r0, r3
 1266 01a4 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 385:main.c        ****         I2C_1_MasterSendStop(); 
 1267              		.loc 1 385 0 discriminator 3
 1268 01a8 FFF7FEFF 		bl	I2C_1_MasterSendStop
 386:main.c        ****         
 387:main.c        ****         CyDelay(2);
 1269              		.loc 1 387 0 discriminator 3
 1270 01ac 0220     		movs	r0, #2
 1271 01ae FFF7FEFF 		bl	CyDelay
 388:main.c        **** 
 389:main.c        ****         I2C_1_MasterSendStart(0x36, 0); 
 1272              		.loc 1 389 0 discriminator 3
 1273 01b2 0021     		movs	r1, #0
 1274 01b4 3620     		movs	r0, #54
 1275 01b6 FFF7FEFF 		bl	I2C_1_MasterSendStart
 390:main.c        ****         I2C_1_MasterWriteByte(0xff);
 1276              		.loc 1 390 0 discriminator 3
 1277 01ba FF20     		movs	r0, #255
 1278 01bc FFF7FEFF 		bl	I2C_1_MasterWriteByte
 391:main.c        ****         I2C_1_MasterWriteByte(0x80);
 1279              		.loc 1 391 0 discriminator 3
 1280 01c0 8020     		movs	r0, #128
 1281 01c2 FFF7FEFF 		bl	I2C_1_MasterWriteByte
 392:main.c        ****         I2C_1_MasterSendStop(); 
 1282              		.loc 1 392 0 discriminator 3
 1283 01c6 FFF7FEFF 		bl	I2C_1_MasterSendStop
 393:main.c        ****        CyDelay(2);
 1284              		.loc 1 393 0 discriminator 3
 1285 01ca 0220     		movs	r0, #2
 1286 01cc FFF7FEFF 		bl	CyDelay
 361:main.c        ****     {
 1287              		.loc 1 361 0 discriminator 3
 1288 01d0 3B68     		ldr	r3, [r7]
 1289 01d2 0133     		adds	r3, r3, #1
 1290 01d4 3B60     		str	r3, [r7]
 1291              	.L10:
 361:main.c        ****     {
 1292              		.loc 1 361 0 is_stmt 0 discriminator 1
 1293 01d6 3B68     		ldr	r3, [r7]
 1294 01d8 032B     		cmp	r3, #3
 1295 01da 8CDD     		ble	.L11
 1296              	.LBE3:
 394:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 31


 395:main.c        **** }
 1297              		.loc 1 395 0 is_stmt 1
 1298 01dc 00BF     		nop
 1299 01de 0837     		adds	r7, r7, #8
 1300              		.cfi_def_cfa_offset 8
 1301 01e0 BD46     		mov	sp, r7
 1302              		.cfi_def_cfa_register 13
 1303              		@ sp needed
 1304 01e2 80BD     		pop	{r7, pc}
 1305              	.L13:
 1306              		.align	2
 1307              	.L12:
 1308 01e4 00000000 		.word	rawAngle
 1309              		.cfi_endproc
 1310              	.LFE66:
 1311              		.size	burnInitialPedalZeroPositions, .-burnInitialPedalZeroPositions
 1312              		.global	__aeabi_ui2f
 1313              		.global	__aeabi_f2uiz
 1314              		.section	.text.calculatePedalRatios,"ax",%progbits
 1315              		.align	2
 1316              		.global	calculatePedalRatios
 1317              		.thumb
 1318              		.thumb_func
 1319              		.type	calculatePedalRatios, %function
 1320              	calculatePedalRatios:
 1321              	.LFB67:
 396:main.c        **** 
 397:main.c        **** void calculatePedalRatios(void)
 398:main.c        **** {
 1322              		.loc 1 398 0
 1323              		.cfi_startproc
 1324              		@ args = 0, pretend = 0, frame = 16
 1325              		@ frame_needed = 1, uses_anonymous_args = 0
 1326 0000 90B5     		push	{r4, r7, lr}
 1327              		.cfi_def_cfa_offset 12
 1328              		.cfi_offset 4, -12
 1329              		.cfi_offset 7, -8
 1330              		.cfi_offset 14, -4
 1331 0002 85B0     		sub	sp, sp, #20
 1332              		.cfi_def_cfa_offset 32
 1333 0004 00AF     		add	r7, sp, #0
 1334              		.cfi_def_cfa_register 7
 1335              	.LBB4:
 399:main.c        ****     //add deadzones on edges of pedal sensing
 400:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1336              		.loc 1 400 0
 1337 0006 0023     		movs	r3, #0
 1338 0008 FB60     		str	r3, [r7, #12]
 1339 000a 6EE0     		b	.L15
 1340              	.L16:
 1341              	.LBB5:
 401:main.c        ****     {
 402:main.c        **** 
 403:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i]; //temporary diff to calculat
 1342              		.loc 1 403 0 discriminator 3
 1343 000c 3A4A     		ldr	r2, .L17
 1344 000e FB68     		ldr	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 32


 1345 0010 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1346 0014 1846     		mov	r0, r3
 1347 0016 FFF7FEFF 		bl	__aeabi_ui2f
 1348 001a 0446     		mov	r4, r0
 1349 001c 374A     		ldr	r2, .L17+4
 1350 001e FB68     		ldr	r3, [r7, #12]
 1351 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1352 0024 1846     		mov	r0, r3
 1353 0026 FFF7FEFF 		bl	__aeabi_ui2f
 1354 002a 0346     		mov	r3, r0
 1355 002c 1946     		mov	r1, r3
 1356 002e 2046     		mov	r0, r4
 1357 0030 FFF7FEFF 		bl	__aeabi_fsub
 1358 0034 0346     		mov	r3, r0
 1359 0036 BB60     		str	r3, [r7, #8]	@ float
 404:main.c        ****         float deadZoneFloat = ((float)deadZone) * 0.002f * pedalDiff;
 1360              		.loc 1 404 0 discriminator 3
 1361 0038 314B     		ldr	r3, .L17+8
 1362 003a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1363 003c 1846     		mov	r0, r3
 1364 003e FFF7FEFF 		bl	__aeabi_ui2f
 1365 0042 0346     		mov	r3, r0
 1366 0044 2F49     		ldr	r1, .L17+12
 1367 0046 1846     		mov	r0, r3
 1368 0048 FFF7FEFF 		bl	__aeabi_fmul
 1369 004c 0346     		mov	r3, r0
 1370 004e B968     		ldr	r1, [r7, #8]	@ float
 1371 0050 1846     		mov	r0, r3
 1372 0052 FFF7FEFF 		bl	__aeabi_fmul
 1373 0056 0346     		mov	r3, r0
 1374 0058 7B60     		str	r3, [r7, #4]	@ float
 405:main.c        ****         pedals_lowWithDeadZone[i] = (float)pedals_low[i] + deadZoneFloat;
 1375              		.loc 1 405 0 discriminator 3
 1376 005a 284A     		ldr	r2, .L17+4
 1377 005c FB68     		ldr	r3, [r7, #12]
 1378 005e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1379 0062 1846     		mov	r0, r3
 1380 0064 FFF7FEFF 		bl	__aeabi_ui2f
 1381 0068 0346     		mov	r3, r0
 1382 006a 7968     		ldr	r1, [r7, #4]	@ float
 1383 006c 1846     		mov	r0, r3
 1384 006e FFF7FEFF 		bl	__aeabi_fadd
 1385 0072 0346     		mov	r3, r0
 1386 0074 1846     		mov	r0, r3
 1387 0076 FFF7FEFF 		bl	__aeabi_f2uiz
 1388 007a 0346     		mov	r3, r0
 1389 007c 99B2     		uxth	r1, r3
 1390 007e 224A     		ldr	r2, .L17+16
 1391 0080 FB68     		ldr	r3, [r7, #12]
 1392 0082 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 406:main.c        ****         pedals_highWithDeadZone[i] = (float)pedals_high[i] - deadZoneFloat;
 1393              		.loc 1 406 0 discriminator 3
 1394 0086 1C4A     		ldr	r2, .L17
 1395 0088 FB68     		ldr	r3, [r7, #12]
 1396 008a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1397 008e 1846     		mov	r0, r3
 1398 0090 FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 33


 1399 0094 0346     		mov	r3, r0
 1400 0096 7968     		ldr	r1, [r7, #4]	@ float
 1401 0098 1846     		mov	r0, r3
 1402 009a FFF7FEFF 		bl	__aeabi_fsub
 1403 009e 0346     		mov	r3, r0
 1404 00a0 1846     		mov	r0, r3
 1405 00a2 FFF7FEFF 		bl	__aeabi_f2uiz
 1406 00a6 0346     		mov	r3, r0
 1407 00a8 99B2     		uxth	r1, r3
 1408 00aa 184A     		ldr	r2, .L17+20
 1409 00ac FB68     		ldr	r3, [r7, #12]
 1410 00ae 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 407:main.c        ****         pedalDiff = pedals_highWithDeadZone[i] - pedals_lowWithDeadZone[i]; //final diff to calcula
 1411              		.loc 1 407 0 discriminator 3
 1412 00b2 164A     		ldr	r2, .L17+20
 1413 00b4 FB68     		ldr	r3, [r7, #12]
 1414 00b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1415 00ba 1946     		mov	r1, r3
 1416 00bc 124A     		ldr	r2, .L17+16
 1417 00be FB68     		ldr	r3, [r7, #12]
 1418 00c0 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1419 00c4 CB1A     		subs	r3, r1, r3
 1420 00c6 1846     		mov	r0, r3
 1421 00c8 FFF7FEFF 		bl	__aeabi_i2f
 1422 00cc 0346     		mov	r3, r0
 1423 00ce BB60     		str	r3, [r7, #8]	@ float
 408:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1424              		.loc 1 408 0 discriminator 3
 1425 00d0 B968     		ldr	r1, [r7, #8]	@ float
 1426 00d2 0F48     		ldr	r0, .L17+24
 1427 00d4 FFF7FEFF 		bl	__aeabi_fdiv
 1428 00d8 0346     		mov	r3, r0
 1429 00da 1946     		mov	r1, r3
 1430 00dc 0D4A     		ldr	r2, .L17+28
 1431 00de FB68     		ldr	r3, [r7, #12]
 1432 00e0 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1433              	.LBE5:
 400:main.c        ****     {
 1434              		.loc 1 400 0 discriminator 3
 1435 00e4 FB68     		ldr	r3, [r7, #12]
 1436 00e6 0133     		adds	r3, r3, #1
 1437 00e8 FB60     		str	r3, [r7, #12]
 1438              	.L15:
 400:main.c        ****     {
 1439              		.loc 1 400 0 is_stmt 0 discriminator 1
 1440 00ea FB68     		ldr	r3, [r7, #12]
 1441 00ec 092B     		cmp	r3, #9
 1442 00ee 8DDD     		ble	.L16
 1443              	.LBE4:
 409:main.c        ****     }
 410:main.c        **** }
 1444              		.loc 1 410 0 is_stmt 1
 1445 00f0 00BF     		nop
 1446 00f2 1437     		adds	r7, r7, #20
 1447              		.cfi_def_cfa_offset 12
 1448 00f4 BD46     		mov	sp, r7
 1449              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 34


 1450              		@ sp needed
 1451 00f6 90BD     		pop	{r4, r7, pc}
 1452              	.L18:
 1453              		.align	2
 1454              	.L17:
 1455 00f8 00000000 		.word	pedals_high
 1456 00fc 00000000 		.word	pedals_low
 1457 0100 00000000 		.word	deadZone
 1458 0104 6F12033B 		.word	990057071
 1459 0108 00000000 		.word	pedals_lowWithDeadZone
 1460 010c 00000000 		.word	pedals_highWithDeadZone
 1461 0110 00F07F45 		.word	1166012416
 1462 0114 00000000 		.word	pedalRatios
 1463              		.cfi_endproc
 1464              	.LFE67:
 1465              		.size	calculatePedalRatios, .-calculatePedalRatios
 1466              		.global	__aeabi_fcmpeq
 1467              		.section	.text.calculateStringRepDivider,"ax",%progbits
 1468              		.align	2
 1469              		.global	calculateStringRepDivider
 1470              		.thumb
 1471              		.thumb_func
 1472              		.type	calculateStringRepDivider, %function
 1473              	calculateStringRepDivider:
 1474              	.LFB68:
 411:main.c        **** void calculateStringRepDivider(void)
 412:main.c        **** {
 1475              		.loc 1 412 0
 1476              		.cfi_startproc
 1477              		@ args = 0, pretend = 0, frame = 0
 1478              		@ frame_needed = 1, uses_anonymous_args = 0
 1479 0000 80B5     		push	{r7, lr}
 1480              		.cfi_def_cfa_offset 8
 1481              		.cfi_offset 7, -8
 1482              		.cfi_offset 14, -4
 1483 0002 00AF     		add	r7, sp, #0
 1484              		.cfi_def_cfa_register 7
 413:main.c        ****     stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1485              		.loc 1 413 0
 1486 0004 1C4B     		ldr	r3, .L25
 1487 0006 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1488 0008 1A46     		mov	r2, r3
 1489 000a 1B4B     		ldr	r3, .L25
 1490 000c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1491 000e D31A     		subs	r3, r2, r3
 1492 0010 1846     		mov	r0, r3
 1493 0012 FFF7FEFF 		bl	__aeabi_i2f
 1494 0016 0246     		mov	r2, r0
 1495 0018 184B     		ldr	r3, .L25+4
 1496 001a 1A60     		str	r2, [r3]	@ float
 414:main.c        ****     if (stringRepDivider == 0.0f)
 1497              		.loc 1 414 0
 1498 001c 174B     		ldr	r3, .L25+4
 1499 001e 1B68     		ldr	r3, [r3]	@ float
 1500 0020 4FF00001 		mov	r1, #0
 1501 0024 1846     		mov	r0, r3
 1502 0026 FFF7FEFF 		bl	__aeabi_fcmpeq
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 35


 1503 002a 0346     		mov	r3, r0
 1504 002c 002B     		cmp	r3, #0
 1505 002e 11D0     		beq	.L20
 415:main.c        ****     {
 416:main.c        ****         stringRepresentation[0] = 2;
 1506              		.loc 1 416 0
 1507 0030 114B     		ldr	r3, .L25
 1508 0032 0222     		movs	r2, #2
 1509 0034 1A70     		strb	r2, [r3]
 417:main.c        ****         stringRepresentation[1] = 7;
 1510              		.loc 1 417 0
 1511 0036 104B     		ldr	r3, .L25
 1512 0038 0722     		movs	r2, #7
 1513 003a 5A70     		strb	r2, [r3, #1]
 418:main.c        ****         stringRepDivider = (stringRepresentation[1] - stringRepresentation[0]);
 1514              		.loc 1 418 0
 1515 003c 0E4B     		ldr	r3, .L25
 1516 003e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1517 0040 1A46     		mov	r2, r3
 1518 0042 0D4B     		ldr	r3, .L25
 1519 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1520 0046 D31A     		subs	r3, r2, r3
 1521 0048 1846     		mov	r0, r3
 1522 004a FFF7FEFF 		bl	__aeabi_i2f
 1523 004e 0246     		mov	r2, r0
 1524 0050 0A4B     		ldr	r3, .L25+4
 1525 0052 1A60     		str	r2, [r3]	@ float
 1526              	.L20:
 419:main.c        ****     }
 420:main.c        ****     if (!sliderBugOn)
 1527              		.loc 1 420 0
 1528 0054 0A4B     		ldr	r3, .L25+8
 1529 0056 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1530 0058 002B     		cmp	r3, #0
 1531 005a 0AD1     		bne	.L24
 421:main.c        ****     {
 422:main.c        ****         stringRepDivider = (1.0f / stringRepDivider);
 1532              		.loc 1 422 0
 1533 005c 074B     		ldr	r3, .L25+4
 1534 005e 1B68     		ldr	r3, [r3]	@ float
 1535 0060 1946     		mov	r1, r3
 1536 0062 4FF07E50 		mov	r0, #1065353216
 1537 0066 FFF7FEFF 		bl	__aeabi_fdiv
 1538 006a 0346     		mov	r3, r0
 1539 006c 1A46     		mov	r2, r3
 1540 006e 034B     		ldr	r3, .L25+4
 1541 0070 1A60     		str	r2, [r3]	@ float
 1542              	.L24:
 423:main.c        ****     }
 424:main.c        **** }
 1543              		.loc 1 424 0
 1544 0072 00BF     		nop
 1545 0074 80BD     		pop	{r7, pc}
 1546              	.L26:
 1547 0076 00BF     		.align	2
 1548              	.L25:
 1549 0078 00000000 		.word	stringRepresentation
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 36


 1550 007c 00000000 		.word	stringRepDivider
 1551 0080 00000000 		.word	sliderBugOn
 1552              		.cfi_endproc
 1553              	.LFE68:
 1554              		.size	calculateStringRepDivider, .-calculateStringRepDivider
 1555              		.section	.text.unsafeFtom,"ax",%progbits
 1556              		.align	2
 1557              		.global	unsafeFtom
 1558              		.thumb
 1559              		.thumb_func
 1560              		.type	unsafeFtom, %function
 1561              	unsafeFtom:
 1562              	.LFB69:
 425:main.c        **** 
 426:main.c        **** float unsafeFtom(float f)
 427:main.c        **** {
 1563              		.loc 1 427 0
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567 0000 80B5     		push	{r7, lr}
 1568              		.cfi_def_cfa_offset 8
 1569              		.cfi_offset 7, -8
 1570              		.cfi_offset 14, -4
 1571 0002 82B0     		sub	sp, sp, #8
 1572              		.cfi_def_cfa_offset 16
 1573 0004 00AF     		add	r7, sp, #0
 1574              		.cfi_def_cfa_register 7
 1575 0006 7860     		str	r0, [r7, #4]	@ float
 428:main.c        ****     return (17.3123405046f * logf(.12231220585f * f));
 1576              		.loc 1 428 0
 1577 0008 0849     		ldr	r1, .L29
 1578 000a 7868     		ldr	r0, [r7, #4]	@ float
 1579 000c FFF7FEFF 		bl	__aeabi_fmul
 1580 0010 0346     		mov	r3, r0
 1581 0012 1846     		mov	r0, r3
 1582 0014 FFF7FEFF 		bl	logf
 1583 0018 0346     		mov	r3, r0
 1584 001a 0549     		ldr	r1, .L29+4
 1585 001c 1846     		mov	r0, r3
 1586 001e FFF7FEFF 		bl	__aeabi_fmul
 1587 0022 0346     		mov	r3, r0
 429:main.c        **** }
 1588              		.loc 1 429 0
 1589 0024 1846     		mov	r0, r3
 1590 0026 0837     		adds	r7, r7, #8
 1591              		.cfi_def_cfa_offset 8
 1592 0028 BD46     		mov	sp, r7
 1593              		.cfi_def_cfa_register 13
 1594              		@ sp needed
 1595 002a 80BD     		pop	{r7, pc}
 1596              	.L30:
 1597              		.align	2
 1598              	.L29:
 1599 002c D27EFA3D 		.word	1039826642
 1600 0030 AC7F8A41 		.word	1099595692
 1601              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 37


 1602              	.LFE69:
 1603              		.size	unsafeFtom, .-unsafeFtom
 1604              		.section	.text.restartSystemCheck,"ax",%progbits
 1605              		.align	2
 1606              		.global	restartSystemCheck
 1607              		.thumb
 1608              		.thumb_func
 1609              		.type	restartSystemCheck, %function
 1610              	restartSystemCheck:
 1611              	.LFB70:
 430:main.c        **** 
 431:main.c        **** 
 432:main.c        **** //a check for when a usb cable is plugged in and it needs to restart only once
 433:main.c        **** void restartSystemCheck()
 434:main.c        **** {
 1612              		.loc 1 434 0
 1613              		.cfi_startproc
 1614              		@ args = 0, pretend = 0, frame = 0
 1615              		@ frame_needed = 1, uses_anonymous_args = 0
 1616 0000 80B5     		push	{r7, lr}
 1617              		.cfi_def_cfa_offset 8
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 00AF     		add	r7, sp, #0
 1621              		.cfi_def_cfa_register 7
 435:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 1622              		.loc 1 435 0
 1623 0004 184B     		ldr	r3, .L35
 1624 0006 0222     		movs	r2, #2
 1625 0008 1849     		ldr	r1, .L35+4
 1626 000a 0020     		movs	r0, #0
 1627 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 1628 0010 0346     		mov	r3, r0
 1629 0012 1A46     		mov	r2, r3
 1630 0014 164B     		ldr	r3, .L35+8
 1631 0016 1A70     		strb	r2, [r3]
 436:main.c        ****     //only do the restart check if there is a USB cable plugged in (to avoid restarting while tryin
 437:main.c        ****     if (USB_VBusPresent() == 1)
 1632              		.loc 1 437 0
 1633 0018 FFF7FEFF 		bl	USB_VBusPresent
 1634 001c 0346     		mov	r3, r0
 1635 001e 012B     		cmp	r3, #1
 1636 0020 20D1     		bne	.L34
 438:main.c        ****     {
 439:main.c        ****         if (*(volatile uint8 *) &eepromArray[0] == 1u)
 1637              		.loc 1 439 0
 1638 0022 124B     		ldr	r3, .L35+4
 1639 0024 1B78     		ldrb	r3, [r3]
 1640 0026 DBB2     		uxtb	r3, r3
 1641 0028 012B     		cmp	r3, #1
 1642 002a 0CD1     		bne	.L33
 440:main.c        ****         {
 441:main.c        ****             //a flag says we just restarted
 442:main.c        ****             //write a zero so it knows next time that it's OK to restart
 443:main.c        ****             array[0] = 0;
 1643              		.loc 1 443 0
 1644 002c 114B     		ldr	r3, .L35+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 38


 1645 002e 0022     		movs	r2, #0
 1646 0030 1A70     		strb	r2, [r3]
 444:main.c        ****             Em_EEPROM_Write(0u,array,2u);     
 1647              		.loc 1 444 0
 1648 0032 0D4B     		ldr	r3, .L35
 1649 0034 0222     		movs	r2, #2
 1650 0036 0F49     		ldr	r1, .L35+12
 1651 0038 0020     		movs	r0, #0
 1652 003a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 445:main.c        ****             USB_check_flag = 1;
 1653              		.loc 1 445 0
 1654 003e 0E4B     		ldr	r3, .L35+16
 1655 0040 0122     		movs	r2, #1
 1656 0042 1A70     		strb	r2, [r3]
 446:main.c        ****         }
 447:main.c        ****         else
 448:main.c        ****         {
 449:main.c        ****            //otherwise, we need to restart
 450:main.c        ****            array[0] = 1;
 451:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 452:main.c        ****             USB_Stop();
 453:main.c        ****             I2C_1_Stop();
 454:main.c        ****             CySoftwareReset();
 455:main.c        ****         }
 456:main.c        ****     }
 457:main.c        **** }
 1657              		.loc 1 457 0
 1658 0044 0EE0     		b	.L34
 1659              	.L33:
 450:main.c        ****            Em_EEPROM_Write(0u,array,2u);  
 1660              		.loc 1 450 0
 1661 0046 0B4B     		ldr	r3, .L35+12
 1662 0048 0122     		movs	r2, #1
 1663 004a 1A70     		strb	r2, [r3]
 451:main.c        ****             USB_Stop();
 1664              		.loc 1 451 0
 1665 004c 064B     		ldr	r3, .L35
 1666 004e 0222     		movs	r2, #2
 1667 0050 0849     		ldr	r1, .L35+12
 1668 0052 0020     		movs	r0, #0
 1669 0054 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 452:main.c        ****             I2C_1_Stop();
 1670              		.loc 1 452 0
 1671 0058 FFF7FEFF 		bl	USB_Stop
 453:main.c        ****             CySoftwareReset();
 1672              		.loc 1 453 0
 1673 005c FFF7FEFF 		bl	I2C_1_Stop
 454:main.c        ****         }
 1674              		.loc 1 454 0
 1675 0060 FFF7FEFF 		bl	CySoftwareReset
 1676              	.L34:
 1677              		.loc 1 457 0
 1678 0064 00BF     		nop
 1679 0066 80BD     		pop	{r7, pc}
 1680              	.L36:
 1681              		.align	2
 1682              	.L35:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 39


 1683 0068 00000000 		.word	Em_EEPROM_context
 1684 006c 88000000 		.word	eepromArray
 1685 0070 00000000 		.word	eepromReturnValue
 1686 0074 00000000 		.word	array
 1687 0078 00000000 		.word	USB_check_flag
 1688              		.cfi_endproc
 1689              	.LFE70:
 1690              		.size	restartSystemCheck, .-restartSystemCheck
 1691              		.section	.text.Vbus_function,"ax",%progbits
 1692              		.align	2
 1693              		.global	Vbus_function
 1694              		.thumb
 1695              		.thumb_func
 1696              		.type	Vbus_function, %function
 1697              	Vbus_function:
 1698              	.LFB71:
 458:main.c        **** 
 459:main.c        **** //ISRs
 460:main.c        **** 
 461:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 462:main.c        **** CY_ISR(Vbus_function)
 463:main.c        **** {
 1699              		.loc 1 463 0
 1700              		.cfi_startproc
 1701              		@ args = 0, pretend = 0, frame = 0
 1702              		@ frame_needed = 1, uses_anonymous_args = 0
 1703 0000 80B5     		push	{r7, lr}
 1704              		.cfi_def_cfa_offset 8
 1705              		.cfi_offset 7, -8
 1706              		.cfi_offset 14, -4
 1707 0002 00AF     		add	r7, sp, #0
 1708              		.cfi_def_cfa_register 7
 464:main.c        ****     //plug or unplug event
 465:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 466:main.c        ****     //otherwise, restart
 467:main.c        ****     my_Vbus_ISR_ClearPending();
 1709              		.loc 1 467 0
 1710 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 468:main.c        ****     vBusPin_ClearInterrupt();
 1711              		.loc 1 468 0
 1712 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 469:main.c        ****     restartSystemCheck();
 1713              		.loc 1 469 0
 1714 000c FFF7FEFF 		bl	restartSystemCheck
 470:main.c        **** 
 471:main.c        **** }
 1715              		.loc 1 471 0
 1716 0010 00BF     		nop
 1717 0012 80BD     		pop	{r7, pc}
 1718              		.cfi_endproc
 1719              	.LFE71:
 1720              		.size	Vbus_function, .-Vbus_function
 1721              		.section	.text.spis_2_ss,"ax",%progbits
 1722              		.align	2
 1723              		.global	spis_2_ss
 1724              		.thumb
 1725              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 40


 1726              		.type	spis_2_ss, %function
 1727              	spis_2_ss:
 1728              	.LFB72:
 472:main.c        **** 
 473:main.c        **** //This one happens when the Bar slider buffer gets filled by SPI
 474:main.c        **** CY_ISR(spis_2_ss)
 475:main.c        **** {
 1729              		.loc 1 475 0
 1730              		.cfi_startproc
 1731              		@ args = 0, pretend = 0, frame = 0
 1732              		@ frame_needed = 1, uses_anonymous_args = 0
 1733 0000 80B5     		push	{r7, lr}
 1734              		.cfi_def_cfa_offset 8
 1735              		.cfi_offset 7, -8
 1736              		.cfi_offset 14, -4
 1737 0002 00AF     		add	r7, sp, #0
 1738              		.cfi_def_cfa_register 7
 476:main.c        **** 
 477:main.c        ****     currentBarBuffer = !currentBarBuffer;
 1739              		.loc 1 477 0
 1740 0004 214B     		ldr	r3, .L39
 1741 0006 1B78     		ldrb	r3, [r3]
 1742 0008 DBB2     		uxtb	r3, r3
 1743 000a 002B     		cmp	r3, #0
 1744 000c 0CBF     		ite	eq
 1745 000e 0123     		moveq	r3, #1
 1746 0010 0023     		movne	r3, #0
 1747 0012 DBB2     		uxtb	r3, r3
 1748 0014 1A46     		mov	r2, r3
 1749 0016 1D4B     		ldr	r3, .L39
 1750 0018 1A70     		strb	r2, [r3]
 478:main.c        ****     SPIS_2_ClearRxBuffer();
 1751              		.loc 1 478 0
 1752 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 479:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 1753              		.loc 1 479 0
 1754 001e 1C4B     		ldr	r3, .L39+4
 1755 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1756 0022 1846     		mov	r0, r3
 1757 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 480:main.c        **** 
 481:main.c        ****     //set up the next DMA transaction
 482:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 1758              		.loc 1 482 0
 1759 0028 184B     		ldr	r3, .L39
 1760 002a 1B78     		ldrb	r3, [r3]
 1761 002c DBB2     		uxtb	r3, r3
 1762 002e 1A46     		mov	r2, r3
 1763 0030 184B     		ldr	r3, .L39+8
 1764 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1765 0034 0223     		movs	r3, #2
 1766 0036 FE22     		movs	r2, #254
 1767 0038 0821     		movs	r1, #8
 1768 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 483:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 1769              		.loc 1 483 0
 1770 003e 134B     		ldr	r3, .L39
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 41


 1771 0040 1B78     		ldrb	r3, [r3]
 1772 0042 DBB2     		uxtb	r3, r3
 1773 0044 1A46     		mov	r2, r3
 1774 0046 134B     		ldr	r3, .L39+8
 1775 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1776 004a 104B     		ldr	r3, .L39
 1777 004c 1B78     		ldrb	r3, [r3]
 1778 004e DBB2     		uxtb	r3, r3
 1779 0050 DB00     		lsls	r3, r3, #3
 1780 0052 114A     		ldr	r2, .L39+12
 1781 0054 1344     		add	r3, r3, r2
 1782 0056 9BB2     		uxth	r3, r3
 1783 0058 1A46     		mov	r2, r3
 1784 005a 46F25551 		movw	r1, #25941
 1785 005e FFF7FEFF 		bl	CyDmaTdSetAddress
 484:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 1786              		.loc 1 484 0
 1787 0062 0B4B     		ldr	r3, .L39+4
 1788 0064 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1789 0066 094B     		ldr	r3, .L39
 1790 0068 1B78     		ldrb	r3, [r3]
 1791 006a DBB2     		uxtb	r3, r3
 1792 006c 1946     		mov	r1, r3
 1793 006e 094B     		ldr	r3, .L39+8
 1794 0070 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1795 0072 1946     		mov	r1, r3
 1796 0074 1046     		mov	r0, r2
 1797 0076 FFF7FEFF 		bl	CyDmaChSetInitialTd
 485:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 1798              		.loc 1 485 0
 1799 007a 054B     		ldr	r3, .L39+4
 1800 007c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1801 007e 0121     		movs	r1, #1
 1802 0080 1846     		mov	r0, r3
 1803 0082 FFF7FEFF 		bl	CyDmaChEnable
 486:main.c        **** }
 1804              		.loc 1 486 0
 1805 0086 00BF     		nop
 1806 0088 80BD     		pop	{r7, pc}
 1807              	.L40:
 1808 008a 00BF     		.align	2
 1809              	.L39:
 1810 008c 00000000 		.word	currentBarBuffer
 1811 0090 00000000 		.word	rx2Channel
 1812 0094 00000000 		.word	rx2TD
 1813 0098 00000000 		.word	rxBufferBar
 1814              		.cfi_endproc
 1815              	.LFE72:
 1816              		.size	spis_2_ss, .-spis_2_ss
 1817              		.section	.text.spis_1_ss,"ax",%progbits
 1818              		.align	2
 1819              		.global	spis_1_ss
 1820              		.thumb
 1821              		.thumb_func
 1822              		.type	spis_1_ss, %function
 1823              	spis_1_ss:
 1824              	.LFB73:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 42


 487:main.c        **** 
 488:main.c        **** CY_ISR(spis_1_ss)
 489:main.c        **** {
 1825              		.loc 1 489 0
 1826              		.cfi_startproc
 1827              		@ args = 0, pretend = 0, frame = 8
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 0000 80B5     		push	{r7, lr}
 1830              		.cfi_def_cfa_offset 8
 1831              		.cfi_offset 7, -8
 1832              		.cfi_offset 14, -4
 1833 0002 82B0     		sub	sp, sp, #8
 1834              		.cfi_def_cfa_offset 16
 1835 0004 00AF     		add	r7, sp, #0
 1836              		.cfi_def_cfa_register 7
 490:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 1837              		.loc 1 490 0
 1838 0006 4F4B     		ldr	r3, .L45
 1839 0008 1B78     		ldrb	r3, [r3]
 1840 000a DBB2     		uxtb	r3, r3
 1841 000c 002B     		cmp	r3, #0
 1842 000e 0CBF     		ite	eq
 1843 0010 0123     		moveq	r3, #1
 1844 0012 0023     		movne	r3, #0
 1845 0014 DBB2     		uxtb	r3, r3
 1846 0016 1A46     		mov	r2, r3
 1847 0018 4A4B     		ldr	r3, .L45
 1848 001a 1A70     		strb	r2, [r3]
 491:main.c        **** 
 492:main.c        ****     if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][31] =
 1849              		.loc 1 492 0
 1850 001c 494B     		ldr	r3, .L45
 1851 001e 1B78     		ldrb	r3, [r3]
 1852 0020 DBB2     		uxtb	r3, r3
 1853 0022 002B     		cmp	r3, #0
 1854 0024 0CBF     		ite	eq
 1855 0026 0123     		moveq	r3, #1
 1856 0028 0023     		movne	r3, #0
 1857 002a DBB2     		uxtb	r3, r3
 1858 002c 464A     		ldr	r2, .L45+4
 1859 002e 5B01     		lsls	r3, r3, #5
 1860 0030 1344     		add	r3, r3, r2
 1861 0032 1B78     		ldrb	r3, [r3]
 1862 0034 DBB2     		uxtb	r3, r3
 1863 0036 FE2B     		cmp	r3, #254
 1864 0038 49D1     		bne	.L42
 1865              		.loc 1 492 0 is_stmt 0 discriminator 1
 1866 003a 424B     		ldr	r3, .L45
 1867 003c 1B78     		ldrb	r3, [r3]
 1868 003e DBB2     		uxtb	r3, r3
 1869 0040 002B     		cmp	r3, #0
 1870 0042 0CBF     		ite	eq
 1871 0044 0123     		moveq	r3, #1
 1872 0046 0023     		movne	r3, #0
 1873 0048 DBB2     		uxtb	r3, r3
 1874 004a 3F4A     		ldr	r2, .L45+4
 1875 004c 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 43


 1876 004e 1344     		add	r3, r3, r2
 1877 0050 1F33     		adds	r3, r3, #31
 1878 0052 1B78     		ldrb	r3, [r3]
 1879 0054 DBB2     		uxtb	r3, r3
 1880 0056 FD2B     		cmp	r3, #253
 1881 0058 39D1     		bne	.L42
 1882              	.LBB6:
 493:main.c        ****     {
 494:main.c        ****         for (int i = 0 ; i < numStrings; i++)
 1883              		.loc 1 494 0 is_stmt 1
 1884 005a 0023     		movs	r3, #0
 1885 005c 7B60     		str	r3, [r7, #4]
 1886 005e 30E0     		b	.L43
 1887              	.L44:
 495:main.c        ****         {
 496:main.c        ****             strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 8) + rxBufferPluck[!curre
 1888              		.loc 1 496 0 discriminator 3
 1889 0060 384B     		ldr	r3, .L45
 1890 0062 1B78     		ldrb	r3, [r3]
 1891 0064 DBB2     		uxtb	r3, r3
 1892 0066 002B     		cmp	r3, #0
 1893 0068 0CBF     		ite	eq
 1894 006a 0123     		moveq	r3, #1
 1895 006c 0023     		movne	r3, #0
 1896 006e DBB2     		uxtb	r3, r3
 1897 0070 1A46     		mov	r2, r3
 1898 0072 7B68     		ldr	r3, [r7, #4]
 1899 0074 5B00     		lsls	r3, r3, #1
 1900 0076 0133     		adds	r3, r3, #1
 1901 0078 3349     		ldr	r1, .L45+4
 1902 007a 5201     		lsls	r2, r2, #5
 1903 007c 0A44     		add	r2, r2, r1
 1904 007e 1344     		add	r3, r3, r2
 1905 0080 1B78     		ldrb	r3, [r3]
 1906 0082 DBB2     		uxtb	r3, r3
 1907 0084 9BB2     		uxth	r3, r3
 1908 0086 1B02     		lsls	r3, r3, #8
 1909 0088 9AB2     		uxth	r2, r3
 1910 008a 2E4B     		ldr	r3, .L45
 1911 008c 1B78     		ldrb	r3, [r3]
 1912 008e DBB2     		uxtb	r3, r3
 1913 0090 002B     		cmp	r3, #0
 1914 0092 0CBF     		ite	eq
 1915 0094 0123     		moveq	r3, #1
 1916 0096 0023     		movne	r3, #0
 1917 0098 DBB2     		uxtb	r3, r3
 1918 009a 1946     		mov	r1, r3
 1919 009c 7B68     		ldr	r3, [r7, #4]
 1920 009e 0133     		adds	r3, r3, #1
 1921 00a0 5B00     		lsls	r3, r3, #1
 1922 00a2 2948     		ldr	r0, .L45+4
 1923 00a4 4901     		lsls	r1, r1, #5
 1924 00a6 0144     		add	r1, r1, r0
 1925 00a8 0B44     		add	r3, r3, r1
 1926 00aa 1B78     		ldrb	r3, [r3]
 1927 00ac DBB2     		uxtb	r3, r3
 1928 00ae 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 44


 1929 00b0 1344     		add	r3, r3, r2
 1930 00b2 99B2     		uxth	r1, r3
 1931 00b4 254A     		ldr	r2, .L45+8
 1932 00b6 7B68     		ldr	r3, [r7, #4]
 1933 00b8 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 494:main.c        ****         {
 1934              		.loc 1 494 0 discriminator 3
 1935 00bc 7B68     		ldr	r3, [r7, #4]
 1936 00be 0133     		adds	r3, r3, #1
 1937 00c0 7B60     		str	r3, [r7, #4]
 1938              	.L43:
 494:main.c        ****         {
 1939              		.loc 1 494 0 is_stmt 0 discriminator 1
 1940 00c2 234B     		ldr	r3, .L45+12
 1941 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1942 00c6 1A46     		mov	r2, r3
 1943 00c8 7B68     		ldr	r3, [r7, #4]
 1944 00ca 9A42     		cmp	r2, r3
 1945 00cc C8DC     		bgt	.L44
 1946              	.L42:
 1947              	.LBE6:
 497:main.c        ****         }
 498:main.c        ****     }
 499:main.c        ****     SPIS_1_ClearRxBuffer();
 1948              		.loc 1 499 0 is_stmt 1
 1949 00ce FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
 500:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 1950              		.loc 1 500 0
 1951 00d2 204B     		ldr	r3, .L45+16
 1952 00d4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1953 00d6 1846     		mov	r0, r3
 1954 00d8 FFF7FEFF 		bl	CyDmaClearPendingDrq
 501:main.c        **** 
 502:main.c        ****     //set up the next DMA transaction
 503:main.c        **** 
 504:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 1955              		.loc 1 504 0
 1956 00dc 194B     		ldr	r3, .L45
 1957 00de 1B78     		ldrb	r3, [r3]
 1958 00e0 DBB2     		uxtb	r3, r3
 1959 00e2 1A46     		mov	r2, r3
 1960 00e4 1C4B     		ldr	r3, .L45+20
 1961 00e6 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1962 00e8 0223     		movs	r3, #2
 1963 00ea FE22     		movs	r2, #254
 1964 00ec 2021     		movs	r1, #32
 1965 00ee FFF7FEFF 		bl	CyDmaTdSetConfiguration
 505:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 1966              		.loc 1 505 0
 1967 00f2 144B     		ldr	r3, .L45
 1968 00f4 1B78     		ldrb	r3, [r3]
 1969 00f6 DBB2     		uxtb	r3, r3
 1970 00f8 1A46     		mov	r2, r3
 1971 00fa 174B     		ldr	r3, .L45+20
 1972 00fc 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 1973 00fe 114B     		ldr	r3, .L45
 1974 0100 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 45


 1975 0102 DBB2     		uxtb	r3, r3
 1976 0104 5B01     		lsls	r3, r3, #5
 1977 0106 104A     		ldr	r2, .L45+4
 1978 0108 1344     		add	r3, r3, r2
 1979 010a 9BB2     		uxth	r3, r3
 1980 010c 1A46     		mov	r2, r3
 1981 010e 46F25741 		movw	r1, #25687
 1982 0112 FFF7FEFF 		bl	CyDmaTdSetAddress
 506:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 1983              		.loc 1 506 0
 1984 0116 0F4B     		ldr	r3, .L45+16
 1985 0118 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1986 011a 0A4B     		ldr	r3, .L45
 1987 011c 1B78     		ldrb	r3, [r3]
 1988 011e DBB2     		uxtb	r3, r3
 1989 0120 1946     		mov	r1, r3
 1990 0122 0D4B     		ldr	r3, .L45+20
 1991 0124 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 1992 0126 1946     		mov	r1, r3
 1993 0128 1046     		mov	r0, r2
 1994 012a FFF7FEFF 		bl	CyDmaChSetInitialTd
 507:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 1995              		.loc 1 507 0
 1996 012e 094B     		ldr	r3, .L45+16
 1997 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1998 0132 0121     		movs	r1, #1
 1999 0134 1846     		mov	r0, r3
 2000 0136 FFF7FEFF 		bl	CyDmaChEnable
 508:main.c        **** 
 509:main.c        **** }
 2001              		.loc 1 509 0
 2002 013a 00BF     		nop
 2003 013c 0837     		adds	r7, r7, #8
 2004              		.cfi_def_cfa_offset 8
 2005 013e BD46     		mov	sp, r7
 2006              		.cfi_def_cfa_register 13
 2007              		@ sp needed
 2008 0140 80BD     		pop	{r7, pc}
 2009              	.L46:
 2010 0142 00BF     		.align	2
 2011              	.L45:
 2012 0144 00000000 		.word	currentPluckBuffer
 2013 0148 00000000 		.word	rxBufferPluck
 2014 014c 00000000 		.word	strings
 2015 0150 00000000 		.word	numStrings
 2016 0154 00000000 		.word	rx1Channel
 2017 0158 00000000 		.word	rx1TD
 2018              		.cfi_endproc
 2019              	.LFE73:
 2020              		.size	spis_1_ss, .-spis_1_ss
 2021              		.section	.text.loadEEPROMdefaults,"ax",%progbits
 2022              		.align	2
 2023              		.global	loadEEPROMdefaults
 2024              		.thumb
 2025              		.thumb_func
 2026              		.type	loadEEPROMdefaults, %function
 2027              	loadEEPROMdefaults:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 46


 2028              	.LFB74:
 510:main.c        **** 
 511:main.c        **** void loadEEPROMdefaults(void)
 512:main.c        **** {
 2029              		.loc 1 512 0
 2030              		.cfi_startproc
 2031              		@ args = 0, pretend = 0, frame = 0
 2032              		@ frame_needed = 1, uses_anonymous_args = 0
 2033 0000 80B5     		push	{r7, lr}
 2034              		.cfi_def_cfa_offset 8
 2035              		.cfi_offset 7, -8
 2036              		.cfi_offset 14, -4
 2037 0002 00AF     		add	r7, sp, #0
 2038              		.cfi_def_cfa_register 7
 513:main.c        ****     EEPROM_WriteByte(0, EEPROM_CURRENT_PRESET_OFFSET);
 2039              		.loc 1 513 0
 2040 0004 40F2D671 		movw	r1, #2006
 2041 0008 0020     		movs	r0, #0
 2042 000a FFF7FEFF 		bl	EEPROM_WriteByte
 514:main.c        ****     EEPROM_WriteByte(0, EEPROM_NECKS_OFFSET);
 2043              		.loc 1 514 0
 2044 000e 40F2E371 		movw	r1, #2019
 2045 0012 0020     		movs	r0, #0
 2046 0014 FFF7FEFF 		bl	EEPROM_WriteByte
 515:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET);
 2047              		.loc 1 515 0
 2048 0018 4FF4FB61 		mov	r1, #2008
 2049 001c 0020     		movs	r0, #0
 2050 001e FFF7FEFF 		bl	EEPROM_WriteByte
 516:main.c        ****     EEPROM_WriteByte((int8_t)0, EEPROM_TRANSPOSE_OFFSET+1);
 2051              		.loc 1 516 0
 2052 0022 40F2D971 		movw	r1, #2009
 2053 0026 0020     		movs	r0, #0
 2054 0028 FFF7FEFF 		bl	EEPROM_WriteByte
 517:main.c        ****     EEPROM_WriteByte(1, EEPROM_MIDI_SEND_OFFSET);
 2055              		.loc 1 517 0
 2056 002c 40F2DF71 		movw	r1, #2015
 2057 0030 0120     		movs	r0, #1
 2058 0032 FFF7FEFF 		bl	EEPROM_WriteByte
 518:main.c        ****     EEPROM_WriteByte(0,EEPROM_NECK_PRESETS_OFFSET);
 2059              		.loc 1 518 0
 2060 0036 40F2DC71 		movw	r1, #2012
 2061 003a 0020     		movs	r0, #0
 2062 003c FFF7FEFF 		bl	EEPROM_WriteByte
 519:main.c        ****     EEPROM_WriteByte(0,EEPROM_PEDALSUM_OFFSET);
 2063              		.loc 1 519 0
 2064 0040 40F2DE71 		movw	r1, #2014
 2065 0044 0020     		movs	r0, #0
 2066 0046 FFF7FEFF 		bl	EEPROM_WriteByte
 520:main.c        ****     EEPROM_WriteByte(64,EEPROM_DEADZONES_OFFSET);
 2067              		.loc 1 520 0
 2068 004a 40F2DB71 		movw	r1, #2011
 2069 004e 4020     		movs	r0, #64
 2070 0050 FFF7FEFF 		bl	EEPROM_WriteByte
 521:main.c        ****     EEPROM_WriteByte(0,EEPROM_OCTAVE_ACTION_OFFSET);
 2071              		.loc 1 521 0
 2072 0054 40F2DA71 		movw	r1, #2010
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 47


 2073 0058 0020     		movs	r0, #0
 2074 005a FFF7FEFF 		bl	EEPROM_WriteByte
 522:main.c        ****     EEPROM_WriteByte(39,EEPROM_STRING_REP_OFFSET);// (strings 3 and 8)
 2075              		.loc 1 522 0
 2076 005e 40F2D771 		movw	r1, #2007
 2077 0062 2720     		movs	r0, #39
 2078 0064 FFF7FEFF 		bl	EEPROM_WriteByte
 523:main.c        ****     EEPROM_WriteByte(0,EEPROM_DUAL_SLIDER_OFFSET);
 2079              		.loc 1 523 0
 2080 0068 40F2E271 		movw	r1, #2018
 2081 006c 0020     		movs	r0, #0
 2082 006e FFF7FEFF 		bl	EEPROM_WriteByte
 524:main.c        ****     EEPROM_WriteByte(64,EEPROM_VOLUME_OFFSET);
 2083              		.loc 1 524 0
 2084 0072 40F2E471 		movw	r1, #2020
 2085 0076 4020     		movs	r0, #64
 2086 0078 FFF7FEFF 		bl	EEPROM_WriteByte
 525:main.c        **** }
 2087              		.loc 1 525 0
 2088 007c 00BF     		nop
 2089 007e 80BD     		pop	{r7, pc}
 2090              		.cfi_endproc
 2091              	.LFE74:
 2092              		.size	loadEEPROMdefaults, .-loadEEPROMdefaults
 2093              		.section	.rodata
 2094              		.align	2
 2095              	.LC0:
 2096 0500 454C4543 		.ascii	"ELECTROSTEEL\000"
 2096      54524F53 
 2096      5445454C 
 2096      00
 2097              		.global	__aeabi_f2iz
 2098              		.global	__aeabi_fcmpgt
 2099              		.global	__aeabi_fcmplt
 2100 050d 000000   		.align	2
 2101              	.LC1:
 2102 0510 4649524D 		.ascii	"FIRMWARE   \000"
 2102      57415245 
 2102      20202000 
 2103              		.align	2
 2104              	.LC2:
 2105 051c 55504441 		.ascii	"UPDATE     \000"
 2105      54452020 
 2105      20202000 
 2106              		.align	2
 2107              	.LC3:
 2108 0528 20202020 		.ascii	"           \000"
 2108      20202020 
 2108      20202000 
 2109              		.section	.text.main,"ax",%progbits
 2110              		.align	2
 2111              		.global	main
 2112              		.thumb
 2113              		.thumb_func
 2114              		.type	main, %function
 2115              	main:
 2116              	.LFB75:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 48


 526:main.c        **** 
 527:main.c        **** 
 528:main.c        **** int main(void)
 529:main.c        **** {
 2117              		.loc 1 529 0
 2118              		.cfi_startproc
 2119              		@ args = 0, pretend = 0, frame = 224
 2120              		@ frame_needed = 1, uses_anonymous_args = 0
 2121 0000 B0B5     		push	{r4, r5, r7, lr}
 2122              		.cfi_def_cfa_offset 16
 2123              		.cfi_offset 4, -16
 2124              		.cfi_offset 5, -12
 2125              		.cfi_offset 7, -8
 2126              		.cfi_offset 14, -4
 2127 0002 BAB0     		sub	sp, sp, #232
 2128              		.cfi_def_cfa_offset 248
 2129 0004 02AF     		add	r7, sp, #8
 2130              		.cfi_def_cfa 7, 240
 530:main.c        ****     
 531:main.c        **** 	CYGlobalIntEnable; 
 2131              		.loc 1 531 0
 2132              		.syntax unified
 2133              	@ 531 "main.c" 1
 2134 0006 62B6     		CPSIE   i
 2135              	@ 0 "" 2
 532:main.c        ****     EEPROM_Start();
 2136              		.loc 1 532 0
 2137              		.thumb
 2138              		.syntax unified
 2139 0008 FFF7FEFF 		bl	EEPROM_Start
 533:main.c        ****      #ifdef BOOTLOAD_STYLE
 534:main.c        ****      //since we sucessfully booted this firmware, set it to be the default until the brain chip get
 535:main.c        ****     Bootloadable_SET_RUN_TYPE(Bootloadable_SCHEDULE_BTLDB);
 2140              		.loc 1 535 0
 2141 000c C04B     		ldr	r3, .L225
 2142 000e 8022     		movs	r2, #128
 2143 0010 1A70     		strb	r2, [r3]
 536:main.c        ****     #endif
 537:main.c        **** 
 538:main.c        ****     
 539:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 2144              		.loc 1 539 0
 2145 0012 C04B     		ldr	r3, .L225+4
 2146 0014 1846     		mov	r0, r3
 2147 0016 FFF7FEFF 		bl	Em_EEPROM_Init
 2148 001a 0346     		mov	r3, r0
 2149 001c 1A46     		mov	r2, r3
 2150 001e BE4B     		ldr	r3, .L225+8
 2151 0020 1A70     		strb	r2, [r3]
 540:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 541:main.c        ****     {
 542:main.c        ****        // HandleError();
 543:main.c        ****     }
 544:main.c        ****     sysexMessageStartPoints[sysexMessageStartPointsWritePosition] = 0;
 2152              		.loc 1 544 0
 2153 0022 BE4B     		ldr	r3, .L225+12
 2154 0024 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 49


 2155 0026 1946     		mov	r1, r3
 2156 0028 BD4B     		ldr	r3, .L225+16
 2157 002a 0022     		movs	r2, #0
 2158 002c 43F82120 		str	r2, [r3, r1, lsl #2]
 545:main.c        ****     I2C_1_Start();  
 2159              		.loc 1 545 0
 2160 0030 FFF7FEFF 		bl	I2C_1_Start
 546:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 2161              		.loc 1 546 0
 2162 0034 0120     		movs	r0, #1
 2163 0036 FFF7FEFF 		bl	USB_SetPowerStatus
 547:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 2164              		.loc 1 547 0
 2165 003a BA48     		ldr	r0, .L225+20
 2166 003c FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 548:main.c        ****     
 549:main.c        ****     
 550:main.c        ****         //set up for the OLED screen's first write
 551:main.c        ****     I2Cbuff1[0] = 1<<6;
 2167              		.loc 1 551 0
 2168 0040 B94B     		ldr	r3, .L225+24
 2169 0042 4022     		movs	r2, #64
 2170 0044 1A70     		strb	r2, [r3]
 552:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2171              		.loc 1 552 0
 2172 0046 0022     		movs	r2, #0
 2173 0048 0121     		movs	r1, #1
 2174 004a 7020     		movs	r0, #112
 2175 004c FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2176 0050 0346     		mov	r3, r0
 2177 0052 1A46     		mov	r2, r3
 2178 0054 B54B     		ldr	r3, .L225+28
 2179 0056 1A60     		str	r2, [r3]
 553:main.c        ****     myGFX_init(128, 64);
 2180              		.loc 1 553 0
 2181 0058 4021     		movs	r1, #64
 2182 005a 8020     		movs	r0, #128
 2183 005c FFF7FEFF 		bl	myGFX_init
 554:main.c        ****     myGFX_setFont(0);
 2184              		.loc 1 554 0
 2185 0060 0020     		movs	r0, #0
 2186 0062 FFF7FEFF 		bl	myGFX_setFont
 555:main.c        ****     OLED_init(128, 64);
 2187              		.loc 1 555 0
 2188 0066 4021     		movs	r1, #64
 2189 0068 8020     		movs	r0, #128
 2190 006a FFF7FEFF 		bl	OLED_init
 556:main.c        ****     //OLEDwriteInt(currentCopedent , 2, 0,FourthLine);
 557:main.c        ****     OLEDwriteString("ELECTROSTEEL", 12, 0, FirstLine);
 2191              		.loc 1 557 0
 2192 006e 0023     		movs	r3, #0
 2193 0070 0022     		movs	r2, #0
 2194 0072 0C21     		movs	r1, #12
 2195 0074 AE48     		ldr	r0, .L225+32
 2196 0076 FFF7FEFF 		bl	OLEDwriteString
 558:main.c        ****     OLEDwriteFixedFloat(versionNumber, 3, 2, 16, SecondLine);
 2197              		.loc 1 558 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 50


 2198 007a AE48     		ldr	r0, .L225+36
 2199 007c 0123     		movs	r3, #1
 2200 007e 0093     		str	r3, [sp]
 2201 0080 1023     		movs	r3, #16
 2202 0082 0222     		movs	r2, #2
 2203 0084 0321     		movs	r1, #3
 2204 0086 FFF7FEFF 		bl	OLEDwriteFixedFloat
 559:main.c        ****     //OLEDwriteString((char *)&copedentNamesArray[currentCopedent][0], COPEDENT_NAME_CLIPPED_LENGTH
 560:main.c        ****     OLED_draw(128, 64);
 2205              		.loc 1 560 0
 2206 008a 4021     		movs	r1, #64
 2207 008c 8020     		movs	r0, #128
 2208 008e FFF7FEFF 		bl	OLED_draw
 561:main.c        ****     
 562:main.c        ****     
 563:main.c        ****     I2Cbuff1[0] = 1<<2;
 2209              		.loc 1 563 0
 2210 0092 A54B     		ldr	r3, .L225+24
 2211 0094 0422     		movs	r2, #4
 2212 0096 1A70     		strb	r2, [r3]
 564:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 2213              		.loc 1 564 0
 2214 0098 0022     		movs	r2, #0
 2215 009a 0121     		movs	r1, #1
 2216 009c 7020     		movs	r0, #112
 2217 009e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 2218 00a2 0346     		mov	r3, r0
 2219 00a4 1A46     		mov	r2, r3
 2220 00a6 A14B     		ldr	r3, .L225+28
 2221 00a8 1A60     		str	r2, [r3]
 565:main.c        ****     
 566:main.c        ****     CyDelay(500);
 2222              		.loc 1 566 0
 2223 00aa 4FF4FA70 		mov	r0, #500
 2224 00ae FFF7FEFF 		bl	CyDelay
 567:main.c        ****     //read from eeprom all the stored user settings
 568:main.c        ****     
 569:main.c        ****     //check if this is the first time it's ever booted up, in which case there will be no copedents
 570:main.c        ****     if (EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET) == 0)
 2225              		.loc 1 570 0
 2226 00b2 0020     		movs	r0, #0
 2227 00b4 FFF7FEFF 		bl	EEPROM_ReadByte
 2228 00b8 0346     		mov	r3, r0
 2229 00ba 002B     		cmp	r3, #0
 2230 00bc 01D1     		bne	.L49
 571:main.c        ****     {
 572:main.c        ****         loadEEPROMdefaults();
 2231              		.loc 1 572 0
 2232 00be FFF7FEFF 		bl	loadEEPROMdefaults
 2233              	.L49:
 573:main.c        ****         
 574:main.c        ****     }
 575:main.c        ****     patchNum = EEPROM_ReadByte(EEPROM_CURRENT_PRESET_OFFSET);
 2234              		.loc 1 575 0
 2235 00c2 40F2D670 		movw	r0, #2006
 2236 00c6 FFF7FEFF 		bl	EEPROM_ReadByte
 2237 00ca 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 51


 2238 00cc 1A46     		mov	r2, r3
 2239 00ce 9A4B     		ldr	r3, .L225+40
 2240 00d0 1A70     		strb	r2, [r3]
 576:main.c        ****     neckByte = EEPROM_ReadByte(EEPROM_NECKS_OFFSET);
 2241              		.loc 1 576 0
 2242 00d2 40F2E370 		movw	r0, #2019
 2243 00d6 FFF7FEFF 		bl	EEPROM_ReadByte
 2244 00da 0346     		mov	r3, r0
 2245 00dc 1A46     		mov	r2, r3
 2246 00de 974B     		ldr	r3, .L225+44
 2247 00e0 1A70     		strb	r2, [r3]
 577:main.c        ****     necks[0] = (neckByte >> 5) & 7;
 2248              		.loc 1 577 0
 2249 00e2 964B     		ldr	r3, .L225+44
 2250 00e4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2251 00e6 5B09     		lsrs	r3, r3, #5
 2252 00e8 DAB2     		uxtb	r2, r3
 2253 00ea 954B     		ldr	r3, .L225+48
 2254 00ec 1A70     		strb	r2, [r3]
 578:main.c        ****     necks[1] = (neckByte >> 2) & 7;
 2255              		.loc 1 578 0
 2256 00ee 934B     		ldr	r3, .L225+44
 2257 00f0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2258 00f2 9B08     		lsrs	r3, r3, #2
 2259 00f4 DBB2     		uxtb	r3, r3
 2260 00f6 03F00703 		and	r3, r3, #7
 2261 00fa DAB2     		uxtb	r2, r3
 2262 00fc 904B     		ldr	r3, .L225+48
 2263 00fe 5A70     		strb	r2, [r3, #1]
 579:main.c        ****     currentNeck = neckByte & 1;
 2264              		.loc 1 579 0
 2265 0100 8E4B     		ldr	r3, .L225+44
 2266 0102 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2267 0104 03F00103 		and	r3, r3, #1
 2268 0108 DAB2     		uxtb	r2, r3
 2269 010a 8E4B     		ldr	r3, .L225+52
 2270 010c 1A70     		strb	r2, [r3]
 580:main.c        ****     transposeSemitones = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET);
 2271              		.loc 1 580 0
 2272 010e 4FF4FB60 		mov	r0, #2008
 2273 0112 FFF7FEFF 		bl	EEPROM_ReadByte
 2274 0116 0346     		mov	r3, r0
 2275 0118 5AB2     		sxtb	r2, r3
 2276 011a 8B4B     		ldr	r3, .L225+56
 2277 011c 1A70     		strb	r2, [r3]
 581:main.c        ****     transposeCents = (int8_t)EEPROM_ReadByte(EEPROM_TRANSPOSE_OFFSET + 1);
 2278              		.loc 1 581 0
 2279 011e 40F2D970 		movw	r0, #2009
 2280 0122 FFF7FEFF 		bl	EEPROM_ReadByte
 2281 0126 0346     		mov	r3, r0
 2282 0128 5AB2     		sxtb	r2, r3
 2283 012a 884B     		ldr	r3, .L225+60
 2284 012c 1A70     		strb	r2, [r3]
 582:main.c        ****     transposeFloat = ((float)transposeSemitones) + (((float)transposeCents) * 0.01f);
 2285              		.loc 1 582 0
 2286 012e 864B     		ldr	r3, .L225+56
 2287 0130 93F90030 		ldrsb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 52


 2288 0134 1846     		mov	r0, r3
 2289 0136 FFF7FEFF 		bl	__aeabi_i2f
 2290 013a 0446     		mov	r4, r0
 2291 013c 834B     		ldr	r3, .L225+60
 2292 013e 93F90030 		ldrsb	r3, [r3]
 2293 0142 1846     		mov	r0, r3
 2294 0144 FFF7FEFF 		bl	__aeabi_i2f
 2295 0148 0346     		mov	r3, r0
 2296 014a 8149     		ldr	r1, .L225+64
 2297 014c 1846     		mov	r0, r3
 2298 014e FFF7FEFF 		bl	__aeabi_fmul
 2299 0152 0346     		mov	r3, r0
 2300 0154 1946     		mov	r1, r3
 2301 0156 2046     		mov	r0, r4
 2302 0158 FFF7FEFF 		bl	__aeabi_fadd
 2303 015c 0346     		mov	r3, r0
 2304 015e 1A46     		mov	r2, r3
 2305 0160 7C4B     		ldr	r3, .L225+68
 2306 0162 1A60     		str	r2, [r3]	@ float
 583:main.c        ****     midiSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&1;
 2307              		.loc 1 583 0
 2308 0164 40F2DF70 		movw	r0, #2015
 2309 0168 FFF7FEFF 		bl	EEPROM_ReadByte
 2310 016c 0346     		mov	r3, r0
 2311 016e 03F00103 		and	r3, r3, #1
 2312 0172 DAB2     		uxtb	r2, r3
 2313 0174 784B     		ldr	r3, .L225+72
 2314 0176 1A70     		strb	r2, [r3]
 584:main.c        ****     midiBarSendOn = EEPROM_ReadByte(EEPROM_MIDI_SEND_OFFSET)&(1<<1);
 2315              		.loc 1 584 0
 2316 0178 40F2DF70 		movw	r0, #2015
 2317 017c FFF7FEFF 		bl	EEPROM_ReadByte
 2318 0180 0346     		mov	r3, r0
 2319 0182 03F00203 		and	r3, r3, #2
 2320 0186 DAB2     		uxtb	r2, r3
 2321 0188 744B     		ldr	r3, .L225+76
 2322 018a 1A70     		strb	r2, [r3]
 585:main.c        ****     neckPreset[0] =  EEPROM_ReadByte(EEPROM_NECK_PRESETS_OFFSET);
 2323              		.loc 1 585 0
 2324 018c 40F2DC70 		movw	r0, #2012
 2325 0190 FFF7FEFF 		bl	EEPROM_ReadByte
 2326 0194 0346     		mov	r3, r0
 2327 0196 1A46     		mov	r2, r3
 2328 0198 714B     		ldr	r3, .L225+80
 2329 019a 1A70     		strb	r2, [r3]
 586:main.c        ****     neckPreset[1] =  EEPROM_ReadByte(EEPROM_NECK_PRESETS_OFFSET+1);
 2330              		.loc 1 586 0
 2331 019c 40F2DD70 		movw	r0, #2013
 2332 01a0 FFF7FEFF 		bl	EEPROM_ReadByte
 2333 01a4 0346     		mov	r3, r0
 2334 01a6 1A46     		mov	r2, r3
 2335 01a8 6D4B     		ldr	r3, .L225+80
 2336 01aa 5A70     		strb	r2, [r3, #1]
 587:main.c        ****     traditionalPedalAdd = EEPROM_ReadByte(EEPROM_PEDALSUM_OFFSET) & 1;
 2337              		.loc 1 587 0
 2338 01ac 40F2DE70 		movw	r0, #2014
 2339 01b0 FFF7FEFF 		bl	EEPROM_ReadByte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 53


 2340 01b4 0346     		mov	r3, r0
 2341 01b6 03F00103 		and	r3, r3, #1
 2342 01ba DAB2     		uxtb	r2, r3
 2343 01bc 694B     		ldr	r3, .L225+84
 2344 01be 1A70     		strb	r2, [r3]
 588:main.c        ****     deadZone = EEPROM_ReadByte(EEPROM_DEADZONES_OFFSET);
 2345              		.loc 1 588 0
 2346 01c0 40F2DB70 		movw	r0, #2011
 2347 01c4 FFF7FEFF 		bl	EEPROM_ReadByte
 2348 01c8 0346     		mov	r3, r0
 2349 01ca 1A46     		mov	r2, r3
 2350 01cc 664B     		ldr	r3, .L225+88
 2351 01ce 1A70     		strb	r2, [r3]
 589:main.c        ****     octaveAction = EEPROM_ReadByte(EEPROM_OCTAVE_ACTION_OFFSET);
 2352              		.loc 1 589 0
 2353 01d0 40F2DA70 		movw	r0, #2010
 2354 01d4 FFF7FEFF 		bl	EEPROM_ReadByte
 2355 01d8 0346     		mov	r3, r0
 2356 01da 1A46     		mov	r2, r3
 2357 01dc 634B     		ldr	r3, .L225+92
 2358 01de 1A70     		strb	r2, [r3]
 590:main.c        ****     stringRepresentation[0] = (EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET)>>4) & 15; //first 4 bits o
 2359              		.loc 1 590 0
 2360 01e0 40F2D770 		movw	r0, #2007
 2361 01e4 FFF7FEFF 		bl	EEPROM_ReadByte
 2362 01e8 0346     		mov	r3, r0
 2363 01ea 1B09     		lsrs	r3, r3, #4
 2364 01ec DAB2     		uxtb	r2, r3
 2365 01ee 604B     		ldr	r3, .L225+96
 2366 01f0 1A70     		strb	r2, [r3]
 591:main.c        ****     stringRepresentation[1] = EEPROM_ReadByte(EEPROM_STRING_REP_OFFSET) & 15;//last 4 bits of the b
 2367              		.loc 1 591 0
 2368 01f2 40F2D770 		movw	r0, #2007
 2369 01f6 FFF7FEFF 		bl	EEPROM_ReadByte
 2370 01fa 0346     		mov	r3, r0
 2371 01fc 03F00F03 		and	r3, r3, #15
 2372 0200 DAB2     		uxtb	r2, r3
 2373 0202 5B4B     		ldr	r3, .L225+96
 2374 0204 5A70     		strb	r2, [r3, #1]
 592:main.c        ****     calculateStringRepDivider();
 2375              		.loc 1 592 0
 2376 0206 FFF7FEFF 		bl	calculateStringRepDivider
 593:main.c        ****     dualSlider = EEPROM_ReadByte(EEPROM_DUAL_SLIDER_OFFSET) & 1;
 2377              		.loc 1 593 0
 2378 020a 40F2E270 		movw	r0, #2018
 2379 020e FFF7FEFF 		bl	EEPROM_ReadByte
 2380 0212 0346     		mov	r3, r0
 2381 0214 03F00103 		and	r3, r3, #1
 2382 0218 DAB2     		uxtb	r2, r3
 2383 021a 564B     		ldr	r3, .L225+100
 2384 021c 1A70     		strb	r2, [r3]
 594:main.c        ****     volumeInt = (int8_t) EEPROM_ReadByte(EEPROM_VOLUME_OFFSET);
 2385              		.loc 1 594 0
 2386 021e 40F2E470 		movw	r0, #2020
 2387 0222 FFF7FEFF 		bl	EEPROM_ReadByte
 2388 0226 0346     		mov	r3, r0
 2389 0228 5AB2     		sxtb	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 54


 2390 022a 534B     		ldr	r3, .L225+104
 2391 022c 1A70     		strb	r2, [r3]
 595:main.c        ****     uint16_t pedal_inverted_byte = (EEPROM_ReadByte(EEPROM_PEDAL_INVERTED_OFFSET) << 8) + EEPROM_Re
 2392              		.loc 1 595 0
 2393 022e 4FF4FC60 		mov	r0, #2016
 2394 0232 FFF7FEFF 		bl	EEPROM_ReadByte
 2395 0236 0346     		mov	r3, r0
 2396 0238 9BB2     		uxth	r3, r3
 2397 023a 1B02     		lsls	r3, r3, #8
 2398 023c 9CB2     		uxth	r4, r3
 2399 023e 40F2E170 		movw	r0, #2017
 2400 0242 FFF7FEFF 		bl	EEPROM_ReadByte
 2401 0246 0346     		mov	r3, r0
 2402 0248 9BB2     		uxth	r3, r3
 2403 024a 2344     		add	r3, r3, r4
 2404 024c A7F84E30 		strh	r3, [r7, #78]	@ movhi
 2405              	.LBB7:
 596:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2406              		.loc 1 596 0
 2407 0250 0023     		movs	r3, #0
 2408 0252 C7F8DC30 		str	r3, [r7, #220]
 2409 0256 16E0     		b	.L50
 2410              	.L51:
 597:main.c        ****     {
 598:main.c        ****         pedal_inverted[i] = pedal_inverted_byte & (1<<i);
 2411              		.loc 1 598 0 discriminator 3
 2412 0258 B7F84E30 		ldrh	r3, [r7, #78]	@ movhi
 2413 025c 5AB2     		sxtb	r2, r3
 2414 025e 0121     		movs	r1, #1
 2415 0260 D7F8DC30 		ldr	r3, [r7, #220]
 2416 0264 01FA03F3 		lsl	r3, r1, r3
 2417 0268 5BB2     		sxtb	r3, r3
 2418 026a 1340     		ands	r3, r3, r2
 2419 026c 5BB2     		sxtb	r3, r3
 2420 026e D9B2     		uxtb	r1, r3
 2421 0270 424A     		ldr	r2, .L225+108
 2422 0272 D7F8DC30 		ldr	r3, [r7, #220]
 2423 0276 1344     		add	r3, r3, r2
 2424 0278 0A46     		mov	r2, r1
 2425 027a 1A70     		strb	r2, [r3]
 596:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2426              		.loc 1 596 0 discriminator 3
 2427 027c D7F8DC30 		ldr	r3, [r7, #220]
 2428 0280 0133     		adds	r3, r3, #1
 2429 0282 C7F8DC30 		str	r3, [r7, #220]
 2430              	.L50:
 596:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2431              		.loc 1 596 0 is_stmt 0 discriminator 1
 2432 0286 D7F8DC30 		ldr	r3, [r7, #220]
 2433 028a 092B     		cmp	r3, #9
 2434 028c E4DD     		ble	.L51
 2435              	.LBE7:
 2436              	.LBB8:
 599:main.c        ****     }
 600:main.c        ****     for (int coped = 0; coped < MAX_NUM_COPEDENTS; coped++)
 2437              		.loc 1 600 0 is_stmt 1
 2438 028e 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 55


 2439 0290 C7F8D830 		str	r3, [r7, #216]
 2440 0294 F1E0     		b	.L52
 2441              	.L59:
 2442              	.LBB9:
 601:main.c        ****     {
 602:main.c        ****         for (int letter = 0; letter < COPEDENT_NAME_LENGTH_IN_BYTES; letter++)
 2443              		.loc 1 602 0
 2444 0296 0023     		movs	r3, #0
 2445 0298 C7F8D430 		str	r3, [r7, #212]
 2446 029c 25E0     		b	.L53
 2447              	.L54:
 603:main.c        ****         {
 604:main.c        ****                copedentNamesArray[coped][letter] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + (coped*
 2448              		.loc 1 604 0 discriminator 3
 2449 029e D7F8D830 		ldr	r3, [r7, #216]
 2450 02a2 9BB2     		uxth	r3, r3
 2451 02a4 1A46     		mov	r2, r3	@ movhi
 2452 02a6 1201     		lsls	r2, r2, #4
 2453 02a8 1A44     		add	r2, r2, r3
 2454 02aa D200     		lsls	r2, r2, #3
 2455 02ac 1344     		add	r3, r3, r2
 2456 02ae 5B00     		lsls	r3, r3, #1
 2457 02b0 9AB2     		uxth	r2, r3
 2458 02b2 D7F8D430 		ldr	r3, [r7, #212]
 2459 02b6 9BB2     		uxth	r3, r3
 2460 02b8 1344     		add	r3, r3, r2
 2461 02ba 9BB2     		uxth	r3, r3
 2462 02bc 1846     		mov	r0, r3
 2463 02be FFF7FEFF 		bl	EEPROM_ReadByte
 2464 02c2 0346     		mov	r3, r0
 2465 02c4 1846     		mov	r0, r3
 2466 02c6 2E49     		ldr	r1, .L225+112
 2467 02c8 D7F8D820 		ldr	r2, [r7, #216]
 2468 02cc 1346     		mov	r3, r2
 2469 02ce 9B00     		lsls	r3, r3, #2
 2470 02d0 1344     		add	r3, r3, r2
 2471 02d2 5B00     		lsls	r3, r3, #1
 2472 02d4 CA18     		adds	r2, r1, r3
 2473 02d6 D7F8D430 		ldr	r3, [r7, #212]
 2474 02da 1344     		add	r3, r3, r2
 2475 02dc 0246     		mov	r2, r0
 2476 02de 1A70     		strb	r2, [r3]
 602:main.c        ****         {
 2477              		.loc 1 602 0 discriminator 3
 2478 02e0 D7F8D430 		ldr	r3, [r7, #212]
 2479 02e4 0133     		adds	r3, r3, #1
 2480 02e6 C7F8D430 		str	r3, [r7, #212]
 2481              	.L53:
 602:main.c        ****         {
 2482              		.loc 1 602 0 is_stmt 0 discriminator 1
 2483 02ea D7F8D430 		ldr	r3, [r7, #212]
 2484 02ee 092B     		cmp	r3, #9
 2485 02f0 D5DD     		ble	.L54
 2486              	.LBE9:
 2487              	.LBB10:
 605:main.c        ****         }
 606:main.c        ****         for (int i = 0; i < 11; i++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 56


 2488              		.loc 1 606 0 is_stmt 1
 2489 02f2 0023     		movs	r3, #0
 2490 02f4 C7F8D030 		str	r3, [r7, #208]
 2491 02f8 B5E0     		b	.L55
 2492              	.L58:
 2493              	.LBB11:
 607:main.c        ****     	{
 608:main.c        ****     		int pedalStartLoc = (i*24);
 2494              		.loc 1 608 0
 2495 02fa D7F8D020 		ldr	r2, [r7, #208]
 2496 02fe 1346     		mov	r3, r2
 2497 0300 5B00     		lsls	r3, r3, #1
 2498 0302 1344     		add	r3, r3, r2
 2499 0304 DB00     		lsls	r3, r3, #3
 2500 0306 BB64     		str	r3, [r7, #72]
 2501              	.LBB12:
 609:main.c        ****             for (int j = 0; j < NUM_STRINGS; j++)
 2502              		.loc 1 609 0
 2503 0308 0023     		movs	r3, #0
 2504 030a C7F8CC30 		str	r3, [r7, #204]
 2505 030e A1E0     		b	.L56
 2506              	.L226:
 2507              		.align	2
 2508              	.L225:
 2509 0310 FA460040 		.word	1073759994
 2510 0314 00000000 		.word	Em_EEPROM_em_EepromStorage
 2511 0318 00000000 		.word	eepromReturnValue
 2512 031c 00000000 		.word	sysexMessageStartPointsWritePosition
 2513 0320 00000000 		.word	sysexMessageStartPoints
 2514 0324 00000000 		.word	Vbus_function
 2515 0328 00000000 		.word	I2Cbuff1
 2516 032c 00000000 		.word	status
 2517 0330 00050000 		.word	.LC0
 2518 0334 3333933F 		.word	1066611507
 2519 0338 00000000 		.word	patchNum
 2520 033c 00000000 		.word	neckByte
 2521 0340 00000000 		.word	necks
 2522 0344 00000000 		.word	currentNeck
 2523 0348 00000000 		.word	transposeSemitones
 2524 034c 00000000 		.word	transposeCents
 2525 0350 0AD7233C 		.word	1008981770
 2526 0354 00000000 		.word	transposeFloat
 2527 0358 00000000 		.word	midiSendOn
 2528 035c 00000000 		.word	midiBarSendOn
 2529 0360 00000000 		.word	neckPreset
 2530 0364 00000000 		.word	traditionalPedalAdd
 2531 0368 00000000 		.word	deadZone
 2532 036c 00000000 		.word	octaveAction
 2533 0370 00000000 		.word	stringRepresentation
 2534 0374 00000000 		.word	dualSlider
 2535 0378 00000000 		.word	volumeInt
 2536 037c 00000000 		.word	pedal_inverted
 2537 0380 00000000 		.word	copedentNamesArray
 2538              	.L57:
 2539              	.LBB13:
 610:main.c        ****     		{
 611:main.c        ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 57


 612:main.c        ****                 int stringStartLoc = (j*2);
 2540              		.loc 1 612 0 discriminator 3
 2541 0384 D7F8CC30 		ldr	r3, [r7, #204]
 2542 0388 5B00     		lsls	r3, r3, #1
 2543 038a 7B64     		str	r3, [r7, #68]
 613:main.c        ****                 uint16_t tempIntHigh = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pe
 2544              		.loc 1 613 0 discriminator 3
 2545 038c 7B6C     		ldr	r3, [r7, #68]
 2546 038e 9AB2     		uxth	r2, r3
 2547 0390 BB6C     		ldr	r3, [r7, #72]
 2548 0392 9BB2     		uxth	r3, r3
 2549 0394 1344     		add	r3, r3, r2
 2550 0396 9AB2     		uxth	r2, r3
 2551 0398 D7F8D830 		ldr	r3, [r7, #216]
 2552 039c 9BB2     		uxth	r3, r3
 2553 039e 1946     		mov	r1, r3	@ movhi
 2554 03a0 0901     		lsls	r1, r1, #4
 2555 03a2 1944     		add	r1, r1, r3
 2556 03a4 C900     		lsls	r1, r1, #3
 2557 03a6 0B44     		add	r3, r3, r1
 2558 03a8 5B00     		lsls	r3, r3, #1
 2559 03aa 9BB2     		uxth	r3, r3
 2560 03ac 1344     		add	r3, r3, r2
 2561 03ae 9BB2     		uxth	r3, r3
 2562 03b0 0A33     		adds	r3, r3, #10
 2563 03b2 9BB2     		uxth	r3, r3
 2564 03b4 1846     		mov	r0, r3
 2565 03b6 FFF7FEFF 		bl	EEPROM_ReadByte
 2566 03ba 0346     		mov	r3, r0
 2567 03bc A7F84230 		strh	r3, [r7, #66]	@ movhi
 614:main.c        ****                 uint16_t tempIntLow = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + ped
 2568              		.loc 1 614 0 discriminator 3
 2569 03c0 7B6C     		ldr	r3, [r7, #68]
 2570 03c2 9AB2     		uxth	r2, r3
 2571 03c4 BB6C     		ldr	r3, [r7, #72]
 2572 03c6 9BB2     		uxth	r3, r3
 2573 03c8 1344     		add	r3, r3, r2
 2574 03ca 9AB2     		uxth	r2, r3
 2575 03cc D7F8D830 		ldr	r3, [r7, #216]
 2576 03d0 9BB2     		uxth	r3, r3
 2577 03d2 1946     		mov	r1, r3	@ movhi
 2578 03d4 0901     		lsls	r1, r1, #4
 2579 03d6 1944     		add	r1, r1, r3
 2580 03d8 C900     		lsls	r1, r1, #3
 2581 03da 0B44     		add	r3, r3, r1
 2582 03dc 5B00     		lsls	r3, r3, #1
 2583 03de 9BB2     		uxth	r3, r3
 2584 03e0 1344     		add	r3, r3, r2
 2585 03e2 9BB2     		uxth	r3, r3
 2586 03e4 0B33     		adds	r3, r3, #11
 2587 03e6 9BB2     		uxth	r3, r3
 2588 03e8 1846     		mov	r0, r3
 2589 03ea FFF7FEFF 		bl	EEPROM_ReadByte
 2590 03ee 0346     		mov	r3, r0
 2591 03f0 A7F84030 		strh	r3, [r7, #64]	@ movhi
 615:main.c        ****                 copedent[coped][i][j] = (((float)((tempIntHigh << 8) + tempIntLow)) * 0.00390625f) 
 2592              		.loc 1 615 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 58


 2593 03f4 B7F84230 		ldrh	r3, [r7, #66]
 2594 03f8 1A02     		lsls	r2, r3, #8
 2595 03fa B7F84030 		ldrh	r3, [r7, #64]
 2596 03fe 1344     		add	r3, r3, r2
 2597 0400 1846     		mov	r0, r3
 2598 0402 FFF7FEFF 		bl	__aeabi_i2f
 2599 0406 0346     		mov	r3, r0
 2600 0408 4FF06E51 		mov	r1, #998244352
 2601 040c 1846     		mov	r0, r3
 2602 040e FFF7FEFF 		bl	__aeabi_fmul
 2603 0412 0346     		mov	r3, r0
 2604 0414 4FF08641 		mov	r1, #1124073472
 2605 0418 1846     		mov	r0, r3
 2606 041a FFF7FEFF 		bl	__aeabi_fsub
 2607 041e 0346     		mov	r3, r0
 2608 0420 1C46     		mov	r4, r3
 2609 0422 CA48     		ldr	r0, .L227
 2610 0424 D7F8D030 		ldr	r3, [r7, #208]
 2611 0428 D7F8D810 		ldr	r1, [r7, #216]
 2612 042c 1A46     		mov	r2, r3
 2613 042e 5200     		lsls	r2, r2, #1
 2614 0430 1A44     		add	r2, r2, r3
 2615 0432 9300     		lsls	r3, r2, #2
 2616 0434 1A46     		mov	r2, r3
 2617 0436 0B46     		mov	r3, r1
 2618 0438 5B01     		lsls	r3, r3, #5
 2619 043a 0B44     		add	r3, r3, r1
 2620 043c 9B00     		lsls	r3, r3, #2
 2621 043e 1A44     		add	r2, r2, r3
 2622 0440 D7F8CC30 		ldr	r3, [r7, #204]
 2623 0444 1344     		add	r3, r3, r2
 2624 0446 40F82340 		str	r4, [r0, r3, lsl #2]	@ float
 2625              	.LBE13:
 609:main.c        ****     		{
 2626              		.loc 1 609 0 discriminator 3
 2627 044a D7F8CC30 		ldr	r3, [r7, #204]
 2628 044e 0133     		adds	r3, r3, #1
 2629 0450 C7F8CC30 		str	r3, [r7, #204]
 2630              	.L56:
 609:main.c        ****     		{
 2631              		.loc 1 609 0 is_stmt 0 discriminator 1
 2632 0454 D7F8CC30 		ldr	r3, [r7, #204]
 2633 0458 0B2B     		cmp	r3, #11
 2634 045a 93DD     		ble	.L57
 2635              	.LBE12:
 2636              	.LBE11:
 606:main.c        ****     	{
 2637              		.loc 1 606 0 is_stmt 1 discriminator 2
 2638 045c D7F8D030 		ldr	r3, [r7, #208]
 2639 0460 0133     		adds	r3, r3, #1
 2640 0462 C7F8D030 		str	r3, [r7, #208]
 2641              	.L55:
 606:main.c        ****     	{
 2642              		.loc 1 606 0 is_stmt 0 discriminator 1
 2643 0466 D7F8D030 		ldr	r3, [r7, #208]
 2644 046a 0A2B     		cmp	r3, #10
 2645 046c 7FF745AF 		ble	.L58
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 59


 2646              	.LBE10:
 600:main.c        ****     {
 2647              		.loc 1 600 0 is_stmt 1 discriminator 2
 2648 0470 D7F8D830 		ldr	r3, [r7, #216]
 2649 0474 0133     		adds	r3, r3, #1
 2650 0476 C7F8D830 		str	r3, [r7, #216]
 2651              	.L52:
 600:main.c        ****     {
 2652              		.loc 1 600 0 is_stmt 0 discriminator 1
 2653 047a D7F8D830 		ldr	r3, [r7, #216]
 2654 047e 062B     		cmp	r3, #6
 2655 0480 7FF709AF 		ble	.L59
 2656              	.LBE8:
 2657              	.LBB14:
 616:main.c        ****             }
 617:main.c        ****     	}
 618:main.c        ****     }
 619:main.c        **** 
 620:main.c        ****     
 621:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 2658              		.loc 1 621 0 is_stmt 1
 2659 0484 0023     		movs	r3, #0
 2660 0486 C7F8C830 		str	r3, [r7, #200]
 2661 048a 49E0     		b	.L60
 2662              	.L61:
 622:main.c        ****     {
 623:main.c        ****         pedals_low[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + (i*4)) << 8) + (EEPROM_R
 2663              		.loc 1 623 0 discriminator 3
 2664 048c D7F8C830 		ldr	r3, [r7, #200]
 2665 0490 9BB2     		uxth	r3, r3
 2666 0492 9B00     		lsls	r3, r3, #2
 2667 0494 9BB2     		uxth	r3, r3
 2668 0496 03F27E73 		addw	r3, r3, #1918
 2669 049a 9BB2     		uxth	r3, r3
 2670 049c 1846     		mov	r0, r3
 2671 049e FFF7FEFF 		bl	EEPROM_ReadByte
 2672 04a2 0346     		mov	r3, r0
 2673 04a4 9BB2     		uxth	r3, r3
 2674 04a6 1B02     		lsls	r3, r3, #8
 2675 04a8 9CB2     		uxth	r4, r3
 2676 04aa D7F8C830 		ldr	r3, [r7, #200]
 2677 04ae 9BB2     		uxth	r3, r3
 2678 04b0 9B00     		lsls	r3, r3, #2
 2679 04b2 9BB2     		uxth	r3, r3
 2680 04b4 03F27F73 		addw	r3, r3, #1919
 2681 04b8 9BB2     		uxth	r3, r3
 2682 04ba 1846     		mov	r0, r3
 2683 04bc FFF7FEFF 		bl	EEPROM_ReadByte
 2684 04c0 0346     		mov	r3, r0
 2685 04c2 9BB2     		uxth	r3, r3
 2686 04c4 2344     		add	r3, r3, r4
 2687 04c6 99B2     		uxth	r1, r3
 2688 04c8 A14A     		ldr	r2, .L227+4
 2689 04ca D7F8C830 		ldr	r3, [r7, #200]
 2690 04ce 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 624:main.c        ****         pedals_high[i] = (EEPROM_ReadByte(EEPROM_LEVER_CALIBRATION_OFFSET + ((i*4) + 2)) << 8) + (E
 2691              		.loc 1 624 0 discriminator 3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 60


 2692 04d2 D7F8C830 		ldr	r3, [r7, #200]
 2693 04d6 03F5F073 		add	r3, r3, #480
 2694 04da 9BB2     		uxth	r3, r3
 2695 04dc 9B00     		lsls	r3, r3, #2
 2696 04de 9BB2     		uxth	r3, r3
 2697 04e0 1846     		mov	r0, r3
 2698 04e2 FFF7FEFF 		bl	EEPROM_ReadByte
 2699 04e6 0346     		mov	r3, r0
 2700 04e8 9BB2     		uxth	r3, r3
 2701 04ea 1B02     		lsls	r3, r3, #8
 2702 04ec 9CB2     		uxth	r4, r3
 2703 04ee D7F8C830 		ldr	r3, [r7, #200]
 2704 04f2 9BB2     		uxth	r3, r3
 2705 04f4 9B00     		lsls	r3, r3, #2
 2706 04f6 9BB2     		uxth	r3, r3
 2707 04f8 03F28173 		addw	r3, r3, #1921
 2708 04fc 9BB2     		uxth	r3, r3
 2709 04fe 1846     		mov	r0, r3
 2710 0500 FFF7FEFF 		bl	EEPROM_ReadByte
 2711 0504 0346     		mov	r3, r0
 2712 0506 9BB2     		uxth	r3, r3
 2713 0508 2344     		add	r3, r3, r4
 2714 050a 99B2     		uxth	r1, r3
 2715 050c 914A     		ldr	r2, .L227+8
 2716 050e D7F8C830 		ldr	r3, [r7, #200]
 2717 0512 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 621:main.c        ****     {
 2718              		.loc 1 621 0 discriminator 3
 2719 0516 D7F8C830 		ldr	r3, [r7, #200]
 2720 051a 0133     		adds	r3, r3, #1
 2721 051c C7F8C830 		str	r3, [r7, #200]
 2722              	.L60:
 621:main.c        ****     {
 2723              		.loc 1 621 0 is_stmt 0 discriminator 1
 2724 0520 D7F8C830 		ldr	r3, [r7, #200]
 2725 0524 092B     		cmp	r3, #9
 2726 0526 B1DD     		ble	.L61
 2727              	.LBE14:
 625:main.c        ****     }
 626:main.c        ****     calculatePedalRatios();
 2728              		.loc 1 626 0 is_stmt 1
 2729 0528 FFF7FEFF 		bl	calculatePedalRatios
 2730              	.LBB15:
 627:main.c        ****                 
 628:main.c        ****     
 629:main.c        ****     for (int i = 0; i < NUM_FRET_MEASUREMENTS; i++)
 2731              		.loc 1 629 0
 2732 052c 0023     		movs	r3, #0
 2733 052e C7F8C430 		str	r3, [r7, #196]
 2734 0532 4AE0     		b	.L62
 2735              	.L63:
 630:main.c        ****     {
 631:main.c        ****         fretMeasurements[0][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + (i*4)) << 8) + (
 2736              		.loc 1 631 0 discriminator 3
 2737 0534 D7F8C430 		ldr	r3, [r7, #196]
 2738 0538 9BB2     		uxth	r3, r3
 2739 053a 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 61


 2740 053c 9BB2     		uxth	r3, r3
 2741 053e 03F2A673 		addw	r3, r3, #1958
 2742 0542 9BB2     		uxth	r3, r3
 2743 0544 1846     		mov	r0, r3
 2744 0546 FFF7FEFF 		bl	EEPROM_ReadByte
 2745 054a 0346     		mov	r3, r0
 2746 054c 9BB2     		uxth	r3, r3
 2747 054e 1B02     		lsls	r3, r3, #8
 2748 0550 9CB2     		uxth	r4, r3
 2749 0552 D7F8C430 		ldr	r3, [r7, #196]
 2750 0556 9BB2     		uxth	r3, r3
 2751 0558 9B00     		lsls	r3, r3, #2
 2752 055a 9BB2     		uxth	r3, r3
 2753 055c 03F2A773 		addw	r3, r3, #1959
 2754 0560 9BB2     		uxth	r3, r3
 2755 0562 1846     		mov	r0, r3
 2756 0564 FFF7FEFF 		bl	EEPROM_ReadByte
 2757 0568 0346     		mov	r3, r0
 2758 056a 9BB2     		uxth	r3, r3
 2759 056c 2344     		add	r3, r3, r4
 2760 056e 99B2     		uxth	r1, r3
 2761 0570 794A     		ldr	r2, .L227+12
 2762 0572 D7F8C430 		ldr	r3, [r7, #196]
 2763 0576 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 632:main.c        ****         fretMeasurements[1][i] = (EEPROM_ReadByte(EEPROM_FRET_CALIBRATION_OFFSET + ((i*4) + 2)) << 
 2764              		.loc 1 632 0 discriminator 3
 2765 057a D7F8C430 		ldr	r3, [r7, #196]
 2766 057e 03F5F573 		add	r3, r3, #490
 2767 0582 9BB2     		uxth	r3, r3
 2768 0584 9B00     		lsls	r3, r3, #2
 2769 0586 9BB2     		uxth	r3, r3
 2770 0588 1846     		mov	r0, r3
 2771 058a FFF7FEFF 		bl	EEPROM_ReadByte
 2772 058e 0346     		mov	r3, r0
 2773 0590 9BB2     		uxth	r3, r3
 2774 0592 1B02     		lsls	r3, r3, #8
 2775 0594 9CB2     		uxth	r4, r3
 2776 0596 D7F8C430 		ldr	r3, [r7, #196]
 2777 059a 9BB2     		uxth	r3, r3
 2778 059c 9B00     		lsls	r3, r3, #2
 2779 059e 9BB2     		uxth	r3, r3
 2780 05a0 03F2A973 		addw	r3, r3, #1961
 2781 05a4 9BB2     		uxth	r3, r3
 2782 05a6 1846     		mov	r0, r3
 2783 05a8 FFF7FEFF 		bl	EEPROM_ReadByte
 2784 05ac 0346     		mov	r3, r0
 2785 05ae 9BB2     		uxth	r3, r3
 2786 05b0 2344     		add	r3, r3, r4
 2787 05b2 99B2     		uxth	r1, r3
 2788 05b4 684A     		ldr	r2, .L227+12
 2789 05b6 D7F8C430 		ldr	r3, [r7, #196]
 2790 05ba 0C33     		adds	r3, r3, #12
 2791 05bc 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 629:main.c        ****     {
 2792              		.loc 1 629 0 discriminator 3
 2793 05c0 D7F8C430 		ldr	r3, [r7, #196]
 2794 05c4 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 62


 2795 05c6 C7F8C430 		str	r3, [r7, #196]
 2796              	.L62:
 629:main.c        ****     {
 2797              		.loc 1 629 0 is_stmt 0 discriminator 1
 2798 05ca D7F8C430 		ldr	r3, [r7, #196]
 2799 05ce 0B2B     		cmp	r3, #11
 2800 05d0 B0DD     		ble	.L63
 2801              	.LBE15:
 2802              	.LBB16:
 633:main.c        ****     }
 634:main.c        ****     //blank out the preset names array so that we can tell when we get the real names from the synt
 635:main.c        ****     for (int i = 0; i < MAX_NUM_PRESETS; i++)
 2803              		.loc 1 635 0 is_stmt 1
 2804 05d2 0023     		movs	r3, #0
 2805 05d4 C7F8C030 		str	r3, [r7, #192]
 2806 05d8 80E0     		b	.L64
 2807              	.L75:
 2808              	.LBB17:
 636:main.c        ****     {
 637:main.c        ****         for (int j = 0; j < PRESET_NAME_LENGTH_IN_BYTES; j++)
 2809              		.loc 1 637 0
 2810 05da 0023     		movs	r3, #0
 2811 05dc C7F8BC30 		str	r3, [r7, #188]
 2812 05e0 11E0     		b	.L65
 2813              	.L66:
 638:main.c        ****         {
 639:main.c        ****             presetNamesArray[i][j] = 255;
 2814              		.loc 1 639 0 discriminator 3
 2815 05e2 5E49     		ldr	r1, .L227+16
 2816 05e4 D7F8C020 		ldr	r2, [r7, #192]
 2817 05e8 1346     		mov	r3, r2
 2818 05ea DB00     		lsls	r3, r3, #3
 2819 05ec 9B1A     		subs	r3, r3, r2
 2820 05ee 5B00     		lsls	r3, r3, #1
 2821 05f0 CA18     		adds	r2, r1, r3
 2822 05f2 D7F8BC30 		ldr	r3, [r7, #188]
 2823 05f6 1344     		add	r3, r3, r2
 2824 05f8 FF22     		movs	r2, #255
 2825 05fa 1A70     		strb	r2, [r3]
 637:main.c        ****         {
 2826              		.loc 1 637 0 discriminator 3
 2827 05fc D7F8BC30 		ldr	r3, [r7, #188]
 2828 0600 0133     		adds	r3, r3, #1
 2829 0602 C7F8BC30 		str	r3, [r7, #188]
 2830              	.L65:
 637:main.c        ****         {
 2831              		.loc 1 637 0 is_stmt 0 discriminator 1
 2832 0606 D7F8BC30 		ldr	r3, [r7, #188]
 2833 060a 0D2B     		cmp	r3, #13
 2834 060c E9DD     		ble	.L66
 2835              	.LBE17:
 2836              	.LBB18:
 640:main.c        **** 
 641:main.c        ****         }
 642:main.c        ****         for (int j = 0; j < NUM_MACROS*NUM_MACRO_PAGES; j++)
 2837              		.loc 1 642 0 is_stmt 1
 2838 060e 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 63


 2839 0610 C7F8B830 		str	r3, [r7, #184]
 2840 0614 24E0     		b	.L67
 2841              	.L70:
 2842              	.LBB19:
 643:main.c        ****         {
 644:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
 2843              		.loc 1 644 0
 2844 0616 0023     		movs	r3, #0
 2845 0618 C7F8B430 		str	r3, [r7, #180]
 2846 061c 17E0     		b	.L68
 2847              	.L69:
 645:main.c        ****             {
 646:main.c        ****                 macroNamesArray[i][j][k] = 255;
 2848              		.loc 1 646 0 discriminator 3
 2849 061e 5048     		ldr	r0, .L227+20
 2850 0620 D7F8B830 		ldr	r3, [r7, #184]
 2851 0624 D7F8C010 		ldr	r1, [r7, #192]
 2852 0628 1A46     		mov	r2, r3
 2853 062a D200     		lsls	r2, r2, #3
 2854 062c 1A44     		add	r2, r2, r3
 2855 062e 0B46     		mov	r3, r1
 2856 0630 DB00     		lsls	r3, r3, #3
 2857 0632 0B44     		add	r3, r3, r1
 2858 0634 1B01     		lsls	r3, r3, #4
 2859 0636 1344     		add	r3, r3, r2
 2860 0638 C218     		adds	r2, r0, r3
 2861 063a D7F8B430 		ldr	r3, [r7, #180]
 2862 063e 1344     		add	r3, r3, r2
 2863 0640 FF22     		movs	r2, #255
 2864 0642 1A70     		strb	r2, [r3]
 644:main.c        ****             {
 2865              		.loc 1 644 0 discriminator 3
 2866 0644 D7F8B430 		ldr	r3, [r7, #180]
 2867 0648 0133     		adds	r3, r3, #1
 2868 064a C7F8B430 		str	r3, [r7, #180]
 2869              	.L68:
 644:main.c        ****             {
 2870              		.loc 1 644 0 is_stmt 0 discriminator 1
 2871 064e D7F8B430 		ldr	r3, [r7, #180]
 2872 0652 082B     		cmp	r3, #8
 2873 0654 E3DD     		ble	.L69
 2874              	.LBE19:
 642:main.c        ****         {
 2875              		.loc 1 642 0 is_stmt 1 discriminator 2
 2876 0656 D7F8B830 		ldr	r3, [r7, #184]
 2877 065a 0133     		adds	r3, r3, #1
 2878 065c C7F8B830 		str	r3, [r7, #184]
 2879              	.L67:
 642:main.c        ****         {
 2880              		.loc 1 642 0 is_stmt 0 discriminator 1
 2881 0660 D7F8B830 		ldr	r3, [r7, #184]
 2882 0664 0F2B     		cmp	r3, #15
 2883 0666 D6DD     		ble	.L70
 2884              	.LBE18:
 2885              	.LBB20:
 647:main.c        ****             }
 648:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 64


 649:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 2886              		.loc 1 649 0 is_stmt 1
 2887 0668 0023     		movs	r3, #0
 2888 066a C7F8B030 		str	r3, [r7, #176]
 2889 066e 26E0     		b	.L71
 2890              	.L74:
 2891              	.LBB21:
 650:main.c        ****         {
 651:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 2892              		.loc 1 651 0
 2893 0670 0023     		movs	r3, #0
 2894 0672 C7F8AC30 		str	r3, [r7, #172]
 2895 0676 19E0     		b	.L72
 2896              	.L73:
 652:main.c        ****             {
 653:main.c        ****                 controlNamesArray[i][j][k] = 255;
 2897              		.loc 1 653 0 discriminator 3
 2898 0678 3A48     		ldr	r0, .L227+24
 2899 067a D7F8B030 		ldr	r3, [r7, #176]
 2900 067e D7F8C010 		ldr	r1, [r7, #192]
 2901 0682 1A46     		mov	r2, r3
 2902 0684 9200     		lsls	r2, r2, #2
 2903 0686 1A44     		add	r2, r2, r3
 2904 0688 5300     		lsls	r3, r2, #1
 2905 068a 1A46     		mov	r2, r3
 2906 068c 0B46     		mov	r3, r1
 2907 068e 9B00     		lsls	r3, r3, #2
 2908 0690 0B44     		add	r3, r3, r1
 2909 0692 DB00     		lsls	r3, r3, #3
 2910 0694 1344     		add	r3, r3, r2
 2911 0696 C218     		adds	r2, r0, r3
 2912 0698 D7F8AC30 		ldr	r3, [r7, #172]
 2913 069c 1344     		add	r3, r3, r2
 2914 069e FF22     		movs	r2, #255
 2915 06a0 1A70     		strb	r2, [r3]
 651:main.c        ****             {
 2916              		.loc 1 651 0 discriminator 3
 2917 06a2 D7F8AC30 		ldr	r3, [r7, #172]
 2918 06a6 0133     		adds	r3, r3, #1
 2919 06a8 C7F8AC30 		str	r3, [r7, #172]
 2920              	.L72:
 651:main.c        ****             {
 2921              		.loc 1 651 0 is_stmt 0 discriminator 1
 2922 06ac D7F8AC30 		ldr	r3, [r7, #172]
 2923 06b0 092B     		cmp	r3, #9
 2924 06b2 E1DD     		ble	.L73
 2925              	.LBE21:
 649:main.c        ****         {
 2926              		.loc 1 649 0 is_stmt 1 discriminator 2
 2927 06b4 D7F8B030 		ldr	r3, [r7, #176]
 2928 06b8 0133     		adds	r3, r3, #1
 2929 06ba C7F8B030 		str	r3, [r7, #176]
 2930              	.L71:
 649:main.c        ****         {
 2931              		.loc 1 649 0 is_stmt 0 discriminator 1
 2932 06be D7F8B030 		ldr	r3, [r7, #176]
 2933 06c2 032B     		cmp	r3, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 65


 2934 06c4 D4DD     		ble	.L74
 2935              	.LBE20:
 654:main.c        ****             }
 655:main.c        ****         }
 656:main.c        ****         presetAlreadyDisplayed[i] = 0;
 2936              		.loc 1 656 0 is_stmt 1 discriminator 2
 2937 06c6 284A     		ldr	r2, .L227+28
 2938 06c8 D7F8C030 		ldr	r3, [r7, #192]
 2939 06cc 1344     		add	r3, r3, r2
 2940 06ce 0022     		movs	r2, #0
 2941 06d0 1A70     		strb	r2, [r3]
 635:main.c        ****     {
 2942              		.loc 1 635 0 discriminator 2
 2943 06d2 D7F8C030 		ldr	r3, [r7, #192]
 2944 06d6 0133     		adds	r3, r3, #1
 2945 06d8 C7F8C030 		str	r3, [r7, #192]
 2946              	.L64:
 635:main.c        ****     {
 2947              		.loc 1 635 0 is_stmt 0 discriminator 1
 2948 06dc D7F8C030 		ldr	r3, [r7, #192]
 2949 06e0 3F2B     		cmp	r3, #63
 2950 06e2 7FF77AAF 		ble	.L75
 2951              	.LBE16:
 657:main.c        ****     }
 658:main.c        ****     LED_amber1_Write(0);
 2952              		.loc 1 658 0 is_stmt 1
 2953 06e6 0020     		movs	r0, #0
 2954 06e8 FFF7FEFF 		bl	LED_amber1_Write
 659:main.c        ****     LED_amber2_Write(1);
 2955              		.loc 1 659 0
 2956 06ec 0120     		movs	r0, #1
 2957 06ee FFF7FEFF 		bl	LED_amber2_Write
 660:main.c        ****     LED_amber3_Write(0);
 2958              		.loc 1 660 0
 2959 06f2 0020     		movs	r0, #0
 2960 06f4 FFF7FEFF 		bl	LED_amber3_Write
 661:main.c        ****     LED_amber4_Write(0);
 2961              		.loc 1 661 0
 2962 06f8 0020     		movs	r0, #0
 2963 06fa FFF7FEFF 		bl	LED_amber4_Write
 662:main.c        ****     LED_green1_Write(dualSlider);
 2964              		.loc 1 662 0
 2965 06fe 1B4B     		ldr	r3, .L227+32
 2966 0700 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2967 0702 1846     		mov	r0, r3
 2968 0704 FFF7FEFF 		bl	LED_green1_Write
 663:main.c        ****     LED_red1_Write(currentNeck);
 2969              		.loc 1 663 0
 2970 0708 194B     		ldr	r3, .L227+36
 2971 070a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2972 070c 1846     		mov	r0, r3
 2973 070e FFF7FEFF 		bl	LED_red1_Write
 664:main.c        ****     LED_green2_Write(!currentNeck);
 2974              		.loc 1 664 0
 2975 0712 174B     		ldr	r3, .L227+36
 2976 0714 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2977 0716 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 66


 2978 0718 0CBF     		ite	eq
 2979 071a 0123     		moveq	r3, #1
 2980 071c 0023     		movne	r3, #0
 2981 071e DBB2     		uxtb	r3, r3
 2982 0720 1846     		mov	r0, r3
 2983 0722 FFF7FEFF 		bl	LED_green2_Write
 665:main.c        ****     ADC_SAR_Seq_1_Start();
 2984              		.loc 1 665 0
 2985 0726 FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 666:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 2986              		.loc 1 666 0
 2987 072a FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 667:main.c        **** 
 668:main.c        ****             
 669:main.c        ****     currentCopedent = necks[currentNeck];
 2988              		.loc 1 669 0
 2989 072e 104B     		ldr	r3, .L227+36
 2990 0730 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2991 0732 1A46     		mov	r2, r3
 2992 0734 0F4B     		ldr	r3, .L227+40
 2993 0736 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 2994 0738 0F4B     		ldr	r3, .L227+44
 2995 073a 1A70     		strb	r2, [r3]
 670:main.c        ****     CyDelay(10);
 2996              		.loc 1 670 0
 2997 073c 0A20     		movs	r0, #10
 2998 073e FFF7FEFF 		bl	CyDelay
 2999              	.LBB22:
 671:main.c        ****     
 672:main.c        **** 
 673:main.c        **** 
 674:main.c        ****     for (int w = 0; w < 8; w++)
 3000              		.loc 1 674 0
 3001 0742 0023     		movs	r3, #0
 3002 0744 C7F8A830 		str	r3, [r7, #168]
 3003 0748 31E0     		b	.L76
 3004              	.L228:
 3005 074a 00BF     		.align	2
 3006              	.L227:
 3007 074c 00000000 		.word	copedent
 3008 0750 00000000 		.word	pedals_low
 3009 0754 00000000 		.word	pedals_high
 3010 0758 00000000 		.word	fretMeasurements
 3011 075c 00000000 		.word	presetNamesArray
 3012 0760 00000000 		.word	macroNamesArray
 3013 0764 00000000 		.word	controlNamesArray
 3014 0768 00000000 		.word	presetAlreadyDisplayed
 3015 076c 00000000 		.word	dualSlider
 3016 0770 00000000 		.word	currentNeck
 3017 0774 00000000 		.word	necks
 3018 0778 00000000 		.word	currentCopedent
 3019              	.L77:
 675:main.c        ****     {
 676:main.c        ****         I2Cbuff1[0] = (1 << 3) + w;
 3020              		.loc 1 676 0 discriminator 3
 3021 077c D7F8A830 		ldr	r3, [r7, #168]
 3022 0780 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 67


 3023 0782 0833     		adds	r3, r3, #8
 3024 0784 DAB2     		uxtb	r2, r3
 3025 0786 9B4B     		ldr	r3, .L229
 3026 0788 1A70     		strb	r2, [r3]
 677:main.c        ****         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3027              		.loc 1 677 0 discriminator 3
 3028 078a 0022     		movs	r2, #0
 3029 078c 0121     		movs	r1, #1
 3030 078e 7220     		movs	r0, #114
 3031 0790 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3032 0794 0346     		mov	r3, r0
 3033 0796 1A46     		mov	r2, r3
 3034 0798 974B     		ldr	r3, .L229+4
 3035 079a 1A60     		str	r2, [r3]
 678:main.c        ****         OLED_init(128, 32);
 3036              		.loc 1 678 0 discriminator 3
 3037 079c 2021     		movs	r1, #32
 3038 079e 8020     		movs	r0, #128
 3039 07a0 FFF7FEFF 		bl	OLED_init
 674:main.c        ****     {
 3040              		.loc 1 674 0 discriminator 3
 3041 07a4 D7F8A830 		ldr	r3, [r7, #168]
 3042 07a8 0133     		adds	r3, r3, #1
 3043 07aa C7F8A830 		str	r3, [r7, #168]
 3044              	.L76:
 674:main.c        ****     {
 3045              		.loc 1 674 0 is_stmt 0 discriminator 1
 3046 07ae D7F8A830 		ldr	r3, [r7, #168]
 3047 07b2 072B     		cmp	r3, #7
 3048 07b4 E2DD     		ble	.L77
 3049              	.LBE22:
 679:main.c        ****     }
 680:main.c        **** 
 681:main.c        ****     //initialize the macro knob adc to scan all knobs
 682:main.c        ****     I2Cbuff1[0] = 1<<2;
 3050              		.loc 1 682 0 is_stmt 1
 3051 07b6 8F4B     		ldr	r3, .L229
 3052 07b8 0422     		movs	r2, #4
 3053 07ba 1A70     		strb	r2, [r3]
 683:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 3054              		.loc 1 683 0
 3055 07bc 0022     		movs	r2, #0
 3056 07be 0121     		movs	r1, #1
 3057 07c0 7020     		movs	r0, #112
 3058 07c2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3059 07c6 0346     		mov	r3, r0
 3060 07c8 1A46     		mov	r2, r3
 3061 07ca 8B4B     		ldr	r3, .L229+4
 3062 07cc 1A60     		str	r2, [r3]
 684:main.c        ****     main_counter = 9;
 3063              		.loc 1 684 0
 3064 07ce 8B4B     		ldr	r3, .L229+8
 3065 07d0 0922     		movs	r2, #9
 3066 07d2 1A70     		strb	r2, [r3]
 685:main.c        **** 
 686:main.c        ****     I2Cbuff1[0] = 0xf; //message says scan single-ended mode from beginning to 8th knob (scan all k
 3067              		.loc 1 686 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 68


 3068 07d4 874B     		ldr	r3, .L229
 3069 07d6 0F22     		movs	r2, #15
 3070 07d8 1A70     		strb	r2, [r3]
 687:main.c        ****     status = I2C_MasterWriteBlocking(0x35, 1, I2C_1_MODE_COMPLETE_XFER);
 3071              		.loc 1 687 0
 3072 07da 0022     		movs	r2, #0
 3073 07dc 0121     		movs	r1, #1
 3074 07de 3520     		movs	r0, #53
 3075 07e0 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3076 07e4 0346     		mov	r3, r0
 3077 07e6 1A46     		mov	r2, r3
 3078 07e8 834B     		ldr	r3, .L229+4
 3079 07ea 1A60     		str	r2, [r3]
 688:main.c        ****     
 689:main.c        **** 
 690:main.c        ****     SPIS_1_Start();  
 3080              		.loc 1 690 0
 3081 07ec FFF7FEFF 		bl	SPIS_1_Start
 691:main.c        ****     SPIM_1_Start();  
 3082              		.loc 1 691 0
 3083 07f0 FFF7FEFF 		bl	SPIM_1_Start
 692:main.c        ****     SPIS_2_Start(); 
 3084              		.loc 1 692 0
 3085 07f4 FFF7FEFF 		bl	SPIS_2_Start
 693:main.c        ****     DmaTxConfiguration();
 3086              		.loc 1 693 0
 3087 07f8 FFF7FEFF 		bl	DmaTxConfiguration
 694:main.c        ****     DmaRxConfiguration();
 3088              		.loc 1 694 0
 3089 07fc FFF7FEFF 		bl	DmaRxConfiguration
 695:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 3090              		.loc 1 695 0
 3091 0800 7F48     		ldr	r0, .L229+12
 3092 0802 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 696:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 3093              		.loc 1 696 0
 3094 0806 7F48     		ldr	r0, .L229+16
 3095 0808 FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 697:main.c        ****     
 698:main.c        ****     myArray[30] = 254;
 3096              		.loc 1 698 0
 3097 080c 7E4B     		ldr	r3, .L229+20
 3098 080e FE22     		movs	r2, #254
 3099 0810 9A77     		strb	r2, [r3, #30]
 699:main.c        ****     myArray[31] = 253;
 3100              		.loc 1 699 0
 3101 0812 7D4B     		ldr	r3, .L229+20
 3102 0814 FD22     		movs	r2, #253
 3103 0816 DA77     		strb	r2, [r3, #31]
 700:main.c        **** 
 701:main.c        ****     main_counter = 0;
 3104              		.loc 1 701 0
 3105 0818 784B     		ldr	r3, .L229+8
 3106 081a 0022     		movs	r2, #0
 3107 081c 1A70     		strb	r2, [r3]
 3108              	.L216:
 702:main.c        ****     //burnInitialPedalZeroPositions();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 69


 703:main.c        **** 	for(;;)
 704:main.c        ****     {
 705:main.c        ****         
 706:main.c        ****         if (parseThatMF)
 3109              		.loc 1 706 0
 3110 081e 7B4B     		ldr	r3, .L229+24
 3111 0820 1B78     		ldrb	r3, [r3]
 3112 0822 DBB2     		uxtb	r3, r3
 3113 0824 002B     		cmp	r3, #0
 3114 0826 01D0     		beq	.L78
 707:main.c        ****         {
 708:main.c        ****             parseSysex();
 3115              		.loc 1 708 0
 3116 0828 FFF7FEFF 		bl	parseSysex
 3117              	.L78:
 709:main.c        ****         }
 710:main.c        ****        
 711:main.c        ****         //testpin3_Write(1);
 712:main.c        ****        //sense levers and pedals
 713:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 3118              		.loc 1 713 0
 3119 082c 734B     		ldr	r3, .L229+8
 3120 082e 1B78     		ldrb	r3, [r3]
 3121 0830 DBB2     		uxtb	r3, r3
 3122 0832 1A46     		mov	r2, r3
 3123 0834 764B     		ldr	r3, .L229+28
 3124 0836 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3125 083a 764B     		ldr	r3, .L229+32
 3126 083c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3127 083e 9A42     		cmp	r2, r3
 3128 0840 26D0     		beq	.L79
 3129              	.LBB23:
 714:main.c        ****         {
 715:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 3130              		.loc 1 715 0
 3131 0842 6E4B     		ldr	r3, .L229+8
 3132 0844 1B78     		ldrb	r3, [r3]
 3133 0846 DBB2     		uxtb	r3, r3
 3134 0848 1A46     		mov	r2, r3
 3135 084a 714B     		ldr	r3, .L229+28
 3136 084c 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3137 0850 1A46     		mov	r2, r3
 3138 0852 0123     		movs	r3, #1
 3139 0854 9340     		lsls	r3, r3, r2
 3140 0856 DAB2     		uxtb	r2, r3
 3141 0858 664B     		ldr	r3, .L229
 3142 085a 1A70     		strb	r2, [r3]
 716:main.c        ****             if (mux_states[main_counter][0] == 5) //slow down I2C communication if it's going throu
 3143              		.loc 1 716 0
 3144 085c 674B     		ldr	r3, .L229+8
 3145 085e 1B78     		ldrb	r3, [r3]
 3146 0860 DBB2     		uxtb	r3, r3
 3147 0862 1A46     		mov	r2, r3
 3148 0864 6A4B     		ldr	r3, .L229+28
 3149 0866 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3150 086a 052B     		cmp	r3, #5
 3151 086c 04D1     		bne	.L80
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 70


 717:main.c        ****             {
 718:main.c        ****                 Clock_2_SetDividerValue(13); //slow speed 400k
 3152              		.loc 1 718 0
 3153 086e 0121     		movs	r1, #1
 3154 0870 0C20     		movs	r0, #12
 3155 0872 FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3156 0876 03E0     		b	.L81
 3157              	.L80:
 719:main.c        ****             }
 720:main.c        ****             else
 721:main.c        ****             {
 722:main.c        ****                 Clock_2_SetDividerValue(5); //otherwise full speed 1000k
 3158              		.loc 1 722 0
 3159 0878 0121     		movs	r1, #1
 3160 087a 0420     		movs	r0, #4
 3161 087c FFF7FEFF 		bl	Clock_2_SetDividerRegister
 3162              	.L81:
 723:main.c        ****             }
 724:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 3163              		.loc 1 724 0
 3164 0880 0022     		movs	r2, #0
 3165 0882 0121     		movs	r1, #1
 3166 0884 7020     		movs	r0, #112
 3167 0886 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3168 088a 0346     		mov	r3, r0
 3169 088c 87F83F30 		strb	r3, [r7, #63]
 3170              	.L79:
 3171              	.LBE23:
 725:main.c        ****         }
 726:main.c        ****         last_mux = mux_states[main_counter][0];
 3172              		.loc 1 726 0
 3173 0890 5A4B     		ldr	r3, .L229+8
 3174 0892 1B78     		ldrb	r3, [r3]
 3175 0894 DBB2     		uxtb	r3, r3
 3176 0896 1A46     		mov	r2, r3
 3177 0898 5D4B     		ldr	r3, .L229+28
 3178 089a 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 3179 089e 5D4B     		ldr	r3, .L229+32
 3180 08a0 1A70     		strb	r2, [r3]
 727:main.c        ****         
 728:main.c        ****         
 729:main.c        ****         CyDelayUs(10);
 3181              		.loc 1 729 0
 3182 08a2 0A20     		movs	r0, #10
 3183 08a4 FFF7FEFF 		bl	CyDelayUs
 730:main.c        ****         if (mux_states[main_counter][0] == 5)
 3184              		.loc 1 730 0
 3185 08a8 544B     		ldr	r3, .L229+8
 3186 08aa 1B78     		ldrb	r3, [r3]
 3187 08ac DBB2     		uxtb	r3, r3
 3188 08ae 1A46     		mov	r2, r3
 3189 08b0 574B     		ldr	r3, .L229+28
 3190 08b2 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 3191 08b6 052B     		cmp	r3, #5
 3192 08b8 1DD1     		bne	.L82
 731:main.c        ****         {
 732:main.c        ****             if (!i2c_skipped[main_counter])
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 71


 3193              		.loc 1 732 0
 3194 08ba 504B     		ldr	r3, .L229+8
 3195 08bc 1B78     		ldrb	r3, [r3]
 3196 08be DBB2     		uxtb	r3, r3
 3197 08c0 1A46     		mov	r2, r3
 3198 08c2 554B     		ldr	r3, .L229+36
 3199 08c4 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3200 08c6 002B     		cmp	r3, #0
 3201 08c8 15D1     		bne	.L82
 733:main.c        ****             {
 734:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 3202              		.loc 1 734 0
 3203 08ca 4C4B     		ldr	r3, .L229+8
 3204 08cc 1B78     		ldrb	r3, [r3]
 3205 08ce DBB2     		uxtb	r3, r3
 3206 08d0 4F4A     		ldr	r2, .L229+28
 3207 08d2 5B00     		lsls	r3, r3, #1
 3208 08d4 1344     		add	r3, r3, r2
 3209 08d6 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 3210 08d8 1A46     		mov	r2, r3
 3211 08da 0123     		movs	r3, #1
 3212 08dc 9340     		lsls	r3, r3, r2
 3213 08de DAB2     		uxtb	r2, r3
 3214 08e0 444B     		ldr	r3, .L229
 3215 08e2 1A70     		strb	r2, [r3]
 735:main.c        ****                 status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 3216              		.loc 1 735 0
 3217 08e4 0022     		movs	r2, #0
 3218 08e6 0121     		movs	r1, #1
 3219 08e8 7120     		movs	r0, #113
 3220 08ea FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3221 08ee 0346     		mov	r3, r0
 3222 08f0 1A46     		mov	r2, r3
 3223 08f2 414B     		ldr	r3, .L229+4
 3224 08f4 1A60     		str	r2, [r3]
 3225              	.L82:
 736:main.c        ****             }
 737:main.c        ****         }
 738:main.c        **** 
 739:main.c        ****         CyDelayUs(10);
 3226              		.loc 1 739 0
 3227 08f6 0A20     		movs	r0, #10
 3228 08f8 FFF7FEFF 		bl	CyDelayUs
 740:main.c        ****         //if it's a hall sensor
 741:main.c        **** 
 742:main.c        ****         if (main_counter < 10)
 3229              		.loc 1 742 0
 3230 08fc 3F4B     		ldr	r3, .L229+8
 3231 08fe 1B78     		ldrb	r3, [r3]
 3232 0900 DBB2     		uxtb	r3, r3
 3233 0902 092B     		cmp	r3, #9
 3234 0904 00F2BE80 		bhi	.L83
 743:main.c        ****         {
 744:main.c        ****             if (!i2c_skipped[main_counter])
 3235              		.loc 1 744 0
 3236 0908 3C4B     		ldr	r3, .L229+8
 3237 090a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 72


 3238 090c DBB2     		uxtb	r3, r3
 3239 090e 1A46     		mov	r2, r3
 3240 0910 414B     		ldr	r3, .L229+36
 3241 0912 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3242 0914 002B     		cmp	r3, #0
 3243 0916 40F0B580 		bne	.L83
 745:main.c        ****             {
 746:main.c        ****                 //CyDelayUs(100);
 747:main.c        ****                 I2Cbuff1[0] = 0x0E;
 3244              		.loc 1 747 0
 3245 091a 364B     		ldr	r3, .L229
 3246 091c 0E22     		movs	r2, #14
 3247 091e 1A70     		strb	r2, [r3]
 748:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 3248              		.loc 1 748 0
 3249 0920 0222     		movs	r2, #2
 3250 0922 0121     		movs	r1, #1
 3251 0924 3620     		movs	r0, #54
 3252 0926 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3253 092a 0346     		mov	r3, r0
 3254 092c 1A46     		mov	r2, r3
 3255 092e 324B     		ldr	r3, .L229+4
 3256 0930 1A60     		str	r2, [r3]
 749:main.c        ****                 if (status == 0)
 3257              		.loc 1 749 0
 3258 0932 314B     		ldr	r3, .L229+4
 3259 0934 1B68     		ldr	r3, [r3]
 3260 0936 002B     		cmp	r3, #0
 3261 0938 08D1     		bne	.L84
 750:main.c        ****                 {
 751:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 3262              		.loc 1 751 0
 3263 093a 0122     		movs	r2, #1
 3264 093c 0221     		movs	r1, #2
 3265 093e 3620     		movs	r0, #54
 3266 0940 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3267 0944 0346     		mov	r3, r0
 3268 0946 1A46     		mov	r2, r3
 3269 0948 2B4B     		ldr	r3, .L229+4
 3270 094a 1A60     		str	r2, [r3]
 3271              	.L84:
 752:main.c        ****                 }
 753:main.c        ****                 if (status  == 0)
 3272              		.loc 1 753 0
 3273 094c 2A4B     		ldr	r3, .L229+4
 3274 094e 1B68     		ldr	r3, [r3]
 3275 0950 002B     		cmp	r3, #0
 3276 0952 40F09780 		bne	.L83
 754:main.c        ****                 {
 755:main.c        ****                     //CyDelayUs(100);
 756:main.c        ****                     angle[main_counter] = I2Cbuff2[0] << 8;
 3277              		.loc 1 756 0
 3278 0956 294B     		ldr	r3, .L229+8
 3279 0958 1B78     		ldrb	r3, [r3]
 3280 095a DBB2     		uxtb	r3, r3
 3281 095c 1A46     		mov	r2, r3
 3282 095e 2F4B     		ldr	r3, .L229+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 73


 3283 0960 1B78     		ldrb	r3, [r3]
 3284 0962 DBB2     		uxtb	r3, r3
 3285 0964 9BB2     		uxth	r3, r3
 3286 0966 1B02     		lsls	r3, r3, #8
 3287 0968 99B2     		uxth	r1, r3
 3288 096a 2D4B     		ldr	r3, .L229+44
 3289 096c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 757:main.c        ****                     angle[main_counter] +=  I2Cbuff2[1];
 3290              		.loc 1 757 0
 3291 0970 2A4B     		ldr	r3, .L229+40
 3292 0972 5B78     		ldrb	r3, [r3, #1]
 3293 0974 D8B2     		uxtb	r0, r3
 3294 0976 214B     		ldr	r3, .L229+8
 3295 0978 1B78     		ldrb	r3, [r3]
 3296 097a DBB2     		uxtb	r3, r3
 3297 097c 1946     		mov	r1, r3
 3298 097e 1A46     		mov	r2, r3
 3299 0980 274B     		ldr	r3, .L229+44
 3300 0982 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3301 0986 83B2     		uxth	r3, r0
 3302 0988 1344     		add	r3, r3, r2
 3303 098a 9AB2     		uxth	r2, r3
 3304 098c 244B     		ldr	r3, .L229+44
 3305 098e 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 758:main.c        ****                     
 759:main.c        ****                     if (leverCalibrationMode)
 3306              		.loc 1 759 0
 3307 0992 244B     		ldr	r3, .L229+48
 3308 0994 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3309 0996 002B     		cmp	r3, #0
 3310 0998 74D0     		beq	.L83
 760:main.c        ****                     {
 761:main.c        ****                         if (angle[main_counter] < pedals_low[main_counter])
 3311              		.loc 1 761 0
 3312 099a 184B     		ldr	r3, .L229+8
 3313 099c 1B78     		ldrb	r3, [r3]
 3314 099e DBB2     		uxtb	r3, r3
 3315 09a0 1A46     		mov	r2, r3
 3316 09a2 1F4B     		ldr	r3, .L229+44
 3317 09a4 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3318 09a8 144B     		ldr	r3, .L229+8
 3319 09aa 1B78     		ldrb	r3, [r3]
 3320 09ac DBB2     		uxtb	r3, r3
 3321 09ae 1946     		mov	r1, r3
 3322 09b0 1D4B     		ldr	r3, .L229+52
 3323 09b2 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3324 09b6 9A42     		cmp	r2, r3
 3325 09b8 46D2     		bcs	.L85
 762:main.c        ****                         {
 763:main.c        ****                             if (main_counter == 0)
 3326              		.loc 1 763 0
 3327 09ba 104B     		ldr	r3, .L229+8
 3328 09bc 1B78     		ldrb	r3, [r3]
 3329 09be DBB2     		uxtb	r3, r3
 3330 09c0 002B     		cmp	r3, #0
 3331 09c2 33D1     		bne	.L86
 764:main.c        ****                             {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 74


 765:main.c        ****                                 if (angle[main_counter] != 0)
 3332              		.loc 1 765 0
 3333 09c4 0D4B     		ldr	r3, .L229+8
 3334 09c6 1B78     		ldrb	r3, [r3]
 3335 09c8 DBB2     		uxtb	r3, r3
 3336 09ca 1A46     		mov	r2, r3
 3337 09cc 144B     		ldr	r3, .L229+44
 3338 09ce 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3339 09d2 002B     		cmp	r3, #0
 3340 09d4 38D0     		beq	.L85
 766:main.c        ****                                 {
 767:main.c        ****                                      pedals_low[main_counter] = angle[main_counter];
 3341              		.loc 1 767 0
 3342 09d6 094B     		ldr	r3, .L229+8
 3343 09d8 1B78     		ldrb	r3, [r3]
 3344 09da DBB2     		uxtb	r3, r3
 3345 09dc 1A46     		mov	r2, r3
 3346 09de 074B     		ldr	r3, .L229+8
 3347 09e0 1B78     		ldrb	r3, [r3]
 3348 09e2 DBB2     		uxtb	r3, r3
 3349 09e4 1946     		mov	r1, r3
 3350 09e6 0E4B     		ldr	r3, .L229+44
 3351 09e8 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3352 09ec 0E4B     		ldr	r3, .L229+52
 3353 09ee 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3354 09f2 29E0     		b	.L85
 3355              	.L230:
 3356              		.align	2
 3357              	.L229:
 3358 09f4 00000000 		.word	I2Cbuff1
 3359 09f8 00000000 		.word	status
 3360 09fc 00000000 		.word	main_counter
 3361 0a00 00000000 		.word	spis_1_ss
 3362 0a04 00000000 		.word	spis_2_ss
 3363 0a08 00000000 		.word	myArray
 3364 0a0c 00000000 		.word	parseThatMF
 3365 0a10 00000000 		.word	mux_states
 3366 0a14 00000000 		.word	last_mux
 3367 0a18 00000000 		.word	i2c_skipped
 3368 0a1c 00000000 		.word	I2Cbuff2
 3369 0a20 00000000 		.word	angle
 3370 0a24 00000000 		.word	leverCalibrationMode
 3371 0a28 00000000 		.word	pedals_low
 3372              	.L86:
 768:main.c        ****                                      
 769:main.c        ****                                 }
 770:main.c        ****                             }
 771:main.c        ****                             else
 772:main.c        ****                             {
 773:main.c        ****                                 pedals_low[main_counter] = angle[main_counter];
 3373              		.loc 1 773 0
 3374 0a2c AD4B     		ldr	r3, .L231
 3375 0a2e 1B78     		ldrb	r3, [r3]
 3376 0a30 DBB2     		uxtb	r3, r3
 3377 0a32 1A46     		mov	r2, r3
 3378 0a34 AB4B     		ldr	r3, .L231
 3379 0a36 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 75


 3380 0a38 DBB2     		uxtb	r3, r3
 3381 0a3a 1946     		mov	r1, r3
 3382 0a3c AA4B     		ldr	r3, .L231+4
 3383 0a3e 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3384 0a42 AA4B     		ldr	r3, .L231+8
 3385 0a44 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3386              	.L85:
 774:main.c        ****                                
 775:main.c        ****                             }
 776:main.c        ****                             
 777:main.c        ****                         }
 778:main.c        ****                         if (angle[main_counter] > pedals_high[main_counter])
 3387              		.loc 1 778 0
 3388 0a48 A64B     		ldr	r3, .L231
 3389 0a4a 1B78     		ldrb	r3, [r3]
 3390 0a4c DBB2     		uxtb	r3, r3
 3391 0a4e 1A46     		mov	r2, r3
 3392 0a50 A54B     		ldr	r3, .L231+4
 3393 0a52 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3394 0a56 A34B     		ldr	r3, .L231
 3395 0a58 1B78     		ldrb	r3, [r3]
 3396 0a5a DBB2     		uxtb	r3, r3
 3397 0a5c 1946     		mov	r1, r3
 3398 0a5e A44B     		ldr	r3, .L231+12
 3399 0a60 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3400 0a64 9A42     		cmp	r2, r3
 3401 0a66 0DD9     		bls	.L83
 779:main.c        ****                         {
 780:main.c        ****                              pedals_high[main_counter] = angle[main_counter];
 3402              		.loc 1 780 0
 3403 0a68 9E4B     		ldr	r3, .L231
 3404 0a6a 1B78     		ldrb	r3, [r3]
 3405 0a6c DBB2     		uxtb	r3, r3
 3406 0a6e 1A46     		mov	r2, r3
 3407 0a70 9C4B     		ldr	r3, .L231
 3408 0a72 1B78     		ldrb	r3, [r3]
 3409 0a74 DBB2     		uxtb	r3, r3
 3410 0a76 1946     		mov	r1, r3
 3411 0a78 9B4B     		ldr	r3, .L231+4
 3412 0a7a 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 3413 0a7e 9C4B     		ldr	r3, .L231+12
 3414 0a80 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3415              	.L83:
 781:main.c        ****                              
 782:main.c        ****                         }
 783:main.c        ****                     }
 784:main.c        ****                 }
 785:main.c        ****             }
 786:main.c        ****         }
 787:main.c        ****         
 788:main.c        ****         //in addition to the hall sensor on {2,0} (the vertical knee lever) of the muxes, there is 
 789:main.c        ****         if (main_counter == 9)
 3416              		.loc 1 789 0
 3417 0a84 974B     		ldr	r3, .L231
 3418 0a86 1B78     		ldrb	r3, [r3]
 3419 0a88 DBB2     		uxtb	r3, r3
 3420 0a8a 092B     		cmp	r3, #9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 76


 3421 0a8c 40F0F980 		bne	.L88
 790:main.c        ****         {
 791:main.c        ****             if (!i2c_skipped[main_counter])
 3422              		.loc 1 791 0
 3423 0a90 944B     		ldr	r3, .L231
 3424 0a92 1B78     		ldrb	r3, [r3]
 3425 0a94 DBB2     		uxtb	r3, r3
 3426 0a96 1A46     		mov	r2, r3
 3427 0a98 964B     		ldr	r3, .L231+16
 3428 0a9a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3429 0a9c 002B     		cmp	r3, #0
 3430 0a9e 40F06C81 		bne	.L100
 792:main.c        ****             {
 793:main.c        ****                 //scan the knob adc
 794:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3431              		.loc 1 794 0
 3432 0aa2 954B     		ldr	r3, .L231+20
 3433 0aa4 0022     		movs	r2, #0
 3434 0aa6 1A70     		strb	r2, [r3]
 795:main.c        ****                 status = I2C_MasterReadBlocking(0x35, 16, I2C_1_MODE_COMPLETE_XFER);
 3435              		.loc 1 795 0
 3436 0aa8 0022     		movs	r2, #0
 3437 0aaa 1021     		movs	r1, #16
 3438 0aac 3520     		movs	r0, #53
 3439 0aae FFF7FEFF 		bl	I2C_MasterReadBlocking
 3440 0ab2 0346     		mov	r3, r0
 3441 0ab4 1A46     		mov	r2, r3
 3442 0ab6 914B     		ldr	r3, .L231+24
 3443 0ab8 1A60     		str	r2, [r3]
 796:main.c        ****                 if (status == 0)
 3444              		.loc 1 796 0
 3445 0aba 904B     		ldr	r3, .L231+24
 3446 0abc 1B68     		ldr	r3, [r3]
 3447 0abe 002B     		cmp	r3, #0
 3448 0ac0 40F05B81 		bne	.L100
 3449              	.LBB24:
 797:main.c        ****                 {
 798:main.c        ****                     for (int i = 0; i < 8; i++)
 3450              		.loc 1 798 0
 3451 0ac4 0023     		movs	r3, #0
 3452 0ac6 C7F8A430 		str	r3, [r7, #164]
 3453 0aca 7EE0     		b	.L90
 3454              	.L97:
 3455              	.LBB25:
 799:main.c        ****                     {
 800:main.c        ****                        uint8_t myKnob = i+whichMacroPageIsActive;
 3456              		.loc 1 800 0
 3457 0acc D7F8A430 		ldr	r3, [r7, #164]
 3458 0ad0 DAB2     		uxtb	r2, r3
 3459 0ad2 8B4B     		ldr	r3, .L231+28
 3460 0ad4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3461 0ad6 1344     		add	r3, r3, r2
 3462 0ad8 BB71     		strb	r3, [r7, #6]
 801:main.c        ****                         uint16_t tempInt =((I2Cbuff2[i*2] << 8) + (I2Cbuff2[(i*2) + 1] & 255)) & 40
 3463              		.loc 1 801 0
 3464 0ada D7F8A430 		ldr	r3, [r7, #164]
 3465 0ade 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 77


 3466 0ae0 884A     		ldr	r2, .L231+32
 3467 0ae2 D35C     		ldrb	r3, [r2, r3]
 3468 0ae4 DBB2     		uxtb	r3, r3
 3469 0ae6 9BB2     		uxth	r3, r3
 3470 0ae8 1B02     		lsls	r3, r3, #8
 3471 0aea 9AB2     		uxth	r2, r3
 3472 0aec D7F8A430 		ldr	r3, [r7, #164]
 3473 0af0 5B00     		lsls	r3, r3, #1
 3474 0af2 0133     		adds	r3, r3, #1
 3475 0af4 8349     		ldr	r1, .L231+32
 3476 0af6 CB5C     		ldrb	r3, [r1, r3]
 3477 0af8 DBB2     		uxtb	r3, r3
 3478 0afa 9BB2     		uxth	r3, r3
 3479 0afc 1344     		add	r3, r3, r2
 3480 0afe 9BB2     		uxth	r3, r3
 3481 0b00 C3F30B03 		ubfx	r3, r3, #0, #12
 3482 0b04 BB80     		strh	r3, [r7, #4]	@ movhi
 802:main.c        ****                         int16_t tempSquished = 255 - (tempInt >> 4);
 3483              		.loc 1 802 0
 3484 0b06 BB88     		ldrh	r3, [r7, #4]
 3485 0b08 1B09     		lsrs	r3, r3, #4
 3486 0b0a 9BB2     		uxth	r3, r3
 3487 0b0c C3F1FF03 		rsb	r3, r3, #255
 3488 0b10 9BB2     		uxth	r3, r3
 3489 0b12 7B80     		strh	r3, [r7, #2]	@ movhi
 803:main.c        ****                         if (knobFrozen[myKnob] == 1)
 3490              		.loc 1 803 0
 3491 0b14 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3492 0b16 7C4A     		ldr	r2, .L231+36
 3493 0b18 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3494 0b1a 012B     		cmp	r3, #1
 3495 0b1c 1BD1     		bne	.L91
 804:main.c        ****                         {
 805:main.c        ****                             if ((tempSquished > prevMacroKnobValues[myKnob] + 4) || (tempSquished <
 3496              		.loc 1 805 0
 3497 0b1e B7F90220 		ldrsh	r2, [r7, #2]
 3498 0b22 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3499 0b24 7949     		ldr	r1, .L231+40
 3500 0b26 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3501 0b2a 0433     		adds	r3, r3, #4
 3502 0b2c 9A42     		cmp	r2, r3
 3503 0b2e 08DC     		bgt	.L92
 3504              		.loc 1 805 0 is_stmt 0 discriminator 1
 3505 0b30 B7F90220 		ldrsh	r2, [r7, #2]
 3506 0b34 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3507 0b36 7549     		ldr	r1, .L231+40
 3508 0b38 31F91330 		ldrsh	r3, [r1, r3, lsl #1]
 3509 0b3c 043B     		subs	r3, r3, #4
 3510 0b3e 9A42     		cmp	r2, r3
 3511 0b40 3EDA     		bge	.L94
 3512              	.L92:
 806:main.c        ****                             {
 807:main.c        ****                                 //update
 808:main.c        ****                                 macroKnobValues[myKnob] = tempSquished;
 3513              		.loc 1 808 0 is_stmt 1
 3514 0b42 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3515 0b44 7A88     		ldrh	r2, [r7, #2]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 78


 3516 0b46 D1B2     		uxtb	r1, r2
 3517 0b48 714A     		ldr	r2, .L231+44
 3518 0b4a D154     		strb	r1, [r2, r3]
 809:main.c        ****                                 knobFrozen[myKnob] = 0;
 3519              		.loc 1 809 0
 3520 0b4c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3521 0b4e 6E4A     		ldr	r2, .L231+36
 3522 0b50 0021     		movs	r1, #0
 3523 0b52 D154     		strb	r1, [r2, r3]
 3524 0b54 34E0     		b	.L94
 3525              	.L91:
 810:main.c        ****                             }
 811:main.c        ****                         }
 812:main.c        ****                         else
 813:main.c        ****                         {
 814:main.c        ****                             macroKnobValues[myKnob] = tempSquished; //now squish it down to 8 bit f
 3526              		.loc 1 814 0
 3527 0b56 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3528 0b58 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3529 0b5a D1B2     		uxtb	r1, r2
 3530 0b5c 6C4A     		ldr	r2, .L231+44
 3531 0b5e D154     		strb	r1, [r2, r3]
 815:main.c        ****                             if (midiSendOn)
 3532              		.loc 1 815 0
 3533 0b60 6C4B     		ldr	r3, .L231+48
 3534 0b62 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3535 0b64 002B     		cmp	r3, #0
 3536 0b66 26D0     		beq	.L95
 816:main.c        ****                             {
 817:main.c        ****                                 macroKnobValues7bit[myKnob] = macroKnobValues[myKnob] >> 1;
 3537              		.loc 1 817 0
 3538 0b68 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3539 0b6a BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3540 0b6c 6849     		ldr	r1, .L231+44
 3541 0b6e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 3542 0b70 5208     		lsrs	r2, r2, #1
 3543 0b72 D1B2     		uxtb	r1, r2
 3544 0b74 684A     		ldr	r2, .L231+52
 3545 0b76 D154     		strb	r1, [r2, r3]
 818:main.c        ****                                 if (macroKnobValues7bit[myKnob] != prevMacroKnobValues7bit[myKnob])
 3546              		.loc 1 818 0
 3547 0b78 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3548 0b7a 674A     		ldr	r2, .L231+52
 3549 0b7c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 3550 0b7e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3551 0b80 6649     		ldr	r1, .L231+56
 3552 0b82 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 3553 0b84 9A42     		cmp	r2, r3
 3554 0b86 10D0     		beq	.L96
 819:main.c        ****                                 {
 820:main.c        ****                                     sendMIDIControlChange(i+1 + (3*whichMacroPageIsActive), macroKn
 3555              		.loc 1 820 0
 3556 0b88 D7F8A430 		ldr	r3, [r7, #164]
 3557 0b8c 5A1C     		adds	r2, r3, #1
 3558 0b8e 5C4B     		ldr	r3, .L231+28
 3559 0b90 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3560 0b92 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 79


 3561 0b94 0B46     		mov	r3, r1
 3562 0b96 5B00     		lsls	r3, r3, #1
 3563 0b98 0B44     		add	r3, r3, r1
 3564 0b9a D018     		adds	r0, r2, r3
 3565 0b9c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3566 0b9e 5E4A     		ldr	r2, .L231+52
 3567 0ba0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 3568 0ba2 0022     		movs	r2, #0
 3569 0ba4 1946     		mov	r1, r3
 3570 0ba6 FFF7FEFF 		bl	sendMIDIControlChange
 3571              	.L96:
 821:main.c        ****                                 }
 822:main.c        ****                                 prevMacroKnobValues7bit[myKnob] = macroKnobValues7bit[myKnob];
 3572              		.loc 1 822 0
 3573 0baa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3574 0bac BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 3575 0bae 5A49     		ldr	r1, .L231+52
 3576 0bb0 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 3577 0bb2 5A4A     		ldr	r2, .L231+56
 3578 0bb4 D154     		strb	r1, [r2, r3]
 3579              	.L95:
 823:main.c        ****                             }
 824:main.c        ****                             prevMacroKnobValues[myKnob] =  tempSquished;
 3580              		.loc 1 824 0
 3581 0bb6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 3582 0bb8 5449     		ldr	r1, .L231+40
 3583 0bba 7A88     		ldrh	r2, [r7, #2]	@ movhi
 3584 0bbc 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 3585              	.L94:
 3586              	.LBE25:
 798:main.c        ****                     {
 3587              		.loc 1 798 0 discriminator 2
 3588 0bc0 D7F8A430 		ldr	r3, [r7, #164]
 3589 0bc4 0133     		adds	r3, r3, #1
 3590 0bc6 C7F8A430 		str	r3, [r7, #164]
 3591              	.L90:
 798:main.c        ****                     {
 3592              		.loc 1 798 0 is_stmt 0 discriminator 1
 3593 0bca D7F8A430 		ldr	r3, [r7, #164]
 3594 0bce 072B     		cmp	r3, #7
 3595 0bd0 7FF77CAF 		ble	.L97
 3596              	.LBE24:
 825:main.c        ****                         }
 826:main.c        **** 
 827:main.c        ****                     }
 828:main.c        ****                     //
 829:main.c        ****                     if (macroOLEDWaitingToSend == 2)
 3597              		.loc 1 829 0 is_stmt 1
 3598 0bd4 524B     		ldr	r3, .L231+60
 3599 0bd6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3600 0bd8 022B     		cmp	r3, #2
 3601 0bda 40F0CE80 		bne	.L100
 830:main.c        ****                     {
 831:main.c        ****                         //send the data to the little macro OLED screens
 832:main.c        ****                         
 833:main.c        ****                         I2Cbuff1[0] = (1 << 3) + whichMacro;
 3602              		.loc 1 833 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 80


 3603 0bde 514B     		ldr	r3, .L231+64
 3604 0be0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3605 0be2 0833     		adds	r3, r3, #8
 3606 0be4 DAB2     		uxtb	r2, r3
 3607 0be6 444B     		ldr	r3, .L231+20
 3608 0be8 1A70     		strb	r2, [r3]
 834:main.c        ****                         status = I2C_MasterWriteBlocking(0x72, 1, I2C_1_MODE_COMPLETE_XFER); 
 3609              		.loc 1 834 0
 3610 0bea 0022     		movs	r2, #0
 3611 0bec 0121     		movs	r1, #1
 3612 0bee 7220     		movs	r0, #114
 3613 0bf0 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 3614 0bf4 0346     		mov	r3, r0
 3615 0bf6 1A46     		mov	r2, r3
 3616 0bf8 404B     		ldr	r3, .L231+24
 3617 0bfa 1A60     		str	r2, [r3]
 835:main.c        ****                         //OLED_init(128, 32);
 836:main.c        ****                         OLEDclear(128, 32);
 3618              		.loc 1 836 0
 3619 0bfc 2021     		movs	r1, #32
 3620 0bfe 8020     		movs	r0, #128
 3621 0c00 FFF7FEFF 		bl	OLEDclear
 837:main.c        ****                         //OLEDwriteInt(w , 1, 0,FirstLine);
 838:main.c        ****                         //OLEDwriteString(" ", 1, OLEDgetCursor(), FourthLine);
 839:main.c        ****                         myGFX_setFont(1);
 3622              		.loc 1 839 0
 3623 0c04 0120     		movs	r0, #1
 3624 0c06 FFF7FEFF 		bl	myGFX_setFont
 840:main.c        ****                          //make sure we didn't switch stuff while the display was updating
 841:main.c        ****                         if ((presetWhenMacroWriteStarted != patchNum)  || (macroPageWhenMacroWriteS
 3625              		.loc 1 841 0
 3626 0c0a 474B     		ldr	r3, .L231+68
 3627 0c0c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3628 0c0e 474B     		ldr	r3, .L231+72
 3629 0c10 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3630 0c12 9A42     		cmp	r2, r3
 3631 0c14 05D1     		bne	.L98
 3632              		.loc 1 841 0 is_stmt 0 discriminator 1
 3633 0c16 464B     		ldr	r3, .L231+76
 3634 0c18 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3635 0c1a 394B     		ldr	r3, .L231+28
 3636 0c1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3637 0c1e 9A42     		cmp	r2, r3
 3638 0c20 02D0     		beq	.L99
 3639              	.L98:
 842:main.c        ****                         {
 843:main.c        ****                             whichMacro = 0;
 3640              		.loc 1 843 0 is_stmt 1
 3641 0c22 404B     		ldr	r3, .L231+64
 3642 0c24 0022     		movs	r2, #0
 3643 0c26 1A70     		strb	r2, [r3]
 3644              	.L99:
 844:main.c        ****                         }
 845:main.c        ****                         //GFXsetFont(&theGFX,  &SourceCodePro_Regular14pt7b);
 846:main.c        ****                         OLEDwriteLineMiddle((char *)&macroNamesArray[patchNum][whichMacro+whichMacr
 3645              		.loc 1 846 0
 3646 0c28 404B     		ldr	r3, .L231+72
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 81


 3647 0c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3648 0c2c 1946     		mov	r1, r3
 3649 0c2e 3D4B     		ldr	r3, .L231+64
 3650 0c30 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3651 0c32 1A46     		mov	r2, r3
 3652 0c34 324B     		ldr	r3, .L231+28
 3653 0c36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3654 0c38 1344     		add	r3, r3, r2
 3655 0c3a 1A46     		mov	r2, r3
 3656 0c3c D200     		lsls	r2, r2, #3
 3657 0c3e 1A44     		add	r2, r2, r3
 3658 0c40 0B46     		mov	r3, r1
 3659 0c42 DB00     		lsls	r3, r3, #3
 3660 0c44 0B44     		add	r3, r3, r1
 3661 0c46 1B01     		lsls	r3, r3, #4
 3662 0c48 1344     		add	r3, r3, r2
 3663 0c4a 3A4A     		ldr	r2, .L231+80
 3664 0c4c 1344     		add	r3, r3, r2
 3665 0c4e 0921     		movs	r1, #9
 3666 0c50 1846     		mov	r0, r3
 3667 0c52 FFF7FEFF 		bl	OLEDwriteLineMiddle
 847:main.c        ****                         OLED_draw(128, 32);
 3668              		.loc 1 847 0
 3669 0c56 2021     		movs	r1, #32
 3670 0c58 8020     		movs	r0, #128
 3671 0c5a FFF7FEFF 		bl	OLED_draw
 848:main.c        **** 
 849:main.c        ****                         whichMacro++;
 3672              		.loc 1 849 0
 3673 0c5e 314B     		ldr	r3, .L231+64
 3674 0c60 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3675 0c62 0133     		adds	r3, r3, #1
 3676 0c64 DAB2     		uxtb	r2, r3
 3677 0c66 2F4B     		ldr	r3, .L231+64
 3678 0c68 1A70     		strb	r2, [r3]
 850:main.c        ****                         if (whichMacro >= NUM_MACROS)
 3679              		.loc 1 850 0
 3680 0c6a 2E4B     		ldr	r3, .L231+64
 3681 0c6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3682 0c6e 072B     		cmp	r3, #7
 3683 0c70 40F28380 		bls	.L100
 851:main.c        ****                         {
 852:main.c        ****                             macroOLEDWaitingToSend = 0;
 3684              		.loc 1 852 0
 3685 0c74 2A4B     		ldr	r3, .L231+60
 3686 0c76 0022     		movs	r2, #0
 3687 0c78 1A70     		strb	r2, [r3]
 853:main.c        ****                             whichMacro = 0;
 3688              		.loc 1 853 0
 3689 0c7a 2A4B     		ldr	r3, .L231+64
 3690 0c7c 0022     		movs	r2, #0
 3691 0c7e 1A70     		strb	r2, [r3]
 3692 0c80 7BE0     		b	.L100
 3693              	.L88:
 854:main.c        ****                            
 855:main.c        **** 
 856:main.c        ****                         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 82


 857:main.c        ****                     }
 858:main.c        ****                 }
 859:main.c        ****             }
 860:main.c        ****             
 861:main.c        ****         }
 862:main.c        ****         //otherwise it's the ADC for the foot pedal
 863:main.c        ****         else if (main_counter == 10)
 3694              		.loc 1 863 0
 3695 0c82 184B     		ldr	r3, .L231
 3696 0c84 1B78     		ldrb	r3, [r3]
 3697 0c86 DBB2     		uxtb	r3, r3
 3698 0c88 0A2B     		cmp	r3, #10
 3699 0c8a 57D1     		bne	.L101
 864:main.c        ****         {
 865:main.c        ****             //0x4f (0x4D?) is the 7=-bit version of the MCP3221 address, might need to be shifted o
 866:main.c        ****             if (!i2c_skipped[main_counter])
 3700              		.loc 1 866 0
 3701 0c8c 154B     		ldr	r3, .L231
 3702 0c8e 1B78     		ldrb	r3, [r3]
 3703 0c90 DBB2     		uxtb	r3, r3
 3704 0c92 1A46     		mov	r2, r3
 3705 0c94 174B     		ldr	r3, .L231+16
 3706 0c96 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3707 0c98 002B     		cmp	r3, #0
 3708 0c9a 6ED1     		bne	.L100
 867:main.c        ****             {
 868:main.c        ****                 I2Cbuff1[0] = 0x0;      
 3709              		.loc 1 868 0
 3710 0c9c 164B     		ldr	r3, .L231+20
 3711 0c9e 0022     		movs	r2, #0
 3712 0ca0 1A70     		strb	r2, [r3]
 869:main.c        ****                 status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 3713              		.loc 1 869 0
 3714 0ca2 0022     		movs	r2, #0
 3715 0ca4 0221     		movs	r1, #2
 3716 0ca6 4F20     		movs	r0, #79
 3717 0ca8 FFF7FEFF 		bl	I2C_MasterReadBlocking
 3718 0cac 0346     		mov	r3, r0
 3719 0cae 1A46     		mov	r2, r3
 3720 0cb0 124B     		ldr	r3, .L231+24
 3721 0cb2 1A60     		str	r2, [r3]
 870:main.c        ****                 if (status == 0)
 3722              		.loc 1 870 0
 3723 0cb4 114B     		ldr	r3, .L231+24
 3724 0cb6 1B68     		ldr	r3, [r3]
 3725 0cb8 002B     		cmp	r3, #0
 3726 0cba 5ED1     		bne	.L100
 871:main.c        ****                 {
 872:main.c        ****                     volumePedal = I2Cbuff2[0] << 8;
 3727              		.loc 1 872 0
 3728 0cbc 114B     		ldr	r3, .L231+32
 3729 0cbe 1B78     		ldrb	r3, [r3]
 3730 0cc0 DBB2     		uxtb	r3, r3
 3731 0cc2 9BB2     		uxth	r3, r3
 3732 0cc4 1B02     		lsls	r3, r3, #8
 3733 0cc6 9AB2     		uxth	r2, r3
 3734 0cc8 1B4B     		ldr	r3, .L231+84
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 83


 3735 0cca 1A80     		strh	r2, [r3]	@ movhi
 873:main.c        ****                     volumePedal +=  I2Cbuff2[1];
 3736              		.loc 1 873 0
 3737 0ccc 0D4B     		ldr	r3, .L231+32
 3738 0cce 5B78     		ldrb	r3, [r3, #1]
 3739 0cd0 DBB2     		uxtb	r3, r3
 3740 0cd2 9AB2     		uxth	r2, r3
 3741 0cd4 184B     		ldr	r3, .L231+84
 3742 0cd6 1B88     		ldrh	r3, [r3]
 3743 0cd8 1344     		add	r3, r3, r2
 3744 0cda 9AB2     		uxth	r2, r3
 3745 0cdc 164B     		ldr	r3, .L231+84
 3746 0cde 1A80     		strh	r2, [r3]	@ movhi
 3747 0ce0 4BE0     		b	.L100
 3748              	.L232:
 3749 0ce2 00BF     		.align	2
 3750              	.L231:
 3751 0ce4 00000000 		.word	main_counter
 3752 0ce8 00000000 		.word	angle
 3753 0cec 00000000 		.word	pedals_low
 3754 0cf0 00000000 		.word	pedals_high
 3755 0cf4 00000000 		.word	i2c_skipped
 3756 0cf8 00000000 		.word	I2Cbuff1
 3757 0cfc 00000000 		.word	status
 3758 0d00 00000000 		.word	whichMacroPageIsActive
 3759 0d04 00000000 		.word	I2Cbuff2
 3760 0d08 00000000 		.word	knobFrozen
 3761 0d0c 00000000 		.word	prevMacroKnobValues
 3762 0d10 00000000 		.word	macroKnobValues
 3763 0d14 00000000 		.word	midiSendOn
 3764 0d18 00000000 		.word	macroKnobValues7bit
 3765 0d1c 00000000 		.word	prevMacroKnobValues7bit
 3766 0d20 00000000 		.word	macroOLEDWaitingToSend
 3767 0d24 00000000 		.word	whichMacro
 3768 0d28 00000000 		.word	presetWhenMacroWriteStarted
 3769 0d2c 00000000 		.word	patchNum
 3770 0d30 00000000 		.word	macroPageWhenMacroWriteStarted
 3771 0d34 00000000 		.word	macroNamesArray
 3772 0d38 00000000 		.word	volumePedal
 3773              	.L101:
 874:main.c        ****                 }
 875:main.c        ****             }
 876:main.c        ****         }
 877:main.c        ****         else
 878:main.c        ****         if (main_counter == 11)
 3774              		.loc 1 878 0
 3775 0d3c 934B     		ldr	r3, .L233
 3776 0d3e 1B78     		ldrb	r3, [r3]
 3777 0d40 DBB2     		uxtb	r3, r3
 3778 0d42 0B2B     		cmp	r3, #11
 3779 0d44 19D1     		bne	.L100
 879:main.c        ****         { 
 880:main.c        ****             if (mainOLEDWaitingToSend)
 3780              		.loc 1 880 0
 3781 0d46 924B     		ldr	r3, .L233+4
 3782 0d48 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3783 0d4a 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 84


 3784 0d4c 06D0     		beq	.L103
 881:main.c        ****             {
 882:main.c        ****                 OLED_draw(128, 64);
 3785              		.loc 1 882 0
 3786 0d4e 4021     		movs	r1, #64
 3787 0d50 8020     		movs	r0, #128
 3788 0d52 FFF7FEFF 		bl	OLED_draw
 883:main.c        ****                 mainOLEDWaitingToSend = 0;
 3789              		.loc 1 883 0
 3790 0d56 8E4B     		ldr	r3, .L233+4
 3791 0d58 0022     		movs	r2, #0
 3792 0d5a 1A70     		strb	r2, [r3]
 3793              	.L103:
 884:main.c        ****             }
 885:main.c        ****             if (macroOLEDWaitingToSend == 1)
 3794              		.loc 1 885 0
 3795 0d5c 8D4B     		ldr	r3, .L233+8
 3796 0d5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3797 0d60 012B     		cmp	r3, #1
 3798 0d62 0AD1     		bne	.L100
 886:main.c        ****             {
 887:main.c        ****                 macroOLEDWaitingToSend = 2;
 3799              		.loc 1 887 0
 3800 0d64 8B4B     		ldr	r3, .L233+8
 3801 0d66 0222     		movs	r2, #2
 3802 0d68 1A70     		strb	r2, [r3]
 888:main.c        ****                 presetWhenMacroWriteStarted = patchNum;
 3803              		.loc 1 888 0
 3804 0d6a 8B4B     		ldr	r3, .L233+12
 3805 0d6c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3806 0d6e 8B4B     		ldr	r3, .L233+16
 3807 0d70 1A70     		strb	r2, [r3]
 889:main.c        ****                 macroPageWhenMacroWriteStarted = whichMacroPageIsActive;
 3808              		.loc 1 889 0
 3809 0d72 8B4B     		ldr	r3, .L233+20
 3810 0d74 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3811 0d76 8B4B     		ldr	r3, .L233+24
 3812 0d78 1A70     		strb	r2, [r3]
 3813              	.L100:
 890:main.c        ****             }
 891:main.c        ****         }
 892:main.c        **** 
 893:main.c        ****        
 894:main.c        ****         
 895:main.c        ****         if (main_counter < 10)
 3814              		.loc 1 895 0
 3815 0d7a 844B     		ldr	r3, .L233
 3816 0d7c 1B78     		ldrb	r3, [r3]
 3817 0d7e DBB2     		uxtb	r3, r3
 3818 0d80 092B     		cmp	r3, #9
 3819 0d82 00F2E880 		bhi	.L104
 3820              	.LBB26:
 896:main.c        ****         {
 897:main.c        ****             
 898:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 899:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_lowWithDeadZone[ma
 3821              		.loc 1 899 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 85


 3822 0d86 814B     		ldr	r3, .L233
 3823 0d88 1B78     		ldrb	r3, [r3]
 3824 0d8a DBB2     		uxtb	r3, r3
 3825 0d8c 1A46     		mov	r2, r3
 3826 0d8e 864B     		ldr	r3, .L233+28
 3827 0d90 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 3828 0d94 7D4B     		ldr	r3, .L233
 3829 0d96 1B78     		ldrb	r3, [r3]
 3830 0d98 DBB2     		uxtb	r3, r3
 3831 0d9a 1946     		mov	r1, r3
 3832 0d9c 834B     		ldr	r3, .L233+32
 3833 0d9e 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3834 0da2 D31A     		subs	r3, r2, r3
 3835 0da4 9BB2     		uxth	r3, r3
 3836 0da6 BB87     		strh	r3, [r7, #60]	@ movhi
 900:main.c        ****             
 901:main.c        ****             if (tempangle > 0)
 3837              		.loc 1 901 0
 3838 0da8 B7F93C30 		ldrsh	r3, [r7, #60]
 3839 0dac 002B     		cmp	r3, #0
 3840 0dae 1CDD     		ble	.L105
 902:main.c        ****             {
 903:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 3841              		.loc 1 903 0
 3842 0db0 764B     		ldr	r3, .L233
 3843 0db2 1B78     		ldrb	r3, [r3]
 3844 0db4 DBB2     		uxtb	r3, r3
 3845 0db6 1C46     		mov	r4, r3
 3846 0db8 B7F93C30 		ldrsh	r3, [r7, #60]
 3847 0dbc 1846     		mov	r0, r3
 3848 0dbe FFF7FEFF 		bl	__aeabi_i2f
 3849 0dc2 724B     		ldr	r3, .L233
 3850 0dc4 1B78     		ldrb	r3, [r3]
 3851 0dc6 DBB2     		uxtb	r3, r3
 3852 0dc8 1A46     		mov	r2, r3
 3853 0dca 794B     		ldr	r3, .L233+36
 3854 0dcc 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 3855 0dd0 1946     		mov	r1, r3
 3856 0dd2 FFF7FEFF 		bl	__aeabi_fmul
 3857 0dd6 0346     		mov	r3, r0
 3858 0dd8 1846     		mov	r0, r3
 3859 0dda FFF7FEFF 		bl	__aeabi_f2uiz
 3860 0dde 0346     		mov	r3, r0
 3861 0de0 9AB2     		uxth	r2, r3
 3862 0de2 744B     		ldr	r3, .L233+40
 3863 0de4 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 3864 0de8 07E0     		b	.L106
 3865              	.L105:
 904:main.c        ****             }
 905:main.c        ****             else
 906:main.c        ****             {
 907:main.c        ****                 processed_pedals[main_counter] = 0;
 3866              		.loc 1 907 0
 3867 0dea 684B     		ldr	r3, .L233
 3868 0dec 1B78     		ldrb	r3, [r3]
 3869 0dee DBB2     		uxtb	r3, r3
 3870 0df0 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 86


 3871 0df2 704B     		ldr	r3, .L233+40
 3872 0df4 0021     		movs	r1, #0
 3873 0df6 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3874              	.L106:
 908:main.c        ****             }
 909:main.c        ****             if (processed_pedals[main_counter] > 4095)
 3875              		.loc 1 909 0
 3876 0dfa 644B     		ldr	r3, .L233
 3877 0dfc 1B78     		ldrb	r3, [r3]
 3878 0dfe DBB2     		uxtb	r3, r3
 3879 0e00 1A46     		mov	r2, r3
 3880 0e02 6C4B     		ldr	r3, .L233+40
 3881 0e04 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3882 0e08 B3F5805F 		cmp	r3, #4096
 3883 0e0c 08D3     		bcc	.L107
 910:main.c        ****             {
 911:main.c        ****                 processed_pedals[main_counter] = 4095;
 3884              		.loc 1 911 0
 3885 0e0e 5F4B     		ldr	r3, .L233
 3886 0e10 1B78     		ldrb	r3, [r3]
 3887 0e12 DBB2     		uxtb	r3, r3
 3888 0e14 1A46     		mov	r2, r3
 3889 0e16 674B     		ldr	r3, .L233+40
 3890 0e18 40F6FF71 		movw	r1, #4095
 3891 0e1c 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3892              	.L107:
 912:main.c        ****             }
 913:main.c        ****             //invert the ones that are sensing rotation backwards
 914:main.c        ****             if (pedal_inverted[main_counter])
 3893              		.loc 1 914 0
 3894 0e20 5A4B     		ldr	r3, .L233
 3895 0e22 1B78     		ldrb	r3, [r3]
 3896 0e24 DBB2     		uxtb	r3, r3
 3897 0e26 1A46     		mov	r2, r3
 3898 0e28 634B     		ldr	r3, .L233+44
 3899 0e2a 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3900 0e2c 002B     		cmp	r3, #0
 3901 0e2e 11D0     		beq	.L108
 915:main.c        ****             {
 916:main.c        ****                 processed_pedals[main_counter] = 4095 - processed_pedals[main_counter];
 3902              		.loc 1 916 0
 3903 0e30 564B     		ldr	r3, .L233
 3904 0e32 1B78     		ldrb	r3, [r3]
 3905 0e34 DBB2     		uxtb	r3, r3
 3906 0e36 1A46     		mov	r2, r3
 3907 0e38 544B     		ldr	r3, .L233
 3908 0e3a 1B78     		ldrb	r3, [r3]
 3909 0e3c DBB2     		uxtb	r3, r3
 3910 0e3e 1946     		mov	r1, r3
 3911 0e40 5C4B     		ldr	r3, .L233+40
 3912 0e42 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 3913 0e46 C3F57F63 		rsb	r3, r3, #4080
 3914 0e4a 0F33     		adds	r3, r3, #15
 3915 0e4c 99B2     		uxth	r1, r3
 3916 0e4e 594B     		ldr	r3, .L233+40
 3917 0e50 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 3918              	.L108:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 87


 917:main.c        ****             }
 918:main.c        ****             
 919:main.c        ****             //if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 920:main.c        ****             {
 921:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
 922:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
 923:main.c        ****             }
 924:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 3919              		.loc 1 924 0
 3920 0e54 4D4B     		ldr	r3, .L233
 3921 0e56 1B78     		ldrb	r3, [r3]
 3922 0e58 DBB2     		uxtb	r3, r3
 3923 0e5a 1C46     		mov	r4, r3
 3924 0e5c 4B4B     		ldr	r3, .L233
 3925 0e5e 1B78     		ldrb	r3, [r3]
 3926 0e60 DBB2     		uxtb	r3, r3
 3927 0e62 1A46     		mov	r2, r3
 3928 0e64 534B     		ldr	r3, .L233+40
 3929 0e66 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3930 0e6a 1846     		mov	r0, r3
 3931 0e6c FFF7FEFF 		bl	__aeabi_ui2f
 3932 0e70 0346     		mov	r3, r0
 3933 0e72 5249     		ldr	r1, .L233+48
 3934 0e74 1846     		mov	r0, r3
 3935 0e76 FFF7FEFF 		bl	__aeabi_fmul
 3936 0e7a 0346     		mov	r3, r0
 3937 0e7c 1A46     		mov	r2, r3
 3938 0e7e 504B     		ldr	r3, .L233+52
 3939 0e80 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
 925:main.c        ****             pedals8bit[main_counter] = (float)processed_pedals[pedal_cc_assignments[main_counter]] 
 3940              		.loc 1 925 0
 3941 0e84 414B     		ldr	r3, .L233
 3942 0e86 1B78     		ldrb	r3, [r3]
 3943 0e88 DBB2     		uxtb	r3, r3
 3944 0e8a 1C46     		mov	r4, r3
 3945 0e8c 3F4B     		ldr	r3, .L233
 3946 0e8e 1B78     		ldrb	r3, [r3]
 3947 0e90 DBB2     		uxtb	r3, r3
 3948 0e92 1A46     		mov	r2, r3
 3949 0e94 4B4B     		ldr	r3, .L233+56
 3950 0e96 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 3951 0e98 1A46     		mov	r2, r3
 3952 0e9a 464B     		ldr	r3, .L233+40
 3953 0e9c 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 3954 0ea0 1846     		mov	r0, r3
 3955 0ea2 FFF7FEFF 		bl	__aeabi_ui2f
 3956 0ea6 0346     		mov	r3, r0
 3957 0ea8 4FF07651 		mov	r1, #1031798784
 3958 0eac 1846     		mov	r0, r3
 3959 0eae FFF7FEFF 		bl	__aeabi_fmul
 3960 0eb2 0346     		mov	r3, r0
 3961 0eb4 1846     		mov	r0, r3
 3962 0eb6 FFF7FEFF 		bl	__aeabi_f2uiz
 3963 0eba 0346     		mov	r3, r0
 3964 0ebc DAB2     		uxtb	r2, r3
 3965 0ebe 424B     		ldr	r3, .L233+60
 3966 0ec0 1A55     		strb	r2, [r3, r4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 88


 926:main.c        ****             if (midiSendOn)
 3967              		.loc 1 926 0
 3968 0ec2 424B     		ldr	r3, .L233+64
 3969 0ec4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3970 0ec6 002B     		cmp	r3, #0
 3971 0ec8 36D0     		beq	.L109
 927:main.c        ****             {
 928:main.c        ****                 pedals7bit[main_counter] = pedals8bit[main_counter] >> 1;
 3972              		.loc 1 928 0
 3973 0eca 304B     		ldr	r3, .L233
 3974 0ecc 1B78     		ldrb	r3, [r3]
 3975 0ece DBB2     		uxtb	r3, r3
 3976 0ed0 1A46     		mov	r2, r3
 3977 0ed2 2E4B     		ldr	r3, .L233
 3978 0ed4 1B78     		ldrb	r3, [r3]
 3979 0ed6 DBB2     		uxtb	r3, r3
 3980 0ed8 1946     		mov	r1, r3
 3981 0eda 3B4B     		ldr	r3, .L233+60
 3982 0edc 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 3983 0ede 5B08     		lsrs	r3, r3, #1
 3984 0ee0 D9B2     		uxtb	r1, r3
 3985 0ee2 3B4B     		ldr	r3, .L233+68
 3986 0ee4 9954     		strb	r1, [r3, r2]
 929:main.c        ****                 if (pedals7bit[main_counter] != prevPedals7bit[main_counter])
 3987              		.loc 1 929 0
 3988 0ee6 294B     		ldr	r3, .L233
 3989 0ee8 1B78     		ldrb	r3, [r3]
 3990 0eea DBB2     		uxtb	r3, r3
 3991 0eec 1A46     		mov	r2, r3
 3992 0eee 384B     		ldr	r3, .L233+68
 3993 0ef0 9A5C     		ldrb	r2, [r3, r2]	@ zero_extendqisi2
 3994 0ef2 264B     		ldr	r3, .L233
 3995 0ef4 1B78     		ldrb	r3, [r3]
 3996 0ef6 DBB2     		uxtb	r3, r3
 3997 0ef8 1946     		mov	r1, r3
 3998 0efa 364B     		ldr	r3, .L233+72
 3999 0efc 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 4000 0efe 9A42     		cmp	r2, r3
 4001 0f00 0ED0     		beq	.L110
 930:main.c        ****                 {
 931:main.c        ****                     sendMIDIControlChange(main_counter + 14, (pedals7bit[main_counter]), 1);
 4002              		.loc 1 931 0
 4003 0f02 224B     		ldr	r3, .L233
 4004 0f04 1B78     		ldrb	r3, [r3]
 4005 0f06 DBB2     		uxtb	r3, r3
 4006 0f08 03F10E00 		add	r0, r3, #14
 4007 0f0c 1F4B     		ldr	r3, .L233
 4008 0f0e 1B78     		ldrb	r3, [r3]
 4009 0f10 DBB2     		uxtb	r3, r3
 4010 0f12 1A46     		mov	r2, r3
 4011 0f14 2E4B     		ldr	r3, .L233+68
 4012 0f16 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 4013 0f18 0122     		movs	r2, #1
 4014 0f1a 1946     		mov	r1, r3
 4015 0f1c FFF7FEFF 		bl	sendMIDIControlChange
 4016              	.L110:
 932:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 89


 933:main.c        ****                 prevPedals7bit[main_counter] = pedals7bit[main_counter];
 4017              		.loc 1 933 0
 4018 0f20 1A4B     		ldr	r3, .L233
 4019 0f22 1B78     		ldrb	r3, [r3]
 4020 0f24 DBB2     		uxtb	r3, r3
 4021 0f26 1A46     		mov	r2, r3
 4022 0f28 184B     		ldr	r3, .L233
 4023 0f2a 1B78     		ldrb	r3, [r3]
 4024 0f2c DBB2     		uxtb	r3, r3
 4025 0f2e 1946     		mov	r1, r3
 4026 0f30 274B     		ldr	r3, .L233+68
 4027 0f32 595C     		ldrb	r1, [r3, r1]	@ zero_extendqisi2
 4028 0f34 274B     		ldr	r3, .L233+72
 4029 0f36 9954     		strb	r1, [r3, r2]
 4030              	.L109:
 934:main.c        ****             }
 935:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 4031              		.loc 1 935 0
 4032 0f38 144B     		ldr	r3, .L233
 4033 0f3a 1B78     		ldrb	r3, [r3]
 4034 0f3c DBB2     		uxtb	r3, r3
 4035 0f3e 1A46     		mov	r2, r3
 4036 0f40 124B     		ldr	r3, .L233
 4037 0f42 1B78     		ldrb	r3, [r3]
 4038 0f44 DBB2     		uxtb	r3, r3
 4039 0f46 1946     		mov	r1, r3
 4040 0f48 1A4B     		ldr	r3, .L233+40
 4041 0f4a 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 4042 0f4e 224B     		ldr	r3, .L233+76
 4043 0f50 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 4044              	.LBE26:
 4045 0f54 A3E0     		b	.L111
 4046              	.L104:
 936:main.c        ****         }
 937:main.c        ****         else
 938:main.c        ****         {
 939:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 4047              		.loc 1 939 0
 4048 0f56 214B     		ldr	r3, .L233+80
 4049 0f58 1B88     		ldrh	r3, [r3]
 4050 0f5a 1846     		mov	r0, r3
 4051 0f5c FFF7FEFF 		bl	__aeabi_ui2f
 4052 0f60 0346     		mov	r3, r0
 4053 0f62 1F49     		ldr	r1, .L233+84
 4054 0f64 1846     		mov	r0, r3
 4055 0f66 FFF7FEFF 		bl	__aeabi_fmul
 4056 0f6a 0346     		mov	r3, r0
 4057 0f6c 1846     		mov	r0, r3
 4058 0f6e FFF7FEFF 		bl	__aeabi_f2iz
 4059 0f72 0346     		mov	r3, r0
 4060 0f74 1AB2     		sxth	r2, r3
 4061 0f76 1B4B     		ldr	r3, .L233+88
 4062 0f78 1A80     		strh	r2, [r3]	@ movhi
 940:main.c        **** 
 941:main.c        ****             if (processed_volumePedal < 0)
 4063              		.loc 1 941 0
 4064 0f7a 1A4B     		ldr	r3, .L233+88
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 90


 4065 0f7c B3F90030 		ldrsh	r3, [r3]
 4066 0f80 002B     		cmp	r3, #0
 4067 0f82 31DA     		bge	.L112
 942:main.c        ****             {
 943:main.c        ****                 processed_volumePedal = 0;
 4068              		.loc 1 943 0
 4069 0f84 174B     		ldr	r3, .L233+88
 4070 0f86 0022     		movs	r2, #0
 4071 0f88 1A80     		strh	r2, [r3]	@ movhi
 4072 0f8a 37E0     		b	.L113
 4073              	.L234:
 4074              		.align	2
 4075              	.L233:
 4076 0f8c 00000000 		.word	main_counter
 4077 0f90 00000000 		.word	mainOLEDWaitingToSend
 4078 0f94 00000000 		.word	macroOLEDWaitingToSend
 4079 0f98 00000000 		.word	patchNum
 4080 0f9c 00000000 		.word	presetWhenMacroWriteStarted
 4081 0fa0 00000000 		.word	whichMacroPageIsActive
 4082 0fa4 00000000 		.word	macroPageWhenMacroWriteStarted
 4083 0fa8 00000000 		.word	angle
 4084 0fac 00000000 		.word	pedals_lowWithDeadZone
 4085 0fb0 00000000 		.word	pedalRatios
 4086 0fb4 00000000 		.word	processed_pedals
 4087 0fb8 00000000 		.word	pedal_inverted
 4088 0fbc 01088039 		.word	964691969
 4089 0fc0 00000000 		.word	pedals_float
 4090 0fc4 00000000 		.word	pedal_cc_assignments
 4091 0fc8 00000000 		.word	pedals8bit
 4092 0fcc 00000000 		.word	midiSendOn
 4093 0fd0 00000000 		.word	pedals7bit
 4094 0fd4 00000000 		.word	prevPedals7bit
 4095 0fd8 00000000 		.word	prev_processed_pedals
 4096 0fdc 00000000 		.word	volumePedal
 4097 0fe0 C5F1803F 		.word	1065415109
 4098 0fe4 00000000 		.word	processed_volumePedal
 4099              	.L112:
 944:main.c        ****             }
 945:main.c        ****             else if (processed_volumePedal > 4095)
 4100              		.loc 1 945 0
 4101 0fe8 A34B     		ldr	r3, .L235
 4102 0fea B3F90030 		ldrsh	r3, [r3]
 4103 0fee B3F5805F 		cmp	r3, #4096
 4104 0ff2 03DB     		blt	.L113
 946:main.c        ****             {
 947:main.c        ****                  processed_volumePedal = 4095;
 4105              		.loc 1 947 0
 4106 0ff4 A04B     		ldr	r3, .L235
 4107 0ff6 40F6FF72 		movw	r2, #4095
 4108 0ffa 1A80     		strh	r2, [r3]	@ movhi
 4109              	.L113:
 948:main.c        ****             }
 949:main.c        ****             if (midiSendOn)
 4110              		.loc 1 949 0
 4111 0ffc 9F4B     		ldr	r3, .L235+4
 4112 0ffe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4113 1000 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 91


 4114 1002 4CD0     		beq	.L111
 950:main.c        ****             {
 951:main.c        ****                 if (!pedalHiRes)
 4115              		.loc 1 951 0
 4116 1004 9E4B     		ldr	r3, .L235+8
 4117 1006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4118 1008 002B     		cmp	r3, #0
 4119 100a 1DD1     		bne	.L114
 952:main.c        ****                 {
 953:main.c        ****                     u7bit_volumePedal = processed_volumePedal >> 5;
 4120              		.loc 1 953 0
 4121 100c 9A4B     		ldr	r3, .L235
 4122 100e B3F90030 		ldrsh	r3, [r3]
 4123 1012 5B11     		asrs	r3, r3, #5
 4124 1014 1BB2     		sxth	r3, r3
 4125 1016 DAB2     		uxtb	r2, r3
 4126 1018 9A4B     		ldr	r3, .L235+12
 4127 101a 1A70     		strb	r2, [r3]
 954:main.c        ****                     if ( u7bit_volumePedal != prev_7bit_volumePedal)
 4128              		.loc 1 954 0
 4129 101c 994B     		ldr	r3, .L235+12
 4130 101e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4131 1020 994B     		ldr	r3, .L235+16
 4132 1022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4133 1024 9A42     		cmp	r2, r3
 4134 1026 0AD0     		beq	.L115
 4135              	.LBB27:
 955:main.c        ****                     {
 956:main.c        ****                         uint16_t tempPedal = processed_volumePedal;
 4136              		.loc 1 956 0
 4137 1028 934B     		ldr	r3, .L235
 4138 102a B3F90030 		ldrsh	r3, [r3]
 4139 102e 7B87     		strh	r3, [r7, #58]	@ movhi
 957:main.c        ****                         
 958:main.c        ****                         sendMIDIControlChange(13, u7bit_volumePedal, 0);
 4140              		.loc 1 958 0
 4141 1030 944B     		ldr	r3, .L235+12
 4142 1032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4143 1034 0022     		movs	r2, #0
 4144 1036 1946     		mov	r1, r3
 4145 1038 0D20     		movs	r0, #13
 4146 103a FFF7FEFF 		bl	sendMIDIControlChange
 4147              	.L115:
 4148              	.LBE27:
 959:main.c        ****                         //sendMIDIControlChange(24, (tempPedal & 32), 0); //remaining 5 bits for 40
 960:main.c        ****                     }
 961:main.c        ****                      //prev_processed_volumePedal = processed_volumePedal;
 962:main.c        ****                     prev_7bit_volumePedal = u7bit_volumePedal;
 4149              		.loc 1 962 0
 4150 103e 914B     		ldr	r3, .L235+12
 4151 1040 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4152 1042 914B     		ldr	r3, .L235+16
 4153 1044 1A70     		strb	r2, [r3]
 4154 1046 2AE0     		b	.L111
 4155              	.L114:
 963:main.c        ****                 }
 964:main.c        ****                 else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 92


 965:main.c        ****                 {
 966:main.c        ****                     
 967:main.c        ****                     if ( processed_volumePedal != prev_processed_volumePedal)
 4156              		.loc 1 967 0
 4157 1048 8B4B     		ldr	r3, .L235
 4158 104a B3F90020 		ldrsh	r2, [r3]
 4159 104e 8F4B     		ldr	r3, .L235+20
 4160 1050 B3F90030 		ldrsh	r3, [r3]
 4161 1054 9A42     		cmp	r2, r3
 4162 1056 1DD0     		beq	.L116
 4163              	.LBB28:
 968:main.c        ****                     {
 969:main.c        ****                         u7bit_volumePedal = processed_volumePedal >> 5;
 4164              		.loc 1 969 0
 4165 1058 874B     		ldr	r3, .L235
 4166 105a B3F90030 		ldrsh	r3, [r3]
 4167 105e 5B11     		asrs	r3, r3, #5
 4168 1060 1BB2     		sxth	r3, r3
 4169 1062 DAB2     		uxtb	r2, r3
 4170 1064 874B     		ldr	r3, .L235+12
 4171 1066 1A70     		strb	r2, [r3]
 970:main.c        ****                         uint8_t tempPedal = ((uint16_t)processed_volumePedal) & 32;
 4172              		.loc 1 970 0
 4173 1068 834B     		ldr	r3, .L235
 4174 106a B3F90030 		ldrsh	r3, [r3]
 4175 106e DBB2     		uxtb	r3, r3
 4176 1070 03F02003 		and	r3, r3, #32
 4177 1074 87F83930 		strb	r3, [r7, #57]
 971:main.c        ****                         
 972:main.c        ****                         sendMIDIControlChange(13, u7bit_volumePedal, 0);
 4178              		.loc 1 972 0
 4179 1078 824B     		ldr	r3, .L235+12
 4180 107a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4181 107c 0022     		movs	r2, #0
 4182 107e 1946     		mov	r1, r3
 4183 1080 0D20     		movs	r0, #13
 4184 1082 FFF7FEFF 		bl	sendMIDIControlChange
 973:main.c        ****                         sendMIDIControlChange(24, tempPedal, 0); //remaining 5 bits for 4096 resolu
 4185              		.loc 1 973 0
 4186 1086 97F83930 		ldrb	r3, [r7, #57]	@ zero_extendqisi2
 4187 108a 0022     		movs	r2, #0
 4188 108c 1946     		mov	r1, r3
 4189 108e 1820     		movs	r0, #24
 4190 1090 FFF7FEFF 		bl	sendMIDIControlChange
 4191              	.L116:
 4192              	.LBE28:
 974:main.c        ****                     }
 975:main.c        ****                     prev_processed_volumePedal = processed_volumePedal;
 4193              		.loc 1 975 0
 4194 1094 784B     		ldr	r3, .L235
 4195 1096 B3F90020 		ldrsh	r2, [r3]
 4196 109a 7C4B     		ldr	r3, .L235+20
 4197 109c 1A80     		strh	r2, [r3]	@ movhi
 4198              	.L111:
 976:main.c        ****                     //prev_7bit_volumePedal = u7bit_volumePedal;
 977:main.c        ****                 }
 978:main.c        ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 93


 979:main.c        ****         }
 980:main.c        ****         
 981:main.c        ****         main_counter++;
 4199              		.loc 1 981 0
 4200 109e 7C4B     		ldr	r3, .L235+24
 4201 10a0 1B78     		ldrb	r3, [r3]
 4202 10a2 DBB2     		uxtb	r3, r3
 4203 10a4 0133     		adds	r3, r3, #1
 4204 10a6 DAB2     		uxtb	r2, r3
 4205 10a8 794B     		ldr	r3, .L235+24
 4206 10aa 1A70     		strb	r2, [r3]
 982:main.c        **** 
 983:main.c        ****         if (main_counter > 11)
 4207              		.loc 1 983 0
 4208 10ac 784B     		ldr	r3, .L235+24
 4209 10ae 1B78     		ldrb	r3, [r3]
 4210 10b0 DBB2     		uxtb	r3, r3
 4211 10b2 0B2B     		cmp	r3, #11
 4212 10b4 02D9     		bls	.L117
 984:main.c        ****         {
 985:main.c        ****             main_counter = 0;
 4213              		.loc 1 985 0
 4214 10b6 764B     		ldr	r3, .L235+24
 4215 10b8 0022     		movs	r2, #0
 4216 10ba 1A70     		strb	r2, [r3]
 4217              	.L117:
 986:main.c        ****         }
 987:main.c        ****         //testpin3_Write(0);
 988:main.c        **** 
 989:main.c        ****        // testpin5_Write(1);
 990:main.c        ****         
 991:main.c        ****         if ((rxBufferBar[!currentBarBuffer][6] == 254) && (rxBufferBar[!currentBarBuffer][7] == 253
 4218              		.loc 1 991 0
 4219 10bc 754B     		ldr	r3, .L235+28
 4220 10be 1B78     		ldrb	r3, [r3]
 4221 10c0 DBB2     		uxtb	r3, r3
 4222 10c2 002B     		cmp	r3, #0
 4223 10c4 0CBF     		ite	eq
 4224 10c6 0123     		moveq	r3, #1
 4225 10c8 0023     		movne	r3, #0
 4226 10ca DBB2     		uxtb	r3, r3
 4227 10cc 724A     		ldr	r2, .L235+32
 4228 10ce DB00     		lsls	r3, r3, #3
 4229 10d0 1344     		add	r3, r3, r2
 4230 10d2 9B79     		ldrb	r3, [r3, #6]
 4231 10d4 DBB2     		uxtb	r3, r3
 4232 10d6 FE2B     		cmp	r3, #254
 4233 10d8 40F00B82 		bne	.L118
 4234              		.loc 1 991 0 is_stmt 0 discriminator 1
 4235 10dc 6D4B     		ldr	r3, .L235+28
 4236 10de 1B78     		ldrb	r3, [r3]
 4237 10e0 DBB2     		uxtb	r3, r3
 4238 10e2 002B     		cmp	r3, #0
 4239 10e4 0CBF     		ite	eq
 4240 10e6 0123     		moveq	r3, #1
 4241 10e8 0023     		movne	r3, #0
 4242 10ea DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 94


 4243 10ec 6A4A     		ldr	r2, .L235+32
 4244 10ee DB00     		lsls	r3, r3, #3
 4245 10f0 1344     		add	r3, r3, r2
 4246 10f2 DB79     		ldrb	r3, [r3, #7]
 4247 10f4 DBB2     		uxtb	r3, r3
 4248 10f6 FD2B     		cmp	r3, #253
 4249 10f8 40F0FB81 		bne	.L118
 4250              	.LBB29:
 992:main.c        ****         {
 993:main.c        ****             for (int i = 0; i < NUM_SLIDERS; i++)
 4251              		.loc 1 993 0 is_stmt 1
 4252 10fc 0023     		movs	r3, #0
 4253 10fe C7F8A030 		str	r3, [r7, #160]
 4254 1102 F1E1     		b	.L119
 4255              	.L131:
 994:main.c        ****             {
 995:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 4256              		.loc 1 995 0
 4257 1104 634B     		ldr	r3, .L235+28
 4258 1106 1B78     		ldrb	r3, [r3]
 4259 1108 DBB2     		uxtb	r3, r3
 4260 110a 002B     		cmp	r3, #0
 4261 110c 0CBF     		ite	eq
 4262 110e 0123     		moveq	r3, #1
 4263 1110 0023     		movne	r3, #0
 4264 1112 DBB2     		uxtb	r3, r3
 4265 1114 1A46     		mov	r2, r3
 4266 1116 D7F8A030 		ldr	r3, [r7, #160]
 4267 111a 5B00     		lsls	r3, r3, #1
 4268 111c 5E49     		ldr	r1, .L235+32
 4269 111e D200     		lsls	r2, r2, #3
 4270 1120 0A44     		add	r2, r2, r1
 4271 1122 1344     		add	r3, r3, r2
 4272 1124 1B78     		ldrb	r3, [r3]
 4273 1126 DBB2     		uxtb	r3, r3
 4274 1128 9BB2     		uxth	r3, r3
 4275 112a 1B02     		lsls	r3, r3, #8
 4276 112c 9AB2     		uxth	r2, r3
 4277 112e 594B     		ldr	r3, .L235+28
 4278 1130 1B78     		ldrb	r3, [r3]
 4279 1132 DBB2     		uxtb	r3, r3
 4280 1134 002B     		cmp	r3, #0
 4281 1136 0CBF     		ite	eq
 4282 1138 0123     		moveq	r3, #1
 4283 113a 0023     		movne	r3, #0
 4284 113c DBB2     		uxtb	r3, r3
 4285 113e 1946     		mov	r1, r3
 4286 1140 D7F8A030 		ldr	r3, [r7, #160]
 4287 1144 5B00     		lsls	r3, r3, #1
 4288 1146 0133     		adds	r3, r3, #1
 4289 1148 5348     		ldr	r0, .L235+32
 4290 114a C900     		lsls	r1, r1, #3
 4291 114c 0144     		add	r1, r1, r0
 4292 114e 0B44     		add	r3, r3, r1
 4293 1150 1B78     		ldrb	r3, [r3]
 4294 1152 DBB2     		uxtb	r3, r3
 4295 1154 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 95


 4296 1156 1344     		add	r3, r3, r2
 4297 1158 99B2     		uxth	r1, r3
 4298 115a 504A     		ldr	r2, .L235+36
 4299 115c D7F8A030 		ldr	r3, [r7, #160]
 4300 1160 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 996:main.c        ****                 //
 997:main.c        ****                 if(bar[i] != prevBar[i])
 4301              		.loc 1 997 0
 4302 1164 4D4A     		ldr	r2, .L235+36
 4303 1166 D7F8A030 		ldr	r3, [r7, #160]
 4304 116a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4305 116e 9AB2     		uxth	r2, r3
 4306 1170 4B49     		ldr	r1, .L235+40
 4307 1172 D7F8A030 		ldr	r3, [r7, #160]
 4308 1176 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 4309 117a 9BB2     		uxth	r3, r3
 4310 117c 9A42     		cmp	r2, r3
 4311 117e 00F0A381 		beq	.L120
 998:main.c        ****                 {
 999:main.c        ****     				if (midiDebugSendOn)
 4312              		.loc 1 999 0
 4313 1182 484B     		ldr	r3, .L235+44
 4314 1184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4315 1186 002B     		cmp	r3, #0
 4316 1188 3CD0     		beq	.L121
1000:main.c        ****                     {
1001:main.c        ****                         sendMIDIControlChange(34+(i*3), bar[i] & 127, 1);
 4317              		.loc 1 1001 0
 4318 118a D7F8A020 		ldr	r2, [r7, #160]
 4319 118e 1346     		mov	r3, r2
 4320 1190 5B00     		lsls	r3, r3, #1
 4321 1192 1344     		add	r3, r3, r2
 4322 1194 03F12200 		add	r0, r3, #34
 4323 1198 404A     		ldr	r2, .L235+36
 4324 119a D7F8A030 		ldr	r3, [r7, #160]
 4325 119e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4326 11a2 9BB2     		uxth	r3, r3
 4327 11a4 03F07F03 		and	r3, r3, #127
 4328 11a8 0122     		movs	r2, #1
 4329 11aa 1946     		mov	r1, r3
 4330 11ac FFF7FEFF 		bl	sendMIDIControlChange
1002:main.c        ****                         sendMIDIControlChange(33+(i*3), (bar[i] >> 7) & 127, 1);
 4331              		.loc 1 1002 0
 4332 11b0 D7F8A020 		ldr	r2, [r7, #160]
 4333 11b4 1346     		mov	r3, r2
 4334 11b6 5B00     		lsls	r3, r3, #1
 4335 11b8 1344     		add	r3, r3, r2
 4336 11ba 03F12100 		add	r0, r3, #33
 4337 11be 374A     		ldr	r2, .L235+36
 4338 11c0 D7F8A030 		ldr	r3, [r7, #160]
 4339 11c4 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4340 11c8 9BB2     		uxth	r3, r3
 4341 11ca DB09     		lsrs	r3, r3, #7
 4342 11cc 9BB2     		uxth	r3, r3
 4343 11ce 03F07F03 		and	r3, r3, #127
 4344 11d2 0122     		movs	r2, #1
 4345 11d4 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 96


 4346 11d6 FFF7FEFF 		bl	sendMIDIControlChange
1003:main.c        ****                         sendMIDIControlChange(32+(i*3), (bar[i] >> 14) & 127, 1);
 4347              		.loc 1 1003 0
 4348 11da D7F8A020 		ldr	r2, [r7, #160]
 4349 11de 1346     		mov	r3, r2
 4350 11e0 5B00     		lsls	r3, r3, #1
 4351 11e2 1344     		add	r3, r3, r2
 4352 11e4 03F12000 		add	r0, r3, #32
 4353 11e8 2C4A     		ldr	r2, .L235+36
 4354 11ea D7F8A030 		ldr	r3, [r7, #160]
 4355 11ee 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4356 11f2 9BB2     		uxth	r3, r3
 4357 11f4 9B0B     		lsrs	r3, r3, #14
 4358 11f6 9BB2     		uxth	r3, r3
 4359 11f8 03F07F03 		and	r3, r3, #127
 4360 11fc 0122     		movs	r2, #1
 4361 11fe 1946     		mov	r1, r3
 4362 1200 FFF7FEFF 		bl	sendMIDIControlChange
 4363              	.L121:
1004:main.c        ****                     }
1005:main.c        ****                     if ((bar[i] == 65535) || (bar[i] > fretMeasurements[i][0]))
 4364              		.loc 1 1005 0
 4365 1204 254A     		ldr	r2, .L235+36
 4366 1206 D7F8A030 		ldr	r3, [r7, #160]
 4367 120a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4368 120e 9BB2     		uxth	r3, r3
 4369 1210 4FF6FF72 		movw	r2, #65535
 4370 1214 9342     		cmp	r3, r2
 4371 1216 10D0     		beq	.L122
 4372              		.loc 1 1005 0 is_stmt 0 discriminator 1
 4373 1218 204A     		ldr	r2, .L235+36
 4374 121a D7F8A030 		ldr	r3, [r7, #160]
 4375 121e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4376 1222 99B2     		uxth	r1, r3
 4377 1224 2048     		ldr	r0, .L235+48
 4378 1226 D7F8A020 		ldr	r2, [r7, #160]
 4379 122a 1346     		mov	r3, r2
 4380 122c 5B00     		lsls	r3, r3, #1
 4381 122e 1344     		add	r3, r3, r2
 4382 1230 DB00     		lsls	r3, r3, #3
 4383 1232 0344     		add	r3, r3, r0
 4384 1234 1B88     		ldrh	r3, [r3]
 4385 1236 9942     		cmp	r1, r3
 4386 1238 07D9     		bls	.L123
 4387              	.L122:
1006:main.c        ****     				{
1007:main.c        ****     					stringMappedPositionsInRatios[i] = 1.0f;
 4388              		.loc 1 1007 0 is_stmt 1
 4389 123a 1C4A     		ldr	r2, .L235+52
 4390 123c D7F8A030 		ldr	r3, [r7, #160]
 4391 1240 4FF07E51 		mov	r1, #1065353216
 4392 1244 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4393 1248 EBE0     		b	.L124
 4394              	.L123:
1008:main.c        ****     				}
1009:main.c        ****                     else if (bar[i] > fretMeasurements[i][NUM_FRET_MEASUREMENTS-1])
 4395              		.loc 1 1009 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 97


 4396 124a 144A     		ldr	r2, .L235+36
 4397 124c D7F8A030 		ldr	r3, [r7, #160]
 4398 1250 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4399 1254 99B2     		uxth	r1, r3
 4400 1256 1448     		ldr	r0, .L235+48
 4401 1258 D7F8A020 		ldr	r2, [r7, #160]
 4402 125c 1346     		mov	r3, r2
 4403 125e 5B00     		lsls	r3, r3, #1
 4404 1260 1344     		add	r3, r3, r2
 4405 1262 DB00     		lsls	r3, r3, #3
 4406 1264 0344     		add	r3, r3, r0
 4407 1266 1633     		adds	r3, r3, #22
 4408 1268 1B88     		ldrh	r3, [r3]
 4409 126a 9942     		cmp	r1, r3
 4410 126c 40F2A080 		bls	.L125
 4411              	.LBB30:
1010:main.c        ****                     {
1011:main.c        ****                         for (int j = 0; j < NUM_FRET_MEASUREMENTS-1; j++)
 4412              		.loc 1 1011 0
 4413 1270 0023     		movs	r3, #0
 4414 1272 C7F89C30 		str	r3, [r7, #156]
 4415 1276 96E0     		b	.L126
 4416              	.L236:
 4417              		.align	2
 4418              	.L235:
 4419 1278 00000000 		.word	processed_volumePedal
 4420 127c 00000000 		.word	midiSendOn
 4421 1280 00000000 		.word	pedalHiRes
 4422 1284 00000000 		.word	u7bit_volumePedal
 4423 1288 00000000 		.word	prev_7bit_volumePedal
 4424 128c 00000000 		.word	prev_processed_volumePedal
 4425 1290 00000000 		.word	main_counter
 4426 1294 00000000 		.word	currentBarBuffer
 4427 1298 00000000 		.word	rxBufferBar
 4428 129c 00000000 		.word	bar
 4429 12a0 00000000 		.word	prevBar
 4430 12a4 00000000 		.word	midiDebugSendOn
 4431 12a8 00000000 		.word	fretMeasurements
 4432 12ac 00000000 		.word	stringMappedPositionsInRatios
 4433              	.L130:
1012:main.c        ****                         {
1013:main.c        ****                             if ((bar[i] <=  fretMeasurements[i][j]) && (bar[i] >  fretMeasurements[
 4434              		.loc 1 1013 0
 4435 12b0 AB4A     		ldr	r2, .L237
 4436 12b2 D7F8A030 		ldr	r3, [r7, #160]
 4437 12b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4438 12ba 99B2     		uxth	r1, r3
 4439 12bc A948     		ldr	r0, .L237+4
 4440 12be D7F8A020 		ldr	r2, [r7, #160]
 4441 12c2 1346     		mov	r3, r2
 4442 12c4 5B00     		lsls	r3, r3, #1
 4443 12c6 1344     		add	r3, r3, r2
 4444 12c8 9B00     		lsls	r3, r3, #2
 4445 12ca D7F89C20 		ldr	r2, [r7, #156]
 4446 12ce 1344     		add	r3, r3, r2
 4447 12d0 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4448 12d4 9942     		cmp	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 98


 4449 12d6 61D8     		bhi	.L127
 4450              		.loc 1 1013 0 is_stmt 0 discriminator 1
 4451 12d8 A14A     		ldr	r2, .L237
 4452 12da D7F8A030 		ldr	r3, [r7, #160]
 4453 12de 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4454 12e2 99B2     		uxth	r1, r3
 4455 12e4 D7F89C30 		ldr	r3, [r7, #156]
 4456 12e8 581C     		adds	r0, r3, #1
 4457 12ea 9E4C     		ldr	r4, .L237+4
 4458 12ec D7F8A020 		ldr	r2, [r7, #160]
 4459 12f0 1346     		mov	r3, r2
 4460 12f2 5B00     		lsls	r3, r3, #1
 4461 12f4 1344     		add	r3, r3, r2
 4462 12f6 9B00     		lsls	r3, r3, #2
 4463 12f8 0344     		add	r3, r3, r0
 4464 12fa 34F81330 		ldrh	r3, [r4, r3, lsl #1]
 4465 12fe 9942     		cmp	r1, r3
 4466 1300 4CD9     		bls	.L127
1014:main.c        ****                             {
1015:main.c        ****                                 stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasureme
 4467              		.loc 1 1015 0 is_stmt 1
 4468 1302 974A     		ldr	r2, .L237
 4469 1304 D7F8A030 		ldr	r3, [r7, #160]
 4470 1308 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4471 130c 9BB2     		uxth	r3, r3
 4472 130e 1846     		mov	r0, r3
 4473 1310 FFF7FEFF 		bl	__aeabi_ui2f
 4474 1314 0446     		mov	r4, r0
 4475 1316 9349     		ldr	r1, .L237+4
 4476 1318 D7F8A020 		ldr	r2, [r7, #160]
 4477 131c 1346     		mov	r3, r2
 4478 131e 5B00     		lsls	r3, r3, #1
 4479 1320 1344     		add	r3, r3, r2
 4480 1322 9B00     		lsls	r3, r3, #2
 4481 1324 D7F89C20 		ldr	r2, [r7, #156]
 4482 1328 1344     		add	r3, r3, r2
 4483 132a 31F81330 		ldrh	r3, [r1, r3, lsl #1]
 4484 132e 1846     		mov	r0, r3
 4485 1330 FFF7FEFF 		bl	__aeabi_ui2f
 4486 1334 0546     		mov	r5, r0
 4487 1336 D7F89C30 		ldr	r3, [r7, #156]
 4488 133a 591C     		adds	r1, r3, #1
 4489 133c 8948     		ldr	r0, .L237+4
 4490 133e D7F8A020 		ldr	r2, [r7, #160]
 4491 1342 1346     		mov	r3, r2
 4492 1344 5B00     		lsls	r3, r3, #1
 4493 1346 1344     		add	r3, r3, r2
 4494 1348 9B00     		lsls	r3, r3, #2
 4495 134a 0B44     		add	r3, r3, r1
 4496 134c 30F81330 		ldrh	r3, [r0, r3, lsl #1]
 4497 1350 1846     		mov	r0, r3
 4498 1352 FFF7FEFF 		bl	__aeabi_ui2f
 4499 1356 844A     		ldr	r2, .L237+8
 4500 1358 D7F89C30 		ldr	r3, [r7, #156]
 4501 135c 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 4502 1360 D7F89C30 		ldr	r3, [r7, #156]
 4503 1364 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 99


 4504 1366 804A     		ldr	r2, .L237+8
 4505 1368 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4506 136c 0093     		str	r3, [sp]	@ float
 4507 136e 0B46     		mov	r3, r1
 4508 1370 0246     		mov	r2, r0
 4509 1372 2946     		mov	r1, r5
 4510 1374 2046     		mov	r0, r4
 4511 1376 FFF7FEFF 		bl	map
 4512 137a 0146     		mov	r1, r0
 4513 137c 7B4A     		ldr	r2, .L237+12
 4514 137e D7F8A030 		ldr	r3, [r7, #160]
 4515 1382 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
1016:main.c        ****                                 if (midiDebugSendOn)
 4516              		.loc 1 1016 0
 4517 1386 7A4B     		ldr	r3, .L237+16
 4518 1388 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4519 138a 002B     		cmp	r3, #0
 4520 138c 48D0     		beq	.L222
1017:main.c        ****                                 {
1018:main.c        ****                                     sendMIDIControlChange(44, j, 1);
 4521              		.loc 1 1018 0
 4522 138e 0122     		movs	r2, #1
 4523 1390 D7F89C10 		ldr	r1, [r7, #156]
 4524 1394 2C20     		movs	r0, #44
 4525 1396 FFF7FEFF 		bl	sendMIDIControlChange
1019:main.c        ****                                 }
1020:main.c        ****                                 break;
 4526              		.loc 1 1020 0
 4527 139a 41E0     		b	.L222
 4528              	.L127:
1011:main.c        ****                         {
 4529              		.loc 1 1011 0 discriminator 2
 4530 139c D7F89C30 		ldr	r3, [r7, #156]
 4531 13a0 0133     		adds	r3, r3, #1
 4532 13a2 C7F89C30 		str	r3, [r7, #156]
 4533              	.L126:
1011:main.c        ****                         {
 4534              		.loc 1 1011 0 is_stmt 0 discriminator 1
 4535 13a6 D7F89C30 		ldr	r3, [r7, #156]
 4536 13aa 0A2B     		cmp	r3, #10
 4537 13ac 80DD     		ble	.L130
 4538 13ae 38E0     		b	.L124
 4539              	.L125:
 4540              	.LBE30:
1021:main.c        ****                             }
1022:main.c        ****                         }
1023:main.c        ****                     }
1024:main.c        ****                     else
1025:main.c        ****                     {
1026:main.c        ****                         stringMappedPositionsInRatios[i] = map((float)bar[i], fretMeasurements[i][N
 4541              		.loc 1 1026 0 is_stmt 1
 4542 13b0 6B4A     		ldr	r2, .L237
 4543 13b2 D7F8A030 		ldr	r3, [r7, #160]
 4544 13b6 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4545 13ba 9BB2     		uxth	r3, r3
 4546 13bc 1846     		mov	r0, r3
 4547 13be FFF7FEFF 		bl	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 100


 4548 13c2 0446     		mov	r4, r0
 4549 13c4 6749     		ldr	r1, .L237+4
 4550 13c6 D7F8A020 		ldr	r2, [r7, #160]
 4551 13ca 1346     		mov	r3, r2
 4552 13cc 5B00     		lsls	r3, r3, #1
 4553 13ce 1344     		add	r3, r3, r2
 4554 13d0 DB00     		lsls	r3, r3, #3
 4555 13d2 0B44     		add	r3, r3, r1
 4556 13d4 1433     		adds	r3, r3, #20
 4557 13d6 1B88     		ldrh	r3, [r3]
 4558 13d8 1846     		mov	r0, r3
 4559 13da FFF7FEFF 		bl	__aeabi_ui2f
 4560 13de 0546     		mov	r5, r0
 4561 13e0 6049     		ldr	r1, .L237+4
 4562 13e2 D7F8A020 		ldr	r2, [r7, #160]
 4563 13e6 1346     		mov	r3, r2
 4564 13e8 5B00     		lsls	r3, r3, #1
 4565 13ea 1344     		add	r3, r3, r2
 4566 13ec DB00     		lsls	r3, r3, #3
 4567 13ee 0B44     		add	r3, r3, r1
 4568 13f0 1633     		adds	r3, r3, #22
 4569 13f2 1B88     		ldrh	r3, [r3]
 4570 13f4 1846     		mov	r0, r3
 4571 13f6 FFF7FEFF 		bl	__aeabi_ui2f
 4572 13fa 0146     		mov	r1, r0
 4573 13fc 5A4B     		ldr	r3, .L237+8
 4574 13fe 9A6A     		ldr	r2, [r3, #40]	@ float
 4575 1400 594B     		ldr	r3, .L237+8
 4576 1402 DB6A     		ldr	r3, [r3, #44]	@ float
 4577 1404 0093     		str	r3, [sp]	@ float
 4578 1406 1346     		mov	r3, r2
 4579 1408 0A46     		mov	r2, r1
 4580 140a 2946     		mov	r1, r5
 4581 140c 2046     		mov	r0, r4
 4582 140e FFF7FEFF 		bl	map
 4583 1412 0146     		mov	r1, r0
 4584 1414 554A     		ldr	r2, .L237+12
 4585 1416 D7F8A030 		ldr	r3, [r7, #160]
 4586 141a 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 4587 141e 00E0     		b	.L124
 4588              	.L222:
 4589              	.LBB31:
1020:main.c        ****                             }
 4590              		.loc 1 1020 0
 4591 1420 00BF     		nop
 4592              	.L124:
 4593              	.LBE31:
1027:main.c        ****                     }
1028:main.c        ****                     stringMappedPositionsInRatiosInt[i] = stringMappedPositionsInRatios[i]*16384.0f
 4594              		.loc 1 1028 0
 4595 1422 524A     		ldr	r2, .L237+12
 4596 1424 D7F8A030 		ldr	r3, [r7, #160]
 4597 1428 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 4598 142c 4FF08D41 		mov	r1, #1182793728
 4599 1430 1846     		mov	r0, r3
 4600 1432 FFF7FEFF 		bl	__aeabi_fmul
 4601 1436 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 101


 4602 1438 1846     		mov	r0, r3
 4603 143a FFF7FEFF 		bl	__aeabi_f2uiz
 4604 143e 0346     		mov	r3, r0
 4605 1440 99B2     		uxth	r1, r3
 4606 1442 4C4A     		ldr	r2, .L237+20
 4607 1444 D7F8A030 		ldr	r3, [r7, #160]
 4608 1448 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1029:main.c        ****                     if (midiDebugSendOn)
 4609              		.loc 1 1029 0
 4610 144c 484B     		ldr	r3, .L237+16
 4611 144e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4612 1450 002B     		cmp	r3, #0
 4613 1452 39D0     		beq	.L120
1030:main.c        ****                     {
1031:main.c        ****                         sendMIDIControlChange(40+(i*3), stringMappedPositionsInRatiosInt[i] & 127, 
 4614              		.loc 1 1031 0
 4615 1454 D7F8A020 		ldr	r2, [r7, #160]
 4616 1458 1346     		mov	r3, r2
 4617 145a 5B00     		lsls	r3, r3, #1
 4618 145c 1344     		add	r3, r3, r2
 4619 145e 03F12800 		add	r0, r3, #40
 4620 1462 444A     		ldr	r2, .L237+20
 4621 1464 D7F8A030 		ldr	r3, [r7, #160]
 4622 1468 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4623 146c 03F07F03 		and	r3, r3, #127
 4624 1470 0122     		movs	r2, #1
 4625 1472 1946     		mov	r1, r3
 4626 1474 FFF7FEFF 		bl	sendMIDIControlChange
1032:main.c        ****                         sendMIDIControlChange(39+(i*3), (stringMappedPositionsInRatiosInt[i] >> 7) 
 4627              		.loc 1 1032 0
 4628 1478 D7F8A020 		ldr	r2, [r7, #160]
 4629 147c 1346     		mov	r3, r2
 4630 147e 5B00     		lsls	r3, r3, #1
 4631 1480 1344     		add	r3, r3, r2
 4632 1482 03F12700 		add	r0, r3, #39
 4633 1486 3B4A     		ldr	r2, .L237+20
 4634 1488 D7F8A030 		ldr	r3, [r7, #160]
 4635 148c 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4636 1490 DB09     		lsrs	r3, r3, #7
 4637 1492 9BB2     		uxth	r3, r3
 4638 1494 03F07F03 		and	r3, r3, #127
 4639 1498 0122     		movs	r2, #1
 4640 149a 1946     		mov	r1, r3
 4641 149c FFF7FEFF 		bl	sendMIDIControlChange
1033:main.c        ****                         sendMIDIControlChange(38+(i*3), (stringMappedPositionsInRatiosInt[i] >> 14)
 4642              		.loc 1 1033 0
 4643 14a0 D7F8A020 		ldr	r2, [r7, #160]
 4644 14a4 1346     		mov	r3, r2
 4645 14a6 5B00     		lsls	r3, r3, #1
 4646 14a8 1344     		add	r3, r3, r2
 4647 14aa 03F12600 		add	r0, r3, #38
 4648 14ae 314A     		ldr	r2, .L237+20
 4649 14b0 D7F8A030 		ldr	r3, [r7, #160]
 4650 14b4 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 4651 14b8 9B0B     		lsrs	r3, r3, #14
 4652 14ba 9BB2     		uxth	r3, r3
 4653 14bc 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 102


 4654 14c0 0122     		movs	r2, #1
 4655 14c2 1946     		mov	r1, r3
 4656 14c4 FFF7FEFF 		bl	sendMIDIControlChange
 4657              	.L120:
1034:main.c        ****                     }
1035:main.c        ****                 }
1036:main.c        ****                 //
1037:main.c        ****                 prevBar[i] = bar[i];
 4658              		.loc 1 1037 0 discriminator 2
 4659 14c8 254A     		ldr	r2, .L237
 4660 14ca D7F8A030 		ldr	r3, [r7, #160]
 4661 14ce 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4662 14d2 99B2     		uxth	r1, r3
 4663 14d4 284A     		ldr	r2, .L237+24
 4664 14d6 D7F8A030 		ldr	r3, [r7, #160]
 4665 14da 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 993:main.c        ****             {
 4666              		.loc 1 993 0 discriminator 2
 4667 14de D7F8A030 		ldr	r3, [r7, #160]
 4668 14e2 0133     		adds	r3, r3, #1
 4669 14e4 C7F8A030 		str	r3, [r7, #160]
 4670              	.L119:
 993:main.c        ****             {
 4671              		.loc 1 993 0 is_stmt 0 discriminator 1
 4672 14e8 D7F8A030 		ldr	r3, [r7, #160]
 4673 14ec 012B     		cmp	r3, #1
 4674 14ee 7FF709AE 		ble	.L131
 4675              	.L118:
 4676              	.LBE29:
1038:main.c        ****             }
1039:main.c        ****         }
1040:main.c        ****         
1041:main.c        ****         //testpin5_Write(0);
1042:main.c        ****         if (midiSendOn)
 4677              		.loc 1 1042 0 is_stmt 1
 4678 14f2 224B     		ldr	r3, .L237+28
 4679 14f4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4680 14f6 002B     		cmp	r3, #0
 4681 14f8 2CD0     		beq	.L132
 4682              	.LBB32:
1043:main.c        ****         {
1044:main.c        ****             for (int i = 0 ; i < numStrings; i++)
 4683              		.loc 1 1044 0
 4684 14fa 0023     		movs	r3, #0
 4685 14fc C7F89830 		str	r3, [r7, #152]
 4686 1500 21E0     		b	.L133
 4687              	.L135:
1045:main.c        ****             {
1046:main.c        ****                 if (strings[i] != prevStrings[i])
 4688              		.loc 1 1046 0
 4689 1502 1F4A     		ldr	r2, .L237+32
 4690 1504 D7F89830 		ldr	r3, [r7, #152]
 4691 1508 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4692 150c 9AB2     		uxth	r2, r3
 4693 150e 1D49     		ldr	r1, .L237+36
 4694 1510 D7F89830 		ldr	r3, [r7, #152]
 4695 1514 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 103


 4696 1518 9BB2     		uxth	r3, r3
 4697 151a 9A42     		cmp	r2, r3
 4698 151c 03D0     		beq	.L134
1047:main.c        ****                 {
1048:main.c        ****                     noteEvent(i);
 4699              		.loc 1 1048 0
 4700 151e D7F89800 		ldr	r0, [r7, #152]
 4701 1522 FFF7FEFF 		bl	noteEvent
 4702              	.L134:
1049:main.c        ****                 }
1050:main.c        ****                 prevStrings[i] = strings[i];
 4703              		.loc 1 1050 0 discriminator 2
 4704 1526 164A     		ldr	r2, .L237+32
 4705 1528 D7F89830 		ldr	r3, [r7, #152]
 4706 152c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4707 1530 99B2     		uxth	r1, r3
 4708 1532 144A     		ldr	r2, .L237+36
 4709 1534 D7F89830 		ldr	r3, [r7, #152]
 4710 1538 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1044:main.c        ****             {
 4711              		.loc 1 1044 0 discriminator 2
 4712 153c D7F89830 		ldr	r3, [r7, #152]
 4713 1540 0133     		adds	r3, r3, #1
 4714 1542 C7F89830 		str	r3, [r7, #152]
 4715              	.L133:
1044:main.c        ****             {
 4716              		.loc 1 1044 0 is_stmt 0 discriminator 1
 4717 1546 104B     		ldr	r3, .L237+40
 4718 1548 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4719 154a 1A46     		mov	r2, r3
 4720 154c D7F89830 		ldr	r3, [r7, #152]
 4721 1550 9A42     		cmp	r2, r3
 4722 1552 D6DC     		bgt	.L135
 4723              	.L132:
 4724              	.LBE32:
1051:main.c        ****             }
1052:main.c        ****         }
1053:main.c        ****        
1054:main.c        ****         scanUI();
 4725              		.loc 1 1054 0 is_stmt 1
 4726 1554 FFF7FEFF 		bl	scanUI
 4727              	.LBB33:
1055:main.c        ****         
1056:main.c        ****         for (int i=  0; i < 4; i++)
 4728              		.loc 1 1056 0
 4729 1558 0023     		movs	r3, #0
 4730 155a C7F89430 		str	r3, [r7, #148]
 4731 155e 70E0     		b	.L136
 4732              	.L238:
 4733              		.align	2
 4734              	.L237:
 4735 1560 00000000 		.word	bar
 4736 1564 00000000 		.word	fretMeasurements
 4737 1568 00000000 		.word	fretScalingInRatios
 4738 156c 00000000 		.word	stringMappedPositionsInRatios
 4739 1570 00000000 		.word	midiDebugSendOn
 4740 1574 00000000 		.word	stringMappedPositionsInRatiosInt
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 104


 4741 1578 00000000 		.word	prevBar
 4742 157c 00000000 		.word	midiSendOn
 4743 1580 00000000 		.word	strings
 4744 1584 00000000 		.word	prevStrings
 4745 1588 00000000 		.word	numStrings
 4746              	.L140:
1057:main.c        ****         {
1058:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)>>4); //divide by 16
 4747              		.loc 1 1058 0
 4748 158c D7F89430 		ldr	r3, [r7, #148]
 4749 1590 9BB2     		uxth	r3, r3
 4750 1592 1846     		mov	r0, r3
 4751 1594 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 4752 1598 0346     		mov	r3, r0
 4753 159a 1B11     		asrs	r3, r3, #4
 4754 159c 1BB2     		sxth	r3, r3
 4755 159e D9B2     		uxtb	r1, r3
 4756 15a0 444A     		ldr	r2, .L239
 4757 15a2 D7F89430 		ldr	r3, [r7, #148]
 4758 15a6 1344     		add	r3, r3, r2
 4759 15a8 0A46     		mov	r2, r1
 4760 15aa 1A70     		strb	r2, [r3]
1059:main.c        ****             if (i != 2) // all are backwards except X axis
 4761              		.loc 1 1059 0
 4762 15ac D7F89430 		ldr	r3, [r7, #148]
 4763 15b0 022B     		cmp	r3, #2
 4764 15b2 0CD0     		beq	.L137
1060:main.c        ****             {
1061:main.c        ****                 knobs[i] = 255 - knobs[i];
 4765              		.loc 1 1061 0
 4766 15b4 3F4A     		ldr	r2, .L239
 4767 15b6 D7F89430 		ldr	r3, [r7, #148]
 4768 15ba 1344     		add	r3, r3, r2
 4769 15bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4770 15be DB43     		mvns	r3, r3
 4771 15c0 D9B2     		uxtb	r1, r3
 4772 15c2 3C4A     		ldr	r2, .L239
 4773 15c4 D7F89430 		ldr	r3, [r7, #148]
 4774 15c8 1344     		add	r3, r3, r2
 4775 15ca 0A46     		mov	r2, r1
 4776 15cc 1A70     		strb	r2, [r3]
 4777              	.L137:
1062:main.c        ****             }
1063:main.c        ****             if (midiSendOn)
 4778              		.loc 1 1063 0
 4779 15ce 3A4B     		ldr	r3, .L239+4
 4780 15d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4781 15d2 002B     		cmp	r3, #0
 4782 15d4 30D0     		beq	.L138
1064:main.c        ****             {
1065:main.c        ****                 knobs7bit[i] = knobs[i] >> 1;
 4783              		.loc 1 1065 0
 4784 15d6 374A     		ldr	r2, .L239
 4785 15d8 D7F89430 		ldr	r3, [r7, #148]
 4786 15dc 1344     		add	r3, r3, r2
 4787 15de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4788 15e0 5B08     		lsrs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 105


 4789 15e2 D9B2     		uxtb	r1, r3
 4790 15e4 354A     		ldr	r2, .L239+8
 4791 15e6 D7F89430 		ldr	r3, [r7, #148]
 4792 15ea 1344     		add	r3, r3, r2
 4793 15ec 0A46     		mov	r2, r1
 4794 15ee 1A70     		strb	r2, [r3]
1066:main.c        ****                 
1067:main.c        ****                 if (knobs7bit[i] != prevKnobs7bit[i])
 4795              		.loc 1 1067 0
 4796 15f0 324A     		ldr	r2, .L239+8
 4797 15f2 D7F89430 		ldr	r3, [r7, #148]
 4798 15f6 1344     		add	r3, r3, r2
 4799 15f8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 4800 15fa 3149     		ldr	r1, .L239+12
 4801 15fc D7F89430 		ldr	r3, [r7, #148]
 4802 1600 0B44     		add	r3, r3, r1
 4803 1602 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4804 1604 9A42     		cmp	r2, r3
 4805 1606 0CD0     		beq	.L139
1068:main.c        ****                 {
1069:main.c        ****                     sendMIDIControlChange(i+9, knobs7bit[i], 0);
 4806              		.loc 1 1069 0
 4807 1608 D7F89430 		ldr	r3, [r7, #148]
 4808 160c 03F10900 		add	r0, r3, #9
 4809 1610 2A4A     		ldr	r2, .L239+8
 4810 1612 D7F89430 		ldr	r3, [r7, #148]
 4811 1616 1344     		add	r3, r3, r2
 4812 1618 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4813 161a 0022     		movs	r2, #0
 4814 161c 1946     		mov	r1, r3
 4815 161e FFF7FEFF 		bl	sendMIDIControlChange
 4816              	.L139:
1070:main.c        ****                 }
1071:main.c        ****                 prevKnobs7bit[i] = knobs7bit[i];
 4817              		.loc 1 1071 0
 4818 1622 264A     		ldr	r2, .L239+8
 4819 1624 D7F89430 		ldr	r3, [r7, #148]
 4820 1628 1344     		add	r3, r3, r2
 4821 162a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 4822 162c 244A     		ldr	r2, .L239+12
 4823 162e D7F89430 		ldr	r3, [r7, #148]
 4824 1632 1344     		add	r3, r3, r2
 4825 1634 0A46     		mov	r2, r1
 4826 1636 1A70     		strb	r2, [r3]
 4827              	.L138:
1056:main.c        ****         {
 4828              		.loc 1 1056 0 discriminator 2
 4829 1638 D7F89430 		ldr	r3, [r7, #148]
 4830 163c 0133     		adds	r3, r3, #1
 4831 163e C7F89430 		str	r3, [r7, #148]
 4832              	.L136:
1056:main.c        ****         {
 4833              		.loc 1 1056 0 is_stmt 0 discriminator 1
 4834 1642 D7F89430 		ldr	r3, [r7, #148]
 4835 1646 032B     		cmp	r3, #3
 4836 1648 A0DD     		ble	.L140
 4837              	.LBE33:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 106


 4838              	.LBB34:
1072:main.c        ****             }
1073:main.c        ****             
1074:main.c        ****         }
1075:main.c        ****         
1076:main.c        ****         //testpin4_Write(1);
1077:main.c        ****         //calculate the pitch of each string based on the current Copedent
1078:main.c        ****         for (int i = 0; i < numStrings; i++)
 4839              		.loc 1 1078 0 is_stmt 1
 4840 164a 0023     		movs	r3, #0
 4841 164c C7F89030 		str	r3, [r7, #144]
 4842 1650 70E3     		b	.L141
 4843              	.L165:
 4844              	.LBB35:
1079:main.c        ****     	{
1080:main.c        ****     		//interpolate ratios for each of the strings
1081:main.c        ****            
1082:main.c        ****             float myMappedPos;
1083:main.c        ****             if (dualSlider)
 4845              		.loc 1 1083 0
 4846 1652 1C4B     		ldr	r3, .L239+16
 4847 1654 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4848 1656 002B     		cmp	r3, #0
 4849 1658 3AD0     		beq	.L142
1084:main.c        ****             {
1085:main.c        ****                if ((bar[0] != 65535) && (bar[1] != 65535))
 4850              		.loc 1 1085 0
 4851 165a 1B4B     		ldr	r3, .L239+20
 4852 165c 1B88     		ldrh	r3, [r3]	@ movhi
 4853 165e 9BB2     		uxth	r3, r3
 4854 1660 4FF6FF72 		movw	r2, #65535
 4855 1664 9342     		cmp	r3, r2
 4856 1666 14D0     		beq	.L143
 4857              		.loc 1 1085 0 is_stmt 0 discriminator 1
 4858 1668 174B     		ldr	r3, .L239+20
 4859 166a 5B88     		ldrh	r3, [r3, #2]	@ movhi
 4860 166c 9BB2     		uxth	r3, r3
 4861 166e 4FF6FF72 		movw	r2, #65535
 4862 1672 9342     		cmp	r3, r2
 4863 1674 0DD0     		beq	.L143
1086:main.c        ****                 {
1087:main.c        ****                     myMappedPos = mapDualSlider(i, stringMappedPositionsInRatios[0], stringMappedPo
 4864              		.loc 1 1087 0 is_stmt 1
 4865 1676 D7F89000 		ldr	r0, [r7, #144]
 4866 167a FFF7FEFF 		bl	__aeabi_i2f
 4867 167e 134B     		ldr	r3, .L239+24
 4868 1680 1968     		ldr	r1, [r3]	@ float
 4869 1682 124B     		ldr	r3, .L239+24
 4870 1684 5B68     		ldr	r3, [r3, #4]	@ float
 4871 1686 1A46     		mov	r2, r3
 4872 1688 FFF7FEFF 		bl	mapDualSlider
 4873 168c C7F88C00 		str	r0, [r7, #140]	@ float
 4874 1690 22E0     		b	.L146
 4875              	.L143:
1088:main.c        ****                 }
1089:main.c        ****                 else if (bar[0] != 65535)
 4876              		.loc 1 1089 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 107


 4877 1692 0D4B     		ldr	r3, .L239+20
 4878 1694 1B88     		ldrh	r3, [r3]	@ movhi
 4879 1696 9BB2     		uxth	r3, r3
 4880 1698 4FF6FF72 		movw	r2, #65535
 4881 169c 9342     		cmp	r3, r2
 4882 169e 04D0     		beq	.L145
1090:main.c        ****                 {
1091:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[0];
 4883              		.loc 1 1091 0
 4884 16a0 0A4B     		ldr	r3, .L239+24
 4885 16a2 1B68     		ldr	r3, [r3]	@ float
 4886 16a4 C7F88C30 		str	r3, [r7, #140]	@ float
 4887 16a8 16E0     		b	.L146
 4888              	.L145:
1092:main.c        ****                 }
1093:main.c        ****                 else
1094:main.c        ****                 {
1095:main.c        ****                     myMappedPos = stringMappedPositionsInRatios[1];
 4889              		.loc 1 1095 0
 4890 16aa 084B     		ldr	r3, .L239+24
 4891 16ac 5B68     		ldr	r3, [r3, #4]	@ float
 4892 16ae C7F88C30 		str	r3, [r7, #140]	@ float
 4893 16b2 11E0     		b	.L146
 4894              	.L240:
 4895              		.align	2
 4896              	.L239:
 4897 16b4 00000000 		.word	knobs
 4898 16b8 00000000 		.word	midiSendOn
 4899 16bc 00000000 		.word	knobs7bit
 4900 16c0 00000000 		.word	prevKnobs7bit
 4901 16c4 00000000 		.word	dualSlider
 4902 16c8 00000000 		.word	bar
 4903 16cc 00000000 		.word	stringMappedPositionsInRatios
 4904              	.L142:
1096:main.c        ****                 }
1097:main.c        ****             }
1098:main.c        ****             else
1099:main.c        ****             {
1100:main.c        ****                 myMappedPos = stringMappedPositionsInRatios[0];
 4905              		.loc 1 1100 0
 4906 16d0 A34B     		ldr	r3, .L241
 4907 16d2 1B68     		ldr	r3, [r3]	@ float
 4908 16d4 C7F88C30 		str	r3, [r7, #140]	@ float
 4909              	.L146:
1101:main.c        ****             }
1102:main.c        **** 
1103:main.c        ****             float pedalsMIDI = 0.0f;
 4910              		.loc 1 1103 0
 4911 16d8 4FF00003 		mov	r3, #0
 4912 16dc C7F88830 		str	r3, [r7, #136]	@ float
1104:main.c        ****     		//then apply those ratios to the fundamental frequencies
1105:main.c        ****             if (!traditionalPedalAdd)
 4913              		.loc 1 1105 0
 4914 16e0 A04B     		ldr	r3, .L241+4
 4915 16e2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4916 16e4 002B     		cmp	r3, #0
 4917 16e6 40F07881 		bne	.L147
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 108


1106:main.c        ****             {
1107:main.c        ****     		    pedalsMIDI = (copedent[currentCopedent][0][i] +
 4918              		.loc 1 1107 0
 4919 16ea 9F4B     		ldr	r3, .L241+8
 4920 16ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4921 16ee 1A46     		mov	r2, r3
 4922 16f0 9E49     		ldr	r1, .L241+12
 4923 16f2 1346     		mov	r3, r2
 4924 16f4 5B01     		lsls	r3, r3, #5
 4925 16f6 1344     		add	r3, r3, r2
 4926 16f8 9B00     		lsls	r3, r3, #2
 4927 16fa D7F89020 		ldr	r2, [r7, #144]
 4928 16fe 1344     		add	r3, r3, r2
 4929 1700 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1108:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4930              		.loc 1 1108 0
 4931 1704 984B     		ldr	r3, .L241+8
 4932 1706 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4933 1708 1A46     		mov	r2, r3
 4934 170a 9849     		ldr	r1, .L241+12
 4935 170c 1346     		mov	r3, r2
 4936 170e 5B01     		lsls	r3, r3, #5
 4937 1710 1344     		add	r3, r3, r2
 4938 1712 9B00     		lsls	r3, r3, #2
 4939 1714 D7F89020 		ldr	r2, [r7, #144]
 4940 1718 1344     		add	r3, r3, r2
 4941 171a 3033     		adds	r3, r3, #48
 4942 171c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4943 1720 934B     		ldr	r3, .L241+16
 4944 1722 1B68     		ldr	r3, [r3]	@ float
 4945 1724 1946     		mov	r1, r3
 4946 1726 1046     		mov	r0, r2
 4947 1728 FFF7FEFF 		bl	__aeabi_fmul
 4948 172c 0346     		mov	r3, r0
1107:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4949              		.loc 1 1107 0
 4950 172e 1946     		mov	r1, r3
 4951 1730 2046     		mov	r0, r4
 4952 1732 FFF7FEFF 		bl	__aeabi_fadd
 4953 1736 0346     		mov	r3, r0
 4954 1738 1C46     		mov	r4, r3
1109:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4955              		.loc 1 1109 0
 4956 173a 8B4B     		ldr	r3, .L241+8
 4957 173c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4958 173e 1A46     		mov	r2, r3
 4959 1740 8A49     		ldr	r1, .L241+12
 4960 1742 1346     		mov	r3, r2
 4961 1744 5B01     		lsls	r3, r3, #5
 4962 1746 1344     		add	r3, r3, r2
 4963 1748 9B00     		lsls	r3, r3, #2
 4964 174a D7F89020 		ldr	r2, [r7, #144]
 4965 174e 1344     		add	r3, r3, r2
 4966 1750 3C33     		adds	r3, r3, #60
 4967 1752 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4968 1756 864B     		ldr	r3, .L241+16
 4969 1758 5B68     		ldr	r3, [r3, #4]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 109


 4970 175a 1946     		mov	r1, r3
 4971 175c 1046     		mov	r0, r2
 4972 175e FFF7FEFF 		bl	__aeabi_fmul
 4973 1762 0346     		mov	r3, r0
1108:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 4974              		.loc 1 1108 0
 4975 1764 1946     		mov	r1, r3
 4976 1766 2046     		mov	r0, r4
 4977 1768 FFF7FEFF 		bl	__aeabi_fadd
 4978 176c 0346     		mov	r3, r0
 4979 176e 1C46     		mov	r4, r3
1110:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 4980              		.loc 1 1110 0
 4981 1770 7D4B     		ldr	r3, .L241+8
 4982 1772 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4983 1774 1A46     		mov	r2, r3
 4984 1776 7D49     		ldr	r1, .L241+12
 4985 1778 1346     		mov	r3, r2
 4986 177a 5B01     		lsls	r3, r3, #5
 4987 177c 1344     		add	r3, r3, r2
 4988 177e 9B00     		lsls	r3, r3, #2
 4989 1780 D7F89020 		ldr	r2, [r7, #144]
 4990 1784 1344     		add	r3, r3, r2
 4991 1786 4833     		adds	r3, r3, #72
 4992 1788 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 4993 178c 784B     		ldr	r3, .L241+16
 4994 178e 9B68     		ldr	r3, [r3, #8]	@ float
 4995 1790 1946     		mov	r1, r3
 4996 1792 1046     		mov	r0, r2
 4997 1794 FFF7FEFF 		bl	__aeabi_fmul
 4998 1798 0346     		mov	r3, r0
1109:main.c        ****                         (copedent[currentCopedent][5][i] * pedals_float[1]) +
 4999              		.loc 1 1109 0
 5000 179a 1946     		mov	r1, r3
 5001 179c 2046     		mov	r0, r4
 5002 179e FFF7FEFF 		bl	__aeabi_fadd
 5003 17a2 0346     		mov	r3, r0
 5004 17a4 1C46     		mov	r4, r3
1111:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 5005              		.loc 1 1111 0
 5006 17a6 704B     		ldr	r3, .L241+8
 5007 17a8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5008 17aa 1A46     		mov	r2, r3
 5009 17ac 6F49     		ldr	r1, .L241+12
 5010 17ae 1346     		mov	r3, r2
 5011 17b0 5B01     		lsls	r3, r3, #5
 5012 17b2 1344     		add	r3, r3, r2
 5013 17b4 9B00     		lsls	r3, r3, #2
 5014 17b6 D7F89020 		ldr	r2, [r7, #144]
 5015 17ba 1344     		add	r3, r3, r2
 5016 17bc 5433     		adds	r3, r3, #84
 5017 17be 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5018 17c2 6B4B     		ldr	r3, .L241+16
 5019 17c4 DB68     		ldr	r3, [r3, #12]	@ float
 5020 17c6 1946     		mov	r1, r3
 5021 17c8 1046     		mov	r0, r2
 5022 17ca FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 110


 5023 17ce 0346     		mov	r3, r0
1110:main.c        ****                         (copedent[currentCopedent][6][i] * pedals_float[2]) +
 5024              		.loc 1 1110 0
 5025 17d0 1946     		mov	r1, r3
 5026 17d2 2046     		mov	r0, r4
 5027 17d4 FFF7FEFF 		bl	__aeabi_fadd
 5028 17d8 0346     		mov	r3, r0
 5029 17da 1C46     		mov	r4, r3
1112:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 5030              		.loc 1 1112 0
 5031 17dc 624B     		ldr	r3, .L241+8
 5032 17de 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5033 17e0 1A46     		mov	r2, r3
 5034 17e2 6249     		ldr	r1, .L241+12
 5035 17e4 1346     		mov	r3, r2
 5036 17e6 5B01     		lsls	r3, r3, #5
 5037 17e8 1344     		add	r3, r3, r2
 5038 17ea 9B00     		lsls	r3, r3, #2
 5039 17ec D7F89020 		ldr	r2, [r7, #144]
 5040 17f0 1344     		add	r3, r3, r2
 5041 17f2 6033     		adds	r3, r3, #96
 5042 17f4 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5043 17f8 5D4B     		ldr	r3, .L241+16
 5044 17fa 1B69     		ldr	r3, [r3, #16]	@ float
 5045 17fc 1946     		mov	r1, r3
 5046 17fe 1046     		mov	r0, r2
 5047 1800 FFF7FEFF 		bl	__aeabi_fmul
 5048 1804 0346     		mov	r3, r0
1111:main.c        ****                         (copedent[currentCopedent][7][i] * pedals_float[3]) +
 5049              		.loc 1 1111 0
 5050 1806 1946     		mov	r1, r3
 5051 1808 2046     		mov	r0, r4
 5052 180a FFF7FEFF 		bl	__aeabi_fadd
 5053 180e 0346     		mov	r3, r0
 5054 1810 1C46     		mov	r4, r3
1113:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 5055              		.loc 1 1113 0
 5056 1812 554B     		ldr	r3, .L241+8
 5057 1814 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5058 1816 1A46     		mov	r2, r3
 5059 1818 5449     		ldr	r1, .L241+12
 5060 181a 1346     		mov	r3, r2
 5061 181c 5B01     		lsls	r3, r3, #5
 5062 181e 1344     		add	r3, r3, r2
 5063 1820 9B00     		lsls	r3, r3, #2
 5064 1822 D7F89020 		ldr	r2, [r7, #144]
 5065 1826 1344     		add	r3, r3, r2
 5066 1828 7833     		adds	r3, r3, #120
 5067 182a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5068 182e 504B     		ldr	r3, .L241+16
 5069 1830 5B69     		ldr	r3, [r3, #20]	@ float
 5070 1832 1946     		mov	r1, r3
 5071 1834 1046     		mov	r0, r2
 5072 1836 FFF7FEFF 		bl	__aeabi_fmul
 5073 183a 0346     		mov	r3, r0
1112:main.c        ****                         (copedent[currentCopedent][8][i] * pedals_float[4]) +
 5074              		.loc 1 1112 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 111


 5075 183c 1946     		mov	r1, r3
 5076 183e 2046     		mov	r0, r4
 5077 1840 FFF7FEFF 		bl	__aeabi_fadd
 5078 1844 0346     		mov	r3, r0
 5079 1846 1C46     		mov	r4, r3
1114:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 5080              		.loc 1 1114 0
 5081 1848 474B     		ldr	r3, .L241+8
 5082 184a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5083 184c 1A46     		mov	r2, r3
 5084 184e 4749     		ldr	r1, .L241+12
 5085 1850 1346     		mov	r3, r2
 5086 1852 5B01     		lsls	r3, r3, #5
 5087 1854 1344     		add	r3, r3, r2
 5088 1856 9B00     		lsls	r3, r3, #2
 5089 1858 D7F89020 		ldr	r2, [r7, #144]
 5090 185c 1344     		add	r3, r3, r2
 5091 185e 6C33     		adds	r3, r3, #108
 5092 1860 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5093 1864 424B     		ldr	r3, .L241+16
 5094 1866 9B69     		ldr	r3, [r3, #24]	@ float
 5095 1868 1946     		mov	r1, r3
 5096 186a 1046     		mov	r0, r2
 5097 186c FFF7FEFF 		bl	__aeabi_fmul
 5098 1870 0346     		mov	r3, r0
1113:main.c        ****                         (copedent[currentCopedent][10][i] * pedals_float[5]) +
 5099              		.loc 1 1113 0
 5100 1872 1946     		mov	r1, r3
 5101 1874 2046     		mov	r0, r4
 5102 1876 FFF7FEFF 		bl	__aeabi_fadd
 5103 187a 0346     		mov	r3, r0
 5104 187c 1C46     		mov	r4, r3
1115:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 5105              		.loc 1 1115 0
 5106 187e 3A4B     		ldr	r3, .L241+8
 5107 1880 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5108 1882 1A46     		mov	r2, r3
 5109 1884 3949     		ldr	r1, .L241+12
 5110 1886 1346     		mov	r3, r2
 5111 1888 5B01     		lsls	r3, r3, #5
 5112 188a 1344     		add	r3, r3, r2
 5113 188c 9B00     		lsls	r3, r3, #2
 5114 188e D7F89020 		ldr	r2, [r7, #144]
 5115 1892 1344     		add	r3, r3, r2
 5116 1894 2433     		adds	r3, r3, #36
 5117 1896 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5118 189a 354B     		ldr	r3, .L241+16
 5119 189c DB69     		ldr	r3, [r3, #28]	@ float
 5120 189e 1946     		mov	r1, r3
 5121 18a0 1046     		mov	r0, r2
 5122 18a2 FFF7FEFF 		bl	__aeabi_fmul
 5123 18a6 0346     		mov	r3, r0
1114:main.c        ****                         (copedent[currentCopedent][9][i] * pedals_float[6]) +
 5124              		.loc 1 1114 0
 5125 18a8 1946     		mov	r1, r3
 5126 18aa 2046     		mov	r0, r4
 5127 18ac FFF7FEFF 		bl	__aeabi_fadd
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 112


 5128 18b0 0346     		mov	r3, r0
 5129 18b2 1C46     		mov	r4, r3
1116:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 5130              		.loc 1 1116 0
 5131 18b4 2C4B     		ldr	r3, .L241+8
 5132 18b6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5133 18b8 1A46     		mov	r2, r3
 5134 18ba 2C49     		ldr	r1, .L241+12
 5135 18bc 1346     		mov	r3, r2
 5136 18be 5B01     		lsls	r3, r3, #5
 5137 18c0 1344     		add	r3, r3, r2
 5138 18c2 9B00     		lsls	r3, r3, #2
 5139 18c4 D7F89020 		ldr	r2, [r7, #144]
 5140 18c8 1344     		add	r3, r3, r2
 5141 18ca 0C33     		adds	r3, r3, #12
 5142 18cc 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5143 18d0 274B     		ldr	r3, .L241+16
 5144 18d2 1B6A     		ldr	r3, [r3, #32]	@ float
 5145 18d4 1946     		mov	r1, r3
 5146 18d6 1046     		mov	r0, r2
 5147 18d8 FFF7FEFF 		bl	__aeabi_fmul
 5148 18dc 0346     		mov	r3, r0
1115:main.c        ****                         (copedent[currentCopedent][3][i] * pedals_float[7]) +
 5149              		.loc 1 1115 0
 5150 18de 1946     		mov	r1, r3
 5151 18e0 2046     		mov	r0, r4
 5152 18e2 FFF7FEFF 		bl	__aeabi_fadd
 5153 18e6 0346     		mov	r3, r0
 5154 18e8 1C46     		mov	r4, r3
1117:main.c        ****                         (copedent[currentCopedent][2][i] * pedals_float[9])) + transposeFloat;
 5155              		.loc 1 1117 0
 5156 18ea 1F4B     		ldr	r3, .L241+8
 5157 18ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5158 18ee 1A46     		mov	r2, r3
 5159 18f0 1E49     		ldr	r1, .L241+12
 5160 18f2 1346     		mov	r3, r2
 5161 18f4 5B01     		lsls	r3, r3, #5
 5162 18f6 1344     		add	r3, r3, r2
 5163 18f8 9B00     		lsls	r3, r3, #2
 5164 18fa D7F89020 		ldr	r2, [r7, #144]
 5165 18fe 1344     		add	r3, r3, r2
 5166 1900 1833     		adds	r3, r3, #24
 5167 1902 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 5168 1906 1A4B     		ldr	r3, .L241+16
 5169 1908 5B6A     		ldr	r3, [r3, #36]	@ float
 5170 190a 1946     		mov	r1, r3
 5171 190c 1046     		mov	r0, r2
 5172 190e FFF7FEFF 		bl	__aeabi_fmul
 5173 1912 0346     		mov	r3, r0
1116:main.c        ****                         (copedent[currentCopedent][1][i] * pedals_float[8]) +
 5174              		.loc 1 1116 0
 5175 1914 1946     		mov	r1, r3
 5176 1916 2046     		mov	r0, r4
 5177 1918 FFF7FEFF 		bl	__aeabi_fadd
 5178 191c 0346     		mov	r3, r0
 5179 191e 1A46     		mov	r2, r3
 5180              		.loc 1 1117 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 113


 5181 1920 144B     		ldr	r3, .L241+20
 5182 1922 1B68     		ldr	r3, [r3]	@ float
1107:main.c        ****                         (copedent[currentCopedent][4][i] * pedals_float[0]) +
 5183              		.loc 1 1107 0
 5184 1924 1946     		mov	r1, r3
 5185 1926 1046     		mov	r0, r2
 5186 1928 FFF7FEFF 		bl	__aeabi_fadd
 5187 192c 0346     		mov	r3, r0
 5188 192e C7F88830 		str	r3, [r7, #136]	@ float
1118:main.c        ****                 if (i == 0)
 5189              		.loc 1 1118 0
 5190 1932 D7F89030 		ldr	r3, [r7, #144]
 5191 1936 002B     		cmp	r3, #0
 5192 1938 40F0BB80 		bne	.L149
 5193              	.LBB36:
1119:main.c        ****                 {
1120:main.c        ****                     uint16_t pedalsMIDIInt = pedalsMIDI * 512.0f;
 5194              		.loc 1 1120 0
 5195 193c 4FF08841 		mov	r1, #1140850688
 5196 1940 D7F88800 		ldr	r0, [r7, #136]	@ float
 5197 1944 FFF7FEFF 		bl	__aeabi_fmul
 5198 1948 0346     		mov	r3, r0
 5199 194a 1846     		mov	r0, r3
 5200 194c FFF7FEFF 		bl	__aeabi_f2uiz
 5201 1950 0346     		mov	r3, r0
 5202 1952 FB86     		strh	r3, [r7, #54]	@ movhi
1121:main.c        ****                     if (midiDebugSendOn)
 5203              		.loc 1 1121 0
 5204 1954 084B     		ldr	r3, .L241+24
 5205 1956 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5206 1958 002B     		cmp	r3, #0
 5207 195a 00F0AA80 		beq	.L149
 5208 195e 0DE0     		b	.L242
 5209              	.L243:
 5210              		.align	2
 5211              	.L241:
 5212 1960 00000000 		.word	stringMappedPositionsInRatios
 5213 1964 00000000 		.word	traditionalPedalAdd
 5214 1968 00000000 		.word	currentCopedent
 5215 196c 00000000 		.word	copedent
 5216 1970 00000000 		.word	pedals_float
 5217 1974 00000000 		.word	transposeFloat
 5218 1978 00000000 		.word	midiDebugSendOn
 5219              	.L242:
1122:main.c        ****                     {
1123:main.c        ****                         sendMIDIControlChange(47+(i*3), pedalsMIDIInt & 127, 1);
 5220              		.loc 1 1123 0
 5221 197c D7F89020 		ldr	r2, [r7, #144]
 5222 1980 1346     		mov	r3, r2
 5223 1982 5B00     		lsls	r3, r3, #1
 5224 1984 1344     		add	r3, r3, r2
 5225 1986 03F12F00 		add	r0, r3, #47
 5226 198a FB8E     		ldrh	r3, [r7, #54]
 5227 198c 03F07F03 		and	r3, r3, #127
 5228 1990 0122     		movs	r2, #1
 5229 1992 1946     		mov	r1, r3
 5230 1994 FFF7FEFF 		bl	sendMIDIControlChange
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 114


1124:main.c        ****                         sendMIDIControlChange(46+(i*3), (pedalsMIDIInt >> 7) & 127, 1);
 5231              		.loc 1 1124 0
 5232 1998 D7F89020 		ldr	r2, [r7, #144]
 5233 199c 1346     		mov	r3, r2
 5234 199e 5B00     		lsls	r3, r3, #1
 5235 19a0 1344     		add	r3, r3, r2
 5236 19a2 03F12E00 		add	r0, r3, #46
 5237 19a6 FB8E     		ldrh	r3, [r7, #54]
 5238 19a8 DB09     		lsrs	r3, r3, #7
 5239 19aa 9BB2     		uxth	r3, r3
 5240 19ac 03F07F03 		and	r3, r3, #127
 5241 19b0 0122     		movs	r2, #1
 5242 19b2 1946     		mov	r1, r3
 5243 19b4 FFF7FEFF 		bl	sendMIDIControlChange
1125:main.c        ****                         sendMIDIControlChange(45+(i*3), (pedalsMIDIInt >> 14) & 127, 1);
 5244              		.loc 1 1125 0
 5245 19b8 D7F89020 		ldr	r2, [r7, #144]
 5246 19bc 1346     		mov	r3, r2
 5247 19be 5B00     		lsls	r3, r3, #1
 5248 19c0 1344     		add	r3, r3, r2
 5249 19c2 03F12D00 		add	r0, r3, #45
 5250 19c6 FB8E     		ldrh	r3, [r7, #54]
 5251 19c8 9B0B     		lsrs	r3, r3, #14
 5252 19ca 9BB2     		uxth	r3, r3
 5253 19cc 03F07F03 		and	r3, r3, #127
 5254 19d0 0122     		movs	r2, #1
 5255 19d2 1946     		mov	r1, r3
 5256 19d4 FFF7FEFF 		bl	sendMIDIControlChange
 5257 19d8 6BE0     		b	.L149
 5258              	.L147:
 5259              	.LBE36:
 5260              	.LBB37:
1126:main.c        ****                     }
1127:main.c        ****                 }
1128:main.c        ****             }
1129:main.c        ****             else
1130:main.c        ****             {
1131:main.c        ****                 float pedalsMIDIUp = 0.0f;
 5261              		.loc 1 1131 0
 5262 19da 4FF00003 		mov	r3, #0
 5263 19de C7F88430 		str	r3, [r7, #132]	@ float
1132:main.c        ****                 float pedalsMIDIDown = 0.0f;
 5264              		.loc 1 1132 0
 5265 19e2 4FF00003 		mov	r3, #0
 5266 19e6 C7F88030 		str	r3, [r7, #128]	@ float
 5267              	.LBB38:
1133:main.c        ****                 
1134:main.c        ****                 
1135:main.c        ****                 for (int j = 0; j < 10; j++)
 5268              		.loc 1 1135 0
 5269 19ea 0023     		movs	r3, #0
 5270 19ec FB67     		str	r3, [r7, #124]
 5271 19ee 39E0     		b	.L150
 5272              	.L155:
 5273              	.LBB39:
1136:main.c        ****                 {
1137:main.c        ****                     float tempMIDI = copedent[currentCopedent][copedentMapping[j]][i] * pedals_floa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 115


 5274              		.loc 1 1137 0
 5275 19f0 5F4B     		ldr	r3, .L244
 5276 19f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5277 19f4 1846     		mov	r0, r3
 5278 19f6 5F4A     		ldr	r2, .L244+4
 5279 19f8 FB6F     		ldr	r3, [r7, #124]
 5280 19fa 1344     		add	r3, r3, r2
 5281 19fc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5282 19fe 5E49     		ldr	r1, .L244+8
 5283 1a00 1A46     		mov	r2, r3
 5284 1a02 5200     		lsls	r2, r2, #1
 5285 1a04 1A44     		add	r2, r2, r3
 5286 1a06 9300     		lsls	r3, r2, #2
 5287 1a08 1A46     		mov	r2, r3
 5288 1a0a 0346     		mov	r3, r0
 5289 1a0c 5B01     		lsls	r3, r3, #5
 5290 1a0e 0344     		add	r3, r3, r0
 5291 1a10 9B00     		lsls	r3, r3, #2
 5292 1a12 1A44     		add	r2, r2, r3
 5293 1a14 D7F89030 		ldr	r3, [r7, #144]
 5294 1a18 1344     		add	r3, r3, r2
 5295 1a1a 51F82300 		ldr	r0, [r1, r3, lsl #2]	@ float
 5296 1a1e 574A     		ldr	r2, .L244+12
 5297 1a20 FB6F     		ldr	r3, [r7, #124]
 5298 1a22 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5299 1a26 1946     		mov	r1, r3
 5300 1a28 FFF7FEFF 		bl	__aeabi_fmul
 5301 1a2c 0346     		mov	r3, r0
 5302 1a2e 3B63     		str	r3, [r7, #48]	@ float
1138:main.c        ****                     if (tempMIDI > pedalsMIDIUp)
 5303              		.loc 1 1138 0
 5304 1a30 D7F88410 		ldr	r1, [r7, #132]	@ float
 5305 1a34 386B     		ldr	r0, [r7, #48]	@ float
 5306 1a36 FFF7FEFF 		bl	__aeabi_fcmpgt
 5307 1a3a 0346     		mov	r3, r0
 5308 1a3c 002B     		cmp	r3, #0
 5309 1a3e 03D0     		beq	.L221
1139:main.c        ****                     {
1140:main.c        ****                         pedalsMIDIUp = tempMIDI;
 5310              		.loc 1 1140 0
 5311 1a40 3B6B     		ldr	r3, [r7, #48]	@ float
 5312 1a42 C7F88430 		str	r3, [r7, #132]	@ float
 5313 1a46 0AE0     		b	.L153
 5314              	.L221:
1141:main.c        ****                     }
1142:main.c        ****                     else if (tempMIDI < pedalsMIDIDown)
 5315              		.loc 1 1142 0
 5316 1a48 D7F88010 		ldr	r1, [r7, #128]	@ float
 5317 1a4c 386B     		ldr	r0, [r7, #48]	@ float
 5318 1a4e FFF7FEFF 		bl	__aeabi_fcmplt
 5319 1a52 0346     		mov	r3, r0
 5320 1a54 002B     		cmp	r3, #0
 5321 1a56 02D0     		beq	.L153
1143:main.c        ****                     {
1144:main.c        ****                         pedalsMIDIDown = tempMIDI;
 5322              		.loc 1 1144 0
 5323 1a58 3B6B     		ldr	r3, [r7, #48]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 116


 5324 1a5a C7F88030 		str	r3, [r7, #128]	@ float
 5325              	.L153:
 5326              	.LBE39:
1135:main.c        ****                 {
 5327              		.loc 1 1135 0 discriminator 2
 5328 1a5e FB6F     		ldr	r3, [r7, #124]
 5329 1a60 0133     		adds	r3, r3, #1
 5330 1a62 FB67     		str	r3, [r7, #124]
 5331              	.L150:
1135:main.c        ****                 {
 5332              		.loc 1 1135 0 is_stmt 0 discriminator 1
 5333 1a64 FB6F     		ldr	r3, [r7, #124]
 5334 1a66 092B     		cmp	r3, #9
 5335 1a68 C2DD     		ble	.L155
 5336              	.LBE38:
1145:main.c        ****                     }
1146:main.c        ****                 }
1147:main.c        ****                 float openStringTemp = copedent[currentCopedent][0][i];
 5337              		.loc 1 1147 0 is_stmt 1
 5338 1a6a 414B     		ldr	r3, .L244
 5339 1a6c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5340 1a6e 1A46     		mov	r2, r3
 5341 1a70 4149     		ldr	r1, .L244+8
 5342 1a72 1346     		mov	r3, r2
 5343 1a74 5B01     		lsls	r3, r3, #5
 5344 1a76 1344     		add	r3, r3, r2
 5345 1a78 9B00     		lsls	r3, r3, #2
 5346 1a7a D7F89020 		ldr	r2, [r7, #144]
 5347 1a7e 1344     		add	r3, r3, r2
 5348 1a80 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 5349 1a84 FB62     		str	r3, [r7, #44]	@ float
1148:main.c        ****                 
1149:main.c        ****                 pedalsMIDI = pedalsMIDIUp + pedalsMIDIDown + openStringTemp + transposeFloat;
 5350              		.loc 1 1149 0
 5351 1a86 D7F88010 		ldr	r1, [r7, #128]	@ float
 5352 1a8a D7F88400 		ldr	r0, [r7, #132]	@ float
 5353 1a8e FFF7FEFF 		bl	__aeabi_fadd
 5354 1a92 0346     		mov	r3, r0
 5355 1a94 F96A     		ldr	r1, [r7, #44]	@ float
 5356 1a96 1846     		mov	r0, r3
 5357 1a98 FFF7FEFF 		bl	__aeabi_fadd
 5358 1a9c 0346     		mov	r3, r0
 5359 1a9e 1A46     		mov	r2, r3
 5360 1aa0 374B     		ldr	r3, .L244+16
 5361 1aa2 1B68     		ldr	r3, [r3]	@ float
 5362 1aa4 1946     		mov	r1, r3
 5363 1aa6 1046     		mov	r0, r2
 5364 1aa8 FFF7FEFF 		bl	__aeabi_fadd
 5365 1aac 0346     		mov	r3, r0
 5366 1aae C7F88830 		str	r3, [r7, #136]	@ float
 5367              	.L149:
 5368              	.LBE37:
1150:main.c        ****                 
1151:main.c        ****             }
1152:main.c        ****             
1153:main.c        ****             float openStringMIDI  = copedent[currentCopedent][0][i];
 5369              		.loc 1 1153 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 117


 5370 1ab2 2F4B     		ldr	r3, .L244
 5371 1ab4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5372 1ab6 1A46     		mov	r2, r3
 5373 1ab8 2F49     		ldr	r1, .L244+8
 5374 1aba 1346     		mov	r3, r2
 5375 1abc 5B01     		lsls	r3, r3, #5
 5376 1abe 1344     		add	r3, r3, r2
 5377 1ac0 9B00     		lsls	r3, r3, #2
 5378 1ac2 D7F89020 		ldr	r2, [r7, #144]
 5379 1ac6 1344     		add	r3, r3, r2
 5380 1ac8 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 5381 1acc BB62     		str	r3, [r7, #40]	@ float
1154:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 5382              		.loc 1 1154 0
 5383 1ace B86A     		ldr	r0, [r7, #40]	@ float
 5384 1ad0 FFF7FEFF 		bl	__aeabi_f2iz
 5385 1ad4 0146     		mov	r1, r0
 5386 1ad6 2B4A     		ldr	r2, .L244+20
 5387 1ad8 D7F89030 		ldr	r3, [r7, #144]
 5388 1adc 42F82310 		str	r1, [r2, r3, lsl #2]
1155:main.c        ****             float barMIDI = (unsafeFtom(myMappedPos*55.0f)) - 33.0f; //give midi note added by the 
 5389              		.loc 1 1155 0
 5390 1ae0 2949     		ldr	r1, .L244+24
 5391 1ae2 D7F88C00 		ldr	r0, [r7, #140]	@ float
 5392 1ae6 FFF7FEFF 		bl	__aeabi_fmul
 5393 1aea 0346     		mov	r3, r0
 5394 1aec 1846     		mov	r0, r3
 5395 1aee FFF7FEFF 		bl	unsafeFtom
 5396 1af2 0346     		mov	r3, r0
 5397 1af4 2549     		ldr	r1, .L244+28
 5398 1af6 1846     		mov	r0, r3
 5399 1af8 FFF7FEFF 		bl	__aeabi_fsub
 5400 1afc 0346     		mov	r3, r0
 5401 1afe 7B62     		str	r3, [r7, #36]	@ float
1156:main.c        ****             if (i == 0)
 5402              		.loc 1 1156 0
 5403 1b00 D7F89030 		ldr	r3, [r7, #144]
 5404 1b04 002B     		cmp	r3, #0
 5405 1b06 0DD1     		bne	.L156
1157:main.c        ****             {
1158:main.c        ****                 barMidiOuterStrings[0] = (uint16_t)(barMIDI * 512.0f);
 5406              		.loc 1 1158 0
 5407 1b08 4FF08841 		mov	r1, #1140850688
 5408 1b0c 786A     		ldr	r0, [r7, #36]	@ float
 5409 1b0e FFF7FEFF 		bl	__aeabi_fmul
 5410 1b12 0346     		mov	r3, r0
 5411 1b14 1846     		mov	r0, r3
 5412 1b16 FFF7FEFF 		bl	__aeabi_f2uiz
 5413 1b1a 0346     		mov	r3, r0
 5414 1b1c 9AB2     		uxth	r2, r3
 5415 1b1e 1C4B     		ldr	r3, .L244+32
 5416 1b20 1A80     		strh	r2, [r3]	@ movhi
 5417 1b22 4DE0     		b	.L157
 5418              	.L156:
1159:main.c        ****             }
1160:main.c        **** 
1161:main.c        ****             else if (i == 5) //the average bar position for single midi bar position report via cha
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 118


 5419              		.loc 1 1161 0
 5420 1b24 D7F89030 		ldr	r3, [r7, #144]
 5421 1b28 052B     		cmp	r3, #5
 5422 1b2a 35D1     		bne	.L158
1162:main.c        ****             {
1163:main.c        ****                 if (midiBarSendOn)
 5423              		.loc 1 1163 0
 5424 1b2c 194B     		ldr	r3, .L244+36
 5425 1b2e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5426 1b30 002B     		cmp	r3, #0
 5427 1b32 45D0     		beq	.L157
 5428              	.LBB40:
1164:main.c        ****                 {
1165:main.c        ****                     float barBend = (uint16_t)(barMIDI * 128.0f);
 5429              		.loc 1 1165 0
 5430 1b34 4FF08641 		mov	r1, #1124073472
 5431 1b38 786A     		ldr	r0, [r7, #36]	@ float
 5432 1b3a FFF7FEFF 		bl	__aeabi_fmul
 5433 1b3e 0346     		mov	r3, r0
 5434 1b40 1846     		mov	r0, r3
 5435 1b42 FFF7FEFF 		bl	__aeabi_f2uiz
 5436 1b46 0346     		mov	r3, r0
 5437 1b48 9BB2     		uxth	r3, r3
 5438 1b4a 1846     		mov	r0, r3
 5439 1b4c FFF7FEFF 		bl	__aeabi_ui2f
 5440 1b50 0346     		mov	r3, r0
 5441 1b52 3B62     		str	r3, [r7, #32]	@ float
1166:main.c        ****                     if (midiBarSendOn)
 5442              		.loc 1 1166 0
 5443 1b54 0F4B     		ldr	r3, .L244+36
 5444 1b56 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5445 1b58 002B     		cmp	r3, #0
 5446 1b5a 31D0     		beq	.L157
1167:main.c        ****                     {
1168:main.c        ****                         sendMIDIPitchBend((uint)barBend,12);
 5447              		.loc 1 1168 0
 5448 1b5c 386A     		ldr	r0, [r7, #32]	@ float
 5449 1b5e FFF7FEFF 		bl	__aeabi_f2uiz
 5450 1b62 0346     		mov	r3, r0
 5451 1b64 0C21     		movs	r1, #12
 5452 1b66 1846     		mov	r0, r3
 5453 1b68 FFF7FEFF 		bl	sendMIDIPitchBend
 5454 1b6c 28E0     		b	.L157
 5455              	.L245:
 5456 1b6e 00BF     		.align	2
 5457              	.L244:
 5458 1b70 00000000 		.word	currentCopedent
 5459 1b74 00000000 		.word	copedentMapping
 5460 1b78 00000000 		.word	copedent
 5461 1b7c 00000000 		.word	pedals_float
 5462 1b80 00000000 		.word	transposeFloat
 5463 1b84 00000000 		.word	openStringMIDI_Int
 5464 1b88 00005C42 		.word	1113325568
 5465 1b8c 00000442 		.word	1107558400
 5466 1b90 00000000 		.word	barMidiOuterStrings
 5467 1b94 00000000 		.word	midiBarSendOn
 5468              	.L158:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 119


 5469              	.LBE40:
1169:main.c        ****                     }
1170:main.c        ****                 }
1171:main.c        ****             }
1172:main.c        ****             else if (i == (numStrings - 1))
 5470              		.loc 1 1172 0
 5471 1b98 B24B     		ldr	r3, .L246
 5472 1b9a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5473 1b9c 5A1E     		subs	r2, r3, #1
 5474 1b9e D7F89030 		ldr	r3, [r7, #144]
 5475 1ba2 9A42     		cmp	r2, r3
 5476 1ba4 0CD1     		bne	.L157
1173:main.c        ****             {
1174:main.c        ****                  barMidiOuterStrings[1] = (uint16_t)(barMIDI * 512.0f);
 5477              		.loc 1 1174 0
 5478 1ba6 4FF08841 		mov	r1, #1140850688
 5479 1baa 786A     		ldr	r0, [r7, #36]	@ float
 5480 1bac FFF7FEFF 		bl	__aeabi_fmul
 5481 1bb0 0346     		mov	r3, r0
 5482 1bb2 1846     		mov	r0, r3
 5483 1bb4 FFF7FEFF 		bl	__aeabi_f2uiz
 5484 1bb8 0346     		mov	r3, r0
 5485 1bba 9AB2     		uxth	r2, r3
 5486 1bbc AA4B     		ldr	r3, .L246+4
 5487 1bbe 5A80     		strh	r2, [r3, #2]	@ movhi
 5488              	.L157:
1175:main.c        ****             }
1176:main.c        ****             
1177:main.c        ****             float computerMIDIOffset = barMIDI + pedalsMIDI - openStringMIDI_Int[i];// + stringOcta
 5489              		.loc 1 1177 0
 5490 1bc0 D7F88810 		ldr	r1, [r7, #136]	@ float
 5491 1bc4 786A     		ldr	r0, [r7, #36]	@ float
 5492 1bc6 FFF7FEFF 		bl	__aeabi_fadd
 5493 1bca 0346     		mov	r3, r0
 5494 1bcc 1C46     		mov	r4, r3
 5495 1bce A74A     		ldr	r2, .L246+8
 5496 1bd0 D7F89030 		ldr	r3, [r7, #144]
 5497 1bd4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 5498 1bd8 1846     		mov	r0, r3
 5499 1bda FFF7FEFF 		bl	__aeabi_i2f
 5500 1bde 0346     		mov	r3, r0
 5501 1be0 1946     		mov	r1, r3
 5502 1be2 2046     		mov	r0, r4
 5503 1be4 FFF7FEFF 		bl	__aeabi_fsub
 5504 1be8 0346     		mov	r3, r0
 5505 1bea FB61     		str	r3, [r7, #28]	@ float
1178:main.c        ****             
1179:main.c        ****             if (midiDebugSendOn)
 5506              		.loc 1 1179 0
 5507 1bec A04B     		ldr	r3, .L246+12
 5508 1bee 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5509 1bf0 002B     		cmp	r3, #0
 5510 1bf2 57D0     		beq	.L160
1180:main.c        ****             {
1181:main.c        ****                 if (i == 0)
 5511              		.loc 1 1181 0
 5512 1bf4 D7F89030 		ldr	r3, [r7, #144]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 120


 5513 1bf8 002B     		cmp	r3, #0
 5514 1bfa 53D1     		bne	.L160
 5515              	.LBB41:
1182:main.c        ****                 {
1183:main.c        ****                         uint16_t barMIDIInt = barMIDI * 512.0f;
 5516              		.loc 1 1183 0
 5517 1bfc 4FF08841 		mov	r1, #1140850688
 5518 1c00 786A     		ldr	r0, [r7, #36]	@ float
 5519 1c02 FFF7FEFF 		bl	__aeabi_fmul
 5520 1c06 0346     		mov	r3, r0
 5521 1c08 1846     		mov	r0, r3
 5522 1c0a FFF7FEFF 		bl	__aeabi_f2uiz
 5523 1c0e 0346     		mov	r3, r0
 5524 1c10 7B83     		strh	r3, [r7, #26]	@ movhi
1184:main.c        ****                         sendMIDIControlChange(50, barMIDIInt & 127, 1);
 5525              		.loc 1 1184 0
 5526 1c12 7B8B     		ldrh	r3, [r7, #26]
 5527 1c14 03F07F03 		and	r3, r3, #127
 5528 1c18 0122     		movs	r2, #1
 5529 1c1a 1946     		mov	r1, r3
 5530 1c1c 3220     		movs	r0, #50
 5531 1c1e FFF7FEFF 		bl	sendMIDIControlChange
1185:main.c        ****                         sendMIDIControlChange(49, (barMIDIInt >> 7) & 127, 1);
 5532              		.loc 1 1185 0
 5533 1c22 7B8B     		ldrh	r3, [r7, #26]
 5534 1c24 DB09     		lsrs	r3, r3, #7
 5535 1c26 9BB2     		uxth	r3, r3
 5536 1c28 03F07F03 		and	r3, r3, #127
 5537 1c2c 0122     		movs	r2, #1
 5538 1c2e 1946     		mov	r1, r3
 5539 1c30 3120     		movs	r0, #49
 5540 1c32 FFF7FEFF 		bl	sendMIDIControlChange
1186:main.c        ****                         
1187:main.c        ****                         sendMIDIControlChange(48, (barMIDIInt >> 14) & 127, 1);
 5541              		.loc 1 1187 0
 5542 1c36 7B8B     		ldrh	r3, [r7, #26]
 5543 1c38 9B0B     		lsrs	r3, r3, #14
 5544 1c3a 9BB2     		uxth	r3, r3
 5545 1c3c 03F07F03 		and	r3, r3, #127
 5546 1c40 0122     		movs	r2, #1
 5547 1c42 1946     		mov	r1, r3
 5548 1c44 3020     		movs	r0, #48
 5549 1c46 FFF7FEFF 		bl	sendMIDIControlChange
1188:main.c        ****                         uint16_t openStringMIDI_Int2 = openStringMIDI_Int[0] * 512.0f;
 5550              		.loc 1 1188 0
 5551 1c4a 884B     		ldr	r3, .L246+8
 5552 1c4c 1B68     		ldr	r3, [r3]
 5553 1c4e 1846     		mov	r0, r3
 5554 1c50 FFF7FEFF 		bl	__aeabi_i2f
 5555 1c54 0346     		mov	r3, r0
 5556 1c56 4FF08841 		mov	r1, #1140850688
 5557 1c5a 1846     		mov	r0, r3
 5558 1c5c FFF7FEFF 		bl	__aeabi_fmul
 5559 1c60 0346     		mov	r3, r0
 5560 1c62 1846     		mov	r0, r3
 5561 1c64 FFF7FEFF 		bl	__aeabi_f2uiz
 5562 1c68 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 121


 5563 1c6a 3B83     		strh	r3, [r7, #24]	@ movhi
1189:main.c        ****                         sendMIDIControlChange(53, openStringMIDI_Int2 & 127, 1);
 5564              		.loc 1 1189 0
 5565 1c6c 3B8B     		ldrh	r3, [r7, #24]
 5566 1c6e 03F07F03 		and	r3, r3, #127
 5567 1c72 0122     		movs	r2, #1
 5568 1c74 1946     		mov	r1, r3
 5569 1c76 3520     		movs	r0, #53
 5570 1c78 FFF7FEFF 		bl	sendMIDIControlChange
1190:main.c        ****                         sendMIDIControlChange(52, (openStringMIDI_Int2 >> 7) & 127, 1);
 5571              		.loc 1 1190 0
 5572 1c7c 3B8B     		ldrh	r3, [r7, #24]
 5573 1c7e DB09     		lsrs	r3, r3, #7
 5574 1c80 9BB2     		uxth	r3, r3
 5575 1c82 03F07F03 		and	r3, r3, #127
 5576 1c86 0122     		movs	r2, #1
 5577 1c88 1946     		mov	r1, r3
 5578 1c8a 3420     		movs	r0, #52
 5579 1c8c FFF7FEFF 		bl	sendMIDIControlChange
1191:main.c        ****                         sendMIDIControlChange(51, (openStringMIDI_Int2 >> 14) & 127, 1);
 5580              		.loc 1 1191 0
 5581 1c90 3B8B     		ldrh	r3, [r7, #24]
 5582 1c92 9B0B     		lsrs	r3, r3, #14
 5583 1c94 9BB2     		uxth	r3, r3
 5584 1c96 03F07F03 		and	r3, r3, #127
 5585 1c9a 0122     		movs	r2, #1
 5586 1c9c 1946     		mov	r1, r3
 5587 1c9e 3320     		movs	r0, #51
 5588 1ca0 FFF7FEFF 		bl	sendMIDIControlChange
 5589              	.L160:
 5590              	.LBE41:
1192:main.c        ****                 }
1193:main.c        ****             }
1194:main.c        ****             
1195:main.c        ****             
1196:main.c        ****             
1197:main.c        ****             float pitchBendAmount = (computerMIDIOffset * 170.6666666666667f) + 8192.0f;  // 14bit 
 5591              		.loc 1 1197 0
 5592 1ca4 7349     		ldr	r1, .L246+16
 5593 1ca6 F869     		ldr	r0, [r7, #28]	@ float
 5594 1ca8 FFF7FEFF 		bl	__aeabi_fmul
 5595 1cac 0346     		mov	r3, r0
 5596 1cae 4FF08C41 		mov	r1, #1174405120
 5597 1cb2 1846     		mov	r0, r3
 5598 1cb4 FFF7FEFF 		bl	__aeabi_fadd
 5599 1cb8 0346     		mov	r3, r0
 5600 1cba 7B61     		str	r3, [r7, #20]	@ float
1198:main.c        ****             if (midiSendOn)
 5601              		.loc 1 1198 0
 5602 1cbc 6E4B     		ldr	r3, .L246+20
 5603 1cbe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5604 1cc0 002B     		cmp	r3, #0
 5605 1cc2 17D0     		beq	.L161
1199:main.c        ****             {
1200:main.c        ****                 if (pitchBendAmount != prevStringPitchBend[i])
 5606              		.loc 1 1200 0
 5607 1cc4 6D4A     		ldr	r2, .L246+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 122


 5608 1cc6 D7F89030 		ldr	r3, [r7, #144]
 5609 1cca 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 5610 1cce 7969     		ldr	r1, [r7, #20]	@ float
 5611 1cd0 1846     		mov	r0, r3
 5612 1cd2 FFF7FEFF 		bl	__aeabi_fcmpeq
 5613 1cd6 0346     		mov	r3, r0
 5614 1cd8 002B     		cmp	r3, #0
 5615 1cda 0BD1     		bne	.L161
1201:main.c        ****                 {
1202:main.c        ****                     sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 5616              		.loc 1 1202 0
 5617 1cdc 7869     		ldr	r0, [r7, #20]	@ float
 5618 1cde FFF7FEFF 		bl	__aeabi_f2uiz
 5619 1ce2 0346     		mov	r3, r0
 5620 1ce4 1A46     		mov	r2, r3
 5621 1ce6 D7F89030 		ldr	r3, [r7, #144]
 5622 1cea 0133     		adds	r3, r3, #1
 5623 1cec 1946     		mov	r1, r3
 5624 1cee 1046     		mov	r0, r2
 5625 1cf0 FFF7FEFF 		bl	sendMIDIPitchBend
 5626              	.L161:
1203:main.c        ****                 }
1204:main.c        ****             }
1205:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 5627              		.loc 1 1205 0
 5628 1cf4 6149     		ldr	r1, .L246+24
 5629 1cf6 D7F89030 		ldr	r3, [r7, #144]
 5630 1cfa 7A69     		ldr	r2, [r7, #20]	@ float
 5631 1cfc 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1206:main.c        ****             
1207:main.c        ****             if (pedalsMIDI > 0.0f)
 5632              		.loc 1 1207 0
 5633 1d00 4FF00001 		mov	r1, #0
 5634 1d04 D7F88800 		ldr	r0, [r7, #136]	@ float
 5635 1d08 FFF7FEFF 		bl	__aeabi_fcmpgt
 5636 1d0c 0346     		mov	r3, r0
 5637 1d0e 002B     		cmp	r3, #0
 5638 1d10 0BD0     		beq	.L163
1208:main.c        ****             {
1209:main.c        ****                 stringMIDI[i] = pedalsMIDI + barMIDI;
 5639              		.loc 1 1209 0
 5640 1d12 796A     		ldr	r1, [r7, #36]	@ float
 5641 1d14 D7F88800 		ldr	r0, [r7, #136]	@ float
 5642 1d18 FFF7FEFF 		bl	__aeabi_fadd
 5643 1d1c 0346     		mov	r3, r0
 5644 1d1e 1946     		mov	r1, r3
 5645 1d20 574A     		ldr	r2, .L246+28
 5646 1d22 D7F89030 		ldr	r3, [r7, #144]
 5647 1d26 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 5648              	.L163:
 5649              	.LBE35:
1078:main.c        ****     	{
 5650              		.loc 1 1078 0 discriminator 2
 5651 1d2a D7F89030 		ldr	r3, [r7, #144]
 5652 1d2e 0133     		adds	r3, r3, #1
 5653 1d30 C7F89030 		str	r3, [r7, #144]
 5654              	.L141:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 123


1078:main.c        ****     	{
 5655              		.loc 1 1078 0 is_stmt 0 discriminator 1
 5656 1d34 4B4B     		ldr	r3, .L246
 5657 1d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5658 1d38 1A46     		mov	r2, r3
 5659 1d3a D7F89030 		ldr	r3, [r7, #144]
 5660 1d3e 9A42     		cmp	r2, r3
 5661 1d40 3FF787AC 		bgt	.L165
 5662              	.LBE34:
1210:main.c        ****             }
1211:main.c        ****     	}
1212:main.c        ****        // testpin4_Write(0);
1213:main.c        **** 
1214:main.c        ****         
1215:main.c        ****         if (USB_check_flag)
 5663              		.loc 1 1215 0 is_stmt 1
 5664 1d44 4F4B     		ldr	r3, .L246+32
 5665 1d46 1B78     		ldrb	r3, [r3]
 5666 1d48 DBB2     		uxtb	r3, r3
 5667 1d4a 002B     		cmp	r3, #0
 5668 1d4c 01D0     		beq	.L166
1216:main.c        ****         {
1217:main.c        ****             checkUSB_Vbus();
 5669              		.loc 1 1217 0
 5670 1d4e FFF7FEFF 		bl	checkUSB_Vbus
 5671              	.L166:
1218:main.c        ****         }
1219:main.c        ****         //only service the USB bus if there is a computer plugged in
1220:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5672              		.loc 1 1220 0
 5673 1d52 4D4B     		ldr	r3, .L246+36
 5674 1d54 1B78     		ldrb	r3, [r3]
 5675 1d56 DBB2     		uxtb	r3, r3
 5676 1d58 002B     		cmp	r3, #0
 5677 1d5a 13D0     		beq	.L224
 5678              		.loc 1 1220 0 is_stmt 0 discriminator 1
 5679 1d5c FFF7FEFF 		bl	USB_VBusPresent
 5680 1d60 0346     		mov	r3, r0
 5681 1d62 002B     		cmp	r3, #0
 5682 1d64 0ED0     		beq	.L224
1221:main.c        ****         {
1222:main.c        ****             if (midiSent > 64)
 5683              		.loc 1 1222 0 is_stmt 1
 5684 1d66 494B     		ldr	r3, .L246+40
 5685 1d68 1B88     		ldrh	r3, [r3]
 5686 1d6a 402B     		cmp	r3, #64
 5687 1d6c 05D9     		bls	.L168
1223:main.c        ****             {
1224:main.c        ****                 midiOverflow++;
 5688              		.loc 1 1224 0
 5689 1d6e 484B     		ldr	r3, .L246+44
 5690 1d70 1B88     		ldrh	r3, [r3]
 5691 1d72 0133     		adds	r3, r3, #1
 5692 1d74 9AB2     		uxth	r2, r3
 5693 1d76 464B     		ldr	r3, .L246+44
 5694 1d78 1A80     		strh	r2, [r3]	@ movhi
 5695              	.L168:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 124


1225:main.c        ****             }
1226:main.c        ****             midiSent = 0;
 5696              		.loc 1 1226 0
 5697 1d7a 444B     		ldr	r3, .L246+40
 5698 1d7c 0022     		movs	r2, #0
 5699 1d7e 1A80     		strh	r2, [r3]	@ movhi
1227:main.c        ****             USB_service();
 5700              		.loc 1 1227 0
 5701 1d80 FFF7FEFF 		bl	USB_service
 5702              	.L224:
1228:main.c        ****         }
1229:main.c        **** 
1230:main.c        ****         
1231:main.c        ****         //make sure previous SPI2 transmission has completed before transferring the remaining midi
1232:main.c        ****         while (0u == ((SPIM_1_ReadTxStatus() & SPIM_1_STS_SPI_DONE) || (SPIM_1_ReadTxStatus() & SPI
 5703              		.loc 1 1232 0
 5704 1d84 00BF     		nop
 5705              	.L172:
 5706              		.loc 1 1232 0 is_stmt 0 discriminator 7
 5707 1d86 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5708 1d8a 0346     		mov	r3, r0
 5709 1d8c 03F00103 		and	r3, r3, #1
 5710 1d90 002B     		cmp	r3, #0
 5711 1d92 06D1     		bne	.L169
 5712              		.loc 1 1232 0 discriminator 2
 5713 1d94 FFF7FEFF 		bl	SPIM_1_ReadTxStatus
 5714 1d98 0346     		mov	r3, r0
 5715 1d9a 03F01003 		and	r3, r3, #16
 5716 1d9e 002B     		cmp	r3, #0
 5717 1da0 01D0     		beq	.L170
 5718              	.L169:
 5719              		.loc 1 1232 0 discriminator 3
 5720 1da2 0123     		movs	r3, #1
 5721 1da4 00E0     		b	.L171
 5722              	.L170:
 5723              		.loc 1 1232 0 discriminator 4
 5724 1da6 0023     		movs	r3, #0
 5725              	.L171:
 5726              		.loc 1 1232 0 discriminator 6
 5727 1da8 002B     		cmp	r3, #0
 5728 1daa ECD0     		beq	.L172
1233:main.c        ****         {
1234:main.c        ****             ;
1235:main.c        ****         }
1236:main.c        ****         //testpin6_Write(1);
1237:main.c        ****         if (sendingMessage == 1) //sending synthesis preset to synth board
 5729              		.loc 1 1237 0 is_stmt 1
 5730 1dac 394B     		ldr	r3, .L246+48
 5731 1dae 1B78     		ldrb	r3, [r3]
 5732 1db0 DBB2     		uxtb	r3, r3
 5733 1db2 012B     		cmp	r3, #1
 5734 1db4 7ED1     		bne	.L173
1238:main.c        ****         {
1239:main.c        ****             if (sendMessageEnd) //send end message
 5735              		.loc 1 1239 0
 5736 1db6 384B     		ldr	r3, .L246+52
 5737 1db8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 125


 5738 1dba 002B     		cmp	r3, #0
 5739 1dbc 1CD0     		beq	.L174
1240:main.c        ****             {
1241:main.c        ****                 myArray[0] = 253;
 5740              		.loc 1 1241 0
 5741 1dbe 374B     		ldr	r3, .L246+56
 5742 1dc0 FD22     		movs	r2, #253
 5743 1dc2 1A70     		strb	r2, [r3]
1242:main.c        ****                 myArray[1] = presetNumberToWrite;
 5744              		.loc 1 1242 0
 5745 1dc4 364B     		ldr	r3, .L246+60
 5746 1dc6 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5747 1dc8 344B     		ldr	r3, .L246+56
 5748 1dca 5A70     		strb	r2, [r3, #1]
1243:main.c        ****                 currentPresetSelection = presetNumberToWrite;
 5749              		.loc 1 1243 0
 5750 1dcc 344B     		ldr	r3, .L246+60
 5751 1dce 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5752 1dd0 344B     		ldr	r3, .L246+64
 5753 1dd2 1A70     		strb	r2, [r3]
1244:main.c        ****                 //display previous preset as loaded
1245:main.c        ****                 displayCurrentPresetNameAndCopedent();
 5754              		.loc 1 1245 0
 5755 1dd4 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
1246:main.c        ****                 //OLED_invert(0);
1247:main.c        ****                 sendMessageEnd = 0;
 5756              		.loc 1 1247 0
 5757 1dd8 2F4B     		ldr	r3, .L246+52
 5758 1dda 0022     		movs	r2, #0
 5759 1ddc 1A70     		strb	r2, [r3]
1248:main.c        ****                 sendingMessage = 0;
 5760              		.loc 1 1248 0
 5761 1dde 2D4B     		ldr	r3, .L246+48
 5762 1de0 0022     		movs	r2, #0
 5763 1de2 1A70     		strb	r2, [r3]
1249:main.c        ****                 messageArraySendCount = 0;
 5764              		.loc 1 1249 0
 5765 1de4 304B     		ldr	r3, .L246+68
 5766 1de6 0022     		movs	r2, #0
 5767 1de8 1A80     		strh	r2, [r3]	@ movhi
1250:main.c        ****                 myArray[30] = 254;
 5768              		.loc 1 1250 0
 5769 1dea 2C4B     		ldr	r3, .L246+56
 5770 1dec FE22     		movs	r2, #254
 5771 1dee 9A77     		strb	r2, [r3, #30]
1251:main.c        ****                 myArray[31] = 253;
 5772              		.loc 1 1251 0
 5773 1df0 2A4B     		ldr	r3, .L246+56
 5774 1df2 FD22     		movs	r2, #253
 5775 1df4 DA77     		strb	r2, [r3, #31]
 5776 1df6 62E2     		b	.L180
 5777              	.L174:
1252:main.c        ****                 
1253:main.c        ****             }
1254:main.c        ****             else //send chunks
1255:main.c        ****             {
1256:main.c        ****                 //send the next preset Chunkkkkk
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 126


1257:main.c        ****                 myArray[0] = 2;
 5778              		.loc 1 1257 0
 5779 1df8 284B     		ldr	r3, .L246+56
 5780 1dfa 0222     		movs	r2, #2
 5781 1dfc 1A70     		strb	r2, [r3]
1258:main.c        ****                 myArray[1] = presetNumberToWrite;
 5782              		.loc 1 1258 0
 5783 1dfe 284B     		ldr	r3, .L246+60
 5784 1e00 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5785 1e02 264B     		ldr	r3, .L246+56
 5786 1e04 5A70     		strb	r2, [r3, #1]
 5787              	.LBB42:
1259:main.c        ****                 for (uint i = 2 ; i < myBufferSize-2; i++)
 5788              		.loc 1 1259 0
 5789 1e06 0223     		movs	r3, #2
 5790 1e08 BB67     		str	r3, [r7, #120]
 5791 1e0a 20E0     		b	.L176
 5792              	.L179:
1260:main.c        ****                 {
1261:main.c        ****                     if (messageArraySendCount < messageArraySize)
 5793              		.loc 1 1261 0
 5794 1e0c 264B     		ldr	r3, .L246+68
 5795 1e0e 1A88     		ldrh	r2, [r3]
 5796 1e10 264B     		ldr	r3, .L246+72
 5797 1e12 1B88     		ldrh	r3, [r3]
 5798 1e14 9A42     		cmp	r2, r3
 5799 1e16 0FD2     		bcs	.L177
1262:main.c        ****                     {
1263:main.c        ****                         myArray[i] = presetArray[messageArraySendCount++];
 5800              		.loc 1 1263 0
 5801 1e18 234B     		ldr	r3, .L246+68
 5802 1e1a 1B88     		ldrh	r3, [r3]
 5803 1e1c 5A1C     		adds	r2, r3, #1
 5804 1e1e 91B2     		uxth	r1, r2
 5805 1e20 214A     		ldr	r2, .L246+68
 5806 1e22 1180     		strh	r1, [r2]	@ movhi
 5807 1e24 1A46     		mov	r2, r3
 5808 1e26 224B     		ldr	r3, .L246+76
 5809 1e28 9B5C     		ldrb	r3, [r3, r2]
 5810 1e2a D9B2     		uxtb	r1, r3
 5811 1e2c 1B4A     		ldr	r2, .L246+56
 5812 1e2e BB6F     		ldr	r3, [r7, #120]
 5813 1e30 1344     		add	r3, r3, r2
 5814 1e32 0A46     		mov	r2, r1
 5815 1e34 1A70     		strb	r2, [r3]
 5816 1e36 07E0     		b	.L178
 5817              	.L177:
1264:main.c        ****                     }
1265:main.c        ****                     else
1266:main.c        ****                     {
1267:main.c        ****                         myArray[i] = 0xee; // preset end ack   - done, next send a message that s
 5818              		.loc 1 1267 0
 5819 1e38 184A     		ldr	r2, .L246+56
 5820 1e3a BB6F     		ldr	r3, [r7, #120]
 5821 1e3c 1344     		add	r3, r3, r2
 5822 1e3e EE22     		movs	r2, #238
 5823 1e40 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 127


1268:main.c        ****                         sendMessageEnd = 1;
 5824              		.loc 1 1268 0
 5825 1e42 154B     		ldr	r3, .L246+52
 5826 1e44 0122     		movs	r2, #1
 5827 1e46 1A70     		strb	r2, [r3]
 5828              	.L178:
1259:main.c        ****                 {
 5829              		.loc 1 1259 0 discriminator 2
 5830 1e48 BB6F     		ldr	r3, [r7, #120]
 5831 1e4a 0133     		adds	r3, r3, #1
 5832 1e4c BB67     		str	r3, [r7, #120]
 5833              	.L176:
1259:main.c        ****                 {
 5834              		.loc 1 1259 0 is_stmt 0 discriminator 1
 5835 1e4e BB6F     		ldr	r3, [r7, #120]
 5836 1e50 1D2B     		cmp	r3, #29
 5837 1e52 DBD9     		bls	.L179
 5838              	.LBE42:
1269:main.c        ****                     }
1270:main.c        ****                 }
1271:main.c        ****                 myArray[30] = 254;
 5839              		.loc 1 1271 0 is_stmt 1
 5840 1e54 114B     		ldr	r3, .L246+56
 5841 1e56 FE22     		movs	r2, #254
 5842 1e58 9A77     		strb	r2, [r3, #30]
1272:main.c        ****                 myArray[31] = 253;
 5843              		.loc 1 1272 0
 5844 1e5a 104B     		ldr	r3, .L246+56
 5845 1e5c FD22     		movs	r2, #253
 5846 1e5e DA77     		strb	r2, [r3, #31]
 5847 1e60 2DE2     		b	.L180
 5848              	.L247:
 5849 1e62 00BF     		.align	2
 5850              	.L246:
 5851 1e64 00000000 		.word	numStrings
 5852 1e68 00000000 		.word	barMidiOuterStrings
 5853 1e6c 00000000 		.word	openStringMIDI_Int
 5854 1e70 00000000 		.word	midiDebugSendOn
 5855 1e74 ABAA2A43 		.word	1126869675
 5856 1e78 00000000 		.word	midiSendOn
 5857 1e7c 00000000 		.word	prevStringPitchBend
 5858 1e80 00000000 		.word	stringMIDI
 5859 1e84 00000000 		.word	USB_check_flag
 5860 1e88 00000000 		.word	USB_active
 5861 1e8c 00000000 		.word	midiSent
 5862 1e90 00000000 		.word	midiOverflow
 5863 1e94 00000000 		.word	sendingMessage
 5864 1e98 00000000 		.word	sendMessageEnd
 5865 1e9c 00000000 		.word	myArray
 5866 1ea0 00000000 		.word	presetNumberToWrite
 5867 1ea4 00000000 		.word	currentPresetSelection
 5868 1ea8 00000000 		.word	messageArraySendCount
 5869 1eac 00000000 		.word	messageArraySize
 5870 1eb0 00000000 		.word	presetArray
 5871              	.L173:
1273:main.c        ****             }    
1274:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 128


1275:main.c        ****         
1276:main.c        ****         else if (sendSingleParamUpdate)
 5872              		.loc 1 1276 0
 5873 1eb4 8E4B     		ldr	r3, .L248
 5874 1eb6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5875 1eb8 002B     		cmp	r3, #0
 5876 1eba 1CD0     		beq	.L181
1277:main.c        ****         {
1278:main.c        ****             myArray[0] = 6;
 5877              		.loc 1 1278 0
 5878 1ebc 8D4B     		ldr	r3, .L248+4
 5879 1ebe 0622     		movs	r2, #6
 5880 1ec0 1A70     		strb	r2, [r3]
1279:main.c        ****             myArray[1] = singleParamToUpdateHigh;
 5881              		.loc 1 1279 0
 5882 1ec2 8D4B     		ldr	r3, .L248+8
 5883 1ec4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5884 1ec6 8B4B     		ldr	r3, .L248+4
 5885 1ec8 5A70     		strb	r2, [r3, #1]
1280:main.c        ****             myArray[2] = singleParamToUpdateLow;
 5886              		.loc 1 1280 0
 5887 1eca 8C4B     		ldr	r3, .L248+12
 5888 1ecc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5889 1ece 894B     		ldr	r3, .L248+4
 5890 1ed0 9A70     		strb	r2, [r3, #2]
1281:main.c        ****             myArray[3] = singleParamValueHigh;
 5891              		.loc 1 1281 0
 5892 1ed2 8B4B     		ldr	r3, .L248+16
 5893 1ed4 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5894 1ed6 874B     		ldr	r3, .L248+4
 5895 1ed8 DA70     		strb	r2, [r3, #3]
1282:main.c        ****             myArray[4] = singleParamValueLow;
 5896              		.loc 1 1282 0
 5897 1eda 8A4B     		ldr	r3, .L248+20
 5898 1edc 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5899 1ede 854B     		ldr	r3, .L248+4
 5900 1ee0 1A71     		strb	r2, [r3, #4]
1283:main.c        ****             myArray[30] = 254;
 5901              		.loc 1 1283 0
 5902 1ee2 844B     		ldr	r3, .L248+4
 5903 1ee4 FE22     		movs	r2, #254
 5904 1ee6 9A77     		strb	r2, [r3, #30]
1284:main.c        ****             myArray[31] = 253;
 5905              		.loc 1 1284 0
 5906 1ee8 824B     		ldr	r3, .L248+4
 5907 1eea FD22     		movs	r2, #253
 5908 1eec DA77     		strb	r2, [r3, #31]
1285:main.c        ****             sendSingleParamUpdate = 0;
 5909              		.loc 1 1285 0
 5910 1eee 804B     		ldr	r3, .L248
 5911 1ef0 0022     		movs	r2, #0
 5912 1ef2 1A70     		strb	r2, [r3]
 5913 1ef4 E3E1     		b	.L180
 5914              	.L181:
1286:main.c        ****         }
1287:main.c        ****         
1288:main.c        ****         else if (sendMappingChangeUpdate)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 129


 5915              		.loc 1 1288 0
 5916 1ef6 844B     		ldr	r3, .L248+24
 5917 1ef8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5918 1efa 002B     		cmp	r3, #0
 5919 1efc 24D0     		beq	.L182
1289:main.c        ****         {
1290:main.c        ****             myArray[0] = 7;
 5920              		.loc 1 1290 0
 5921 1efe 7D4B     		ldr	r3, .L248+4
 5922 1f00 0722     		movs	r2, #7
 5923 1f02 1A70     		strb	r2, [r3]
1291:main.c        ****             myArray[1] = mappingArray[0];
 5924              		.loc 1 1291 0
 5925 1f04 814B     		ldr	r3, .L248+28
 5926 1f06 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5927 1f08 7A4B     		ldr	r3, .L248+4
 5928 1f0a 5A70     		strb	r2, [r3, #1]
1292:main.c        ****             myArray[2] =  mappingArray[1];
 5929              		.loc 1 1292 0
 5930 1f0c 7F4B     		ldr	r3, .L248+28
 5931 1f0e 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5932 1f10 784B     		ldr	r3, .L248+4
 5933 1f12 9A70     		strb	r2, [r3, #2]
1293:main.c        ****             myArray[3] =  mappingArray[2];
 5934              		.loc 1 1293 0
 5935 1f14 7D4B     		ldr	r3, .L248+28
 5936 1f16 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5937 1f18 764B     		ldr	r3, .L248+4
 5938 1f1a DA70     		strb	r2, [r3, #3]
1294:main.c        ****             myArray[4] =  mappingArray[3];
 5939              		.loc 1 1294 0
 5940 1f1c 7B4B     		ldr	r3, .L248+28
 5941 1f1e DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5942 1f20 744B     		ldr	r3, .L248+4
 5943 1f22 1A71     		strb	r2, [r3, #4]
1295:main.c        ****             myArray[5] =  mappingArray[4];
 5944              		.loc 1 1295 0
 5945 1f24 794B     		ldr	r3, .L248+28
 5946 1f26 1A79     		ldrb	r2, [r3, #4]	@ zero_extendqisi2
 5947 1f28 724B     		ldr	r3, .L248+4
 5948 1f2a 5A71     		strb	r2, [r3, #5]
1296:main.c        ****             myArray[6] =  mappingArray[5];
 5949              		.loc 1 1296 0
 5950 1f2c 774B     		ldr	r3, .L248+28
 5951 1f2e 5A79     		ldrb	r2, [r3, #5]	@ zero_extendqisi2
 5952 1f30 704B     		ldr	r3, .L248+4
 5953 1f32 9A71     		strb	r2, [r3, #6]
1297:main.c        ****             myArray[30] = 254;
 5954              		.loc 1 1297 0
 5955 1f34 6F4B     		ldr	r3, .L248+4
 5956 1f36 FE22     		movs	r2, #254
 5957 1f38 9A77     		strb	r2, [r3, #30]
1298:main.c        ****             myArray[31] = 253;
 5958              		.loc 1 1298 0
 5959 1f3a 6E4B     		ldr	r3, .L248+4
 5960 1f3c FD22     		movs	r2, #253
 5961 1f3e DA77     		strb	r2, [r3, #31]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 130


1299:main.c        ****             sendMappingChangeUpdate = 0;
 5962              		.loc 1 1299 0
 5963 1f40 714B     		ldr	r3, .L248+24
 5964 1f42 0022     		movs	r2, #0
 5965 1f44 1A70     		strb	r2, [r3]
 5966 1f46 BAE1     		b	.L180
 5967              	.L182:
1300:main.c        ****         }
1301:main.c        ****         else if (volumeWaitingToSend)
 5968              		.loc 1 1301 0
 5969 1f48 714B     		ldr	r3, .L248+32
 5970 1f4a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5971 1f4c 002B     		cmp	r3, #0
 5972 1f4e 12D0     		beq	.L183
1302:main.c        ****         {
1303:main.c        ****             myArray[0] = 10;
 5973              		.loc 1 1303 0
 5974 1f50 684B     		ldr	r3, .L248+4
 5975 1f52 0A22     		movs	r2, #10
 5976 1f54 1A70     		strb	r2, [r3]
1304:main.c        ****             myArray[1] = volumeInt;
 5977              		.loc 1 1304 0
 5978 1f56 6F4B     		ldr	r3, .L248+36
 5979 1f58 93F90030 		ldrsb	r3, [r3]
 5980 1f5c DAB2     		uxtb	r2, r3
 5981 1f5e 654B     		ldr	r3, .L248+4
 5982 1f60 5A70     		strb	r2, [r3, #1]
1305:main.c        ****             myArray[30] = 254;
 5983              		.loc 1 1305 0
 5984 1f62 644B     		ldr	r3, .L248+4
 5985 1f64 FE22     		movs	r2, #254
 5986 1f66 9A77     		strb	r2, [r3, #30]
1306:main.c        ****             myArray[31] = 253;
 5987              		.loc 1 1306 0
 5988 1f68 624B     		ldr	r3, .L248+4
 5989 1f6a FD22     		movs	r2, #253
 5990 1f6c DA77     		strb	r2, [r3, #31]
1307:main.c        ****             volumeWaitingToSend = 0;
 5991              		.loc 1 1307 0
 5992 1f6e 684B     		ldr	r3, .L248+32
 5993 1f70 0022     		movs	r2, #0
 5994 1f72 1A70     		strb	r2, [r3]
 5995 1f74 A3E1     		b	.L180
 5996              	.L183:
1308:main.c        ****         }
1309:main.c        ****         
1310:main.c        ****         else if (sendFirmwareUpdateRequest == 1)
 5997              		.loc 1 1310 0
 5998 1f76 684B     		ldr	r3, .L248+40
 5999 1f78 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6000 1f7a 012B     		cmp	r3, #1
 6001 1f7c 0FD1     		bne	.L184
1311:main.c        ****         {
1312:main.c        ****             myArray[0] = 11;
 6002              		.loc 1 1312 0
 6003 1f7e 5D4B     		ldr	r3, .L248+4
 6004 1f80 0B22     		movs	r2, #11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 131


 6005 1f82 1A70     		strb	r2, [r3]
1313:main.c        ****             myArray[1] = 0;
 6006              		.loc 1 1313 0
 6007 1f84 5B4B     		ldr	r3, .L248+4
 6008 1f86 0022     		movs	r2, #0
 6009 1f88 5A70     		strb	r2, [r3, #1]
1314:main.c        ****             myArray[30] = 254;
 6010              		.loc 1 1314 0
 6011 1f8a 5A4B     		ldr	r3, .L248+4
 6012 1f8c FE22     		movs	r2, #254
 6013 1f8e 9A77     		strb	r2, [r3, #30]
1315:main.c        ****             myArray[31] = 253;
 6014              		.loc 1 1315 0
 6015 1f90 584B     		ldr	r3, .L248+4
 6016 1f92 FD22     		movs	r2, #253
 6017 1f94 DA77     		strb	r2, [r3, #31]
1316:main.c        ****             sendFirmwareUpdateRequest = 0;
 6018              		.loc 1 1316 0
 6019 1f96 604B     		ldr	r3, .L248+40
 6020 1f98 0022     		movs	r2, #0
 6021 1f9a 1A70     		strb	r2, [r3]
 6022 1f9c 8FE1     		b	.L180
 6023              	.L184:
1317:main.c        ****         }
1318:main.c        ****         else if (sendFirmwareUpdateRequest == 2)
 6024              		.loc 1 1318 0
 6025 1f9e 5E4B     		ldr	r3, .L248+40
 6026 1fa0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6027 1fa2 022B     		cmp	r3, #2
 6028 1fa4 0FD1     		bne	.L185
1319:main.c        ****         {
1320:main.c        ****             myArray[0] = 12;
 6029              		.loc 1 1320 0
 6030 1fa6 534B     		ldr	r3, .L248+4
 6031 1fa8 0C22     		movs	r2, #12
 6032 1faa 1A70     		strb	r2, [r3]
1321:main.c        ****             myArray[1] = 0;
 6033              		.loc 1 1321 0
 6034 1fac 514B     		ldr	r3, .L248+4
 6035 1fae 0022     		movs	r2, #0
 6036 1fb0 5A70     		strb	r2, [r3, #1]
1322:main.c        ****             myArray[30] = 254;
 6037              		.loc 1 1322 0
 6038 1fb2 504B     		ldr	r3, .L248+4
 6039 1fb4 FE22     		movs	r2, #254
 6040 1fb6 9A77     		strb	r2, [r3, #30]
1323:main.c        ****             myArray[31] = 253;
 6041              		.loc 1 1323 0
 6042 1fb8 4E4B     		ldr	r3, .L248+4
 6043 1fba FD22     		movs	r2, #253
 6044 1fbc DA77     		strb	r2, [r3, #31]
1324:main.c        ****             sendFirmwareUpdateRequest = 0;
 6045              		.loc 1 1324 0
 6046 1fbe 564B     		ldr	r3, .L248+40
 6047 1fc0 0022     		movs	r2, #0
 6048 1fc2 1A70     		strb	r2, [r3]
 6049 1fc4 7BE1     		b	.L180
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 132


 6050              	.L185:
1325:main.c        ****         }
1326:main.c        ****         
1327:main.c        ****         else if (sendLocalPresetStoreCommand == 1)
 6051              		.loc 1 1327 0
 6052 1fc6 554B     		ldr	r3, .L248+44
 6053 1fc8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6054 1fca 012B     		cmp	r3, #1
 6055 1fcc 56D1     		bne	.L186
1328:main.c        ****         {
1329:main.c        ****             myArray[0] = 14;
 6056              		.loc 1 1329 0
 6057 1fce 494B     		ldr	r3, .L248+4
 6058 1fd0 0E22     		movs	r2, #14
 6059 1fd2 1A70     		strb	r2, [r3]
1330:main.c        ****             myArray[1] = presetNumberToStore;
 6060              		.loc 1 1330 0
 6061 1fd4 524B     		ldr	r3, .L248+48
 6062 1fd6 93F90030 		ldrsb	r3, [r3]
 6063 1fda DAB2     		uxtb	r2, r3
 6064 1fdc 454B     		ldr	r3, .L248+4
 6065 1fde 5A70     		strb	r2, [r3, #1]
1331:main.c        ****             myArray[2] = 17;
 6066              		.loc 1 1331 0
 6067 1fe0 444B     		ldr	r3, .L248+4
 6068 1fe2 1122     		movs	r2, #17
 6069 1fe4 9A70     		strb	r2, [r3, #2]
1332:main.c        ****             myArray[3] = 18;
 6070              		.loc 1 1332 0
 6071 1fe6 434B     		ldr	r3, .L248+4
 6072 1fe8 1222     		movs	r2, #18
 6073 1fea DA70     		strb	r2, [r3, #3]
1333:main.c        ****             myArray[4] = 1;
 6074              		.loc 1 1333 0
 6075 1fec 414B     		ldr	r3, .L248+4
 6076 1fee 0122     		movs	r2, #1
 6077 1ff0 1A71     		strb	r2, [r3, #4]
1334:main.c        ****             myArray[5] = 1;
 6078              		.loc 1 1334 0
 6079 1ff2 404B     		ldr	r3, .L248+4
 6080 1ff4 0122     		movs	r2, #1
 6081 1ff6 5A71     		strb	r2, [r3, #5]
1335:main.c        ****             myArray[30] = 254;
 6082              		.loc 1 1335 0
 6083 1ff8 3E4B     		ldr	r3, .L248+4
 6084 1ffa FE22     		movs	r2, #254
 6085 1ffc 9A77     		strb	r2, [r3, #30]
1336:main.c        ****             myArray[31] = 253;
 6086              		.loc 1 1336 0
 6087 1ffe 3D4B     		ldr	r3, .L248+4
 6088 2000 FD22     		movs	r2, #253
 6089 2002 DA77     		strb	r2, [r3, #31]
 6090              	.LBB43:
1337:main.c        ****             for (int i = 0; i < 14; i++)
 6091              		.loc 1 1337 0
 6092 2004 0023     		movs	r3, #0
 6093 2006 7B67     		str	r3, [r7, #116]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 133


 6094 2008 0AE0     		b	.L187
 6095              	.L188:
1338:main.c        ****             {
1339:main.c        ****                  myArray[i+6] = newPresetName[i];
 6096              		.loc 1 1339 0 discriminator 3
 6097 200a 7B6F     		ldr	r3, [r7, #116]
 6098 200c 0633     		adds	r3, r3, #6
 6099 200e 4549     		ldr	r1, .L248+52
 6100 2010 7A6F     		ldr	r2, [r7, #116]
 6101 2012 0A44     		add	r2, r2, r1
 6102 2014 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6103 2016 374A     		ldr	r2, .L248+4
 6104 2018 D154     		strb	r1, [r2, r3]
1337:main.c        ****             for (int i = 0; i < 14; i++)
 6105              		.loc 1 1337 0 discriminator 3
 6106 201a 7B6F     		ldr	r3, [r7, #116]
 6107 201c 0133     		adds	r3, r3, #1
 6108 201e 7B67     		str	r3, [r7, #116]
 6109              	.L187:
1337:main.c        ****             for (int i = 0; i < 14; i++)
 6110              		.loc 1 1337 0 is_stmt 0 discriminator 1
 6111 2020 7B6F     		ldr	r3, [r7, #116]
 6112 2022 0D2B     		cmp	r3, #13
 6113 2024 F1DD     		ble	.L188
 6114              	.LBE43:
1340:main.c        ****             }
1341:main.c        ****             sendLocalPresetStoreCommand = 0;
 6115              		.loc 1 1341 0 is_stmt 1
 6116 2026 3D4B     		ldr	r3, .L248+44
 6117 2028 0022     		movs	r2, #0
 6118 202a 1A70     		strb	r2, [r3]
1342:main.c        ****             patchNum = presetNumberToStore;
 6119              		.loc 1 1342 0
 6120 202c 3C4B     		ldr	r3, .L248+48
 6121 202e 93F90030 		ldrsb	r3, [r3]
 6122 2032 DAB2     		uxtb	r2, r3
 6123 2034 3C4B     		ldr	r3, .L248+56
 6124 2036 1A70     		strb	r2, [r3]
1343:main.c        ****             EEPROM_WriteByte(patchNum, EEPROM_CURRENT_PRESET_OFFSET);
 6125              		.loc 1 1343 0
 6126 2038 3B4B     		ldr	r3, .L248+56
 6127 203a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6128 203c 40F2D671 		movw	r1, #2006
 6129 2040 1846     		mov	r0, r3
 6130 2042 FFF7FEFF 		bl	EEPROM_WriteByte
1344:main.c        ****             neckPreset[currentNeck] = patchNum;
 6131              		.loc 1 1344 0
 6132 2046 394B     		ldr	r3, .L248+60
 6133 2048 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6134 204a 1A46     		mov	r2, r3
 6135 204c 364B     		ldr	r3, .L248+56
 6136 204e 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 6137 2050 374B     		ldr	r3, .L248+64
 6138 2052 9954     		strb	r1, [r3, r2]
1345:main.c        ****             EEPROM_WriteByte(patchNum, EEPROM_NECK_PRESETS_OFFSET + currentNeck);
 6139              		.loc 1 1345 0
 6140 2054 344B     		ldr	r3, .L248+56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 134


 6141 2056 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6142 2058 344B     		ldr	r3, .L248+60
 6143 205a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6144 205c 9BB2     		uxth	r3, r3
 6145 205e 03F2DC73 		addw	r3, r3, #2012
 6146 2062 9BB2     		uxth	r3, r3
 6147 2064 1946     		mov	r1, r3
 6148 2066 1046     		mov	r0, r2
 6149 2068 FFF7FEFF 		bl	EEPROM_WriteByte
1346:main.c        ****             presetAlreadyDisplayed[presetNumberToStore] = 0;
 6150              		.loc 1 1346 0
 6151 206c 2C4B     		ldr	r3, .L248+48
 6152 206e 93F90030 		ldrsb	r3, [r3]
 6153 2072 1A46     		mov	r2, r3
 6154 2074 2F4B     		ldr	r3, .L248+68
 6155 2076 0021     		movs	r1, #0
 6156 2078 9954     		strb	r1, [r3, r2]
 6157 207a 20E1     		b	.L180
 6158              	.L186:
1347:main.c        ****         }
1348:main.c        ****         
1349:main.c        ****         else if (sendKnobs)
 6159              		.loc 1 1349 0
 6160 207c 2E4B     		ldr	r3, .L248+72
 6161 207e 1B78     		ldrb	r3, [r3]
 6162 2080 DBB2     		uxtb	r3, r3
 6163 2082 002B     		cmp	r3, #0
 6164 2084 00F0AE80 		beq	.L189
1350:main.c        ****         {
1351:main.c        ****             if (whichMacroPageIsActive == 0)
 6165              		.loc 1 1351 0
 6166 2088 2C4B     		ldr	r3, .L248+76
 6167 208a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6168 208c 002B     		cmp	r3, #0
 6169 208e 03D1     		bne	.L190
1352:main.c        ****             {
1353:main.c        ****                 myArray[0] = 3; //sending knob stuff, not a preset send
 6170              		.loc 1 1353 0
 6171 2090 184B     		ldr	r3, .L248+4
 6172 2092 0322     		movs	r2, #3
 6173 2094 1A70     		strb	r2, [r3]
 6174 2096 02E0     		b	.L191
 6175              	.L190:
1354:main.c        ****             }
1355:main.c        ****             else
1356:main.c        ****             {
1357:main.c        ****                 myArray[0] = 13; //sending additional knob stuff, not a preset send
 6176              		.loc 1 1357 0
 6177 2098 164B     		ldr	r3, .L248+4
 6178 209a 0D22     		movs	r2, #13
 6179 209c 1A70     		strb	r2, [r3]
 6180              	.L191:
 6181              	.LBB44:
1358:main.c        ****             }
1359:main.c        ****             for (int i = 0; i < 8; i++)
 6182              		.loc 1 1359 0
 6183 209e 0023     		movs	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 135


 6184 20a0 3B67     		str	r3, [r7, #112]
 6185 20a2 0DE0     		b	.L192
 6186              	.L193:
1360:main.c        ****             {
1361:main.c        ****                 myArray[i + 1] = macroKnobValues[i+whichMacroPageIsActive];
 6187              		.loc 1 1361 0 discriminator 3
 6188 20a4 3B6F     		ldr	r3, [r7, #112]
 6189 20a6 0133     		adds	r3, r3, #1
 6190 20a8 244A     		ldr	r2, .L248+76
 6191 20aa 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 6192 20ac 1146     		mov	r1, r2
 6193 20ae 3A6F     		ldr	r2, [r7, #112]
 6194 20b0 0A44     		add	r2, r2, r1
 6195 20b2 2349     		ldr	r1, .L248+80
 6196 20b4 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 6197 20b6 0F4A     		ldr	r2, .L248+4
 6198 20b8 D154     		strb	r1, [r2, r3]
1359:main.c        ****             {
 6199              		.loc 1 1359 0 discriminator 3
 6200 20ba 3B6F     		ldr	r3, [r7, #112]
 6201 20bc 0133     		adds	r3, r3, #1
 6202 20be 3B67     		str	r3, [r7, #112]
 6203              	.L192:
1359:main.c        ****             {
 6204              		.loc 1 1359 0 is_stmt 0 discriminator 1
 6205 20c0 3B6F     		ldr	r3, [r7, #112]
 6206 20c2 072B     		cmp	r3, #7
 6207 20c4 EEDD     		ble	.L193
 6208              	.LBE44:
 6209              	.LBB45:
1362:main.c        ****             }
1363:main.c        ****             for (int i = 0; i < 4; i++)
 6210              		.loc 1 1363 0 is_stmt 1
 6211 20c6 0023     		movs	r3, #0
 6212 20c8 FB66     		str	r3, [r7, #108]
 6213 20ca 0AE0     		b	.L194
 6214              	.L195:
1364:main.c        ****             {
1365:main.c        ****                 myArray[i + 9] = knobs[i];
 6215              		.loc 1 1365 0 discriminator 3
 6216 20cc FB6E     		ldr	r3, [r7, #108]
 6217 20ce 0933     		adds	r3, r3, #9
 6218 20d0 1C49     		ldr	r1, .L248+84
 6219 20d2 FA6E     		ldr	r2, [r7, #108]
 6220 20d4 0A44     		add	r2, r2, r1
 6221 20d6 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6222 20d8 064A     		ldr	r2, .L248+4
 6223 20da D154     		strb	r1, [r2, r3]
1363:main.c        ****             {
 6224              		.loc 1 1363 0 discriminator 3
 6225 20dc FB6E     		ldr	r3, [r7, #108]
 6226 20de 0133     		adds	r3, r3, #1
 6227 20e0 FB66     		str	r3, [r7, #108]
 6228              	.L194:
1363:main.c        ****             {
 6229              		.loc 1 1363 0 is_stmt 0 discriminator 1
 6230 20e2 FB6E     		ldr	r3, [r7, #108]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 136


 6231 20e4 032B     		cmp	r3, #3
 6232 20e6 F1DD     		ble	.L195
 6233              	.LBE45:
 6234              	.LBB46:
1366:main.c        ****             }
1367:main.c        ****             for (int i = 0; i < 10; i++)
 6235              		.loc 1 1367 0 is_stmt 1
 6236 20e8 0023     		movs	r3, #0
 6237 20ea BB66     		str	r3, [r7, #104]
 6238 20ec 37E0     		b	.L196
 6239              	.L249:
 6240 20ee 00BF     		.align	2
 6241              	.L248:
 6242 20f0 00000000 		.word	sendSingleParamUpdate
 6243 20f4 00000000 		.word	myArray
 6244 20f8 00000000 		.word	singleParamToUpdateHigh
 6245 20fc 00000000 		.word	singleParamToUpdateLow
 6246 2100 00000000 		.word	singleParamValueHigh
 6247 2104 00000000 		.word	singleParamValueLow
 6248 2108 00000000 		.word	sendMappingChangeUpdate
 6249 210c 00000000 		.word	mappingArray
 6250 2110 00000000 		.word	volumeWaitingToSend
 6251 2114 00000000 		.word	volumeInt
 6252 2118 00000000 		.word	sendFirmwareUpdateRequest
 6253 211c 00000000 		.word	sendLocalPresetStoreCommand
 6254 2120 00000000 		.word	presetNumberToStore
 6255 2124 00000000 		.word	newPresetName
 6256 2128 00000000 		.word	patchNum
 6257 212c 00000000 		.word	currentNeck
 6258 2130 00000000 		.word	neckPreset
 6259 2134 00000000 		.word	presetAlreadyDisplayed
 6260 2138 00000000 		.word	sendKnobs
 6261 213c 00000000 		.word	whichMacroPageIsActive
 6262 2140 00000000 		.word	macroKnobValues
 6263 2144 00000000 		.word	knobs
 6264              	.L197:
1368:main.c        ****             {
1369:main.c        ****                 myArray[i + 13] = pedals8bit[i];
 6265              		.loc 1 1369 0 discriminator 3
 6266 2148 BB6E     		ldr	r3, [r7, #104]
 6267 214a 0D33     		adds	r3, r3, #13
 6268 214c 9A49     		ldr	r1, .L250
 6269 214e BA6E     		ldr	r2, [r7, #104]
 6270 2150 0A44     		add	r2, r2, r1
 6271 2152 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 6272 2154 994A     		ldr	r2, .L250+4
 6273 2156 D154     		strb	r1, [r2, r3]
1367:main.c        ****             {
 6274              		.loc 1 1367 0 discriminator 3
 6275 2158 BB6E     		ldr	r3, [r7, #104]
 6276 215a 0133     		adds	r3, r3, #1
 6277 215c BB66     		str	r3, [r7, #104]
 6278              	.L196:
1367:main.c        ****             {
 6279              		.loc 1 1367 0 is_stmt 0 discriminator 1
 6280 215e BB6E     		ldr	r3, [r7, #104]
 6281 2160 092B     		cmp	r3, #9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 137


 6282 2162 F1DD     		ble	.L197
 6283              	.LBE46:
1370:main.c        ****             }
1371:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 6284              		.loc 1 1371 0 is_stmt 1
 6285 2164 964B     		ldr	r3, .L250+8
 6286 2166 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6287 2168 1B01     		lsls	r3, r3, #4
 6288 216a 5AB2     		sxtb	r2, r3
 6289 216c 954B     		ldr	r3, .L250+12
 6290 216e 1B68     		ldr	r3, [r3]
 6291 2170 5BB2     		sxtb	r3, r3
 6292 2172 1343     		orrs	r3, r3, r2
 6293 2174 5AB2     		sxtb	r2, r3
 6294 2176 944B     		ldr	r3, .L250+16
 6295 2178 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6296 217a 5B01     		lsls	r3, r3, #5
 6297 217c 5BB2     		sxtb	r3, r3
 6298 217e 1343     		orrs	r3, r3, r2
 6299 2180 5AB2     		sxtb	r2, r3
 6300 2182 924B     		ldr	r3, .L250+20
 6301 2184 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6302 2186 9B01     		lsls	r3, r3, #6
 6303 2188 5BB2     		sxtb	r3, r3
 6304 218a 1343     		orrs	r3, r3, r2
 6305 218c 5BB2     		sxtb	r3, r3
 6306 218e DAB2     		uxtb	r2, r3
 6307 2190 8A4B     		ldr	r3, .L250+4
 6308 2192 1A76     		strb	r2, [r3, #24]
1372:main.c        ****             myArray[25] = patchNum;
 6309              		.loc 1 1372 0
 6310 2194 8E4B     		ldr	r3, .L250+24
 6311 2196 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6312 2198 884B     		ldr	r3, .L250+4
 6313 219a 5A76     		strb	r2, [r3, #25]
1373:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 6314              		.loc 1 1373 0
 6315 219c 8D4B     		ldr	r3, .L250+28
 6316 219e B3F90030 		ldrsh	r3, [r3]
 6317 21a2 1B12     		asrs	r3, r3, #8
 6318 21a4 1BB2     		sxth	r3, r3
 6319 21a6 DAB2     		uxtb	r2, r3
 6320 21a8 844B     		ldr	r3, .L250+4
 6321 21aa 9A76     		strb	r2, [r3, #26]
1374:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 6322              		.loc 1 1374 0
 6323 21ac 894B     		ldr	r3, .L250+28
 6324 21ae B3F90030 		ldrsh	r3, [r3]
 6325 21b2 DAB2     		uxtb	r2, r3
 6326 21b4 814B     		ldr	r3, .L250+4
 6327 21b6 DA76     		strb	r2, [r3, #27]
1375:main.c        ****             myArray[28] = barMidiOuterStrings[1] >> 8;
 6328              		.loc 1 1375 0
 6329 21b8 874B     		ldr	r3, .L250+32
 6330 21ba 5B88     		ldrh	r3, [r3, #2]
 6331 21bc 1B0A     		lsrs	r3, r3, #8
 6332 21be 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 138


 6333 21c0 DAB2     		uxtb	r2, r3
 6334 21c2 7E4B     		ldr	r3, .L250+4
 6335 21c4 1A77     		strb	r2, [r3, #28]
1376:main.c        ****             myArray[29] = barMidiOuterStrings[1] & 0xff;
 6336              		.loc 1 1376 0
 6337 21c6 844B     		ldr	r3, .L250+32
 6338 21c8 5B88     		ldrh	r3, [r3, #2]
 6339 21ca DAB2     		uxtb	r2, r3
 6340 21cc 7B4B     		ldr	r3, .L250+4
 6341 21ce 5A77     		strb	r2, [r3, #29]
1377:main.c        ****             myArray[30] = 254;
 6342              		.loc 1 1377 0
 6343 21d0 7A4B     		ldr	r3, .L250+4
 6344 21d2 FE22     		movs	r2, #254
 6345 21d4 9A77     		strb	r2, [r3, #30]
1378:main.c        ****             myArray[31] = 253;
 6346              		.loc 1 1378 0
 6347 21d6 794B     		ldr	r3, .L250+4
 6348 21d8 FD22     		movs	r2, #253
 6349 21da DA77     		strb	r2, [r3, #31]
1379:main.c        ****             
1380:main.c        ****             
1381:main.c        ****             sendKnobs = 0;
 6350              		.loc 1 1381 0
 6351 21dc 7F4B     		ldr	r3, .L250+36
 6352 21de 0022     		movs	r2, #0
 6353 21e0 1A70     		strb	r2, [r3]
 6354 21e2 6CE0     		b	.L180
 6355              	.L189:
1382:main.c        ****         }
1383:main.c        ****         else
1384:main.c        ****         {
1385:main.c        ****             myArray[0] = 1; //sending normal pitch stuff, not a preset send
 6356              		.loc 1 1385 0
 6357 21e4 754B     		ldr	r3, .L250+4
 6358 21e6 0122     		movs	r2, #1
 6359 21e8 1A70     		strb	r2, [r3]
 6360              	.LBB47:
1386:main.c        ****             for (int i = 0; i < 12; i++)
 6361              		.loc 1 1386 0
 6362 21ea 0023     		movs	r3, #0
 6363 21ec 7B66     		str	r3, [r7, #100]
 6364 21ee 24E0     		b	.L198
 6365              	.L199:
 6366              	.LBB48:
1387:main.c        ****             {
1388:main.c        ****                 int scaledMIDI = roundf(stringMIDI[i] * 512.0f); // divide by 128 multiply by 65535
 6367              		.loc 1 1388 0 discriminator 3
 6368 21f0 7B4A     		ldr	r2, .L250+40
 6369 21f2 7B6E     		ldr	r3, [r7, #100]
 6370 21f4 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 6371 21f8 4FF08841 		mov	r1, #1140850688
 6372 21fc 1846     		mov	r0, r3
 6373 21fe FFF7FEFF 		bl	__aeabi_fmul
 6374 2202 0346     		mov	r3, r0
 6375 2204 1846     		mov	r0, r3
 6376 2206 FFF7FEFF 		bl	roundf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 139


 6377 220a 0346     		mov	r3, r0
 6378 220c 1846     		mov	r0, r3
 6379 220e FFF7FEFF 		bl	__aeabi_f2iz
 6380 2212 0346     		mov	r3, r0
 6381 2214 3B61     		str	r3, [r7, #16]
1389:main.c        ****                 myArray[i * 2 + 1] = scaledMIDI >> 8;
 6382              		.loc 1 1389 0 discriminator 3
 6383 2216 7B6E     		ldr	r3, [r7, #100]
 6384 2218 5B00     		lsls	r3, r3, #1
 6385 221a 0133     		adds	r3, r3, #1
 6386 221c 3A69     		ldr	r2, [r7, #16]
 6387 221e 1212     		asrs	r2, r2, #8
 6388 2220 D1B2     		uxtb	r1, r2
 6389 2222 664A     		ldr	r2, .L250+4
 6390 2224 D154     		strb	r1, [r2, r3]
1390:main.c        ****                 myArray[(i * 2) + 2] = scaledMIDI & 255;
 6391              		.loc 1 1390 0 discriminator 3
 6392 2226 7B6E     		ldr	r3, [r7, #100]
 6393 2228 0133     		adds	r3, r3, #1
 6394 222a 5B00     		lsls	r3, r3, #1
 6395 222c 3A69     		ldr	r2, [r7, #16]
 6396 222e D1B2     		uxtb	r1, r2
 6397 2230 624A     		ldr	r2, .L250+4
 6398 2232 D154     		strb	r1, [r2, r3]
 6399              	.LBE48:
1386:main.c        ****             {
 6400              		.loc 1 1386 0 discriminator 3
 6401 2234 7B6E     		ldr	r3, [r7, #100]
 6402 2236 0133     		adds	r3, r3, #1
 6403 2238 7B66     		str	r3, [r7, #100]
 6404              	.L198:
1386:main.c        ****             {
 6405              		.loc 1 1386 0 is_stmt 0 discriminator 1
 6406 223a 7B6E     		ldr	r3, [r7, #100]
 6407 223c 0B2B     		cmp	r3, #11
 6408 223e D7DD     		ble	.L199
 6409              	.LBE47:
1391:main.c        ****             }
1392:main.c        ****             
1393:main.c        ****             myArray[24] = octave | (voice << 4) | (dualSlider << 5) | (octaveAction << 6);
 6410              		.loc 1 1393 0 is_stmt 1
 6411 2240 5F4B     		ldr	r3, .L250+8
 6412 2242 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6413 2244 1B01     		lsls	r3, r3, #4
 6414 2246 5AB2     		sxtb	r2, r3
 6415 2248 5E4B     		ldr	r3, .L250+12
 6416 224a 1B68     		ldr	r3, [r3]
 6417 224c 5BB2     		sxtb	r3, r3
 6418 224e 1343     		orrs	r3, r3, r2
 6419 2250 5AB2     		sxtb	r2, r3
 6420 2252 5D4B     		ldr	r3, .L250+16
 6421 2254 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6422 2256 5B01     		lsls	r3, r3, #5
 6423 2258 5BB2     		sxtb	r3, r3
 6424 225a 1343     		orrs	r3, r3, r2
 6425 225c 5AB2     		sxtb	r2, r3
 6426 225e 5B4B     		ldr	r3, .L250+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 140


 6427 2260 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6428 2262 9B01     		lsls	r3, r3, #6
 6429 2264 5BB2     		sxtb	r3, r3
 6430 2266 1343     		orrs	r3, r3, r2
 6431 2268 5BB2     		sxtb	r3, r3
 6432 226a DAB2     		uxtb	r2, r3
 6433 226c 534B     		ldr	r3, .L250+4
 6434 226e 1A76     		strb	r2, [r3, #24]
1394:main.c        ****             myArray[25] = patchNum;
 6435              		.loc 1 1394 0
 6436 2270 574B     		ldr	r3, .L250+24
 6437 2272 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 6438 2274 514B     		ldr	r3, .L250+4
 6439 2276 5A76     		strb	r2, [r3, #25]
1395:main.c        ****             myArray[26] = processed_volumePedal >> 8;
 6440              		.loc 1 1395 0
 6441 2278 564B     		ldr	r3, .L250+28
 6442 227a B3F90030 		ldrsh	r3, [r3]
 6443 227e 1B12     		asrs	r3, r3, #8
 6444 2280 1BB2     		sxth	r3, r3
 6445 2282 DAB2     		uxtb	r2, r3
 6446 2284 4D4B     		ldr	r3, .L250+4
 6447 2286 9A76     		strb	r2, [r3, #26]
1396:main.c        ****             myArray[27] = processed_volumePedal & 0xff;
 6448              		.loc 1 1396 0
 6449 2288 524B     		ldr	r3, .L250+28
 6450 228a B3F90030 		ldrsh	r3, [r3]
 6451 228e DAB2     		uxtb	r2, r3
 6452 2290 4A4B     		ldr	r3, .L250+4
 6453 2292 DA76     		strb	r2, [r3, #27]
1397:main.c        ****             myArray[28] = barMidiOuterStrings[0] >> 8;
 6454              		.loc 1 1397 0
 6455 2294 504B     		ldr	r3, .L250+32
 6456 2296 1B88     		ldrh	r3, [r3]
 6457 2298 1B0A     		lsrs	r3, r3, #8
 6458 229a 9BB2     		uxth	r3, r3
 6459 229c DAB2     		uxtb	r2, r3
 6460 229e 474B     		ldr	r3, .L250+4
 6461 22a0 1A77     		strb	r2, [r3, #28]
1398:main.c        ****             myArray[29] = barMidiOuterStrings[0] & 0xff;
 6462              		.loc 1 1398 0
 6463 22a2 4D4B     		ldr	r3, .L250+32
 6464 22a4 1B88     		ldrh	r3, [r3]
 6465 22a6 DAB2     		uxtb	r2, r3
 6466 22a8 444B     		ldr	r3, .L250+4
 6467 22aa 5A77     		strb	r2, [r3, #29]
1399:main.c        ****             myArray[30] = 254;
 6468              		.loc 1 1399 0
 6469 22ac 434B     		ldr	r3, .L250+4
 6470 22ae FE22     		movs	r2, #254
 6471 22b0 9A77     		strb	r2, [r3, #30]
1400:main.c        ****             myArray[31] = 253;
 6472              		.loc 1 1400 0
 6473 22b2 424B     		ldr	r3, .L250+4
 6474 22b4 FD22     		movs	r2, #253
 6475 22b6 DA77     		strb	r2, [r3, #31]
1401:main.c        ****             
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 141


1402:main.c        ****             sendKnobs = 1; // for next time around, might make this slower though
 6476              		.loc 1 1402 0
 6477 22b8 484B     		ldr	r3, .L250+36
 6478 22ba 0122     		movs	r2, #1
 6479 22bc 1A70     		strb	r2, [r3]
 6480              	.L180:
1403:main.c        ****         }
1404:main.c        **** 
1405:main.c        ****         //parse input from synth board (names)
1406:main.c        ****         if ((inBuffer[0] == 253) && (inBuffer[31] == 254))
 6481              		.loc 1 1406 0
 6482 22be 494B     		ldr	r3, .L250+44
 6483 22c0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6484 22c2 FD2B     		cmp	r3, #253
 6485 22c4 40F0C980 		bne	.L200
 6486              		.loc 1 1406 0 is_stmt 0 discriminator 1
 6487 22c8 464B     		ldr	r3, .L250+44
 6488 22ca DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 6489 22cc FE2B     		cmp	r3, #254
 6490 22ce 40F0C480 		bne	.L200
 6491              	.LBB49:
1407:main.c        ****         {
1408:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6492              		.loc 1 1408 0 is_stmt 1
 6493 22d2 444B     		ldr	r3, .L250+44
 6494 22d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6495 22d6 FB60     		str	r3, [r7, #12]
1409:main.c        ****             int whichMacroToStoreName = inBuffer[16];
 6496              		.loc 1 1409 0
 6497 22d8 424B     		ldr	r3, .L250+44
 6498 22da 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 6499 22dc BB60     		str	r3, [r7, #8]
1410:main.c        ****             int bufferPointer = 2;
 6500              		.loc 1 1410 0
 6501 22de 0223     		movs	r3, #2
 6502 22e0 3B66     		str	r3, [r7, #96]
 6503              	.LBB50:
1411:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6504              		.loc 1 1411 0
 6505 22e2 0023     		movs	r3, #0
 6506 22e4 FB65     		str	r3, [r7, #92]
 6507 22e6 14E0     		b	.L201
 6508              	.L202:
1412:main.c        ****             {
1413:main.c        ****                 presetNamesArray[whichPresetToStoreName][i] = inBuffer[bufferPointer];
 6509              		.loc 1 1413 0 discriminator 3
 6510 22e8 3E4A     		ldr	r2, .L250+44
 6511 22ea 3B6E     		ldr	r3, [r7, #96]
 6512 22ec 1344     		add	r3, r3, r2
 6513 22ee 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 6514 22f0 3D49     		ldr	r1, .L250+48
 6515 22f2 FA68     		ldr	r2, [r7, #12]
 6516 22f4 1346     		mov	r3, r2
 6517 22f6 DB00     		lsls	r3, r3, #3
 6518 22f8 9B1A     		subs	r3, r3, r2
 6519 22fa 5B00     		lsls	r3, r3, #1
 6520 22fc CA18     		adds	r2, r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 142


 6521 22fe FB6D     		ldr	r3, [r7, #92]
 6522 2300 1344     		add	r3, r3, r2
 6523 2302 0246     		mov	r2, r0
 6524 2304 1A70     		strb	r2, [r3]
1414:main.c        ****                 bufferPointer++;
 6525              		.loc 1 1414 0 discriminator 3
 6526 2306 3B6E     		ldr	r3, [r7, #96]
 6527 2308 0133     		adds	r3, r3, #1
 6528 230a 3B66     		str	r3, [r7, #96]
1411:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6529              		.loc 1 1411 0 discriminator 3
 6530 230c FB6D     		ldr	r3, [r7, #92]
 6531 230e 0133     		adds	r3, r3, #1
 6532 2310 FB65     		str	r3, [r7, #92]
 6533              	.L201:
1411:main.c        ****             for (int i = 0; i < PRESET_NAME_LENGTH_IN_BYTES; i++)
 6534              		.loc 1 1411 0 is_stmt 0 discriminator 1
 6535 2312 FB6D     		ldr	r3, [r7, #92]
 6536 2314 0D2B     		cmp	r3, #13
 6537 2316 E7DD     		ble	.L202
 6538              	.LBE50:
1415:main.c        ****             }
1416:main.c        ****             bufferPointer = 17;
 6539              		.loc 1 1416 0 is_stmt 1
 6540 2318 1123     		movs	r3, #17
 6541 231a 3B66     		str	r3, [r7, #96]
1417:main.c        ****             if (whichMacroToStoreName < 8)
 6542              		.loc 1 1417 0
 6543 231c BB68     		ldr	r3, [r7, #8]
 6544 231e 072B     		cmp	r3, #7
 6545 2320 20DC     		bgt	.L203
 6546              	.LBB51:
1418:main.c        ****             {
1419:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 6547              		.loc 1 1419 0
 6548 2322 0023     		movs	r3, #0
 6549 2324 BB65     		str	r3, [r7, #88]
 6550 2326 19E0     		b	.L204
 6551              	.L205:
1420:main.c        ****                 {
1421:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName][i] = inBuffer[bu
 6552              		.loc 1 1421 0 discriminator 3
 6553 2328 2E4A     		ldr	r2, .L250+44
 6554 232a 3B6E     		ldr	r3, [r7, #96]
 6555 232c 1344     		add	r3, r3, r2
 6556 232e 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 6557 2330 2E48     		ldr	r0, .L250+52
 6558 2332 BB68     		ldr	r3, [r7, #8]
 6559 2334 F968     		ldr	r1, [r7, #12]
 6560 2336 1A46     		mov	r2, r3
 6561 2338 D200     		lsls	r2, r2, #3
 6562 233a 1A44     		add	r2, r2, r3
 6563 233c 0B46     		mov	r3, r1
 6564 233e DB00     		lsls	r3, r3, #3
 6565 2340 0B44     		add	r3, r3, r1
 6566 2342 1B01     		lsls	r3, r3, #4
 6567 2344 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 143


 6568 2346 C218     		adds	r2, r0, r3
 6569 2348 BB6D     		ldr	r3, [r7, #88]
 6570 234a 1344     		add	r3, r3, r2
 6571 234c 2246     		mov	r2, r4
 6572 234e 1A70     		strb	r2, [r3]
1422:main.c        ****                     bufferPointer++;
 6573              		.loc 1 1422 0 discriminator 3
 6574 2350 3B6E     		ldr	r3, [r7, #96]
 6575 2352 0133     		adds	r3, r3, #1
 6576 2354 3B66     		str	r3, [r7, #96]
1419:main.c        ****                 {
 6577              		.loc 1 1419 0 discriminator 3
 6578 2356 BB6D     		ldr	r3, [r7, #88]
 6579 2358 0133     		adds	r3, r3, #1
 6580 235a BB65     		str	r3, [r7, #88]
 6581              	.L204:
1419:main.c        ****                 {
 6582              		.loc 1 1419 0 is_stmt 0 discriminator 1
 6583 235c BB6D     		ldr	r3, [r7, #88]
 6584 235e 082B     		cmp	r3, #8
 6585 2360 E2DD     		ble	.L205
 6586 2362 65E0     		b	.L206
 6587              	.L203:
 6588              	.LBE51:
1423:main.c        ****                 }
1424:main.c        ****             }
1425:main.c        ****             else if (whichMacroToStoreName < 12) //if it's macro #8-12 it's actually a control knob
 6589              		.loc 1 1425 0 is_stmt 1
 6590 2364 BB68     		ldr	r3, [r7, #8]
 6591 2366 0B2B     		cmp	r3, #11
 6592 2368 23DC     		bgt	.L207
 6593              	.LBB52:
1426:main.c        ****             {
1427:main.c        ****                 for (int i = 0; i < CONTROL_NAME_LENGTH_IN_BYTES; i++)
 6594              		.loc 1 1427 0
 6595 236a 0023     		movs	r3, #0
 6596 236c 7B65     		str	r3, [r7, #84]
 6597 236e 1CE0     		b	.L208
 6598              	.L209:
1428:main.c        ****                 {
1429:main.c        ****                     controlNamesArray[whichPresetToStoreName][(whichMacroToStoreName - 8)][i] = inB
 6599              		.loc 1 1429 0 discriminator 3
 6600 2370 BB68     		ldr	r3, [r7, #8]
 6601 2372 083B     		subs	r3, r3, #8
 6602 2374 1B49     		ldr	r1, .L250+44
 6603 2376 3A6E     		ldr	r2, [r7, #96]
 6604 2378 0A44     		add	r2, r2, r1
 6605 237a 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 6606 237c 1C48     		ldr	r0, .L250+56
 6607 237e F968     		ldr	r1, [r7, #12]
 6608 2380 1A46     		mov	r2, r3
 6609 2382 9200     		lsls	r2, r2, #2
 6610 2384 1A44     		add	r2, r2, r3
 6611 2386 5300     		lsls	r3, r2, #1
 6612 2388 1A46     		mov	r2, r3
 6613 238a 0B46     		mov	r3, r1
 6614 238c 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 144


 6615 238e 0B44     		add	r3, r3, r1
 6616 2390 DB00     		lsls	r3, r3, #3
 6617 2392 1344     		add	r3, r3, r2
 6618 2394 C218     		adds	r2, r0, r3
 6619 2396 7B6D     		ldr	r3, [r7, #84]
 6620 2398 1344     		add	r3, r3, r2
 6621 239a 2246     		mov	r2, r4
 6622 239c 1A70     		strb	r2, [r3]
1430:main.c        ****                     bufferPointer++;
 6623              		.loc 1 1430 0 discriminator 3
 6624 239e 3B6E     		ldr	r3, [r7, #96]
 6625 23a0 0133     		adds	r3, r3, #1
 6626 23a2 3B66     		str	r3, [r7, #96]
1427:main.c        ****                 {
 6627              		.loc 1 1427 0 discriminator 3
 6628 23a4 7B6D     		ldr	r3, [r7, #84]
 6629 23a6 0133     		adds	r3, r3, #1
 6630 23a8 7B65     		str	r3, [r7, #84]
 6631              	.L208:
1427:main.c        ****                 {
 6632              		.loc 1 1427 0 is_stmt 0 discriminator 1
 6633 23aa 7B6D     		ldr	r3, [r7, #84]
 6634 23ac 092B     		cmp	r3, #9
 6635 23ae DFDD     		ble	.L209
 6636 23b0 3EE0     		b	.L206
 6637              	.L207:
 6638              	.LBE52:
 6639              	.LBB53:
1431:main.c        ****                 }
1432:main.c        ****             }
1433:main.c        ****             else
1434:main.c        ****             {
1435:main.c        ****                 for (int i = 0; i < MACRO_NAME_LENGTH_IN_BYTES; i++)
 6640              		.loc 1 1435 0 is_stmt 1
 6641 23b2 0023     		movs	r3, #0
 6642 23b4 3B65     		str	r3, [r7, #80]
 6643 23b6 38E0     		b	.L210
 6644              	.L251:
 6645              		.align	2
 6646              	.L250:
 6647 23b8 00000000 		.word	pedals8bit
 6648 23bc 00000000 		.word	myArray
 6649 23c0 00000000 		.word	voice
 6650 23c4 00000000 		.word	octave
 6651 23c8 00000000 		.word	dualSlider
 6652 23cc 00000000 		.word	octaveAction
 6653 23d0 00000000 		.word	patchNum
 6654 23d4 00000000 		.word	processed_volumePedal
 6655 23d8 00000000 		.word	barMidiOuterStrings
 6656 23dc 00000000 		.word	sendKnobs
 6657 23e0 00000000 		.word	stringMIDI
 6658 23e4 00000000 		.word	inBuffer
 6659 23e8 00000000 		.word	presetNamesArray
 6660 23ec 00000000 		.word	macroNamesArray
 6661 23f0 00000000 		.word	controlNamesArray
 6662              	.L211:
1436:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 145


1437:main.c        ****                     macroNamesArray[whichPresetToStoreName][whichMacroToStoreName - 4][i] = inBuffe
 6663              		.loc 1 1437 0 discriminator 3
 6664 23f4 BB68     		ldr	r3, [r7, #8]
 6665 23f6 043B     		subs	r3, r3, #4
 6666 23f8 6449     		ldr	r1, .L252
 6667 23fa 3A6E     		ldr	r2, [r7, #96]
 6668 23fc 0A44     		add	r2, r2, r1
 6669 23fe 1478     		ldrb	r4, [r2]	@ zero_extendqisi2
 6670 2400 6348     		ldr	r0, .L252+4
 6671 2402 F968     		ldr	r1, [r7, #12]
 6672 2404 1A46     		mov	r2, r3
 6673 2406 D200     		lsls	r2, r2, #3
 6674 2408 1A44     		add	r2, r2, r3
 6675 240a 0B46     		mov	r3, r1
 6676 240c DB00     		lsls	r3, r3, #3
 6677 240e 0B44     		add	r3, r3, r1
 6678 2410 1B01     		lsls	r3, r3, #4
 6679 2412 1344     		add	r3, r3, r2
 6680 2414 C218     		adds	r2, r0, r3
 6681 2416 3B6D     		ldr	r3, [r7, #80]
 6682 2418 1344     		add	r3, r3, r2
 6683 241a 2246     		mov	r2, r4
 6684 241c 1A70     		strb	r2, [r3]
1438:main.c        ****                     bufferPointer++;
 6685              		.loc 1 1438 0 discriminator 3
 6686 241e 3B6E     		ldr	r3, [r7, #96]
 6687 2420 0133     		adds	r3, r3, #1
 6688 2422 3B66     		str	r3, [r7, #96]
1435:main.c        ****                 {
 6689              		.loc 1 1435 0 discriminator 3
 6690 2424 3B6D     		ldr	r3, [r7, #80]
 6691 2426 0133     		adds	r3, r3, #1
 6692 2428 3B65     		str	r3, [r7, #80]
 6693              	.L210:
1435:main.c        ****                 {
 6694              		.loc 1 1435 0 is_stmt 0 discriminator 1
 6695 242a 3B6D     		ldr	r3, [r7, #80]
 6696 242c 082B     		cmp	r3, #8
 6697 242e E1DD     		ble	.L211
 6698              	.L206:
 6699              	.LBE53:
1439:main.c        ****                 }
1440:main.c        ****             }
1441:main.c        ****             if ((whichPresetToStoreName == patchNum) && (whichMacroToStoreName == 7) && (!presetAlr
 6700              		.loc 1 1441 0 is_stmt 1
 6701 2430 584B     		ldr	r3, .L252+8
 6702 2432 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6703 2434 1A46     		mov	r2, r3
 6704 2436 FB68     		ldr	r3, [r7, #12]
 6705 2438 9A42     		cmp	r2, r3
 6706 243a 40F09380 		bne	.L223
 6707              		.loc 1 1441 0 is_stmt 0 discriminator 1
 6708 243e BB68     		ldr	r3, [r7, #8]
 6709 2440 072B     		cmp	r3, #7
 6710 2442 40F08F80 		bne	.L223
 6711              		.loc 1 1441 0 discriminator 2
 6712 2446 544A     		ldr	r2, .L252+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 146


 6713 2448 FB68     		ldr	r3, [r7, #12]
 6714 244a 1344     		add	r3, r3, r2
 6715 244c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6716 244e 002B     		cmp	r3, #0
 6717 2450 40F08880 		bne	.L223
1442:main.c        ****             {
1443:main.c        ****                 displayCurrentPresetNameAndCopedent();
 6718              		.loc 1 1443 0 is_stmt 1
 6719 2454 FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 6720              	.LBE49:
1407:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6721              		.loc 1 1407 0
 6722 2458 84E0     		b	.L223
 6723              	.L200:
1444:main.c        ****             }
1445:main.c        ****         }
1446:main.c        ****         else if ((inBuffer[0] == 252) && (inBuffer[31] == 254))
 6724              		.loc 1 1446 0
 6725 245a 4C4B     		ldr	r3, .L252
 6726 245c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6727 245e FC2B     		cmp	r3, #252
 6728 2460 40F08180 		bne	.L213
 6729              		.loc 1 1446 0 is_stmt 0 discriminator 1
 6730 2464 494B     		ldr	r3, .L252
 6731 2466 DB7F     		ldrb	r3, [r3, #31]	@ zero_extendqisi2
 6732 2468 FE2B     		cmp	r3, #254
 6733 246a 7CD1     		bne	.L213
1447:main.c        ****         {
1448:main.c        ****             //oop this means we're about to get new firmware. Reset to bootloader
1449:main.c        ****             SPIM_1_Stop();
 6734              		.loc 1 1449 0 is_stmt 1
 6735 246c FFF7FEFF 		bl	SPIM_1_Stop
1450:main.c        ****             myGFX_setFont(0);
 6736              		.loc 1 1450 0
 6737 2470 0020     		movs	r0, #0
 6738 2472 FFF7FEFF 		bl	myGFX_setFont
1451:main.c        ****             OLEDwriteString("FIRMWARE   ", 11, 1, FirstLine);
 6739              		.loc 1 1451 0
 6740 2476 0023     		movs	r3, #0
 6741 2478 0122     		movs	r2, #1
 6742 247a 0B21     		movs	r1, #11
 6743 247c 4748     		ldr	r0, .L252+16
 6744 247e FFF7FEFF 		bl	OLEDwriteString
1452:main.c        ****             OLEDwriteString("UPDATE     ", 11, 1, SecondLine);
 6745              		.loc 1 1452 0
 6746 2482 0123     		movs	r3, #1
 6747 2484 0122     		movs	r2, #1
 6748 2486 0B21     		movs	r1, #11
 6749 2488 4548     		ldr	r0, .L252+20
 6750 248a FFF7FEFF 		bl	OLEDwriteString
1453:main.c        ****             OLEDwriteString("           ", 11, 1, ThirdLine);
 6751              		.loc 1 1453 0
 6752 248e 0223     		movs	r3, #2
 6753 2490 0122     		movs	r2, #1
 6754 2492 0B21     		movs	r1, #11
 6755 2494 4348     		ldr	r0, .L252+24
 6756 2496 FFF7FEFF 		bl	OLEDwriteString
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 147


1454:main.c        ****             OLEDwriteString("           ", 11, 1, FourthLine);
 6757              		.loc 1 1454 0
 6758 249a 0323     		movs	r3, #3
 6759 249c 0122     		movs	r2, #1
 6760 249e 0B21     		movs	r1, #11
 6761 24a0 4048     		ldr	r0, .L252+24
 6762 24a2 FFF7FEFF 		bl	OLEDwriteString
1455:main.c        ****             main_counter = 11;
 6763              		.loc 1 1455 0
 6764 24a6 404B     		ldr	r3, .L252+28
 6765 24a8 0B22     		movs	r2, #11
 6766 24aa 1A70     		strb	r2, [r3]
1456:main.c        ****                    //set muxes to write to main OLED
1457:main.c        ****             if (mux_states[main_counter][0] != last_mux)
 6767              		.loc 1 1457 0
 6768 24ac 3E4B     		ldr	r3, .L252+28
 6769 24ae 1B78     		ldrb	r3, [r3]
 6770 24b0 DBB2     		uxtb	r3, r3
 6771 24b2 1A46     		mov	r2, r3
 6772 24b4 3D4B     		ldr	r3, .L252+32
 6773 24b6 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 6774 24ba 3D4B     		ldr	r3, .L252+36
 6775 24bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 6776 24be 9A42     		cmp	r2, r3
 6777 24c0 13D0     		beq	.L214
 6778              	.LBB54:
1458:main.c        ****             {
1459:main.c        ****                 I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 6779              		.loc 1 1459 0
 6780 24c2 394B     		ldr	r3, .L252+28
 6781 24c4 1B78     		ldrb	r3, [r3]
 6782 24c6 DBB2     		uxtb	r3, r3
 6783 24c8 1A46     		mov	r2, r3
 6784 24ca 384B     		ldr	r3, .L252+32
 6785 24cc 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6786 24d0 1A46     		mov	r2, r3
 6787 24d2 0123     		movs	r3, #1
 6788 24d4 9340     		lsls	r3, r3, r2
 6789 24d6 DAB2     		uxtb	r2, r3
 6790 24d8 364B     		ldr	r3, .L252+40
 6791 24da 1A70     		strb	r2, [r3]
1460:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 6792              		.loc 1 1460 0
 6793 24dc 0022     		movs	r2, #0
 6794 24de 0121     		movs	r1, #1
 6795 24e0 7020     		movs	r0, #112
 6796 24e2 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6797 24e6 0346     		mov	r3, r0
 6798 24e8 FB71     		strb	r3, [r7, #7]
 6799              	.L214:
 6800              	.LBE54:
1461:main.c        ****             }
1462:main.c        ****             last_mux = mux_states[main_counter][0];
 6801              		.loc 1 1462 0
 6802 24ea 2F4B     		ldr	r3, .L252+28
 6803 24ec 1B78     		ldrb	r3, [r3]
 6804 24ee DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 148


 6805 24f0 1A46     		mov	r2, r3
 6806 24f2 2E4B     		ldr	r3, .L252+32
 6807 24f4 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 6808 24f8 2D4B     		ldr	r3, .L252+36
 6809 24fa 1A70     		strb	r2, [r3]
1463:main.c        ****             
1464:main.c        ****             
1465:main.c        ****             CyDelayUs(10);
 6810              		.loc 1 1465 0
 6811 24fc 0A20     		movs	r0, #10
 6812 24fe FFF7FEFF 		bl	CyDelayUs
1466:main.c        ****             if (mux_states[main_counter][0] == 5)
 6813              		.loc 1 1466 0
 6814 2502 294B     		ldr	r3, .L252+28
 6815 2504 1B78     		ldrb	r3, [r3]
 6816 2506 DBB2     		uxtb	r3, r3
 6817 2508 1A46     		mov	r2, r3
 6818 250a 284B     		ldr	r3, .L252+32
 6819 250c 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 6820 2510 052B     		cmp	r3, #5
 6821 2512 1DD1     		bne	.L215
1467:main.c        ****             {
1468:main.c        ****                 if (!i2c_skipped[main_counter])
 6822              		.loc 1 1468 0
 6823 2514 244B     		ldr	r3, .L252+28
 6824 2516 1B78     		ldrb	r3, [r3]
 6825 2518 DBB2     		uxtb	r3, r3
 6826 251a 1A46     		mov	r2, r3
 6827 251c 264B     		ldr	r3, .L252+44
 6828 251e 9B5C     		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 6829 2520 002B     		cmp	r3, #0
 6830 2522 15D1     		bne	.L215
1469:main.c        ****                 {
1470:main.c        ****                     I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 6831              		.loc 1 1470 0
 6832 2524 204B     		ldr	r3, .L252+28
 6833 2526 1B78     		ldrb	r3, [r3]
 6834 2528 DBB2     		uxtb	r3, r3
 6835 252a 204A     		ldr	r2, .L252+32
 6836 252c 5B00     		lsls	r3, r3, #1
 6837 252e 1344     		add	r3, r3, r2
 6838 2530 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 6839 2532 1A46     		mov	r2, r3
 6840 2534 0123     		movs	r3, #1
 6841 2536 9340     		lsls	r3, r3, r2
 6842 2538 DAB2     		uxtb	r2, r3
 6843 253a 1E4B     		ldr	r3, .L252+40
 6844 253c 1A70     		strb	r2, [r3]
1471:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 6845              		.loc 1 1471 0
 6846 253e 0022     		movs	r2, #0
 6847 2540 0121     		movs	r1, #1
 6848 2542 7120     		movs	r0, #113
 6849 2544 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 6850 2548 0346     		mov	r3, r0
 6851 254a 1A46     		mov	r2, r3
 6852 254c 1B4B     		ldr	r3, .L252+48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 149


 6853 254e 1A60     		str	r2, [r3]
 6854              	.L215:
1472:main.c        ****                 }
1473:main.c        ****             }
1474:main.c        **** 
1475:main.c        ****             CyDelayUs(10);
 6855              		.loc 1 1475 0
 6856 2550 0A20     		movs	r0, #10
 6857 2552 FFF7FEFF 		bl	CyDelayUs
1476:main.c        **** 
1477:main.c        ****             OLED_draw(128, 64);
 6858              		.loc 1 1477 0
 6859 2556 4021     		movs	r1, #64
 6860 2558 8020     		movs	r0, #128
 6861 255a FFF7FEFF 		bl	OLED_draw
1478:main.c        ****             #ifdef BOOTLOAD_STYLE
1479:main.c        ****             Bootloadable_Load();
 6862              		.loc 1 1479 0
 6863 255e FFF7FEFF 		bl	Bootloadable_Load
 6864 2562 00E0     		b	.L213
 6865              	.L223:
1407:main.c        ****             int whichPresetToStoreName = inBuffer[1];
 6866              		.loc 1 1407 0
 6867 2564 00BF     		nop
 6868              	.L213:
1480:main.c        ****                 #endif
1481:main.c        ****         }
1482:main.c        ****         
1483:main.c        ****         SPIM_1_ClearRxBuffer();
 6869              		.loc 1 1483 0
 6870 2566 FFF7FEFF 		bl	SPIM_1_ClearRxBuffer
1484:main.c        ****         CyDmaChEnable(rx3Channel, STORE_TD_CFG_ONCMPLT);
 6871              		.loc 1 1484 0
 6872 256a 154B     		ldr	r3, .L252+52
 6873 256c 1B78     		ldrb	r3, [r3]
 6874 256e DBB2     		uxtb	r3, r3
 6875 2570 0121     		movs	r1, #1
 6876 2572 1846     		mov	r0, r3
 6877 2574 FFF7FEFF 		bl	CyDmaChEnable
1485:main.c        ****         CyDmaChEnable(txChannel, STORE_TD_CFG_ONCMPLT);
 6878              		.loc 1 1485 0
 6879 2578 124B     		ldr	r3, .L252+56
 6880 257a 1B78     		ldrb	r3, [r3]
 6881 257c DBB2     		uxtb	r3, r3
 6882 257e 0121     		movs	r1, #1
 6883 2580 1846     		mov	r0, r3
 6884 2582 FFF7FEFF 		bl	CyDmaChEnable
1486:main.c        ****         
1487:main.c        ****        // testpin6_Write(0);
1488:main.c        ****        
1489:main.c        **** 
1490:main.c        ****      }
 6885              		.loc 1 1490 0
 6886 2586 FEF74AB9 		b	.L216
 6887              	.L253:
 6888 258a 00BF     		.align	2
 6889              	.L252:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 150


 6890 258c 00000000 		.word	inBuffer
 6891 2590 00000000 		.word	macroNamesArray
 6892 2594 00000000 		.word	patchNum
 6893 2598 00000000 		.word	presetAlreadyDisplayed
 6894 259c 10050000 		.word	.LC1
 6895 25a0 1C050000 		.word	.LC2
 6896 25a4 28050000 		.word	.LC3
 6897 25a8 00000000 		.word	main_counter
 6898 25ac 00000000 		.word	mux_states
 6899 25b0 00000000 		.word	last_mux
 6900 25b4 00000000 		.word	I2Cbuff1
 6901 25b8 00000000 		.word	i2c_skipped
 6902 25bc 00000000 		.word	status
 6903 25c0 00000000 		.word	rx3Channel
 6904 25c4 00000000 		.word	txChannel
 6905              		.cfi_endproc
 6906              	.LFE75:
 6907              		.size	main, .-main
 6908              		.section	.text.DmaTxConfiguration,"ax",%progbits
 6909              		.align	2
 6910              		.global	DmaTxConfiguration
 6911              		.thumb
 6912              		.thumb_func
 6913              		.type	DmaTxConfiguration, %function
 6914              	DmaTxConfiguration:
 6915              	.LFB76:
1491:main.c        **** }
1492:main.c        **** 
1493:main.c        **** void DmaTxConfiguration()
1494:main.c        **** {
 6916              		.loc 1 1494 0
 6917              		.cfi_startproc
 6918              		@ args = 0, pretend = 0, frame = 0
 6919              		@ frame_needed = 1, uses_anonymous_args = 0
 6920 0000 80B5     		push	{r7, lr}
 6921              		.cfi_def_cfa_offset 8
 6922              		.cfi_offset 7, -8
 6923              		.cfi_offset 14, -4
 6924 0002 00AF     		add	r7, sp, #0
 6925              		.cfi_def_cfa_register 7
1495:main.c        ****     /* Init DMA, 1 byte bursts, each burst requires a request */ 
1496:main.c        ****     txChannel = DMA_4_DmaInitialize(DMA_TX_BYTES_PER_BURST, DMA_TX_REQUEST_PER_BURST, 
 6926              		.loc 1 1496 0
 6927 0004 4FF48043 		mov	r3, #16384
 6928 0008 41F6FF72 		movw	r2, #8191
 6929 000c 0121     		movs	r1, #1
 6930 000e 0120     		movs	r0, #1
 6931 0010 FFF7FEFF 		bl	DMA_4_DmaInitialize
 6932 0014 0346     		mov	r3, r0
 6933 0016 1A46     		mov	r2, r3
 6934 0018 124B     		ldr	r3, .L255
 6935 001a 1A70     		strb	r2, [r3]
1497:main.c        ****                                         HI16(DMA_TX_SRC_BASE), HI16(DMA_TX_DST_BASE));
1498:main.c        **** 
1499:main.c        ****     txTD = CyDmaTdAllocate();
 6936              		.loc 1 1499 0
 6937 001c FFF7FEFF 		bl	CyDmaTdAllocate
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 151


 6938 0020 0346     		mov	r3, r0
 6939 0022 1A46     		mov	r2, r3
 6940 0024 104B     		ldr	r3, .L255+4
 6941 0026 1A70     		strb	r2, [r3]
1500:main.c        **** 
1501:main.c        ****     /* Configure this Td as follows:
1502:main.c        ****     *  - Increment the source address, but not the destination address   
1503:main.c        ****     */
1504:main.c        ****     CyDmaTdSetConfiguration(txTD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_SRC_ADR);
 6942              		.loc 1 1504 0
 6943 0028 0F4B     		ldr	r3, .L255+4
 6944 002a 1B78     		ldrb	r3, [r3]
 6945 002c D8B2     		uxtb	r0, r3
 6946 002e 0123     		movs	r3, #1
 6947 0030 FE22     		movs	r2, #254
 6948 0032 2021     		movs	r1, #32
 6949 0034 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1505:main.c        **** 
1506:main.c        ****     /* From the memory to the SPIM */
1507:main.c        ****     CyDmaTdSetAddress(txTD, LO16((uint32)myArray), LO16((uint32) SPIM_1_TXDATA_PTR));
 6950              		.loc 1 1507 0
 6951 0038 0B4B     		ldr	r3, .L255+4
 6952 003a 1B78     		ldrb	r3, [r3]
 6953 003c DBB2     		uxtb	r3, r3
 6954 003e 0B4A     		ldr	r2, .L255+8
 6955 0040 91B2     		uxth	r1, r2
 6956 0042 46F24C42 		movw	r2, #25676
 6957 0046 1846     		mov	r0, r3
 6958 0048 FFF7FEFF 		bl	CyDmaTdSetAddress
1508:main.c        ****     
1509:main.c        ****     /* Associate the TD with the channel */
1510:main.c        ****     CyDmaChSetInitialTd(txChannel, txTD); 
 6959              		.loc 1 1510 0
 6960 004c 054B     		ldr	r3, .L255
 6961 004e 1B78     		ldrb	r3, [r3]
 6962 0050 DAB2     		uxtb	r2, r3
 6963 0052 054B     		ldr	r3, .L255+4
 6964 0054 1B78     		ldrb	r3, [r3]
 6965 0056 DBB2     		uxtb	r3, r3
 6966 0058 1946     		mov	r1, r3
 6967 005a 1046     		mov	r0, r2
 6968 005c FFF7FEFF 		bl	CyDmaChSetInitialTd
1511:main.c        ****    
1512:main.c        **** } 
 6969              		.loc 1 1512 0
 6970 0060 00BF     		nop
 6971 0062 80BD     		pop	{r7, pc}
 6972              	.L256:
 6973              		.align	2
 6974              	.L255:
 6975 0064 00000000 		.word	txChannel
 6976 0068 00000000 		.word	txTD
 6977 006c 00000000 		.word	myArray
 6978              		.cfi_endproc
 6979              	.LFE76:
 6980              		.size	DmaTxConfiguration, .-DmaTxConfiguration
 6981              		.section	.text.DmaRxConfiguration,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 152


 6982              		.align	2
 6983              		.global	DmaRxConfiguration
 6984              		.thumb
 6985              		.thumb_func
 6986              		.type	DmaRxConfiguration, %function
 6987              	DmaRxConfiguration:
 6988              	.LFB77:
1513:main.c        **** 
1514:main.c        **** void DmaRxConfiguration()
1515:main.c        **** { 
 6989              		.loc 1 1515 0
 6990              		.cfi_startproc
 6991              		@ args = 0, pretend = 0, frame = 0
 6992              		@ frame_needed = 1, uses_anonymous_args = 0
 6993 0000 80B5     		push	{r7, lr}
 6994              		.cfi_def_cfa_offset 8
 6995              		.cfi_offset 7, -8
 6996              		.cfi_offset 14, -4
 6997 0002 00AF     		add	r7, sp, #0
 6998              		.cfi_def_cfa_register 7
1516:main.c        ****     //pluck dma
1517:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 6999              		.loc 1 1517 0
 7000 0004 41F6FF73 		movw	r3, #8191
 7001 0008 4FF48042 		mov	r2, #16384
 7002 000c 0121     		movs	r1, #1
 7003 000e 0120     		movs	r0, #1
 7004 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 7005 0014 0346     		mov	r3, r0
 7006 0016 1A46     		mov	r2, r3
 7007 0018 4A4B     		ldr	r3, .L258
 7008 001a 1A70     		strb	r2, [r3]
1518:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1519:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 7009              		.loc 1 1519 0
 7010 001c FFF7FEFF 		bl	CyDmaTdAllocate
 7011 0020 0346     		mov	r3, r0
 7012 0022 1A46     		mov	r2, r3
 7013 0024 484B     		ldr	r3, .L258+4
 7014 0026 1A70     		strb	r2, [r3]
1520:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 7015              		.loc 1 1520 0
 7016 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 7017 002c 0346     		mov	r3, r0
 7018 002e 1A46     		mov	r2, r3
 7019 0030 454B     		ldr	r3, .L258+4
 7020 0032 5A70     		strb	r2, [r3, #1]
1521:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 7021              		.loc 1 1521 0
 7022 0034 444B     		ldr	r3, .L258+4
 7023 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 7024 0038 0223     		movs	r3, #2
 7025 003a FE22     		movs	r2, #254
 7026 003c 2021     		movs	r1, #32
 7027 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1522:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 7028              		.loc 1 1522 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 153


 7029 0042 414B     		ldr	r3, .L258+4
 7030 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 7031 0046 0223     		movs	r3, #2
 7032 0048 FE22     		movs	r2, #254
 7033 004a 2021     		movs	r1, #32
 7034 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1523:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 7035              		.loc 1 1523 0
 7036 0050 3D4B     		ldr	r3, .L258+4
 7037 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7038 0054 3D4A     		ldr	r2, .L258+8
 7039 0056 92B2     		uxth	r2, r2
 7040 0058 46F25741 		movw	r1, #25687
 7041 005c 1846     		mov	r0, r3
 7042 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1524:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 7043              		.loc 1 1524 0
 7044 0062 394B     		ldr	r3, .L258+4
 7045 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7046 0066 3A4A     		ldr	r2, .L258+12
 7047 0068 92B2     		uxth	r2, r2
 7048 006a 46F25741 		movw	r1, #25687
 7049 006e 1846     		mov	r0, r3
 7050 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1525:main.c        **** 
1526:main.c        ****     //bar dma
1527:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 7051              		.loc 1 1527 0
 7052 0074 41F6FF73 		movw	r3, #8191
 7053 0078 4FF48042 		mov	r2, #16384
 7054 007c 0121     		movs	r1, #1
 7055 007e 0120     		movs	r0, #1
 7056 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 7057 0084 0346     		mov	r3, r0
 7058 0086 1A46     		mov	r2, r3
 7059 0088 324B     		ldr	r3, .L258+16
 7060 008a 1A70     		strb	r2, [r3]
1528:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1529:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 7061              		.loc 1 1529 0
 7062 008c FFF7FEFF 		bl	CyDmaTdAllocate
 7063 0090 0346     		mov	r3, r0
 7064 0092 1A46     		mov	r2, r3
 7065 0094 304B     		ldr	r3, .L258+20
 7066 0096 1A70     		strb	r2, [r3]
1530:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 7067              		.loc 1 1530 0
 7068 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 7069 009c 0346     		mov	r3, r0
 7070 009e 1A46     		mov	r2, r3
 7071 00a0 2D4B     		ldr	r3, .L258+20
 7072 00a2 5A70     		strb	r2, [r3, #1]
1531:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 7073              		.loc 1 1531 0
 7074 00a4 2C4B     		ldr	r3, .L258+20
 7075 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 7076 00a8 0223     		movs	r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 154


 7077 00aa FE22     		movs	r2, #254
 7078 00ac 0821     		movs	r1, #8
 7079 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1532:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 7080              		.loc 1 1532 0
 7081 00b2 294B     		ldr	r3, .L258+20
 7082 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 7083 00b6 0223     		movs	r3, #2
 7084 00b8 FE22     		movs	r2, #254
 7085 00ba 0821     		movs	r1, #8
 7086 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1533:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 7087              		.loc 1 1533 0
 7088 00c0 254B     		ldr	r3, .L258+20
 7089 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 7090 00c4 254A     		ldr	r2, .L258+24
 7091 00c6 92B2     		uxth	r2, r2
 7092 00c8 46F25551 		movw	r1, #25941
 7093 00cc 1846     		mov	r0, r3
 7094 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1534:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 7095              		.loc 1 1534 0
 7096 00d2 214B     		ldr	r3, .L258+20
 7097 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 7098 00d6 224A     		ldr	r2, .L258+28
 7099 00d8 92B2     		uxth	r2, r2
 7100 00da 46F25551 		movw	r1, #25941
 7101 00de 1846     		mov	r0, r3
 7102 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1535:main.c        ****     
1536:main.c        ****         /* Init DMA, 1 byte bursts, each burst requires a request */ 
1537:main.c        ****     rx3Channel = DMA_3_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 7103              		.loc 1 1537 0
 7104 00e4 41F6FF73 		movw	r3, #8191
 7105 00e8 4FF48042 		mov	r2, #16384
 7106 00ec 0121     		movs	r1, #1
 7107 00ee 0120     		movs	r0, #1
 7108 00f0 FFF7FEFF 		bl	DMA_3_DmaInitialize
 7109 00f4 0346     		mov	r3, r0
 7110 00f6 1A46     		mov	r2, r3
 7111 00f8 1A4B     		ldr	r3, .L258+32
 7112 00fa 1A70     		strb	r2, [r3]
1538:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1539:main.c        **** 
1540:main.c        ****     rx3TD = CyDmaTdAllocate();
 7113              		.loc 1 1540 0
 7114 00fc FFF7FEFF 		bl	CyDmaTdAllocate
 7115 0100 0346     		mov	r3, r0
 7116 0102 1A46     		mov	r2, r3
 7117 0104 184B     		ldr	r3, .L258+36
 7118 0106 1A70     		strb	r2, [r3]
1541:main.c        ****     
1542:main.c        ****     /* Configure this Td as follows:
1543:main.c        ****     *  - Increment the destination address, but not the source address
1544:main.c        ****     */
1545:main.c        ****     CyDmaTdSetConfiguration(rx3TD, myBufferSize, CY_DMA_DISABLE_TD, TD_INC_DST_ADR);
 7119              		.loc 1 1545 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 155


 7120 0108 174B     		ldr	r3, .L258+36
 7121 010a 1B78     		ldrb	r3, [r3]
 7122 010c D8B2     		uxtb	r0, r3
 7123 010e 0223     		movs	r3, #2
 7124 0110 FE22     		movs	r2, #254
 7125 0112 2021     		movs	r1, #32
 7126 0114 FFF7FEFF 		bl	CyDmaTdSetConfiguration
1546:main.c        **** 
1547:main.c        ****     /* From the SPIM to the memory */
1548:main.c        ****     CyDmaTdSetAddress(rx3TD, LO16((uint32)SPIM_1_RXDATA_PTR), LO16((uint32)inBuffer));
 7127              		.loc 1 1548 0
 7128 0118 134B     		ldr	r3, .L258+36
 7129 011a 1B78     		ldrb	r3, [r3]
 7130 011c DBB2     		uxtb	r3, r3
 7131 011e 134A     		ldr	r2, .L258+40
 7132 0120 92B2     		uxth	r2, r2
 7133 0122 46F25C41 		movw	r1, #25692
 7134 0126 1846     		mov	r0, r3
 7135 0128 FFF7FEFF 		bl	CyDmaTdSetAddress
1549:main.c        **** 
1550:main.c        ****     /* Associate the TD with the channel */
1551:main.c        ****     CyDmaChSetInitialTd(rx3Channel, rx3TD);
 7136              		.loc 1 1551 0
 7137 012c 0D4B     		ldr	r3, .L258+32
 7138 012e 1B78     		ldrb	r3, [r3]
 7139 0130 DAB2     		uxtb	r2, r3
 7140 0132 0D4B     		ldr	r3, .L258+36
 7141 0134 1B78     		ldrb	r3, [r3]
 7142 0136 DBB2     		uxtb	r3, r3
 7143 0138 1946     		mov	r1, r3
 7144 013a 1046     		mov	r0, r2
 7145 013c FFF7FEFF 		bl	CyDmaChSetInitialTd
1552:main.c        **** }
 7146              		.loc 1 1552 0
 7147 0140 00BF     		nop
 7148 0142 80BD     		pop	{r7, pc}
 7149              	.L259:
 7150              		.align	2
 7151              	.L258:
 7152 0144 00000000 		.word	rx1Channel
 7153 0148 00000000 		.word	rx1TD
 7154 014c 00000000 		.word	rxBufferPluck
 7155 0150 20000000 		.word	rxBufferPluck+32
 7156 0154 00000000 		.word	rx2Channel
 7157 0158 00000000 		.word	rx2TD
 7158 015c 00000000 		.word	rxBufferBar
 7159 0160 08000000 		.word	rxBufferBar+8
 7160 0164 00000000 		.word	rx3Channel
 7161 0168 00000000 		.word	rx3TD
 7162 016c 00000000 		.word	inBuffer
 7163              		.cfi_endproc
 7164              	.LFE77:
 7165              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 7166              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 7167              		.align	2
 7168              		.global	I2C_MasterWriteBlocking
 7169              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 156


 7170              		.thumb_func
 7171              		.type	I2C_MasterWriteBlocking, %function
 7172              	I2C_MasterWriteBlocking:
 7173              	.LFB78:
1553:main.c        **** 
1554:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1555:main.c        **** {
 7174              		.loc 1 1555 0
 7175              		.cfi_startproc
 7176              		@ args = 0, pretend = 0, frame = 24
 7177              		@ frame_needed = 1, uses_anonymous_args = 0
 7178 0000 80B5     		push	{r7, lr}
 7179              		.cfi_def_cfa_offset 8
 7180              		.cfi_offset 7, -8
 7181              		.cfi_offset 14, -4
 7182 0002 86B0     		sub	sp, sp, #24
 7183              		.cfi_def_cfa_offset 32
 7184 0004 00AF     		add	r7, sp, #0
 7185              		.cfi_def_cfa_register 7
 7186 0006 0346     		mov	r3, r0
 7187 0008 FB71     		strb	r3, [r7, #7]
 7188 000a 0B46     		mov	r3, r1	@ movhi
 7189 000c BB80     		strh	r3, [r7, #4]	@ movhi
 7190 000e 1346     		mov	r3, r2
 7191 0010 BB71     		strb	r3, [r7, #6]
1556:main.c        ****     uint8 volatile status;
1557:main.c        ****     uint8_t error = 0;
 7192              		.loc 1 1557 0
 7193 0012 0023     		movs	r3, #0
 7194 0014 FB75     		strb	r3, [r7, #23]
1558:main.c        ****     uint32_t timeout = 1000;
 7195              		.loc 1 1558 0
 7196 0016 4FF47A73 		mov	r3, #1000
 7197 001a 3B61     		str	r3, [r7, #16]
1559:main.c        ****     status = I2C_1_MasterClearStatus();
 7198              		.loc 1 1559 0
 7199 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 7200 0020 0346     		mov	r3, r0
 7201 0022 FB73     		strb	r3, [r7, #15]
1560:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 7202              		.loc 1 1560 0
 7203 0024 FB7B     		ldrb	r3, [r7, #15]
 7204 0026 DBB2     		uxtb	r3, r3
 7205 0028 5BB2     		sxtb	r3, r3
 7206 002a 002B     		cmp	r3, #0
 7207 002c 42DB     		blt	.L261
1561:main.c        ****     {
1562:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 7208              		.loc 1 1562 0
 7209 002e BB88     		ldrh	r3, [r7, #4]	@ movhi
 7210 0030 DAB2     		uxtb	r2, r3
 7211 0032 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 7212 0034 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 7213 0036 2949     		ldr	r1, .L270
 7214 0038 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 7215 003c 0346     		mov	r3, r0
 7216 003e FB73     		strb	r3, [r7, #15]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 157


1563:main.c        ****                                      mode);
1564:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 7217              		.loc 1 1564 0
 7218 0040 FB7B     		ldrb	r3, [r7, #15]
 7219 0042 DBB2     		uxtb	r3, r3
 7220 0044 002B     		cmp	r3, #0
 7221 0046 2FD1     		bne	.L262
 7222              	.L266:
1565:main.c        ****         {
1566:main.c        ****             /* wait for write complete and no error */
1567:main.c        ****             do
1568:main.c        ****             {
1569:main.c        ****                 status = I2C_1_MasterStatus();
 7223              		.loc 1 1569 0
 7224 0048 FFF7FEFF 		bl	I2C_1_MasterStatus
 7225 004c 0346     		mov	r3, r0
 7226 004e FB73     		strb	r3, [r7, #15]
1570:main.c        ****                 timeout--;
 7227              		.loc 1 1570 0
 7228 0050 3B69     		ldr	r3, [r7, #16]
 7229 0052 013B     		subs	r3, r3, #1
 7230 0054 3B61     		str	r3, [r7, #16]
1571:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 7231              		.loc 1 1571 0
 7232 0056 FB7B     		ldrb	r3, [r7, #15]
 7233 0058 DBB2     		uxtb	r3, r3
 7234 005a 802B     		cmp	r3, #128
 7235 005c 03D1     		bne	.L263
1572:main.c        ****                 {
1573:main.c        ****                     I2C_reset();
 7236              		.loc 1 1573 0
 7237 005e FFF7FEFF 		bl	I2C_reset
1574:main.c        ****                     error = 1;
 7238              		.loc 1 1574 0
 7239 0062 0123     		movs	r3, #1
 7240 0064 FB75     		strb	r3, [r7, #23]
 7241              	.L263:
1575:main.c        ****                 }
1576:main.c        ****                 if (timeout == 0)
 7242              		.loc 1 1576 0
 7243 0066 3B69     		ldr	r3, [r7, #16]
 7244 0068 002B     		cmp	r3, #0
 7245 006a 05D1     		bne	.L264
1577:main.c        ****                 {
1578:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 7246              		.loc 1 1578 0
 7247 006c 8023     		movs	r3, #128
 7248 006e FB73     		strb	r3, [r7, #15]
1579:main.c        ****                     I2C_reset();
 7249              		.loc 1 1579 0
 7250 0070 FFF7FEFF 		bl	I2C_reset
1580:main.c        ****                     error = 1;
 7251              		.loc 1 1580 0
 7252 0074 0123     		movs	r3, #1
 7253 0076 FB75     		strb	r3, [r7, #23]
 7254              	.L264:
1581:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 158


1582:main.c        ****                 
1583:main.c        ****                 if (status == 0)
 7255              		.loc 1 1583 0
 7256 0078 FB7B     		ldrb	r3, [r7, #15]
 7257 007a DBB2     		uxtb	r3, r3
 7258 007c 002B     		cmp	r3, #0
 7259 007e 05D1     		bne	.L265
1584:main.c        ****                 {
1585:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 7260              		.loc 1 1585 0
 7261 0080 8023     		movs	r3, #128
 7262 0082 FB73     		strb	r3, [r7, #15]
1586:main.c        ****                     I2C_reset();
 7263              		.loc 1 1586 0
 7264 0084 FFF7FEFF 		bl	I2C_reset
1587:main.c        ****                     error = 1;
 7265              		.loc 1 1587 0
 7266 0088 0123     		movs	r3, #1
 7267 008a FB75     		strb	r3, [r7, #23]
 7268              	.L265:
1588:main.c        ****                 }
1589:main.c        ****                 
1590:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 7269              		.loc 1 1590 0
 7270 008c FB7B     		ldrb	r3, [r7, #15]
 7271 008e DBB2     		uxtb	r3, r3
 7272 0090 03F08203 		and	r3, r3, #130
 7273 0094 002B     		cmp	r3, #0
 7274 0096 0DD1     		bne	.L261
 7275              		.loc 1 1590 0 is_stmt 0 discriminator 1
 7276 0098 FB7B     		ldrb	r3, [r7, #15]
 7277 009a DBB2     		uxtb	r3, r3
 7278 009c 002B     		cmp	r3, #0
 7279 009e 09D0     		beq	.L261
 7280              		.loc 1 1590 0 discriminator 2
 7281 00a0 3B69     		ldr	r3, [r7, #16]
 7282 00a2 002B     		cmp	r3, #0
 7283 00a4 D0D1     		bne	.L266
 7284 00a6 05E0     		b	.L261
 7285              	.L262:
1591:main.c        ****         }
1592:main.c        ****         else
1593:main.c        ****         {
1594:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1595:main.c        ****             *  I2CM_MasterStatus() error output */
1596:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 7286              		.loc 1 1596 0 is_stmt 1
 7287 00a8 8023     		movs	r3, #128
 7288 00aa FB73     		strb	r3, [r7, #15]
1597:main.c        ****             I2C_reset();
 7289              		.loc 1 1597 0
 7290 00ac FFF7FEFF 		bl	I2C_reset
1598:main.c        ****             error = 1;
 7291              		.loc 1 1598 0
 7292 00b0 0123     		movs	r3, #1
 7293 00b2 FB75     		strb	r3, [r7, #23]
 7294              	.L261:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 159


1599:main.c        ****         } 
1600:main.c        ****     }  
1601:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 7295              		.loc 1 1601 0
 7296 00b4 FB7B     		ldrb	r3, [r7, #15]
 7297 00b6 DBB2     		uxtb	r3, r3
 7298 00b8 03F02003 		and	r3, r3, #32
 7299 00bc 002B     		cmp	r3, #0
 7300 00be 04D1     		bne	.L267
 7301              		.loc 1 1601 0 is_stmt 0 discriminator 1
 7302 00c0 FB7B     		ldrb	r3, [r7, #15]
 7303 00c2 DBB2     		uxtb	r3, r3
 7304 00c4 5BB2     		sxtb	r3, r3
 7305 00c6 002B     		cmp	r3, #0
 7306 00c8 03DA     		bge	.L268
 7307              	.L267:
1602:main.c        ****     {
1603:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1604:main.c        ****         //i2c_skipped[main_counter] = 1;
1605:main.c        ****         I2C_reset();
 7308              		.loc 1 1605 0 is_stmt 1
 7309 00ca FFF7FEFF 		bl	I2C_reset
1606:main.c        ****         error = 1;
 7310              		.loc 1 1606 0
 7311 00ce 0123     		movs	r3, #1
 7312 00d0 FB75     		strb	r3, [r7, #23]
 7313              	.L268:
1607:main.c        ****     }
1608:main.c        ****     return error;
 7314              		.loc 1 1608 0
 7315 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
1609:main.c        **** }
 7316              		.loc 1 1609 0
 7317 00d4 1846     		mov	r0, r3
 7318 00d6 1837     		adds	r7, r7, #24
 7319              		.cfi_def_cfa_offset 8
 7320 00d8 BD46     		mov	sp, r7
 7321              		.cfi_def_cfa_register 13
 7322              		@ sp needed
 7323 00da 80BD     		pop	{r7, pc}
 7324              	.L271:
 7325              		.align	2
 7326              	.L270:
 7327 00dc 00000000 		.word	I2Cbuff1
 7328              		.cfi_endproc
 7329              	.LFE78:
 7330              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 7331              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 7332              		.align	2
 7333              		.global	I2C_MasterReadBlocking
 7334              		.thumb
 7335              		.thumb_func
 7336              		.type	I2C_MasterReadBlocking, %function
 7337              	I2C_MasterReadBlocking:
 7338              	.LFB79:
1610:main.c        **** 
1611:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 160


1612:main.c        **** {
 7339              		.loc 1 1612 0
 7340              		.cfi_startproc
 7341              		@ args = 0, pretend = 0, frame = 16
 7342              		@ frame_needed = 1, uses_anonymous_args = 0
 7343 0000 80B5     		push	{r7, lr}
 7344              		.cfi_def_cfa_offset 8
 7345              		.cfi_offset 7, -8
 7346              		.cfi_offset 14, -4
 7347 0002 84B0     		sub	sp, sp, #16
 7348              		.cfi_def_cfa_offset 24
 7349 0004 00AF     		add	r7, sp, #0
 7350              		.cfi_def_cfa_register 7
 7351 0006 0346     		mov	r3, r0
 7352 0008 FB71     		strb	r3, [r7, #7]
 7353 000a 0B46     		mov	r3, r1
 7354 000c BB71     		strb	r3, [r7, #6]
 7355 000e 1346     		mov	r3, r2
 7356 0010 7B71     		strb	r3, [r7, #5]
1613:main.c        ****     uint8 volatile status;
1614:main.c        ****     uint32_t timeout = 50000;
 7357              		.loc 1 1614 0
 7358 0012 4CF25033 		movw	r3, #50000
 7359 0016 FB60     		str	r3, [r7, #12]
1615:main.c        ****     uint8_t error = 0;
 7360              		.loc 1 1615 0
 7361 0018 0023     		movs	r3, #0
 7362 001a FB72     		strb	r3, [r7, #11]
1616:main.c        ****     status = I2C_1_MasterClearStatus();
 7363              		.loc 1 1616 0
 7364 001c FFF7FEFF 		bl	I2C_1_MasterClearStatus
 7365 0020 0346     		mov	r3, r0
 7366 0022 BB72     		strb	r3, [r7, #10]
1617:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 7367              		.loc 1 1617 0
 7368 0024 BB7A     		ldrb	r3, [r7, #10]
 7369 0026 DBB2     		uxtb	r3, r3
 7370 0028 5BB2     		sxtb	r3, r3
 7371 002a 002B     		cmp	r3, #0
 7372 002c 46DB     		blt	.L273
1618:main.c        ****     {
1619:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 7373              		.loc 1 1619 0
 7374 002e 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 7375 0030 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 7376 0032 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 7377 0034 2B49     		ldr	r1, .L282
 7378 0036 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 7379 003a 0346     		mov	r3, r0
 7380 003c BB72     		strb	r3, [r7, #10]
1620:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1621:main.c        ****                                     nbytes, mode); 
1622:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 7381              		.loc 1 1622 0
 7382 003e BB7A     		ldrb	r3, [r7, #10]
 7383 0040 DBB2     		uxtb	r3, r3
 7384 0042 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 161


 7385 0044 34D1     		bne	.L274
 7386              	.L278:
1623:main.c        ****         {
1624:main.c        ****             /* wait for read complete and no error */
1625:main.c        ****             do
1626:main.c        ****             {
1627:main.c        ****                 status = I2C_1_MasterStatus();
 7387              		.loc 1 1627 0
 7388 0046 FFF7FEFF 		bl	I2C_1_MasterStatus
 7389 004a 0346     		mov	r3, r0
 7390 004c BB72     		strb	r3, [r7, #10]
1628:main.c        ****                 timeout--;
 7391              		.loc 1 1628 0
 7392 004e FB68     		ldr	r3, [r7, #12]
 7393 0050 013B     		subs	r3, r3, #1
 7394 0052 FB60     		str	r3, [r7, #12]
1629:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 7395              		.loc 1 1629 0
 7396 0054 BB7A     		ldrb	r3, [r7, #10]
 7397 0056 DBB2     		uxtb	r3, r3
 7398 0058 802B     		cmp	r3, #128
 7399 005a 12D1     		bne	.L275
1630:main.c        ****                 {
1631:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 7400              		.loc 1 1631 0
 7401 005c 224B     		ldr	r3, .L282+4
 7402 005e 5222     		movs	r2, #82
 7403 0060 1A70     		strb	r2, [r3]
 7404 0062 224B     		ldr	r3, .L282+8
 7405 0064 FF22     		movs	r2, #255
 7406 0066 1A70     		strb	r2, [r3]
 7407 0068 214B     		ldr	r3, .L282+12
 7408 006a 0022     		movs	r2, #0
 7409 006c 1A70     		strb	r2, [r3]
 7410 006e 00BF     		nop
 7411              	.L276:
 7412              		.loc 1 1631 0 is_stmt 0 discriminator 2
 7413 0070 1E4B     		ldr	r3, .L282+8
 7414 0072 1B78     		ldrb	r3, [r3]
 7415 0074 DBB2     		uxtb	r3, r3
 7416 0076 002B     		cmp	r3, #0
 7417 0078 FAD1     		bne	.L276
1632:main.c        ****                     I2C_reset();
 7418              		.loc 1 1632 0 is_stmt 1
 7419 007a FFF7FEFF 		bl	I2C_reset
1633:main.c        ****                     error = 1;
 7420              		.loc 1 1633 0
 7421 007e 0123     		movs	r3, #1
 7422 0080 FB72     		strb	r3, [r7, #11]
 7423              	.L275:
1634:main.c        ****                 }
1635:main.c        ****                 if (timeout == 0)
 7424              		.loc 1 1635 0
 7425 0082 FB68     		ldr	r3, [r7, #12]
 7426 0084 002B     		cmp	r3, #0
 7427 0086 05D1     		bne	.L277
1636:main.c        ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 162


1637:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 7428              		.loc 1 1637 0
 7429 0088 8023     		movs	r3, #128
 7430 008a BB72     		strb	r3, [r7, #10]
1638:main.c        ****                     I2C_reset();
 7431              		.loc 1 1638 0
 7432 008c FFF7FEFF 		bl	I2C_reset
1639:main.c        ****                     error = 1;
 7433              		.loc 1 1639 0
 7434 0090 0123     		movs	r3, #1
 7435 0092 FB72     		strb	r3, [r7, #11]
 7436              	.L277:
1640:main.c        ****                 }
1641:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 7437              		.loc 1 1641 0
 7438 0094 BB7A     		ldrb	r3, [r7, #10]
 7439 0096 DBB2     		uxtb	r3, r3
 7440 0098 03F08103 		and	r3, r3, #129
 7441 009c 002B     		cmp	r3, #0
 7442 009e 0DD1     		bne	.L273
 7443              		.loc 1 1641 0 is_stmt 0 discriminator 1
 7444 00a0 BB7A     		ldrb	r3, [r7, #10]
 7445 00a2 DBB2     		uxtb	r3, r3
 7446 00a4 002B     		cmp	r3, #0
 7447 00a6 09D0     		beq	.L273
 7448              		.loc 1 1641 0 discriminator 2
 7449 00a8 FB68     		ldr	r3, [r7, #12]
 7450 00aa 002B     		cmp	r3, #0
 7451 00ac CBD1     		bne	.L278
 7452 00ae 05E0     		b	.L273
 7453              	.L274:
1642:main.c        ****         }
1643:main.c        ****         else
1644:main.c        ****         {
1645:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1646:main.c        ****             *  I2CM_MasterStatus() error output */
1647:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 7454              		.loc 1 1647 0 is_stmt 1
 7455 00b0 8023     		movs	r3, #128
 7456 00b2 BB72     		strb	r3, [r7, #10]
1648:main.c        ****             I2C_reset();
 7457              		.loc 1 1648 0
 7458 00b4 FFF7FEFF 		bl	I2C_reset
1649:main.c        ****             error = 1;
 7459              		.loc 1 1649 0
 7460 00b8 0123     		movs	r3, #1
 7461 00ba FB72     		strb	r3, [r7, #11]
 7462              	.L273:
1650:main.c        ****         }
1651:main.c        ****     }
1652:main.c        ****     if ((status & I2C_1_MSTAT_ERR_ADDR_NAK) || (status & I2C_1_MSTAT_ERR_XFER))
 7463              		.loc 1 1652 0
 7464 00bc BB7A     		ldrb	r3, [r7, #10]
 7465 00be DBB2     		uxtb	r3, r3
 7466 00c0 03F02003 		and	r3, r3, #32
 7467 00c4 002B     		cmp	r3, #0
 7468 00c6 04D1     		bne	.L279
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 163


 7469              		.loc 1 1652 0 is_stmt 0 discriminator 1
 7470 00c8 BB7A     		ldrb	r3, [r7, #10]
 7471 00ca DBB2     		uxtb	r3, r3
 7472 00cc 5BB2     		sxtb	r3, r3
 7473 00ce 002B     		cmp	r3, #0
 7474 00d0 03DA     		bge	.L280
 7475              	.L279:
1653:main.c        ****     {
1654:main.c        ****         //mark that i2c destination to be skipped (likely unplugged) and reset the I2C module
1655:main.c        ****         //i2c_skipped[main_counter] = 1;
1656:main.c        ****         I2C_reset();
 7476              		.loc 1 1656 0 is_stmt 1
 7477 00d2 FFF7FEFF 		bl	I2C_reset
1657:main.c        ****         error = 1;
 7478              		.loc 1 1657 0
 7479 00d6 0123     		movs	r3, #1
 7480 00d8 FB72     		strb	r3, [r7, #11]
 7481              	.L280:
1658:main.c        ****     }
1659:main.c        ****     return error;
 7482              		.loc 1 1659 0
 7483 00da FB7A     		ldrb	r3, [r7, #11]	@ zero_extendqisi2
1660:main.c        **** }
 7484              		.loc 1 1660 0
 7485 00dc 1846     		mov	r0, r3
 7486 00de 1037     		adds	r7, r7, #16
 7487              		.cfi_def_cfa_offset 8
 7488 00e0 BD46     		mov	sp, r7
 7489              		.cfi_def_cfa_register 13
 7490              		@ sp needed
 7491 00e2 80BD     		pop	{r7, pc}
 7492              	.L283:
 7493              		.align	2
 7494              	.L282:
 7495 00e4 00000000 		.word	I2Cbuff2
 7496 00e8 78640040 		.word	1073767544
 7497 00ec 18640040 		.word	1073767448
 7498 00f0 58640040 		.word	1073767512
 7499              		.cfi_endproc
 7500              	.LFE79:
 7501              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 7502              		.section	.text.I2C_reset,"ax",%progbits
 7503              		.align	2
 7504              		.global	I2C_reset
 7505              		.thumb
 7506              		.thumb_func
 7507              		.type	I2C_reset, %function
 7508              	I2C_reset:
 7509              	.LFB80:
1661:main.c        **** 
1662:main.c        **** void I2C_reset(void)
1663:main.c        **** {
 7510              		.loc 1 1663 0
 7511              		.cfi_startproc
 7512              		@ args = 0, pretend = 0, frame = 0
 7513              		@ frame_needed = 1, uses_anonymous_args = 0
 7514 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 164


 7515              		.cfi_def_cfa_offset 8
 7516              		.cfi_offset 7, -8
 7517              		.cfi_offset 14, -4
 7518 0002 00AF     		add	r7, sp, #0
 7519              		.cfi_def_cfa_register 7
1664:main.c        ****   I2C_1_Stop();
 7520              		.loc 1 1664 0
 7521 0004 FFF7FEFF 		bl	I2C_1_Stop
1665:main.c        **** 
1666:main.c        ****   /* Disable/clear everything, then reinitialize. */
1667:main.c        **** 
1668:main.c        ****   I2C_1_CFG_REG = 0x00;  // NECESSARY to get MCSR to reset and clear BUS_BUSY bit.
 7522              		.loc 1 1668 0
 7523 0008 044B     		ldr	r3, .L285
 7524 000a 0022     		movs	r2, #0
 7525 000c 1A70     		strb	r2, [r3]
1669:main.c        **** 
1670:main.c        ****   //I2C_1_XCFG_REG = 0x00;  // not sure if necessary.
1671:main.c        **** 
1672:main.c        ****   I2C_1_initVar = 0;  // MUST BE SET TO ZERO to allow I2C_1_Start() to call I2C_1_Init()
 7526              		.loc 1 1672 0
 7527 000e 044B     		ldr	r3, .L285+4
 7528 0010 0022     		movs	r2, #0
 7529 0012 1A70     		strb	r2, [r3]
1673:main.c        **** 
1674:main.c        ****   I2C_1_Start();
 7530              		.loc 1 1674 0
 7531 0014 FFF7FEFF 		bl	I2C_1_Start
1675:main.c        **** }
 7532              		.loc 1 1675 0
 7533 0018 00BF     		nop
 7534 001a 80BD     		pop	{r7, pc}
 7535              	.L286:
 7536              		.align	2
 7537              	.L285:
 7538 001c 78640040 		.word	1073767544
 7539 0020 00000000 		.word	I2C_1_initVar
 7540              		.cfi_endproc
 7541              	.LFE80:
 7542              		.size	I2C_reset, .-I2C_reset
 7543              		.section	.text.checkUSB_Vbus,"ax",%progbits
 7544              		.align	2
 7545              		.global	checkUSB_Vbus
 7546              		.thumb
 7547              		.thumb_func
 7548              		.type	checkUSB_Vbus, %function
 7549              	checkUSB_Vbus:
 7550              	.LFB81:
1676:main.c        **** 
1677:main.c        **** 
1678:main.c        ****     
1679:main.c        **** void checkUSB_Vbus(void)
1680:main.c        **** {
 7551              		.loc 1 1680 0
 7552              		.cfi_startproc
 7553              		@ args = 0, pretend = 0, frame = 0
 7554              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 165


 7555 0000 80B5     		push	{r7, lr}
 7556              		.cfi_def_cfa_offset 8
 7557              		.cfi_offset 7, -8
 7558              		.cfi_offset 14, -4
 7559 0002 00AF     		add	r7, sp, #0
 7560              		.cfi_def_cfa_register 7
1681:main.c        ****    if (USB_VBusPresent() == 0)
 7561              		.loc 1 1681 0
 7562 0004 FFF7FEFF 		bl	USB_VBusPresent
 7563 0008 0346     		mov	r3, r0
 7564 000a 002B     		cmp	r3, #0
 7565 000c 05D1     		bne	.L288
1682:main.c        ****    {
1683:main.c        ****        USB_Stop();
 7566              		.loc 1 1683 0
 7567 000e FFF7FEFF 		bl	USB_Stop
1684:main.c        ****        USB_active = 0; 
 7568              		.loc 1 1684 0
 7569 0012 0E4B     		ldr	r3, .L291
 7570 0014 0022     		movs	r2, #0
 7571 0016 1A70     		strb	r2, [r3]
 7572 0018 13E0     		b	.L289
 7573              	.L288:
1685:main.c        ****    }
1686:main.c        ****    else if (USB_active == 0 )
 7574              		.loc 1 1686 0
 7575 001a 0C4B     		ldr	r3, .L291
 7576 001c 1B78     		ldrb	r3, [r3]
 7577 001e DBB2     		uxtb	r3, r3
 7578 0020 002B     		cmp	r3, #0
 7579 0022 0ED1     		bne	.L289
1687:main.c        ****    {
1688:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 7580              		.loc 1 1688 0
 7581 0024 0021     		movs	r1, #0
 7582 0026 0020     		movs	r0, #0
 7583 0028 FFF7FEFF 		bl	USB_Start
1689:main.c        ****         while (0u == USB_GetConfiguration());
 7584              		.loc 1 1689 0
 7585 002c 00BF     		nop
 7586              	.L290:
 7587              		.loc 1 1689 0 is_stmt 0 discriminator 1
 7588 002e FFF7FEFF 		bl	USB_GetConfiguration
 7589 0032 0346     		mov	r3, r0
 7590 0034 002B     		cmp	r3, #0
 7591 0036 FAD0     		beq	.L290
1690:main.c        ****         USB_MIDI_EP_Init();
 7592              		.loc 1 1690 0 is_stmt 1
 7593 0038 FFF7FEFF 		bl	USB_MIDI_Init
1691:main.c        ****        USB_active = 1;
 7594              		.loc 1 1691 0
 7595 003c 034B     		ldr	r3, .L291
 7596 003e 0122     		movs	r2, #1
 7597 0040 1A70     		strb	r2, [r3]
 7598              	.L289:
1692:main.c        ****    }
1693:main.c        ****    USB_check_flag = 0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 166


 7599              		.loc 1 1693 0
 7600 0042 034B     		ldr	r3, .L291+4
 7601 0044 0022     		movs	r2, #0
 7602 0046 1A70     		strb	r2, [r3]
1694:main.c        **** }
 7603              		.loc 1 1694 0
 7604 0048 00BF     		nop
 7605 004a 80BD     		pop	{r7, pc}
 7606              	.L292:
 7607              		.align	2
 7608              	.L291:
 7609 004c 00000000 		.word	USB_active
 7610 0050 00000000 		.word	USB_check_flag
 7611              		.cfi_endproc
 7612              	.LFE81:
 7613              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 7614              		.section	.text.USB_service,"ax",%progbits
 7615              		.align	2
 7616              		.global	USB_service
 7617              		.thumb
 7618              		.thumb_func
 7619              		.type	USB_service, %function
 7620              	USB_service:
 7621              	.LFB82:
1695:main.c        **** 
1696:main.c        **** 
1697:main.c        **** 
1698:main.c        **** void USB_service(void)
1699:main.c        **** {
 7622              		.loc 1 1699 0
 7623              		.cfi_startproc
 7624              		@ args = 0, pretend = 0, frame = 0
 7625              		@ frame_needed = 1, uses_anonymous_args = 0
 7626 0000 80B5     		push	{r7, lr}
 7627              		.cfi_def_cfa_offset 8
 7628              		.cfi_offset 7, -8
 7629              		.cfi_offset 14, -4
 7630 0002 00AF     		add	r7, sp, #0
 7631              		.cfi_def_cfa_register 7
1700:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 7632              		.loc 1 1700 0
 7633 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 7634 0008 0346     		mov	r3, r0
 7635 000a 002B     		cmp	r3, #0
 7636 000c 10D0     		beq	.L294
1701:main.c        ****     {
1702:main.c        ****         if(USB_GetConfiguration() != 0u)   
 7637              		.loc 1 1702 0
 7638 000e FFF7FEFF 		bl	USB_GetConfiguration
 7639 0012 0346     		mov	r3, r0
 7640 0014 002B     		cmp	r3, #0
 7641 0016 0BD0     		beq	.L294
1703:main.c        ****         {
1704:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1705:main.c        ****             
1706:main.c        ****             //SleepTimer_Start();
1707:main.c        ****         	
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 167


1708:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 7642              		.loc 1 1708 0
 7643 0018 244B     		ldr	r3, .L300
 7644 001a 1B78     		ldrb	r3, [r3]
 7645 001c DBB2     		uxtb	r3, r3
 7646 001e 002B     		cmp	r3, #0
 7647 0020 06D0     		beq	.L294
 7648              		.loc 1 1708 0 is_stmt 0 discriminator 1
 7649 0022 FFF7FEFF 		bl	USB_VBusPresent
 7650 0026 0346     		mov	r3, r0
 7651 0028 002B     		cmp	r3, #0
 7652 002a 01D0     		beq	.L294
1709:main.c        ****             {
1710:main.c        ****                 USB_MIDI_EP_Init();
 7653              		.loc 1 1710 0 is_stmt 1
 7654 002c FFF7FEFF 		bl	USB_MIDI_Init
 7655              	.L294:
1711:main.c        ****             }
1712:main.c        ****         }
1713:main.c        ****         else
1714:main.c        ****         {
1715:main.c        ****             //SleepTimer_Stop();
1716:main.c        ****         }    
1717:main.c        ****     }        
1718:main.c        ****     
1719:main.c        ****     if(USB_GetConfiguration() != 0u)    
 7656              		.loc 1 1719 0
 7657 0030 FFF7FEFF 		bl	USB_GetConfiguration
 7658 0034 0346     		mov	r3, r0
 7659 0036 002B     		cmp	r3, #0
 7660 0038 35D0     		beq	.L299
1720:main.c        ****     {
1721:main.c        **** 
1722:main.c        ****          /* Reinitialize after SET_CONFIGURATION or SET_INTERFACE Requests */
1723:main.c        ****         if(USB_IsConfigurationChanged() != 0x00)
 7661              		.loc 1 1723 0
 7662 003a FFF7FEFF 		bl	USB_IsConfigurationChanged
 7663 003e 0346     		mov	r3, r0
 7664 0040 002B     		cmp	r3, #0
 7665 0042 18D0     		beq	.L297
1724:main.c        ****         {
1725:main.c        ****             USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer,(uint16) USB_midiInPointer);
 7666              		.loc 1 1725 0
 7667 0044 1A4B     		ldr	r3, .L300+4
 7668 0046 1B78     		ldrb	r3, [r3]
 7669 0048 D8B2     		uxtb	r0, r3
 7670 004a 1A4B     		ldr	r3, .L300+8
 7671 004c 1B78     		ldrb	r3, [r3]
 7672 004e DBB2     		uxtb	r3, r3
 7673 0050 9BB2     		uxth	r3, r3
 7674 0052 1A46     		mov	r2, r3
 7675 0054 1849     		ldr	r1, .L300+12
 7676 0056 FFF7FEFF 		bl	USB_LoadInEP
1726:main.c        ****             //USB_LoadInEP(USB_midi_in_ep, USB_midiInBuffer, 64);
1727:main.c        ****             USB_ReadOutEP(USB_midi_out_ep,USB_midiOutBuffer, 64);
 7677              		.loc 1 1727 0
 7678 005a 184B     		ldr	r3, .L300+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 168


 7679 005c 1B78     		ldrb	r3, [r3]
 7680 005e DBB2     		uxtb	r3, r3
 7681 0060 4022     		movs	r2, #64
 7682 0062 1749     		ldr	r1, .L300+20
 7683 0064 1846     		mov	r0, r3
 7684 0066 FFF7FEFF 		bl	USB_ReadOutEP
1728:main.c        ****                                              /* configuring the DMAs for the first time only, the d
1729:main.c        ****                                              in the EP buffer is Transferred by DMA to the buffer a
1730:main.c        ****             USB_EnableOutEP(USB_midi_out_ep);       /* Note 3.*/
 7685              		.loc 1 1730 0
 7686 006a 144B     		ldr	r3, .L300+16
 7687 006c 1B78     		ldrb	r3, [r3]
 7688 006e DBB2     		uxtb	r3, r3
 7689 0070 1846     		mov	r0, r3
 7690 0072 FFF7FEFF 		bl	USB_EnableOutEP
 7691              	.L297:
1731:main.c        ****         }
1732:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7692              		.loc 1 1732 0
 7693 0076 0D4B     		ldr	r3, .L300
 7694 0078 1B78     		ldrb	r3, [r3]
 7695 007a DBB2     		uxtb	r3, r3
 7696 007c 002B     		cmp	r3, #0
 7697 007e 06D0     		beq	.L298
 7698              		.loc 1 1732 0 is_stmt 0 discriminator 1
 7699 0080 FFF7FEFF 		bl	USB_VBusPresent
 7700 0084 0346     		mov	r3, r0
 7701 0086 002B     		cmp	r3, #0
 7702 0088 01D0     		beq	.L298
1733:main.c        ****         {
1734:main.c        ****             USB_MIDI_IN_Service();
 7703              		.loc 1 1734 0 is_stmt 1
 7704 008a FFF7FEFF 		bl	USB_MIDI_IN_Service
 7705              	.L298:
1735:main.c        ****         }
1736:main.c        **** 
1737:main.c        **** 
1738:main.c        **** 
1739:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 7706              		.loc 1 1739 0
 7707 008e 074B     		ldr	r3, .L300
 7708 0090 1B78     		ldrb	r3, [r3]
 7709 0092 DBB2     		uxtb	r3, r3
 7710 0094 002B     		cmp	r3, #0
 7711 0096 06D0     		beq	.L299
 7712              		.loc 1 1739 0 is_stmt 0 discriminator 1
 7713 0098 FFF7FEFF 		bl	USB_VBusPresent
 7714 009c 0346     		mov	r3, r0
 7715 009e 002B     		cmp	r3, #0
 7716 00a0 01D0     		beq	.L299
1740:main.c        ****         {
1741:main.c        ****             USB_MIDI_OUT_Service();
 7717              		.loc 1 1741 0 is_stmt 1
 7718 00a2 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 7719              	.L299:
1742:main.c        ****         }
1743:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 169


1744:main.c        ****         
1745:main.c        **** }
 7720              		.loc 1 1745 0
 7721 00a6 00BF     		nop
 7722 00a8 80BD     		pop	{r7, pc}
 7723              	.L301:
 7724 00aa 00BF     		.align	2
 7725              	.L300:
 7726 00ac 00000000 		.word	USB_active
 7727 00b0 00000000 		.word	USB_midi_in_ep
 7728 00b4 00000000 		.word	USB_midiInPointer
 7729 00b8 00000000 		.word	USB_midiInBuffer
 7730 00bc 00000000 		.word	USB_midi_out_ep
 7731 00c0 00000000 		.word	USB_midiOutBuffer
 7732              		.cfi_endproc
 7733              	.LFE82:
 7734              		.size	USB_service, .-USB_service
 7735              		.section	.text.log2f_approx,"ax",%progbits
 7736              		.align	2
 7737              		.global	log2f_approx
 7738              		.thumb
 7739              		.thumb_func
 7740              		.type	log2f_approx, %function
 7741              	log2f_approx:
 7742              	.LFB83:
1746:main.c        **** 
1747:main.c        **** // This is a fast approximation to log2()
1748:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1749:main.c        **** float log2f_approx(float X) {
 7743              		.loc 1 1749 0
 7744              		.cfi_startproc
 7745              		@ args = 0, pretend = 0, frame = 24
 7746              		@ frame_needed = 1, uses_anonymous_args = 0
 7747 0000 80B5     		push	{r7, lr}
 7748              		.cfi_def_cfa_offset 8
 7749              		.cfi_offset 7, -8
 7750              		.cfi_offset 14, -4
 7751 0002 86B0     		sub	sp, sp, #24
 7752              		.cfi_def_cfa_offset 32
 7753 0004 00AF     		add	r7, sp, #0
 7754              		.cfi_def_cfa_register 7
 7755 0006 7860     		str	r0, [r7, #4]	@ float
1750:main.c        ****   float Y, F;
1751:main.c        ****   int E;
1752:main.c        ****   F = frexpf(fabsf(X), &E);
 7756              		.loc 1 1752 0
 7757 0008 7B68     		ldr	r3, [r7, #4]
 7758 000a 23F00043 		bic	r3, r3, #-2147483648
 7759 000e 07F10C02 		add	r2, r7, #12
 7760 0012 1146     		mov	r1, r2
 7761 0014 1846     		mov	r0, r3
 7762 0016 FFF7FEFF 		bl	frexpf
 7763 001a 7861     		str	r0, [r7, #20]	@ float
1753:main.c        ****   Y = 1.23149591368684f;
 7764              		.loc 1 1753 0
 7765 001c 1A4B     		ldr	r3, .L304
 7766 001e 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 170


1754:main.c        ****   Y *= F;
 7767              		.loc 1 1754 0
 7768 0020 7969     		ldr	r1, [r7, #20]	@ float
 7769 0022 3869     		ldr	r0, [r7, #16]	@ float
 7770 0024 FFF7FEFF 		bl	__aeabi_fmul
 7771 0028 0346     		mov	r3, r0
 7772 002a 3B61     		str	r3, [r7, #16]	@ float
1755:main.c        ****   Y += -4.11852516267426f;
 7773              		.loc 1 1755 0
 7774 002c 1749     		ldr	r1, .L304+4
 7775 002e 3869     		ldr	r0, [r7, #16]	@ float
 7776 0030 FFF7FEFF 		bl	__aeabi_fsub
 7777 0034 0346     		mov	r3, r0
 7778 0036 3B61     		str	r3, [r7, #16]	@ float
1756:main.c        ****   Y *= F;
 7779              		.loc 1 1756 0
 7780 0038 7969     		ldr	r1, [r7, #20]	@ float
 7781 003a 3869     		ldr	r0, [r7, #16]	@ float
 7782 003c FFF7FEFF 		bl	__aeabi_fmul
 7783 0040 0346     		mov	r3, r0
 7784 0042 3B61     		str	r3, [r7, #16]	@ float
1757:main.c        ****   Y += 6.02197014179219f;
 7785              		.loc 1 1757 0
 7786 0044 1249     		ldr	r1, .L304+8
 7787 0046 3869     		ldr	r0, [r7, #16]	@ float
 7788 0048 FFF7FEFF 		bl	__aeabi_fadd
 7789 004c 0346     		mov	r3, r0
 7790 004e 3B61     		str	r3, [r7, #16]	@ float
1758:main.c        ****   Y *= F;
 7791              		.loc 1 1758 0
 7792 0050 7969     		ldr	r1, [r7, #20]	@ float
 7793 0052 3869     		ldr	r0, [r7, #16]	@ float
 7794 0054 FFF7FEFF 		bl	__aeabi_fmul
 7795 0058 0346     		mov	r3, r0
 7796 005a 3B61     		str	r3, [r7, #16]	@ float
1759:main.c        ****   Y += -3.13396450166353f;
 7797              		.loc 1 1759 0
 7798 005c 0D49     		ldr	r1, .L304+12
 7799 005e 3869     		ldr	r0, [r7, #16]	@ float
 7800 0060 FFF7FEFF 		bl	__aeabi_fsub
 7801 0064 0346     		mov	r3, r0
 7802 0066 3B61     		str	r3, [r7, #16]	@ float
1760:main.c        ****   Y += E;
 7803              		.loc 1 1760 0
 7804 0068 FB68     		ldr	r3, [r7, #12]
 7805 006a 1846     		mov	r0, r3
 7806 006c FFF7FEFF 		bl	__aeabi_i2f
 7807 0070 0346     		mov	r3, r0
 7808 0072 1946     		mov	r1, r3
 7809 0074 3869     		ldr	r0, [r7, #16]	@ float
 7810 0076 FFF7FEFF 		bl	__aeabi_fadd
 7811 007a 0346     		mov	r3, r0
 7812 007c 3B61     		str	r3, [r7, #16]	@ float
1761:main.c        ****   return(Y);
 7813              		.loc 1 1761 0
 7814 007e 3B69     		ldr	r3, [r7, #16]	@ float
1762:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 171


 7815              		.loc 1 1762 0
 7816 0080 1846     		mov	r0, r3
 7817 0082 1837     		adds	r7, r7, #24
 7818              		.cfi_def_cfa_offset 8
 7819 0084 BD46     		mov	sp, r7
 7820              		.cfi_def_cfa_register 13
 7821              		@ sp needed
 7822 0086 80BD     		pop	{r7, pc}
 7823              	.L305:
 7824              		.align	2
 7825              	.L304:
 7826 0088 A8A19D3F 		.word	1067295144
 7827 008c F5CA8340 		.word	1082378997
 7828 0090 FBB3C040 		.word	1086370811
 7829 0094 E0924840 		.word	1078498016
 7830              		.cfi_endproc
 7831              	.LFE83:
 7832              		.size	log2f_approx, .-log2f_approx
 7833              		.global	prevNotes
 7834              		.bss
 7835              		.align	2
 7836              		.type	prevNotes, %object
 7837              		.size	prevNotes, 48
 7838              	prevNotes:
 7839 00e8 00000000 		.space	48
 7839      00000000 
 7839      00000000 
 7839      00000000 
 7839      00000000 
 7840              		.section	.text.noteEvent,"ax",%progbits
 7841              		.align	2
 7842              		.global	noteEvent
 7843              		.thumb
 7844              		.thumb_func
 7845              		.type	noteEvent, %function
 7846              	noteEvent:
 7847              	.LFB84:
1763:main.c        **** 
1764:main.c        **** 
1765:main.c        **** 
1766:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1767:main.c        **** 
1768:main.c        **** void noteEvent(int string)
1769:main.c        **** {
 7848              		.loc 1 1769 0
 7849              		.cfi_startproc
 7850              		@ args = 0, pretend = 0, frame = 24
 7851              		@ frame_needed = 1, uses_anonymous_args = 0
 7852 0000 80B5     		push	{r7, lr}
 7853              		.cfi_def_cfa_offset 8
 7854              		.cfi_offset 7, -8
 7855              		.cfi_offset 14, -4
 7856 0002 86B0     		sub	sp, sp, #24
 7857              		.cfi_def_cfa_offset 32
 7858 0004 00AF     		add	r7, sp, #0
 7859              		.cfi_def_cfa_register 7
 7860 0006 7860     		str	r0, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 172


1770:main.c        ****     
1771:main.c        ****     /*
1772:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
1773:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
1774:main.c        ****     int vInt  = (int) (v*4.0f);
1775:main.c        ****     if (vInt > 127)
1776:main.c        ****     {
1777:main.c        ****         vInt = 127;
1778:main.c        ****     }
1779:main.c        ****     */
1780:main.c        ****     uint16_t velocity = strings[string];
 7861              		.loc 1 1780 0
 7862 0008 2C4A     		ldr	r2, .L311
 7863 000a 7B68     		ldr	r3, [r7, #4]
 7864 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 7865 0010 FB82     		strh	r3, [r7, #22]	@ movhi
1781:main.c        ****     if (velocity > 0)
 7866              		.loc 1 1781 0
 7867 0012 FB8A     		ldrh	r3, [r7, #22]
 7868 0014 002B     		cmp	r3, #0
 7869 0016 43D0     		beq	.L307
 7870              	.LBB55:
1782:main.c        ****     {
1783:main.c        ****         //velocity = (((sqrtf((float)velocity) * 0.00001525878903f) - .0239372430f) * 130.114584436
1784:main.c        ****         float tempVel = (float)velocity;
 7871              		.loc 1 1784 0
 7872 0018 FB8A     		ldrh	r3, [r7, #22]
 7873 001a 1846     		mov	r0, r3
 7874 001c FFF7FEFF 		bl	__aeabi_ui2f
 7875 0020 0346     		mov	r3, r0
 7876 0022 3B61     		str	r3, [r7, #16]	@ float
1785:main.c        ****         tempVel = tempVel * 0.00001525878903f;
 7877              		.loc 1 1785 0
 7878 0024 4FF05E51 		mov	r1, #931135488
 7879 0028 3869     		ldr	r0, [r7, #16]	@ float
 7880 002a FFF7FEFF 		bl	__aeabi_fmul
 7881 002e 0346     		mov	r3, r0
 7882 0030 3B61     		str	r3, [r7, #16]	@ float
1786:main.c        ****         tempVel = sqrtf(tempVel);
 7883              		.loc 1 1786 0
 7884 0032 3869     		ldr	r0, [r7, #16]	@ float
 7885 0034 FFF7FEFF 		bl	sqrtf
 7886 0038 3861     		str	r0, [r7, #16]	@ float
1787:main.c        ****         tempVel = tempVel - 0.0239372430f;
 7887              		.loc 1 1787 0
 7888 003a 2149     		ldr	r1, .L311+4
 7889 003c 3869     		ldr	r0, [r7, #16]	@ float
 7890 003e FFF7FEFF 		bl	__aeabi_fsub
 7891 0042 0346     		mov	r3, r0
 7892 0044 3B61     		str	r3, [r7, #16]	@ float
1788:main.c        ****         tempVel = tempVel * 130.114584436252734f;
 7893              		.loc 1 1788 0
 7894 0046 1F49     		ldr	r1, .L311+8
 7895 0048 3869     		ldr	r0, [r7, #16]	@ float
 7896 004a FFF7FEFF 		bl	__aeabi_fmul
 7897 004e 0346     		mov	r3, r0
 7898 0050 3B61     		str	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 173


1789:main.c        ****         velocity = (int)tempVel;
 7899              		.loc 1 1789 0
 7900 0052 3869     		ldr	r0, [r7, #16]	@ float
 7901 0054 FFF7FEFF 		bl	__aeabi_f2iz
 7902 0058 0346     		mov	r3, r0
 7903 005a FB82     		strh	r3, [r7, #22]	@ movhi
1790:main.c        ****         
1791:main.c        **** 
1792:main.c        ****         if (velocity > 127)
 7904              		.loc 1 1792 0
 7905 005c FB8A     		ldrh	r3, [r7, #22]
 7906 005e 7F2B     		cmp	r3, #127
 7907 0060 01D9     		bls	.L308
1793:main.c        ****         {
1794:main.c        ****             velocity = 127;
 7908              		.loc 1 1794 0
 7909 0062 7F23     		movs	r3, #127
 7910 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 7911              	.L308:
1795:main.c        ****         }
1796:main.c        ****         
1797:main.c        ****         //only update octave on note-ons
1798:main.c        ****         //stringOctave[string] = powf(2.0f,octave);
1799:main.c        ****         int noteToSend = ((octave - 5) * 12) + openStringMIDI_Int[string];
 7912              		.loc 1 1799 0
 7913 0066 184B     		ldr	r3, .L311+12
 7914 0068 1B68     		ldr	r3, [r3]
 7915 006a 5A1F     		subs	r2, r3, #5
 7916 006c 1346     		mov	r3, r2
 7917 006e 5B00     		lsls	r3, r3, #1
 7918 0070 1344     		add	r3, r3, r2
 7919 0072 9B00     		lsls	r3, r3, #2
 7920 0074 1946     		mov	r1, r3
 7921 0076 154A     		ldr	r2, .L311+16
 7922 0078 7B68     		ldr	r3, [r7, #4]
 7923 007a 52F82330 		ldr	r3, [r2, r3, lsl #2]
 7924 007e 0B44     		add	r3, r3, r1
 7925 0080 FB60     		str	r3, [r7, #12]
1800:main.c        ****         sendMIDINoteOn(noteToSend , ((uint8_t)velocity), string+1);
 7926              		.loc 1 1800 0
 7927 0082 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 7928 0084 DBB2     		uxtb	r3, r3
 7929 0086 1946     		mov	r1, r3
 7930 0088 7B68     		ldr	r3, [r7, #4]
 7931 008a 0133     		adds	r3, r3, #1
 7932 008c 1A46     		mov	r2, r3
 7933 008e F868     		ldr	r0, [r7, #12]
 7934 0090 FFF7FEFF 		bl	sendMIDINoteOn
1801:main.c        ****         prevNotes[string] = noteToSend;
 7935              		.loc 1 1801 0
 7936 0094 0E49     		ldr	r1, .L311+20
 7937 0096 7B68     		ldr	r3, [r7, #4]
 7938 0098 FA68     		ldr	r2, [r7, #12]
 7939 009a 41F82320 		str	r2, [r1, r3, lsl #2]
 7940              	.LBE55:
1802:main.c        ****             
1803:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 174


1804:main.c        ****     else
1805:main.c        ****     {
1806:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
1807:main.c        ****     }
1808:main.c        **** 
1809:main.c        **** }
 7941              		.loc 1 1809 0
 7942 009e 09E0     		b	.L310
 7943              	.L307:
1806:main.c        ****     }
 7944              		.loc 1 1806 0
 7945 00a0 0B4A     		ldr	r2, .L311+20
 7946 00a2 7B68     		ldr	r3, [r7, #4]
 7947 00a4 52F82300 		ldr	r0, [r2, r3, lsl #2]
 7948 00a8 7B68     		ldr	r3, [r7, #4]
 7949 00aa 0133     		adds	r3, r3, #1
 7950 00ac 1A46     		mov	r2, r3
 7951 00ae 0021     		movs	r1, #0
 7952 00b0 FFF7FEFF 		bl	sendMIDINoteOn
 7953              	.L310:
 7954              		.loc 1 1809 0
 7955 00b4 00BF     		nop
 7956 00b6 1837     		adds	r7, r7, #24
 7957              		.cfi_def_cfa_offset 8
 7958 00b8 BD46     		mov	sp, r7
 7959              		.cfi_def_cfa_register 13
 7960              		@ sp needed
 7961 00ba 80BD     		pop	{r7, pc}
 7962              	.L312:
 7963              		.align	2
 7964              	.L311:
 7965 00bc 00000000 		.word	strings
 7966 00c0 0918C43C 		.word	1019484169
 7967 00c4 551D0243 		.word	1124212053
 7968 00c8 00000000 		.word	octave
 7969 00cc 00000000 		.word	openStringMIDI_Int
 7970 00d0 00000000 		.word	prevNotes
 7971              		.cfi_endproc
 7972              	.LFE84:
 7973              		.size	noteEvent, .-noteEvent
 7974              		.section	.text.CCEvent,"ax",%progbits
 7975              		.align	2
 7976              		.global	CCEvent
 7977              		.thumb
 7978              		.thumb_func
 7979              		.type	CCEvent, %function
 7980              	CCEvent:
 7981              	.LFB85:
1810:main.c        **** 
1811:main.c        **** void CCEvent(int cc, int val)
1812:main.c        **** {
 7982              		.loc 1 1812 0
 7983              		.cfi_startproc
 7984              		@ args = 0, pretend = 0, frame = 8
 7985              		@ frame_needed = 1, uses_anonymous_args = 0
 7986 0000 80B5     		push	{r7, lr}
 7987              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 175


 7988              		.cfi_offset 7, -8
 7989              		.cfi_offset 14, -4
 7990 0002 82B0     		sub	sp, sp, #8
 7991              		.cfi_def_cfa_offset 16
 7992 0004 00AF     		add	r7, sp, #0
 7993              		.cfi_def_cfa_register 7
 7994 0006 7860     		str	r0, [r7, #4]
 7995 0008 3960     		str	r1, [r7]
1813:main.c        ****     
1814:main.c        ****     sendMIDIControlChange(cc, val, 0);
 7996              		.loc 1 1814 0
 7997 000a 0022     		movs	r2, #0
 7998 000c 3968     		ldr	r1, [r7]
 7999 000e 7868     		ldr	r0, [r7, #4]
 8000 0010 FFF7FEFF 		bl	sendMIDIControlChange
1815:main.c        **** }
 8001              		.loc 1 1815 0
 8002 0014 00BF     		nop
 8003 0016 0837     		adds	r7, r7, #8
 8004              		.cfi_def_cfa_offset 8
 8005 0018 BD46     		mov	sp, r7
 8006              		.cfi_def_cfa_register 13
 8007              		@ sp needed
 8008 001a 80BD     		pop	{r7, pc}
 8009              		.cfi_endproc
 8010              	.LFE85:
 8011              		.size	CCEvent, .-CCEvent
 8012              		.section	.text.sendMIDINoteOn,"ax",%progbits
 8013              		.align	2
 8014              		.global	sendMIDINoteOn
 8015              		.thumb
 8016              		.thumb_func
 8017              		.type	sendMIDINoteOn, %function
 8018              	sendMIDINoteOn:
 8019              	.LFB86:
1816:main.c        **** 
1817:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1818:main.c        **** {  
 8020              		.loc 1 1818 0
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 16
 8023              		@ frame_needed = 1, uses_anonymous_args = 0
 8024 0000 80B5     		push	{r7, lr}
 8025              		.cfi_def_cfa_offset 8
 8026              		.cfi_offset 7, -8
 8027              		.cfi_offset 14, -4
 8028 0002 84B0     		sub	sp, sp, #16
 8029              		.cfi_def_cfa_offset 24
 8030 0004 00AF     		add	r7, sp, #0
 8031              		.cfi_def_cfa_register 7
 8032 0006 F860     		str	r0, [r7, #12]
 8033 0008 B960     		str	r1, [r7, #8]
 8034 000a 7A60     		str	r2, [r7, #4]
1819:main.c        ****    
1820:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 8035              		.loc 1 1820 0
 8036 000c 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 176


 8037 000e DBB2     		uxtb	r3, r3
 8038 0010 703B     		subs	r3, r3, #112
 8039 0012 DAB2     		uxtb	r2, r3
 8040 0014 114B     		ldr	r3, .L316
 8041 0016 1A70     		strb	r2, [r3]
1821:main.c        ****     midiMsg[1] = MIDInoteNum;
 8042              		.loc 1 1821 0
 8043 0018 FB68     		ldr	r3, [r7, #12]
 8044 001a DAB2     		uxtb	r2, r3
 8045 001c 0F4B     		ldr	r3, .L316
 8046 001e 5A70     		strb	r2, [r3, #1]
1822:main.c        ****     midiMsg[2] = velocity;	
 8047              		.loc 1 1822 0
 8048 0020 BB68     		ldr	r3, [r7, #8]
 8049 0022 DAB2     		uxtb	r2, r3
 8050 0024 0D4B     		ldr	r3, .L316
 8051 0026 9A70     		strb	r2, [r3, #2]
1823:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8052              		.loc 1 1823 0
 8053 0028 0D4B     		ldr	r3, .L316+4
 8054 002a 1B78     		ldrb	r3, [r3]
 8055 002c DBB2     		uxtb	r3, r3
 8056 002e 002B     		cmp	r3, #0
 8057 0030 09D0     		beq	.L315
 8058              		.loc 1 1823 0 is_stmt 0 discriminator 1
 8059 0032 FFF7FEFF 		bl	USB_VBusPresent
 8060 0036 0346     		mov	r3, r0
 8061 0038 002B     		cmp	r3, #0
 8062 003a 04D0     		beq	.L315
1824:main.c        ****     {
1825:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8063              		.loc 1 1825 0 is_stmt 1
 8064 003c 0022     		movs	r2, #0
 8065 003e 0749     		ldr	r1, .L316
 8066 0040 0320     		movs	r0, #3
 8067 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8068              	.L315:
1826:main.c        ****     } 
1827:main.c        ****     midiSent += 4;
 8069              		.loc 1 1827 0
 8070 0046 074B     		ldr	r3, .L316+8
 8071 0048 1B88     		ldrh	r3, [r3]
 8072 004a 0433     		adds	r3, r3, #4
 8073 004c 9AB2     		uxth	r2, r3
 8074 004e 054B     		ldr	r3, .L316+8
 8075 0050 1A80     		strh	r2, [r3]	@ movhi
1828:main.c        **** }
 8076              		.loc 1 1828 0
 8077 0052 00BF     		nop
 8078 0054 1037     		adds	r7, r7, #16
 8079              		.cfi_def_cfa_offset 8
 8080 0056 BD46     		mov	sp, r7
 8081              		.cfi_def_cfa_register 13
 8082              		@ sp needed
 8083 0058 80BD     		pop	{r7, pc}
 8084              	.L317:
 8085 005a 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 177


 8086              	.L316:
 8087 005c 00000000 		.word	midiMsg
 8088 0060 00000000 		.word	USB_active
 8089 0064 00000000 		.word	midiSent
 8090              		.cfi_endproc
 8091              	.LFE86:
 8092              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 8093              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 8094              		.align	2
 8095              		.global	sendMIDIPolyKeyPressure
 8096              		.thumb
 8097              		.thumb_func
 8098              		.type	sendMIDIPolyKeyPressure, %function
 8099              	sendMIDIPolyKeyPressure:
 8100              	.LFB87:
1829:main.c        **** 
1830:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1831:main.c        **** {
 8101              		.loc 1 1831 0
 8102              		.cfi_startproc
 8103              		@ args = 0, pretend = 0, frame = 16
 8104              		@ frame_needed = 1, uses_anonymous_args = 0
 8105 0000 80B5     		push	{r7, lr}
 8106              		.cfi_def_cfa_offset 8
 8107              		.cfi_offset 7, -8
 8108              		.cfi_offset 14, -4
 8109 0002 84B0     		sub	sp, sp, #16
 8110              		.cfi_def_cfa_offset 24
 8111 0004 00AF     		add	r7, sp, #0
 8112              		.cfi_def_cfa_register 7
 8113 0006 F860     		str	r0, [r7, #12]
 8114 0008 B960     		str	r1, [r7, #8]
 8115 000a 7A60     		str	r2, [r7, #4]
1832:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 8116              		.loc 1 1832 0
 8117 000c 7B68     		ldr	r3, [r7, #4]
 8118 000e DBB2     		uxtb	r3, r3
 8119 0010 603B     		subs	r3, r3, #96
 8120 0012 DAB2     		uxtb	r2, r3
 8121 0014 114B     		ldr	r3, .L320
 8122 0016 1A70     		strb	r2, [r3]
1833:main.c        ****     midiMsg[1] = MIDInoteNum;
 8123              		.loc 1 1833 0
 8124 0018 FB68     		ldr	r3, [r7, #12]
 8125 001a DAB2     		uxtb	r2, r3
 8126 001c 0F4B     		ldr	r3, .L320
 8127 001e 5A70     		strb	r2, [r3, #1]
1834:main.c        ****     midiMsg[2] = pressure;		
 8128              		.loc 1 1834 0
 8129 0020 BB68     		ldr	r3, [r7, #8]
 8130 0022 DAB2     		uxtb	r2, r3
 8131 0024 0D4B     		ldr	r3, .L320
 8132 0026 9A70     		strb	r2, [r3, #2]
1835:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8133              		.loc 1 1835 0
 8134 0028 0D4B     		ldr	r3, .L320+4
 8135 002a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 178


 8136 002c DBB2     		uxtb	r3, r3
 8137 002e 002B     		cmp	r3, #0
 8138 0030 09D0     		beq	.L319
 8139              		.loc 1 1835 0 is_stmt 0 discriminator 1
 8140 0032 FFF7FEFF 		bl	USB_VBusPresent
 8141 0036 0346     		mov	r3, r0
 8142 0038 002B     		cmp	r3, #0
 8143 003a 04D0     		beq	.L319
1836:main.c        ****     {
1837:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8144              		.loc 1 1837 0 is_stmt 1
 8145 003c 0022     		movs	r2, #0
 8146 003e 0749     		ldr	r1, .L320
 8147 0040 0320     		movs	r0, #3
 8148 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8149              	.L319:
1838:main.c        ****     } 
1839:main.c        ****     midiSent += 4;
 8150              		.loc 1 1839 0
 8151 0046 074B     		ldr	r3, .L320+8
 8152 0048 1B88     		ldrh	r3, [r3]
 8153 004a 0433     		adds	r3, r3, #4
 8154 004c 9AB2     		uxth	r2, r3
 8155 004e 054B     		ldr	r3, .L320+8
 8156 0050 1A80     		strh	r2, [r3]	@ movhi
1840:main.c        **** }
 8157              		.loc 1 1840 0
 8158 0052 00BF     		nop
 8159 0054 1037     		adds	r7, r7, #16
 8160              		.cfi_def_cfa_offset 8
 8161 0056 BD46     		mov	sp, r7
 8162              		.cfi_def_cfa_register 13
 8163              		@ sp needed
 8164 0058 80BD     		pop	{r7, pc}
 8165              	.L321:
 8166 005a 00BF     		.align	2
 8167              	.L320:
 8168 005c 00000000 		.word	midiMsg
 8169 0060 00000000 		.word	USB_active
 8170 0064 00000000 		.word	midiSent
 8171              		.cfi_endproc
 8172              	.LFE87:
 8173              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 8174              		.section	.text.sendMIDIControlChange,"ax",%progbits
 8175              		.align	2
 8176              		.global	sendMIDIControlChange
 8177              		.thumb
 8178              		.thumb_func
 8179              		.type	sendMIDIControlChange, %function
 8180              	sendMIDIControlChange:
 8181              	.LFB88:
1841:main.c        **** 
1842:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1843:main.c        **** {
 8182              		.loc 1 1843 0
 8183              		.cfi_startproc
 8184              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 179


 8185              		@ frame_needed = 1, uses_anonymous_args = 0
 8186 0000 80B5     		push	{r7, lr}
 8187              		.cfi_def_cfa_offset 8
 8188              		.cfi_offset 7, -8
 8189              		.cfi_offset 14, -4
 8190 0002 84B0     		sub	sp, sp, #16
 8191              		.cfi_def_cfa_offset 24
 8192 0004 00AF     		add	r7, sp, #0
 8193              		.cfi_def_cfa_register 7
 8194 0006 F860     		str	r0, [r7, #12]
 8195 0008 B960     		str	r1, [r7, #8]
 8196 000a 7A60     		str	r2, [r7, #4]
1844:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 8197              		.loc 1 1844 0
 8198 000c 7B68     		ldr	r3, [r7, #4]
 8199 000e DBB2     		uxtb	r3, r3
 8200 0010 503B     		subs	r3, r3, #80
 8201 0012 DAB2     		uxtb	r2, r3
 8202 0014 114B     		ldr	r3, .L324
 8203 0016 1A70     		strb	r2, [r3]
1845:main.c        ****     midiMsg[1] = CCnum;
 8204              		.loc 1 1845 0
 8205 0018 FB68     		ldr	r3, [r7, #12]
 8206 001a DAB2     		uxtb	r2, r3
 8207 001c 0F4B     		ldr	r3, .L324
 8208 001e 5A70     		strb	r2, [r3, #1]
1846:main.c        ****     midiMsg[2] = CCval;			
 8209              		.loc 1 1846 0
 8210 0020 BB68     		ldr	r3, [r7, #8]
 8211 0022 DAB2     		uxtb	r2, r3
 8212 0024 0D4B     		ldr	r3, .L324
 8213 0026 9A70     		strb	r2, [r3, #2]
1847:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8214              		.loc 1 1847 0
 8215 0028 0D4B     		ldr	r3, .L324+4
 8216 002a 1B78     		ldrb	r3, [r3]
 8217 002c DBB2     		uxtb	r3, r3
 8218 002e 002B     		cmp	r3, #0
 8219 0030 09D0     		beq	.L323
 8220              		.loc 1 1847 0 is_stmt 0 discriminator 1
 8221 0032 FFF7FEFF 		bl	USB_VBusPresent
 8222 0036 0346     		mov	r3, r0
 8223 0038 002B     		cmp	r3, #0
 8224 003a 04D0     		beq	.L323
1848:main.c        ****     {
1849:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8225              		.loc 1 1849 0 is_stmt 1
 8226 003c 0022     		movs	r2, #0
 8227 003e 0749     		ldr	r1, .L324
 8228 0040 0320     		movs	r0, #3
 8229 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8230              	.L323:
1850:main.c        ****     } 
1851:main.c        ****     midiSent += 4;
 8231              		.loc 1 1851 0
 8232 0046 074B     		ldr	r3, .L324+8
 8233 0048 1B88     		ldrh	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 180


 8234 004a 0433     		adds	r3, r3, #4
 8235 004c 9AB2     		uxth	r2, r3
 8236 004e 054B     		ldr	r3, .L324+8
 8237 0050 1A80     		strh	r2, [r3]	@ movhi
1852:main.c        **** }
 8238              		.loc 1 1852 0
 8239 0052 00BF     		nop
 8240 0054 1037     		adds	r7, r7, #16
 8241              		.cfi_def_cfa_offset 8
 8242 0056 BD46     		mov	sp, r7
 8243              		.cfi_def_cfa_register 13
 8244              		@ sp needed
 8245 0058 80BD     		pop	{r7, pc}
 8246              	.L325:
 8247 005a 00BF     		.align	2
 8248              	.L324:
 8249 005c 00000000 		.word	midiMsg
 8250 0060 00000000 		.word	USB_active
 8251 0064 00000000 		.word	midiSent
 8252              		.cfi_endproc
 8253              	.LFE88:
 8254              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 8255              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 8256              		.align	2
 8257              		.global	sendMIDIPitchBend
 8258              		.thumb
 8259              		.thumb_func
 8260              		.type	sendMIDIPitchBend, %function
 8261              	sendMIDIPitchBend:
 8262              	.LFB89:
1853:main.c        **** 
1854:main.c        **** void sendMIDIPitchBend(int val, int channel)
1855:main.c        **** {
 8263              		.loc 1 1855 0
 8264              		.cfi_startproc
 8265              		@ args = 0, pretend = 0, frame = 8
 8266              		@ frame_needed = 1, uses_anonymous_args = 0
 8267 0000 80B5     		push	{r7, lr}
 8268              		.cfi_def_cfa_offset 8
 8269              		.cfi_offset 7, -8
 8270              		.cfi_offset 14, -4
 8271 0002 82B0     		sub	sp, sp, #8
 8272              		.cfi_def_cfa_offset 16
 8273 0004 00AF     		add	r7, sp, #0
 8274              		.cfi_def_cfa_register 7
 8275 0006 7860     		str	r0, [r7, #4]
 8276 0008 3960     		str	r1, [r7]
1856:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 8277              		.loc 1 1856 0
 8278 000a 3B68     		ldr	r3, [r7]
 8279 000c DBB2     		uxtb	r3, r3
 8280 000e 203B     		subs	r3, r3, #32
 8281 0010 DAB2     		uxtb	r2, r3
 8282 0012 134B     		ldr	r3, .L328
 8283 0014 1A70     		strb	r2, [r3]
1857:main.c        ****     midiMsg[1] = (val & 127); //LSB
 8284              		.loc 1 1857 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 181


 8285 0016 7B68     		ldr	r3, [r7, #4]
 8286 0018 DBB2     		uxtb	r3, r3
 8287 001a 03F07F03 		and	r3, r3, #127
 8288 001e DAB2     		uxtb	r2, r3
 8289 0020 0F4B     		ldr	r3, .L328
 8290 0022 5A70     		strb	r2, [r3, #1]
1858:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 8291              		.loc 1 1858 0
 8292 0024 7B68     		ldr	r3, [r7, #4]
 8293 0026 DB11     		asrs	r3, r3, #7
 8294 0028 DAB2     		uxtb	r2, r3
 8295 002a 0D4B     		ldr	r3, .L328
 8296 002c 9A70     		strb	r2, [r3, #2]
1859:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 8297              		.loc 1 1859 0
 8298 002e 0D4B     		ldr	r3, .L328+4
 8299 0030 1B78     		ldrb	r3, [r3]
 8300 0032 DBB2     		uxtb	r3, r3
 8301 0034 002B     		cmp	r3, #0
 8302 0036 09D0     		beq	.L327
 8303              		.loc 1 1859 0 is_stmt 0 discriminator 1
 8304 0038 FFF7FEFF 		bl	USB_VBusPresent
 8305 003c 0346     		mov	r3, r0
 8306 003e 002B     		cmp	r3, #0
 8307 0040 04D0     		beq	.L327
1860:main.c        ****     {
1861:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8308              		.loc 1 1861 0 is_stmt 1
 8309 0042 0022     		movs	r2, #0
 8310 0044 0649     		ldr	r1, .L328
 8311 0046 0320     		movs	r0, #3
 8312 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8313              	.L327:
1862:main.c        ****     } 
1863:main.c        ****     midiSent += 4;
 8314              		.loc 1 1863 0
 8315 004c 064B     		ldr	r3, .L328+8
 8316 004e 1B88     		ldrh	r3, [r3]
 8317 0050 0433     		adds	r3, r3, #4
 8318 0052 9AB2     		uxth	r2, r3
 8319 0054 044B     		ldr	r3, .L328+8
 8320 0056 1A80     		strh	r2, [r3]	@ movhi
1864:main.c        **** }
 8321              		.loc 1 1864 0
 8322 0058 00BF     		nop
 8323 005a 0837     		adds	r7, r7, #8
 8324              		.cfi_def_cfa_offset 8
 8325 005c BD46     		mov	sp, r7
 8326              		.cfi_def_cfa_register 13
 8327              		@ sp needed
 8328 005e 80BD     		pop	{r7, pc}
 8329              	.L329:
 8330              		.align	2
 8331              	.L328:
 8332 0060 00000000 		.word	midiMsg
 8333 0064 00000000 		.word	USB_active
 8334 0068 00000000 		.word	midiSent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 182


 8335              		.cfi_endproc
 8336              	.LFE89:
 8337              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 8338              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 8339              		.align	2
 8340              		.global	sendMIDIAllNotesOff
 8341              		.thumb
 8342              		.thumb_func
 8343              		.type	sendMIDIAllNotesOff, %function
 8344              	sendMIDIAllNotesOff:
 8345              	.LFB90:
1865:main.c        **** 
1866:main.c        **** void sendMIDIAllNotesOff(void)
1867:main.c        **** {   
 8346              		.loc 1 1867 0
 8347              		.cfi_startproc
 8348              		@ args = 0, pretend = 0, frame = 8
 8349              		@ frame_needed = 1, uses_anonymous_args = 0
 8350 0000 80B5     		push	{r7, lr}
 8351              		.cfi_def_cfa_offset 8
 8352              		.cfi_offset 7, -8
 8353              		.cfi_offset 14, -4
 8354 0002 82B0     		sub	sp, sp, #8
 8355              		.cfi_def_cfa_offset 16
 8356 0004 00AF     		add	r7, sp, #0
 8357              		.cfi_def_cfa_register 7
 8358              	.LBB56:
1868:main.c        ****     for (uint8_t i = 0; i < 128; i++)
 8359              		.loc 1 1868 0
 8360 0006 0023     		movs	r3, #0
 8361 0008 FB71     		strb	r3, [r7, #7]
 8362 000a 1AE0     		b	.L331
 8363              	.L333:
1869:main.c        ****     {
1870:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 8364              		.loc 1 1870 0
 8365 000c 114B     		ldr	r3, .L334
 8366 000e 9022     		movs	r2, #144
 8367 0010 1A70     		strb	r2, [r3]
1871:main.c        ****         midiMsg[1] = i;
 8368              		.loc 1 1871 0
 8369 0012 104A     		ldr	r2, .L334
 8370 0014 FB79     		ldrb	r3, [r7, #7]
 8371 0016 5370     		strb	r3, [r2, #1]
1872:main.c        ****         midiMsg[2] = 0;	
 8372              		.loc 1 1872 0
 8373 0018 0E4B     		ldr	r3, .L334
 8374 001a 0022     		movs	r2, #0
 8375 001c 9A70     		strb	r2, [r3, #2]
1873:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 8376              		.loc 1 1873 0
 8377 001e 0E4B     		ldr	r3, .L334+4
 8378 0020 1B78     		ldrb	r3, [r3]
 8379 0022 DBB2     		uxtb	r3, r3
 8380 0024 002B     		cmp	r3, #0
 8381 0026 09D0     		beq	.L332
 8382              		.loc 1 1873 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 183


 8383 0028 FFF7FEFF 		bl	USB_VBusPresent
 8384 002c 0346     		mov	r3, r0
 8385 002e 002B     		cmp	r3, #0
 8386 0030 04D0     		beq	.L332
1874:main.c        ****         {       
1875:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 8387              		.loc 1 1875 0 is_stmt 1
 8388 0032 0022     		movs	r2, #0
 8389 0034 0749     		ldr	r1, .L334
 8390 0036 0320     		movs	r0, #3
 8391 0038 FFF7FEFF 		bl	USB_PutUsbMidiIn
 8392              	.L332:
1868:main.c        ****     {
 8393              		.loc 1 1868 0 discriminator 2
 8394 003c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 8395 003e 0133     		adds	r3, r3, #1
 8396 0040 FB71     		strb	r3, [r7, #7]
 8397              	.L331:
1868:main.c        ****     {
 8398              		.loc 1 1868 0 is_stmt 0 discriminator 1
 8399 0042 97F90730 		ldrsb	r3, [r7, #7]
 8400 0046 002B     		cmp	r3, #0
 8401 0048 E0DA     		bge	.L333
 8402              	.LBE56:
1876:main.c        ****         }
1877:main.c        ****     }
1878:main.c        **** }
 8403              		.loc 1 1878 0 is_stmt 1
 8404 004a 00BF     		nop
 8405 004c 0837     		adds	r7, r7, #8
 8406              		.cfi_def_cfa_offset 8
 8407 004e BD46     		mov	sp, r7
 8408              		.cfi_def_cfa_register 13
 8409              		@ sp needed
 8410 0050 80BD     		pop	{r7, pc}
 8411              	.L335:
 8412 0052 00BF     		.align	2
 8413              	.L334:
 8414 0054 00000000 		.word	midiMsg
 8415 0058 00000000 		.word	USB_active
 8416              		.cfi_endproc
 8417              	.LFE90:
 8418              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 8419              		.global	checkStatus
 8420              		.bss
 8421              		.type	checkStatus, %object
 8422              		.size	checkStatus, 1
 8423              	checkStatus:
 8424 0118 00       		.space	1
 8425              		.global	checkBase
 8426 0119 00       		.align	1
 8427              		.type	checkBase, %object
 8428              		.size	checkBase, 2
 8429              	checkBase:
 8430 011a 0000     		.space	2
 8431              		.comm	tempMIDI,4,4
 8432              		.global	firstSysex
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 184


 8433              		.type	firstSysex, %object
 8434              		.size	firstSysex, 1
 8435              	firstSysex:
 8436 011c 00       		.space	1
 8437              		.global	sysexPointerMask
 8438              		.section	.rodata
 8439              		.align	2
 8440              		.type	sysexPointerMask, %object
 8441              		.size	sysexPointerMask, 4
 8442              	sysexPointerMask:
 8443 0534 FF070000 		.word	2047
 8444              		.global	moreToDo
 8445              		.bss
 8446 011d 000000   		.align	2
 8447              		.type	moreToDo, %object
 8448              		.size	moreToDo, 4
 8449              	moreToDo:
 8450 0120 00000000 		.space	4
 8451              		.global	SPI_errors
 8452              		.align	2
 8453              		.type	SPI_errors, %object
 8454              		.size	SPI_errors, 4
 8455              	SPI_errors:
 8456 0124 00000000 		.space	4
 8457              		.comm	nearbyValues,64,4
 8458              		.section	.text.parseSysex,"ax",%progbits
 8459              		.align	2
 8460              		.global	parseSysex
 8461              		.thumb
 8462              		.thumb_func
 8463              		.type	parseSysex, %function
 8464              	parseSysex:
 8465              	.LFB91:
1879:main.c        **** 
1880:main.c        **** 
1881:main.c        **** 
1882:main.c        **** 
1883:main.c        **** volatile uint8_t checkStatus = 0;
1884:main.c        **** volatile uint16_t checkBase = 0;
1885:main.c        **** volatile uint8_t tempMIDI[4];
1886:main.c        **** volatile uint8_t firstSysex = 0;
1887:main.c        **** const uint32_t sysexPointerMask = 2047;
1888:main.c        **** volatile uint32_t moreToDo = 0;
1889:main.c        **** 
1890:main.c        **** int SPI_errors = 0;
1891:main.c        **** 
1892:main.c        **** volatile uint32_t nearbyValues[16];
1893:main.c        **** 
1894:main.c        **** void parseSysex(void)
1895:main.c        **** {
 8466              		.loc 1 1895 0
 8467              		.cfi_startproc
 8468              		@ args = 0, pretend = 0, frame = 104
 8469              		@ frame_needed = 1, uses_anonymous_args = 0
 8470 0000 90B5     		push	{r4, r7, lr}
 8471              		.cfi_def_cfa_offset 12
 8472              		.cfi_offset 4, -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 185


 8473              		.cfi_offset 7, -8
 8474              		.cfi_offset 14, -4
 8475 0002 9BB0     		sub	sp, sp, #108
 8476              		.cfi_def_cfa_offset 120
 8477 0004 00AF     		add	r7, sp, #0
 8478              		.cfi_def_cfa_register 7
1896:main.c        ****     parsingSysex = 1;
 8479              		.loc 1 1896 0
 8480 0006 A54B     		ldr	r3, .L402
 8481 0008 0122     		movs	r2, #1
 8482 000a 1A70     		strb	r2, [r3]
1897:main.c        ****     
1898:main.c        ****     uint32_t messageStart = sysexMessageStartPoints[sysexMessageStartPointsReadPosition];
 8483              		.loc 1 1898 0
 8484 000c A44B     		ldr	r3, .L402+4
 8485 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8486 0010 1A46     		mov	r2, r3
 8487 0012 A44B     		ldr	r3, .L402+8
 8488 0014 53F82230 		ldr	r3, [r3, r2, lsl #2]
 8489 0018 FB63     		str	r3, [r7, #60]
1899:main.c        ****     uint32_t messageEnd = sysexMessageStartPoints[(sysexMessageStartPointsReadPosition + 1)];
 8490              		.loc 1 1899 0
 8491 001a A14B     		ldr	r3, .L402+4
 8492 001c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8493 001e 0133     		adds	r3, r3, #1
 8494 0020 A04A     		ldr	r2, .L402+8
 8495 0022 52F82330 		ldr	r3, [r2, r3, lsl #2]
 8496 0026 BB63     		str	r3, [r7, #56]
1900:main.c        ****     sysexMessageStartPointsReadPosition++; //get ready for next one
 8497              		.loc 1 1900 0
 8498 0028 9D4B     		ldr	r3, .L402+4
 8499 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8500 002c 0133     		adds	r3, r3, #1
 8501 002e DAB2     		uxtb	r2, r3
 8502 0030 9B4B     		ldr	r3, .L402+4
 8503 0032 1A70     		strb	r2, [r3]
1901:main.c        ****     sysexReadPointer = messageStart;
 8504              		.loc 1 1901 0
 8505 0034 9C4A     		ldr	r2, .L402+12
 8506 0036 FB6B     		ldr	r3, [r7, #60]
 8507 0038 1360     		str	r3, [r2]
 8508              	.LBB57:
1902:main.c        ****     for (int i = 0; i < 16; i++)
 8509              		.loc 1 1902 0
 8510 003a 0023     		movs	r3, #0
 8511 003c 7B66     		str	r3, [r7, #100]
 8512 003e 11E0     		b	.L337
 8513              	.L338:
1903:main.c        ****     {
1904:main.c        ****         nearbyValues[i]= sysexBuffer[(sysexReadPointer-8+i) &sysexPointerMask];
 8514              		.loc 1 1904 0 discriminator 3
 8515 0040 994B     		ldr	r3, .L402+12
 8516 0042 1A68     		ldr	r2, [r3]
 8517 0044 7B6E     		ldr	r3, [r7, #100]
 8518 0046 1344     		add	r3, r3, r2
 8519 0048 083B     		subs	r3, r3, #8
 8520 004a 40F2FF72 		movw	r2, #2047
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 186


 8521 004e 1340     		ands	r3, r3, r2
 8522 0050 964A     		ldr	r2, .L402+16
 8523 0052 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8524 0054 1946     		mov	r1, r3
 8525 0056 964A     		ldr	r2, .L402+20
 8526 0058 7B6E     		ldr	r3, [r7, #100]
 8527 005a 42F82310 		str	r1, [r2, r3, lsl #2]
1902:main.c        ****     for (int i = 0; i < 16; i++)
 8528              		.loc 1 1902 0 discriminator 3
 8529 005e 7B6E     		ldr	r3, [r7, #100]
 8530 0060 0133     		adds	r3, r3, #1
 8531 0062 7B66     		str	r3, [r7, #100]
 8532              	.L337:
1902:main.c        ****     for (int i = 0; i < 16; i++)
 8533              		.loc 1 1902 0 is_stmt 0 discriminator 1
 8534 0064 7B6E     		ldr	r3, [r7, #100]
 8535 0066 0F2B     		cmp	r3, #15
 8536 0068 EADD     		ble	.L338
 8537              	.LBE57:
1905:main.c        ****     }
1906:main.c        ****     //0 = it's a preset
1907:main.c        ****     if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 0)
 8538              		.loc 1 1907 0 is_stmt 1
 8539 006a 8F4B     		ldr	r3, .L402+12
 8540 006c 1B68     		ldr	r3, [r3]
 8541 006e 40F2FF72 		movw	r2, #2047
 8542 0072 1340     		ands	r3, r3, r2
 8543 0074 8D4A     		ldr	r2, .L402+16
 8544 0076 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8545 0078 002B     		cmp	r3, #0
 8546 007a 40F07583 		bne	.L339
 8547              	.LBB58:
1908:main.c        ****     {
1909:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 8548              		.loc 1 1909 0
 8549 007e 8D4B     		ldr	r3, .L402+24
 8550 0080 0122     		movs	r2, #1
 8551 0082 1A70     		strb	r2, [r3]
1910:main.c        ****         currentFloat = 0;
 8552              		.loc 1 1910 0
 8553 0084 8C4B     		ldr	r3, .L402+28
 8554 0086 0022     		movs	r2, #0
 8555 0088 1A60     		str	r2, [r3]
1911:main.c        ****         presetArraySection = presetName;
 8556              		.loc 1 1911 0
 8557 008a 8C4B     		ldr	r3, .L402+32
 8558 008c 0022     		movs	r2, #0
 8559 008e 1A70     		strb	r2, [r3]
1912:main.c        ****         presetNumberToWrite = sysexBuffer[(sysexReadPointer+1) & sysexPointerMask];
 8560              		.loc 1 1912 0
 8561 0090 854B     		ldr	r3, .L402+12
 8562 0092 1B68     		ldr	r3, [r3]
 8563 0094 0133     		adds	r3, r3, #1
 8564 0096 40F2FF72 		movw	r2, #2047
 8565 009a 1340     		ands	r3, r3, r2
 8566 009c 834A     		ldr	r2, .L402+16
 8567 009e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 187


 8568 00a0 874B     		ldr	r3, .L402+36
 8569 00a2 1A70     		strb	r2, [r3]
1913:main.c        ****         presetArray[0] = sysexBuffer[(sysexReadPointer+2) & sysexPointerMask];
 8570              		.loc 1 1913 0
 8571 00a4 804B     		ldr	r3, .L402+12
 8572 00a6 1B68     		ldr	r3, [r3]
 8573 00a8 0233     		adds	r3, r3, #2
 8574 00aa 40F2FF72 		movw	r2, #2047
 8575 00ae 1340     		ands	r3, r3, r2
 8576 00b0 7E4A     		ldr	r2, .L402+16
 8577 00b2 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8578 00b4 834B     		ldr	r3, .L402+40
 8579 00b6 1A70     		strb	r2, [r3]
1914:main.c        ****         presetArray[1] = sysexBuffer[(sysexReadPointer+3) & sysexPointerMask];
 8580              		.loc 1 1914 0
 8581 00b8 7B4B     		ldr	r3, .L402+12
 8582 00ba 1B68     		ldr	r3, [r3]
 8583 00bc 0333     		adds	r3, r3, #3
 8584 00be 40F2FF72 		movw	r2, #2047
 8585 00c2 1340     		ands	r3, r3, r2
 8586 00c4 794A     		ldr	r2, .L402+16
 8587 00c6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8588 00c8 7E4B     		ldr	r3, .L402+40
 8589 00ca 5A70     		strb	r2, [r3, #1]
1915:main.c        ****         presetArray[2] = sysexBuffer[(sysexReadPointer+4) & sysexPointerMask];
 8590              		.loc 1 1915 0
 8591 00cc 764B     		ldr	r3, .L402+12
 8592 00ce 1B68     		ldr	r3, [r3]
 8593 00d0 0433     		adds	r3, r3, #4
 8594 00d2 40F2FF72 		movw	r2, #2047
 8595 00d6 1340     		ands	r3, r3, r2
 8596 00d8 744A     		ldr	r2, .L402+16
 8597 00da D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8598 00dc 794B     		ldr	r3, .L402+40
 8599 00de 9A70     		strb	r2, [r3, #2]
1916:main.c        ****         presetArray[3] = sysexBuffer[(sysexReadPointer+5) & sysexPointerMask];
 8600              		.loc 1 1916 0
 8601 00e0 714B     		ldr	r3, .L402+12
 8602 00e2 1B68     		ldr	r3, [r3]
 8603 00e4 0533     		adds	r3, r3, #5
 8604 00e6 40F2FF72 		movw	r2, #2047
 8605 00ea 1340     		ands	r3, r3, r2
 8606 00ec 6F4A     		ldr	r2, .L402+16
 8607 00ee D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 8608 00f0 744B     		ldr	r3, .L402+40
 8609 00f2 DA70     		strb	r2, [r3, #3]
1917:main.c        ****         
1918:main.c        ****         union breakFloat theVal;
1919:main.c        ****         uint32_t i = 6;
 8610              		.loc 1 1919 0
 8611 00f4 0623     		movs	r3, #6
 8612 00f6 3B66     		str	r3, [r7, #96]
1920:main.c        ****         sysexReadPointer = i + sysexReadPointer;
 8613              		.loc 1 1920 0
 8614 00f8 6B4B     		ldr	r3, .L402+12
 8615 00fa 1A68     		ldr	r2, [r3]
 8616 00fc 3B6E     		ldr	r3, [r7, #96]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 188


 8617 00fe 1344     		add	r3, r3, r2
 8618 0100 694A     		ldr	r2, .L402+12
 8619 0102 1360     		str	r3, [r2]
1921:main.c        ****         uint8_t stoppingPoint = PRESET_NAME_LENGTH_IN_BYTES+i;
 8620              		.loc 1 1921 0
 8621 0104 3B6E     		ldr	r3, [r7, #96]
 8622 0106 DBB2     		uxtb	r3, r3
 8623 0108 0E33     		adds	r3, r3, #14
 8624 010a 87F83730 		strb	r3, [r7, #55]
1922:main.c        ****         for (; i < stoppingPoint; i++)
 8625              		.loc 1 1922 0
 8626 010e 2DE0     		b	.L340
 8627              	.L341:
1923:main.c        ****         {
1924:main.c        ****             presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass on t
 8628              		.loc 1 1924 0 discriminator 2
 8629 0110 3B6E     		ldr	r3, [r7, #96]
 8630 0112 023B     		subs	r3, r3, #2
 8631 0114 644A     		ldr	r2, .L402+12
 8632 0116 1268     		ldr	r2, [r2]
 8633 0118 40F2FF71 		movw	r1, #2047
 8634 011c 0A40     		ands	r2, r2, r1
 8635 011e 6349     		ldr	r1, .L402+16
 8636 0120 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8637 0122 02F07F02 		and	r2, r2, #127
 8638 0126 D1B2     		uxtb	r1, r2
 8639 0128 664A     		ldr	r2, .L402+40
 8640 012a D154     		strb	r1, [r2, r3]
1925:main.c        ****             presetNamesArray[presetNumberToWrite][i-6] = sysexBuffer[sysexReadPointer & sysexPointe
 8641              		.loc 1 1925 0 discriminator 2
 8642 012c 644B     		ldr	r3, .L402+36
 8643 012e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8644 0130 1846     		mov	r0, r3
 8645 0132 3B6E     		ldr	r3, [r7, #96]
 8646 0134 9A1F     		subs	r2, r3, #6
 8647 0136 5C4B     		ldr	r3, .L402+12
 8648 0138 1B68     		ldr	r3, [r3]
 8649 013a 40F2FF71 		movw	r1, #2047
 8650 013e 0B40     		ands	r3, r3, r1
 8651 0140 5A49     		ldr	r1, .L402+16
 8652 0142 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8653 0144 03F07F03 		and	r3, r3, #127
 8654 0148 DCB2     		uxtb	r4, r3
 8655 014a 5F49     		ldr	r1, .L402+44
 8656 014c 0346     		mov	r3, r0
 8657 014e DB00     		lsls	r3, r3, #3
 8658 0150 1B1A     		subs	r3, r3, r0
 8659 0152 5B00     		lsls	r3, r3, #1
 8660 0154 0B44     		add	r3, r3, r1
 8661 0156 1344     		add	r3, r3, r2
 8662 0158 2246     		mov	r2, r4
 8663 015a 1A70     		strb	r2, [r3]
1926:main.c        ****             sysexReadPointer++;
 8664              		.loc 1 1926 0 discriminator 2
 8665 015c 524B     		ldr	r3, .L402+12
 8666 015e 1B68     		ldr	r3, [r3]
 8667 0160 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 189


 8668 0162 514A     		ldr	r2, .L402+12
 8669 0164 1360     		str	r3, [r2]
1922:main.c        ****         {
 8670              		.loc 1 1922 0 discriminator 2
 8671 0166 3B6E     		ldr	r3, [r7, #96]
 8672 0168 0133     		adds	r3, r3, #1
 8673 016a 3B66     		str	r3, [r7, #96]
 8674              	.L340:
1922:main.c        ****         {
 8675              		.loc 1 1922 0 is_stmt 0 discriminator 1
 8676 016c 97F83720 		ldrb	r2, [r7, #55]	@ zero_extendqisi2
 8677 0170 3B6E     		ldr	r3, [r7, #96]
 8678 0172 9A42     		cmp	r2, r3
 8679 0174 CCD8     		bhi	.L341
1927:main.c        ****         }
1928:main.c        ****         
1929:main.c        ****         presetArraySection = macroNames;
 8680              		.loc 1 1929 0 is_stmt 1
 8681 0176 514B     		ldr	r3, .L402+32
 8682 0178 0122     		movs	r2, #1
 8683 017a 1A70     		strb	r2, [r3]
 8684              	.LBB59:
1930:main.c        **** 
1931:main.c        ****         
1932:main.c        ****         for (int j = 0; j < (NUM_MACROS); j++)
 8685              		.loc 1 1932 0
 8686 017c 0023     		movs	r3, #0
 8687 017e FB65     		str	r3, [r7, #92]
 8688 0180 3DE0     		b	.L342
 8689              	.L345:
 8690              	.LBB60:
1933:main.c        ****         {
1934:main.c        ****             for (int k = 0; k < MACRO_NAME_LENGTH_IN_BYTES; k++)
 8691              		.loc 1 1934 0
 8692 0182 0023     		movs	r3, #0
 8693 0184 BB65     		str	r3, [r7, #88]
 8694 0186 34E0     		b	.L343
 8695              	.L344:
1935:main.c        ****             {
1936:main.c        ****                 presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass 
 8696              		.loc 1 1936 0 discriminator 3
 8697 0188 3B6E     		ldr	r3, [r7, #96]
 8698 018a 023B     		subs	r3, r3, #2
 8699 018c 464A     		ldr	r2, .L402+12
 8700 018e 1268     		ldr	r2, [r2]
 8701 0190 40F2FF71 		movw	r1, #2047
 8702 0194 0A40     		ands	r2, r2, r1
 8703 0196 4549     		ldr	r1, .L402+16
 8704 0198 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8705 019a 02F07F02 		and	r2, r2, #127
 8706 019e D1B2     		uxtb	r1, r2
 8707 01a0 484A     		ldr	r2, .L402+40
 8708 01a2 D154     		strb	r1, [r2, r3]
1937:main.c        ****                 macroNamesArray[presetNumberToWrite][j][k] = sysexBuffer[sysexReadPointer & sysexPo
 8709              		.loc 1 1937 0 discriminator 3
 8710 01a4 464B     		ldr	r3, .L402+36
 8711 01a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 190


 8712 01a8 1846     		mov	r0, r3
 8713 01aa 3F4B     		ldr	r3, .L402+12
 8714 01ac 1B68     		ldr	r3, [r3]
 8715 01ae 40F2FF72 		movw	r2, #2047
 8716 01b2 1340     		ands	r3, r3, r2
 8717 01b4 3D4A     		ldr	r2, .L402+16
 8718 01b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8719 01b8 03F07F03 		and	r3, r3, #127
 8720 01bc DCB2     		uxtb	r4, r3
 8721 01be 4349     		ldr	r1, .L402+48
 8722 01c0 FB6D     		ldr	r3, [r7, #92]
 8723 01c2 1A46     		mov	r2, r3
 8724 01c4 D200     		lsls	r2, r2, #3
 8725 01c6 1A44     		add	r2, r2, r3
 8726 01c8 0346     		mov	r3, r0
 8727 01ca DB00     		lsls	r3, r3, #3
 8728 01cc 0344     		add	r3, r3, r0
 8729 01ce 1B01     		lsls	r3, r3, #4
 8730 01d0 1344     		add	r3, r3, r2
 8731 01d2 CA18     		adds	r2, r1, r3
 8732 01d4 BB6D     		ldr	r3, [r7, #88]
 8733 01d6 1344     		add	r3, r3, r2
 8734 01d8 2246     		mov	r2, r4
 8735 01da 1A70     		strb	r2, [r3]
1938:main.c        ****                 i++;
 8736              		.loc 1 1938 0 discriminator 3
 8737 01dc 3B6E     		ldr	r3, [r7, #96]
 8738 01de 0133     		adds	r3, r3, #1
 8739 01e0 3B66     		str	r3, [r7, #96]
1939:main.c        ****                 sysexReadPointer++;
 8740              		.loc 1 1939 0 discriminator 3
 8741 01e2 314B     		ldr	r3, .L402+12
 8742 01e4 1B68     		ldr	r3, [r3]
 8743 01e6 0133     		adds	r3, r3, #1
 8744 01e8 2F4A     		ldr	r2, .L402+12
 8745 01ea 1360     		str	r3, [r2]
1934:main.c        ****             {
 8746              		.loc 1 1934 0 discriminator 3
 8747 01ec BB6D     		ldr	r3, [r7, #88]
 8748 01ee 0133     		adds	r3, r3, #1
 8749 01f0 BB65     		str	r3, [r7, #88]
 8750              	.L343:
1934:main.c        ****             {
 8751              		.loc 1 1934 0 is_stmt 0 discriminator 1
 8752 01f2 BB6D     		ldr	r3, [r7, #88]
 8753 01f4 082B     		cmp	r3, #8
 8754 01f6 C7DD     		ble	.L344
 8755              	.LBE60:
1932:main.c        ****         {
 8756              		.loc 1 1932 0 is_stmt 1 discriminator 2
 8757 01f8 FB6D     		ldr	r3, [r7, #92]
 8758 01fa 0133     		adds	r3, r3, #1
 8759 01fc FB65     		str	r3, [r7, #92]
 8760              	.L342:
1932:main.c        ****         {
 8761              		.loc 1 1932 0 is_stmt 0 discriminator 1
 8762 01fe FB6D     		ldr	r3, [r7, #92]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 191


 8763 0200 072B     		cmp	r3, #7
 8764 0202 BEDD     		ble	.L345
 8765              	.LBE59:
 8766              	.LBB61:
1940:main.c        ****             }
1941:main.c        ****         }
1942:main.c        ****         for (int j = 0; j < NUM_CONTROLS; j++)
 8767              		.loc 1 1942 0 is_stmt 1
 8768 0204 0023     		movs	r3, #0
 8769 0206 7B65     		str	r3, [r7, #84]
 8770 0208 3FE0     		b	.L346
 8771              	.L349:
 8772              	.LBB62:
1943:main.c        ****         {
1944:main.c        ****             for (int k = 0; k < CONTROL_NAME_LENGTH_IN_BYTES; k++)
 8773              		.loc 1 1944 0
 8774 020a 0023     		movs	r3, #0
 8775 020c 3B65     		str	r3, [r7, #80]
 8776 020e 36E0     		b	.L347
 8777              	.L348:
1945:main.c        ****             {
1946:main.c        ****                 presetArray[i-2] = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127; // pass 
 8778              		.loc 1 1946 0 discriminator 3
 8779 0210 3B6E     		ldr	r3, [r7, #96]
 8780 0212 023B     		subs	r3, r3, #2
 8781 0214 244A     		ldr	r2, .L402+12
 8782 0216 1268     		ldr	r2, [r2]
 8783 0218 40F2FF71 		movw	r1, #2047
 8784 021c 0A40     		ands	r2, r2, r1
 8785 021e 2349     		ldr	r1, .L402+16
 8786 0220 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8787 0222 02F07F02 		and	r2, r2, #127
 8788 0226 D1B2     		uxtb	r1, r2
 8789 0228 264A     		ldr	r2, .L402+40
 8790 022a D154     		strb	r1, [r2, r3]
1947:main.c        ****                 controlNamesArray[presetNumberToWrite][j][k] = sysexBuffer[sysexReadPointer & sysex
 8791              		.loc 1 1947 0 discriminator 3
 8792 022c 244B     		ldr	r3, .L402+36
 8793 022e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8794 0230 1846     		mov	r0, r3
 8795 0232 1D4B     		ldr	r3, .L402+12
 8796 0234 1B68     		ldr	r3, [r3]
 8797 0236 40F2FF72 		movw	r2, #2047
 8798 023a 1340     		ands	r3, r3, r2
 8799 023c 1B4A     		ldr	r2, .L402+16
 8800 023e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 8801 0240 03F07F03 		and	r3, r3, #127
 8802 0244 DCB2     		uxtb	r4, r3
 8803 0246 2249     		ldr	r1, .L402+52
 8804 0248 7B6D     		ldr	r3, [r7, #84]
 8805 024a 1A46     		mov	r2, r3
 8806 024c 9200     		lsls	r2, r2, #2
 8807 024e 1A44     		add	r2, r2, r3
 8808 0250 5300     		lsls	r3, r2, #1
 8809 0252 1A46     		mov	r2, r3
 8810 0254 0346     		mov	r3, r0
 8811 0256 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 192


 8812 0258 0344     		add	r3, r3, r0
 8813 025a DB00     		lsls	r3, r3, #3
 8814 025c 1344     		add	r3, r3, r2
 8815 025e CA18     		adds	r2, r1, r3
 8816 0260 3B6D     		ldr	r3, [r7, #80]
 8817 0262 1344     		add	r3, r3, r2
 8818 0264 2246     		mov	r2, r4
 8819 0266 1A70     		strb	r2, [r3]
1948:main.c        ****                  i++;
 8820              		.loc 1 1948 0 discriminator 3
 8821 0268 3B6E     		ldr	r3, [r7, #96]
 8822 026a 0133     		adds	r3, r3, #1
 8823 026c 3B66     		str	r3, [r7, #96]
1949:main.c        ****                 sysexReadPointer++;
 8824              		.loc 1 1949 0 discriminator 3
 8825 026e 0E4B     		ldr	r3, .L402+12
 8826 0270 1B68     		ldr	r3, [r3]
 8827 0272 0133     		adds	r3, r3, #1
 8828 0274 0C4A     		ldr	r2, .L402+12
 8829 0276 1360     		str	r3, [r2]
1944:main.c        ****             {
 8830              		.loc 1 1944 0 discriminator 3
 8831 0278 3B6D     		ldr	r3, [r7, #80]
 8832 027a 0133     		adds	r3, r3, #1
 8833 027c 3B65     		str	r3, [r7, #80]
 8834              	.L347:
1944:main.c        ****             {
 8835              		.loc 1 1944 0 is_stmt 0 discriminator 1
 8836 027e 3B6D     		ldr	r3, [r7, #80]
 8837 0280 092B     		cmp	r3, #9
 8838 0282 C5DD     		ble	.L348
 8839              	.LBE62:
1942:main.c        ****         {
 8840              		.loc 1 1942 0 is_stmt 1 discriminator 2
 8841 0284 7B6D     		ldr	r3, [r7, #84]
 8842 0286 0133     		adds	r3, r3, #1
 8843 0288 7B65     		str	r3, [r7, #84]
 8844              	.L346:
1942:main.c        ****         {
 8845              		.loc 1 1942 0 is_stmt 0 discriminator 1
 8846 028a 7B6D     		ldr	r3, [r7, #84]
 8847 028c 032B     		cmp	r3, #3
 8848 028e BCDD     		ble	.L349
 8849              	.LBE61:
1950:main.c        ****             }
1951:main.c        ****         }
1952:main.c        ****         
1953:main.c        ****         uint16_t valsStart = 4 + PRESET_NAME_LENGTH_IN_BYTES + (MACRO_NAME_LENGTH_IN_BYTES * NUM_MA
 8850              		.loc 1 1953 0 is_stmt 1
 8851 0290 8223     		movs	r3, #130
 8852 0292 BB86     		strh	r3, [r7, #52]	@ movhi
1954:main.c        ****         
1955:main.c        ****         presetArraySection = initialVals;
 8853              		.loc 1 1955 0
 8854 0294 094B     		ldr	r3, .L402+32
 8855 0296 0222     		movs	r2, #2
 8856 0298 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 193


1956:main.c        ****         
1957:main.c        ****         for (; sysexReadPointer < (messageEnd); sysexReadPointer = (sysexReadPointer+5))
 8857              		.loc 1 1957 0
 8858 029a 5EE2     		b	.L350
 8859              	.L403:
 8860              		.align	2
 8861              	.L402:
 8862 029c 00000000 		.word	parsingSysex
 8863 02a0 00000000 		.word	sysexMessageStartPointsReadPosition
 8864 02a4 00000000 		.word	sysexMessageStartPoints
 8865 02a8 00000000 		.word	sysexReadPointer
 8866 02ac 00000000 		.word	sysexBuffer
 8867 02b0 00000000 		.word	nearbyValues
 8868 02b4 00000000 		.word	sysexMessageInProgress
 8869 02b8 00000000 		.word	currentFloat
 8870 02bc 00000000 		.word	presetArraySection
 8871 02c0 00000000 		.word	presetNumberToWrite
 8872 02c4 00000000 		.word	presetArray
 8873 02c8 00000000 		.word	presetNamesArray
 8874 02cc 00000000 		.word	macroNamesArray
 8875 02d0 00000000 		.word	controlNamesArray
 8876              	.L372:
1958:main.c        ****         {
1959:main.c        ****             theVal.u32 = 0;
 8877              		.loc 1 1959 0
 8878 02d4 0023     		movs	r3, #0
 8879 02d6 3B61     		str	r3, [r7, #16]
1960:main.c        ****             theVal.u32 |= ((sysexBuffer[sysexReadPointer & sysexPointerMask ] &15) << 28);
 8880              		.loc 1 1960 0
 8881 02d8 3B69     		ldr	r3, [r7, #16]
 8882 02da 9A4A     		ldr	r2, .L404
 8883 02dc 1268     		ldr	r2, [r2]
 8884 02de 40F2FF71 		movw	r1, #2047
 8885 02e2 0A40     		ands	r2, r2, r1
 8886 02e4 9849     		ldr	r1, .L404+4
 8887 02e6 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8888 02e8 1207     		lsls	r2, r2, #28
 8889 02ea 1343     		orrs	r3, r3, r2
 8890 02ec 3B61     		str	r3, [r7, #16]
1961:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+1) & sysexPointerMask] << 21);
 8891              		.loc 1 1961 0
 8892 02ee 3B69     		ldr	r3, [r7, #16]
 8893 02f0 944A     		ldr	r2, .L404
 8894 02f2 1268     		ldr	r2, [r2]
 8895 02f4 0132     		adds	r2, r2, #1
 8896 02f6 40F2FF71 		movw	r1, #2047
 8897 02fa 0A40     		ands	r2, r2, r1
 8898 02fc 9249     		ldr	r1, .L404+4
 8899 02fe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8900 0300 5205     		lsls	r2, r2, #21
 8901 0302 1343     		orrs	r3, r3, r2
 8902 0304 3B61     		str	r3, [r7, #16]
1962:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+2) & sysexPointerMask] << 14);
 8903              		.loc 1 1962 0
 8904 0306 3B69     		ldr	r3, [r7, #16]
 8905 0308 8E4A     		ldr	r2, .L404
 8906 030a 1268     		ldr	r2, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 194


 8907 030c 0232     		adds	r2, r2, #2
 8908 030e 40F2FF71 		movw	r1, #2047
 8909 0312 0A40     		ands	r2, r2, r1
 8910 0314 8C49     		ldr	r1, .L404+4
 8911 0316 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8912 0318 9203     		lsls	r2, r2, #14
 8913 031a 1343     		orrs	r3, r3, r2
 8914 031c 3B61     		str	r3, [r7, #16]
1963:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+3) & sysexPointerMask] << 7);
 8915              		.loc 1 1963 0
 8916 031e 3B69     		ldr	r3, [r7, #16]
 8917 0320 884A     		ldr	r2, .L404
 8918 0322 1268     		ldr	r2, [r2]
 8919 0324 0332     		adds	r2, r2, #3
 8920 0326 40F2FF71 		movw	r1, #2047
 8921 032a 0A40     		ands	r2, r2, r1
 8922 032c 8649     		ldr	r1, .L404+4
 8923 032e 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 8924 0330 D201     		lsls	r2, r2, #7
 8925 0332 1343     		orrs	r3, r3, r2
 8926 0334 3B61     		str	r3, [r7, #16]
1964:main.c        ****             theVal.u32 |= (sysexBuffer[(sysexReadPointer+4) & sysexPointerMask] & 127);
 8927              		.loc 1 1964 0
 8928 0336 3A69     		ldr	r2, [r7, #16]
 8929 0338 824B     		ldr	r3, .L404
 8930 033a 1B68     		ldr	r3, [r3]
 8931 033c 0433     		adds	r3, r3, #4
 8932 033e 40F2FF71 		movw	r1, #2047
 8933 0342 0B40     		ands	r3, r3, r1
 8934 0344 8049     		ldr	r1, .L404+4
 8935 0346 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 8936 0348 03F07F03 		and	r3, r3, #127
 8937 034c 1343     		orrs	r3, r3, r2
 8938 034e 3B61     		str	r3, [r7, #16]
1965:main.c        ****             testVal = theVal.f;
 8939              		.loc 1 1965 0
 8940 0350 3B69     		ldr	r3, [r7, #16]	@ float
 8941 0352 7E4A     		ldr	r2, .L404+8
 8942 0354 1360     		str	r3, [r2]	@ float
1966:main.c        ****             if (presetArraySection == initialVals)
 8943              		.loc 1 1966 0
 8944 0356 7E4B     		ldr	r3, .L404+12
 8945 0358 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 8946 035a 022B     		cmp	r3, #2
 8947 035c 40F09D80 		bne	.L351
1967:main.c        ****             {
1968:main.c        **** 
1969:main.c        ****                 if (currentFloat == 0)
 8948              		.loc 1 1969 0
 8949 0360 7C4B     		ldr	r3, .L404+16
 8950 0362 1B68     		ldr	r3, [r3]
 8951 0364 002B     		cmp	r3, #0
 8952 0366 22D1     		bne	.L352
1970:main.c        ****                 {
1971:main.c        ****                     valsCount = (uint16_t) theVal.f;
 8953              		.loc 1 1971 0
 8954 0368 3B69     		ldr	r3, [r7, #16]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 195


 8955 036a 1846     		mov	r0, r3
 8956 036c FFF7FEFF 		bl	__aeabi_f2uiz
 8957 0370 0346     		mov	r3, r0
 8958 0372 9AB2     		uxth	r2, r3
 8959 0374 784B     		ldr	r3, .L404+20
 8960 0376 1A80     		strh	r2, [r3]	@ movhi
1972:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount >> 8;
 8961              		.loc 1 1972 0
 8962 0378 BA8E     		ldrh	r2, [r7, #52]
 8963 037a 764B     		ldr	r3, .L404+16
 8964 037c 1B68     		ldr	r3, [r3]
 8965 037e 591C     		adds	r1, r3, #1
 8966 0380 7448     		ldr	r0, .L404+16
 8967 0382 0160     		str	r1, [r0]
 8968 0384 1344     		add	r3, r3, r2
 8969 0386 744A     		ldr	r2, .L404+20
 8970 0388 1288     		ldrh	r2, [r2]
 8971 038a 120A     		lsrs	r2, r2, #8
 8972 038c 92B2     		uxth	r2, r2
 8973 038e D1B2     		uxtb	r1, r2
 8974 0390 724A     		ldr	r2, .L404+24
 8975 0392 D154     		strb	r1, [r2, r3]
1973:main.c        ****                     presetArray[valsStart + currentFloat++] = valsCount & 0xff;
 8976              		.loc 1 1973 0
 8977 0394 BA8E     		ldrh	r2, [r7, #52]
 8978 0396 6F4B     		ldr	r3, .L404+16
 8979 0398 1B68     		ldr	r3, [r3]
 8980 039a 591C     		adds	r1, r3, #1
 8981 039c 6D48     		ldr	r0, .L404+16
 8982 039e 0160     		str	r1, [r0]
 8983 03a0 1344     		add	r3, r3, r2
 8984 03a2 6D4A     		ldr	r2, .L404+20
 8985 03a4 1288     		ldrh	r2, [r2]
 8986 03a6 D1B2     		uxtb	r1, r2
 8987 03a8 6C4A     		ldr	r2, .L404+24
 8988 03aa D154     		strb	r1, [r2, r3]
 8989 03ac D0E1     		b	.L358
 8990              	.L352:
1974:main.c        ****                 }
1975:main.c        ****                 else if (currentFloat < ((valsCount+1)*2))
 8991              		.loc 1 1975 0
 8992 03ae 6A4B     		ldr	r3, .L404+20
 8993 03b0 1B88     		ldrh	r3, [r3]
 8994 03b2 0133     		adds	r3, r3, #1
 8995 03b4 5B00     		lsls	r3, r3, #1
 8996 03b6 1A46     		mov	r2, r3
 8997 03b8 664B     		ldr	r3, .L404+16
 8998 03ba 1B68     		ldr	r3, [r3]
 8999 03bc 9A42     		cmp	r2, r3
 9000 03be 23D9     		bls	.L354
 9001              	.LBB63:
1976:main.c        ****                 { 
1977:main.c        ****                     uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 9002              		.loc 1 1977 0
 9003 03c0 3B69     		ldr	r3, [r7, #16]	@ float
 9004 03c2 6749     		ldr	r1, .L404+28
 9005 03c4 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 196


 9006 03c6 FFF7FEFF 		bl	__aeabi_fmul
 9007 03ca 0346     		mov	r3, r0
 9008 03cc 1846     		mov	r0, r3
 9009 03ce FFF7FEFF 		bl	__aeabi_f2uiz
 9010 03d2 0346     		mov	r3, r0
 9011 03d4 7B86     		strh	r3, [r7, #50]	@ movhi
1978:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal >> 8;
 9012              		.loc 1 1978 0
 9013 03d6 BA8E     		ldrh	r2, [r7, #52]
 9014 03d8 5E4B     		ldr	r3, .L404+16
 9015 03da 1B68     		ldr	r3, [r3]
 9016 03dc 591C     		adds	r1, r3, #1
 9017 03de 5D48     		ldr	r0, .L404+16
 9018 03e0 0160     		str	r1, [r0]
 9019 03e2 1344     		add	r3, r3, r2
 9020 03e4 7A8E     		ldrh	r2, [r7, #50]
 9021 03e6 120A     		lsrs	r2, r2, #8
 9022 03e8 92B2     		uxth	r2, r2
 9023 03ea D1B2     		uxtb	r1, r2
 9024 03ec 5B4A     		ldr	r2, .L404+24
 9025 03ee D154     		strb	r1, [r2, r3]
1979:main.c        ****                     presetArray[valsStart + currentFloat++] = intVal & 0xff;
 9026              		.loc 1 1979 0
 9027 03f0 BA8E     		ldrh	r2, [r7, #52]
 9028 03f2 584B     		ldr	r3, .L404+16
 9029 03f4 1B68     		ldr	r3, [r3]
 9030 03f6 591C     		adds	r1, r3, #1
 9031 03f8 5648     		ldr	r0, .L404+16
 9032 03fa 0160     		str	r1, [r0]
 9033 03fc 1344     		add	r3, r3, r2
 9034 03fe 7A8E     		ldrh	r2, [r7, #50]	@ movhi
 9035 0400 D1B2     		uxtb	r1, r2
 9036 0402 564A     		ldr	r2, .L404+24
 9037 0404 D154     		strb	r1, [r2, r3]
 9038              	.LBE63:
 9039 0406 A3E1     		b	.L358
 9040              	.L354:
1980:main.c        ****                 }
1981:main.c        ****                 else if (currentFloat == ((valsCount+1)*2))
 9041              		.loc 1 1981 0
 9042 0408 534B     		ldr	r3, .L404+20
 9043 040a 1B88     		ldrh	r3, [r3]
 9044 040c 0133     		adds	r3, r3, #1
 9045 040e 5B00     		lsls	r3, r3, #1
 9046 0410 1A46     		mov	r2, r3
 9047 0412 504B     		ldr	r3, .L404+16
 9048 0414 1B68     		ldr	r3, [r3]
 9049 0416 9A42     		cmp	r2, r3
 9050 0418 40F09A81 		bne	.L358
1982:main.c        ****                 {
1983:main.c        ****                     valCheck = theVal.f;
 9051              		.loc 1 1983 0
 9052 041c 3B69     		ldr	r3, [r7, #16]	@ float
 9053 041e 514A     		ldr	r2, .L404+32
 9054 0420 1360     		str	r3, [r2]	@ float
1984:main.c        ****                     if ((valCheck < -1.5f) && (valCheck > -2.5f))
 9055              		.loc 1 1984 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 197


 9056 0422 504B     		ldr	r3, .L404+32
 9057 0424 1B68     		ldr	r3, [r3]	@ float
 9058 0426 5049     		ldr	r1, .L404+36
 9059 0428 1846     		mov	r0, r3
 9060 042a FFF7FEFF 		bl	__aeabi_fcmplt
 9061 042e 0346     		mov	r3, r0
 9062 0430 002B     		cmp	r3, #0
 9063 0432 23D0     		beq	.L355
 9064              		.loc 1 1984 0 is_stmt 0 discriminator 1
 9065 0434 4B4B     		ldr	r3, .L404+32
 9066 0436 1B68     		ldr	r3, [r3]	@ float
 9067 0438 4C49     		ldr	r1, .L404+40
 9068 043a 1846     		mov	r0, r3
 9069 043c FFF7FEFF 		bl	__aeabi_fcmpgt
 9070 0440 0346     		mov	r3, r0
 9071 0442 002B     		cmp	r3, #0
 9072 0444 1AD0     		beq	.L355
1985:main.c        ****                     {
1986:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 9073              		.loc 1 1986 0 is_stmt 1
 9074 0446 BA8E     		ldrh	r2, [r7, #52]
 9075 0448 424B     		ldr	r3, .L404+16
 9076 044a 1B68     		ldr	r3, [r3]
 9077 044c 591C     		adds	r1, r3, #1
 9078 044e 4148     		ldr	r0, .L404+16
 9079 0450 0160     		str	r1, [r0]
 9080 0452 1344     		add	r3, r3, r2
 9081 0454 414A     		ldr	r2, .L404+24
 9082 0456 EF21     		movs	r1, #239
 9083 0458 D154     		strb	r1, [r2, r3]
1987:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xef;
 9084              		.loc 1 1987 0
 9085 045a BA8E     		ldrh	r2, [r7, #52]
 9086 045c 3D4B     		ldr	r3, .L404+16
 9087 045e 1B68     		ldr	r3, [r3]
 9088 0460 591C     		adds	r1, r3, #1
 9089 0462 3C48     		ldr	r0, .L404+16
 9090 0464 0160     		str	r1, [r0]
 9091 0466 1344     		add	r3, r3, r2
 9092 0468 3C4A     		ldr	r2, .L404+24
 9093 046a EF21     		movs	r1, #239
 9094 046c D154     		strb	r1, [r2, r3]
1988:main.c        ****                         presetArraySection = mapCountNext;
 9095              		.loc 1 1988 0
 9096 046e 384B     		ldr	r3, .L404+12
 9097 0470 0322     		movs	r2, #3
 9098 0472 1A70     		strb	r2, [r3]
1989:main.c        ****                         mapCount = 0;
 9099              		.loc 1 1989 0
 9100 0474 3E4B     		ldr	r3, .L404+44
 9101 0476 0022     		movs	r2, #0
 9102 0478 1A60     		str	r2, [r3]
 9103 047a 69E1     		b	.L358
 9104              	.L355:
1990:main.c        ****                     }
1991:main.c        ****                     else
1992:main.c        ****                     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 198


1993:main.c        ****                         //error state
1994:main.c        ****                         SPI_errors++;
 9105              		.loc 1 1994 0
 9106 047c 3D4B     		ldr	r3, .L404+48
 9107 047e 1B68     		ldr	r3, [r3]
 9108 0480 0133     		adds	r3, r3, #1
 9109 0482 3C4A     		ldr	r2, .L404+48
 9110 0484 1360     		str	r3, [r2]
1995:main.c        ****                         sysexMessageInProgress = 0;
 9111              		.loc 1 1995 0
 9112 0486 3C4B     		ldr	r3, .L404+52
 9113 0488 0022     		movs	r2, #0
 9114 048a 1A70     		strb	r2, [r3]
1996:main.c        ****                         //sysexPointer = 0;
1997:main.c        ****                         sendingMessage = 0;
 9115              		.loc 1 1997 0
 9116 048c 3B4B     		ldr	r3, .L404+56
 9117 048e 0022     		movs	r2, #0
 9118 0490 1A70     		strb	r2, [r3]
1998:main.c        ****                         parseThatMF = 0;
 9119              		.loc 1 1998 0
 9120 0492 3B4B     		ldr	r3, .L404+60
 9121 0494 0022     		movs	r2, #0
 9122 0496 1A70     		strb	r2, [r3]
 9123 0498 5AE1     		b	.L358
 9124              	.L351:
1999:main.c        ****                     }
2000:main.c        ****                 }
2001:main.c        ****             }
2002:main.c        ****             else if (presetArraySection == mapCountNext)
 9125              		.loc 1 2002 0
 9126 049a 2D4B     		ldr	r3, .L404+12
 9127 049c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9128 049e 032B     		cmp	r3, #3
 9129 04a0 28D1     		bne	.L359
2003:main.c        ****             {
2004:main.c        ****                 mapCountExpectation = (uint16_t)theVal.f;
 9130              		.loc 1 2004 0
 9131 04a2 3B69     		ldr	r3, [r7, #16]	@ float
 9132 04a4 1846     		mov	r0, r3
 9133 04a6 FFF7FEFF 		bl	__aeabi_f2uiz
 9134 04aa 0346     		mov	r3, r0
 9135 04ac 9AB2     		uxth	r2, r3
 9136 04ae 354B     		ldr	r3, .L404+64
 9137 04b0 1A80     		strh	r2, [r3]	@ movhi
2005:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation >> 8;
 9138              		.loc 1 2005 0
 9139 04b2 BA8E     		ldrh	r2, [r7, #52]
 9140 04b4 274B     		ldr	r3, .L404+16
 9141 04b6 1B68     		ldr	r3, [r3]
 9142 04b8 591C     		adds	r1, r3, #1
 9143 04ba 2648     		ldr	r0, .L404+16
 9144 04bc 0160     		str	r1, [r0]
 9145 04be 1344     		add	r3, r3, r2
 9146 04c0 304A     		ldr	r2, .L404+64
 9147 04c2 1288     		ldrh	r2, [r2]
 9148 04c4 120A     		lsrs	r2, r2, #8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 199


 9149 04c6 92B2     		uxth	r2, r2
 9150 04c8 D1B2     		uxtb	r1, r2
 9151 04ca 244A     		ldr	r2, .L404+24
 9152 04cc D154     		strb	r1, [r2, r3]
2006:main.c        ****                 presetArray[valsStart + currentFloat++] = mapCountExpectation & 0xff;
 9153              		.loc 1 2006 0
 9154 04ce BA8E     		ldrh	r2, [r7, #52]
 9155 04d0 204B     		ldr	r3, .L404+16
 9156 04d2 1B68     		ldr	r3, [r3]
 9157 04d4 591C     		adds	r1, r3, #1
 9158 04d6 1F48     		ldr	r0, .L404+16
 9159 04d8 0160     		str	r1, [r0]
 9160 04da 1344     		add	r3, r3, r2
 9161 04dc 294A     		ldr	r2, .L404+64
 9162 04de 1288     		ldrh	r2, [r2]
 9163 04e0 D1B2     		uxtb	r1, r2
 9164 04e2 1E4A     		ldr	r2, .L404+24
 9165 04e4 D154     		strb	r1, [r2, r3]
2007:main.c        ****                 presetArraySection = mapping;
 9166              		.loc 1 2007 0
 9167 04e6 1A4B     		ldr	r3, .L404+12
 9168 04e8 0422     		movs	r2, #4
 9169 04ea 1A70     		strb	r2, [r3]
2008:main.c        ****                 numMappings = 0;
 9170              		.loc 1 2008 0
 9171 04ec 264B     		ldr	r3, .L404+68
 9172 04ee 0022     		movs	r2, #0
 9173 04f0 1A80     		strh	r2, [r3]	@ movhi
 9174 04f2 2DE1     		b	.L358
 9175              	.L359:
2009:main.c        ****             }
2010:main.c        ****             else if (presetArraySection == mapping)
 9176              		.loc 1 2010 0
 9177 04f4 164B     		ldr	r3, .L404+12
 9178 04f6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9179 04f8 042B     		cmp	r3, #4
 9180 04fa 40F02981 		bne	.L358
2011:main.c        ****             {
2012:main.c        ****                 // this is the order
2013:main.c        ****                 // source (int), target (int), scalarSource (arrives as -1.0f if no scalar, send as
2014:main.c        ****                 if (numMappings < mapCountExpectation)
 9181              		.loc 1 2014 0
 9182 04fe 224B     		ldr	r3, .L404+68
 9183 0500 1A88     		ldrh	r2, [r3]
 9184 0502 204B     		ldr	r3, .L404+64
 9185 0504 1B88     		ldrh	r3, [r3]
 9186 0506 9A42     		cmp	r2, r3
 9187 0508 80F0DA80 		bcs	.L360
2015:main.c        ****                 {
2016:main.c        ****                     if ((mapCount % 5) == 0)
 9188              		.loc 1 2016 0
 9189 050c 184B     		ldr	r3, .L404+44
 9190 050e 1968     		ldr	r1, [r3]
 9191 0510 1E4B     		ldr	r3, .L404+72
 9192 0512 A3FB0123 		umull	r2, r3, r3, r1
 9193 0516 9A08     		lsrs	r2, r3, #2
 9194 0518 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 200


 9195 051a 9B00     		lsls	r3, r3, #2
 9196 051c 1344     		add	r3, r3, r2
 9197 051e CA1A     		subs	r2, r1, r3
 9198 0520 002A     		cmp	r2, #0
 9199 0522 35D1     		bne	.L361
2017:main.c        ****                     {
2018:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 9200              		.loc 1 2018 0
 9201 0524 BA8E     		ldrh	r2, [r7, #52]
 9202 0526 0B4B     		ldr	r3, .L404+16
 9203 0528 1B68     		ldr	r3, [r3]
 9204 052a 591C     		adds	r1, r3, #1
 9205 052c 0948     		ldr	r0, .L404+16
 9206 052e 0160     		str	r1, [r0]
 9207 0530 D418     		adds	r4, r2, r3
 9208 0532 3B69     		ldr	r3, [r7, #16]	@ float
 9209 0534 1846     		mov	r0, r3
 9210 0536 FFF7FEFF 		bl	__aeabi_f2uiz
 9211 053a 0346     		mov	r3, r0
 9212 053c DAB2     		uxtb	r2, r3
 9213 053e 074B     		ldr	r3, .L404+24
 9214 0540 1A55     		strb	r2, [r3, r4]
 9215 0542 B7E0     		b	.L362
 9216              	.L405:
 9217              		.align	2
 9218              	.L404:
 9219 0544 00000000 		.word	sysexReadPointer
 9220 0548 00000000 		.word	sysexBuffer
 9221 054c 00000000 		.word	testVal
 9222 0550 00000000 		.word	presetArraySection
 9223 0554 00000000 		.word	currentFloat
 9224 0558 00000000 		.word	valsCount
 9225 055c 00000000 		.word	presetArray
 9226 0560 00FF7F47 		.word	1199570688
 9227 0564 00000000 		.word	valCheck
 9228 0568 0000C0BF 		.word	-1077936128
 9229 056c 000020C0 		.word	-1071644672
 9230 0570 00000000 		.word	mapCount
 9231 0574 00000000 		.word	SPI_errors
 9232 0578 00000000 		.word	sysexMessageInProgress
 9233 057c 00000000 		.word	sendingMessage
 9234 0580 00000000 		.word	parseThatMF
 9235 0584 00000000 		.word	mapCountExpectation
 9236 0588 00000000 		.word	numMappings
 9237 058c CDCCCCCC 		.word	-858993459
 9238              	.L361:
2019:main.c        ****                     }
2020:main.c        ****                     else if  (mapCount % 5 == 1)
 9239              		.loc 1 2020 0
 9240 0590 984B     		ldr	r3, .L406
 9241 0592 1968     		ldr	r1, [r3]
 9242 0594 984B     		ldr	r3, .L406+4
 9243 0596 A3FB0123 		umull	r2, r3, r3, r1
 9244 059a 9A08     		lsrs	r2, r3, #2
 9245 059c 1346     		mov	r3, r2
 9246 059e 9B00     		lsls	r3, r3, #2
 9247 05a0 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 201


 9248 05a2 CA1A     		subs	r2, r1, r3
 9249 05a4 012A     		cmp	r2, #1
 9250 05a6 0FD1     		bne	.L363
2021:main.c        ****                     {
2022:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 9251              		.loc 1 2022 0
 9252 05a8 BA8E     		ldrh	r2, [r7, #52]
 9253 05aa 944B     		ldr	r3, .L406+8
 9254 05ac 1B68     		ldr	r3, [r3]
 9255 05ae 591C     		adds	r1, r3, #1
 9256 05b0 9248     		ldr	r0, .L406+8
 9257 05b2 0160     		str	r1, [r0]
 9258 05b4 D418     		adds	r4, r2, r3
 9259 05b6 3B69     		ldr	r3, [r7, #16]	@ float
 9260 05b8 1846     		mov	r0, r3
 9261 05ba FFF7FEFF 		bl	__aeabi_f2uiz
 9262 05be 0346     		mov	r3, r0
 9263 05c0 DAB2     		uxtb	r2, r3
 9264 05c2 8F4B     		ldr	r3, .L406+12
 9265 05c4 1A55     		strb	r2, [r3, r4]
 9266 05c6 75E0     		b	.L362
 9267              	.L363:
2023:main.c        ****                     }
2024:main.c        ****                     else if (mapCount % 5 == 2) //check if the scalar source is -1 (if so send 255 
 9268              		.loc 1 2024 0
 9269 05c8 8A4B     		ldr	r3, .L406
 9270 05ca 1968     		ldr	r1, [r3]
 9271 05cc 8A4B     		ldr	r3, .L406+4
 9272 05ce A3FB0123 		umull	r2, r3, r3, r1
 9273 05d2 9A08     		lsrs	r2, r3, #2
 9274 05d4 1346     		mov	r3, r2
 9275 05d6 9B00     		lsls	r3, r3, #2
 9276 05d8 1344     		add	r3, r3, r2
 9277 05da CA1A     		subs	r2, r1, r3
 9278 05dc 022A     		cmp	r2, #2
 9279 05de 23D1     		bne	.L364
2025:main.c        ****                     {
2026:main.c        ****                         if (theVal.f < 0.0f)
 9280              		.loc 1 2026 0
 9281 05e0 3B69     		ldr	r3, [r7, #16]	@ float
 9282 05e2 4FF00001 		mov	r1, #0
 9283 05e6 1846     		mov	r0, r3
 9284 05e8 FFF7FEFF 		bl	__aeabi_fcmplt
 9285 05ec 0346     		mov	r3, r0
 9286 05ee 002B     		cmp	r3, #0
 9287 05f0 0AD0     		beq	.L400
2027:main.c        ****                         {
2028:main.c        ****                              presetArray[valsStart + currentFloat++] = 0xff;
 9288              		.loc 1 2028 0
 9289 05f2 BA8E     		ldrh	r2, [r7, #52]
 9290 05f4 814B     		ldr	r3, .L406+8
 9291 05f6 1B68     		ldr	r3, [r3]
 9292 05f8 591C     		adds	r1, r3, #1
 9293 05fa 8048     		ldr	r0, .L406+8
 9294 05fc 0160     		str	r1, [r0]
 9295 05fe 1344     		add	r3, r3, r2
 9296 0600 7F4A     		ldr	r2, .L406+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 202


 9297 0602 FF21     		movs	r1, #255
 9298 0604 D154     		strb	r1, [r2, r3]
 9299 0606 55E0     		b	.L362
 9300              	.L400:
2029:main.c        ****                         }
2030:main.c        ****                         else
2031:main.c        ****                         {
2032:main.c        ****                              presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 9301              		.loc 1 2032 0
 9302 0608 BA8E     		ldrh	r2, [r7, #52]
 9303 060a 7C4B     		ldr	r3, .L406+8
 9304 060c 1B68     		ldr	r3, [r3]
 9305 060e 591C     		adds	r1, r3, #1
 9306 0610 7A48     		ldr	r0, .L406+8
 9307 0612 0160     		str	r1, [r0]
 9308 0614 D418     		adds	r4, r2, r3
 9309 0616 3B69     		ldr	r3, [r7, #16]	@ float
 9310 0618 1846     		mov	r0, r3
 9311 061a FFF7FEFF 		bl	__aeabi_f2uiz
 9312 061e 0346     		mov	r3, r0
 9313 0620 DAB2     		uxtb	r2, r3
 9314 0622 774B     		ldr	r3, .L406+12
 9315 0624 1A55     		strb	r2, [r3, r4]
 9316 0626 45E0     		b	.L362
 9317              	.L364:
2033:main.c        ****                         }
2034:main.c        ****                     }
2035:main.c        ****                     else if (mapCount % 5 == 3)
 9318              		.loc 1 2035 0
 9319 0628 724B     		ldr	r3, .L406
 9320 062a 1968     		ldr	r1, [r3]
 9321 062c 724B     		ldr	r3, .L406+4
 9322 062e A3FB0123 		umull	r2, r3, r3, r1
 9323 0632 9A08     		lsrs	r2, r3, #2
 9324 0634 1346     		mov	r3, r2
 9325 0636 9B00     		lsls	r3, r3, #2
 9326 0638 1344     		add	r3, r3, r2
 9327 063a CA1A     		subs	r2, r1, r3
 9328 063c 032A     		cmp	r2, #3
 9329 063e 24D1     		bne	.L368
 9330              	.LBB64:
2036:main.c        ****                     {
2037:main.c        ****                         int16_t intVal = (int16_t)(theVal.f * 32767.0f); //keep it signed to allow 
 9331              		.loc 1 2037 0
 9332 0640 3B69     		ldr	r3, [r7, #16]	@ float
 9333 0642 7049     		ldr	r1, .L406+16
 9334 0644 1846     		mov	r0, r3
 9335 0646 FFF7FEFF 		bl	__aeabi_fmul
 9336 064a 0346     		mov	r3, r0
 9337 064c 1846     		mov	r0, r3
 9338 064e FFF7FEFF 		bl	__aeabi_f2iz
 9339 0652 0346     		mov	r3, r0
 9340 0654 3B86     		strh	r3, [r7, #48]	@ movhi
2038:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal >> 8;
 9341              		.loc 1 2038 0
 9342 0656 BA8E     		ldrh	r2, [r7, #52]
 9343 0658 684B     		ldr	r3, .L406+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 203


 9344 065a 1B68     		ldr	r3, [r3]
 9345 065c 591C     		adds	r1, r3, #1
 9346 065e 6748     		ldr	r0, .L406+8
 9347 0660 0160     		str	r1, [r0]
 9348 0662 1344     		add	r3, r3, r2
 9349 0664 B7F93020 		ldrsh	r2, [r7, #48]
 9350 0668 1212     		asrs	r2, r2, #8
 9351 066a 12B2     		sxth	r2, r2
 9352 066c D1B2     		uxtb	r1, r2
 9353 066e 644A     		ldr	r2, .L406+12
 9354 0670 D154     		strb	r1, [r2, r3]
2039:main.c        ****                         presetArray[valsStart + currentFloat++] = intVal & 0xff;
 9355              		.loc 1 2039 0
 9356 0672 BA8E     		ldrh	r2, [r7, #52]
 9357 0674 614B     		ldr	r3, .L406+8
 9358 0676 1B68     		ldr	r3, [r3]
 9359 0678 591C     		adds	r1, r3, #1
 9360 067a 6048     		ldr	r0, .L406+8
 9361 067c 0160     		str	r1, [r0]
 9362 067e 1344     		add	r3, r3, r2
 9363 0680 3A8E     		ldrh	r2, [r7, #48]	@ movhi
 9364 0682 D1B2     		uxtb	r1, r2
 9365 0684 5E4A     		ldr	r2, .L406+12
 9366 0686 D154     		strb	r1, [r2, r3]
 9367              	.LBE64:
 9368 0688 14E0     		b	.L362
 9369              	.L368:
2040:main.c        **** 
2041:main.c        ****                     }
2042:main.c        ****                     else
2043:main.c        ****                     {
2044:main.c        ****                         presetArray[valsStart + currentFloat++] = (uint8_t)theVal.f;
 9370              		.loc 1 2044 0
 9371 068a BA8E     		ldrh	r2, [r7, #52]
 9372 068c 5B4B     		ldr	r3, .L406+8
 9373 068e 1B68     		ldr	r3, [r3]
 9374 0690 591C     		adds	r1, r3, #1
 9375 0692 5A48     		ldr	r0, .L406+8
 9376 0694 0160     		str	r1, [r0]
 9377 0696 D418     		adds	r4, r2, r3
 9378 0698 3B69     		ldr	r3, [r7, #16]	@ float
 9379 069a 1846     		mov	r0, r3
 9380 069c FFF7FEFF 		bl	__aeabi_f2uiz
 9381 06a0 0346     		mov	r3, r0
 9382 06a2 DAB2     		uxtb	r2, r3
 9383 06a4 564B     		ldr	r3, .L406+12
 9384 06a6 1A55     		strb	r2, [r3, r4]
2045:main.c        ****                         numMappings++;
 9385              		.loc 1 2045 0
 9386 06a8 574B     		ldr	r3, .L406+20
 9387 06aa 1B88     		ldrh	r3, [r3]
 9388 06ac 0133     		adds	r3, r3, #1
 9389 06ae 9AB2     		uxth	r2, r3
 9390 06b0 554B     		ldr	r3, .L406+20
 9391 06b2 1A80     		strh	r2, [r3]	@ movhi
 9392              	.L362:
2046:main.c        ****                     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 204


2047:main.c        ****                     mapCount++;
 9393              		.loc 1 2047 0
 9394 06b4 4F4B     		ldr	r3, .L406
 9395 06b6 1B68     		ldr	r3, [r3]
 9396 06b8 0133     		adds	r3, r3, #1
 9397 06ba 4E4A     		ldr	r2, .L406
 9398 06bc 1360     		str	r3, [r2]
 9399 06be 47E0     		b	.L358
 9400              	.L360:
2048:main.c        ****                 }
2049:main.c        ****                 
2050:main.c        **** 
2051:main.c        ****                 else
2052:main.c        ****                 {
2053:main.c        ****                     //mapcount ended
2054:main.c        ****                     if ((theVal.f < -2.5f) && (theVal.f > -3.5f))
 9401              		.loc 1 2054 0
 9402 06c0 3B69     		ldr	r3, [r7, #16]	@ float
 9403 06c2 5249     		ldr	r1, .L406+24
 9404 06c4 1846     		mov	r0, r3
 9405 06c6 FFF7FEFF 		bl	__aeabi_fcmplt
 9406 06ca 0346     		mov	r3, r0
 9407 06cc 002B     		cmp	r3, #0
 9408 06ce 31D0     		beq	.L369
 9409              		.loc 1 2054 0 is_stmt 0 discriminator 1
 9410 06d0 3B69     		ldr	r3, [r7, #16]	@ float
 9411 06d2 4F49     		ldr	r1, .L406+28
 9412 06d4 1846     		mov	r0, r3
 9413 06d6 FFF7FEFF 		bl	__aeabi_fcmpgt
 9414 06da 0346     		mov	r3, r0
 9415 06dc 002B     		cmp	r3, #0
 9416 06de 29D0     		beq	.L369
2055:main.c        ****                     {
2056:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 9417              		.loc 1 2056 0 is_stmt 1
 9418 06e0 BA8E     		ldrh	r2, [r7, #52]
 9419 06e2 464B     		ldr	r3, .L406+8
 9420 06e4 1B68     		ldr	r3, [r3]
 9421 06e6 591C     		adds	r1, r3, #1
 9422 06e8 4448     		ldr	r0, .L406+8
 9423 06ea 0160     		str	r1, [r0]
 9424 06ec 1344     		add	r3, r3, r2
 9425 06ee 444A     		ldr	r2, .L406+12
 9426 06f0 FE21     		movs	r1, #254
 9427 06f2 D154     		strb	r1, [r2, r3]
2057:main.c        ****                         presetArray[valsStart + currentFloat++] = 0xfe;
 9428              		.loc 1 2057 0
 9429 06f4 BA8E     		ldrh	r2, [r7, #52]
 9430 06f6 414B     		ldr	r3, .L406+8
 9431 06f8 1B68     		ldr	r3, [r3]
 9432 06fa 591C     		adds	r1, r3, #1
 9433 06fc 3F48     		ldr	r0, .L406+8
 9434 06fe 0160     		str	r1, [r0]
 9435 0700 1344     		add	r3, r3, r2
 9436 0702 3F4A     		ldr	r2, .L406+12
 9437 0704 FE21     		movs	r1, #254
 9438 0706 D154     		strb	r1, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 205


2058:main.c        ****                         presetArraySection = presetEnd;
 9439              		.loc 1 2058 0
 9440 0708 424B     		ldr	r3, .L406+32
 9441 070a 0522     		movs	r2, #5
 9442 070c 1A70     		strb	r2, [r3]
2059:main.c        ****                         sysexMessageInProgress = 0;
 9443              		.loc 1 2059 0
 9444 070e 424B     		ldr	r3, .L406+36
 9445 0710 0022     		movs	r2, #0
 9446 0712 1A70     		strb	r2, [r3]
2060:main.c        ****                         sendingMessage = 1;
 9447              		.loc 1 2060 0
 9448 0714 414B     		ldr	r3, .L406+40
 9449 0716 0122     		movs	r2, #1
 9450 0718 1A70     		strb	r2, [r3]
2061:main.c        ****                         patchNum = presetNumberToWrite;
 9451              		.loc 1 2061 0
 9452 071a 414B     		ldr	r3, .L406+44
 9453 071c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9454 071e 414B     		ldr	r3, .L406+48
 9455 0720 1A70     		strb	r2, [r3]
2062:main.c        ****                         messageArraySize = valsStart + currentFloat;
 9456              		.loc 1 2062 0
 9457 0722 364B     		ldr	r3, .L406+8
 9458 0724 1B68     		ldr	r3, [r3]
 9459 0726 9AB2     		uxth	r2, r3
 9460 0728 BB8E     		ldrh	r3, [r7, #52]	@ movhi
 9461 072a 1344     		add	r3, r3, r2
 9462 072c 9AB2     		uxth	r2, r3
 9463 072e 3E4B     		ldr	r3, .L406+52
 9464 0730 1A80     		strh	r2, [r3]	@ movhi
 9465 0732 0DE0     		b	.L358
 9466              	.L369:
2063:main.c        ****                     }
2064:main.c        ****                     else
2065:main.c        ****                     {
2066:main.c        ****                         //error state
2067:main.c        ****                         SPI_errors++;
 9467              		.loc 1 2067 0
 9468 0734 3D4B     		ldr	r3, .L406+56
 9469 0736 1B68     		ldr	r3, [r3]
 9470 0738 0133     		adds	r3, r3, #1
 9471 073a 3C4A     		ldr	r2, .L406+56
 9472 073c 1360     		str	r3, [r2]
2068:main.c        ****                         sysexMessageInProgress = 0;
 9473              		.loc 1 2068 0
 9474 073e 364B     		ldr	r3, .L406+36
 9475 0740 0022     		movs	r2, #0
 9476 0742 1A70     		strb	r2, [r3]
2069:main.c        ****                        // sysexPointer = 0;
2070:main.c        ****                         sendingMessage = 0;
 9477              		.loc 1 2070 0
 9478 0744 354B     		ldr	r3, .L406+40
 9479 0746 0022     		movs	r2, #0
 9480 0748 1A70     		strb	r2, [r3]
2071:main.c        ****                         parseThatMF = 0;
 9481              		.loc 1 2071 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 206


 9482 074a 394B     		ldr	r3, .L406+60
 9483 074c 0022     		movs	r2, #0
 9484 074e 1A70     		strb	r2, [r3]
 9485              	.L358:
1957:main.c        ****         {
 9486              		.loc 1 1957 0
 9487 0750 384B     		ldr	r3, .L406+64
 9488 0752 1B68     		ldr	r3, [r3]
 9489 0754 0533     		adds	r3, r3, #5
 9490 0756 374A     		ldr	r2, .L406+64
 9491 0758 1360     		str	r3, [r2]
 9492              	.L350:
1957:main.c        ****         {
 9493              		.loc 1 1957 0 is_stmt 0 discriminator 1
 9494 075a 364B     		ldr	r3, .L406+64
 9495 075c 1A68     		ldr	r2, [r3]
 9496 075e BB6B     		ldr	r3, [r7, #56]
 9497 0760 9A42     		cmp	r2, r3
 9498 0762 FFF4B7AD 		bcc	.L372
 9499 0766 77E3     		b	.L373
 9500              	.L339:
 9501              	.LBE58:
2072:main.c        ****                     }
2073:main.c        ****                 }
2074:main.c        ****             }
2075:main.c        ****             
2076:main.c        ****         }
2077:main.c        ****     }
2078:main.c        ****     #if 0
2079:main.c        ****     else if (sysexBuffer[0] == 1) //its a tuning
2080:main.c        ****     {
2081:main.c        ****         
2082:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
2083:main.c        ****         currentFloat = 0;
2084:main.c        ****         presetNumberToWrite = sysexBuffer[1];
2085:main.c        ****         union breakFloat theVal;
2086:main.c        ****         for (uint32_t i = 2; i < sysexPointer; i = i+5)
2087:main.c        ****         {
2088:main.c        ****             theVal.u32 = 0;
2089:main.c        ****             theVal.u32 |= ((sysexBuffer[i] &15) << 28);
2090:main.c        ****             theVal.u32 |= (sysexBuffer[i+1] << 21);
2091:main.c        ****             theVal.u32 |= (sysexBuffer[i+2] << 14);
2092:main.c        ****             theVal.u32 |= (sysexBuffer[i+3] << 7);
2093:main.c        ****             theVal.u32 |= (sysexBuffer[i+4] & 127);
2094:main.c        ****             testVal = theVal.f;
2095:main.c        ****             uint16_t intVal = (uint16_t)(theVal.f * 512.0f);//(uint16_t)(theVal.f * 65535.0f);
2096:main.c        ****             tuningArray[currentFloat++] = intVal >> 8;
2097:main.c        ****             tuningArray[currentFloat++] = intVal & 0xff;
2098:main.c        ****         }
2099:main.c        ****         
2100:main.c        ****         tuningArray[currentFloat++] = 0xef;
2101:main.c        ****         tuningArray[currentFloat++] = 0xef;
2102:main.c        ****                         
2103:main.c        ****         
2104:main.c        ****         messageArraySize = currentFloat;
2105:main.c        ****                     
2106:main.c        ****         if(messageArraySize != TUNING_ARRAY_SIZE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 207


2107:main.c        ****         {
2108:main.c        ****             //error state
2109:main.c        ****             SPI_errors++;
2110:main.c        ****             sysexMessageInProgress = 0;
2111:main.c        ****             sysexPointer = 0;
2112:main.c        ****             sendingMessage = 0;
2113:main.c        ****             parseThatMF = 0;
2114:main.c        ****         } else 
2115:main.c        ****         {
2116:main.c        ****             sysexMessageInProgress = 0;
2117:main.c        ****             sendingMessage = 2;
2118:main.c        ****         }
2119:main.c        ****     }
2120:main.c        ****     #endif
2121:main.c        ****     
2122:main.c        **** 
2123:main.c        ****     
2124:main.c        ****     else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 2) //its a copedent
 9502              		.loc 1 2124 0 is_stmt 1
 9503 0768 324B     		ldr	r3, .L406+64
 9504 076a 1B68     		ldr	r3, [r3]
 9505 076c 40F2FF72 		movw	r2, #2047
 9506 0770 1340     		ands	r3, r3, r2
 9507 0772 314A     		ldr	r2, .L406+68
 9508 0774 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9509 0776 022B     		cmp	r3, #2
 9510 0778 40F0BC81 		bne	.L374
 9511              	.LBB65:
2125:main.c        ****     {
2126:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9512              		.loc 1 2126 0
 9513 077c 264B     		ldr	r3, .L406+36
 9514 077e 0122     		movs	r2, #1
 9515 0780 1A70     		strb	r2, [r3]
2127:main.c        ****         uint8_t ignore = 0;
 9516              		.loc 1 2127 0
 9517 0782 0023     		movs	r3, #0
 9518 0784 87F84F30 		strb	r3, [r7, #79]
2128:main.c        ****         currentFloat = 0;
 9519              		.loc 1 2128 0
 9520 0788 1C4B     		ldr	r3, .L406+8
 9521 078a 0022     		movs	r2, #0
 9522 078c 1A60     		str	r2, [r3]
2129:main.c        ****         copedentNumberToWrite = sysexBuffer[(messageStart+1) & sysexPointerMask];
 9523              		.loc 1 2129 0
 9524 078e FB6B     		ldr	r3, [r7, #60]
 9525 0790 0133     		adds	r3, r3, #1
 9526 0792 40F2FF72 		movw	r2, #2047
 9527 0796 1340     		ands	r3, r3, r2
 9528 0798 274A     		ldr	r2, .L406+68
 9529 079a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 9530 079c 274B     		ldr	r3, .L406+72
 9531 079e 1A70     		strb	r2, [r3]
2130:main.c        ****         if (copedentNumberToWrite > 6)
 9532              		.loc 1 2130 0
 9533 07a0 264B     		ldr	r3, .L406+72
 9534 07a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 208


 9535 07a4 062B     		cmp	r3, #6
 9536 07a6 0BD9     		bls	.L375
2131:main.c        ****         {
2132:main.c        ****             //ignore, number is out of range
2133:main.c        ****             sysexMessageInProgress = 0;
 9537              		.loc 1 2133 0
 9538 07a8 1B4B     		ldr	r3, .L406+36
 9539 07aa 0022     		movs	r2, #0
 9540 07ac 1A70     		strb	r2, [r3]
2134:main.c        ****             // sysexPointer = 0;
2135:main.c        ****             sendingMessage = 0;
 9541              		.loc 1 2135 0
 9542 07ae 1B4B     		ldr	r3, .L406+40
 9543 07b0 0022     		movs	r2, #0
 9544 07b2 1A70     		strb	r2, [r3]
2136:main.c        ****             parseThatMF = 0;
 9545              		.loc 1 2136 0
 9546 07b4 1E4B     		ldr	r3, .L406+60
 9547 07b6 0022     		movs	r2, #0
 9548 07b8 1A70     		strb	r2, [r3]
2137:main.c        ****             ignore = 1;
 9549              		.loc 1 2137 0
 9550 07ba 0123     		movs	r3, #1
 9551 07bc 87F84F30 		strb	r3, [r7, #79]
 9552              	.L375:
2138:main.c        ****             
2139:main.c        ****         }
2140:main.c        ****         if (!ignore)
 9553              		.loc 1 2140 0
 9554 07c0 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 9555 07c4 002B     		cmp	r3, #0
 9556 07c6 0AD1     		bne	.L376
2141:main.c        ****         {
2142:main.c        ****             currentCopedent = copedentNumberToWrite;
 9557              		.loc 1 2142 0
 9558 07c8 1C4B     		ldr	r3, .L406+72
 9559 07ca 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 9560 07cc 1C4B     		ldr	r3, .L406+76
 9561 07ce 1A70     		strb	r2, [r3]
2143:main.c        ****             necks[currentNeck] = currentCopedent;
 9562              		.loc 1 2143 0
 9563 07d0 1C4B     		ldr	r3, .L406+80
 9564 07d2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9565 07d4 1A46     		mov	r2, r3
 9566 07d6 1A4B     		ldr	r3, .L406+76
 9567 07d8 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 9568 07da 1B4B     		ldr	r3, .L406+84
 9569 07dc 9954     		strb	r1, [r3, r2]
 9570              	.L376:
2144:main.c        ****         }
2145:main.c        ****               
2146:main.c        ****         
2147:main.c        ****         union breakFloat theVal;
2148:main.c        ****         uint32_t i = 2;
 9571              		.loc 1 2148 0
 9572 07de 0223     		movs	r3, #2
 9573 07e0 BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 209


2149:main.c        ****         sysexReadPointer = i + messageStart;
 9574              		.loc 1 2149 0
 9575 07e2 BA6C     		ldr	r2, [r7, #72]
 9576 07e4 FB6B     		ldr	r3, [r7, #60]
 9577 07e6 1344     		add	r3, r3, r2
 9578 07e8 124A     		ldr	r2, .L406+64
 9579 07ea 1360     		str	r3, [r2]
2150:main.c        ****         uint8_t stoppingPoint = COPEDENT_NAME_LENGTH_IN_BYTES + 2;
 9580              		.loc 1 2150 0
 9581 07ec 0C23     		movs	r3, #12
 9582 07ee 87F82F30 		strb	r3, [r7, #47]
2151:main.c        ****         for (; i < stoppingPoint; i++)
 9583              		.loc 1 2151 0
 9584 07f2 77E0     		b	.L377
 9585              	.L407:
 9586              		.align	2
 9587              	.L406:
 9588 07f4 00000000 		.word	mapCount
 9589 07f8 CDCCCCCC 		.word	-858993459
 9590 07fc 00000000 		.word	currentFloat
 9591 0800 00000000 		.word	presetArray
 9592 0804 00FEFF46 		.word	1191181824
 9593 0808 00000000 		.word	numMappings
 9594 080c 000020C0 		.word	-1071644672
 9595 0810 000060C0 		.word	-1067450368
 9596 0814 00000000 		.word	presetArraySection
 9597 0818 00000000 		.word	sysexMessageInProgress
 9598 081c 00000000 		.word	sendingMessage
 9599 0820 00000000 		.word	presetNumberToWrite
 9600 0824 00000000 		.word	patchNum
 9601 0828 00000000 		.word	messageArraySize
 9602 082c 00000000 		.word	SPI_errors
 9603 0830 00000000 		.word	parseThatMF
 9604 0834 00000000 		.word	sysexReadPointer
 9605 0838 00000000 		.word	sysexBuffer
 9606 083c 00000000 		.word	copedentNumberToWrite
 9607 0840 00000000 		.word	currentCopedent
 9608 0844 00000000 		.word	currentNeck
 9609 0848 00000000 		.word	necks
 9610              	.L379:
 9611              	.LBB66:
2152:main.c        ****         {
2153:main.c        ****             //presetArray[i-2] = sysexBuffer[i] & 127; // pass on the first 14 elements as 8-bit by
2154:main.c        ****             uint8_t tempChar = sysexBuffer[sysexReadPointer & sysexPointerMask] & 127;
 9612              		.loc 1 2154 0
 9613 084c 9C4B     		ldr	r3, .L408
 9614 084e 1B68     		ldr	r3, [r3]
 9615 0850 40F2FF72 		movw	r2, #2047
 9616 0854 1340     		ands	r3, r3, r2
 9617 0856 9B4A     		ldr	r2, .L408+4
 9618 0858 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9619 085a 03F07F03 		and	r3, r3, #127
 9620 085e 87F82E30 		strb	r3, [r7, #46]
2155:main.c        ****             if (!ignore)
 9621              		.loc 1 2155 0
 9622 0862 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 9623 0866 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 210


 9624 0868 34D1     		bne	.L378
2156:main.c        ****             {
2157:main.c        ****                 copedentNamesArray[copedentNumberToWrite][(i-2)] = tempChar;//not sure about the mi
 9625              		.loc 1 2157 0
 9626 086a 974B     		ldr	r3, .L408+8
 9627 086c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9628 086e 1846     		mov	r0, r3
 9629 0870 BB6C     		ldr	r3, [r7, #72]
 9630 0872 9A1E     		subs	r2, r3, #2
 9631 0874 9549     		ldr	r1, .L408+12
 9632 0876 0346     		mov	r3, r0
 9633 0878 9B00     		lsls	r3, r3, #2
 9634 087a 0344     		add	r3, r3, r0
 9635 087c 5B00     		lsls	r3, r3, #1
 9636 087e 0B44     		add	r3, r3, r1
 9637 0880 1344     		add	r3, r3, r2
 9638 0882 97F82E20 		ldrb	r2, [r7, #46]
 9639 0886 1A70     		strb	r2, [r3]
2158:main.c        ****                 checkBase = EEPROM_COPEDENT_OFFSET + (COPEDENT_SIZE_IN_BYTES * copedentNumberToWrit
 9640              		.loc 1 2158 0
 9641 0888 8F4B     		ldr	r3, .L408+8
 9642 088a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9643 088c 9BB2     		uxth	r3, r3
 9644 088e 1A46     		mov	r2, r3	@ movhi
 9645 0890 1201     		lsls	r2, r2, #4
 9646 0892 1A44     		add	r2, r2, r3
 9647 0894 D200     		lsls	r2, r2, #3
 9648 0896 1344     		add	r3, r3, r2
 9649 0898 5B00     		lsls	r3, r3, #1
 9650 089a 9AB2     		uxth	r2, r3
 9651 089c 8C4B     		ldr	r3, .L408+16
 9652 089e 1A80     		strh	r2, [r3]	@ movhi
2159:main.c        ****                 checkStatus = EEPROM_WriteByte(tempChar, EEPROM_COPEDENT_OFFSET + (i - 2) + (COPEDE
 9653              		.loc 1 2159 0
 9654 08a0 894B     		ldr	r3, .L408+8
 9655 08a2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9656 08a4 9BB2     		uxth	r3, r3
 9657 08a6 1A46     		mov	r2, r3	@ movhi
 9658 08a8 1201     		lsls	r2, r2, #4
 9659 08aa 1A44     		add	r2, r2, r3
 9660 08ac D200     		lsls	r2, r2, #3
 9661 08ae 1344     		add	r3, r3, r2
 9662 08b0 5B00     		lsls	r3, r3, #1
 9663 08b2 9AB2     		uxth	r2, r3
 9664 08b4 BB6C     		ldr	r3, [r7, #72]
 9665 08b6 9BB2     		uxth	r3, r3
 9666 08b8 1344     		add	r3, r3, r2
 9667 08ba 9BB2     		uxth	r3, r3
 9668 08bc 023B     		subs	r3, r3, #2
 9669 08be 9AB2     		uxth	r2, r3
 9670 08c0 97F82E30 		ldrb	r3, [r7, #46]	@ zero_extendqisi2
 9671 08c4 1146     		mov	r1, r2
 9672 08c6 1846     		mov	r0, r3
 9673 08c8 FFF7FEFF 		bl	EEPROM_WriteByte
 9674 08cc 0346     		mov	r3, r0
 9675 08ce DAB2     		uxtb	r2, r3
 9676 08d0 804B     		ldr	r3, .L408+20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 211


 9677 08d2 1A70     		strb	r2, [r3]
 9678              	.L378:
2160:main.c        ****             }
2161:main.c        ****             sysexReadPointer++;
 9679              		.loc 1 2161 0
 9680 08d4 7A4B     		ldr	r3, .L408
 9681 08d6 1B68     		ldr	r3, [r3]
 9682 08d8 0133     		adds	r3, r3, #1
 9683 08da 794A     		ldr	r2, .L408
 9684 08dc 1360     		str	r3, [r2]
 9685              	.LBE66:
2151:main.c        ****         {
 9686              		.loc 1 2151 0
 9687 08de BB6C     		ldr	r3, [r7, #72]
 9688 08e0 0133     		adds	r3, r3, #1
 9689 08e2 BB64     		str	r3, [r7, #72]
 9690              	.L377:
2151:main.c        ****         {
 9691              		.loc 1 2151 0 is_stmt 0 discriminator 1
 9692 08e4 97F82F20 		ldrb	r2, [r7, #47]	@ zero_extendqisi2
 9693 08e8 BB6C     		ldr	r3, [r7, #72]
 9694 08ea 9A42     		cmp	r2, r3
 9695 08ec AED8     		bhi	.L379
2162:main.c        ****         }
2163:main.c        ****         
2164:main.c        ****         i = (COPEDENT_NAME_LENGTH_IN_BYTES + 2 + messageStart); // start after the name storage to 
 9696              		.loc 1 2164 0 is_stmt 1
 9697 08ee FB6B     		ldr	r3, [r7, #60]
 9698 08f0 0C33     		adds	r3, r3, #12
 9699 08f2 BB64     		str	r3, [r7, #72]
2165:main.c        **** 
2166:main.c        ****  
2167:main.c        ****         while(i < messageEnd)
 9700              		.loc 1 2167 0
 9701 08f4 C1E0     		b	.L380
 9702              	.L386:
 9703              	.LBB67:
2168:main.c        ****         {
2169:main.c        ****             for (uint32_t pedalToWrite = 0; pedalToWrite < 11; pedalToWrite++)
 9704              		.loc 1 2169 0
 9705 08f6 0023     		movs	r3, #0
 9706 08f8 7B64     		str	r3, [r7, #68]
 9707 08fa BAE0     		b	.L381
 9708              	.L385:
 9709              	.LBB68:
2170:main.c        ****             {
2171:main.c        ****                 uint16_t pedalStartLoc = (pedalToWrite * 24);
 9710              		.loc 1 2171 0
 9711 08fc 7B6C     		ldr	r3, [r7, #68]
 9712 08fe 9BB2     		uxth	r3, r3
 9713 0900 1A46     		mov	r2, r3	@ movhi
 9714 0902 5200     		lsls	r2, r2, #1
 9715 0904 1344     		add	r3, r3, r2
 9716 0906 DB00     		lsls	r3, r3, #3
 9717 0908 BB85     		strh	r3, [r7, #44]	@ movhi
 9718              	.LBB69:
2172:main.c        ****                 for (uint32_t stringChange = 0; stringChange < 12; stringChange++)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 212


 9719              		.loc 1 2172 0
 9720 090a 0023     		movs	r3, #0
 9721 090c 3B64     		str	r3, [r7, #64]
 9722 090e A9E0     		b	.L382
 9723              	.L384:
2173:main.c        ****                 {
2174:main.c        ****                     
2175:main.c        ****                     theVal.u32 = 0;
 9724              		.loc 1 2175 0
 9725 0910 0023     		movs	r3, #0
 9726 0912 FB60     		str	r3, [r7, #12]
2176:main.c        ****                     theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9727              		.loc 1 2176 0
 9728 0914 FB68     		ldr	r3, [r7, #12]
 9729 0916 40F2FF71 		movw	r1, #2047
 9730 091a BA6C     		ldr	r2, [r7, #72]
 9731 091c 0A40     		ands	r2, r2, r1
 9732 091e 6949     		ldr	r1, .L408+4
 9733 0920 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9734 0922 1207     		lsls	r2, r2, #28
 9735 0924 1343     		orrs	r3, r3, r2
 9736 0926 FB60     		str	r3, [r7, #12]
2177:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 9737              		.loc 1 2177 0
 9738 0928 FB68     		ldr	r3, [r7, #12]
 9739 092a BA6C     		ldr	r2, [r7, #72]
 9740 092c 0132     		adds	r2, r2, #1
 9741 092e 40F2FF71 		movw	r1, #2047
 9742 0932 0A40     		ands	r2, r2, r1
 9743 0934 6349     		ldr	r1, .L408+4
 9744 0936 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9745 0938 5205     		lsls	r2, r2, #21
 9746 093a 1343     		orrs	r3, r3, r2
 9747 093c FB60     		str	r3, [r7, #12]
2178:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 9748              		.loc 1 2178 0
 9749 093e FB68     		ldr	r3, [r7, #12]
 9750 0940 BA6C     		ldr	r2, [r7, #72]
 9751 0942 0232     		adds	r2, r2, #2
 9752 0944 40F2FF71 		movw	r1, #2047
 9753 0948 0A40     		ands	r2, r2, r1
 9754 094a 5E49     		ldr	r1, .L408+4
 9755 094c 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9756 094e 9203     		lsls	r2, r2, #14
 9757 0950 1343     		orrs	r3, r3, r2
 9758 0952 FB60     		str	r3, [r7, #12]
2179:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 9759              		.loc 1 2179 0
 9760 0954 FB68     		ldr	r3, [r7, #12]
 9761 0956 BA6C     		ldr	r2, [r7, #72]
 9762 0958 0332     		adds	r2, r2, #3
 9763 095a 40F2FF71 		movw	r1, #2047
 9764 095e 0A40     		ands	r2, r2, r1
 9765 0960 5849     		ldr	r1, .L408+4
 9766 0962 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 9767 0964 D201     		lsls	r2, r2, #7
 9768 0966 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 213


 9769 0968 FB60     		str	r3, [r7, #12]
2180:main.c        ****                     theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 9770              		.loc 1 2180 0
 9771 096a FA68     		ldr	r2, [r7, #12]
 9772 096c BB6C     		ldr	r3, [r7, #72]
 9773 096e 0433     		adds	r3, r3, #4
 9774 0970 40F2FF71 		movw	r1, #2047
 9775 0974 0B40     		ands	r3, r3, r1
 9776 0976 5349     		ldr	r1, .L408+4
 9777 0978 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 9778 097a 03F07F03 		and	r3, r3, #127
 9779 097e 1343     		orrs	r3, r3, r2
 9780 0980 FB60     		str	r3, [r7, #12]
2181:main.c        ****                     if (!ignore)
 9781              		.loc 1 2181 0
 9782 0982 97F84F30 		ldrb	r3, [r7, #79]	@ zero_extendqisi2
 9783 0986 002B     		cmp	r3, #0
 9784 0988 61D1     		bne	.L383
 9785              	.LBB70:
2182:main.c        ****                     {
2183:main.c        ****                         copedent[copedentNumberToWrite][pedalToWrite][stringChange] = theVal.f;
 9786              		.loc 1 2183 0
 9787 098a 4F4B     		ldr	r3, .L408+8
 9788 098c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9789 098e 1C46     		mov	r4, r3
 9790 0990 F968     		ldr	r1, [r7, #12]	@ float
 9791 0992 5148     		ldr	r0, .L408+24
 9792 0994 7B6C     		ldr	r3, [r7, #68]
 9793 0996 1A46     		mov	r2, r3
 9794 0998 5200     		lsls	r2, r2, #1
 9795 099a 1A44     		add	r2, r2, r3
 9796 099c 9300     		lsls	r3, r2, #2
 9797 099e 1A46     		mov	r2, r3
 9798 09a0 2346     		mov	r3, r4
 9799 09a2 5B01     		lsls	r3, r3, #5
 9800 09a4 2344     		add	r3, r3, r4
 9801 09a6 9B00     		lsls	r3, r3, #2
 9802 09a8 1A44     		add	r2, r2, r3
 9803 09aa 3B6C     		ldr	r3, [r7, #64]
 9804 09ac 1344     		add	r3, r3, r2
 9805 09ae 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
2184:main.c        ****                     
2185:main.c        ****                     
2186:main.c        ****                         uint16_t tempIntVersion = (uint16_t)((theVal.f * 256.0f) + 32768.0f);
 9806              		.loc 1 2186 0
 9807 09b2 FB68     		ldr	r3, [r7, #12]	@ float
 9808 09b4 4FF08741 		mov	r1, #1132462080
 9809 09b8 1846     		mov	r0, r3
 9810 09ba FFF7FEFF 		bl	__aeabi_fmul
 9811 09be 0346     		mov	r3, r0
 9812 09c0 4FF08E41 		mov	r1, #1191182336
 9813 09c4 1846     		mov	r0, r3
 9814 09c6 FFF7FEFF 		bl	__aeabi_fadd
 9815 09ca 0346     		mov	r3, r0
 9816 09cc 1846     		mov	r0, r3
 9817 09ce FFF7FEFF 		bl	__aeabi_f2uiz
 9818 09d2 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 214


 9819 09d4 7B85     		strh	r3, [r7, #42]	@ movhi
2187:main.c        ****                         uint8_t tempHigh = tempIntVersion >> 8;
 9820              		.loc 1 2187 0
 9821 09d6 7B8D     		ldrh	r3, [r7, #42]
 9822 09d8 1B0A     		lsrs	r3, r3, #8
 9823 09da 9BB2     		uxth	r3, r3
 9824 09dc 87F82930 		strb	r3, [r7, #41]
2188:main.c        ****                         uint8_t tempLow = tempIntVersion & 255;
 9825              		.loc 1 2188 0
 9826 09e0 7B8D     		ldrh	r3, [r7, #42]	@ movhi
 9827 09e2 87F82830 		strb	r3, [r7, #40]
2189:main.c        ****                     
2190:main.c        ****                     
2191:main.c        ****                         uint16_t stringStartLoc = stringChange * 2;
 9828              		.loc 1 2191 0
 9829 09e6 3B6C     		ldr	r3, [r7, #64]
 9830 09e8 9BB2     		uxth	r3, r3
 9831 09ea 5B00     		lsls	r3, r3, #1
 9832 09ec FB84     		strh	r3, [r7, #38]	@ movhi
2192:main.c        ****                         checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPE
 9833              		.loc 1 2192 0
 9834 09ee FA8C     		ldrh	r2, [r7, #38]	@ movhi
 9835 09f0 BB8D     		ldrh	r3, [r7, #44]	@ movhi
 9836 09f2 1344     		add	r3, r3, r2
 9837 09f4 9AB2     		uxth	r2, r3
 9838 09f6 344B     		ldr	r3, .L408+8
 9839 09f8 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 9840 09fa 9BB2     		uxth	r3, r3
 9841 09fc 1946     		mov	r1, r3	@ movhi
 9842 09fe 0901     		lsls	r1, r1, #4
 9843 0a00 1944     		add	r1, r1, r3
 9844 0a02 C900     		lsls	r1, r1, #3
 9845 0a04 0B44     		add	r3, r3, r1
 9846 0a06 5B00     		lsls	r3, r3, #1
 9847 0a08 9BB2     		uxth	r3, r3
 9848 0a0a 1344     		add	r3, r3, r2
 9849 0a0c 9BB2     		uxth	r3, r3
 9850 0a0e 0A33     		adds	r3, r3, #10
 9851 0a10 9AB2     		uxth	r2, r3
 9852 0a12 2F4B     		ldr	r3, .L408+16
 9853 0a14 1A80     		strh	r2, [r3]	@ movhi
2193:main.c        ****                         checkStatus = EEPROM_WriteByte(tempHigh, checkBase);
 9854              		.loc 1 2193 0
 9855 0a16 2E4B     		ldr	r3, .L408+16
 9856 0a18 1B88     		ldrh	r3, [r3]	@ movhi
 9857 0a1a 9AB2     		uxth	r2, r3
 9858 0a1c 97F82930 		ldrb	r3, [r7, #41]	@ zero_extendqisi2
 9859 0a20 1146     		mov	r1, r2
 9860 0a22 1846     		mov	r0, r3
 9861 0a24 FFF7FEFF 		bl	EEPROM_WriteByte
 9862 0a28 0346     		mov	r3, r0
 9863 0a2a DAB2     		uxtb	r2, r3
 9864 0a2c 294B     		ldr	r3, .L408+20
 9865 0a2e 1A70     		strb	r2, [r3]
2194:main.c        ****                         checkStatus = EEPROM_WriteByte(tempLow, checkBase+1);
 9866              		.loc 1 2194 0
 9867 0a30 274B     		ldr	r3, .L408+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 215


 9868 0a32 1B88     		ldrh	r3, [r3]	@ movhi
 9869 0a34 9BB2     		uxth	r3, r3
 9870 0a36 0133     		adds	r3, r3, #1
 9871 0a38 9AB2     		uxth	r2, r3
 9872 0a3a 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 9873 0a3e 1146     		mov	r1, r2
 9874 0a40 1846     		mov	r0, r3
 9875 0a42 FFF7FEFF 		bl	EEPROM_WriteByte
 9876 0a46 0346     		mov	r3, r0
 9877 0a48 DAB2     		uxtb	r2, r3
 9878 0a4a 224B     		ldr	r3, .L408+20
 9879 0a4c 1A70     		strb	r2, [r3]
 9880              	.L383:
 9881              	.LBE70:
2195:main.c        ****                     }
2196:main.c        ****                     currentFloat++;
 9882              		.loc 1 2196 0 discriminator 2
 9883 0a4e 234B     		ldr	r3, .L408+28
 9884 0a50 1B68     		ldr	r3, [r3]
 9885 0a52 0133     		adds	r3, r3, #1
 9886 0a54 214A     		ldr	r2, .L408+28
 9887 0a56 1360     		str	r3, [r2]
2197:main.c        ****                     i = (i+5);
 9888              		.loc 1 2197 0 discriminator 2
 9889 0a58 BB6C     		ldr	r3, [r7, #72]
 9890 0a5a 0533     		adds	r3, r3, #5
 9891 0a5c BB64     		str	r3, [r7, #72]
2172:main.c        ****                 {
 9892              		.loc 1 2172 0 discriminator 2
 9893 0a5e 3B6C     		ldr	r3, [r7, #64]
 9894 0a60 0133     		adds	r3, r3, #1
 9895 0a62 3B64     		str	r3, [r7, #64]
 9896              	.L382:
2172:main.c        ****                 {
 9897              		.loc 1 2172 0 is_stmt 0 discriminator 1
 9898 0a64 3B6C     		ldr	r3, [r7, #64]
 9899 0a66 0B2B     		cmp	r3, #11
 9900 0a68 7FF652AF 		bls	.L384
 9901              	.LBE69:
 9902              	.LBE68:
2169:main.c        ****             {
 9903              		.loc 1 2169 0 is_stmt 1 discriminator 2
 9904 0a6c 7B6C     		ldr	r3, [r7, #68]
 9905 0a6e 0133     		adds	r3, r3, #1
 9906 0a70 7B64     		str	r3, [r7, #68]
 9907              	.L381:
2169:main.c        ****             {
 9908              		.loc 1 2169 0 is_stmt 0 discriminator 1
 9909 0a72 7B6C     		ldr	r3, [r7, #68]
 9910 0a74 0A2B     		cmp	r3, #10
 9911 0a76 7FF641AF 		bls	.L385
 9912              	.L380:
 9913              	.LBE67:
2167:main.c        ****         {
 9914              		.loc 1 2167 0 is_stmt 1
 9915 0a7a BA6C     		ldr	r2, [r7, #72]
 9916 0a7c BB6B     		ldr	r3, [r7, #56]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 216


 9917 0a7e 9A42     		cmp	r2, r3
 9918 0a80 FFF439AF 		bcc	.L386
2198:main.c        ****                 }
2199:main.c        ****                 
2200:main.c        ****             }
2201:main.c        ****         }
2202:main.c        ****                         
2203:main.c        ****         
2204:main.c        ****         messageArraySize = currentFloat;
 9919              		.loc 1 2204 0
 9920 0a84 154B     		ldr	r3, .L408+28
 9921 0a86 1B68     		ldr	r3, [r3]
 9922 0a88 9AB2     		uxth	r2, r3
 9923 0a8a 154B     		ldr	r3, .L408+32
 9924 0a8c 1A80     		strh	r2, [r3]	@ movhi
2205:main.c        ****                     
2206:main.c        ****         if(messageArraySize != COPEDENT_SIZE_IN_FLOATS)
 9925              		.loc 1 2206 0
 9926 0a8e 144B     		ldr	r3, .L408+32
 9927 0a90 1B88     		ldrh	r3, [r3]
 9928 0a92 842B     		cmp	r3, #132
 9929 0a94 0ED0     		beq	.L387
2207:main.c        ****         {
2208:main.c        ****             //error state
2209:main.c        ****             SPI_errors++;
 9930              		.loc 1 2209 0
 9931 0a96 134B     		ldr	r3, .L408+36
 9932 0a98 1B68     		ldr	r3, [r3]
 9933 0a9a 0133     		adds	r3, r3, #1
 9934 0a9c 114A     		ldr	r2, .L408+36
 9935 0a9e 1360     		str	r3, [r2]
2210:main.c        ****             sysexMessageInProgress = 0;
 9936              		.loc 1 2210 0
 9937 0aa0 114B     		ldr	r3, .L408+40
 9938 0aa2 0022     		movs	r2, #0
 9939 0aa4 1A70     		strb	r2, [r3]
2211:main.c        ****            // sysexPointer = 0;
2212:main.c        ****             sendingMessage = 0;
 9940              		.loc 1 2212 0
 9941 0aa6 114B     		ldr	r3, .L408+44
 9942 0aa8 0022     		movs	r2, #0
 9943 0aaa 1A70     		strb	r2, [r3]
2213:main.c        ****             parseThatMF = 0;
 9944              		.loc 1 2213 0
 9945 0aac 104B     		ldr	r3, .L408+48
 9946 0aae 0022     		movs	r2, #0
 9947 0ab0 1A70     		strb	r2, [r3]
 9948 0ab2 D1E1     		b	.L373
 9949              	.L387:
2214:main.c        ****         } 
2215:main.c        ****         else 
2216:main.c        ****         {
2217:main.c        ****             sysexMessageInProgress = 0;
 9950              		.loc 1 2217 0
 9951 0ab4 0C4B     		ldr	r3, .L408+40
 9952 0ab6 0022     		movs	r2, #0
 9953 0ab8 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 217


2218:main.c        ****             //sendingMessage = 2;  // use this when we are ready to send copedents to the sd cards 
2219:main.c        ****             
2220:main.c        ****             displayCurrentPresetNameAndCopedent();
 9954              		.loc 1 2220 0
 9955 0aba FFF7FEFF 		bl	displayCurrentPresetNameAndCopedent
 9956 0abe CBE1     		b	.L373
 9957              	.L409:
 9958              		.align	2
 9959              	.L408:
 9960 0ac0 00000000 		.word	sysexReadPointer
 9961 0ac4 00000000 		.word	sysexBuffer
 9962 0ac8 00000000 		.word	copedentNumberToWrite
 9963 0acc 00000000 		.word	copedentNamesArray
 9964 0ad0 00000000 		.word	checkBase
 9965 0ad4 00000000 		.word	checkStatus
 9966 0ad8 00000000 		.word	copedent
 9967 0adc 00000000 		.word	currentFloat
 9968 0ae0 00000000 		.word	messageArraySize
 9969 0ae4 00000000 		.word	SPI_errors
 9970 0ae8 00000000 		.word	sysexMessageInProgress
 9971 0aec 00000000 		.word	sendingMessage
 9972 0af0 00000000 		.word	parseThatMF
 9973              	.L374:
 9974              	.LBE65:
2221:main.c        ****         }
2222:main.c        ****     }
2223:main.c        ****     
2224:main.c        ****     
2225:main.c        ****     else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 3) //it's a real-time parameter ch
 9975              		.loc 1 2225 0
 9976 0af4 584B     		ldr	r3, .L410
 9977 0af6 1B68     		ldr	r3, [r3]
 9978 0af8 40F2FF72 		movw	r2, #2047
 9979 0afc 1340     		ands	r3, r3, r2
 9980 0afe 574A     		ldr	r2, .L410+4
 9981 0b00 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 9982 0b02 032B     		cmp	r3, #3
 9983 0b04 40F0BA80 		bne	.L389
 9984              	.LBB71:
2226:main.c        ****     {
2227:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 9985              		.loc 1 2227 0
 9986 0b08 554B     		ldr	r3, .L410+8
 9987 0b0a 0122     		movs	r2, #1
 9988 0b0c 1A70     		strb	r2, [r3]
2228:main.c        ****         union breakFloat theVal;
2229:main.c        ****         uint32_t i = (2+messageStart);
 9989              		.loc 1 2229 0
 9990 0b0e FB6B     		ldr	r3, [r7, #60]
 9991 0b10 0233     		adds	r3, r3, #2
 9992 0b12 3B62     		str	r3, [r7, #32]
2230:main.c        ****         
2231:main.c        ****         //get the parameter ID
2232:main.c        ****         theVal.u32 = 0;
 9993              		.loc 1 2232 0
 9994 0b14 0023     		movs	r3, #0
 9995 0b16 BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 218


2233:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 9996              		.loc 1 2233 0
 9997 0b18 BB68     		ldr	r3, [r7, #8]
 9998 0b1a 40F2FF71 		movw	r1, #2047
 9999 0b1e 3A6A     		ldr	r2, [r7, #32]
 10000 0b20 0A40     		ands	r2, r2, r1
 10001 0b22 4E49     		ldr	r1, .L410+4
 10002 0b24 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10003 0b26 1207     		lsls	r2, r2, #28
 10004 0b28 1343     		orrs	r3, r3, r2
 10005 0b2a BB60     		str	r3, [r7, #8]
2234:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 10006              		.loc 1 2234 0
 10007 0b2c BB68     		ldr	r3, [r7, #8]
 10008 0b2e 3A6A     		ldr	r2, [r7, #32]
 10009 0b30 0132     		adds	r2, r2, #1
 10010 0b32 40F2FF71 		movw	r1, #2047
 10011 0b36 0A40     		ands	r2, r2, r1
 10012 0b38 4849     		ldr	r1, .L410+4
 10013 0b3a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10014 0b3c 5205     		lsls	r2, r2, #21
 10015 0b3e 1343     		orrs	r3, r3, r2
 10016 0b40 BB60     		str	r3, [r7, #8]
2235:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 10017              		.loc 1 2235 0
 10018 0b42 BB68     		ldr	r3, [r7, #8]
 10019 0b44 3A6A     		ldr	r2, [r7, #32]
 10020 0b46 0232     		adds	r2, r2, #2
 10021 0b48 40F2FF71 		movw	r1, #2047
 10022 0b4c 0A40     		ands	r2, r2, r1
 10023 0b4e 4349     		ldr	r1, .L410+4
 10024 0b50 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10025 0b52 9203     		lsls	r2, r2, #14
 10026 0b54 1343     		orrs	r3, r3, r2
 10027 0b56 BB60     		str	r3, [r7, #8]
2236:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 10028              		.loc 1 2236 0
 10029 0b58 BB68     		ldr	r3, [r7, #8]
 10030 0b5a 3A6A     		ldr	r2, [r7, #32]
 10031 0b5c 0332     		adds	r2, r2, #3
 10032 0b5e 40F2FF71 		movw	r1, #2047
 10033 0b62 0A40     		ands	r2, r2, r1
 10034 0b64 3D49     		ldr	r1, .L410+4
 10035 0b66 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10036 0b68 D201     		lsls	r2, r2, #7
 10037 0b6a 1343     		orrs	r3, r3, r2
 10038 0b6c BB60     		str	r3, [r7, #8]
2237:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 10039              		.loc 1 2237 0
 10040 0b6e BA68     		ldr	r2, [r7, #8]
 10041 0b70 3B6A     		ldr	r3, [r7, #32]
 10042 0b72 0433     		adds	r3, r3, #4
 10043 0b74 40F2FF71 		movw	r1, #2047
 10044 0b78 0B40     		ands	r3, r3, r1
 10045 0b7a 3849     		ldr	r1, .L410+4
 10046 0b7c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10047 0b7e 03F07F03 		and	r3, r3, #127
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 219


 10048 0b82 1343     		orrs	r3, r3, r2
 10049 0b84 BB60     		str	r3, [r7, #8]
2238:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 10050              		.loc 1 2238 0
 10051 0b86 BB68     		ldr	r3, [r7, #8]	@ float
 10052 0b88 1846     		mov	r0, r3
 10053 0b8a FFF7FEFF 		bl	roundf
 10054 0b8e 0346     		mov	r3, r0
 10055 0b90 1846     		mov	r0, r3
 10056 0b92 FFF7FEFF 		bl	__aeabi_f2uiz
 10057 0b96 0346     		mov	r3, r0
 10058 0b98 FB83     		strh	r3, [r7, #30]	@ movhi
2239:main.c        ****         singleParamToUpdateHigh = (roundedIndex << 8);
 10059              		.loc 1 2239 0
 10060 0b9a 324B     		ldr	r3, .L410+12
 10061 0b9c 0022     		movs	r2, #0
 10062 0b9e 1A70     		strb	r2, [r3]
2240:main.c        ****         singleParamToUpdateLow = roundedIndex & 0xff;
 10063              		.loc 1 2240 0
 10064 0ba0 FB8B     		ldrh	r3, [r7, #30]	@ movhi
 10065 0ba2 DAB2     		uxtb	r2, r3
 10066 0ba4 304B     		ldr	r3, .L410+16
 10067 0ba6 1A70     		strb	r2, [r3]
2241:main.c        ****         
2242:main.c        ****         i = (i+5);
 10068              		.loc 1 2242 0
 10069 0ba8 3B6A     		ldr	r3, [r7, #32]
 10070 0baa 0533     		adds	r3, r3, #5
 10071 0bac 3B62     		str	r3, [r7, #32]
2243:main.c        ****         
2244:main.c        ****         //get the parameter value
2245:main.c        ****         theVal.u32 = 0;
 10072              		.loc 1 2245 0
 10073 0bae 0023     		movs	r3, #0
 10074 0bb0 BB60     		str	r3, [r7, #8]
2246:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 10075              		.loc 1 2246 0
 10076 0bb2 BB68     		ldr	r3, [r7, #8]
 10077 0bb4 40F2FF71 		movw	r1, #2047
 10078 0bb8 3A6A     		ldr	r2, [r7, #32]
 10079 0bba 0A40     		ands	r2, r2, r1
 10080 0bbc 2749     		ldr	r1, .L410+4
 10081 0bbe 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10082 0bc0 1207     		lsls	r2, r2, #28
 10083 0bc2 1343     		orrs	r3, r3, r2
 10084 0bc4 BB60     		str	r3, [r7, #8]
2247:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1)& sysexPointerMask] << 21);
 10085              		.loc 1 2247 0
 10086 0bc6 BB68     		ldr	r3, [r7, #8]
 10087 0bc8 3A6A     		ldr	r2, [r7, #32]
 10088 0bca 0132     		adds	r2, r2, #1
 10089 0bcc 40F2FF71 		movw	r1, #2047
 10090 0bd0 0A40     		ands	r2, r2, r1
 10091 0bd2 2249     		ldr	r1, .L410+4
 10092 0bd4 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10093 0bd6 5205     		lsls	r2, r2, #21
 10094 0bd8 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 220


 10095 0bda BB60     		str	r3, [r7, #8]
2248:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2)& sysexPointerMask] << 14);
 10096              		.loc 1 2248 0
 10097 0bdc BB68     		ldr	r3, [r7, #8]
 10098 0bde 3A6A     		ldr	r2, [r7, #32]
 10099 0be0 0232     		adds	r2, r2, #2
 10100 0be2 40F2FF71 		movw	r1, #2047
 10101 0be6 0A40     		ands	r2, r2, r1
 10102 0be8 1C49     		ldr	r1, .L410+4
 10103 0bea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10104 0bec 9203     		lsls	r2, r2, #14
 10105 0bee 1343     		orrs	r3, r3, r2
 10106 0bf0 BB60     		str	r3, [r7, #8]
2249:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3)& sysexPointerMask] << 7);
 10107              		.loc 1 2249 0
 10108 0bf2 BB68     		ldr	r3, [r7, #8]
 10109 0bf4 3A6A     		ldr	r2, [r7, #32]
 10110 0bf6 0332     		adds	r2, r2, #3
 10111 0bf8 40F2FF71 		movw	r1, #2047
 10112 0bfc 0A40     		ands	r2, r2, r1
 10113 0bfe 1749     		ldr	r1, .L410+4
 10114 0c00 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10115 0c02 D201     		lsls	r2, r2, #7
 10116 0c04 1343     		orrs	r3, r3, r2
 10117 0c06 BB60     		str	r3, [r7, #8]
2250:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4)& sysexPointerMask] & 127);
 10118              		.loc 1 2250 0
 10119 0c08 BA68     		ldr	r2, [r7, #8]
 10120 0c0a 3B6A     		ldr	r3, [r7, #32]
 10121 0c0c 0433     		adds	r3, r3, #4
 10122 0c0e 40F2FF71 		movw	r1, #2047
 10123 0c12 0B40     		ands	r3, r3, r1
 10124 0c14 1149     		ldr	r1, .L410+4
 10125 0c16 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10126 0c18 03F07F03 		and	r3, r3, #127
 10127 0c1c 1343     		orrs	r3, r3, r2
 10128 0c1e BB60     		str	r3, [r7, #8]
2251:main.c        ****         
2252:main.c        ****         uint16_t intVal = (uint16_t)(theVal.f * 65535.0f);
 10129              		.loc 1 2252 0
 10130 0c20 BB68     		ldr	r3, [r7, #8]	@ float
 10131 0c22 1249     		ldr	r1, .L410+20
 10132 0c24 1846     		mov	r0, r3
 10133 0c26 FFF7FEFF 		bl	__aeabi_fmul
 10134 0c2a 0346     		mov	r3, r0
 10135 0c2c 1846     		mov	r0, r3
 10136 0c2e FFF7FEFF 		bl	__aeabi_f2uiz
 10137 0c32 0346     		mov	r3, r0
 10138 0c34 BB83     		strh	r3, [r7, #28]	@ movhi
2253:main.c        ****         singleParamValueHigh = intVal >> 8;
 10139              		.loc 1 2253 0
 10140 0c36 BB8B     		ldrh	r3, [r7, #28]
 10141 0c38 1B0A     		lsrs	r3, r3, #8
 10142 0c3a 9BB2     		uxth	r3, r3
 10143 0c3c DAB2     		uxtb	r2, r3
 10144 0c3e 0C4B     		ldr	r3, .L410+24
 10145 0c40 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 221


2254:main.c        ****         singleParamValueLow = intVal & 0xff;
 10146              		.loc 1 2254 0
 10147 0c42 BB8B     		ldrh	r3, [r7, #28]	@ movhi
 10148 0c44 DAB2     		uxtb	r2, r3
 10149 0c46 0B4B     		ldr	r3, .L410+28
 10150 0c48 1A70     		strb	r2, [r3]
2255:main.c        ****         
2256:main.c        ****         sysexMessageInProgress = 0;
 10151              		.loc 1 2256 0
 10152 0c4a 054B     		ldr	r3, .L410+8
 10153 0c4c 0022     		movs	r2, #0
 10154 0c4e 1A70     		strb	r2, [r3]
2257:main.c        ****         sendSingleParamUpdate = 1;
 10155              		.loc 1 2257 0
 10156 0c50 094B     		ldr	r3, .L410+32
 10157 0c52 0122     		movs	r2, #1
 10158 0c54 1A70     		strb	r2, [r3]
 10159              	.LBE71:
 10160 0c56 FFE0     		b	.L373
 10161              	.L411:
 10162              		.align	2
 10163              	.L410:
 10164 0c58 00000000 		.word	sysexReadPointer
 10165 0c5c 00000000 		.word	sysexBuffer
 10166 0c60 00000000 		.word	sysexMessageInProgress
 10167 0c64 00000000 		.word	singleParamToUpdateHigh
 10168 0c68 00000000 		.word	singleParamToUpdateLow
 10169 0c6c 00FF7F47 		.word	1199570688
 10170 0c70 00000000 		.word	singleParamValueHigh
 10171 0c74 00000000 		.word	singleParamValueLow
 10172 0c78 00000000 		.word	sendSingleParamUpdate
 10173              	.L389:
2258:main.c        ****     }
2259:main.c        ****     
2260:main.c        ****      else if (sysexBuffer[sysexReadPointer & sysexPointerMask] == 4) //it's a real-time mapping cha
 10174              		.loc 1 2260 0
 10175 0c7c 814B     		ldr	r3, .L412
 10176 0c7e 1B68     		ldr	r3, [r3]
 10177 0c80 40F2FF72 		movw	r2, #2047
 10178 0c84 1340     		ands	r3, r3, r2
 10179 0c86 804A     		ldr	r2, .L412+4
 10180 0c88 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 10181 0c8a 042B     		cmp	r3, #4
 10182 0c8c 40F0E480 		bne	.L373
 10183              	.LBB72:
2261:main.c        ****     {
2262:main.c        ****         sysexMessageInProgress = 1; // set a flag that we've started a sysex preset transfer. May t
 10184              		.loc 1 2262 0
 10185 0c90 7E4B     		ldr	r3, .L412+8
 10186 0c92 0122     		movs	r2, #1
 10187 0c94 1A70     		strb	r2, [r3]
2263:main.c        ****         union breakFloat theVal;
2264:main.c        ****         uint32_t i = (2 + messageStart);
 10188              		.loc 1 2264 0
 10189 0c96 FB6B     		ldr	r3, [r7, #60]
 10190 0c98 0233     		adds	r3, r3, #2
 10191 0c9a BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 222


2265:main.c        ****         
2266:main.c        ****         //get the destination number
2267:main.c        ****         theVal.u32 = 0;
 10192              		.loc 1 2267 0
 10193 0c9c 0023     		movs	r3, #0
 10194 0c9e 7B60     		str	r3, [r7, #4]
2268:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 10195              		.loc 1 2268 0
 10196 0ca0 7B68     		ldr	r3, [r7, #4]
 10197 0ca2 40F2FF71 		movw	r1, #2047
 10198 0ca6 BA69     		ldr	r2, [r7, #24]
 10199 0ca8 0A40     		ands	r2, r2, r1
 10200 0caa 7749     		ldr	r1, .L412+4
 10201 0cac 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10202 0cae 1207     		lsls	r2, r2, #28
 10203 0cb0 1343     		orrs	r3, r3, r2
 10204 0cb2 7B60     		str	r3, [r7, #4]
2269:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 10205              		.loc 1 2269 0
 10206 0cb4 7B68     		ldr	r3, [r7, #4]
 10207 0cb6 BA69     		ldr	r2, [r7, #24]
 10208 0cb8 0132     		adds	r2, r2, #1
 10209 0cba 40F2FF71 		movw	r1, #2047
 10210 0cbe 0A40     		ands	r2, r2, r1
 10211 0cc0 7149     		ldr	r1, .L412+4
 10212 0cc2 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10213 0cc4 5205     		lsls	r2, r2, #21
 10214 0cc6 1343     		orrs	r3, r3, r2
 10215 0cc8 7B60     		str	r3, [r7, #4]
2270:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 10216              		.loc 1 2270 0
 10217 0cca 7B68     		ldr	r3, [r7, #4]
 10218 0ccc BA69     		ldr	r2, [r7, #24]
 10219 0cce 0232     		adds	r2, r2, #2
 10220 0cd0 40F2FF71 		movw	r1, #2047
 10221 0cd4 0A40     		ands	r2, r2, r1
 10222 0cd6 6C49     		ldr	r1, .L412+4
 10223 0cd8 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10224 0cda 9203     		lsls	r2, r2, #14
 10225 0cdc 1343     		orrs	r3, r3, r2
 10226 0cde 7B60     		str	r3, [r7, #4]
2271:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 10227              		.loc 1 2271 0
 10228 0ce0 7B68     		ldr	r3, [r7, #4]
 10229 0ce2 BA69     		ldr	r2, [r7, #24]
 10230 0ce4 0332     		adds	r2, r2, #3
 10231 0ce6 40F2FF71 		movw	r1, #2047
 10232 0cea 0A40     		ands	r2, r2, r1
 10233 0cec 6649     		ldr	r1, .L412+4
 10234 0cee 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10235 0cf0 D201     		lsls	r2, r2, #7
 10236 0cf2 1343     		orrs	r3, r3, r2
 10237 0cf4 7B60     		str	r3, [r7, #4]
2272:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 10238              		.loc 1 2272 0
 10239 0cf6 7A68     		ldr	r2, [r7, #4]
 10240 0cf8 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 223


 10241 0cfa 0433     		adds	r3, r3, #4
 10242 0cfc 40F2FF71 		movw	r1, #2047
 10243 0d00 0B40     		ands	r3, r3, r1
 10244 0d02 6149     		ldr	r1, .L412+4
 10245 0d04 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10246 0d06 03F07F03 		and	r3, r3, #127
 10247 0d0a 1343     		orrs	r3, r3, r2
 10248 0d0c 7B60     		str	r3, [r7, #4]
2273:main.c        ****         uint16_t roundedIndex = (uint16_t)roundf(theVal.f);
 10249              		.loc 1 2273 0
 10250 0d0e 7B68     		ldr	r3, [r7, #4]	@ float
 10251 0d10 1846     		mov	r0, r3
 10252 0d12 FFF7FEFF 		bl	roundf
 10253 0d16 0346     		mov	r3, r0
 10254 0d18 1846     		mov	r0, r3
 10255 0d1a FFF7FEFF 		bl	__aeabi_f2uiz
 10256 0d1e 0346     		mov	r3, r0
 10257 0d20 FB82     		strh	r3, [r7, #22]	@ movhi
2274:main.c        ****         mappingArray[0] = (roundedIndex << 8);
 10258              		.loc 1 2274 0
 10259 0d22 5B4B     		ldr	r3, .L412+12
 10260 0d24 0022     		movs	r2, #0
 10261 0d26 1A70     		strb	r2, [r3]
2275:main.c        ****         mappingArray[1] = roundedIndex & 0xff;
 10262              		.loc 1 2275 0
 10263 0d28 FB8A     		ldrh	r3, [r7, #22]	@ movhi
 10264 0d2a DAB2     		uxtb	r2, r3
 10265 0d2c 584B     		ldr	r3, .L412+12
 10266 0d2e 5A70     		strb	r2, [r3, #1]
2276:main.c        ****         
2277:main.c        ****         
2278:main.c        ****         mappingArray[2] = sysexBuffer[(i+5) & sysexPointerMask]; //slot id
 10267              		.loc 1 2278 0
 10268 0d30 BB69     		ldr	r3, [r7, #24]
 10269 0d32 0533     		adds	r3, r3, #5
 10270 0d34 40F2FF72 		movw	r2, #2047
 10271 0d38 1340     		ands	r3, r3, r2
 10272 0d3a 534A     		ldr	r2, .L412+4
 10273 0d3c D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 10274 0d3e 544B     		ldr	r3, .L412+12
 10275 0d40 9A70     		strb	r2, [r3, #2]
2279:main.c        ****         mappingArray[3] = sysexBuffer[(i+6) & sysexPointerMask]; //mapping change type
 10276              		.loc 1 2279 0
 10277 0d42 BB69     		ldr	r3, [r7, #24]
 10278 0d44 0633     		adds	r3, r3, #6
 10279 0d46 40F2FF72 		movw	r2, #2047
 10280 0d4a 1340     		ands	r3, r3, r2
 10281 0d4c 4E4A     		ldr	r2, .L412+4
 10282 0d4e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 10283 0d50 4F4B     		ldr	r3, .L412+12
 10284 0d52 DA70     		strb	r2, [r3, #3]
2280:main.c        ****         
2281:main.c        ****         i = (i+7);
 10285              		.loc 1 2281 0
 10286 0d54 BB69     		ldr	r3, [r7, #24]
 10287 0d56 0733     		adds	r3, r3, #7
 10288 0d58 BB61     		str	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 224


2282:main.c        ****         
2283:main.c        ****         //get the parameter value
2284:main.c        ****         theVal.u32 = 0;
 10289              		.loc 1 2284 0
 10290 0d5a 0023     		movs	r3, #0
 10291 0d5c 7B60     		str	r3, [r7, #4]
2285:main.c        ****         theVal.u32 |= ((sysexBuffer[i & sysexPointerMask] &15) << 28);
 10292              		.loc 1 2285 0
 10293 0d5e 7B68     		ldr	r3, [r7, #4]
 10294 0d60 40F2FF71 		movw	r1, #2047
 10295 0d64 BA69     		ldr	r2, [r7, #24]
 10296 0d66 0A40     		ands	r2, r2, r1
 10297 0d68 4749     		ldr	r1, .L412+4
 10298 0d6a 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10299 0d6c 1207     		lsls	r2, r2, #28
 10300 0d6e 1343     		orrs	r3, r3, r2
 10301 0d70 7B60     		str	r3, [r7, #4]
2286:main.c        ****         theVal.u32 |= (sysexBuffer[(i+1) & sysexPointerMask] << 21);
 10302              		.loc 1 2286 0
 10303 0d72 7B68     		ldr	r3, [r7, #4]
 10304 0d74 BA69     		ldr	r2, [r7, #24]
 10305 0d76 0132     		adds	r2, r2, #1
 10306 0d78 40F2FF71 		movw	r1, #2047
 10307 0d7c 0A40     		ands	r2, r2, r1
 10308 0d7e 4249     		ldr	r1, .L412+4
 10309 0d80 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10310 0d82 5205     		lsls	r2, r2, #21
 10311 0d84 1343     		orrs	r3, r3, r2
 10312 0d86 7B60     		str	r3, [r7, #4]
2287:main.c        ****         theVal.u32 |= (sysexBuffer[(i+2) & sysexPointerMask] << 14);
 10313              		.loc 1 2287 0
 10314 0d88 7B68     		ldr	r3, [r7, #4]
 10315 0d8a BA69     		ldr	r2, [r7, #24]
 10316 0d8c 0232     		adds	r2, r2, #2
 10317 0d8e 40F2FF71 		movw	r1, #2047
 10318 0d92 0A40     		ands	r2, r2, r1
 10319 0d94 3C49     		ldr	r1, .L412+4
 10320 0d96 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10321 0d98 9203     		lsls	r2, r2, #14
 10322 0d9a 1343     		orrs	r3, r3, r2
 10323 0d9c 7B60     		str	r3, [r7, #4]
2288:main.c        ****         theVal.u32 |= (sysexBuffer[(i+3) & sysexPointerMask] << 7);
 10324              		.loc 1 2288 0
 10325 0d9e 7B68     		ldr	r3, [r7, #4]
 10326 0da0 BA69     		ldr	r2, [r7, #24]
 10327 0da2 0332     		adds	r2, r2, #3
 10328 0da4 40F2FF71 		movw	r1, #2047
 10329 0da8 0A40     		ands	r2, r2, r1
 10330 0daa 3749     		ldr	r1, .L412+4
 10331 0dac 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 10332 0dae D201     		lsls	r2, r2, #7
 10333 0db0 1343     		orrs	r3, r3, r2
 10334 0db2 7B60     		str	r3, [r7, #4]
2289:main.c        ****         theVal.u32 |= (sysexBuffer[(i+4) & sysexPointerMask] & 127);
 10335              		.loc 1 2289 0
 10336 0db4 7A68     		ldr	r2, [r7, #4]
 10337 0db6 BB69     		ldr	r3, [r7, #24]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 225


 10338 0db8 0433     		adds	r3, r3, #4
 10339 0dba 40F2FF71 		movw	r1, #2047
 10340 0dbe 0B40     		ands	r3, r3, r1
 10341 0dc0 3149     		ldr	r1, .L412+4
 10342 0dc2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 10343 0dc4 03F07F03 		and	r3, r3, #127
 10344 0dc8 1343     		orrs	r3, r3, r2
 10345 0dca 7B60     		str	r3, [r7, #4]
2290:main.c        ****         if (mappingArray[3] == 0) // source id
 10346              		.loc 1 2290 0
 10347 0dcc 304B     		ldr	r3, .L412+12
 10348 0dce DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10349 0dd0 002B     		cmp	r3, #0
 10350 0dd2 10D1     		bne	.L390
2291:main.c        ****         {
2292:main.c        ****             mappingArray[4] = 0;
 10351              		.loc 1 2292 0
 10352 0dd4 2E4B     		ldr	r3, .L412+12
 10353 0dd6 0022     		movs	r2, #0
 10354 0dd8 1A71     		strb	r2, [r3, #4]
2293:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 10355              		.loc 1 2293 0
 10356 0dda 7B68     		ldr	r3, [r7, #4]	@ float
 10357 0ddc 1846     		mov	r0, r3
 10358 0dde FFF7FEFF 		bl	roundf
 10359 0de2 0346     		mov	r3, r0
 10360 0de4 1846     		mov	r0, r3
 10361 0de6 FFF7FEFF 		bl	__aeabi_f2iz
 10362 0dea 0346     		mov	r3, r0
 10363 0dec 1BB2     		sxth	r3, r3
 10364 0dee DAB2     		uxtb	r2, r3
 10365 0df0 274B     		ldr	r3, .L412+12
 10366 0df2 5A71     		strb	r2, [r3, #5]
 10367 0df4 2AE0     		b	.L391
 10368              	.L390:
2294:main.c        ****         }
2295:main.c        ****         else if (mappingArray[3] == 1) // amount
 10369              		.loc 1 2295 0
 10370 0df6 264B     		ldr	r3, .L412+12
 10371 0df8 DB78     		ldrb	r3, [r3, #3]	@ zero_extendqisi2
 10372 0dfa 012B     		cmp	r3, #1
 10373 0dfc 16D1     		bne	.L392
 10374              	.LBB73:
2296:main.c        ****         {
2297:main.c        ****             int16_t intVal = (int16_t)(theVal.f * 32767.0f);
 10375              		.loc 1 2297 0
 10376 0dfe 7B68     		ldr	r3, [r7, #4]	@ float
 10377 0e00 2449     		ldr	r1, .L412+16
 10378 0e02 1846     		mov	r0, r3
 10379 0e04 FFF7FEFF 		bl	__aeabi_fmul
 10380 0e08 0346     		mov	r3, r0
 10381 0e0a 1846     		mov	r0, r3
 10382 0e0c FFF7FEFF 		bl	__aeabi_f2iz
 10383 0e10 0346     		mov	r3, r0
 10384 0e12 BB82     		strh	r3, [r7, #20]	@ movhi
2298:main.c        ****             mappingArray[4] = intVal >> 8;
 10385              		.loc 1 2298 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 226


 10386 0e14 B7F91430 		ldrsh	r3, [r7, #20]
 10387 0e18 1B12     		asrs	r3, r3, #8
 10388 0e1a 1BB2     		sxth	r3, r3
 10389 0e1c DAB2     		uxtb	r2, r3
 10390 0e1e 1C4B     		ldr	r3, .L412+12
 10391 0e20 1A71     		strb	r2, [r3, #4]
2299:main.c        ****             mappingArray[5] = intVal & 0xff;
 10392              		.loc 1 2299 0
 10393 0e22 BB8A     		ldrh	r3, [r7, #20]	@ movhi
 10394 0e24 DAB2     		uxtb	r2, r3
 10395 0e26 1A4B     		ldr	r3, .L412+12
 10396 0e28 5A71     		strb	r2, [r3, #5]
 10397              	.LBE73:
 10398 0e2a 0FE0     		b	.L391
 10399              	.L392:
2300:main.c        ****         }
2301:main.c        ****         else // scalar source
2302:main.c        ****         {
2303:main.c        ****             mappingArray[4] = 0;
 10400              		.loc 1 2303 0
 10401 0e2c 184B     		ldr	r3, .L412+12
 10402 0e2e 0022     		movs	r2, #0
 10403 0e30 1A71     		strb	r2, [r3, #4]
2304:main.c        ****             mappingArray[5] = (int16_t)(roundf(theVal.f));
 10404              		.loc 1 2304 0
 10405 0e32 7B68     		ldr	r3, [r7, #4]	@ float
 10406 0e34 1846     		mov	r0, r3
 10407 0e36 FFF7FEFF 		bl	roundf
 10408 0e3a 0346     		mov	r3, r0
 10409 0e3c 1846     		mov	r0, r3
 10410 0e3e FFF7FEFF 		bl	__aeabi_f2iz
 10411 0e42 0346     		mov	r3, r0
 10412 0e44 1BB2     		sxth	r3, r3
 10413 0e46 DAB2     		uxtb	r2, r3
 10414 0e48 114B     		ldr	r3, .L412+12
 10415 0e4a 5A71     		strb	r2, [r3, #5]
 10416              	.L391:
2305:main.c        ****         }
2306:main.c        ****         
2307:main.c        ****         
2308:main.c        ****         sysexMessageInProgress = 0;
 10417              		.loc 1 2308 0
 10418 0e4c 0F4B     		ldr	r3, .L412+8
 10419 0e4e 0022     		movs	r2, #0
 10420 0e50 1A70     		strb	r2, [r3]
2309:main.c        ****         sendMappingChangeUpdate = 1;
 10421              		.loc 1 2309 0
 10422 0e52 114B     		ldr	r3, .L412+20
 10423 0e54 0122     		movs	r2, #1
 10424 0e56 1A70     		strb	r2, [r3]
 10425              	.L373:
 10426              	.LBE72:
2310:main.c        ****     }
2311:main.c        **** 
2312:main.c        ****     parsingSysex = 0;
 10427              		.loc 1 2312 0
 10428 0e58 104B     		ldr	r3, .L412+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 227


 10429 0e5a 0022     		movs	r2, #0
 10430 0e5c 1A70     		strb	r2, [r3]
2313:main.c        ****     if (sysexMessageStartPointsReadPosition == sysexMessageStartPointsWritePosition)
 10431              		.loc 1 2313 0
 10432 0e5e 104B     		ldr	r3, .L412+28
 10433 0e60 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10434 0e62 104B     		ldr	r3, .L412+32
 10435 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10436 0e66 9A42     		cmp	r2, r3
 10437 0e68 03D1     		bne	.L393
2314:main.c        ****     {
2315:main.c        ****         parseThatMF = 0;
 10438              		.loc 1 2315 0
 10439 0e6a 0F4B     		ldr	r3, .L412+36
 10440 0e6c 0022     		movs	r2, #0
 10441 0e6e 1A70     		strb	r2, [r3]
2316:main.c        ****     }
2317:main.c        ****     else
2318:main.c        ****     {
2319:main.c        ****         moreToDo++;
2320:main.c        ****     }
2321:main.c        **** }
 10442              		.loc 1 2321 0
 10443 0e70 04E0     		b	.L401
 10444              	.L393:
2319:main.c        ****     }
 10445              		.loc 1 2319 0
 10446 0e72 0E4B     		ldr	r3, .L412+40
 10447 0e74 1B68     		ldr	r3, [r3]
 10448 0e76 0133     		adds	r3, r3, #1
 10449 0e78 0C4A     		ldr	r2, .L412+40
 10450 0e7a 1360     		str	r3, [r2]
 10451              	.L401:
 10452              		.loc 1 2321 0
 10453 0e7c 00BF     		nop
 10454 0e7e 6C37     		adds	r7, r7, #108
 10455              		.cfi_def_cfa_offset 12
 10456 0e80 BD46     		mov	sp, r7
 10457              		.cfi_def_cfa_register 13
 10458              		@ sp needed
 10459 0e82 90BD     		pop	{r4, r7, pc}
 10460              	.L413:
 10461              		.align	2
 10462              	.L412:
 10463 0e84 00000000 		.word	sysexReadPointer
 10464 0e88 00000000 		.word	sysexBuffer
 10465 0e8c 00000000 		.word	sysexMessageInProgress
 10466 0e90 00000000 		.word	mappingArray
 10467 0e94 00FEFF46 		.word	1191181824
 10468 0e98 00000000 		.word	sendMappingChangeUpdate
 10469 0e9c 00000000 		.word	parsingSysex
 10470 0ea0 00000000 		.word	sysexMessageStartPointsReadPosition
 10471 0ea4 00000000 		.word	sysexMessageStartPointsWritePosition
 10472 0ea8 00000000 		.word	parseThatMF
 10473 0eac 00000000 		.word	moreToDo
 10474              		.cfi_endproc
 10475              	.LFE91:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 228


 10476              		.size	parseSysex, .-parseSysex
 10477              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 10478              		.align	2
 10479              		.global	USB_callbackLocalMidiEvent
 10480              		.thumb
 10481              		.thumb_func
 10482              		.type	USB_callbackLocalMidiEvent, %function
 10483              	USB_callbackLocalMidiEvent:
 10484              	.LFB92:
2322:main.c        **** 
2323:main.c        **** 
2324:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
2325:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
2326:main.c        **** {   
 10485              		.loc 1 2326 0
 10486              		.cfi_startproc
 10487              		@ args = 0, pretend = 0, frame = 16
 10488              		@ frame_needed = 1, uses_anonymous_args = 0
 10489 0000 80B5     		push	{r7, lr}
 10490              		.cfi_def_cfa_offset 8
 10491              		.cfi_offset 7, -8
 10492              		.cfi_offset 14, -4
 10493 0002 84B0     		sub	sp, sp, #16
 10494              		.cfi_def_cfa_offset 24
 10495 0004 00AF     		add	r7, sp, #0
 10496              		.cfi_def_cfa_register 7
 10497 0006 0346     		mov	r3, r0
 10498 0008 3960     		str	r1, [r7]
 10499 000a FB71     		strb	r3, [r7, #7]
2327:main.c        ****     tempMIDI[0] = midiMsg[0];
 10500              		.loc 1 2327 0
 10501 000c 3B68     		ldr	r3, [r7]
 10502 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 10503 0010 694B     		ldr	r3, .L426
 10504 0012 1A70     		strb	r2, [r3]
2328:main.c        ****     tempMIDI[1] = midiMsg[1];
 10505              		.loc 1 2328 0
 10506 0014 3B68     		ldr	r3, [r7]
 10507 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 10508 0018 674B     		ldr	r3, .L426
 10509 001a 5A70     		strb	r2, [r3, #1]
2329:main.c        ****     tempMIDI[2] = midiMsg[2];
 10510              		.loc 1 2329 0
 10511 001c 3B68     		ldr	r3, [r7]
 10512 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 10513 0020 654B     		ldr	r3, .L426
 10514 0022 9A70     		strb	r2, [r3, #2]
2330:main.c        ****     tempMIDI[3] = midiMsg[3];
 10515              		.loc 1 2330 0
 10516 0024 3B68     		ldr	r3, [r7]
 10517 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 10518 0028 634B     		ldr	r3, .L426
 10519 002a DA70     		strb	r2, [r3, #3]
2331:main.c        ****     //check that we got here
2332:main.c        ****     
2333:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 10520              		.loc 1 2333 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 229


 10521 002c 634B     		ldr	r3, .L426+4
 10522 002e 1B78     		ldrb	r3, [r3]
 10523 0030 DBB2     		uxtb	r3, r3
 10524 0032 002B     		cmp	r3, #0
 10525 0034 00F0BD80 		beq	.L414
 10526              		.loc 1 2333 0 is_stmt 0 discriminator 1
 10527 0038 FFF7FEFF 		bl	USB_VBusPresent
 10528 003c 0346     		mov	r3, r0
 10529 003e 002B     		cmp	r3, #0
 10530 0040 00F0B780 		beq	.L414
2334:main.c        ****     {
2335:main.c        ****         if (receivingSysex)
 10531              		.loc 1 2335 0 is_stmt 1
 10532 0044 5E4B     		ldr	r3, .L426+8
 10533 0046 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10534 0048 002B     		cmp	r3, #0
 10535 004a 36D0     		beq	.L416
 10536              	.LBB74:
2336:main.c        ****         {
2337:main.c        ****             for (int i = 0; i < 3; i++)
 10537              		.loc 1 2337 0
 10538 004c 0023     		movs	r3, #0
 10539 004e FB60     		str	r3, [r7, #12]
 10540 0050 2AE0     		b	.L417
 10541              	.L420:
2338:main.c        ****             {
2339:main.c        ****                 if (midiMsg[i] < 128)
 10542              		.loc 1 2339 0
 10543 0052 FB68     		ldr	r3, [r7, #12]
 10544 0054 3A68     		ldr	r2, [r7]
 10545 0056 1344     		add	r3, r3, r2
 10546 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10547 005a 5BB2     		sxtb	r3, r3
 10548 005c 002B     		cmp	r3, #0
 10549 005e 12DB     		blt	.L418
2340:main.c        ****                 {
2341:main.c        ****                     sysexBuffer[(sysexWritePointer++) & sysexPointerMask] = midiMsg[i];
 10550              		.loc 1 2341 0
 10551 0060 584B     		ldr	r3, .L426+12
 10552 0062 1B68     		ldr	r3, [r3]
 10553 0064 5A1C     		adds	r2, r3, #1
 10554 0066 5749     		ldr	r1, .L426+12
 10555 0068 0A60     		str	r2, [r1]
 10556 006a 40F2FF72 		movw	r2, #2047
 10557 006e 1340     		ands	r3, r3, r2
 10558 0070 FA68     		ldr	r2, [r7, #12]
 10559 0072 3968     		ldr	r1, [r7]
 10560 0074 0A44     		add	r2, r2, r1
 10561 0076 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 10562 0078 534A     		ldr	r2, .L426+16
 10563 007a D154     		strb	r1, [r2, r3]
2342:main.c        ****                     lastBufferStuff = masterTimer;
 10564              		.loc 1 2342 0
 10565 007c 534B     		ldr	r3, .L426+20
 10566 007e 1B68     		ldr	r3, [r3]
 10567 0080 534A     		ldr	r2, .L426+24
 10568 0082 1360     		str	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 230


 10569 0084 0DE0     		b	.L419
 10570              	.L418:
2343:main.c        ****                     
2344:main.c        ****                 }
2345:main.c        ****                 else
2346:main.c        ****                 {
2347:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 10571              		.loc 1 2347 0
 10572 0086 FB68     		ldr	r3, [r7, #12]
 10573 0088 3A68     		ldr	r2, [r7]
 10574 008a 1344     		add	r3, r3, r2
 10575 008c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10576 008e F72B     		cmp	r3, #247
 10577 0090 07D1     		bne	.L419
2348:main.c        ****                     {
2349:main.c        ****                         receivingSysex = 0;
 10578              		.loc 1 2349 0
 10579 0092 4B4B     		ldr	r3, .L426+8
 10580 0094 0022     		movs	r2, #0
 10581 0096 1A70     		strb	r2, [r3]
2350:main.c        ****                         lastEndReceive = masterTimer;
 10582              		.loc 1 2350 0
 10583 0098 4C4B     		ldr	r3, .L426+20
 10584 009a 1B68     		ldr	r3, [r3]
 10585 009c 4D4A     		ldr	r2, .L426+28
 10586 009e 1360     		str	r3, [r2]
2351:main.c        **** 
2352:main.c        ****                         //parseSysex();
2353:main.c        ****                         return;
 10587              		.loc 1 2353 0
 10588 00a0 87E0     		b	.L414
 10589              	.L419:
2337:main.c        ****             {
 10590              		.loc 1 2337 0 discriminator 2
 10591 00a2 FB68     		ldr	r3, [r7, #12]
 10592 00a4 0133     		adds	r3, r3, #1
 10593 00a6 FB60     		str	r3, [r7, #12]
 10594              	.L417:
2337:main.c        ****             {
 10595              		.loc 1 2337 0 is_stmt 0 discriminator 1
 10596 00a8 FB68     		ldr	r3, [r7, #12]
 10597 00aa 022B     		cmp	r3, #2
 10598 00ac D1DD     		ble	.L420
 10599              	.LBE74:
2354:main.c        ****                      }
2355:main.c        ****                 }
2356:main.c        ****             }
2357:main.c        ****             masterTimer++;
 10600              		.loc 1 2357 0 is_stmt 1
 10601 00ae 474B     		ldr	r3, .L426+20
 10602 00b0 1B68     		ldr	r3, [r3]
 10603 00b2 0133     		adds	r3, r3, #1
 10604 00b4 454A     		ldr	r2, .L426+20
 10605 00b6 1360     		str	r3, [r2]
 10606 00b8 7BE0     		b	.L414
 10607              	.L416:
2358:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 231


2359:main.c        ****         else if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 10608              		.loc 1 2359 0
 10609 00ba 3B68     		ldr	r3, [r7]
 10610 00bc 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10611 00be F02B     		cmp	r3, #240
 10612 00c0 77D1     		bne	.L414
2360:main.c        ****         {
2361:main.c        ****             if (!parsingSysex)
 10613              		.loc 1 2361 0
 10614 00c2 454B     		ldr	r3, .L426+32
 10615 00c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10616 00c6 002B     		cmp	r3, #0
 10617 00c8 6ED1     		bne	.L422
2362:main.c        ****             {
2363:main.c        ****                 if (midiMsg[1] == 126) // special message saying that sysex multi-chunk transmissio
 10618              		.loc 1 2363 0
 10619 00ca 3B68     		ldr	r3, [r7]
 10620 00cc 0133     		adds	r3, r3, #1
 10621 00ce 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10622 00d0 7E2B     		cmp	r3, #126
 10623 00d2 1CD1     		bne	.L423
2364:main.c        ****                 {
2365:main.c        ****                     parseThatMF = 1;
 10624              		.loc 1 2365 0
 10625 00d4 414B     		ldr	r3, .L426+36
 10626 00d6 0122     		movs	r2, #1
 10627 00d8 1A70     		strb	r2, [r3]
2366:main.c        ****                     prevLastParseCall = lastParseCall;
 10628              		.loc 1 2366 0
 10629 00da 414B     		ldr	r3, .L426+40
 10630 00dc 1B68     		ldr	r3, [r3]
 10631 00de 414A     		ldr	r2, .L426+44
 10632 00e0 1360     		str	r3, [r2]
2367:main.c        ****                     lastParseCall = masterTimer;
 10633              		.loc 1 2367 0
 10634 00e2 3A4B     		ldr	r3, .L426+20
 10635 00e4 1B68     		ldr	r3, [r3]
 10636 00e6 3E4A     		ldr	r2, .L426+40
 10637 00e8 1360     		str	r3, [r2]
2368:main.c        ****                     sysexReset = 1;
 10638              		.loc 1 2368 0
 10639 00ea 3F4B     		ldr	r3, .L426+48
 10640 00ec 0122     		movs	r2, #1
 10641 00ee 1A70     		strb	r2, [r3]
2369:main.c        ****                     sysexMessageStartPointsWritePosition++;
 10642              		.loc 1 2369 0
 10643 00f0 3E4B     		ldr	r3, .L426+52
 10644 00f2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10645 00f4 0133     		adds	r3, r3, #1
 10646 00f6 DAB2     		uxtb	r2, r3
 10647 00f8 3C4B     		ldr	r3, .L426+52
 10648 00fa 1A70     		strb	r2, [r3]
2370:main.c        ****                     sysexMessageStartPoints[sysexMessageStartPointsWritePosition] = sysexWritePoint
 10649              		.loc 1 2370 0
 10650 00fc 3B4B     		ldr	r3, .L426+52
 10651 00fe 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10652 0100 1946     		mov	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 232


 10653 0102 304B     		ldr	r3, .L426+12
 10654 0104 1B68     		ldr	r3, [r3]
 10655 0106 3A4A     		ldr	r2, .L426+56
 10656 0108 42F82130 		str	r3, [r2, r1, lsl #2]
 10657 010c 4CE0     		b	.L422
 10658              	.L423:
2371:main.c        ****                     
2372:main.c        ****                     //sysexPointer = 0;
2373:main.c        ****                 }
2374:main.c        ****                 else if (midiMsg[1] == 0 || midiMsg[1] == 1 || midiMsg[1] == 2 || midiMsg[1] == 3 |
 10659              		.loc 1 2374 0
 10660 010e 3B68     		ldr	r3, [r7]
 10661 0110 0133     		adds	r3, r3, #1
 10662 0112 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10663 0114 002B     		cmp	r3, #0
 10664 0116 13D0     		beq	.L424
 10665              		.loc 1 2374 0 is_stmt 0 discriminator 1
 10666 0118 3B68     		ldr	r3, [r7]
 10667 011a 0133     		adds	r3, r3, #1
 10668 011c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10669 011e 012B     		cmp	r3, #1
 10670 0120 0ED0     		beq	.L424
 10671              		.loc 1 2374 0 discriminator 2
 10672 0122 3B68     		ldr	r3, [r7]
 10673 0124 0133     		adds	r3, r3, #1
 10674 0126 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10675 0128 022B     		cmp	r3, #2
 10676 012a 09D0     		beq	.L424
 10677              		.loc 1 2374 0 discriminator 3
 10678 012c 3B68     		ldr	r3, [r7]
 10679 012e 0133     		adds	r3, r3, #1
 10680 0130 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10681 0132 032B     		cmp	r3, #3
 10682 0134 04D0     		beq	.L424
 10683              		.loc 1 2374 0 discriminator 4
 10684 0136 3B68     		ldr	r3, [r7]
 10685 0138 0133     		adds	r3, r3, #1
 10686 013a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10687 013c 042B     		cmp	r3, #4
 10688 013e 33D1     		bne	.L422
 10689              	.L424:
2375:main.c        ****                 {
2376:main.c        ****                     receivingSysex = 1;
 10690              		.loc 1 2376 0 is_stmt 1
 10691 0140 1F4B     		ldr	r3, .L426+8
 10692 0142 0122     		movs	r2, #1
 10693 0144 1A70     		strb	r2, [r3]
2377:main.c        **** 
2378:main.c        ****                     // if this is the first chunk, put in the first and second elements (following 
2379:main.c        ****                     if (sysexReset == 1)
 10694              		.loc 1 2379 0
 10695 0146 284B     		ldr	r3, .L426+48
 10696 0148 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10697 014a 012B     		cmp	r3, #1
 10698 014c 1AD1     		bne	.L425
2380:main.c        ****                     {
2381:main.c        ****                         sysexBuffer[sysexWritePointer++ & sysexPointerMask] = midiMsg[1];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 233


 10699              		.loc 1 2381 0
 10700 014e 1D4B     		ldr	r3, .L426+12
 10701 0150 1B68     		ldr	r3, [r3]
 10702 0152 5A1C     		adds	r2, r3, #1
 10703 0154 1B49     		ldr	r1, .L426+12
 10704 0156 0A60     		str	r2, [r1]
 10705 0158 40F2FF72 		movw	r2, #2047
 10706 015c 1340     		ands	r3, r3, r2
 10707 015e 3A68     		ldr	r2, [r7]
 10708 0160 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 10709 0162 194A     		ldr	r2, .L426+16
 10710 0164 D154     		strb	r1, [r2, r3]
2382:main.c        ****                         sysexBuffer[sysexWritePointer++ & sysexPointerMask] = midiMsg[2];
 10711              		.loc 1 2382 0
 10712 0166 174B     		ldr	r3, .L426+12
 10713 0168 1B68     		ldr	r3, [r3]
 10714 016a 5A1C     		adds	r2, r3, #1
 10715 016c 1549     		ldr	r1, .L426+12
 10716 016e 0A60     		str	r2, [r1]
 10717 0170 40F2FF72 		movw	r2, #2047
 10718 0174 1340     		ands	r3, r3, r2
 10719 0176 3A68     		ldr	r2, [r7]
 10720 0178 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 10721 017a 134A     		ldr	r2, .L426+16
 10722 017c D154     		strb	r1, [r2, r3]
2383:main.c        ****                         sysexReset = 0;
 10723              		.loc 1 2383 0
 10724 017e 1A4B     		ldr	r3, .L426+48
 10725 0180 0022     		movs	r2, #0
 10726 0182 1A70     		strb	r2, [r3]
 10727              	.L425:
2384:main.c        ****                     }
2385:main.c        ****                     prevLastBufferBegin[0] = lastBufferBegin[0] ;
 10728              		.loc 1 2385 0
 10729 0184 1B4B     		ldr	r3, .L426+60
 10730 0186 1B68     		ldr	r3, [r3]
 10731 0188 1B4A     		ldr	r2, .L426+64
 10732 018a 1360     		str	r3, [r2]
2386:main.c        ****                     prevLastBufferBegin[1] = lastBufferBegin[1];
 10733              		.loc 1 2386 0
 10734 018c 194B     		ldr	r3, .L426+60
 10735 018e 5B68     		ldr	r3, [r3, #4]
 10736 0190 194A     		ldr	r2, .L426+64
 10737 0192 5360     		str	r3, [r2, #4]
2387:main.c        ****                     lastBufferBegin[0] = masterTimer;
 10738              		.loc 1 2387 0
 10739 0194 0D4B     		ldr	r3, .L426+20
 10740 0196 1B68     		ldr	r3, [r3]
 10741 0198 164A     		ldr	r2, .L426+60
 10742 019a 1360     		str	r3, [r2]
2388:main.c        ****                     lastBufferBegin[1] = midiMsg[1];
 10743              		.loc 1 2388 0
 10744 019c 3B68     		ldr	r3, [r7]
 10745 019e 0133     		adds	r3, r3, #1
 10746 01a0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 10747 01a2 1A46     		mov	r2, r3
 10748 01a4 134B     		ldr	r3, .L426+60
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 234


 10749 01a6 5A60     		str	r2, [r3, #4]
 10750              	.L422:
2389:main.c        ****                 }
2390:main.c        ****             }
2391:main.c        ****             masterTimer++;
 10751              		.loc 1 2391 0
 10752 01a8 084B     		ldr	r3, .L426+20
 10753 01aa 1B68     		ldr	r3, [r3]
 10754 01ac 0133     		adds	r3, r3, #1
 10755 01ae 074A     		ldr	r2, .L426+20
 10756 01b0 1360     		str	r3, [r2]
 10757              	.L414:
2392:main.c        ****         }
2393:main.c        ****         cable = cable; // so it doesn't complain about unused variables
2394:main.c        ****     }
2395:main.c        **** }    
 10758              		.loc 1 2395 0
 10759 01b2 1037     		adds	r7, r7, #16
 10760              		.cfi_def_cfa_offset 8
 10761 01b4 BD46     		mov	sp, r7
 10762              		.cfi_def_cfa_register 13
 10763              		@ sp needed
 10764 01b6 80BD     		pop	{r7, pc}
 10765              	.L427:
 10766              		.align	2
 10767              	.L426:
 10768 01b8 00000000 		.word	tempMIDI
 10769 01bc 00000000 		.word	USB_active
 10770 01c0 00000000 		.word	receivingSysex
 10771 01c4 00000000 		.word	sysexWritePointer
 10772 01c8 00000000 		.word	sysexBuffer
 10773 01cc 00000000 		.word	masterTimer
 10774 01d0 00000000 		.word	lastBufferStuff
 10775 01d4 00000000 		.word	lastEndReceive
 10776 01d8 00000000 		.word	parsingSysex
 10777 01dc 00000000 		.word	parseThatMF
 10778 01e0 00000000 		.word	lastParseCall
 10779 01e4 00000000 		.word	prevLastParseCall
 10780 01e8 00000000 		.word	sysexReset
 10781 01ec 00000000 		.word	sysexMessageStartPointsWritePosition
 10782 01f0 00000000 		.word	sysexMessageStartPoints
 10783 01f4 00000000 		.word	lastBufferBegin
 10784 01f8 00000000 		.word	prevLastBufferBegin
 10785              		.cfi_endproc
 10786              	.LFE92:
 10787              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 10788              		.text
 10789              	.Letext0:
 10790              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10791              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10792              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 10793              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 10794              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 10795              		.file 7 "oled.h"
 10796              		.file 8 "main.h"
 10797              		.file 9 "Generated_Source\\PSoC5/USB_midi.h"
 10798              		.file 10 "Generated_Source\\PSoC5/Em_EEPROM.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 235


 10799              		.file 11 "Generated_Source\\PSoC5/I2C_1.h"
 10800              		.file 12 "Generated_Source\\PSoC5/core_cm3.h"
 10801              		.file 13 "Generated_Source\\PSoC5/Decoder_1.h"
 10802              		.file 14 "ui.h"
 10803              		.section	.debug_info,"",%progbits
 10804              	.Ldebug_info0:
 10805 0000 CA220000 		.4byte	0x22ca
 10806 0004 0400     		.2byte	0x4
 10807 0006 00000000 		.4byte	.Ldebug_abbrev0
 10808 000a 04       		.byte	0x4
 10809 000b 01       		.uleb128 0x1
 10810 000c 540B0000 		.4byte	.LASF368
 10811 0010 0C       		.byte	0xc
 10812 0011 EA0C0000 		.4byte	.LASF369
 10813 0015 EA080000 		.4byte	.LASF370
 10814 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 10815 001d 00000000 		.4byte	0
 10816 0021 00000000 		.4byte	.Ldebug_line0
 10817 0025 02       		.uleb128 0x2
 10818 0026 880F0000 		.4byte	.LASF0
 10819 002a 02       		.byte	0x2
 10820 002b 1B       		.byte	0x1b
 10821 002c 30000000 		.4byte	0x30
 10822 0030 03       		.uleb128 0x3
 10823 0031 01       		.byte	0x1
 10824 0032 06       		.byte	0x6
 10825 0033 62040000 		.4byte	.LASF2
 10826 0037 02       		.uleb128 0x2
 10827 0038 A3020000 		.4byte	.LASF1
 10828 003c 02       		.byte	0x2
 10829 003d 1D       		.byte	0x1d
 10830 003e 42000000 		.4byte	0x42
 10831 0042 03       		.uleb128 0x3
 10832 0043 01       		.byte	0x1
 10833 0044 08       		.byte	0x8
 10834 0045 FD040000 		.4byte	.LASF3
 10835 0049 02       		.uleb128 0x2
 10836 004a E5100000 		.4byte	.LASF4
 10837 004e 02       		.byte	0x2
 10838 004f 29       		.byte	0x29
 10839 0050 54000000 		.4byte	0x54
 10840 0054 03       		.uleb128 0x3
 10841 0055 02       		.byte	0x2
 10842 0056 05       		.byte	0x5
 10843 0057 39120000 		.4byte	.LASF5
 10844 005b 02       		.uleb128 0x2
 10845 005c 47060000 		.4byte	.LASF6
 10846 0060 02       		.byte	0x2
 10847 0061 2B       		.byte	0x2b
 10848 0062 66000000 		.4byte	0x66
 10849 0066 03       		.uleb128 0x3
 10850 0067 02       		.byte	0x2
 10851 0068 07       		.byte	0x7
 10852 0069 4F140000 		.4byte	.LASF7
 10853 006d 02       		.uleb128 0x2
 10854 006e A8140000 		.4byte	.LASF8
 10855 0072 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 236


 10856 0073 3F       		.byte	0x3f
 10857 0074 78000000 		.4byte	0x78
 10858 0078 03       		.uleb128 0x3
 10859 0079 04       		.byte	0x4
 10860 007a 05       		.byte	0x5
 10861 007b 2A030000 		.4byte	.LASF9
 10862 007f 02       		.uleb128 0x2
 10863 0080 6B0C0000 		.4byte	.LASF10
 10864 0084 02       		.byte	0x2
 10865 0085 41       		.byte	0x41
 10866 0086 8A000000 		.4byte	0x8a
 10867 008a 03       		.uleb128 0x3
 10868 008b 04       		.byte	0x4
 10869 008c 07       		.byte	0x7
 10870 008d 8A090000 		.4byte	.LASF11
 10871 0091 03       		.uleb128 0x3
 10872 0092 08       		.byte	0x8
 10873 0093 05       		.byte	0x5
 10874 0094 880C0000 		.4byte	.LASF12
 10875 0098 03       		.uleb128 0x3
 10876 0099 08       		.byte	0x8
 10877 009a 07       		.byte	0x7
 10878 009b C70F0000 		.4byte	.LASF13
 10879 009f 04       		.uleb128 0x4
 10880 00a0 04       		.byte	0x4
 10881 00a1 05       		.byte	0x5
 10882 00a2 696E7400 		.ascii	"int\000"
 10883 00a6 03       		.uleb128 0x3
 10884 00a7 04       		.byte	0x4
 10885 00a8 07       		.byte	0x7
 10886 00a9 BF0D0000 		.4byte	.LASF14
 10887 00ad 02       		.uleb128 0x2
 10888 00ae 20000000 		.4byte	.LASF15
 10889 00b2 03       		.byte	0x3
 10890 00b3 14       		.byte	0x14
 10891 00b4 25000000 		.4byte	0x25
 10892 00b8 02       		.uleb128 0x2
 10893 00b9 6E040000 		.4byte	.LASF16
 10894 00bd 03       		.byte	0x3
 10895 00be 18       		.byte	0x18
 10896 00bf 37000000 		.4byte	0x37
 10897 00c3 02       		.uleb128 0x2
 10898 00c4 9B120000 		.4byte	.LASF17
 10899 00c8 03       		.byte	0x3
 10900 00c9 20       		.byte	0x20
 10901 00ca 49000000 		.4byte	0x49
 10902 00ce 02       		.uleb128 0x2
 10903 00cf DE0F0000 		.4byte	.LASF18
 10904 00d3 03       		.byte	0x3
 10905 00d4 24       		.byte	0x24
 10906 00d5 5B000000 		.4byte	0x5b
 10907 00d9 02       		.uleb128 0x2
 10908 00da C9000000 		.4byte	.LASF19
 10909 00de 03       		.byte	0x3
 10910 00df 2C       		.byte	0x2c
 10911 00e0 6D000000 		.4byte	0x6d
 10912 00e4 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 237


 10913 00e5 15140000 		.4byte	.LASF20
 10914 00e9 03       		.byte	0x3
 10915 00ea 30       		.byte	0x30
 10916 00eb 7F000000 		.4byte	0x7f
 10917 00ef 05       		.uleb128 0x5
 10918 00f0 FF110000 		.4byte	.LASF21
 10919 00f4 04       		.byte	0x4
 10920 00f5 E901     		.2byte	0x1e9
 10921 00f7 42000000 		.4byte	0x42
 10922 00fb 05       		.uleb128 0x5
 10923 00fc 27150000 		.4byte	.LASF22
 10924 0100 04       		.byte	0x4
 10925 0101 EA01     		.2byte	0x1ea
 10926 0103 66000000 		.4byte	0x66
 10927 0107 05       		.uleb128 0x5
 10928 0108 1F010000 		.4byte	.LASF23
 10929 010c 04       		.byte	0x4
 10930 010d EB01     		.2byte	0x1eb
 10931 010f 8A000000 		.4byte	0x8a
 10932 0113 03       		.uleb128 0x3
 10933 0114 04       		.byte	0x4
 10934 0115 04       		.byte	0x4
 10935 0116 6A0D0000 		.4byte	.LASF24
 10936 011a 03       		.uleb128 0x3
 10937 011b 08       		.byte	0x8
 10938 011c 04       		.byte	0x4
 10939 011d E30C0000 		.4byte	.LASF25
 10940 0121 03       		.uleb128 0x3
 10941 0122 01       		.byte	0x1
 10942 0123 08       		.byte	0x8
 10943 0124 DF050000 		.4byte	.LASF26
 10944 0128 05       		.uleb128 0x5
 10945 0129 520E0000 		.4byte	.LASF27
 10946 012d 04       		.byte	0x4
 10947 012e 8B02     		.2byte	0x28b
 10948 0130 8A000000 		.4byte	0x8a
 10949 0134 05       		.uleb128 0x5
 10950 0135 77100000 		.4byte	.LASF28
 10951 0139 04       		.byte	0x4
 10952 013a 9302     		.2byte	0x293
 10953 013c 40010000 		.4byte	0x140
 10954 0140 06       		.uleb128 0x6
 10955 0141 EF000000 		.4byte	0xef
 10956 0145 03       		.uleb128 0x3
 10957 0146 08       		.byte	0x8
 10958 0147 04       		.byte	0x4
 10959 0148 150F0000 		.4byte	.LASF29
 10960 014c 03       		.uleb128 0x3
 10961 014d 04       		.byte	0x4
 10962 014e 07       		.byte	0x7
 10963 014f 3E000000 		.4byte	.LASF30
 10964 0153 07       		.uleb128 0x7
 10965 0154 1C       		.byte	0x1c
 10966 0155 05       		.byte	0x5
 10967 0156 1601     		.2byte	0x116
 10968 0158 C5010000 		.4byte	0x1c5
 10969 015c 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 238


 10970 015d 76040000 		.4byte	.LASF31
 10971 0161 05       		.byte	0x5
 10972 0162 1B01     		.2byte	0x11b
 10973 0164 07010000 		.4byte	0x107
 10974 0168 00       		.byte	0
 10975 0169 08       		.uleb128 0x8
 10976 016a 69020000 		.4byte	.LASF32
 10977 016e 05       		.byte	0x5
 10978 016f 2001     		.2byte	0x120
 10979 0171 07010000 		.4byte	0x107
 10980 0175 04       		.byte	0x4
 10981 0176 08       		.uleb128 0x8
 10982 0177 F8140000 		.4byte	.LASF33
 10983 017b 05       		.byte	0x5
 10984 017c 2301     		.2byte	0x123
 10985 017e 07010000 		.4byte	0x107
 10986 0182 08       		.byte	0x8
 10987 0183 08       		.uleb128 0x8
 10988 0184 CF120000 		.4byte	.LASF34
 10989 0188 05       		.byte	0x5
 10990 0189 2601     		.2byte	0x126
 10991 018b 07010000 		.4byte	0x107
 10992 018f 0C       		.byte	0xc
 10993 0190 08       		.uleb128 0x8
 10994 0191 EE120000 		.4byte	.LASF35
 10995 0195 05       		.byte	0x5
 10996 0196 2B01     		.2byte	0x12b
 10997 0198 07010000 		.4byte	0x107
 10998 019c 10       		.byte	0x10
 10999 019d 08       		.uleb128 0x8
 11000 019e 95020000 		.4byte	.LASF36
 11001 01a2 05       		.byte	0x5
 11002 01a3 2E01     		.2byte	0x12e
 11003 01a5 EF000000 		.4byte	0xef
 11004 01a9 14       		.byte	0x14
 11005 01aa 08       		.uleb128 0x8
 11006 01ab CA0C0000 		.4byte	.LASF37
 11007 01af 05       		.byte	0x5
 11008 01b0 3301     		.2byte	0x133
 11009 01b2 EF000000 		.4byte	0xef
 11010 01b6 15       		.byte	0x15
 11011 01b7 08       		.uleb128 0x8
 11012 01b8 56020000 		.4byte	.LASF38
 11013 01bc 05       		.byte	0x5
 11014 01bd 3601     		.2byte	0x136
 11015 01bf 07010000 		.4byte	0x107
 11016 01c3 18       		.byte	0x18
 11017 01c4 00       		.byte	0
 11018 01c5 05       		.uleb128 0x5
 11019 01c6 72090000 		.4byte	.LASF39
 11020 01ca 05       		.byte	0x5
 11021 01cb 3701     		.2byte	0x137
 11022 01cd 53010000 		.4byte	0x153
 11023 01d1 09       		.uleb128 0x9
 11024 01d2 01       		.byte	0x1
 11025 01d3 42000000 		.4byte	0x42
 11026 01d7 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 239


 11027 01d8 5401     		.2byte	0x154
 11028 01da FD010000 		.4byte	0x1fd
 11029 01de 0A       		.uleb128 0xa
 11030 01df B4000000 		.4byte	.LASF40
 11031 01e3 00       		.byte	0
 11032 01e4 0A       		.uleb128 0xa
 11033 01e5 94070000 		.4byte	.LASF41
 11034 01e9 01       		.byte	0x1
 11035 01ea 0A       		.uleb128 0xa
 11036 01eb 3C020000 		.4byte	.LASF42
 11037 01ef 02       		.byte	0x2
 11038 01f0 0A       		.uleb128 0xa
 11039 01f1 B9040000 		.4byte	.LASF43
 11040 01f5 03       		.byte	0x3
 11041 01f6 0A       		.uleb128 0xa
 11042 01f7 D50A0000 		.4byte	.LASF44
 11043 01fb 04       		.byte	0x4
 11044 01fc 00       		.byte	0
 11045 01fd 05       		.uleb128 0x5
 11046 01fe A9010000 		.4byte	.LASF45
 11047 0202 05       		.byte	0x5
 11048 0203 5A01     		.2byte	0x15a
 11049 0205 D1010000 		.4byte	0x1d1
 11050 0209 06       		.uleb128 0x6
 11051 020a E4000000 		.4byte	0xe4
 11052 020e 06       		.uleb128 0x6
 11053 020f B8000000 		.4byte	0xb8
 11054 0213 06       		.uleb128 0x6
 11055 0214 CE000000 		.4byte	0xce
 11056 0218 0B       		.uleb128 0xb
 11057 0219 E4000000 		.4byte	0xe4
 11058 021d 28020000 		.4byte	0x228
 11059 0221 0C       		.uleb128 0xc
 11060 0222 4C010000 		.4byte	0x14c
 11061 0226 01       		.byte	0x1
 11062 0227 00       		.byte	0
 11063 0228 02       		.uleb128 0x2
 11064 0229 C9060000 		.4byte	.LASF46
 11065 022d 06       		.byte	0x6
 11066 022e 6C       		.byte	0x6c
 11067 022f A6000000 		.4byte	0xa6
 11068 0233 0D       		.uleb128 0xd
 11069 0234 CF040000 		.4byte	.LASF52
 11070 0238 01       		.byte	0x1
 11071 0239 42000000 		.4byte	0x42
 11072 023d 07       		.byte	0x7
 11073 023e 1D       		.byte	0x1d
 11074 023f 62020000 		.4byte	0x262
 11075 0243 0A       		.uleb128 0xa
 11076 0244 1E0C0000 		.4byte	.LASF47
 11077 0248 00       		.byte	0
 11078 0249 0A       		.uleb128 0xa
 11079 024a F9030000 		.4byte	.LASF48
 11080 024e 01       		.byte	0x1
 11081 024f 0A       		.uleb128 0xa
 11082 0250 E3000000 		.4byte	.LASF49
 11083 0254 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 240


 11084 0255 0A       		.uleb128 0xa
 11085 0256 18080000 		.4byte	.LASF50
 11086 025a 03       		.byte	0x3
 11087 025b 0A       		.uleb128 0xa
 11088 025c A1010000 		.4byte	.LASF51
 11089 0260 04       		.byte	0x4
 11090 0261 00       		.byte	0
 11091 0262 0D       		.uleb128 0xd
 11092 0263 E5070000 		.4byte	.LASF53
 11093 0267 01       		.byte	0x1
 11094 0268 42000000 		.4byte	0x42
 11095 026c 08       		.byte	0x8
 11096 026d A4       		.byte	0xa4
 11097 026e 97020000 		.4byte	0x297
 11098 0272 0A       		.uleb128 0xa
 11099 0273 DA070000 		.4byte	.LASF54
 11100 0277 00       		.byte	0
 11101 0278 0A       		.uleb128 0xa
 11102 0279 C8050000 		.4byte	.LASF55
 11103 027d 01       		.byte	0x1
 11104 027e 0A       		.uleb128 0xa
 11105 027f EF100000 		.4byte	.LASF56
 11106 0283 02       		.byte	0x2
 11107 0284 0A       		.uleb128 0xa
 11108 0285 92100000 		.4byte	.LASF57
 11109 0289 03       		.byte	0x3
 11110 028a 0A       		.uleb128 0xa
 11111 028b 85140000 		.4byte	.LASF58
 11112 028f 04       		.byte	0x4
 11113 0290 0A       		.uleb128 0xa
 11114 0291 C1020000 		.4byte	.LASF59
 11115 0295 05       		.byte	0x5
 11116 0296 00       		.byte	0
 11117 0297 0E       		.uleb128 0xe
 11118 0298 1A100000 		.4byte	.LASF371
 11119 029c 04       		.byte	0x4
 11120 029d 01       		.byte	0x1
 11121 029e 9A       		.byte	0x9a
 11122 029f C1020000 		.4byte	0x2c1
 11123 02a3 0F       		.uleb128 0xf
 11124 02a4 6600     		.ascii	"f\000"
 11125 02a6 01       		.byte	0x1
 11126 02a7 9B       		.byte	0x9b
 11127 02a8 13010000 		.4byte	0x113
 11128 02ac 0F       		.uleb128 0xf
 11129 02ad 6200     		.ascii	"b\000"
 11130 02af 01       		.byte	0x1
 11131 02b0 9C       		.byte	0x9c
 11132 02b1 C1020000 		.4byte	0x2c1
 11133 02b5 0F       		.uleb128 0xf
 11134 02b6 75333200 		.ascii	"u32\000"
 11135 02ba 01       		.byte	0x1
 11136 02bb 9D       		.byte	0x9d
 11137 02bc E4000000 		.4byte	0xe4
 11138 02c0 00       		.byte	0
 11139 02c1 0B       		.uleb128 0xb
 11140 02c2 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 241


 11141 02c6 D1020000 		.4byte	0x2d1
 11142 02ca 0C       		.uleb128 0xc
 11143 02cb 4C010000 		.4byte	0x14c
 11144 02cf 03       		.byte	0x3
 11145 02d0 00       		.byte	0
 11146 02d1 10       		.uleb128 0x10
 11147 02d2 6D617000 		.ascii	"map\000"
 11148 02d6 01       		.byte	0x1
 11149 02d7 3901     		.2byte	0x139
 11150 02d9 13010000 		.4byte	0x113
 11151 02dd 00000000 		.4byte	.LFB64
 11152 02e1 56000000 		.4byte	.LFE64-.LFB64
 11153 02e5 01       		.uleb128 0x1
 11154 02e6 9C       		.byte	0x9c
 11155 02e7 37030000 		.4byte	0x337
 11156 02eb 11       		.uleb128 0x11
 11157 02ec 99050000 		.4byte	.LASF60
 11158 02f0 01       		.byte	0x1
 11159 02f1 3901     		.2byte	0x139
 11160 02f3 13010000 		.4byte	0x113
 11161 02f7 02       		.uleb128 0x2
 11162 02f8 91       		.byte	0x91
 11163 02f9 6C       		.sleb128 -20
 11164 02fa 11       		.uleb128 0x11
 11165 02fb 7D020000 		.4byte	.LASF61
 11166 02ff 01       		.byte	0x1
 11167 0300 3901     		.2byte	0x139
 11168 0302 13010000 		.4byte	0x113
 11169 0306 02       		.uleb128 0x2
 11170 0307 91       		.byte	0x91
 11171 0308 68       		.sleb128 -24
 11172 0309 11       		.uleb128 0x11
 11173 030a 1E0B0000 		.4byte	.LASF62
 11174 030e 01       		.byte	0x1
 11175 030f 3901     		.2byte	0x139
 11176 0311 13010000 		.4byte	0x113
 11177 0315 02       		.uleb128 0x2
 11178 0316 91       		.byte	0x91
 11179 0317 64       		.sleb128 -28
 11180 0318 11       		.uleb128 0x11
 11181 0319 ED0A0000 		.4byte	.LASF63
 11182 031d 01       		.byte	0x1
 11183 031e 3901     		.2byte	0x139
 11184 0320 13010000 		.4byte	0x113
 11185 0324 02       		.uleb128 0x2
 11186 0325 91       		.byte	0x91
 11187 0326 60       		.sleb128 -32
 11188 0327 11       		.uleb128 0x11
 11189 0328 5C0D0000 		.4byte	.LASF64
 11190 032c 01       		.byte	0x1
 11191 032d 3901     		.2byte	0x139
 11192 032f 13010000 		.4byte	0x113
 11193 0333 02       		.uleb128 0x2
 11194 0334 91       		.byte	0x91
 11195 0335 00       		.sleb128 0
 11196 0336 00       		.byte	0
 11197 0337 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 242


 11198 0338 2E150000 		.4byte	.LASF65
 11199 033c 01       		.byte	0x1
 11200 033d 3E01     		.2byte	0x13e
 11201 033f 13010000 		.4byte	0x113
 11202 0343 00000000 		.4byte	.LFB65
 11203 0347 64000000 		.4byte	.LFE65-.LFB65
 11204 034b 01       		.uleb128 0x1
 11205 034c 9C       		.byte	0x9c
 11206 034d 7F030000 		.4byte	0x37f
 11207 0351 11       		.uleb128 0x11
 11208 0352 99050000 		.4byte	.LASF60
 11209 0356 01       		.byte	0x1
 11210 0357 3E01     		.2byte	0x13e
 11211 0359 13010000 		.4byte	0x113
 11212 035d 02       		.uleb128 0x2
 11213 035e 91       		.byte	0x91
 11214 035f 6C       		.sleb128 -20
 11215 0360 11       		.uleb128 0x11
 11216 0361 ED0A0000 		.4byte	.LASF63
 11217 0365 01       		.byte	0x1
 11218 0366 3E01     		.2byte	0x13e
 11219 0368 13010000 		.4byte	0x113
 11220 036c 02       		.uleb128 0x2
 11221 036d 91       		.byte	0x91
 11222 036e 68       		.sleb128 -24
 11223 036f 11       		.uleb128 0x11
 11224 0370 5C0D0000 		.4byte	.LASF64
 11225 0374 01       		.byte	0x1
 11226 0375 3E01     		.2byte	0x13e
 11227 0377 13010000 		.4byte	0x113
 11228 037b 02       		.uleb128 0x2
 11229 037c 91       		.byte	0x91
 11230 037d 64       		.sleb128 -28
 11231 037e 00       		.byte	0
 11232 037f 13       		.uleb128 0x13
 11233 0380 CE060000 		.4byte	.LASF372
 11234 0384 01       		.byte	0x1
 11235 0385 4301     		.2byte	0x143
 11236 0387 00000000 		.4byte	.LFB66
 11237 038b E8010000 		.4byte	.LFE66-.LFB66
 11238 038f 01       		.uleb128 0x1
 11239 0390 9C       		.byte	0x9c
 11240 0391 C8030000 		.4byte	0x3c8
 11241 0395 14       		.uleb128 0x14
 11242 0396 06000000 		.4byte	.LBB2
 11243 039a EA000000 		.4byte	.LBE2-.LBB2
 11244 039e B0030000 		.4byte	0x3b0
 11245 03a2 15       		.uleb128 0x15
 11246 03a3 6900     		.ascii	"i\000"
 11247 03a5 01       		.byte	0x1
 11248 03a6 4501     		.2byte	0x145
 11249 03a8 9F000000 		.4byte	0x9f
 11250 03ac 02       		.uleb128 0x2
 11251 03ad 91       		.byte	0x91
 11252 03ae 74       		.sleb128 -12
 11253 03af 00       		.byte	0
 11254 03b0 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 243


 11255 03b1 F0000000 		.4byte	.LBB3
 11256 03b5 EC000000 		.4byte	.LBE3-.LBB3
 11257 03b9 15       		.uleb128 0x15
 11258 03ba 6900     		.ascii	"i\000"
 11259 03bc 01       		.byte	0x1
 11260 03bd 6901     		.2byte	0x169
 11261 03bf 9F000000 		.4byte	0x9f
 11262 03c3 02       		.uleb128 0x2
 11263 03c4 91       		.byte	0x91
 11264 03c5 70       		.sleb128 -16
 11265 03c6 00       		.byte	0
 11266 03c7 00       		.byte	0
 11267 03c8 17       		.uleb128 0x17
 11268 03c9 3A140000 		.4byte	.LASF73
 11269 03cd 01       		.byte	0x1
 11270 03ce 8D01     		.2byte	0x18d
 11271 03d0 00000000 		.4byte	.LFB67
 11272 03d4 18010000 		.4byte	.LFE67-.LFB67
 11273 03d8 01       		.uleb128 0x1
 11274 03d9 9C       		.byte	0x9c
 11275 03da 1E040000 		.4byte	0x41e
 11276 03de 16       		.uleb128 0x16
 11277 03df 06000000 		.4byte	.LBB4
 11278 03e3 EA000000 		.4byte	.LBE4-.LBB4
 11279 03e7 15       		.uleb128 0x15
 11280 03e8 6900     		.ascii	"i\000"
 11281 03ea 01       		.byte	0x1
 11282 03eb 9001     		.2byte	0x190
 11283 03ed 9F000000 		.4byte	0x9f
 11284 03f1 02       		.uleb128 0x2
 11285 03f2 91       		.byte	0x91
 11286 03f3 6C       		.sleb128 -20
 11287 03f4 16       		.uleb128 0x16
 11288 03f5 0C000000 		.4byte	.LBB5
 11289 03f9 D8000000 		.4byte	.LBE5-.LBB5
 11290 03fd 18       		.uleb128 0x18
 11291 03fe 84020000 		.4byte	.LASF66
 11292 0402 01       		.byte	0x1
 11293 0403 9301     		.2byte	0x193
 11294 0405 13010000 		.4byte	0x113
 11295 0409 02       		.uleb128 0x2
 11296 040a 91       		.byte	0x91
 11297 040b 68       		.sleb128 -24
 11298 040c 18       		.uleb128 0x18
 11299 040d 05120000 		.4byte	.LASF67
 11300 0411 01       		.byte	0x1
 11301 0412 9401     		.2byte	0x194
 11302 0414 13010000 		.4byte	0x113
 11303 0418 02       		.uleb128 0x2
 11304 0419 91       		.byte	0x91
 11305 041a 64       		.sleb128 -28
 11306 041b 00       		.byte	0
 11307 041c 00       		.byte	0
 11308 041d 00       		.byte	0
 11309 041e 19       		.uleb128 0x19
 11310 041f 650E0000 		.4byte	.LASF69
 11311 0423 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 244


 11312 0424 9B01     		.2byte	0x19b
 11313 0426 00000000 		.4byte	.LFB68
 11314 042a 84000000 		.4byte	.LFE68-.LFB68
 11315 042e 01       		.uleb128 0x1
 11316 042f 9C       		.byte	0x9c
 11317 0430 12       		.uleb128 0x12
 11318 0431 68080000 		.4byte	.LASF68
 11319 0435 01       		.byte	0x1
 11320 0436 AA01     		.2byte	0x1aa
 11321 0438 13010000 		.4byte	0x113
 11322 043c 00000000 		.4byte	.LFB69
 11323 0440 34000000 		.4byte	.LFE69-.LFB69
 11324 0444 01       		.uleb128 0x1
 11325 0445 9C       		.byte	0x9c
 11326 0446 58040000 		.4byte	0x458
 11327 044a 1A       		.uleb128 0x1a
 11328 044b 6600     		.ascii	"f\000"
 11329 044d 01       		.byte	0x1
 11330 044e AA01     		.2byte	0x1aa
 11331 0450 13010000 		.4byte	0x113
 11332 0454 02       		.uleb128 0x2
 11333 0455 91       		.byte	0x91
 11334 0456 74       		.sleb128 -12
 11335 0457 00       		.byte	0
 11336 0458 19       		.uleb128 0x19
 11337 0459 330C0000 		.4byte	.LASF70
 11338 045d 01       		.byte	0x1
 11339 045e B101     		.2byte	0x1b1
 11340 0460 00000000 		.4byte	.LFB70
 11341 0464 7C000000 		.4byte	.LFE70-.LFB70
 11342 0468 01       		.uleb128 0x1
 11343 0469 9C       		.byte	0x9c
 11344 046a 19       		.uleb128 0x19
 11345 046b 0D0E0000 		.4byte	.LASF71
 11346 046f 01       		.byte	0x1
 11347 0470 CE01     		.2byte	0x1ce
 11348 0472 00000000 		.4byte	.LFB71
 11349 0476 14000000 		.4byte	.LFE71-.LFB71
 11350 047a 01       		.uleb128 0x1
 11351 047b 9C       		.byte	0x9c
 11352 047c 19       		.uleb128 0x19
 11353 047d 3D100000 		.4byte	.LASF72
 11354 0481 01       		.byte	0x1
 11355 0482 DA01     		.2byte	0x1da
 11356 0484 00000000 		.4byte	.LFB72
 11357 0488 9C000000 		.4byte	.LFE72-.LFB72
 11358 048c 01       		.uleb128 0x1
 11359 048d 9C       		.byte	0x9c
 11360 048e 17       		.uleb128 0x17
 11361 048f AF040000 		.4byte	.LASF74
 11362 0493 01       		.byte	0x1
 11363 0494 E801     		.2byte	0x1e8
 11364 0496 00000000 		.4byte	.LFB73
 11365 049a 5C010000 		.4byte	.LFE73-.LFB73
 11366 049e 01       		.uleb128 0x1
 11367 049f 9C       		.byte	0x9c
 11368 04a0 BC040000 		.4byte	0x4bc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 245


 11369 04a4 16       		.uleb128 0x16
 11370 04a5 5A000000 		.4byte	.LBB6
 11371 04a9 74000000 		.4byte	.LBE6-.LBB6
 11372 04ad 15       		.uleb128 0x15
 11373 04ae 6900     		.ascii	"i\000"
 11374 04b0 01       		.byte	0x1
 11375 04b1 EE01     		.2byte	0x1ee
 11376 04b3 9F000000 		.4byte	0x9f
 11377 04b7 02       		.uleb128 0x2
 11378 04b8 91       		.byte	0x91
 11379 04b9 74       		.sleb128 -12
 11380 04ba 00       		.byte	0
 11381 04bb 00       		.byte	0
 11382 04bc 19       		.uleb128 0x19
 11383 04bd 330E0000 		.4byte	.LASF75
 11384 04c1 01       		.byte	0x1
 11385 04c2 FF01     		.2byte	0x1ff
 11386 04c4 00000000 		.4byte	.LFB74
 11387 04c8 80000000 		.4byte	.LFE74-.LFB74
 11388 04cc 01       		.uleb128 0x1
 11389 04cd 9C       		.byte	0x9c
 11390 04ce 12       		.uleb128 0x12
 11391 04cf AC030000 		.4byte	.LASF76
 11392 04d3 01       		.byte	0x1
 11393 04d4 1002     		.2byte	0x210
 11394 04d6 9F000000 		.4byte	0x9f
 11395 04da 00000000 		.4byte	.LFB75
 11396 04de C8250000 		.4byte	.LFE75-.LFB75
 11397 04e2 01       		.uleb128 0x1
 11398 04e3 9C       		.byte	0x9c
 11399 04e4 D10A0000 		.4byte	0xad1
 11400 04e8 18       		.uleb128 0x18
 11401 04e9 2F0B0000 		.4byte	.LASF77
 11402 04ed 01       		.byte	0x1
 11403 04ee 5302     		.2byte	0x253
 11404 04f0 CE000000 		.4byte	0xce
 11405 04f4 03       		.uleb128 0x3
 11406 04f5 91       		.byte	0x91
 11407 04f6 DE7E     		.sleb128 -162
 11408 04f8 14       		.uleb128 0x14
 11409 04f9 50020000 		.4byte	.LBB7
 11410 04fd 3E000000 		.4byte	.LBE7-.LBB7
 11411 0501 13050000 		.4byte	0x513
 11412 0505 15       		.uleb128 0x15
 11413 0506 6900     		.ascii	"i\000"
 11414 0508 01       		.byte	0x1
 11415 0509 5402     		.2byte	0x254
 11416 050b 9F000000 		.4byte	0x9f
 11417 050f 02       		.uleb128 0x2
 11418 0510 91       		.byte	0x91
 11419 0511 6C       		.sleb128 -20
 11420 0512 00       		.byte	0
 11421 0513 14       		.uleb128 0x14
 11422 0514 8E020000 		.4byte	.LBB8
 11423 0518 F6010000 		.4byte	.LBE8-.LBB8
 11424 051c CF050000 		.4byte	0x5cf
 11425 0520 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 246


 11426 0521 2E050000 		.4byte	.LASF78
 11427 0525 01       		.byte	0x1
 11428 0526 5802     		.2byte	0x258
 11429 0528 9F000000 		.4byte	0x9f
 11430 052c 02       		.uleb128 0x2
 11431 052d 91       		.byte	0x91
 11432 052e 68       		.sleb128 -24
 11433 052f 14       		.uleb128 0x14
 11434 0530 96020000 		.4byte	.LBB9
 11435 0534 5C000000 		.4byte	.LBE9-.LBB9
 11436 0538 4C050000 		.4byte	0x54c
 11437 053c 18       		.uleb128 0x18
 11438 053d 3E130000 		.4byte	.LASF79
 11439 0541 01       		.byte	0x1
 11440 0542 5A02     		.2byte	0x25a
 11441 0544 9F000000 		.4byte	0x9f
 11442 0548 02       		.uleb128 0x2
 11443 0549 91       		.byte	0x91
 11444 054a 64       		.sleb128 -28
 11445 054b 00       		.byte	0
 11446 054c 16       		.uleb128 0x16
 11447 054d F2020000 		.4byte	.LBB10
 11448 0551 7E010000 		.4byte	.LBE10-.LBB10
 11449 0555 15       		.uleb128 0x15
 11450 0556 6900     		.ascii	"i\000"
 11451 0558 01       		.byte	0x1
 11452 0559 5E02     		.2byte	0x25e
 11453 055b 9F000000 		.4byte	0x9f
 11454 055f 02       		.uleb128 0x2
 11455 0560 91       		.byte	0x91
 11456 0561 60       		.sleb128 -32
 11457 0562 16       		.uleb128 0x16
 11458 0563 FA020000 		.4byte	.LBB11
 11459 0567 62010000 		.4byte	.LBE11-.LBB11
 11460 056b 18       		.uleb128 0x18
 11461 056c 3F050000 		.4byte	.LASF80
 11462 0570 01       		.byte	0x1
 11463 0571 6002     		.2byte	0x260
 11464 0573 9F000000 		.4byte	0x9f
 11465 0577 03       		.uleb128 0x3
 11466 0578 91       		.byte	0x91
 11467 0579 D87E     		.sleb128 -168
 11468 057b 16       		.uleb128 0x16
 11469 057c 08030000 		.4byte	.LBB12
 11470 0580 54010000 		.4byte	.LBE12-.LBB12
 11471 0584 15       		.uleb128 0x15
 11472 0585 6A00     		.ascii	"j\000"
 11473 0587 01       		.byte	0x1
 11474 0588 6102     		.2byte	0x261
 11475 058a 9F000000 		.4byte	0x9f
 11476 058e 02       		.uleb128 0x2
 11477 058f 91       		.byte	0x91
 11478 0590 5C       		.sleb128 -36
 11479 0591 16       		.uleb128 0x16
 11480 0592 84030000 		.4byte	.LBB13
 11481 0596 C6000000 		.4byte	.LBE13-.LBB13
 11482 059a 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 247


 11483 059b 53040000 		.4byte	.LASF81
 11484 059f 01       		.byte	0x1
 11485 05a0 6402     		.2byte	0x264
 11486 05a2 9F000000 		.4byte	0x9f
 11487 05a6 03       		.uleb128 0x3
 11488 05a7 91       		.byte	0x91
 11489 05a8 D47E     		.sleb128 -172
 11490 05aa 18       		.uleb128 0x18
 11491 05ab D5140000 		.4byte	.LASF82
 11492 05af 01       		.byte	0x1
 11493 05b0 6502     		.2byte	0x265
 11494 05b2 CE000000 		.4byte	0xce
 11495 05b6 03       		.uleb128 0x3
 11496 05b7 91       		.byte	0x91
 11497 05b8 D27E     		.sleb128 -174
 11498 05ba 18       		.uleb128 0x18
 11499 05bb B10C0000 		.4byte	.LASF83
 11500 05bf 01       		.byte	0x1
 11501 05c0 6602     		.2byte	0x266
 11502 05c2 CE000000 		.4byte	0xce
 11503 05c6 03       		.uleb128 0x3
 11504 05c7 91       		.byte	0x91
 11505 05c8 D07E     		.sleb128 -176
 11506 05ca 00       		.byte	0
 11507 05cb 00       		.byte	0
 11508 05cc 00       		.byte	0
 11509 05cd 00       		.byte	0
 11510 05ce 00       		.byte	0
 11511 05cf 14       		.uleb128 0x14
 11512 05d0 84040000 		.4byte	.LBB14
 11513 05d4 A4000000 		.4byte	.LBE14-.LBB14
 11514 05d8 EA050000 		.4byte	0x5ea
 11515 05dc 15       		.uleb128 0x15
 11516 05dd 6900     		.ascii	"i\000"
 11517 05df 01       		.byte	0x1
 11518 05e0 6D02     		.2byte	0x26d
 11519 05e2 9F000000 		.4byte	0x9f
 11520 05e6 02       		.uleb128 0x2
 11521 05e7 91       		.byte	0x91
 11522 05e8 58       		.sleb128 -40
 11523 05e9 00       		.byte	0
 11524 05ea 14       		.uleb128 0x14
 11525 05eb 2C050000 		.4byte	.LBB15
 11526 05ef A6000000 		.4byte	.LBE15-.LBB15
 11527 05f3 05060000 		.4byte	0x605
 11528 05f7 15       		.uleb128 0x15
 11529 05f8 6900     		.ascii	"i\000"
 11530 05fa 01       		.byte	0x1
 11531 05fb 7502     		.2byte	0x275
 11532 05fd 9F000000 		.4byte	0x9f
 11533 0601 02       		.uleb128 0x2
 11534 0602 91       		.byte	0x91
 11535 0603 54       		.sleb128 -44
 11536 0604 00       		.byte	0
 11537 0605 14       		.uleb128 0x14
 11538 0606 D2050000 		.4byte	.LBB16
 11539 060a 14010000 		.4byte	.LBE16-.LBB16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 248


 11540 060e 9C060000 		.4byte	0x69c
 11541 0612 15       		.uleb128 0x15
 11542 0613 6900     		.ascii	"i\000"
 11543 0615 01       		.byte	0x1
 11544 0616 7B02     		.2byte	0x27b
 11545 0618 9F000000 		.4byte	0x9f
 11546 061c 02       		.uleb128 0x2
 11547 061d 91       		.byte	0x91
 11548 061e 50       		.sleb128 -48
 11549 061f 14       		.uleb128 0x14
 11550 0620 DA050000 		.4byte	.LBB17
 11551 0624 34000000 		.4byte	.LBE17-.LBB17
 11552 0628 3A060000 		.4byte	0x63a
 11553 062c 15       		.uleb128 0x15
 11554 062d 6A00     		.ascii	"j\000"
 11555 062f 01       		.byte	0x1
 11556 0630 7D02     		.2byte	0x27d
 11557 0632 9F000000 		.4byte	0x9f
 11558 0636 02       		.uleb128 0x2
 11559 0637 91       		.byte	0x91
 11560 0638 4C       		.sleb128 -52
 11561 0639 00       		.byte	0
 11562 063a 14       		.uleb128 0x14
 11563 063b 0E060000 		.4byte	.LBB18
 11564 063f 5A000000 		.4byte	.LBE18-.LBB18
 11565 0643 6C060000 		.4byte	0x66c
 11566 0647 15       		.uleb128 0x15
 11567 0648 6A00     		.ascii	"j\000"
 11568 064a 01       		.byte	0x1
 11569 064b 8202     		.2byte	0x282
 11570 064d 9F000000 		.4byte	0x9f
 11571 0651 02       		.uleb128 0x2
 11572 0652 91       		.byte	0x91
 11573 0653 48       		.sleb128 -56
 11574 0654 16       		.uleb128 0x16
 11575 0655 16060000 		.4byte	.LBB19
 11576 0659 40000000 		.4byte	.LBE19-.LBB19
 11577 065d 15       		.uleb128 0x15
 11578 065e 6B00     		.ascii	"k\000"
 11579 0660 01       		.byte	0x1
 11580 0661 8402     		.2byte	0x284
 11581 0663 9F000000 		.4byte	0x9f
 11582 0667 02       		.uleb128 0x2
 11583 0668 91       		.byte	0x91
 11584 0669 44       		.sleb128 -60
 11585 066a 00       		.byte	0
 11586 066b 00       		.byte	0
 11587 066c 16       		.uleb128 0x16
 11588 066d 68060000 		.4byte	.LBB20
 11589 0671 5E000000 		.4byte	.LBE20-.LBB20
 11590 0675 15       		.uleb128 0x15
 11591 0676 6A00     		.ascii	"j\000"
 11592 0678 01       		.byte	0x1
 11593 0679 8902     		.2byte	0x289
 11594 067b 9F000000 		.4byte	0x9f
 11595 067f 02       		.uleb128 0x2
 11596 0680 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 249


 11597 0681 40       		.sleb128 -64
 11598 0682 16       		.uleb128 0x16
 11599 0683 70060000 		.4byte	.LBB21
 11600 0687 44000000 		.4byte	.LBE21-.LBB21
 11601 068b 15       		.uleb128 0x15
 11602 068c 6B00     		.ascii	"k\000"
 11603 068e 01       		.byte	0x1
 11604 068f 8B02     		.2byte	0x28b
 11605 0691 9F000000 		.4byte	0x9f
 11606 0695 03       		.uleb128 0x3
 11607 0696 91       		.byte	0x91
 11608 0697 BC7F     		.sleb128 -68
 11609 0699 00       		.byte	0
 11610 069a 00       		.byte	0
 11611 069b 00       		.byte	0
 11612 069c 14       		.uleb128 0x14
 11613 069d 42070000 		.4byte	.LBB22
 11614 06a1 74000000 		.4byte	.LBE22-.LBB22
 11615 06a5 B8060000 		.4byte	0x6b8
 11616 06a9 15       		.uleb128 0x15
 11617 06aa 7700     		.ascii	"w\000"
 11618 06ac 01       		.byte	0x1
 11619 06ad A202     		.2byte	0x2a2
 11620 06af 9F000000 		.4byte	0x9f
 11621 06b3 03       		.uleb128 0x3
 11622 06b4 91       		.byte	0x91
 11623 06b5 B87F     		.sleb128 -72
 11624 06b7 00       		.byte	0
 11625 06b8 14       		.uleb128 0x14
 11626 06b9 42080000 		.4byte	.LBB23
 11627 06bd 4E000000 		.4byte	.LBE23-.LBB23
 11628 06c1 D6060000 		.4byte	0x6d6
 11629 06c5 18       		.uleb128 0x18
 11630 06c6 340A0000 		.4byte	.LASF84
 11631 06ca 01       		.byte	0x1
 11632 06cb D402     		.2byte	0x2d4
 11633 06cd B8000000 		.4byte	0xb8
 11634 06d1 03       		.uleb128 0x3
 11635 06d2 91       		.byte	0x91
 11636 06d3 CF7E     		.sleb128 -177
 11637 06d5 00       		.byte	0
 11638 06d6 14       		.uleb128 0x14
 11639 06d7 C40A0000 		.4byte	.LBB24
 11640 06db 10010000 		.4byte	.LBE24-.LBB24
 11641 06df 2C070000 		.4byte	0x72c
 11642 06e3 15       		.uleb128 0x15
 11643 06e4 6900     		.ascii	"i\000"
 11644 06e6 01       		.byte	0x1
 11645 06e7 1E03     		.2byte	0x31e
 11646 06e9 9F000000 		.4byte	0x9f
 11647 06ed 03       		.uleb128 0x3
 11648 06ee 91       		.byte	0x91
 11649 06ef B47F     		.sleb128 -76
 11650 06f1 16       		.uleb128 0x16
 11651 06f2 CC0A0000 		.4byte	.LBB25
 11652 06f6 F4000000 		.4byte	.LBE25-.LBB25
 11653 06fa 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 250


 11654 06fb 6D110000 		.4byte	.LASF85
 11655 06ff 01       		.byte	0x1
 11656 0700 2003     		.2byte	0x320
 11657 0702 B8000000 		.4byte	0xb8
 11658 0706 03       		.uleb128 0x3
 11659 0707 91       		.byte	0x91
 11660 0708 967E     		.sleb128 -234
 11661 070a 18       		.uleb128 0x18
 11662 070b 2C0A0000 		.4byte	.LASF86
 11663 070f 01       		.byte	0x1
 11664 0710 2103     		.2byte	0x321
 11665 0712 CE000000 		.4byte	0xce
 11666 0716 03       		.uleb128 0x3
 11667 0717 91       		.byte	0x91
 11668 0718 947E     		.sleb128 -236
 11669 071a 18       		.uleb128 0x18
 11670 071b 04040000 		.4byte	.LASF87
 11671 071f 01       		.byte	0x1
 11672 0720 2203     		.2byte	0x322
 11673 0722 C3000000 		.4byte	0xc3
 11674 0726 03       		.uleb128 0x3
 11675 0727 91       		.byte	0x91
 11676 0728 927E     		.sleb128 -238
 11677 072a 00       		.byte	0
 11678 072b 00       		.byte	0
 11679 072c 14       		.uleb128 0x14
 11680 072d 860D0000 		.4byte	.LBB26
 11681 0731 CE010000 		.4byte	.LBE26-.LBB26
 11682 0735 4A070000 		.4byte	0x74a
 11683 0739 18       		.uleb128 0x18
 11684 073a 71000000 		.4byte	.LASF88
 11685 073e 01       		.byte	0x1
 11686 073f 8303     		.2byte	0x383
 11687 0741 C3000000 		.4byte	0xc3
 11688 0745 03       		.uleb128 0x3
 11689 0746 91       		.byte	0x91
 11690 0747 CC7E     		.sleb128 -180
 11691 0749 00       		.byte	0
 11692 074a 14       		.uleb128 0x14
 11693 074b 28100000 		.4byte	.LBB27
 11694 074f 16000000 		.4byte	.LBE27-.LBB27
 11695 0753 68070000 		.4byte	0x768
 11696 0757 18       		.uleb128 0x18
 11697 0758 A6060000 		.4byte	.LASF89
 11698 075c 01       		.byte	0x1
 11699 075d BC03     		.2byte	0x3bc
 11700 075f CE000000 		.4byte	0xce
 11701 0763 03       		.uleb128 0x3
 11702 0764 91       		.byte	0x91
 11703 0765 CA7E     		.sleb128 -182
 11704 0767 00       		.byte	0
 11705 0768 14       		.uleb128 0x14
 11706 0769 58100000 		.4byte	.LBB28
 11707 076d 3C000000 		.4byte	.LBE28-.LBB28
 11708 0771 86070000 		.4byte	0x786
 11709 0775 18       		.uleb128 0x18
 11710 0776 A6060000 		.4byte	.LASF89
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 251


 11711 077a 01       		.byte	0x1
 11712 077b CA03     		.2byte	0x3ca
 11713 077d B8000000 		.4byte	0xb8
 11714 0781 03       		.uleb128 0x3
 11715 0782 91       		.byte	0x91
 11716 0783 C97E     		.sleb128 -183
 11717 0785 00       		.byte	0
 11718 0786 14       		.uleb128 0x14
 11719 0787 FC100000 		.4byte	.LBB29
 11720 078b F6030000 		.4byte	.LBE29-.LBB29
 11721 078f B6070000 		.4byte	0x7b6
 11722 0793 15       		.uleb128 0x15
 11723 0794 6900     		.ascii	"i\000"
 11724 0796 01       		.byte	0x1
 11725 0797 E103     		.2byte	0x3e1
 11726 0799 9F000000 		.4byte	0x9f
 11727 079d 03       		.uleb128 0x3
 11728 079e 91       		.byte	0x91
 11729 079f B07F     		.sleb128 -80
 11730 07a1 1B       		.uleb128 0x1b
 11731 07a2 00000000 		.4byte	.Ldebug_ranges0+0
 11732 07a6 15       		.uleb128 0x15
 11733 07a7 6A00     		.ascii	"j\000"
 11734 07a9 01       		.byte	0x1
 11735 07aa F303     		.2byte	0x3f3
 11736 07ac 9F000000 		.4byte	0x9f
 11737 07b0 03       		.uleb128 0x3
 11738 07b1 91       		.byte	0x91
 11739 07b2 AC7F     		.sleb128 -84
 11740 07b4 00       		.byte	0
 11741 07b5 00       		.byte	0
 11742 07b6 14       		.uleb128 0x14
 11743 07b7 FA140000 		.4byte	.LBB32
 11744 07bb 5A000000 		.4byte	.LBE32-.LBB32
 11745 07bf D2070000 		.4byte	0x7d2
 11746 07c3 15       		.uleb128 0x15
 11747 07c4 6900     		.ascii	"i\000"
 11748 07c6 01       		.byte	0x1
 11749 07c7 1404     		.2byte	0x414
 11750 07c9 9F000000 		.4byte	0x9f
 11751 07cd 03       		.uleb128 0x3
 11752 07ce 91       		.byte	0x91
 11753 07cf A87F     		.sleb128 -88
 11754 07d1 00       		.byte	0
 11755 07d2 14       		.uleb128 0x14
 11756 07d3 58150000 		.4byte	.LBB33
 11757 07d7 F2000000 		.4byte	.LBE33-.LBB33
 11758 07db EE070000 		.4byte	0x7ee
 11759 07df 15       		.uleb128 0x15
 11760 07e0 6900     		.ascii	"i\000"
 11761 07e2 01       		.byte	0x1
 11762 07e3 2004     		.2byte	0x420
 11763 07e5 9F000000 		.4byte	0x9f
 11764 07e9 03       		.uleb128 0x3
 11765 07ea 91       		.byte	0x91
 11766 07eb A47F     		.sleb128 -92
 11767 07ed 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 252


 11768 07ee 14       		.uleb128 0x14
 11769 07ef 4A160000 		.4byte	.LBB34
 11770 07f3 FA060000 		.4byte	.LBE34-.LBB34
 11771 07f7 4A090000 		.4byte	0x94a
 11772 07fb 15       		.uleb128 0x15
 11773 07fc 6900     		.ascii	"i\000"
 11774 07fe 01       		.byte	0x1
 11775 07ff 3604     		.2byte	0x436
 11776 0801 9F000000 		.4byte	0x9f
 11777 0805 03       		.uleb128 0x3
 11778 0806 91       		.byte	0x91
 11779 0807 A07F     		.sleb128 -96
 11780 0809 16       		.uleb128 0x16
 11781 080a 52160000 		.4byte	.LBB35
 11782 080e D8060000 		.4byte	.LBE35-.LBB35
 11783 0812 18       		.uleb128 0x18
 11784 0813 97110000 		.4byte	.LASF90
 11785 0817 01       		.byte	0x1
 11786 0818 3A04     		.2byte	0x43a
 11787 081a 13010000 		.4byte	0x113
 11788 081e 03       		.uleb128 0x3
 11789 081f 91       		.byte	0x91
 11790 0820 9C7F     		.sleb128 -100
 11791 0822 18       		.uleb128 0x18
 11792 0823 F80F0000 		.4byte	.LASF91
 11793 0827 01       		.byte	0x1
 11794 0828 4F04     		.2byte	0x44f
 11795 082a 13010000 		.4byte	0x113
 11796 082e 03       		.uleb128 0x3
 11797 082f 91       		.byte	0x91
 11798 0830 987F     		.sleb128 -104
 11799 0832 18       		.uleb128 0x18
 11800 0833 8C120000 		.4byte	.LASF92
 11801 0837 01       		.byte	0x1
 11802 0838 8104     		.2byte	0x481
 11803 083a 13010000 		.4byte	0x113
 11804 083e 03       		.uleb128 0x3
 11805 083f 91       		.byte	0x91
 11806 0840 B87E     		.sleb128 -200
 11807 0842 18       		.uleb128 0x18
 11808 0843 A50D0000 		.4byte	.LASF93
 11809 0847 01       		.byte	0x1
 11810 0848 8304     		.2byte	0x483
 11811 084a 13010000 		.4byte	0x113
 11812 084e 03       		.uleb128 0x3
 11813 084f 91       		.byte	0x91
 11814 0850 B47E     		.sleb128 -204
 11815 0852 18       		.uleb128 0x18
 11816 0853 3D070000 		.4byte	.LASF94
 11817 0857 01       		.byte	0x1
 11818 0858 9904     		.2byte	0x499
 11819 085a 13010000 		.4byte	0x113
 11820 085e 03       		.uleb128 0x3
 11821 085f 91       		.byte	0x91
 11822 0860 AC7E     		.sleb128 -212
 11823 0862 18       		.uleb128 0x18
 11824 0863 1E120000 		.4byte	.LASF95
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 253


 11825 0867 01       		.byte	0x1
 11826 0868 AD04     		.2byte	0x4ad
 11827 086a 13010000 		.4byte	0x113
 11828 086e 03       		.uleb128 0x3
 11829 086f 91       		.byte	0x91
 11830 0870 A47E     		.sleb128 -220
 11831 0872 14       		.uleb128 0x14
 11832 0873 3C190000 		.4byte	.LBB36
 11833 0877 9E000000 		.4byte	.LBE36-.LBB36
 11834 087b 90080000 		.4byte	0x890
 11835 087f 18       		.uleb128 0x18
 11836 0880 2F100000 		.4byte	.LASF96
 11837 0884 01       		.byte	0x1
 11838 0885 6004     		.2byte	0x460
 11839 0887 CE000000 		.4byte	0xce
 11840 088b 03       		.uleb128 0x3
 11841 088c 91       		.byte	0x91
 11842 088d C67E     		.sleb128 -186
 11843 088f 00       		.byte	0
 11844 0890 14       		.uleb128 0x14
 11845 0891 DA190000 		.4byte	.LBB37
 11846 0895 D8000000 		.4byte	.LBE37-.LBB37
 11847 0899 00090000 		.4byte	0x900
 11848 089d 18       		.uleb128 0x18
 11849 089e 00000000 		.4byte	.LASF97
 11850 08a2 01       		.byte	0x1
 11851 08a3 6B04     		.2byte	0x46b
 11852 08a5 13010000 		.4byte	0x113
 11853 08a9 03       		.uleb128 0x3
 11854 08aa 91       		.byte	0x91
 11855 08ab 947F     		.sleb128 -108
 11856 08ad 18       		.uleb128 0x18
 11857 08ae 24130000 		.4byte	.LASF98
 11858 08b2 01       		.byte	0x1
 11859 08b3 6C04     		.2byte	0x46c
 11860 08b5 13010000 		.4byte	0x113
 11861 08b9 03       		.uleb128 0x3
 11862 08ba 91       		.byte	0x91
 11863 08bb 907F     		.sleb128 -112
 11864 08bd 18       		.uleb128 0x18
 11865 08be 72050000 		.4byte	.LASF99
 11866 08c2 01       		.byte	0x1
 11867 08c3 7B04     		.2byte	0x47b
 11868 08c5 13010000 		.4byte	0x113
 11869 08c9 03       		.uleb128 0x3
 11870 08ca 91       		.byte	0x91
 11871 08cb BC7E     		.sleb128 -196
 11872 08cd 16       		.uleb128 0x16
 11873 08ce EA190000 		.4byte	.LBB38
 11874 08d2 80000000 		.4byte	.LBE38-.LBB38
 11875 08d6 15       		.uleb128 0x15
 11876 08d7 6A00     		.ascii	"j\000"
 11877 08d9 01       		.byte	0x1
 11878 08da 6F04     		.2byte	0x46f
 11879 08dc 9F000000 		.4byte	0x9f
 11880 08e0 03       		.uleb128 0x3
 11881 08e1 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 254


 11882 08e2 8C7F     		.sleb128 -116
 11883 08e4 16       		.uleb128 0x16
 11884 08e5 F0190000 		.4byte	.LBB39
 11885 08e9 6E000000 		.4byte	.LBE39-.LBB39
 11886 08ed 18       		.uleb128 0x18
 11887 08ee AD0E0000 		.4byte	.LASF100
 11888 08f2 01       		.byte	0x1
 11889 08f3 7104     		.2byte	0x471
 11890 08f5 13010000 		.4byte	0x113
 11891 08f9 03       		.uleb128 0x3
 11892 08fa 91       		.byte	0x91
 11893 08fb C07E     		.sleb128 -192
 11894 08fd 00       		.byte	0
 11895 08fe 00       		.byte	0
 11896 08ff 00       		.byte	0
 11897 0900 14       		.uleb128 0x14
 11898 0901 341B0000 		.4byte	.LBB40
 11899 0905 64000000 		.4byte	.LBE40-.LBB40
 11900 0909 1E090000 		.4byte	0x91e
 11901 090d 18       		.uleb128 0x18
 11902 090e ED000000 		.4byte	.LASF101
 11903 0912 01       		.byte	0x1
 11904 0913 8D04     		.2byte	0x48d
 11905 0915 13010000 		.4byte	0x113
 11906 0919 03       		.uleb128 0x3
 11907 091a 91       		.byte	0x91
 11908 091b B07E     		.sleb128 -208
 11909 091d 00       		.byte	0
 11910 091e 16       		.uleb128 0x16
 11911 091f FC1B0000 		.4byte	.LBB41
 11912 0923 A8000000 		.4byte	.LBE41-.LBB41
 11913 0927 18       		.uleb128 0x18
 11914 0928 A50A0000 		.4byte	.LASF102
 11915 092c 01       		.byte	0x1
 11916 092d 9F04     		.2byte	0x49f
 11917 092f CE000000 		.4byte	0xce
 11918 0933 03       		.uleb128 0x3
 11919 0934 91       		.byte	0x91
 11920 0935 AA7E     		.sleb128 -214
 11921 0937 18       		.uleb128 0x18
 11922 0938 210F0000 		.4byte	.LASF103
 11923 093c 01       		.byte	0x1
 11924 093d A404     		.2byte	0x4a4
 11925 093f CE000000 		.4byte	0xce
 11926 0943 03       		.uleb128 0x3
 11927 0944 91       		.byte	0x91
 11928 0945 A87E     		.sleb128 -216
 11929 0947 00       		.byte	0
 11930 0948 00       		.byte	0
 11931 0949 00       		.byte	0
 11932 094a 14       		.uleb128 0x14
 11933 094b 061E0000 		.4byte	.LBB42
 11934 094f 4E000000 		.4byte	.LBE42-.LBB42
 11935 0953 66090000 		.4byte	0x966
 11936 0957 15       		.uleb128 0x15
 11937 0958 6900     		.ascii	"i\000"
 11938 095a 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 255


 11939 095b EB04     		.2byte	0x4eb
 11940 095d 28020000 		.4byte	0x228
 11941 0961 03       		.uleb128 0x3
 11942 0962 91       		.byte	0x91
 11943 0963 887F     		.sleb128 -120
 11944 0965 00       		.byte	0
 11945 0966 14       		.uleb128 0x14
 11946 0967 04200000 		.4byte	.LBB43
 11947 096b 22000000 		.4byte	.LBE43-.LBB43
 11948 096f 82090000 		.4byte	0x982
 11949 0973 15       		.uleb128 0x15
 11950 0974 6900     		.ascii	"i\000"
 11951 0976 01       		.byte	0x1
 11952 0977 3905     		.2byte	0x539
 11953 0979 9F000000 		.4byte	0x9f
 11954 097d 03       		.uleb128 0x3
 11955 097e 91       		.byte	0x91
 11956 097f 847F     		.sleb128 -124
 11957 0981 00       		.byte	0
 11958 0982 14       		.uleb128 0x14
 11959 0983 9E200000 		.4byte	.LBB44
 11960 0987 28000000 		.4byte	.LBE44-.LBB44
 11961 098b 9E090000 		.4byte	0x99e
 11962 098f 15       		.uleb128 0x15
 11963 0990 6900     		.ascii	"i\000"
 11964 0992 01       		.byte	0x1
 11965 0993 4F05     		.2byte	0x54f
 11966 0995 9F000000 		.4byte	0x9f
 11967 0999 03       		.uleb128 0x3
 11968 099a 91       		.byte	0x91
 11969 099b 807F     		.sleb128 -128
 11970 099d 00       		.byte	0
 11971 099e 14       		.uleb128 0x14
 11972 099f C6200000 		.4byte	.LBB45
 11973 09a3 22000000 		.4byte	.LBE45-.LBB45
 11974 09a7 BA090000 		.4byte	0x9ba
 11975 09ab 15       		.uleb128 0x15
 11976 09ac 6900     		.ascii	"i\000"
 11977 09ae 01       		.byte	0x1
 11978 09af 5305     		.2byte	0x553
 11979 09b1 9F000000 		.4byte	0x9f
 11980 09b5 03       		.uleb128 0x3
 11981 09b6 91       		.byte	0x91
 11982 09b7 FC7E     		.sleb128 -132
 11983 09b9 00       		.byte	0
 11984 09ba 14       		.uleb128 0x14
 11985 09bb E8200000 		.4byte	.LBB46
 11986 09bf 7C000000 		.4byte	.LBE46-.LBB46
 11987 09c3 D6090000 		.4byte	0x9d6
 11988 09c7 15       		.uleb128 0x15
 11989 09c8 6900     		.ascii	"i\000"
 11990 09ca 01       		.byte	0x1
 11991 09cb 5705     		.2byte	0x557
 11992 09cd 9F000000 		.4byte	0x9f
 11993 09d1 03       		.uleb128 0x3
 11994 09d2 91       		.byte	0x91
 11995 09d3 F87E     		.sleb128 -136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 256


 11996 09d5 00       		.byte	0
 11997 09d6 14       		.uleb128 0x14
 11998 09d7 EA210000 		.4byte	.LBB47
 11999 09db 56000000 		.4byte	.LBE47-.LBB47
 12000 09df 0C0A0000 		.4byte	0xa0c
 12001 09e3 15       		.uleb128 0x15
 12002 09e4 6900     		.ascii	"i\000"
 12003 09e6 01       		.byte	0x1
 12004 09e7 6A05     		.2byte	0x56a
 12005 09e9 9F000000 		.4byte	0x9f
 12006 09ed 03       		.uleb128 0x3
 12007 09ee 91       		.byte	0x91
 12008 09ef F47E     		.sleb128 -140
 12009 09f1 16       		.uleb128 0x16
 12010 09f2 F0210000 		.4byte	.LBB48
 12011 09f6 44000000 		.4byte	.LBE48-.LBB48
 12012 09fa 18       		.uleb128 0x18
 12013 09fb 6C100000 		.4byte	.LASF104
 12014 09ff 01       		.byte	0x1
 12015 0a00 6C05     		.2byte	0x56c
 12016 0a02 9F000000 		.4byte	0x9f
 12017 0a06 03       		.uleb128 0x3
 12018 0a07 91       		.byte	0x91
 12019 0a08 A07E     		.sleb128 -224
 12020 0a0a 00       		.byte	0
 12021 0a0b 00       		.byte	0
 12022 0a0c 14       		.uleb128 0x14
 12023 0a0d D2220000 		.4byte	.LBB49
 12024 0a11 86010000 		.4byte	.LBE49-.LBB49
 12025 0a15 B60A0000 		.4byte	0xab6
 12026 0a19 18       		.uleb128 0x18
 12027 0a1a 84030000 		.4byte	.LASF105
 12028 0a1e 01       		.byte	0x1
 12029 0a1f 8005     		.2byte	0x580
 12030 0a21 9F000000 		.4byte	0x9f
 12031 0a25 03       		.uleb128 0x3
 12032 0a26 91       		.byte	0x91
 12033 0a27 9C7E     		.sleb128 -228
 12034 0a29 18       		.uleb128 0x18
 12035 0a2a 26010000 		.4byte	.LASF106
 12036 0a2e 01       		.byte	0x1
 12037 0a2f 8105     		.2byte	0x581
 12038 0a31 9F000000 		.4byte	0x9f
 12039 0a35 03       		.uleb128 0x3
 12040 0a36 91       		.byte	0x91
 12041 0a37 987E     		.sleb128 -232
 12042 0a39 18       		.uleb128 0x18
 12043 0a3a 6A120000 		.4byte	.LASF107
 12044 0a3e 01       		.byte	0x1
 12045 0a3f 8205     		.2byte	0x582
 12046 0a41 9F000000 		.4byte	0x9f
 12047 0a45 03       		.uleb128 0x3
 12048 0a46 91       		.byte	0x91
 12049 0a47 F07E     		.sleb128 -144
 12050 0a49 14       		.uleb128 0x14
 12051 0a4a E2220000 		.4byte	.LBB50
 12052 0a4e 36000000 		.4byte	.LBE50-.LBB50
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 257


 12053 0a52 650A0000 		.4byte	0xa65
 12054 0a56 15       		.uleb128 0x15
 12055 0a57 6900     		.ascii	"i\000"
 12056 0a59 01       		.byte	0x1
 12057 0a5a 8305     		.2byte	0x583
 12058 0a5c 9F000000 		.4byte	0x9f
 12059 0a60 03       		.uleb128 0x3
 12060 0a61 91       		.byte	0x91
 12061 0a62 EC7E     		.sleb128 -148
 12062 0a64 00       		.byte	0
 12063 0a65 14       		.uleb128 0x14
 12064 0a66 22230000 		.4byte	.LBB51
 12065 0a6a 42000000 		.4byte	.LBE51-.LBB51
 12066 0a6e 810A0000 		.4byte	0xa81
 12067 0a72 15       		.uleb128 0x15
 12068 0a73 6900     		.ascii	"i\000"
 12069 0a75 01       		.byte	0x1
 12070 0a76 8B05     		.2byte	0x58b
 12071 0a78 9F000000 		.4byte	0x9f
 12072 0a7c 03       		.uleb128 0x3
 12073 0a7d 91       		.byte	0x91
 12074 0a7e E87E     		.sleb128 -152
 12075 0a80 00       		.byte	0
 12076 0a81 14       		.uleb128 0x14
 12077 0a82 6A230000 		.4byte	.LBB52
 12078 0a86 48000000 		.4byte	.LBE52-.LBB52
 12079 0a8a 9D0A0000 		.4byte	0xa9d
 12080 0a8e 15       		.uleb128 0x15
 12081 0a8f 6900     		.ascii	"i\000"
 12082 0a91 01       		.byte	0x1
 12083 0a92 9305     		.2byte	0x593
 12084 0a94 9F000000 		.4byte	0x9f
 12085 0a98 03       		.uleb128 0x3
 12086 0a99 91       		.byte	0x91
 12087 0a9a E47E     		.sleb128 -156
 12088 0a9c 00       		.byte	0
 12089 0a9d 16       		.uleb128 0x16
 12090 0a9e B2230000 		.4byte	.LBB53
 12091 0aa2 7E000000 		.4byte	.LBE53-.LBB53
 12092 0aa6 15       		.uleb128 0x15
 12093 0aa7 6900     		.ascii	"i\000"
 12094 0aa9 01       		.byte	0x1
 12095 0aaa 9B05     		.2byte	0x59b
 12096 0aac 9F000000 		.4byte	0x9f
 12097 0ab0 03       		.uleb128 0x3
 12098 0ab1 91       		.byte	0x91
 12099 0ab2 E07E     		.sleb128 -160
 12100 0ab4 00       		.byte	0
 12101 0ab5 00       		.byte	0
 12102 0ab6 16       		.uleb128 0x16
 12103 0ab7 C2240000 		.4byte	.LBB54
 12104 0abb 28000000 		.4byte	.LBE54-.LBB54
 12105 0abf 18       		.uleb128 0x18
 12106 0ac0 340A0000 		.4byte	.LASF84
 12107 0ac4 01       		.byte	0x1
 12108 0ac5 B405     		.2byte	0x5b4
 12109 0ac7 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 258


 12110 0acb 03       		.uleb128 0x3
 12111 0acc 91       		.byte	0x91
 12112 0acd 977E     		.sleb128 -233
 12113 0acf 00       		.byte	0
 12114 0ad0 00       		.byte	0
 12115 0ad1 19       		.uleb128 0x19
 12116 0ad2 34060000 		.4byte	.LASF108
 12117 0ad6 01       		.byte	0x1
 12118 0ad7 D505     		.2byte	0x5d5
 12119 0ad9 00000000 		.4byte	.LFB76
 12120 0add 70000000 		.4byte	.LFE76-.LFB76
 12121 0ae1 01       		.uleb128 0x1
 12122 0ae2 9C       		.byte	0x9c
 12123 0ae3 19       		.uleb128 0x19
 12124 0ae4 02140000 		.4byte	.LASF109
 12125 0ae8 01       		.byte	0x1
 12126 0ae9 EA05     		.2byte	0x5ea
 12127 0aeb 00000000 		.4byte	.LFB77
 12128 0aef 70010000 		.4byte	.LFE77-.LFB77
 12129 0af3 01       		.uleb128 0x1
 12130 0af4 9C       		.byte	0x9c
 12131 0af5 12       		.uleb128 0x12
 12132 0af6 8D0A0000 		.4byte	.LASF110
 12133 0afa 01       		.byte	0x1
 12134 0afb 1206     		.2byte	0x612
 12135 0afd EF000000 		.4byte	0xef
 12136 0b01 00000000 		.4byte	.LFB78
 12137 0b05 E0000000 		.4byte	.LFE78-.LFB78
 12138 0b09 01       		.uleb128 0x1
 12139 0b0a 9C       		.byte	0x9c
 12140 0b0b 6A0B0000 		.4byte	0xb6a
 12141 0b0f 11       		.uleb128 0x11
 12142 0b10 13130000 		.4byte	.LASF111
 12143 0b14 01       		.byte	0x1
 12144 0b15 1206     		.2byte	0x612
 12145 0b17 EF000000 		.4byte	0xef
 12146 0b1b 02       		.uleb128 0x2
 12147 0b1c 91       		.byte	0x91
 12148 0b1d 67       		.sleb128 -25
 12149 0b1e 11       		.uleb128 0x11
 12150 0b1f F5010000 		.4byte	.LASF112
 12151 0b23 01       		.byte	0x1
 12152 0b24 1206     		.2byte	0x612
 12153 0b26 FB000000 		.4byte	0xfb
 12154 0b2a 02       		.uleb128 0x2
 12155 0b2b 91       		.byte	0x91
 12156 0b2c 64       		.sleb128 -28
 12157 0b2d 11       		.uleb128 0x11
 12158 0b2e 65120000 		.4byte	.LASF113
 12159 0b32 01       		.byte	0x1
 12160 0b33 1206     		.2byte	0x612
 12161 0b35 B8000000 		.4byte	0xb8
 12162 0b39 02       		.uleb128 0x2
 12163 0b3a 91       		.byte	0x91
 12164 0b3b 66       		.sleb128 -26
 12165 0b3c 18       		.uleb128 0x18
 12166 0b3d 340A0000 		.4byte	.LASF84
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 259


 12167 0b41 01       		.byte	0x1
 12168 0b42 1406     		.2byte	0x614
 12169 0b44 40010000 		.4byte	0x140
 12170 0b48 02       		.uleb128 0x2
 12171 0b49 91       		.byte	0x91
 12172 0b4a 6F       		.sleb128 -17
 12173 0b4b 18       		.uleb128 0x18
 12174 0b4c F3030000 		.4byte	.LASF114
 12175 0b50 01       		.byte	0x1
 12176 0b51 1506     		.2byte	0x615
 12177 0b53 B8000000 		.4byte	0xb8
 12178 0b57 02       		.uleb128 0x2
 12179 0b58 91       		.byte	0x91
 12180 0b59 77       		.sleb128 -9
 12181 0b5a 18       		.uleb128 0x18
 12182 0b5b 620D0000 		.4byte	.LASF115
 12183 0b5f 01       		.byte	0x1
 12184 0b60 1606     		.2byte	0x616
 12185 0b62 E4000000 		.4byte	0xe4
 12186 0b66 02       		.uleb128 0x2
 12187 0b67 91       		.byte	0x91
 12188 0b68 70       		.sleb128 -16
 12189 0b69 00       		.byte	0
 12190 0b6a 12       		.uleb128 0x12
 12191 0b6b 350F0000 		.4byte	.LASF116
 12192 0b6f 01       		.byte	0x1
 12193 0b70 4B06     		.2byte	0x64b
 12194 0b72 EF000000 		.4byte	0xef
 12195 0b76 00000000 		.4byte	.LFB79
 12196 0b7a F4000000 		.4byte	.LFE79-.LFB79
 12197 0b7e 01       		.uleb128 0x1
 12198 0b7f 9C       		.byte	0x9c
 12199 0b80 DF0B0000 		.4byte	0xbdf
 12200 0b84 11       		.uleb128 0x11
 12201 0b85 13130000 		.4byte	.LASF111
 12202 0b89 01       		.byte	0x1
 12203 0b8a 4B06     		.2byte	0x64b
 12204 0b8c EF000000 		.4byte	0xef
 12205 0b90 02       		.uleb128 0x2
 12206 0b91 91       		.byte	0x91
 12207 0b92 6F       		.sleb128 -17
 12208 0b93 11       		.uleb128 0x11
 12209 0b94 F5010000 		.4byte	.LASF112
 12210 0b98 01       		.byte	0x1
 12211 0b99 4B06     		.2byte	0x64b
 12212 0b9b EF000000 		.4byte	0xef
 12213 0b9f 02       		.uleb128 0x2
 12214 0ba0 91       		.byte	0x91
 12215 0ba1 6E       		.sleb128 -18
 12216 0ba2 11       		.uleb128 0x11
 12217 0ba3 65120000 		.4byte	.LASF113
 12218 0ba7 01       		.byte	0x1
 12219 0ba8 4B06     		.2byte	0x64b
 12220 0baa B8000000 		.4byte	0xb8
 12221 0bae 02       		.uleb128 0x2
 12222 0baf 91       		.byte	0x91
 12223 0bb0 6D       		.sleb128 -19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 260


 12224 0bb1 18       		.uleb128 0x18
 12225 0bb2 340A0000 		.4byte	.LASF84
 12226 0bb6 01       		.byte	0x1
 12227 0bb7 4D06     		.2byte	0x64d
 12228 0bb9 40010000 		.4byte	0x140
 12229 0bbd 02       		.uleb128 0x2
 12230 0bbe 91       		.byte	0x91
 12231 0bbf 72       		.sleb128 -14
 12232 0bc0 18       		.uleb128 0x18
 12233 0bc1 620D0000 		.4byte	.LASF115
 12234 0bc5 01       		.byte	0x1
 12235 0bc6 4E06     		.2byte	0x64e
 12236 0bc8 E4000000 		.4byte	0xe4
 12237 0bcc 02       		.uleb128 0x2
 12238 0bcd 91       		.byte	0x91
 12239 0bce 74       		.sleb128 -12
 12240 0bcf 18       		.uleb128 0x18
 12241 0bd0 F3030000 		.4byte	.LASF114
 12242 0bd4 01       		.byte	0x1
 12243 0bd5 4F06     		.2byte	0x64f
 12244 0bd7 B8000000 		.4byte	0xb8
 12245 0bdb 02       		.uleb128 0x2
 12246 0bdc 91       		.byte	0x91
 12247 0bdd 73       		.sleb128 -13
 12248 0bde 00       		.byte	0
 12249 0bdf 19       		.uleb128 0x19
 12250 0be0 B0060000 		.4byte	.LASF117
 12251 0be4 01       		.byte	0x1
 12252 0be5 7E06     		.2byte	0x67e
 12253 0be7 00000000 		.4byte	.LFB80
 12254 0beb 24000000 		.4byte	.LFE80-.LFB80
 12255 0bef 01       		.uleb128 0x1
 12256 0bf0 9C       		.byte	0x9c
 12257 0bf1 19       		.uleb128 0x19
 12258 0bf2 52060000 		.4byte	.LASF118
 12259 0bf6 01       		.byte	0x1
 12260 0bf7 8F06     		.2byte	0x68f
 12261 0bf9 00000000 		.4byte	.LFB81
 12262 0bfd 54000000 		.4byte	.LFE81-.LFB81
 12263 0c01 01       		.uleb128 0x1
 12264 0c02 9C       		.byte	0x9c
 12265 0c03 19       		.uleb128 0x19
 12266 0c04 66050000 		.4byte	.LASF119
 12267 0c08 01       		.byte	0x1
 12268 0c09 A206     		.2byte	0x6a2
 12269 0c0b 00000000 		.4byte	.LFB82
 12270 0c0f C4000000 		.4byte	.LFE82-.LFB82
 12271 0c13 01       		.uleb128 0x1
 12272 0c14 9C       		.byte	0x9c
 12273 0c15 12       		.uleb128 0x12
 12274 0c16 FB0C0000 		.4byte	.LASF120
 12275 0c1a 01       		.byte	0x1
 12276 0c1b D506     		.2byte	0x6d5
 12277 0c1d 13010000 		.4byte	0x113
 12278 0c21 00000000 		.4byte	.LFB83
 12279 0c25 98000000 		.4byte	.LFE83-.LFB83
 12280 0c29 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 261


 12281 0c2a 9C       		.byte	0x9c
 12282 0c2b 640C0000 		.4byte	0xc64
 12283 0c2f 1A       		.uleb128 0x1a
 12284 0c30 5800     		.ascii	"X\000"
 12285 0c32 01       		.byte	0x1
 12286 0c33 D506     		.2byte	0x6d5
 12287 0c35 13010000 		.4byte	0x113
 12288 0c39 02       		.uleb128 0x2
 12289 0c3a 91       		.byte	0x91
 12290 0c3b 64       		.sleb128 -28
 12291 0c3c 15       		.uleb128 0x15
 12292 0c3d 5900     		.ascii	"Y\000"
 12293 0c3f 01       		.byte	0x1
 12294 0c40 D606     		.2byte	0x6d6
 12295 0c42 13010000 		.4byte	0x113
 12296 0c46 02       		.uleb128 0x2
 12297 0c47 91       		.byte	0x91
 12298 0c48 70       		.sleb128 -16
 12299 0c49 15       		.uleb128 0x15
 12300 0c4a 4600     		.ascii	"F\000"
 12301 0c4c 01       		.byte	0x1
 12302 0c4d D606     		.2byte	0x6d6
 12303 0c4f 13010000 		.4byte	0x113
 12304 0c53 02       		.uleb128 0x2
 12305 0c54 91       		.byte	0x91
 12306 0c55 74       		.sleb128 -12
 12307 0c56 15       		.uleb128 0x15
 12308 0c57 4500     		.ascii	"E\000"
 12309 0c59 01       		.byte	0x1
 12310 0c5a D706     		.2byte	0x6d7
 12311 0c5c 9F000000 		.4byte	0x9f
 12312 0c60 02       		.uleb128 0x2
 12313 0c61 91       		.byte	0x91
 12314 0c62 6C       		.sleb128 -20
 12315 0c63 00       		.byte	0
 12316 0c64 17       		.uleb128 0x17
 12317 0c65 F5000000 		.4byte	.LASF121
 12318 0c69 01       		.byte	0x1
 12319 0c6a E806     		.2byte	0x6e8
 12320 0c6c 00000000 		.4byte	.LFB84
 12321 0c70 D4000000 		.4byte	.LFE84-.LFB84
 12322 0c74 01       		.uleb128 0x1
 12323 0c75 9C       		.byte	0x9c
 12324 0c76 C10C0000 		.4byte	0xcc1
 12325 0c7a 11       		.uleb128 0x11
 12326 0c7b 7F0E0000 		.4byte	.LASF122
 12327 0c7f 01       		.byte	0x1
 12328 0c80 E806     		.2byte	0x6e8
 12329 0c82 9F000000 		.4byte	0x9f
 12330 0c86 02       		.uleb128 0x2
 12331 0c87 91       		.byte	0x91
 12332 0c88 64       		.sleb128 -28
 12333 0c89 18       		.uleb128 0x18
 12334 0c8a 2A0E0000 		.4byte	.LASF123
 12335 0c8e 01       		.byte	0x1
 12336 0c8f F406     		.2byte	0x6f4
 12337 0c91 CE000000 		.4byte	0xce
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 262


 12338 0c95 02       		.uleb128 0x2
 12339 0c96 91       		.byte	0x91
 12340 0c97 76       		.sleb128 -10
 12341 0c98 16       		.uleb128 0x16
 12342 0c99 18000000 		.4byte	.LBB55
 12343 0c9d 86000000 		.4byte	.LBE55-.LBB55
 12344 0ca1 18       		.uleb128 0x18
 12345 0ca2 AB100000 		.4byte	.LASF124
 12346 0ca6 01       		.byte	0x1
 12347 0ca7 F806     		.2byte	0x6f8
 12348 0ca9 13010000 		.4byte	0x113
 12349 0cad 02       		.uleb128 0x2
 12350 0cae 91       		.byte	0x91
 12351 0caf 70       		.sleb128 -16
 12352 0cb0 18       		.uleb128 0x18
 12353 0cb1 98140000 		.4byte	.LASF125
 12354 0cb5 01       		.byte	0x1
 12355 0cb6 0707     		.2byte	0x707
 12356 0cb8 9F000000 		.4byte	0x9f
 12357 0cbc 02       		.uleb128 0x2
 12358 0cbd 91       		.byte	0x91
 12359 0cbe 6C       		.sleb128 -20
 12360 0cbf 00       		.byte	0
 12361 0cc0 00       		.byte	0
 12362 0cc1 17       		.uleb128 0x17
 12363 0cc2 BB080000 		.4byte	.LASF126
 12364 0cc6 01       		.byte	0x1
 12365 0cc7 1307     		.2byte	0x713
 12366 0cc9 00000000 		.4byte	.LFB85
 12367 0ccd 1C000000 		.4byte	.LFE85-.LFB85
 12368 0cd1 01       		.uleb128 0x1
 12369 0cd2 9C       		.byte	0x9c
 12370 0cd3 F50C0000 		.4byte	0xcf5
 12371 0cd7 1A       		.uleb128 0x1a
 12372 0cd8 636300   		.ascii	"cc\000"
 12373 0cdb 01       		.byte	0x1
 12374 0cdc 1307     		.2byte	0x713
 12375 0cde 9F000000 		.4byte	0x9f
 12376 0ce2 02       		.uleb128 0x2
 12377 0ce3 91       		.byte	0x91
 12378 0ce4 74       		.sleb128 -12
 12379 0ce5 1A       		.uleb128 0x1a
 12380 0ce6 76616C00 		.ascii	"val\000"
 12381 0cea 01       		.byte	0x1
 12382 0ceb 1307     		.2byte	0x713
 12383 0ced 9F000000 		.4byte	0x9f
 12384 0cf1 02       		.uleb128 0x2
 12385 0cf2 91       		.byte	0x91
 12386 0cf3 70       		.sleb128 -16
 12387 0cf4 00       		.byte	0
 12388 0cf5 17       		.uleb128 0x17
 12389 0cf6 F70B0000 		.4byte	.LASF127
 12390 0cfa 01       		.byte	0x1
 12391 0cfb 1907     		.2byte	0x719
 12392 0cfd 00000000 		.4byte	.LFB86
 12393 0d01 68000000 		.4byte	.LFE86-.LFB86
 12394 0d05 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 263


 12395 0d06 9C       		.byte	0x9c
 12396 0d07 390D0000 		.4byte	0xd39
 12397 0d0b 11       		.uleb128 0x11
 12398 0d0c C5030000 		.4byte	.LASF128
 12399 0d10 01       		.byte	0x1
 12400 0d11 1907     		.2byte	0x719
 12401 0d13 9F000000 		.4byte	0x9f
 12402 0d17 02       		.uleb128 0x2
 12403 0d18 91       		.byte	0x91
 12404 0d19 74       		.sleb128 -12
 12405 0d1a 11       		.uleb128 0x11
 12406 0d1b 2A0E0000 		.4byte	.LASF123
 12407 0d1f 01       		.byte	0x1
 12408 0d20 1907     		.2byte	0x719
 12409 0d22 9F000000 		.4byte	0x9f
 12410 0d26 02       		.uleb128 0x2
 12411 0d27 91       		.byte	0x91
 12412 0d28 70       		.sleb128 -16
 12413 0d29 11       		.uleb128 0x11
 12414 0d2a 500A0000 		.4byte	.LASF129
 12415 0d2e 01       		.byte	0x1
 12416 0d2f 1907     		.2byte	0x719
 12417 0d31 9F000000 		.4byte	0x9f
 12418 0d35 02       		.uleb128 0x2
 12419 0d36 91       		.byte	0x91
 12420 0d37 6C       		.sleb128 -20
 12421 0d38 00       		.byte	0
 12422 0d39 17       		.uleb128 0x17
 12423 0d3a EC060000 		.4byte	.LASF130
 12424 0d3e 01       		.byte	0x1
 12425 0d3f 2607     		.2byte	0x726
 12426 0d41 00000000 		.4byte	.LFB87
 12427 0d45 68000000 		.4byte	.LFE87-.LFB87
 12428 0d49 01       		.uleb128 0x1
 12429 0d4a 9C       		.byte	0x9c
 12430 0d4b 7D0D0000 		.4byte	0xd7d
 12431 0d4f 11       		.uleb128 0x11
 12432 0d50 C5030000 		.4byte	.LASF128
 12433 0d54 01       		.byte	0x1
 12434 0d55 2607     		.2byte	0x726
 12435 0d57 9F000000 		.4byte	0x9f
 12436 0d5b 02       		.uleb128 0x2
 12437 0d5c 91       		.byte	0x91
 12438 0d5d 74       		.sleb128 -12
 12439 0d5e 11       		.uleb128 0x11
 12440 0d5f A8050000 		.4byte	.LASF131
 12441 0d63 01       		.byte	0x1
 12442 0d64 2607     		.2byte	0x726
 12443 0d66 9F000000 		.4byte	0x9f
 12444 0d6a 02       		.uleb128 0x2
 12445 0d6b 91       		.byte	0x91
 12446 0d6c 70       		.sleb128 -16
 12447 0d6d 11       		.uleb128 0x11
 12448 0d6e 500A0000 		.4byte	.LASF129
 12449 0d72 01       		.byte	0x1
 12450 0d73 2607     		.2byte	0x726
 12451 0d75 9F000000 		.4byte	0x9f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 264


 12452 0d79 02       		.uleb128 0x2
 12453 0d7a 91       		.byte	0x91
 12454 0d7b 6C       		.sleb128 -20
 12455 0d7c 00       		.byte	0
 12456 0d7d 17       		.uleb128 0x17
 12457 0d7e 64070000 		.4byte	.LASF132
 12458 0d82 01       		.byte	0x1
 12459 0d83 3207     		.2byte	0x732
 12460 0d85 00000000 		.4byte	.LFB88
 12461 0d89 68000000 		.4byte	.LFE88-.LFB88
 12462 0d8d 01       		.uleb128 0x1
 12463 0d8e 9C       		.byte	0x9c
 12464 0d8f C10D0000 		.4byte	0xdc1
 12465 0d93 11       		.uleb128 0x11
 12466 0d94 25020000 		.4byte	.LASF133
 12467 0d98 01       		.byte	0x1
 12468 0d99 3207     		.2byte	0x732
 12469 0d9b 9F000000 		.4byte	0x9f
 12470 0d9f 02       		.uleb128 0x2
 12471 0da0 91       		.byte	0x91
 12472 0da1 74       		.sleb128 -12
 12473 0da2 11       		.uleb128 0x11
 12474 0da3 3C010000 		.4byte	.LASF134
 12475 0da7 01       		.byte	0x1
 12476 0da8 3207     		.2byte	0x732
 12477 0daa 9F000000 		.4byte	0x9f
 12478 0dae 02       		.uleb128 0x2
 12479 0daf 91       		.byte	0x91
 12480 0db0 70       		.sleb128 -16
 12481 0db1 11       		.uleb128 0x11
 12482 0db2 500A0000 		.4byte	.LASF129
 12483 0db6 01       		.byte	0x1
 12484 0db7 3207     		.2byte	0x732
 12485 0db9 9F000000 		.4byte	0x9f
 12486 0dbd 02       		.uleb128 0x2
 12487 0dbe 91       		.byte	0x91
 12488 0dbf 6C       		.sleb128 -20
 12489 0dc0 00       		.byte	0
 12490 0dc1 17       		.uleb128 0x17
 12491 0dc2 AD0D0000 		.4byte	.LASF135
 12492 0dc6 01       		.byte	0x1
 12493 0dc7 3E07     		.2byte	0x73e
 12494 0dc9 00000000 		.4byte	.LFB89
 12495 0dcd 6C000000 		.4byte	.LFE89-.LFB89
 12496 0dd1 01       		.uleb128 0x1
 12497 0dd2 9C       		.byte	0x9c
 12498 0dd3 F60D0000 		.4byte	0xdf6
 12499 0dd7 1A       		.uleb128 0x1a
 12500 0dd8 76616C00 		.ascii	"val\000"
 12501 0ddc 01       		.byte	0x1
 12502 0ddd 3E07     		.2byte	0x73e
 12503 0ddf 9F000000 		.4byte	0x9f
 12504 0de3 02       		.uleb128 0x2
 12505 0de4 91       		.byte	0x91
 12506 0de5 74       		.sleb128 -12
 12507 0de6 11       		.uleb128 0x11
 12508 0de7 500A0000 		.4byte	.LASF129
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 265


 12509 0deb 01       		.byte	0x1
 12510 0dec 3E07     		.2byte	0x73e
 12511 0dee 9F000000 		.4byte	0x9f
 12512 0df2 02       		.uleb128 0x2
 12513 0df3 91       		.byte	0x91
 12514 0df4 70       		.sleb128 -16
 12515 0df5 00       		.byte	0
 12516 0df6 17       		.uleb128 0x17
 12517 0df7 D1030000 		.4byte	.LASF136
 12518 0dfb 01       		.byte	0x1
 12519 0dfc 4A07     		.2byte	0x74a
 12520 0dfe 00000000 		.4byte	.LFB90
 12521 0e02 5C000000 		.4byte	.LFE90-.LFB90
 12522 0e06 01       		.uleb128 0x1
 12523 0e07 9C       		.byte	0x9c
 12524 0e08 240E0000 		.4byte	0xe24
 12525 0e0c 16       		.uleb128 0x16
 12526 0e0d 06000000 		.4byte	.LBB56
 12527 0e11 44000000 		.4byte	.LBE56-.LBB56
 12528 0e15 15       		.uleb128 0x15
 12529 0e16 6900     		.ascii	"i\000"
 12530 0e18 01       		.byte	0x1
 12531 0e19 4C07     		.2byte	0x74c
 12532 0e1b B8000000 		.4byte	0xb8
 12533 0e1f 02       		.uleb128 0x2
 12534 0e20 91       		.byte	0x91
 12535 0e21 77       		.sleb128 -9
 12536 0e22 00       		.byte	0
 12537 0e23 00       		.byte	0
 12538 0e24 17       		.uleb128 0x17
 12539 0e25 DF080000 		.4byte	.LASF137
 12540 0e29 01       		.byte	0x1
 12541 0e2a 6607     		.2byte	0x766
 12542 0e2c 00000000 		.4byte	.LFB91
 12543 0e30 B00E0000 		.4byte	.LFE91-.LFB91
 12544 0e34 01       		.uleb128 0x1
 12545 0e35 9C       		.byte	0x9c
 12546 0e36 F7100000 		.4byte	0x10f7
 12547 0e3a 18       		.uleb128 0x18
 12548 0e3b F0050000 		.4byte	.LASF138
 12549 0e3f 01       		.byte	0x1
 12550 0e40 6A07     		.2byte	0x76a
 12551 0e42 E4000000 		.4byte	0xe4
 12552 0e46 02       		.uleb128 0x2
 12553 0e47 91       		.byte	0x91
 12554 0e48 44       		.sleb128 -60
 12555 0e49 18       		.uleb128 0x18
 12556 0e4a 130C0000 		.4byte	.LASF139
 12557 0e4e 01       		.byte	0x1
 12558 0e4f 6B07     		.2byte	0x76b
 12559 0e51 E4000000 		.4byte	0xe4
 12560 0e55 02       		.uleb128 0x2
 12561 0e56 91       		.byte	0x91
 12562 0e57 40       		.sleb128 -64
 12563 0e58 14       		.uleb128 0x14
 12564 0e59 3A000000 		.4byte	.LBB57
 12565 0e5d 30000000 		.4byte	.LBE57-.LBB57
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 266


 12566 0e61 730E0000 		.4byte	0xe73
 12567 0e65 15       		.uleb128 0x15
 12568 0e66 6900     		.ascii	"i\000"
 12569 0e68 01       		.byte	0x1
 12570 0e69 6E07     		.2byte	0x76e
 12571 0e6b 9F000000 		.4byte	0x9f
 12572 0e6f 02       		.uleb128 0x2
 12573 0e70 91       		.byte	0x91
 12574 0e71 6C       		.sleb128 -20
 12575 0e72 00       		.byte	0
 12576 0e73 14       		.uleb128 0x14
 12577 0e74 7E000000 		.4byte	.LBB58
 12578 0e78 EA060000 		.4byte	.LBE58-.LBB58
 12579 0e7c 5A0F0000 		.4byte	0xf5a
 12580 0e80 18       		.uleb128 0x18
 12581 0e81 8E020000 		.4byte	.LASF140
 12582 0e85 01       		.byte	0x1
 12583 0e86 7E07     		.2byte	0x77e
 12584 0e88 97020000 		.4byte	0x297
 12585 0e8c 03       		.uleb128 0x3
 12586 0e8d 91       		.byte	0x91
 12587 0e8e 987F     		.sleb128 -104
 12588 0e90 15       		.uleb128 0x15
 12589 0e91 6900     		.ascii	"i\000"
 12590 0e93 01       		.byte	0x1
 12591 0e94 7F07     		.2byte	0x77f
 12592 0e96 E4000000 		.4byte	0xe4
 12593 0e9a 02       		.uleb128 0x2
 12594 0e9b 91       		.byte	0x91
 12595 0e9c 68       		.sleb128 -24
 12596 0e9d 18       		.uleb128 0x18
 12597 0e9e BC0C0000 		.4byte	.LASF141
 12598 0ea2 01       		.byte	0x1
 12599 0ea3 8107     		.2byte	0x781
 12600 0ea5 B8000000 		.4byte	0xb8
 12601 0ea9 03       		.uleb128 0x3
 12602 0eaa 91       		.byte	0x91
 12603 0eab BF7F     		.sleb128 -65
 12604 0ead 18       		.uleb128 0x18
 12605 0eae 24050000 		.4byte	.LASF142
 12606 0eb2 01       		.byte	0x1
 12607 0eb3 A107     		.2byte	0x7a1
 12608 0eb5 CE000000 		.4byte	0xce
 12609 0eb9 03       		.uleb128 0x3
 12610 0eba 91       		.byte	0x91
 12611 0ebb BC7F     		.sleb128 -68
 12612 0ebd 14       		.uleb128 0x14
 12613 0ebe 7C010000 		.4byte	.LBB59
 12614 0ec2 88000000 		.4byte	.LBE59-.LBB59
 12615 0ec6 EF0E0000 		.4byte	0xeef
 12616 0eca 15       		.uleb128 0x15
 12617 0ecb 6A00     		.ascii	"j\000"
 12618 0ecd 01       		.byte	0x1
 12619 0ece 8C07     		.2byte	0x78c
 12620 0ed0 9F000000 		.4byte	0x9f
 12621 0ed4 02       		.uleb128 0x2
 12622 0ed5 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 267


 12623 0ed6 64       		.sleb128 -28
 12624 0ed7 16       		.uleb128 0x16
 12625 0ed8 82010000 		.4byte	.LBB60
 12626 0edc 76000000 		.4byte	.LBE60-.LBB60
 12627 0ee0 15       		.uleb128 0x15
 12628 0ee1 6B00     		.ascii	"k\000"
 12629 0ee3 01       		.byte	0x1
 12630 0ee4 8E07     		.2byte	0x78e
 12631 0ee6 9F000000 		.4byte	0x9f
 12632 0eea 02       		.uleb128 0x2
 12633 0eeb 91       		.byte	0x91
 12634 0eec 60       		.sleb128 -32
 12635 0eed 00       		.byte	0
 12636 0eee 00       		.byte	0
 12637 0eef 14       		.uleb128 0x14
 12638 0ef0 04020000 		.4byte	.LBB61
 12639 0ef4 8C000000 		.4byte	.LBE61-.LBB61
 12640 0ef8 210F0000 		.4byte	0xf21
 12641 0efc 15       		.uleb128 0x15
 12642 0efd 6A00     		.ascii	"j\000"
 12643 0eff 01       		.byte	0x1
 12644 0f00 9607     		.2byte	0x796
 12645 0f02 9F000000 		.4byte	0x9f
 12646 0f06 02       		.uleb128 0x2
 12647 0f07 91       		.byte	0x91
 12648 0f08 5C       		.sleb128 -36
 12649 0f09 16       		.uleb128 0x16
 12650 0f0a 0A020000 		.4byte	.LBB62
 12651 0f0e 7A000000 		.4byte	.LBE62-.LBB62
 12652 0f12 15       		.uleb128 0x15
 12653 0f13 6B00     		.ascii	"k\000"
 12654 0f15 01       		.byte	0x1
 12655 0f16 9807     		.2byte	0x798
 12656 0f18 9F000000 		.4byte	0x9f
 12657 0f1c 02       		.uleb128 0x2
 12658 0f1d 91       		.byte	0x91
 12659 0f1e 58       		.sleb128 -40
 12660 0f1f 00       		.byte	0
 12661 0f20 00       		.byte	0
 12662 0f21 14       		.uleb128 0x14
 12663 0f22 C0030000 		.4byte	.LBB63
 12664 0f26 46000000 		.4byte	.LBE63-.LBB63
 12665 0f2a 3F0F0000 		.4byte	0xf3f
 12666 0f2e 18       		.uleb128 0x18
 12667 0f2f 76020000 		.4byte	.LASF143
 12668 0f33 01       		.byte	0x1
 12669 0f34 B907     		.2byte	0x7b9
 12670 0f36 CE000000 		.4byte	0xce
 12671 0f3a 03       		.uleb128 0x3
 12672 0f3b 91       		.byte	0x91
 12673 0f3c BA7F     		.sleb128 -70
 12674 0f3e 00       		.byte	0
 12675 0f3f 16       		.uleb128 0x16
 12676 0f40 40060000 		.4byte	.LBB64
 12677 0f44 48000000 		.4byte	.LBE64-.LBB64
 12678 0f48 18       		.uleb128 0x18
 12679 0f49 76020000 		.4byte	.LASF143
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 268


 12680 0f4d 01       		.byte	0x1
 12681 0f4e F507     		.2byte	0x7f5
 12682 0f50 C3000000 		.4byte	0xc3
 12683 0f54 03       		.uleb128 0x3
 12684 0f55 91       		.byte	0x91
 12685 0f56 B87F     		.sleb128 -72
 12686 0f58 00       		.byte	0
 12687 0f59 00       		.byte	0
 12688 0f5a 14       		.uleb128 0x14
 12689 0f5b 7C070000 		.4byte	.LBB65
 12690 0f5f 78030000 		.4byte	.LBE65-.LBB65
 12691 0f63 58100000 		.4byte	0x1058
 12692 0f67 18       		.uleb128 0x18
 12693 0f68 1A110000 		.4byte	.LASF144
 12694 0f6c 01       		.byte	0x1
 12695 0f6d 4F08     		.2byte	0x84f
 12696 0f6f B8000000 		.4byte	0xb8
 12697 0f73 02       		.uleb128 0x2
 12698 0f74 91       		.byte	0x91
 12699 0f75 57       		.sleb128 -41
 12700 0f76 18       		.uleb128 0x18
 12701 0f77 8E020000 		.4byte	.LASF140
 12702 0f7b 01       		.byte	0x1
 12703 0f7c 6308     		.2byte	0x863
 12704 0f7e 97020000 		.4byte	0x297
 12705 0f82 03       		.uleb128 0x3
 12706 0f83 91       		.byte	0x91
 12707 0f84 947F     		.sleb128 -108
 12708 0f86 15       		.uleb128 0x15
 12709 0f87 6900     		.ascii	"i\000"
 12710 0f89 01       		.byte	0x1
 12711 0f8a 6408     		.2byte	0x864
 12712 0f8c E4000000 		.4byte	0xe4
 12713 0f90 02       		.uleb128 0x2
 12714 0f91 91       		.byte	0x91
 12715 0f92 50       		.sleb128 -48
 12716 0f93 18       		.uleb128 0x18
 12717 0f94 BC0C0000 		.4byte	.LASF141
 12718 0f98 01       		.byte	0x1
 12719 0f99 6608     		.2byte	0x866
 12720 0f9b B8000000 		.4byte	0xb8
 12721 0f9f 03       		.uleb128 0x3
 12722 0fa0 91       		.byte	0x91
 12723 0fa1 B77F     		.sleb128 -73
 12724 0fa3 14       		.uleb128 0x14
 12725 0fa4 4C080000 		.4byte	.LBB66
 12726 0fa8 92000000 		.4byte	.LBE66-.LBB66
 12727 0fac C10F0000 		.4byte	0xfc1
 12728 0fb0 18       		.uleb128 0x18
 12729 0fb1 74110000 		.4byte	.LASF145
 12730 0fb5 01       		.byte	0x1
 12731 0fb6 6A08     		.2byte	0x86a
 12732 0fb8 B8000000 		.4byte	0xb8
 12733 0fbc 03       		.uleb128 0x3
 12734 0fbd 91       		.byte	0x91
 12735 0fbe B67F     		.sleb128 -74
 12736 0fc0 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 269


 12737 0fc1 16       		.uleb128 0x16
 12738 0fc2 F6080000 		.4byte	.LBB67
 12739 0fc6 84010000 		.4byte	.LBE67-.LBB67
 12740 0fca 18       		.uleb128 0x18
 12741 0fcb A3120000 		.4byte	.LASF146
 12742 0fcf 01       		.byte	0x1
 12743 0fd0 7908     		.2byte	0x879
 12744 0fd2 E4000000 		.4byte	0xe4
 12745 0fd6 02       		.uleb128 0x2
 12746 0fd7 91       		.byte	0x91
 12747 0fd8 4C       		.sleb128 -52
 12748 0fd9 16       		.uleb128 0x16
 12749 0fda FC080000 		.4byte	.LBB68
 12750 0fde 70010000 		.4byte	.LBE68-.LBB68
 12751 0fe2 18       		.uleb128 0x18
 12752 0fe3 3F050000 		.4byte	.LASF80
 12753 0fe7 01       		.byte	0x1
 12754 0fe8 7B08     		.2byte	0x87b
 12755 0fea CE000000 		.4byte	0xce
 12756 0fee 03       		.uleb128 0x3
 12757 0fef 91       		.byte	0x91
 12758 0ff0 B47F     		.sleb128 -76
 12759 0ff2 16       		.uleb128 0x16
 12760 0ff3 0A090000 		.4byte	.LBB69
 12761 0ff7 62010000 		.4byte	.LBE69-.LBB69
 12762 0ffb 18       		.uleb128 0x18
 12763 0ffc 1C070000 		.4byte	.LASF147
 12764 1000 01       		.byte	0x1
 12765 1001 7C08     		.2byte	0x87c
 12766 1003 E4000000 		.4byte	0xe4
 12767 1007 02       		.uleb128 0x2
 12768 1008 91       		.byte	0x91
 12769 1009 48       		.sleb128 -56
 12770 100a 16       		.uleb128 0x16
 12771 100b 8A090000 		.4byte	.LBB70
 12772 100f C4000000 		.4byte	.LBE70-.LBB70
 12773 1013 18       		.uleb128 0x18
 12774 1014 E2040000 		.4byte	.LASF148
 12775 1018 01       		.byte	0x1
 12776 1019 8A08     		.2byte	0x88a
 12777 101b CE000000 		.4byte	0xce
 12778 101f 03       		.uleb128 0x3
 12779 1020 91       		.byte	0x91
 12780 1021 B27F     		.sleb128 -78
 12781 1023 18       		.uleb128 0x18
 12782 1024 E70F0000 		.4byte	.LASF149
 12783 1028 01       		.byte	0x1
 12784 1029 8B08     		.2byte	0x88b
 12785 102b B8000000 		.4byte	0xb8
 12786 102f 03       		.uleb128 0x3
 12787 1030 91       		.byte	0x91
 12788 1031 B17F     		.sleb128 -79
 12789 1033 18       		.uleb128 0x18
 12790 1034 6B010000 		.4byte	.LASF150
 12791 1038 01       		.byte	0x1
 12792 1039 8C08     		.2byte	0x88c
 12793 103b B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 270


 12794 103f 03       		.uleb128 0x3
 12795 1040 91       		.byte	0x91
 12796 1041 B07F     		.sleb128 -80
 12797 1043 18       		.uleb128 0x18
 12798 1044 53040000 		.4byte	.LASF81
 12799 1048 01       		.byte	0x1
 12800 1049 8F08     		.2byte	0x88f
 12801 104b CE000000 		.4byte	0xce
 12802 104f 03       		.uleb128 0x3
 12803 1050 91       		.byte	0x91
 12804 1051 AE7F     		.sleb128 -82
 12805 1053 00       		.byte	0
 12806 1054 00       		.byte	0
 12807 1055 00       		.byte	0
 12808 1056 00       		.byte	0
 12809 1057 00       		.byte	0
 12810 1058 14       		.uleb128 0x14
 12811 1059 080B0000 		.4byte	.LBB71
 12812 105d 4E010000 		.4byte	.LBE71-.LBB71
 12813 1061 A4100000 		.4byte	0x10a4
 12814 1065 18       		.uleb128 0x18
 12815 1066 8E020000 		.4byte	.LASF140
 12816 106a 01       		.byte	0x1
 12817 106b B408     		.2byte	0x8b4
 12818 106d 97020000 		.4byte	0x297
 12819 1071 03       		.uleb128 0x3
 12820 1072 91       		.byte	0x91
 12821 1073 907F     		.sleb128 -112
 12822 1075 15       		.uleb128 0x15
 12823 1076 6900     		.ascii	"i\000"
 12824 1078 01       		.byte	0x1
 12825 1079 B508     		.2byte	0x8b5
 12826 107b E4000000 		.4byte	0xe4
 12827 107f 03       		.uleb128 0x3
 12828 1080 91       		.byte	0x91
 12829 1081 A87F     		.sleb128 -88
 12830 1083 18       		.uleb128 0x18
 12831 1084 7E060000 		.4byte	.LASF151
 12832 1088 01       		.byte	0x1
 12833 1089 BE08     		.2byte	0x8be
 12834 108b CE000000 		.4byte	0xce
 12835 108f 03       		.uleb128 0x3
 12836 1090 91       		.byte	0x91
 12837 1091 A67F     		.sleb128 -90
 12838 1093 18       		.uleb128 0x18
 12839 1094 76020000 		.4byte	.LASF143
 12840 1098 01       		.byte	0x1
 12841 1099 CC08     		.2byte	0x8cc
 12842 109b CE000000 		.4byte	0xce
 12843 109f 03       		.uleb128 0x3
 12844 10a0 91       		.byte	0x91
 12845 10a1 A47F     		.sleb128 -92
 12846 10a3 00       		.byte	0
 12847 10a4 16       		.uleb128 0x16
 12848 10a5 900C0000 		.4byte	.LBB72
 12849 10a9 C8010000 		.4byte	.LBE72-.LBB72
 12850 10ad 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 271


 12851 10ae 8E020000 		.4byte	.LASF140
 12852 10b2 01       		.byte	0x1
 12853 10b3 D708     		.2byte	0x8d7
 12854 10b5 97020000 		.4byte	0x297
 12855 10b9 03       		.uleb128 0x3
 12856 10ba 91       		.byte	0x91
 12857 10bb 8C7F     		.sleb128 -116
 12858 10bd 15       		.uleb128 0x15
 12859 10be 6900     		.ascii	"i\000"
 12860 10c0 01       		.byte	0x1
 12861 10c1 D808     		.2byte	0x8d8
 12862 10c3 E4000000 		.4byte	0xe4
 12863 10c7 03       		.uleb128 0x3
 12864 10c8 91       		.byte	0x91
 12865 10c9 A07F     		.sleb128 -96
 12866 10cb 18       		.uleb128 0x18
 12867 10cc 7E060000 		.4byte	.LASF151
 12868 10d0 01       		.byte	0x1
 12869 10d1 E108     		.2byte	0x8e1
 12870 10d3 CE000000 		.4byte	0xce
 12871 10d7 03       		.uleb128 0x3
 12872 10d8 91       		.byte	0x91
 12873 10d9 9E7F     		.sleb128 -98
 12874 10db 16       		.uleb128 0x16
 12875 10dc FE0D0000 		.4byte	.LBB73
 12876 10e0 2C000000 		.4byte	.LBE73-.LBB73
 12877 10e4 18       		.uleb128 0x18
 12878 10e5 76020000 		.4byte	.LASF143
 12879 10e9 01       		.byte	0x1
 12880 10ea F908     		.2byte	0x8f9
 12881 10ec C3000000 		.4byte	0xc3
 12882 10f0 03       		.uleb128 0x3
 12883 10f1 91       		.byte	0x91
 12884 10f2 9C7F     		.sleb128 -100
 12885 10f4 00       		.byte	0
 12886 10f5 00       		.byte	0
 12887 10f6 00       		.byte	0
 12888 10f7 17       		.uleb128 0x17
 12889 10f8 80040000 		.4byte	.LASF152
 12890 10fc 01       		.byte	0x1
 12891 10fd 1509     		.2byte	0x915
 12892 10ff 00000000 		.4byte	.LFB92
 12893 1103 FC010000 		.4byte	.LFE92-.LFB92
 12894 1107 01       		.uleb128 0x1
 12895 1108 9C       		.byte	0x9c
 12896 1109 43110000 		.4byte	0x1143
 12897 110d 11       		.uleb128 0x11
 12898 110e F00D0000 		.4byte	.LASF153
 12899 1112 01       		.byte	0x1
 12900 1113 1509     		.2byte	0x915
 12901 1115 EF000000 		.4byte	0xef
 12902 1119 02       		.uleb128 0x2
 12903 111a 91       		.byte	0x91
 12904 111b 6F       		.sleb128 -17
 12905 111c 11       		.uleb128 0x11
 12906 111d 800F0000 		.4byte	.LASF154
 12907 1121 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 272


 12908 1122 1509     		.2byte	0x915
 12909 1124 43110000 		.4byte	0x1143
 12910 1128 02       		.uleb128 0x2
 12911 1129 91       		.byte	0x91
 12912 112a 68       		.sleb128 -24
 12913 112b 16       		.uleb128 0x16
 12914 112c 4C000000 		.4byte	.LBB74
 12915 1130 62000000 		.4byte	.LBE74-.LBB74
 12916 1134 15       		.uleb128 0x15
 12917 1135 6900     		.ascii	"i\000"
 12918 1137 01       		.byte	0x1
 12919 1138 2109     		.2byte	0x921
 12920 113a 9F000000 		.4byte	0x9f
 12921 113e 02       		.uleb128 0x2
 12922 113f 91       		.byte	0x91
 12923 1140 74       		.sleb128 -12
 12924 1141 00       		.byte	0
 12925 1142 00       		.byte	0
 12926 1143 1C       		.uleb128 0x1c
 12927 1144 04       		.byte	0x4
 12928 1145 EF000000 		.4byte	0xef
 12929 1149 0B       		.uleb128 0xb
 12930 114a EF000000 		.4byte	0xef
 12931 114e 59110000 		.4byte	0x1159
 12932 1152 0C       		.uleb128 0xc
 12933 1153 4C010000 		.4byte	0x14c
 12934 1157 01       		.byte	0x1
 12935 1158 00       		.byte	0
 12936 1159 1D       		.uleb128 0x1d
 12937 115a E4050000 		.4byte	.LASF155
 12938 115e 01       		.byte	0x1
 12939 115f B8       		.byte	0xb8
 12940 1160 49110000 		.4byte	0x1149
 12941 1164 05       		.uleb128 0x5
 12942 1165 03       		.byte	0x3
 12943 1166 88000000 		.4byte	eepromArray
 12944 116a 1E       		.uleb128 0x1e
 12945 116b 01130000 		.4byte	.LASF156
 12946 116f 09       		.byte	0x9
 12947 1170 F3       		.byte	0xf3
 12948 1171 40010000 		.4byte	0x140
 12949 1175 1E       		.uleb128 0x1e
 12950 1176 F3130000 		.4byte	.LASF157
 12951 117a 09       		.byte	0x9
 12952 117b F9       		.byte	0xf9
 12953 117c 40010000 		.4byte	0x140
 12954 1180 0B       		.uleb128 0xb
 12955 1181 EF000000 		.4byte	0xef
 12956 1185 90110000 		.4byte	0x1190
 12957 1189 0C       		.uleb128 0xc
 12958 118a 4C010000 		.4byte	0x14c
 12959 118e 3F       		.byte	0x3f
 12960 118f 00       		.byte	0
 12961 1190 1E       		.uleb128 0x1e
 12962 1191 430B0000 		.4byte	.LASF158
 12963 1195 09       		.byte	0x9
 12964 1196 FA       		.byte	0xfa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 273


 12965 1197 80110000 		.4byte	0x1180
 12966 119b 1E       		.uleb128 0x1e
 12967 119c 96060000 		.4byte	.LASF159
 12968 11a0 09       		.byte	0x9
 12969 11a1 FE       		.byte	0xfe
 12970 11a2 40010000 		.4byte	0x140
 12971 11a6 1E       		.uleb128 0x1e
 12972 11a7 45130000 		.4byte	.LASF160
 12973 11ab 09       		.byte	0x9
 12974 11ac FF       		.byte	0xff
 12975 11ad 80110000 		.4byte	0x1180
 12976 11b1 1E       		.uleb128 0x1e
 12977 11b2 D1000000 		.4byte	.LASF161
 12978 11b6 0A       		.byte	0xa
 12979 11b7 82       		.byte	0x82
 12980 11b8 C5010000 		.4byte	0x1c5
 12981 11bc 0B       		.uleb128 0xb
 12982 11bd CD110000 		.4byte	0x11cd
 12983 11c1 CD110000 		.4byte	0x11cd
 12984 11c5 1F       		.uleb128 0x1f
 12985 11c6 4C010000 		.4byte	0x14c
 12986 11ca FF03     		.2byte	0x3ff
 12987 11cc 00       		.byte	0
 12988 11cd 20       		.uleb128 0x20
 12989 11ce B8000000 		.4byte	0xb8
 12990 11d2 21       		.uleb128 0x21
 12991 11d3 B8090000 		.4byte	.LASF162
 12992 11d7 01       		.byte	0x1
 12993 11d8 C1       		.byte	0xc1
 12994 11d9 E3110000 		.4byte	0x11e3
 12995 11dd 05       		.uleb128 0x5
 12996 11de 03       		.byte	0x3
 12997 11df 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 12998 11e3 20       		.uleb128 0x20
 12999 11e4 BC110000 		.4byte	0x11bc
 13000 11e8 1E       		.uleb128 0x1e
 13001 11e9 BC070000 		.4byte	.LASF163
 13002 11ed 0B       		.byte	0xb
 13003 11ee F9       		.byte	0xf9
 13004 11ef EF000000 		.4byte	0xef
 13005 11f3 22       		.uleb128 0x22
 13006 11f4 380D0000 		.4byte	.LASF164
 13007 11f8 0C       		.byte	0xc
 13008 11f9 1207     		.2byte	0x712
 13009 11fb FF110000 		.4byte	0x11ff
 13010 11ff 06       		.uleb128 0x6
 13011 1200 D9000000 		.4byte	0xd9
 13012 1204 21       		.uleb128 0x21
 13013 1205 0A0A0000 		.4byte	.LASF165
 13014 1209 0D       		.byte	0xd
 13015 120a 41       		.byte	0x41
 13016 120b EF000000 		.4byte	0xef
 13017 120f 05       		.uleb128 0x5
 13018 1210 03       		.byte	0x3
 13019 1211 00000000 		.4byte	Decoder_1_Enabled
 13020 1215 0B       		.uleb128 0xb
 13021 1216 0E020000 		.4byte	0x20e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 274


 13022 121a 25120000 		.4byte	0x1225
 13023 121e 0C       		.uleb128 0xc
 13024 121f 4C010000 		.4byte	0x14c
 13025 1223 FF       		.byte	0xff
 13026 1224 00       		.byte	0
 13027 1225 21       		.uleb128 0x21
 13028 1226 4E010000 		.4byte	.LASF166
 13029 122a 01       		.byte	0x1
 13030 122b CB       		.byte	0xcb
 13031 122c 36120000 		.4byte	0x1236
 13032 1230 05       		.uleb128 0x5
 13033 1231 03       		.byte	0x3
 13034 1232 00000000 		.4byte	I2Cbuff1
 13035 1236 06       		.uleb128 0x6
 13036 1237 15120000 		.4byte	0x1215
 13037 123b 21       		.uleb128 0x21
 13038 123c 79010000 		.4byte	.LASF167
 13039 1240 01       		.byte	0x1
 13040 1241 69       		.byte	0x69
 13041 1242 9F000000 		.4byte	0x9f
 13042 1246 05       		.uleb128 0x5
 13043 1247 03       		.byte	0x3
 13044 1248 00000000 		.4byte	octave
 13045 124c 23       		.uleb128 0x23
 13046 124d B20F0000 		.4byte	.LASF168
 13047 1251 01       		.byte	0x1
 13048 1252 1901     		.2byte	0x119
 13049 1254 B8000000 		.4byte	0xb8
 13050 1258 05       		.uleb128 0x5
 13051 1259 03       		.byte	0x3
 13052 125a 00000000 		.4byte	currentNeck
 13053 125e 21       		.uleb128 0x21
 13054 125f CA070000 		.4byte	.LASF169
 13055 1263 01       		.byte	0x1
 13056 1264 74       		.byte	0x74
 13057 1265 B8000000 		.4byte	0xb8
 13058 1269 05       		.uleb128 0x5
 13059 126a 03       		.byte	0x3
 13060 126b 00000000 		.4byte	currentCopedent
 13061 126f 21       		.uleb128 0x21
 13062 1270 06060000 		.4byte	.LASF170
 13063 1274 01       		.byte	0x1
 13064 1275 FF       		.byte	0xff
 13065 1276 B8000000 		.4byte	0xb8
 13066 127a 05       		.uleb128 0x5
 13067 127b 03       		.byte	0x3
 13068 127c 00000000 		.4byte	traditionalPedalAdd
 13069 1280 23       		.uleb128 0x23
 13070 1281 33030000 		.4byte	.LASF171
 13071 1285 01       		.byte	0x1
 13072 1286 1401     		.2byte	0x114
 13073 1288 B8000000 		.4byte	0xb8
 13074 128c 05       		.uleb128 0x5
 13075 128d 03       		.byte	0x3
 13076 128e 00000000 		.4byte	mainOLEDWaitingToSend
 13077 1292 21       		.uleb128 0x21
 13078 1293 8D010000 		.4byte	.LASF172
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 275


 13079 1297 01       		.byte	0x1
 13080 1298 34       		.byte	0x34
 13081 1299 B8000000 		.4byte	0xb8
 13082 129d 05       		.uleb128 0x5
 13083 129e 03       		.byte	0x3
 13084 129f 00000000 		.4byte	volumeWaitingToSend
 13085 12a3 23       		.uleb128 0x23
 13086 12a4 D2010000 		.4byte	.LASF173
 13087 12a8 01       		.byte	0x1
 13088 12a9 1501     		.2byte	0x115
 13089 12ab B8000000 		.4byte	0xb8
 13090 12af 05       		.uleb128 0x5
 13091 12b0 03       		.byte	0x3
 13092 12b1 00000000 		.4byte	macroOLEDWaitingToSend
 13093 12b5 23       		.uleb128 0x23
 13094 12b6 78120000 		.4byte	.LASF174
 13095 12ba 01       		.byte	0x1
 13096 12bb 1A01     		.2byte	0x11a
 13097 12bd B8000000 		.4byte	0xb8
 13098 12c1 05       		.uleb128 0x5
 13099 12c2 03       		.byte	0x3
 13100 12c3 00000000 		.4byte	neckByte
 13101 12c7 0B       		.uleb128 0xb
 13102 12c8 B8000000 		.4byte	0xb8
 13103 12cc D7120000 		.4byte	0x12d7
 13104 12d0 0C       		.uleb128 0xc
 13105 12d1 4C010000 		.4byte	0x14c
 13106 12d5 01       		.byte	0x1
 13107 12d6 00       		.byte	0
 13108 12d7 21       		.uleb128 0x21
 13109 12d8 73010000 		.4byte	.LASF175
 13110 12dc 01       		.byte	0x1
 13111 12dd 75       		.byte	0x75
 13112 12de C7120000 		.4byte	0x12c7
 13113 12e2 05       		.uleb128 0x5
 13114 12e3 03       		.byte	0x3
 13115 12e4 00000000 		.4byte	necks
 13116 12e8 23       		.uleb128 0x23
 13117 12e9 BE0F0000 		.4byte	.LASF176
 13118 12ed 01       		.byte	0x1
 13119 12ee 1C01     		.2byte	0x11c
 13120 12f0 B8000000 		.4byte	0xb8
 13121 12f4 05       		.uleb128 0x5
 13122 12f5 03       		.byte	0x3
 13123 12f6 00000000 		.4byte	editMode
 13124 12fa 0B       		.uleb128 0xb
 13125 12fb B8000000 		.4byte	0xb8
 13126 12ff 16130000 		.4byte	0x1316
 13127 1303 0C       		.uleb128 0xc
 13128 1304 4C010000 		.4byte	0x14c
 13129 1308 3F       		.byte	0x3f
 13130 1309 0C       		.uleb128 0xc
 13131 130a 4C010000 		.4byte	0x14c
 13132 130e 0F       		.byte	0xf
 13133 130f 0C       		.uleb128 0xc
 13134 1310 4C010000 		.4byte	0x14c
 13135 1314 08       		.byte	0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 276


 13136 1315 00       		.byte	0
 13137 1316 21       		.uleb128 0x21
 13138 1317 88000000 		.4byte	.LASF177
 13139 131b 01       		.byte	0x1
 13140 131c EE       		.byte	0xee
 13141 131d FA120000 		.4byte	0x12fa
 13142 1321 05       		.uleb128 0x5
 13143 1322 03       		.byte	0x3
 13144 1323 00000000 		.4byte	macroNamesArray
 13145 1327 0B       		.uleb128 0xb
 13146 1328 B8000000 		.4byte	0xb8
 13147 132c 43130000 		.4byte	0x1343
 13148 1330 0C       		.uleb128 0xc
 13149 1331 4C010000 		.4byte	0x14c
 13150 1335 3F       		.byte	0x3f
 13151 1336 0C       		.uleb128 0xc
 13152 1337 4C010000 		.4byte	0x14c
 13153 133b 03       		.byte	0x3
 13154 133c 0C       		.uleb128 0xc
 13155 133d 4C010000 		.4byte	0x14c
 13156 1341 09       		.byte	0x9
 13157 1342 00       		.byte	0
 13158 1343 21       		.uleb128 0x21
 13159 1344 FF000000 		.4byte	.LASF178
 13160 1348 01       		.byte	0x1
 13161 1349 EF       		.byte	0xef
 13162 134a 27130000 		.4byte	0x1327
 13163 134e 05       		.uleb128 0x5
 13164 134f 03       		.byte	0x3
 13165 1350 00000000 		.4byte	controlNamesArray
 13166 1354 21       		.uleb128 0x21
 13167 1355 8E110000 		.4byte	.LASF179
 13168 1359 01       		.byte	0x1
 13169 135a FB       		.byte	0xfb
 13170 135b B8000000 		.4byte	0xb8
 13171 135f 05       		.uleb128 0x5
 13172 1360 03       		.byte	0x3
 13173 1361 00000000 		.4byte	patchNum
 13174 1365 21       		.uleb128 0x21
 13175 1366 F40A0000 		.4byte	.LASF180
 13176 136a 01       		.byte	0x1
 13177 136b E9       		.byte	0xe9
 13178 136c B8000000 		.4byte	0xb8
 13179 1370 05       		.uleb128 0x5
 13180 1371 03       		.byte	0x3
 13181 1372 00000000 		.4byte	currentPresetSelection
 13182 1376 0B       		.uleb128 0xb
 13183 1377 B8000000 		.4byte	0xb8
 13184 137b 8C130000 		.4byte	0x138c
 13185 137f 0C       		.uleb128 0xc
 13186 1380 4C010000 		.4byte	0x14c
 13187 1384 3F       		.byte	0x3f
 13188 1385 0C       		.uleb128 0xc
 13189 1386 4C010000 		.4byte	0x14c
 13190 138a 0D       		.byte	0xd
 13191 138b 00       		.byte	0
 13192 138c 21       		.uleb128 0x21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 277


 13193 138d 9B030000 		.4byte	.LASF181
 13194 1391 01       		.byte	0x1
 13195 1392 EA       		.byte	0xea
 13196 1393 76130000 		.4byte	0x1376
 13197 1397 05       		.uleb128 0x5
 13198 1398 03       		.byte	0x3
 13199 1399 00000000 		.4byte	presetNamesArray
 13200 139d 21       		.uleb128 0x21
 13201 139e FB020000 		.4byte	.LASF182
 13202 13a2 01       		.byte	0x1
 13203 13a3 EB       		.byte	0xeb
 13204 13a4 B8000000 		.4byte	0xb8
 13205 13a8 05       		.uleb128 0x5
 13206 13a9 03       		.byte	0x3
 13207 13aa 00000000 		.4byte	presetNumberToLoad
 13208 13ae 0B       		.uleb128 0xb
 13209 13af B8000000 		.4byte	0xb8
 13210 13b3 C4130000 		.4byte	0x13c4
 13211 13b7 0C       		.uleb128 0xc
 13212 13b8 4C010000 		.4byte	0x14c
 13213 13bc 06       		.byte	0x6
 13214 13bd 0C       		.uleb128 0xc
 13215 13be 4C010000 		.4byte	0x14c
 13216 13c2 09       		.byte	0x9
 13217 13c3 00       		.byte	0
 13218 13c4 23       		.uleb128 0x23
 13219 13c5 FC010000 		.4byte	.LASF183
 13220 13c9 01       		.byte	0x1
 13221 13ca 0201     		.2byte	0x102
 13222 13cc AE130000 		.4byte	0x13ae
 13223 13d0 05       		.uleb128 0x5
 13224 13d1 03       		.byte	0x3
 13225 13d2 00000000 		.4byte	copedentNamesArray
 13226 13d6 0B       		.uleb128 0xb
 13227 13d7 B8000000 		.4byte	0xb8
 13228 13db E6130000 		.4byte	0x13e6
 13229 13df 0C       		.uleb128 0xc
 13230 13e0 4C010000 		.4byte	0x14c
 13231 13e4 3F       		.byte	0x3f
 13232 13e5 00       		.byte	0
 13233 13e6 23       		.uleb128 0x23
 13234 13e7 B1050000 		.4byte	.LASF184
 13235 13eb 01       		.byte	0x1
 13236 13ec 1701     		.2byte	0x117
 13237 13ee D6130000 		.4byte	0x13d6
 13238 13f2 05       		.uleb128 0x5
 13239 13f3 03       		.byte	0x3
 13240 13f4 00000000 		.4byte	presetAlreadyDisplayed
 13241 13f8 21       		.uleb128 0x21
 13242 13f9 2F080000 		.4byte	.LASF185
 13243 13fd 01       		.byte	0x1
 13244 13fe AF       		.byte	0xaf
 13245 13ff B8000000 		.4byte	0xb8
 13246 1403 05       		.uleb128 0x5
 13247 1404 03       		.byte	0x3
 13248 1405 00000000 		.4byte	whichMacro
 13249 1409 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 278


 13250 140a 06110000 		.4byte	.LASF186
 13251 140e 01       		.byte	0x1
 13252 140f 1E01     		.2byte	0x11e
 13253 1411 B8000000 		.4byte	0xb8
 13254 1415 05       		.uleb128 0x5
 13255 1416 03       		.byte	0x3
 13256 1417 00000000 		.4byte	fretCalibrationMode
 13257 141b 23       		.uleb128 0x23
 13258 141c DE130000 		.4byte	.LASF187
 13259 1420 01       		.byte	0x1
 13260 1421 1D01     		.2byte	0x11d
 13261 1423 B8000000 		.4byte	0xb8
 13262 1427 05       		.uleb128 0x5
 13263 1428 03       		.byte	0x3
 13264 1429 00000000 		.4byte	leverCalibrationMode
 13265 142d 0B       		.uleb128 0xb
 13266 142e CE000000 		.4byte	0xce
 13267 1432 43140000 		.4byte	0x1443
 13268 1436 0C       		.uleb128 0xc
 13269 1437 4C010000 		.4byte	0x14c
 13270 143b 01       		.byte	0x1
 13271 143c 0C       		.uleb128 0xc
 13272 143d 4C010000 		.4byte	0x14c
 13273 1441 0B       		.byte	0xb
 13274 1442 00       		.byte	0
 13275 1443 21       		.uleb128 0x21
 13276 1444 54120000 		.4byte	.LASF188
 13277 1448 01       		.byte	0x1
 13278 1449 E5       		.byte	0xe5
 13279 144a 2D140000 		.4byte	0x142d
 13280 144e 05       		.uleb128 0x5
 13281 144f 03       		.byte	0x3
 13282 1450 00000000 		.4byte	fretMeasurements
 13283 1454 0B       		.uleb128 0xb
 13284 1455 CE000000 		.4byte	0xce
 13285 1459 64140000 		.4byte	0x1464
 13286 145d 0C       		.uleb128 0xc
 13287 145e 4C010000 		.4byte	0x14c
 13288 1462 09       		.byte	0x9
 13289 1463 00       		.byte	0
 13290 1464 21       		.uleb128 0x21
 13291 1465 13120000 		.4byte	.LASF189
 13292 1469 01       		.byte	0x1
 13293 146a D5       		.byte	0xd5
 13294 146b 54140000 		.4byte	0x1454
 13295 146f 05       		.uleb128 0x5
 13296 1470 03       		.byte	0x3
 13297 1471 00000000 		.4byte	pedals_low
 13298 1475 21       		.uleb128 0x21
 13299 1476 E9010000 		.4byte	.LASF190
 13300 147a 01       		.byte	0x1
 13301 147b D6       		.byte	0xd6
 13302 147c 54140000 		.4byte	0x1454
 13303 1480 05       		.uleb128 0x5
 13304 1481 03       		.byte	0x3
 13305 1482 00000000 		.4byte	pedals_high
 13306 1486 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 279


 13307 1487 B8000000 		.4byte	0xb8
 13308 148b 96140000 		.4byte	0x1496
 13309 148f 0C       		.uleb128 0xc
 13310 1490 4C010000 		.4byte	0x14c
 13311 1494 09       		.byte	0x9
 13312 1495 00       		.byte	0
 13313 1496 21       		.uleb128 0x21
 13314 1497 BA060000 		.4byte	.LASF191
 13315 149b 01       		.byte	0x1
 13316 149c FD       		.byte	0xfd
 13317 149d 86140000 		.4byte	0x1486
 13318 14a1 05       		.uleb128 0x5
 13319 14a2 03       		.byte	0x3
 13320 14a3 00000000 		.4byte	pedal_inverted
 13321 14a7 21       		.uleb128 0x21
 13322 14a8 B00A0000 		.4byte	.LASF192
 13323 14ac 01       		.byte	0x1
 13324 14ad 6A       		.byte	0x6a
 13325 14ae 54140000 		.4byte	0x1454
 13326 14b2 05       		.uleb128 0x5
 13327 14b3 03       		.byte	0x3
 13328 14b4 00000000 		.4byte	angle
 13329 14b8 0B       		.uleb128 0xb
 13330 14b9 13020000 		.4byte	0x213
 13331 14bd C8140000 		.4byte	0x14c8
 13332 14c1 0C       		.uleb128 0xc
 13333 14c2 4C010000 		.4byte	0x14c
 13334 14c6 01       		.byte	0x1
 13335 14c7 00       		.byte	0
 13336 14c8 24       		.uleb128 0x24
 13337 14c9 62617200 		.ascii	"bar\000"
 13338 14cd 01       		.byte	0x1
 13339 14ce 88       		.byte	0x88
 13340 14cf D9140000 		.4byte	0x14d9
 13341 14d3 05       		.uleb128 0x5
 13342 14d4 03       		.byte	0x3
 13343 14d5 00000000 		.4byte	bar
 13344 14d9 06       		.uleb128 0x6
 13345 14da B8140000 		.4byte	0x14b8
 13346 14de 21       		.uleb128 0x21
 13347 14df C6100000 		.4byte	.LASF193
 13348 14e3 01       		.byte	0x1
 13349 14e4 30       		.byte	0x30
 13350 14e5 AD000000 		.4byte	0xad
 13351 14e9 05       		.uleb128 0x5
 13352 14ea 03       		.byte	0x3
 13353 14eb 00000000 		.4byte	transposeSemitones
 13354 14ef 21       		.uleb128 0x21
 13355 14f0 85070000 		.4byte	.LASF194
 13356 14f4 01       		.byte	0x1
 13357 14f5 31       		.byte	0x31
 13358 14f6 AD000000 		.4byte	0xad
 13359 14fa 05       		.uleb128 0x5
 13360 14fb 03       		.byte	0x3
 13361 14fc 00000000 		.4byte	transposeCents
 13362 1500 21       		.uleb128 0x21
 13363 1501 06150000 		.4byte	.LASF195
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 280


 13364 1505 01       		.byte	0x1
 13365 1506 32       		.byte	0x32
 13366 1507 13010000 		.4byte	0x113
 13367 150b 05       		.uleb128 0x5
 13368 150c 03       		.byte	0x3
 13369 150d 00000000 		.4byte	transposeFloat
 13370 1511 21       		.uleb128 0x21
 13371 1512 750A0000 		.4byte	.LASF196
 13372 1516 01       		.byte	0x1
 13373 1517 33       		.byte	0x33
 13374 1518 AD000000 		.4byte	0xad
 13375 151c 05       		.uleb128 0x5
 13376 151d 03       		.byte	0x3
 13377 151e 00000000 		.4byte	volumeInt
 13378 1522 21       		.uleb128 0x21
 13379 1523 2E120000 		.4byte	.LASF197
 13380 1527 01       		.byte	0x1
 13381 1528 8E       		.byte	0x8e
 13382 1529 9F000000 		.4byte	0x9f
 13383 152d 05       		.uleb128 0x5
 13384 152e 03       		.byte	0x3
 13385 152f 00000000 		.4byte	prevOctave
 13386 1533 21       		.uleb128 0x21
 13387 1534 280C0000 		.4byte	.LASF198
 13388 1538 01       		.byte	0x1
 13389 1539 F8       		.byte	0xf8
 13390 153a B8000000 		.4byte	0xb8
 13391 153e 05       		.uleb128 0x5
 13392 153f 03       		.byte	0x3
 13393 1540 00000000 		.4byte	dualSlider
 13394 1544 21       		.uleb128 0x21
 13395 1545 040E0000 		.4byte	.LASF199
 13396 1549 01       		.byte	0x1
 13397 154a D9       		.byte	0xd9
 13398 154b B8000000 		.4byte	0xb8
 13399 154f 05       		.uleb128 0x5
 13400 1550 03       		.byte	0x3
 13401 1551 00000000 		.4byte	deadZone
 13402 1555 21       		.uleb128 0x21
 13403 1556 960C0000 		.4byte	.LASF200
 13404 155a 01       		.byte	0x1
 13405 155b 3B       		.byte	0x3b
 13406 155c C7120000 		.4byte	0x12c7
 13407 1560 05       		.uleb128 0x5
 13408 1561 03       		.byte	0x3
 13409 1562 00000000 		.4byte	stringRepresentation
 13410 1566 21       		.uleb128 0x21
 13411 1567 1E140000 		.4byte	.LASF201
 13412 156b 01       		.byte	0x1
 13413 156c 3A       		.byte	0x3a
 13414 156d B8000000 		.4byte	0xb8
 13415 1571 05       		.uleb128 0x5
 13416 1572 03       		.byte	0x3
 13417 1573 00000000 		.4byte	octaveAction
 13418 1577 21       		.uleb128 0x21
 13419 1578 180D0000 		.4byte	.LASF202
 13420 157c 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 281


 13421 157d 35       		.byte	0x35
 13422 157e B8000000 		.4byte	0xb8
 13423 1582 05       		.uleb128 0x5
 13424 1583 03       		.byte	0x3
 13425 1584 00000000 		.4byte	midiSendOn
 13426 1588 21       		.uleb128 0x21
 13427 1589 33040000 		.4byte	.LASF203
 13428 158d 01       		.byte	0x1
 13429 158e 36       		.byte	0x36
 13430 158f B8000000 		.4byte	0xb8
 13431 1593 05       		.uleb128 0x5
 13432 1594 03       		.byte	0x3
 13433 1595 00000000 		.4byte	midiBarSendOn
 13434 1599 21       		.uleb128 0x21
 13435 159a 0B050000 		.4byte	.LASF204
 13436 159e 01       		.byte	0x1
 13437 159f 37       		.byte	0x37
 13438 15a0 B8000000 		.4byte	0xb8
 13439 15a4 05       		.uleb128 0x5
 13440 15a5 03       		.byte	0x3
 13441 15a6 00000000 		.4byte	midiDebugSendOn
 13442 15aa 21       		.uleb128 0x21
 13443 15ab 1A060000 		.4byte	.LASF205
 13444 15af 01       		.byte	0x1
 13445 15b0 54       		.byte	0x54
 13446 15b1 B8000000 		.4byte	0xb8
 13447 15b5 05       		.uleb128 0x5
 13448 15b6 03       		.byte	0x3
 13449 15b7 00000000 		.4byte	sendFirmwareUpdateRequest
 13450 15bb 0B       		.uleb128 0xb
 13451 15bc B8000000 		.4byte	0xb8
 13452 15c0 CB150000 		.4byte	0x15cb
 13453 15c4 0C       		.uleb128 0xc
 13454 15c5 4C010000 		.4byte	0x14c
 13455 15c9 0F       		.byte	0xf
 13456 15ca 00       		.byte	0
 13457 15cb 21       		.uleb128 0x21
 13458 15cc 29070000 		.4byte	.LASF206
 13459 15d0 01       		.byte	0x1
 13460 15d1 B4       		.byte	0xb4
 13461 15d2 BB150000 		.4byte	0x15bb
 13462 15d6 05       		.uleb128 0x5
 13463 15d7 03       		.byte	0x3
 13464 15d8 00000000 		.4byte	knobFrozen
 13465 15dc 0B       		.uleb128 0xb
 13466 15dd C3000000 		.4byte	0xc3
 13467 15e1 EC150000 		.4byte	0x15ec
 13468 15e5 0C       		.uleb128 0xc
 13469 15e6 4C010000 		.4byte	0x14c
 13470 15ea 0F       		.byte	0xf
 13471 15eb 00       		.byte	0
 13472 15ec 21       		.uleb128 0x21
 13473 15ed 9B040000 		.4byte	.LASF207
 13474 15f1 01       		.byte	0x1
 13475 15f2 B3       		.byte	0xb3
 13476 15f3 DC150000 		.4byte	0x15dc
 13477 15f7 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 282


 13478 15f8 03       		.byte	0x3
 13479 15f9 00000000 		.4byte	prevMacroKnobValues
 13480 15fd 21       		.uleb128 0x21
 13481 15fe 62140000 		.4byte	.LASF208
 13482 1602 01       		.byte	0x1
 13483 1603 2D       		.byte	0x2d
 13484 1604 AD000000 		.4byte	0xad
 13485 1608 05       		.uleb128 0x5
 13486 1609 03       		.byte	0x3
 13487 160a 00000000 		.4byte	presetNumberToStore
 13488 160e 21       		.uleb128 0x21
 13489 160f 98000000 		.4byte	.LASF209
 13490 1613 01       		.byte	0x1
 13491 1614 3F       		.byte	0x3f
 13492 1615 B8000000 		.4byte	0xb8
 13493 1619 05       		.uleb128 0x5
 13494 161a 03       		.byte	0x3
 13495 161b 00000000 		.4byte	sendLocalPresetStoreCommand
 13496 161f 0B       		.uleb128 0xb
 13497 1620 21010000 		.4byte	0x121
 13498 1624 2F160000 		.4byte	0x162f
 13499 1628 0C       		.uleb128 0xc
 13500 1629 4C010000 		.4byte	0x14c
 13501 162d 0D       		.byte	0xd
 13502 162e 00       		.byte	0
 13503 162f 1E       		.uleb128 0x1e
 13504 1630 E5030000 		.4byte	.LASF210
 13505 1634 08       		.byte	0x8
 13506 1635 8C       		.byte	0x8c
 13507 1636 1F160000 		.4byte	0x161f
 13508 163a 21       		.uleb128 0x21
 13509 163b E20B0000 		.4byte	.LASF211
 13510 163f 01       		.byte	0x1
 13511 1640 B6       		.byte	0xb6
 13512 1641 B8000000 		.4byte	0xb8
 13513 1645 05       		.uleb128 0x5
 13514 1646 03       		.byte	0x3
 13515 1647 00000000 		.4byte	knobPanelLightActive
 13516 164b 21       		.uleb128 0x21
 13517 164c 8D140000 		.4byte	.LASF212
 13518 1650 01       		.byte	0x1
 13519 1651 76       		.byte	0x76
 13520 1652 C7120000 		.4byte	0x12c7
 13521 1656 05       		.uleb128 0x5
 13522 1657 03       		.byte	0x3
 13523 1658 00000000 		.4byte	neckPreset
 13524 165c 21       		.uleb128 0x21
 13525 165d 080D0000 		.4byte	.LASF213
 13526 1661 01       		.byte	0x1
 13527 1662 77       		.byte	0x77
 13528 1663 B8000000 		.4byte	0xb8
 13529 1667 05       		.uleb128 0x5
 13530 1668 03       		.byte	0x3
 13531 1669 00000000 		.4byte	neckPresetsByte
 13532 166d 1E       		.uleb128 0x1e
 13533 166e E1140000 		.4byte	.LASF214
 13534 1672 0E       		.byte	0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 283


 13535 1673 12       		.byte	0x12
 13536 1674 B8000000 		.4byte	0xb8
 13537 1678 21       		.uleb128 0x21
 13538 1679 14030000 		.4byte	.LASF215
 13539 167d 01       		.byte	0x1
 13540 167e 0C       		.byte	0xc
 13541 167f 89160000 		.4byte	0x1689
 13542 1683 05       		.uleb128 0x5
 13543 1684 03       		.byte	0x3
 13544 1685 00000000 		.4byte	versionNumber
 13545 1689 20       		.uleb128 0x20
 13546 168a 13010000 		.4byte	0x113
 13547 168e 21       		.uleb128 0x21
 13548 168f 59110000 		.4byte	.LASF216
 13549 1693 01       		.byte	0x1
 13550 1694 0E       		.byte	0xe
 13551 1695 18020000 		.4byte	0x218
 13552 1699 05       		.uleb128 0x5
 13553 169a 03       		.byte	0x3
 13554 169b 00000000 		.4byte	prevLastBufferBegin
 13555 169f 21       		.uleb128 0x21
 13556 16a0 1C0A0000 		.4byte	.LASF217
 13557 16a4 01       		.byte	0x1
 13558 16a5 0F       		.byte	0xf
 13559 16a6 18020000 		.4byte	0x218
 13560 16aa 05       		.uleb128 0x5
 13561 16ab 03       		.byte	0x3
 13562 16ac 00000000 		.4byte	lastBufferBegin
 13563 16b0 21       		.uleb128 0x21
 13564 16b1 19020000 		.4byte	.LASF218
 13565 16b5 01       		.byte	0x1
 13566 16b6 10       		.byte	0x10
 13567 16b7 E4000000 		.4byte	0xe4
 13568 16bb 05       		.uleb128 0x5
 13569 16bc 03       		.byte	0x3
 13570 16bd 00000000 		.4byte	masterTimer
 13571 16c1 21       		.uleb128 0x21
 13572 16c2 7F0A0000 		.4byte	.LASF219
 13573 16c6 01       		.byte	0x1
 13574 16c7 11       		.byte	0x11
 13575 16c8 E4000000 		.4byte	0xe4
 13576 16cc 05       		.uleb128 0x5
 13577 16cd 03       		.byte	0x3
 13578 16ce 00000000 		.4byte	lastParseCall
 13579 16d2 21       		.uleb128 0x21
 13580 16d3 C20E0000 		.4byte	.LASF220
 13581 16d7 01       		.byte	0x1
 13582 16d8 12       		.byte	0x12
 13583 16d9 E4000000 		.4byte	0xe4
 13584 16dd 05       		.uleb128 0x5
 13585 16de 03       		.byte	0x3
 13586 16df 00000000 		.4byte	prevLastParseCall
 13587 16e3 21       		.uleb128 0x21
 13588 16e4 C2010000 		.4byte	.LASF221
 13589 16e8 01       		.byte	0x1
 13590 16e9 13       		.byte	0x13
 13591 16ea E4000000 		.4byte	0xe4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 284


 13592 16ee 05       		.uleb128 0x5
 13593 16ef 03       		.byte	0x3
 13594 16f0 00000000 		.4byte	lastBufferStuff
 13595 16f4 21       		.uleb128 0x21
 13596 16f5 8A080000 		.4byte	.LASF222
 13597 16f9 01       		.byte	0x1
 13598 16fa 14       		.byte	0x14
 13599 16fb E4000000 		.4byte	0xe4
 13600 16ff 05       		.uleb128 0x5
 13601 1700 03       		.byte	0x3
 13602 1701 00000000 		.4byte	lastEndReceive
 13603 1705 0B       		.uleb128 0xb
 13604 1706 B8000000 		.4byte	0xb8
 13605 170a 16170000 		.4byte	0x1716
 13606 170e 1F       		.uleb128 0x1f
 13607 170f 4C010000 		.4byte	0x14c
 13608 1713 FF07     		.2byte	0x7ff
 13609 1715 00       		.byte	0
 13610 1716 21       		.uleb128 0x21
 13611 1717 44110000 		.4byte	.LASF223
 13612 171b 01       		.byte	0x1
 13613 171c 16       		.byte	0x16
 13614 171d 05170000 		.4byte	0x1705
 13615 1721 05       		.uleb128 0x5
 13616 1722 03       		.byte	0x3
 13617 1723 00000000 		.4byte	sysexBuffer
 13618 1727 21       		.uleb128 0x21
 13619 1728 760C0000 		.4byte	.LASF224
 13620 172c 01       		.byte	0x1
 13621 172d 17       		.byte	0x17
 13622 172e E4000000 		.4byte	0xe4
 13623 1732 05       		.uleb128 0x5
 13624 1733 03       		.byte	0x3
 13625 1734 00000000 		.4byte	sysexWritePointer
 13626 1738 21       		.uleb128 0x21
 13627 1739 2B020000 		.4byte	.LASF225
 13628 173d 01       		.byte	0x1
 13629 173e 18       		.byte	0x18
 13630 173f E4000000 		.4byte	0xe4
 13631 1743 05       		.uleb128 0x5
 13632 1744 03       		.byte	0x3
 13633 1745 00000000 		.4byte	sysexReadPointer
 13634 1749 21       		.uleb128 0x21
 13635 174a 240B0000 		.4byte	.LASF226
 13636 174e 01       		.byte	0x1
 13637 174f 19       		.byte	0x19
 13638 1750 B8000000 		.4byte	0xb8
 13639 1754 05       		.uleb128 0x5
 13640 1755 03       		.byte	0x3
 13641 1756 00000000 		.4byte	sysexReset
 13642 175a 0B       		.uleb128 0xb
 13643 175b E4000000 		.4byte	0xe4
 13644 175f 6A170000 		.4byte	0x176a
 13645 1763 0C       		.uleb128 0xc
 13646 1764 4C010000 		.4byte	0x14c
 13647 1768 FF       		.byte	0xff
 13648 1769 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 285


 13649 176a 21       		.uleb128 0x21
 13650 176b 04070000 		.4byte	.LASF227
 13651 176f 01       		.byte	0x1
 13652 1770 1A       		.byte	0x1a
 13653 1771 5A170000 		.4byte	0x175a
 13654 1775 05       		.uleb128 0x5
 13655 1776 03       		.byte	0x3
 13656 1777 00000000 		.4byte	sysexMessageStartPoints
 13657 177b 21       		.uleb128 0x21
 13658 177c D3090000 		.4byte	.LASF228
 13659 1780 01       		.byte	0x1
 13660 1781 1B       		.byte	0x1b
 13661 1782 B8000000 		.4byte	0xb8
 13662 1786 05       		.uleb128 0x5
 13663 1787 03       		.byte	0x3
 13664 1788 00000000 		.4byte	sysexMessageStartPointsWritePosition
 13665 178c 21       		.uleb128 0x21
 13666 178d C7110000 		.4byte	.LASF229
 13667 1791 01       		.byte	0x1
 13668 1792 1C       		.byte	0x1c
 13669 1793 B8000000 		.4byte	0xb8
 13670 1797 05       		.uleb128 0x5
 13671 1798 03       		.byte	0x3
 13672 1799 00000000 		.4byte	sysexMessageStartPointsReadPosition
 13673 179d 21       		.uleb128 0x21
 13674 179e E10D0000 		.4byte	.LASF230
 13675 17a2 01       		.byte	0x1
 13676 17a3 1D       		.byte	0x1d
 13677 17a4 B8000000 		.4byte	0xb8
 13678 17a8 05       		.uleb128 0x5
 13679 17a9 03       		.byte	0x3
 13680 17aa 00000000 		.4byte	receivingSysex
 13681 17ae 21       		.uleb128 0x21
 13682 17af FE070000 		.4byte	.LASF231
 13683 17b3 01       		.byte	0x1
 13684 17b4 1E       		.byte	0x1e
 13685 17b5 B8000000 		.4byte	0xb8
 13686 17b9 05       		.uleb128 0x5
 13687 17ba 03       		.byte	0x3
 13688 17bb 00000000 		.4byte	parsingSysex
 13689 17bf 0B       		.uleb128 0xb
 13690 17c0 0E020000 		.4byte	0x20e
 13691 17c4 D0170000 		.4byte	0x17d0
 13692 17c8 1F       		.uleb128 0x1f
 13693 17c9 4C010000 		.4byte	0x14c
 13694 17cd FF07     		.2byte	0x7ff
 13695 17cf 00       		.byte	0
 13696 17d0 21       		.uleb128 0x21
 13697 17d1 27000000 		.4byte	.LASF232
 13698 17d5 01       		.byte	0x1
 13699 17d6 1F       		.byte	0x1f
 13700 17d7 E1170000 		.4byte	0x17e1
 13701 17db 05       		.uleb128 0x5
 13702 17dc 03       		.byte	0x3
 13703 17dd 00000000 		.4byte	presetArray
 13704 17e1 06       		.uleb128 0x6
 13705 17e2 BF170000 		.4byte	0x17bf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 286


 13706 17e6 21       		.uleb128 0x21
 13707 17e7 70030000 		.4byte	.LASF233
 13708 17eb 01       		.byte	0x1
 13709 17ec 20       		.byte	0x20
 13710 17ed B8000000 		.4byte	0xb8
 13711 17f1 05       		.uleb128 0x5
 13712 17f2 03       		.byte	0x3
 13713 17f3 00000000 		.4byte	presetNumberToWrite
 13714 17f7 21       		.uleb128 0x21
 13715 17f8 7C100000 		.4byte	.LASF234
 13716 17fc 01       		.byte	0x1
 13717 17fd 21       		.byte	0x21
 13718 17fe B8000000 		.4byte	0xb8
 13719 1802 05       		.uleb128 0x5
 13720 1803 03       		.byte	0x3
 13721 1804 00000000 		.4byte	copedentNumberToWrite
 13722 1808 21       		.uleb128 0x21
 13723 1809 D4020000 		.4byte	.LASF235
 13724 180d 01       		.byte	0x1
 13725 180e 22       		.byte	0x22
 13726 180f B8000000 		.4byte	0xb8
 13727 1813 05       		.uleb128 0x5
 13728 1814 03       		.byte	0x3
 13729 1815 00000000 		.4byte	sendMessageEnd
 13730 1819 21       		.uleb128 0x21
 13731 181a 21110000 		.4byte	.LASF236
 13732 181e 01       		.byte	0x1
 13733 181f 24       		.byte	0x24
 13734 1820 B8000000 		.4byte	0xb8
 13735 1824 05       		.uleb128 0x5
 13736 1825 03       		.byte	0x3
 13737 1826 00000000 		.4byte	sendSingleParamUpdate
 13738 182a 21       		.uleb128 0x21
 13739 182b 81050000 		.4byte	.LASF237
 13740 182f 01       		.byte	0x1
 13741 1830 25       		.byte	0x25
 13742 1831 B8000000 		.4byte	0xb8
 13743 1835 05       		.uleb128 0x5
 13744 1836 03       		.byte	0x3
 13745 1837 00000000 		.4byte	singleParamToUpdateHigh
 13746 183b 21       		.uleb128 0x21
 13747 183c 450D0000 		.4byte	.LASF238
 13748 1840 01       		.byte	0x1
 13749 1841 26       		.byte	0x26
 13750 1842 B8000000 		.4byte	0xb8
 13751 1846 05       		.uleb128 0x5
 13752 1847 03       		.byte	0x3
 13753 1848 00000000 		.4byte	singleParamToUpdateLow
 13754 184c 21       		.uleb128 0x21
 13755 184d 230D0000 		.4byte	.LASF239
 13756 1851 01       		.byte	0x1
 13757 1852 27       		.byte	0x27
 13758 1853 B8000000 		.4byte	0xb8
 13759 1857 05       		.uleb128 0x5
 13760 1858 03       		.byte	0x3
 13761 1859 00000000 		.4byte	singleParamValueHigh
 13762 185d 21       		.uleb128 0x21
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 287


 13763 185e 50070000 		.4byte	.LASF240
 13764 1862 01       		.byte	0x1
 13765 1863 28       		.byte	0x28
 13766 1864 B8000000 		.4byte	0xb8
 13767 1868 05       		.uleb128 0x5
 13768 1869 03       		.byte	0x3
 13769 186a 00000000 		.4byte	singleParamValueLow
 13770 186e 21       		.uleb128 0x21
 13771 186f 47100000 		.4byte	.LASF241
 13772 1873 01       		.byte	0x1
 13773 1874 2A       		.byte	0x2a
 13774 1875 B8000000 		.4byte	0xb8
 13775 1879 05       		.uleb128 0x5
 13776 187a 03       		.byte	0x3
 13777 187b 00000000 		.4byte	sendMappingChangeUpdate
 13778 187f 21       		.uleb128 0x21
 13779 1880 76140000 		.4byte	.LASF242
 13780 1884 01       		.byte	0x1
 13781 1885 38       		.byte	0x38
 13782 1886 B8000000 		.4byte	0xb8
 13783 188a 05       		.uleb128 0x5
 13784 188b 03       		.byte	0x3
 13785 188c 00000000 		.4byte	pitchSmoothing
 13786 1890 21       		.uleb128 0x21
 13787 1891 09100000 		.4byte	.LASF243
 13788 1895 01       		.byte	0x1
 13789 1896 39       		.byte	0x39
 13790 1897 B8000000 		.4byte	0xb8
 13791 189b 05       		.uleb128 0x5
 13792 189c 03       		.byte	0x3
 13793 189d 00000000 		.4byte	controlSmoothing
 13794 18a1 21       		.uleb128 0x21
 13795 18a2 0D000000 		.4byte	.LASF244
 13796 18a6 01       		.byte	0x1
 13797 18a7 3D       		.byte	0x3d
 13798 18a8 B8000000 		.4byte	0xb8
 13799 18ac 05       		.uleb128 0x5
 13800 18ad 03       		.byte	0x3
 13801 18ae 00000000 		.4byte	presetArraySection
 13802 18b2 21       		.uleb128 0x21
 13803 18b3 550C0000 		.4byte	.LASF245
 13804 18b7 01       		.byte	0x1
 13805 18b8 41       		.byte	0x41
 13806 18b9 CE000000 		.4byte	0xce
 13807 18bd 05       		.uleb128 0x5
 13808 18be 03       		.byte	0x3
 13809 18bf 00000000 		.4byte	messageArraySendCount
 13810 18c3 21       		.uleb128 0x21
 13811 18c4 43120000 		.4byte	.LASF246
 13812 18c8 01       		.byte	0x1
 13813 18c9 42       		.byte	0x42
 13814 18ca CE000000 		.4byte	0xce
 13815 18ce 05       		.uleb128 0x5
 13816 18cf 03       		.byte	0x3
 13817 18d0 00000000 		.4byte	messageArraySize
 13818 18d4 21       		.uleb128 0x21
 13819 18d5 99080000 		.4byte	.LASF247
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 288


 13820 18d9 01       		.byte	0x1
 13821 18da 44       		.byte	0x44
 13822 18db B8000000 		.4byte	0xb8
 13823 18df 05       		.uleb128 0x5
 13824 18e0 03       		.byte	0x3
 13825 18e1 00000000 		.4byte	sysexMessageInProgress
 13826 18e5 21       		.uleb128 0x21
 13827 18e6 580A0000 		.4byte	.LASF248
 13828 18ea 01       		.byte	0x1
 13829 18eb 45       		.byte	0x45
 13830 18ec B8000000 		.4byte	0xb8
 13831 18f0 05       		.uleb128 0x5
 13832 18f1 03       		.byte	0x3
 13833 18f2 00000000 		.4byte	pedalHiRes
 13834 18f6 21       		.uleb128 0x21
 13835 18f7 50110000 		.4byte	.LASF249
 13836 18fb 01       		.byte	0x1
 13837 18fc 47       		.byte	0x47
 13838 18fd B8000000 		.4byte	0xb8
 13839 1901 05       		.uleb128 0x5
 13840 1902 03       		.byte	0x3
 13841 1903 00000000 		.4byte	bufCount
 13842 1907 21       		.uleb128 0x21
 13843 1908 47000000 		.4byte	.LASF250
 13844 190c 01       		.byte	0x1
 13845 190d 48       		.byte	0x48
 13846 190e 0E020000 		.4byte	0x20e
 13847 1912 05       		.uleb128 0x5
 13848 1913 03       		.byte	0x3
 13849 1914 00000000 		.4byte	sendingMessage
 13850 1918 21       		.uleb128 0x21
 13851 1919 11040000 		.4byte	.LASF251
 13852 191d 01       		.byte	0x1
 13853 191e 49       		.byte	0x49
 13854 191f 0E020000 		.4byte	0x20e
 13855 1923 05       		.uleb128 0x5
 13856 1924 03       		.byte	0x3
 13857 1925 00000000 		.4byte	sendKnobs
 13858 1929 21       		.uleb128 0x21
 13859 192a 80010000 		.4byte	.LASF252
 13860 192e 01       		.byte	0x1
 13861 192f 4A       		.byte	0x4a
 13862 1930 E4000000 		.4byte	0xe4
 13863 1934 05       		.uleb128 0x5
 13864 1935 03       		.byte	0x3
 13865 1936 00000000 		.4byte	currentFloat
 13866 193a 21       		.uleb128 0x21
 13867 193b D9040000 		.4byte	.LASF253
 13868 193f 01       		.byte	0x1
 13869 1940 4B       		.byte	0x4b
 13870 1941 E4000000 		.4byte	0xe4
 13871 1945 05       		.uleb128 0x5
 13872 1946 03       		.byte	0x3
 13873 1947 00000000 		.4byte	mapCount
 13874 194b 21       		.uleb128 0x21
 13875 194c 0F020000 		.4byte	.LASF254
 13876 1950 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 289


 13877 1951 4D       		.byte	0x4d
 13878 1952 CE000000 		.4byte	0xce
 13879 1956 05       		.uleb128 0x5
 13880 1957 03       		.byte	0x3
 13881 1958 00000000 		.4byte	valsCount
 13882 195c 21       		.uleb128 0x21
 13883 195d AD020000 		.4byte	.LASF255
 13884 1961 01       		.byte	0x1
 13885 1962 4E       		.byte	0x4e
 13886 1963 CE000000 		.4byte	0xce
 13887 1967 05       		.uleb128 0x5
 13888 1968 03       		.byte	0x3
 13889 1969 00000000 		.4byte	mapCountExpectation
 13890 196d 21       		.uleb128 0x21
 13891 196e 42010000 		.4byte	.LASF256
 13892 1972 01       		.byte	0x1
 13893 1973 4F       		.byte	0x4f
 13894 1974 CE000000 		.4byte	0xce
 13895 1978 05       		.uleb128 0x5
 13896 1979 03       		.byte	0x3
 13897 197a 00000000 		.4byte	numMappings
 13898 197e 21       		.uleb128 0x21
 13899 197f D9100000 		.4byte	.LASF257
 13900 1983 01       		.byte	0x1
 13901 1984 50       		.byte	0x50
 13902 1985 0E020000 		.4byte	0x20e
 13903 1989 05       		.uleb128 0x5
 13904 198a 03       		.byte	0x3
 13905 198b 00000000 		.4byte	parseThatMF
 13906 198f 21       		.uleb128 0x21
 13907 1990 1B050000 		.4byte	.LASF258
 13908 1994 01       		.byte	0x1
 13909 1995 51       		.byte	0x51
 13910 1996 A0190000 		.4byte	0x19a0
 13911 199a 05       		.uleb128 0x5
 13912 199b 03       		.byte	0x3
 13913 199c 00000000 		.4byte	valCheck
 13914 19a0 06       		.uleb128 0x6
 13915 19a1 13010000 		.4byte	0x113
 13916 19a5 21       		.uleb128 0x21
 13917 19a6 F00F0000 		.4byte	.LASF259
 13918 19aa 01       		.byte	0x1
 13919 19ab 52       		.byte	0x52
 13920 19ac A0190000 		.4byte	0x19a0
 13921 19b0 05       		.uleb128 0x5
 13922 19b1 03       		.byte	0x3
 13923 19b2 00000000 		.4byte	testVal
 13924 19b6 21       		.uleb128 0x21
 13925 19b7 B60A0000 		.4byte	.LASF260
 13926 19bb 01       		.byte	0x1
 13927 19bc 56       		.byte	0x56
 13928 19bd B8000000 		.4byte	0xb8
 13929 19c1 05       		.uleb128 0x5
 13930 19c2 03       		.byte	0x3
 13931 19c3 00000000 		.4byte	numStrings
 13932 19c7 21       		.uleb128 0x21
 13933 19c8 B3100000 		.4byte	.LASF261
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 290


 13934 19cc 01       		.byte	0x1
 13935 19cd 5C       		.byte	0x5c
 13936 19ce 0E020000 		.4byte	0x20e
 13937 19d2 05       		.uleb128 0x5
 13938 19d3 03       		.byte	0x3
 13939 19d4 00000000 		.4byte	usbActivityCounter
 13940 19d8 21       		.uleb128 0x21
 13941 19d9 800F0000 		.4byte	.LASF154
 13942 19dd 01       		.byte	0x1
 13943 19de 5D       		.byte	0x5d
 13944 19df C1020000 		.4byte	0x2c1
 13945 19e3 05       		.uleb128 0x5
 13946 19e4 03       		.byte	0x3
 13947 19e5 00000000 		.4byte	midiMsg
 13948 19e9 21       		.uleb128 0x21
 13949 19ea 47040000 		.4byte	.LASF262
 13950 19ee 01       		.byte	0x1
 13951 19ef 5E       		.byte	0x5e
 13952 19f0 B8000000 		.4byte	0xb8
 13953 19f4 05       		.uleb128 0x5
 13954 19f5 03       		.byte	0x3
 13955 19f6 00000000 		.4byte	currentVBUS
 13956 19fa 21       		.uleb128 0x21
 13957 19fb 2B140000 		.4byte	.LASF263
 13958 19ff 01       		.byte	0x1
 13959 1a00 5F       		.byte	0x5f
 13960 1a01 B8000000 		.4byte	0xb8
 13961 1a05 05       		.uleb128 0x5
 13962 1a06 03       		.byte	0x3
 13963 1a07 00000000 		.4byte	prevVBUS
 13964 1a0b 21       		.uleb128 0x21
 13965 1a0c FB100000 		.4byte	.LASF264
 13966 1a10 01       		.byte	0x1
 13967 1a11 60       		.byte	0x60
 13968 1a12 0E020000 		.4byte	0x20e
 13969 1a16 05       		.uleb128 0x5
 13970 1a17 03       		.byte	0x3
 13971 1a18 00000000 		.4byte	USB_active
 13972 1a1c 21       		.uleb128 0x21
 13973 1a1d 460C0000 		.4byte	.LASF265
 13974 1a21 01       		.byte	0x1
 13975 1a22 61       		.byte	0x61
 13976 1a23 0E020000 		.4byte	0x20e
 13977 1a27 05       		.uleb128 0x5
 13978 1a28 03       		.byte	0x3
 13979 1a29 00000000 		.4byte	USB_check_flag
 13980 1a2d 0B       		.uleb128 0xb
 13981 1a2e B8000000 		.4byte	0xb8
 13982 1a32 3D1A0000 		.4byte	0x1a3d
 13983 1a36 0C       		.uleb128 0xc
 13984 1a37 4C010000 		.4byte	0x14c
 13985 1a3b 05       		.byte	0x5
 13986 1a3c 00       		.byte	0
 13987 1a3d 21       		.uleb128 0x21
 13988 1a3e AA130000 		.4byte	.LASF266
 13989 1a42 01       		.byte	0x1
 13990 1a43 63       		.byte	0x63
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 291


 13991 1a44 2D1A0000 		.4byte	0x1a2d
 13992 1a48 05       		.uleb128 0x5
 13993 1a49 03       		.byte	0x3
 13994 1a4a 00000000 		.4byte	mappingArray
 13995 1a4e 0B       		.uleb128 0xb
 13996 1a4f B8000000 		.4byte	0xb8
 13997 1a53 5E1A0000 		.4byte	0x1a5e
 13998 1a57 0C       		.uleb128 0xc
 13999 1a58 4C010000 		.4byte	0x14c
 14000 1a5c 1F       		.byte	0x1f
 14001 1a5d 00       		.byte	0
 14002 1a5e 21       		.uleb128 0x21
 14003 1a5f 1B130000 		.4byte	.LASF267
 14004 1a63 01       		.byte	0x1
 14005 1a64 65       		.byte	0x65
 14006 1a65 4E1A0000 		.4byte	0x1a4e
 14007 1a69 05       		.uleb128 0x5
 14008 1a6a 03       		.byte	0x3
 14009 1a6b 00000000 		.4byte	inBuffer
 14010 1a6f 21       		.uleb128 0x21
 14011 1a70 3C150000 		.4byte	.LASF268
 14012 1a74 01       		.byte	0x1
 14013 1a75 67       		.byte	0x67
 14014 1a76 4E1A0000 		.4byte	0x1a4e
 14015 1a7a 05       		.uleb128 0x5
 14016 1a7b 03       		.byte	0x3
 14017 1a7c 00000000 		.4byte	myArray
 14018 1a80 21       		.uleb128 0x21
 14019 1a81 0B080000 		.4byte	.LASF269
 14020 1a85 01       		.byte	0x1
 14021 1a86 68       		.byte	0x68
 14022 1a87 4E1A0000 		.4byte	0x1a4e
 14023 1a8b 05       		.uleb128 0x5
 14024 1a8c 03       		.byte	0x3
 14025 1a8d 00000000 		.4byte	returnedData
 14026 1a91 21       		.uleb128 0x21
 14027 1a92 FF0E0000 		.4byte	.LASF270
 14028 1a96 01       		.byte	0x1
 14029 1a97 6B       		.byte	0x6b
 14030 1a98 54140000 		.4byte	0x1454
 14031 1a9c 05       		.uleb128 0x5
 14032 1a9d 03       		.byte	0x3
 14033 1a9e 00000000 		.4byte	prevAngle
 14034 1aa2 0B       		.uleb128 0xb
 14035 1aa3 CE000000 		.4byte	0xce
 14036 1aa7 B21A0000 		.4byte	0x1ab2
 14037 1aab 0C       		.uleb128 0xc
 14038 1aac 4C010000 		.4byte	0x14c
 14039 1ab0 03       		.byte	0x3
 14040 1ab1 00       		.byte	0
 14041 1ab2 21       		.uleb128 0x21
 14042 1ab3 5D0F0000 		.4byte	.LASF271
 14043 1ab7 01       		.byte	0x1
 14044 1ab8 6D       		.byte	0x6d
 14045 1ab9 A21A0000 		.4byte	0x1aa2
 14046 1abd 05       		.uleb128 0x5
 14047 1abe 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 292


 14048 1abf 00000000 		.4byte	ADC_values
 14049 1ac3 21       		.uleb128 0x21
 14050 1ac4 FD050000 		.4byte	.LASF272
 14051 1ac8 01       		.byte	0x1
 14052 1ac9 6E       		.byte	0x6e
 14053 1aca CE000000 		.4byte	0xce
 14054 1ace 05       		.uleb128 0x5
 14055 1acf 03       		.byte	0x3
 14056 1ad0 00000000 		.4byte	rawAngle
 14057 1ad4 21       		.uleb128 0x21
 14058 1ad5 770F0000 		.4byte	.LASF273
 14059 1ad9 01       		.byte	0x1
 14060 1ada 6F       		.byte	0x6f
 14061 1adb CE000000 		.4byte	0xce
 14062 1adf 05       		.uleb128 0x5
 14063 1ae0 03       		.byte	0x3
 14064 1ae1 00000000 		.4byte	midiSent
 14065 1ae5 21       		.uleb128 0x21
 14066 1ae6 430A0000 		.4byte	.LASF274
 14067 1aea 01       		.byte	0x1
 14068 1aeb 70       		.byte	0x70
 14069 1aec CE000000 		.4byte	0xce
 14070 1af0 05       		.uleb128 0x5
 14071 1af1 03       		.byte	0x3
 14072 1af2 00000000 		.4byte	midiOverflow
 14073 1af6 21       		.uleb128 0x21
 14074 1af7 57130000 		.4byte	.LASF275
 14075 1afb 01       		.byte	0x1
 14076 1afc 72       		.byte	0x72
 14077 1afd BB150000 		.4byte	0x15bb
 14078 1b01 05       		.uleb128 0x5
 14079 1b02 03       		.byte	0x3
 14080 1b03 00000000 		.4byte	macroKnobValues
 14081 1b07 21       		.uleb128 0x21
 14082 1b08 34050000 		.4byte	.LASF276
 14083 1b0c 01       		.byte	0x1
 14084 1b0d 79       		.byte	0x79
 14085 1b0e EF000000 		.4byte	0xef
 14086 1b12 05       		.uleb128 0x5
 14087 1b13 03       		.byte	0x3
 14088 1b14 00000000 		.4byte	rx1Channel
 14089 1b18 21       		.uleb128 0x21
 14090 1b19 C3130000 		.4byte	.LASF277
 14091 1b1d 01       		.byte	0x1
 14092 1b1e 79       		.byte	0x79
 14093 1b1f EF000000 		.4byte	0xef
 14094 1b23 05       		.uleb128 0x5
 14095 1b24 03       		.byte	0x3
 14096 1b25 00000000 		.4byte	rx2Channel
 14097 1b29 21       		.uleb128 0x21
 14098 1b2a AB0C0000 		.4byte	.LASF278
 14099 1b2e 01       		.byte	0x1
 14100 1b2f 7A       		.byte	0x7a
 14101 1b30 49110000 		.4byte	0x1149
 14102 1b34 05       		.uleb128 0x5
 14103 1b35 03       		.byte	0x3
 14104 1b36 00000000 		.4byte	rx1TD
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 293


 14105 1b3a 21       		.uleb128 0x21
 14106 1b3b 03100000 		.4byte	.LASF279
 14107 1b3f 01       		.byte	0x1
 14108 1b40 7A       		.byte	0x7a
 14109 1b41 49110000 		.4byte	0x1149
 14110 1b45 05       		.uleb128 0x5
 14111 1b46 03       		.byte	0x3
 14112 1b47 00000000 		.4byte	rx2TD
 14113 1b4b 21       		.uleb128 0x21
 14114 1b4c D40E0000 		.4byte	.LASF280
 14115 1b50 01       		.byte	0x1
 14116 1b51 7C       		.byte	0x7c
 14117 1b52 40010000 		.4byte	0x140
 14118 1b56 05       		.uleb128 0x5
 14119 1b57 03       		.byte	0x3
 14120 1b58 00000000 		.4byte	txChannel
 14121 1b5c 21       		.uleb128 0x21
 14122 1b5d A3140000 		.4byte	.LASF281
 14123 1b61 01       		.byte	0x1
 14124 1b62 7D       		.byte	0x7d
 14125 1b63 40010000 		.4byte	0x140
 14126 1b67 05       		.uleb128 0x5
 14127 1b68 03       		.byte	0x3
 14128 1b69 00000000 		.4byte	txTD
 14129 1b6d 21       		.uleb128 0x21
 14130 1b6e D80C0000 		.4byte	.LASF282
 14131 1b72 01       		.byte	0x1
 14132 1b73 7F       		.byte	0x7f
 14133 1b74 40010000 		.4byte	0x140
 14134 1b78 05       		.uleb128 0x5
 14135 1b79 03       		.byte	0x3
 14136 1b7a 00000000 		.4byte	rx3Channel
 14137 1b7e 21       		.uleb128 0x21
 14138 1b7f 34140000 		.4byte	.LASF283
 14139 1b83 01       		.byte	0x1
 14140 1b84 80       		.byte	0x80
 14141 1b85 40010000 		.4byte	0x140
 14142 1b89 05       		.uleb128 0x5
 14143 1b8a 03       		.byte	0x3
 14144 1b8b 00000000 		.4byte	rx3TD
 14145 1b8f 0B       		.uleb128 0xb
 14146 1b90 40010000 		.4byte	0x140
 14147 1b94 A51B0000 		.4byte	0x1ba5
 14148 1b98 0C       		.uleb128 0xc
 14149 1b99 4C010000 		.4byte	0x14c
 14150 1b9d 01       		.byte	0x1
 14151 1b9e 0C       		.uleb128 0xc
 14152 1b9f 4C010000 		.4byte	0x14c
 14153 1ba3 1F       		.byte	0x1f
 14154 1ba4 00       		.byte	0
 14155 1ba5 21       		.uleb128 0x21
 14156 1ba6 46080000 		.4byte	.LASF284
 14157 1baa 01       		.byte	0x1
 14158 1bab 83       		.byte	0x83
 14159 1bac B61B0000 		.4byte	0x1bb6
 14160 1bb0 05       		.uleb128 0x5
 14161 1bb1 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 294


 14162 1bb2 00000000 		.4byte	rxBufferPluck
 14163 1bb6 06       		.uleb128 0x6
 14164 1bb7 8F1B0000 		.4byte	0x1b8f
 14165 1bbb 0B       		.uleb128 0xb
 14166 1bbc 40010000 		.4byte	0x140
 14167 1bc0 D11B0000 		.4byte	0x1bd1
 14168 1bc4 0C       		.uleb128 0xc
 14169 1bc5 4C010000 		.4byte	0x14c
 14170 1bc9 01       		.byte	0x1
 14171 1bca 0C       		.uleb128 0xc
 14172 1bcb 4C010000 		.4byte	0x14c
 14173 1bcf 07       		.byte	0x7
 14174 1bd0 00       		.byte	0
 14175 1bd1 21       		.uleb128 0x21
 14176 1bd2 B60E0000 		.4byte	.LASF285
 14177 1bd6 01       		.byte	0x1
 14178 1bd7 84       		.byte	0x84
 14179 1bd8 E21B0000 		.4byte	0x1be2
 14180 1bdc 05       		.uleb128 0x5
 14181 1bdd 03       		.byte	0x3
 14182 1bde 00000000 		.4byte	rxBufferBar
 14183 1be2 06       		.uleb128 0x6
 14184 1be3 BB1B0000 		.4byte	0x1bbb
 14185 1be7 0B       		.uleb128 0xb
 14186 1be8 13020000 		.4byte	0x213
 14187 1bec F71B0000 		.4byte	0x1bf7
 14188 1bf0 0C       		.uleb128 0xc
 14189 1bf1 4C010000 		.4byte	0x14c
 14190 1bf5 0B       		.byte	0xb
 14191 1bf6 00       		.byte	0
 14192 1bf7 21       		.uleb128 0x21
 14193 1bf8 22030000 		.4byte	.LASF286
 14194 1bfc 01       		.byte	0x1
 14195 1bfd 86       		.byte	0x86
 14196 1bfe 081C0000 		.4byte	0x1c08
 14197 1c02 05       		.uleb128 0x5
 14198 1c03 03       		.byte	0x3
 14199 1c04 00000000 		.4byte	strings
 14200 1c08 06       		.uleb128 0x6
 14201 1c09 E71B0000 		.4byte	0x1be7
 14202 1c0d 21       		.uleb128 0x21
 14203 1c0e D3050000 		.4byte	.LASF287
 14204 1c12 01       		.byte	0x1
 14205 1c13 87       		.byte	0x87
 14206 1c14 1E1C0000 		.4byte	0x1c1e
 14207 1c18 05       		.uleb128 0x5
 14208 1c19 03       		.byte	0x3
 14209 1c1a 00000000 		.4byte	prevStrings
 14210 1c1e 06       		.uleb128 0x6
 14211 1c1f E71B0000 		.4byte	0x1be7
 14212 1c23 21       		.uleb128 0x21
 14213 1c24 B2140000 		.4byte	.LASF288
 14214 1c28 01       		.byte	0x1
 14215 1c29 89       		.byte	0x89
 14216 1c2a 341C0000 		.4byte	0x1c34
 14217 1c2e 05       		.uleb128 0x5
 14218 1c2f 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 295


 14219 1c30 00000000 		.4byte	prevBar
 14220 1c34 06       		.uleb128 0x6
 14221 1c35 B8140000 		.4byte	0x14b8
 14222 1c39 21       		.uleb128 0x21
 14223 1c3a 33130000 		.4byte	.LASF289
 14224 1c3e 01       		.byte	0x1
 14225 1c3f 8A       		.byte	0x8a
 14226 1c40 4A1C0000 		.4byte	0x1c4a
 14227 1c44 05       		.uleb128 0x5
 14228 1c45 03       		.byte	0x3
 14229 1c46 00000000 		.4byte	maxStrings
 14230 1c4a 06       		.uleb128 0x6
 14231 1c4b E71B0000 		.4byte	0x1be7
 14232 1c4f 21       		.uleb128 0x21
 14233 1c50 5F100000 		.4byte	.LASF290
 14234 1c54 01       		.byte	0x1
 14235 1c55 8B       		.byte	0x8b
 14236 1c56 0E020000 		.4byte	0x20e
 14237 1c5a 05       		.uleb128 0x5
 14238 1c5b 03       		.byte	0x3
 14239 1c5c 00000000 		.4byte	amHere
 14240 1c60 21       		.uleb128 0x21
 14241 1c61 7A070000 		.4byte	.LASF291
 14242 1c65 01       		.byte	0x1
 14243 1c66 8C       		.byte	0x8c
 14244 1c67 0E020000 		.4byte	0x20e
 14245 1c6b 05       		.uleb128 0x5
 14246 1c6c 03       		.byte	0x3
 14247 1c6d 00000000 		.4byte	spiCounter
 14248 1c71 21       		.uleb128 0x21
 14249 1c72 4D050000 		.4byte	.LASF292
 14250 1c76 01       		.byte	0x1
 14251 1c77 8D       		.byte	0x8d
 14252 1c78 0E020000 		.4byte	0x20e
 14253 1c7c 05       		.uleb128 0x5
 14254 1c7d 03       		.byte	0x3
 14255 1c7e 00000000 		.4byte	newDataFlag
 14256 1c82 21       		.uleb128 0x21
 14257 1c83 090F0000 		.4byte	.LASF293
 14258 1c87 01       		.byte	0x1
 14259 1c88 8F       		.byte	0x8f
 14260 1c89 B8000000 		.4byte	0xb8
 14261 1c8d 05       		.uleb128 0x5
 14262 1c8e 03       		.byte	0x3
 14263 1c8f 00000000 		.4byte	pluck_index
 14264 1c93 21       		.uleb128 0x21
 14265 1c94 DA120000 		.4byte	.LASF294
 14266 1c98 01       		.byte	0x1
 14267 1c99 90       		.byte	0x90
 14268 1c9a 0E020000 		.4byte	0x20e
 14269 1c9e 05       		.uleb128 0x5
 14270 1c9f 03       		.byte	0x3
 14271 1ca0 00000000 		.4byte	amHere2
 14272 1ca4 21       		.uleb128 0x21
 14273 1ca5 9F100000 		.4byte	.LASF295
 14274 1ca9 01       		.byte	0x1
 14275 1caa 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 296


 14276 1cab 0E020000 		.4byte	0x20e
 14277 1caf 05       		.uleb128 0x5
 14278 1cb0 03       		.byte	0x3
 14279 1cb1 00000000 		.4byte	spiCounter2
 14280 1cb5 21       		.uleb128 0x21
 14281 1cb6 7B000000 		.4byte	.LASF296
 14282 1cba 01       		.byte	0x1
 14283 1cbb 92       		.byte	0x92
 14284 1cbc 0E020000 		.4byte	0x20e
 14285 1cc0 05       		.uleb128 0x5
 14286 1cc1 03       		.byte	0x3
 14287 1cc2 00000000 		.4byte	newDataFlag2
 14288 1cc6 21       		.uleb128 0x21
 14289 1cc7 920D0000 		.4byte	.LASF297
 14290 1ccb 01       		.byte	0x1
 14291 1ccc 93       		.byte	0x93
 14292 1ccd 0E020000 		.4byte	0x20e
 14293 1cd1 05       		.uleb128 0x5
 14294 1cd2 03       		.byte	0x3
 14295 1cd3 00000000 		.4byte	currentPluckBuffer
 14296 1cd7 21       		.uleb128 0x21
 14297 1cd8 4C0F0000 		.4byte	.LASF298
 14298 1cdc 01       		.byte	0x1
 14299 1cdd 94       		.byte	0x94
 14300 1cde 0E020000 		.4byte	0x20e
 14301 1ce2 05       		.uleb128 0x5
 14302 1ce3 03       		.byte	0x3
 14303 1ce4 00000000 		.4byte	currentBarBuffer
 14304 1ce8 21       		.uleb128 0x21
 14305 1ce9 CE130000 		.4byte	.LASF299
 14306 1ced 01       		.byte	0x1
 14307 1cee 95       		.byte	0x95
 14308 1cef 0E020000 		.4byte	0x20e
 14309 1cf3 05       		.uleb128 0x5
 14310 1cf4 03       		.byte	0x3
 14311 1cf5 00000000 		.4byte	pluckErrorCount
 14312 1cf9 21       		.uleb128 0x21
 14313 1cfa 680F0000 		.4byte	.LASF300
 14314 1cfe 01       		.byte	0x1
 14315 1cff 96       		.byte	0x96
 14316 1d00 13020000 		.4byte	0x213
 14317 1d04 05       		.uleb128 0x5
 14318 1d05 03       		.byte	0x3
 14319 1d06 00000000 		.4byte	SPI1ErrorCount
 14320 1d0a 21       		.uleb128 0x21
 14321 1d0b 68090000 		.4byte	.LASF301
 14322 1d0f 01       		.byte	0x1
 14323 1d10 98       		.byte	0x98
 14324 1d11 0E020000 		.4byte	0x20e
 14325 1d15 05       		.uleb128 0x5
 14326 1d16 03       		.byte	0x3
 14327 1d17 00000000 		.4byte	inputData
 14328 1d1b 21       		.uleb128 0x21
 14329 1d1c B7130000 		.4byte	.LASF302
 14330 1d20 01       		.byte	0x1
 14331 1d21 A1       		.byte	0xa1
 14332 1d22 B8000000 		.4byte	0xb8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 297


 14333 1d26 05       		.uleb128 0x5
 14334 1d27 03       		.byte	0x3
 14335 1d28 00000000 		.4byte	spiAdjusted
 14336 1d2c 21       		.uleb128 0x21
 14337 1d2d 7D080000 		.4byte	.LASF303
 14338 1d31 01       		.byte	0x1
 14339 1d32 A2       		.byte	0xa2
 14340 1d33 B8000000 		.4byte	0xb8
 14341 1d37 05       		.uleb128 0x5
 14342 1d38 03       		.byte	0x3
 14343 1d39 00000000 		.4byte	mySpiCounter
 14344 1d3d 21       		.uleb128 0x21
 14345 1d3e 860E0000 		.4byte	.LASF304
 14346 1d42 01       		.byte	0x1
 14347 1d43 A3       		.byte	0xa3
 14348 1d44 13020000 		.4byte	0x213
 14349 1d48 05       		.uleb128 0x5
 14350 1d49 03       		.byte	0x3
 14351 1d4a 00000000 		.4byte	offsetErrorCount
 14352 1d4e 21       		.uleb128 0x21
 14353 1d4f 11010000 		.4byte	.LASF305
 14354 1d53 01       		.byte	0x1
 14355 1d54 A4       		.byte	0xa4
 14356 1d55 0E020000 		.4byte	0x20e
 14357 1d59 05       		.uleb128 0x5
 14358 1d5a 03       		.byte	0x3
 14359 1d5b 00000000 		.4byte	SPI2errorflag
 14360 1d5f 21       		.uleb128 0x21
 14361 1d60 41040000 		.4byte	.LASF306
 14362 1d64 01       		.byte	0x1
 14363 1d65 A5       		.byte	0xa5
 14364 1d66 C1020000 		.4byte	0x2c1
 14365 1d6a 05       		.uleb128 0x5
 14366 1d6b 03       		.byte	0x3
 14367 1d6c 00000000 		.4byte	knobs
 14368 1d70 21       		.uleb128 0x21
 14369 1d71 73080000 		.4byte	.LASF307
 14370 1d75 01       		.byte	0x1
 14371 1d76 A6       		.byte	0xa6
 14372 1d77 C1020000 		.4byte	0x2c1
 14373 1d7b 05       		.uleb128 0x5
 14374 1d7c 03       		.byte	0x3
 14375 1d7d 00000000 		.4byte	prevKnobs
 14376 1d81 21       		.uleb128 0x21
 14377 1d82 5B0E0000 		.4byte	.LASF308
 14378 1d86 01       		.byte	0x1
 14379 1d87 A8       		.byte	0xa8
 14380 1d88 C1020000 		.4byte	0x2c1
 14381 1d8c 05       		.uleb128 0x5
 14382 1d8d 03       		.byte	0x3
 14383 1d8e 00000000 		.4byte	knobs7bit
 14384 1d92 21       		.uleb128 0x21
 14385 1d93 F60D0000 		.4byte	.LASF309
 14386 1d97 01       		.byte	0x1
 14387 1d98 A9       		.byte	0xa9
 14388 1d99 C1020000 		.4byte	0x2c1
 14389 1d9d 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 298


 14390 1d9e 03       		.byte	0x3
 14391 1d9f 00000000 		.4byte	prevKnobs7bit
 14392 1da3 21       		.uleb128 0x21
 14393 1da4 630A0000 		.4byte	.LASF310
 14394 1da8 01       		.byte	0x1
 14395 1da9 AB       		.byte	0xab
 14396 1daa B8000000 		.4byte	0xb8
 14397 1dae 05       		.uleb128 0x5
 14398 1daf 03       		.byte	0x3
 14399 1db0 00000000 		.4byte	u7bit_volumePedal
 14400 1db4 21       		.uleb128 0x21
 14401 1db5 94130000 		.4byte	.LASF311
 14402 1db9 01       		.byte	0x1
 14403 1dba AC       		.byte	0xac
 14404 1dbb B8000000 		.4byte	0xb8
 14405 1dbf 05       		.uleb128 0x5
 14406 1dc0 03       		.byte	0x3
 14407 1dc1 00000000 		.4byte	prev_7bit_volumePedal
 14408 1dc5 21       		.uleb128 0x21
 14409 1dc6 860D0000 		.4byte	.LASF312
 14410 1dca 01       		.byte	0x1
 14411 1dcb AD       		.byte	0xad
 14412 1dcc 0E020000 		.4byte	0x20e
 14413 1dd0 05       		.uleb128 0x5
 14414 1dd1 03       		.byte	0x3
 14415 1dd2 00000000 		.4byte	SPI2started
 14416 1dd6 21       		.uleb128 0x21
 14417 1dd7 EB110000 		.4byte	.LASF313
 14418 1ddb 01       		.byte	0x1
 14419 1ddc B1       		.byte	0xb1
 14420 1ddd BB150000 		.4byte	0x15bb
 14421 1de1 05       		.uleb128 0x5
 14422 1de2 03       		.byte	0x3
 14423 1de3 00000000 		.4byte	macroKnobValues7bit
 14424 1de7 21       		.uleb128 0x21
 14425 1de8 1B040000 		.4byte	.LASF314
 14426 1dec 01       		.byte	0x1
 14427 1ded B2       		.byte	0xb2
 14428 1dee BB150000 		.4byte	0x15bb
 14429 1df2 05       		.uleb128 0x5
 14430 1df3 03       		.byte	0x3
 14431 1df4 00000000 		.4byte	prevMacroKnobValues7bit
 14432 1df8 21       		.uleb128 0x21
 14433 1df9 66100000 		.4byte	.LASF315
 14434 1dfd 01       		.byte	0x1
 14435 1dfe BA       		.byte	0xba
 14436 1dff 49110000 		.4byte	0x1149
 14437 1e03 05       		.uleb128 0x5
 14438 1e04 03       		.byte	0x3
 14439 1e05 00000000 		.4byte	array
 14440 1e09 21       		.uleb128 0x21
 14441 1e0a F8090000 		.4byte	.LASF316
 14442 1e0e 01       		.byte	0x1
 14443 1e0f BD       		.byte	0xbd
 14444 1e10 FD010000 		.4byte	0x1fd
 14445 1e14 05       		.uleb128 0x5
 14446 1e15 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 299


 14447 1e16 00000000 		.4byte	eepromReturnValue
 14448 1e1a 21       		.uleb128 0x21
 14449 1e1b 8B060000 		.4byte	.LASF317
 14450 1e1f 01       		.byte	0x1
 14451 1e20 C4       		.byte	0xc4
 14452 1e21 EF000000 		.4byte	0xef
 14453 1e25 05       		.uleb128 0x5
 14454 1e26 03       		.byte	0x3
 14455 1e27 00000000 		.4byte	eeprom_cnt
 14456 1e2b 21       		.uleb128 0x21
 14457 1e2c 340A0000 		.4byte	.LASF84
 14458 1e30 01       		.byte	0x1
 14459 1e31 C5       		.byte	0xc5
 14460 1e32 28010000 		.4byte	0x128
 14461 1e36 05       		.uleb128 0x5
 14462 1e37 03       		.byte	0x3
 14463 1e38 00000000 		.4byte	status
 14464 1e3c 24       		.uleb128 0x24
 14465 1e3d 70747200 		.ascii	"ptr\000"
 14466 1e41 01       		.byte	0x1
 14467 1e42 C6       		.byte	0xc6
 14468 1e43 4D1E0000 		.4byte	0x1e4d
 14469 1e47 05       		.uleb128 0x5
 14470 1e48 03       		.byte	0x3
 14471 1e49 00000000 		.4byte	ptr
 14472 1e4d 1C       		.uleb128 0x1c
 14473 1e4e 04       		.byte	0x4
 14474 1e4f 581E0000 		.4byte	0x1e58
 14475 1e53 20       		.uleb128 0x20
 14476 1e54 EF000000 		.4byte	0xef
 14477 1e58 06       		.uleb128 0x6
 14478 1e59 531E0000 		.4byte	0x1e53
 14479 1e5d 21       		.uleb128 0x21
 14480 1e5e CB020000 		.4byte	.LASF318
 14481 1e62 01       		.byte	0x1
 14482 1e63 C7       		.byte	0xc7
 14483 1e64 6E1E0000 		.4byte	0x1e6e
 14484 1e68 05       		.uleb128 0x5
 14485 1e69 03       		.byte	0x3
 14486 1e6a 00000000 		.4byte	barCount
 14487 1e6e 06       		.uleb128 0x6
 14488 1e6f 9F000000 		.4byte	0x9f
 14489 1e73 0B       		.uleb128 0xb
 14490 1e74 0E020000 		.4byte	0x20e
 14491 1e78 831E0000 		.4byte	0x1e83
 14492 1e7c 0C       		.uleb128 0xc
 14493 1e7d 4C010000 		.4byte	0x14c
 14494 1e81 0F       		.byte	0xf
 14495 1e82 00       		.byte	0
 14496 1e83 21       		.uleb128 0x21
 14497 1e84 57010000 		.4byte	.LASF319
 14498 1e88 01       		.byte	0x1
 14499 1e89 CC       		.byte	0xcc
 14500 1e8a 941E0000 		.4byte	0x1e94
 14501 1e8e 05       		.uleb128 0x5
 14502 1e8f 03       		.byte	0x3
 14503 1e90 00000000 		.4byte	I2Cbuff2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 300


 14504 1e94 06       		.uleb128 0x6
 14505 1e95 731E0000 		.4byte	0x1e73
 14506 1e99 21       		.uleb128 0x21
 14507 1e9a 3B0A0000 		.4byte	.LASF320
 14508 1e9e 01       		.byte	0x1
 14509 1e9f CD       		.byte	0xcd
 14510 1ea0 0E020000 		.4byte	0x20e
 14511 1ea4 05       		.uleb128 0x5
 14512 1ea5 03       		.byte	0x3
 14513 1ea6 00000000 		.4byte	send_it
 14514 1eaa 0B       		.uleb128 0xb
 14515 1eab B8000000 		.4byte	0xb8
 14516 1eaf C01E0000 		.4byte	0x1ec0
 14517 1eb3 0C       		.uleb128 0xc
 14518 1eb4 4C010000 		.4byte	0x14c
 14519 1eb8 0B       		.byte	0xb
 14520 1eb9 0C       		.uleb128 0xc
 14521 1eba 4C010000 		.4byte	0x14c
 14522 1ebe 01       		.byte	0x1
 14523 1ebf 00       		.byte	0
 14524 1ec0 21       		.uleb128 0x21
 14525 1ec1 60010000 		.4byte	.LASF321
 14526 1ec5 01       		.byte	0x1
 14527 1ec6 D3       		.byte	0xd3
 14528 1ec7 AA1E0000 		.4byte	0x1eaa
 14529 1ecb 05       		.uleb128 0x5
 14530 1ecc 03       		.byte	0x3
 14531 1ecd 00000000 		.4byte	mux_states
 14532 1ed1 0B       		.uleb128 0xb
 14533 1ed2 B8000000 		.4byte	0xb8
 14534 1ed6 E11E0000 		.4byte	0x1ee1
 14535 1eda 0C       		.uleb128 0xc
 14536 1edb 4C010000 		.4byte	0x14c
 14537 1edf 0B       		.byte	0xb
 14538 1ee0 00       		.byte	0
 14539 1ee1 21       		.uleb128 0x21
 14540 1ee2 67130000 		.4byte	.LASF322
 14541 1ee6 01       		.byte	0x1
 14542 1ee7 D4       		.byte	0xd4
 14543 1ee8 D11E0000 		.4byte	0x1ed1
 14544 1eec 05       		.uleb128 0x5
 14545 1eed 03       		.byte	0x3
 14546 1eee 00000000 		.4byte	i2c_skipped
 14547 1ef2 21       		.uleb128 0x21
 14548 1ef3 B0110000 		.4byte	.LASF323
 14549 1ef7 01       		.byte	0x1
 14550 1ef8 D7       		.byte	0xd7
 14551 1ef9 54140000 		.4byte	0x1454
 14552 1efd 05       		.uleb128 0x5
 14553 1efe 03       		.byte	0x3
 14554 1eff 00000000 		.4byte	pedals_lowWithDeadZone
 14555 1f03 21       		.uleb128 0x21
 14556 1f04 E3020000 		.4byte	.LASF324
 14557 1f08 01       		.byte	0x1
 14558 1f09 D8       		.byte	0xd8
 14559 1f0a 54140000 		.4byte	0x1454
 14560 1f0e 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 301


 14561 1f0f 03       		.byte	0x3
 14562 1f10 00000000 		.4byte	pedals_highWithDeadZone
 14563 1f14 21       		.uleb128 0x21
 14564 1f15 3A080000 		.4byte	.LASF325
 14565 1f19 01       		.byte	0x1
 14566 1f1a DA       		.byte	0xda
 14567 1f1b CE000000 		.4byte	0xce
 14568 1f1f 05       		.uleb128 0x5
 14569 1f20 03       		.byte	0x3
 14570 1f21 00000000 		.4byte	volumePedal
 14571 1f25 21       		.uleb128 0x21
 14572 1f26 DE0E0000 		.4byte	.LASF326
 14573 1f2a 01       		.byte	0x1
 14574 1f2b DB       		.byte	0xdb
 14575 1f2c 54140000 		.4byte	0x1454
 14576 1f30 05       		.uleb128 0x5
 14577 1f31 03       		.byte	0x3
 14578 1f32 00000000 		.4byte	processed_pedals
 14579 1f36 21       		.uleb128 0x21
 14580 1f37 700D0000 		.4byte	.LASF327
 14581 1f3b 01       		.byte	0x1
 14582 1f3c DC       		.byte	0xdc
 14583 1f3d 54140000 		.4byte	0x1454
 14584 1f41 05       		.uleb128 0x5
 14585 1f42 03       		.byte	0x3
 14586 1f43 00000000 		.4byte	prev_processed_pedals
 14587 1f47 21       		.uleb128 0x21
 14588 1f48 5D080000 		.4byte	.LASF328
 14589 1f4c 01       		.byte	0x1
 14590 1f4d DD       		.byte	0xdd
 14591 1f4e 86140000 		.4byte	0x1486
 14592 1f52 05       		.uleb128 0x5
 14593 1f53 03       		.byte	0x3
 14594 1f54 00000000 		.4byte	pedals8bit
 14595 1f58 21       		.uleb128 0x21
 14596 1f59 89130000 		.4byte	.LASF329
 14597 1f5d 01       		.byte	0x1
 14598 1f5e DE       		.byte	0xde
 14599 1f5f 86140000 		.4byte	0x1486
 14600 1f63 05       		.uleb128 0x5
 14601 1f64 03       		.byte	0x3
 14602 1f65 00000000 		.4byte	pedals7bit
 14603 1f69 21       		.uleb128 0x21
 14604 1f6a 1B0E0000 		.4byte	.LASF330
 14605 1f6e 01       		.byte	0x1
 14606 1f6f DF       		.byte	0xdf
 14607 1f70 86140000 		.4byte	0x1486
 14608 1f74 05       		.uleb128 0x5
 14609 1f75 03       		.byte	0x3
 14610 1f76 00000000 		.4byte	prevPedals7bit
 14611 1f7a 21       		.uleb128 0x21
 14612 1f7b 56000000 		.4byte	.LASF331
 14613 1f7f 01       		.byte	0x1
 14614 1f80 E0       		.byte	0xe0
 14615 1f81 C3000000 		.4byte	0xc3
 14616 1f85 05       		.uleb128 0x5
 14617 1f86 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 302


 14618 1f87 00000000 		.4byte	prev_processed_volumePedal
 14619 1f8b 21       		.uleb128 0x21
 14620 1f8c 970E0000 		.4byte	.LASF332
 14621 1f90 01       		.byte	0x1
 14622 1f91 E1       		.byte	0xe1
 14623 1f92 C3000000 		.4byte	0xc3
 14624 1f96 05       		.uleb128 0x5
 14625 1f97 03       		.byte	0x3
 14626 1f98 00000000 		.4byte	processed_volumePedal
 14627 1f9c 21       		.uleb128 0x21
 14628 1f9d 23080000 		.4byte	.LASF333
 14629 1fa1 01       		.byte	0x1
 14630 1fa2 E3       		.byte	0xe3
 14631 1fa3 B8000000 		.4byte	0xb8
 14632 1fa7 05       		.uleb128 0x5
 14633 1fa8 03       		.byte	0x3
 14634 1fa9 00000000 		.4byte	sliderBugOn
 14635 1fad 21       		.uleb128 0x21
 14636 1fae 5B030000 		.4byte	.LASF334
 14637 1fb2 01       		.byte	0x1
 14638 1fb3 EC       		.byte	0xec
 14639 1fb4 C7120000 		.4byte	0x12c7
 14640 1fb8 05       		.uleb128 0x5
 14641 1fb9 03       		.byte	0x3
 14642 1fba 00000000 		.4byte	presetLoadedResponse
 14643 1fbe 0B       		.uleb128 0xb
 14644 1fbf 13010000 		.4byte	0x113
 14645 1fc3 CE1F0000 		.4byte	0x1fce
 14646 1fc7 0C       		.uleb128 0xc
 14647 1fc8 4C010000 		.4byte	0x14c
 14648 1fcc 0B       		.byte	0xb
 14649 1fcd 00       		.byte	0
 14650 1fce 21       		.uleb128 0x21
 14651 1fcf 49030000 		.4byte	.LASF335
 14652 1fd3 01       		.byte	0x1
 14653 1fd4 F2       		.byte	0xf2
 14654 1fd5 BE1F0000 		.4byte	0x1fbe
 14655 1fd9 05       		.uleb128 0x5
 14656 1fda 03       		.byte	0x3
 14657 1fdb 00000000 		.4byte	fretScalingInMIDI
 14658 1fdf 21       		.uleb128 0x21
 14659 1fe0 C1140000 		.4byte	.LASF336
 14660 1fe4 01       		.byte	0x1
 14661 1fe5 F3       		.byte	0xf3
 14662 1fe6 BE1F0000 		.4byte	0x1fbe
 14663 1fea 05       		.uleb128 0x5
 14664 1feb 03       		.byte	0x3
 14665 1fec 00000000 		.4byte	fretScalingInRatios
 14666 1ff0 0B       		.uleb128 0xb
 14667 1ff1 13010000 		.4byte	0x113
 14668 1ff5 00200000 		.4byte	0x2000
 14669 1ff9 0C       		.uleb128 0xc
 14670 1ffa 4C010000 		.4byte	0x14c
 14671 1ffe 09       		.byte	0x9
 14672 1fff 00       		.byte	0
 14673 2000 21       		.uleb128 0x21
 14674 2001 F1040000 		.4byte	.LASF337
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 303


 14675 2005 01       		.byte	0x1
 14676 2006 F5       		.byte	0xf5
 14677 2007 F01F0000 		.4byte	0x1ff0
 14678 200b 05       		.uleb128 0x5
 14679 200c 03       		.byte	0x3
 14680 200d 00000000 		.4byte	pedalRatios
 14681 2011 21       		.uleb128 0x21
 14682 2012 9F050000 		.4byte	.LASF338
 14683 2016 01       		.byte	0x1
 14684 2017 F6       		.byte	0xf6
 14685 2018 B8000000 		.4byte	0xb8
 14686 201c 05       		.uleb128 0x5
 14687 201d 03       		.byte	0x3
 14688 201e 00000000 		.4byte	last_mux
 14689 2022 21       		.uleb128 0x21
 14690 2023 060C0000 		.4byte	.LASF339
 14691 2027 01       		.byte	0x1
 14692 2028 F7       		.byte	0xf7
 14693 2029 0E020000 		.4byte	0x20e
 14694 202d 05       		.uleb128 0x5
 14695 202e 03       		.byte	0x3
 14696 202f 00000000 		.4byte	main_counter
 14697 2033 21       		.uleb128 0x21
 14698 2034 0E030000 		.4byte	.LASF340
 14699 2038 01       		.byte	0x1
 14700 2039 F9       		.byte	0xf9
 14701 203a B8000000 		.4byte	0xb8
 14702 203e 05       		.uleb128 0x5
 14703 203f 03       		.byte	0x3
 14704 2040 00000000 		.4byte	voice
 14705 2044 23       		.uleb128 0x23
 14706 2045 EF0E0000 		.4byte	.LASF341
 14707 2049 01       		.byte	0x1
 14708 204a 0001     		.2byte	0x100
 14709 204c 86140000 		.4byte	0x1486
 14710 2050 05       		.uleb128 0x5
 14711 2051 03       		.byte	0x3
 14712 2052 00000000 		.4byte	copedentMapping
 14713 2056 0B       		.uleb128 0xb
 14714 2057 13010000 		.4byte	0x113
 14715 205b 72200000 		.4byte	0x2072
 14716 205f 0C       		.uleb128 0xc
 14717 2060 4C010000 		.4byte	0x14c
 14718 2064 06       		.byte	0x6
 14719 2065 0C       		.uleb128 0xc
 14720 2066 4C010000 		.4byte	0x14c
 14721 206a 0A       		.byte	0xa
 14722 206b 0C       		.uleb128 0xc
 14723 206c 4C010000 		.4byte	0x14c
 14724 2070 0B       		.byte	0xb
 14725 2071 00       		.byte	0
 14726 2072 23       		.uleb128 0x23
 14727 2073 54080000 		.4byte	.LASF342
 14728 2077 01       		.byte	0x1
 14729 2078 0101     		.2byte	0x101
 14730 207a 56200000 		.4byte	0x2056
 14731 207e 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 304


 14732 207f 03       		.byte	0x3
 14733 2080 00000000 		.4byte	copedent
 14734 2084 23       		.uleb128 0x23
 14735 2085 B1030000 		.4byte	.LASF343
 14736 2089 01       		.byte	0x1
 14737 208a 0401     		.2byte	0x104
 14738 208c BE1F0000 		.4byte	0x1fbe
 14739 2090 05       		.uleb128 0x5
 14740 2091 03       		.byte	0x3
 14741 2092 00000000 		.4byte	prevStringPitchBend
 14742 2096 0B       		.uleb128 0xb
 14743 2097 13010000 		.4byte	0x113
 14744 209b AC200000 		.4byte	0x20ac
 14745 209f 0C       		.uleb128 0xc
 14746 20a0 4C010000 		.4byte	0x14c
 14747 20a4 09       		.byte	0x9
 14748 20a5 0C       		.uleb128 0xc
 14749 20a6 4C010000 		.4byte	0x14c
 14750 20aa 0B       		.byte	0xb
 14751 20ab 00       		.byte	0
 14752 20ac 23       		.uleb128 0x23
 14753 20ad BA140000 		.4byte	.LASF344
 14754 20b1 01       		.byte	0x1
 14755 20b2 0601     		.2byte	0x106
 14756 20b4 96200000 		.4byte	0x2096
 14757 20b8 05       		.uleb128 0x5
 14758 20b9 03       		.byte	0x3
 14759 20ba 00000000 		.4byte	pedals
 14760 20be 23       		.uleb128 0x23
 14761 20bf CC0D0000 		.4byte	.LASF345
 14762 20c3 01       		.byte	0x1
 14763 20c4 0801     		.2byte	0x108
 14764 20c6 86140000 		.4byte	0x1486
 14765 20ca 05       		.uleb128 0x5
 14766 20cb 03       		.byte	0x3
 14767 20cc 00000000 		.4byte	pedal_cc_assignments
 14768 20d0 23       		.uleb128 0x23
 14769 20d1 73130000 		.4byte	.LASF346
 14770 20d5 01       		.byte	0x1
 14771 20d6 0901     		.2byte	0x109
 14772 20d8 BE1F0000 		.4byte	0x1fbe
 14773 20dc 05       		.uleb128 0x5
 14774 20dd 03       		.byte	0x3
 14775 20de 00000000 		.4byte	openStringFrequencies
 14776 20e2 0B       		.uleb128 0xb
 14777 20e3 13010000 		.4byte	0x113
 14778 20e7 F2200000 		.4byte	0x20f2
 14779 20eb 0C       		.uleb128 0xc
 14780 20ec 4C010000 		.4byte	0x14c
 14781 20f0 01       		.byte	0x1
 14782 20f1 00       		.byte	0
 14783 20f2 23       		.uleb128 0x23
 14784 20f3 60060000 		.4byte	.LASF347
 14785 20f7 01       		.byte	0x1
 14786 20f8 0A01     		.2byte	0x10a
 14787 20fa E2200000 		.4byte	0x20e2
 14788 20fe 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 305


 14789 20ff 03       		.byte	0x3
 14790 2100 00000000 		.4byte	stringMappedPositionsInRatios
 14791 2104 0B       		.uleb128 0xb
 14792 2105 CE000000 		.4byte	0xce
 14793 2109 14210000 		.4byte	0x2114
 14794 210d 0C       		.uleb128 0xc
 14795 210e 4C010000 		.4byte	0x14c
 14796 2112 01       		.byte	0x1
 14797 2113 00       		.byte	0
 14798 2114 23       		.uleb128 0x23
 14799 2115 910F0000 		.4byte	.LASF348
 14800 2119 01       		.byte	0x1
 14801 211a 0B01     		.2byte	0x10b
 14802 211c 04210000 		.4byte	0x2104
 14803 2120 05       		.uleb128 0x5
 14804 2121 03       		.byte	0x3
 14805 2122 00000000 		.4byte	stringMappedPositionsInRatiosInt
 14806 2126 23       		.uleb128 0x23
 14807 2127 C3080000 		.4byte	.LASF349
 14808 212b 01       		.byte	0x1
 14809 212c 0C01     		.2byte	0x10c
 14810 212e E2200000 		.4byte	0x20e2
 14811 2132 05       		.uleb128 0x5
 14812 2133 03       		.byte	0x3
 14813 2134 00000000 		.4byte	stringMappedPositionsInMIDI
 14814 2138 23       		.uleb128 0x23
 14815 2139 C10A0000 		.4byte	.LASF350
 14816 213d 01       		.byte	0x1
 14817 213e 0D01     		.2byte	0x10d
 14818 2140 04210000 		.4byte	0x2104
 14819 2144 05       		.uleb128 0x5
 14820 2145 03       		.byte	0x3
 14821 2146 00000000 		.4byte	barMidiOuterStrings
 14822 214a 23       		.uleb128 0x23
 14823 214b 15150000 		.4byte	.LASF351
 14824 214f 01       		.byte	0x1
 14825 2150 0E01     		.2byte	0x10e
 14826 2152 BE1F0000 		.4byte	0x1fbe
 14827 2156 05       		.uleb128 0x5
 14828 2157 03       		.byte	0x3
 14829 2158 00000000 		.4byte	stringFrequencies
 14830 215c 23       		.uleb128 0x23
 14831 215d 59050000 		.4byte	.LASF352
 14832 2161 01       		.byte	0x1
 14833 2162 0F01     		.2byte	0x10f
 14834 2164 BE1F0000 		.4byte	0x1fbe
 14835 2168 05       		.uleb128 0x5
 14836 2169 03       		.byte	0x3
 14837 216a 00000000 		.4byte	stringOctave
 14838 216e 23       		.uleb128 0x23
 14839 216f E2120000 		.4byte	.LASF353
 14840 2173 01       		.byte	0x1
 14841 2174 1001     		.2byte	0x110
 14842 2176 BE1F0000 		.4byte	0x1fbe
 14843 217a 05       		.uleb128 0x5
 14844 217b 03       		.byte	0x3
 14845 217c 00000000 		.4byte	stringPitch
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 306


 14846 2180 23       		.uleb128 0x23
 14847 2181 81120000 		.4byte	.LASF354
 14848 2185 01       		.byte	0x1
 14849 2186 1101     		.2byte	0x111
 14850 2188 BE1F0000 		.4byte	0x1fbe
 14851 218c 05       		.uleb128 0x5
 14852 218d 03       		.byte	0x3
 14853 218e 00000000 		.4byte	stringMIDI
 14854 2192 0B       		.uleb128 0xb
 14855 2193 9F000000 		.4byte	0x9f
 14856 2197 A2210000 		.4byte	0x21a2
 14857 219b 0C       		.uleb128 0xc
 14858 219c 4C010000 		.4byte	0x14c
 14859 21a0 0B       		.byte	0xb
 14860 21a1 00       		.byte	0
 14861 21a2 23       		.uleb128 0x23
 14862 21a3 0B0B0000 		.4byte	.LASF355
 14863 21a7 01       		.byte	0x1
 14864 21a8 1201     		.2byte	0x112
 14865 21aa 92210000 		.4byte	0x2192
 14866 21ae 05       		.uleb128 0x5
 14867 21af 03       		.byte	0x3
 14868 21b0 00000000 		.4byte	openStringMIDI_Int
 14869 21b4 23       		.uleb128 0x23
 14870 21b5 9C090000 		.4byte	.LASF356
 14871 21b9 01       		.byte	0x1
 14872 21ba 2001     		.2byte	0x120
 14873 21bc B8000000 		.4byte	0xb8
 14874 21c0 05       		.uleb128 0x5
 14875 21c1 03       		.byte	0x3
 14876 21c2 00000000 		.4byte	presetWhenMacroWriteStarted
 14877 21c6 23       		.uleb128 0x23
 14878 21c7 B0120000 		.4byte	.LASF357
 14879 21cb 01       		.byte	0x1
 14880 21cc 2101     		.2byte	0x121
 14881 21ce B8000000 		.4byte	0xb8
 14882 21d2 05       		.uleb128 0x5
 14883 21d3 03       		.byte	0x3
 14884 21d4 00000000 		.4byte	macroPageWhenMacroWriteStarted
 14885 21d8 23       		.uleb128 0x23
 14886 21d9 A3110000 		.4byte	.LASF358
 14887 21dd 01       		.byte	0x1
 14888 21de 2301     		.2byte	0x123
 14889 21e0 F01F0000 		.4byte	0x1ff0
 14890 21e4 05       		.uleb128 0x5
 14891 21e5 03       		.byte	0x3
 14892 21e6 00000000 		.4byte	pedals_float
 14893 21ea 23       		.uleb128 0x23
 14894 21eb 7D110000 		.4byte	.LASF359
 14895 21ef 01       		.byte	0x1
 14896 21f0 2401     		.2byte	0x124
 14897 21f2 13010000 		.4byte	0x113
 14898 21f6 05       		.uleb128 0x5
 14899 21f7 03       		.byte	0x3
 14900 21f8 00000000 		.4byte	stringRepDivider
 14901 21fc 23       		.uleb128 0x23
 14902 21fd F10C0000 		.4byte	.LASF360
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 307


 14903 2201 01       		.byte	0x1
 14904 2202 E606     		.2byte	0x6e6
 14905 2204 92210000 		.4byte	0x2192
 14906 2208 05       		.uleb128 0x5
 14907 2209 03       		.byte	0x3
 14908 220a 00000000 		.4byte	prevNotes
 14909 220e 23       		.uleb128 0x23
 14910 220f 460E0000 		.4byte	.LASF361
 14911 2213 01       		.byte	0x1
 14912 2214 5B07     		.2byte	0x75b
 14913 2216 0E020000 		.4byte	0x20e
 14914 221a 05       		.uleb128 0x5
 14915 221b 03       		.byte	0x3
 14916 221c 00000000 		.4byte	checkStatus
 14917 2220 23       		.uleb128 0x23
 14918 2221 25100000 		.4byte	.LASF362
 14919 2225 01       		.byte	0x1
 14920 2226 5C07     		.2byte	0x75c
 14921 2228 13020000 		.4byte	0x213
 14922 222c 05       		.uleb128 0x5
 14923 222d 03       		.byte	0x3
 14924 222e 00000000 		.4byte	checkBase
 14925 2232 0B       		.uleb128 0xb
 14926 2233 0E020000 		.4byte	0x20e
 14927 2237 42220000 		.4byte	0x2242
 14928 223b 0C       		.uleb128 0xc
 14929 223c 4C010000 		.4byte	0x14c
 14930 2240 03       		.byte	0x3
 14931 2241 00       		.byte	0
 14932 2242 23       		.uleb128 0x23
 14933 2243 AD0E0000 		.4byte	.LASF100
 14934 2247 01       		.byte	0x1
 14935 2248 5D07     		.2byte	0x75d
 14936 224a 54220000 		.4byte	0x2254
 14937 224e 05       		.uleb128 0x5
 14938 224f 03       		.byte	0x3
 14939 2250 00000000 		.4byte	tempMIDI
 14940 2254 06       		.uleb128 0x6
 14941 2255 32220000 		.4byte	0x2232
 14942 2259 23       		.uleb128 0x23
 14943 225a 33000000 		.4byte	.LASF363
 14944 225e 01       		.byte	0x1
 14945 225f 5E07     		.2byte	0x75e
 14946 2261 0E020000 		.4byte	0x20e
 14947 2265 05       		.uleb128 0x5
 14948 2266 03       		.byte	0x3
 14949 2267 00000000 		.4byte	firstSysex
 14950 226b 23       		.uleb128 0x23
 14951 226c AB070000 		.4byte	.LASF364
 14952 2270 01       		.byte	0x1
 14953 2271 5F07     		.2byte	0x75f
 14954 2273 7D220000 		.4byte	0x227d
 14955 2277 05       		.uleb128 0x5
 14956 2278 03       		.byte	0x3
 14957 2279 00000000 		.4byte	sysexPointerMask
 14958 227d 20       		.uleb128 0x20
 14959 227e E4000000 		.4byte	0xe4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 308


 14960 2282 23       		.uleb128 0x23
 14961 2283 34070000 		.4byte	.LASF365
 14962 2287 01       		.byte	0x1
 14963 2288 6007     		.2byte	0x760
 14964 228a 09020000 		.4byte	0x209
 14965 228e 05       		.uleb128 0x5
 14966 228f 03       		.byte	0x3
 14967 2290 00000000 		.4byte	moreToDo
 14968 2294 23       		.uleb128 0x23
 14969 2295 B0080000 		.4byte	.LASF366
 14970 2299 01       		.byte	0x1
 14971 229a 6207     		.2byte	0x762
 14972 229c 9F000000 		.4byte	0x9f
 14973 22a0 05       		.uleb128 0x5
 14974 22a1 03       		.byte	0x3
 14975 22a2 00000000 		.4byte	SPI_errors
 14976 22a6 0B       		.uleb128 0xb
 14977 22a7 09020000 		.4byte	0x209
 14978 22ab B6220000 		.4byte	0x22b6
 14979 22af 0C       		.uleb128 0xc
 14980 22b0 4C010000 		.4byte	0x14c
 14981 22b4 0F       		.byte	0xf
 14982 22b5 00       		.byte	0
 14983 22b6 23       		.uleb128 0x23
 14984 22b7 37110000 		.4byte	.LASF367
 14985 22bb 01       		.byte	0x1
 14986 22bc 6407     		.2byte	0x764
 14987 22be C8220000 		.4byte	0x22c8
 14988 22c2 05       		.uleb128 0x5
 14989 22c3 03       		.byte	0x3
 14990 22c4 00000000 		.4byte	nearbyValues
 14991 22c8 06       		.uleb128 0x6
 14992 22c9 A6220000 		.4byte	0x22a6
 14993 22cd 00       		.byte	0
 14994              		.section	.debug_abbrev,"",%progbits
 14995              	.Ldebug_abbrev0:
 14996 0000 01       		.uleb128 0x1
 14997 0001 11       		.uleb128 0x11
 14998 0002 01       		.byte	0x1
 14999 0003 25       		.uleb128 0x25
 15000 0004 0E       		.uleb128 0xe
 15001 0005 13       		.uleb128 0x13
 15002 0006 0B       		.uleb128 0xb
 15003 0007 03       		.uleb128 0x3
 15004 0008 0E       		.uleb128 0xe
 15005 0009 1B       		.uleb128 0x1b
 15006 000a 0E       		.uleb128 0xe
 15007 000b 55       		.uleb128 0x55
 15008 000c 17       		.uleb128 0x17
 15009 000d 11       		.uleb128 0x11
 15010 000e 01       		.uleb128 0x1
 15011 000f 10       		.uleb128 0x10
 15012 0010 17       		.uleb128 0x17
 15013 0011 00       		.byte	0
 15014 0012 00       		.byte	0
 15015 0013 02       		.uleb128 0x2
 15016 0014 16       		.uleb128 0x16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 309


 15017 0015 00       		.byte	0
 15018 0016 03       		.uleb128 0x3
 15019 0017 0E       		.uleb128 0xe
 15020 0018 3A       		.uleb128 0x3a
 15021 0019 0B       		.uleb128 0xb
 15022 001a 3B       		.uleb128 0x3b
 15023 001b 0B       		.uleb128 0xb
 15024 001c 49       		.uleb128 0x49
 15025 001d 13       		.uleb128 0x13
 15026 001e 00       		.byte	0
 15027 001f 00       		.byte	0
 15028 0020 03       		.uleb128 0x3
 15029 0021 24       		.uleb128 0x24
 15030 0022 00       		.byte	0
 15031 0023 0B       		.uleb128 0xb
 15032 0024 0B       		.uleb128 0xb
 15033 0025 3E       		.uleb128 0x3e
 15034 0026 0B       		.uleb128 0xb
 15035 0027 03       		.uleb128 0x3
 15036 0028 0E       		.uleb128 0xe
 15037 0029 00       		.byte	0
 15038 002a 00       		.byte	0
 15039 002b 04       		.uleb128 0x4
 15040 002c 24       		.uleb128 0x24
 15041 002d 00       		.byte	0
 15042 002e 0B       		.uleb128 0xb
 15043 002f 0B       		.uleb128 0xb
 15044 0030 3E       		.uleb128 0x3e
 15045 0031 0B       		.uleb128 0xb
 15046 0032 03       		.uleb128 0x3
 15047 0033 08       		.uleb128 0x8
 15048 0034 00       		.byte	0
 15049 0035 00       		.byte	0
 15050 0036 05       		.uleb128 0x5
 15051 0037 16       		.uleb128 0x16
 15052 0038 00       		.byte	0
 15053 0039 03       		.uleb128 0x3
 15054 003a 0E       		.uleb128 0xe
 15055 003b 3A       		.uleb128 0x3a
 15056 003c 0B       		.uleb128 0xb
 15057 003d 3B       		.uleb128 0x3b
 15058 003e 05       		.uleb128 0x5
 15059 003f 49       		.uleb128 0x49
 15060 0040 13       		.uleb128 0x13
 15061 0041 00       		.byte	0
 15062 0042 00       		.byte	0
 15063 0043 06       		.uleb128 0x6
 15064 0044 35       		.uleb128 0x35
 15065 0045 00       		.byte	0
 15066 0046 49       		.uleb128 0x49
 15067 0047 13       		.uleb128 0x13
 15068 0048 00       		.byte	0
 15069 0049 00       		.byte	0
 15070 004a 07       		.uleb128 0x7
 15071 004b 13       		.uleb128 0x13
 15072 004c 01       		.byte	0x1
 15073 004d 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 310


 15074 004e 0B       		.uleb128 0xb
 15075 004f 3A       		.uleb128 0x3a
 15076 0050 0B       		.uleb128 0xb
 15077 0051 3B       		.uleb128 0x3b
 15078 0052 05       		.uleb128 0x5
 15079 0053 01       		.uleb128 0x1
 15080 0054 13       		.uleb128 0x13
 15081 0055 00       		.byte	0
 15082 0056 00       		.byte	0
 15083 0057 08       		.uleb128 0x8
 15084 0058 0D       		.uleb128 0xd
 15085 0059 00       		.byte	0
 15086 005a 03       		.uleb128 0x3
 15087 005b 0E       		.uleb128 0xe
 15088 005c 3A       		.uleb128 0x3a
 15089 005d 0B       		.uleb128 0xb
 15090 005e 3B       		.uleb128 0x3b
 15091 005f 05       		.uleb128 0x5
 15092 0060 49       		.uleb128 0x49
 15093 0061 13       		.uleb128 0x13
 15094 0062 38       		.uleb128 0x38
 15095 0063 0B       		.uleb128 0xb
 15096 0064 00       		.byte	0
 15097 0065 00       		.byte	0
 15098 0066 09       		.uleb128 0x9
 15099 0067 04       		.uleb128 0x4
 15100 0068 01       		.byte	0x1
 15101 0069 0B       		.uleb128 0xb
 15102 006a 0B       		.uleb128 0xb
 15103 006b 49       		.uleb128 0x49
 15104 006c 13       		.uleb128 0x13
 15105 006d 3A       		.uleb128 0x3a
 15106 006e 0B       		.uleb128 0xb
 15107 006f 3B       		.uleb128 0x3b
 15108 0070 05       		.uleb128 0x5
 15109 0071 01       		.uleb128 0x1
 15110 0072 13       		.uleb128 0x13
 15111 0073 00       		.byte	0
 15112 0074 00       		.byte	0
 15113 0075 0A       		.uleb128 0xa
 15114 0076 28       		.uleb128 0x28
 15115 0077 00       		.byte	0
 15116 0078 03       		.uleb128 0x3
 15117 0079 0E       		.uleb128 0xe
 15118 007a 1C       		.uleb128 0x1c
 15119 007b 0B       		.uleb128 0xb
 15120 007c 00       		.byte	0
 15121 007d 00       		.byte	0
 15122 007e 0B       		.uleb128 0xb
 15123 007f 01       		.uleb128 0x1
 15124 0080 01       		.byte	0x1
 15125 0081 49       		.uleb128 0x49
 15126 0082 13       		.uleb128 0x13
 15127 0083 01       		.uleb128 0x1
 15128 0084 13       		.uleb128 0x13
 15129 0085 00       		.byte	0
 15130 0086 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 311


 15131 0087 0C       		.uleb128 0xc
 15132 0088 21       		.uleb128 0x21
 15133 0089 00       		.byte	0
 15134 008a 49       		.uleb128 0x49
 15135 008b 13       		.uleb128 0x13
 15136 008c 2F       		.uleb128 0x2f
 15137 008d 0B       		.uleb128 0xb
 15138 008e 00       		.byte	0
 15139 008f 00       		.byte	0
 15140 0090 0D       		.uleb128 0xd
 15141 0091 04       		.uleb128 0x4
 15142 0092 01       		.byte	0x1
 15143 0093 03       		.uleb128 0x3
 15144 0094 0E       		.uleb128 0xe
 15145 0095 0B       		.uleb128 0xb
 15146 0096 0B       		.uleb128 0xb
 15147 0097 49       		.uleb128 0x49
 15148 0098 13       		.uleb128 0x13
 15149 0099 3A       		.uleb128 0x3a
 15150 009a 0B       		.uleb128 0xb
 15151 009b 3B       		.uleb128 0x3b
 15152 009c 0B       		.uleb128 0xb
 15153 009d 01       		.uleb128 0x1
 15154 009e 13       		.uleb128 0x13
 15155 009f 00       		.byte	0
 15156 00a0 00       		.byte	0
 15157 00a1 0E       		.uleb128 0xe
 15158 00a2 17       		.uleb128 0x17
 15159 00a3 01       		.byte	0x1
 15160 00a4 03       		.uleb128 0x3
 15161 00a5 0E       		.uleb128 0xe
 15162 00a6 0B       		.uleb128 0xb
 15163 00a7 0B       		.uleb128 0xb
 15164 00a8 3A       		.uleb128 0x3a
 15165 00a9 0B       		.uleb128 0xb
 15166 00aa 3B       		.uleb128 0x3b
 15167 00ab 0B       		.uleb128 0xb
 15168 00ac 01       		.uleb128 0x1
 15169 00ad 13       		.uleb128 0x13
 15170 00ae 00       		.byte	0
 15171 00af 00       		.byte	0
 15172 00b0 0F       		.uleb128 0xf
 15173 00b1 0D       		.uleb128 0xd
 15174 00b2 00       		.byte	0
 15175 00b3 03       		.uleb128 0x3
 15176 00b4 08       		.uleb128 0x8
 15177 00b5 3A       		.uleb128 0x3a
 15178 00b6 0B       		.uleb128 0xb
 15179 00b7 3B       		.uleb128 0x3b
 15180 00b8 0B       		.uleb128 0xb
 15181 00b9 49       		.uleb128 0x49
 15182 00ba 13       		.uleb128 0x13
 15183 00bb 00       		.byte	0
 15184 00bc 00       		.byte	0
 15185 00bd 10       		.uleb128 0x10
 15186 00be 2E       		.uleb128 0x2e
 15187 00bf 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 312


 15188 00c0 3F       		.uleb128 0x3f
 15189 00c1 19       		.uleb128 0x19
 15190 00c2 03       		.uleb128 0x3
 15191 00c3 08       		.uleb128 0x8
 15192 00c4 3A       		.uleb128 0x3a
 15193 00c5 0B       		.uleb128 0xb
 15194 00c6 3B       		.uleb128 0x3b
 15195 00c7 05       		.uleb128 0x5
 15196 00c8 27       		.uleb128 0x27
 15197 00c9 19       		.uleb128 0x19
 15198 00ca 49       		.uleb128 0x49
 15199 00cb 13       		.uleb128 0x13
 15200 00cc 11       		.uleb128 0x11
 15201 00cd 01       		.uleb128 0x1
 15202 00ce 12       		.uleb128 0x12
 15203 00cf 06       		.uleb128 0x6
 15204 00d0 40       		.uleb128 0x40
 15205 00d1 18       		.uleb128 0x18
 15206 00d2 9642     		.uleb128 0x2116
 15207 00d4 19       		.uleb128 0x19
 15208 00d5 01       		.uleb128 0x1
 15209 00d6 13       		.uleb128 0x13
 15210 00d7 00       		.byte	0
 15211 00d8 00       		.byte	0
 15212 00d9 11       		.uleb128 0x11
 15213 00da 05       		.uleb128 0x5
 15214 00db 00       		.byte	0
 15215 00dc 03       		.uleb128 0x3
 15216 00dd 0E       		.uleb128 0xe
 15217 00de 3A       		.uleb128 0x3a
 15218 00df 0B       		.uleb128 0xb
 15219 00e0 3B       		.uleb128 0x3b
 15220 00e1 05       		.uleb128 0x5
 15221 00e2 49       		.uleb128 0x49
 15222 00e3 13       		.uleb128 0x13
 15223 00e4 02       		.uleb128 0x2
 15224 00e5 18       		.uleb128 0x18
 15225 00e6 00       		.byte	0
 15226 00e7 00       		.byte	0
 15227 00e8 12       		.uleb128 0x12
 15228 00e9 2E       		.uleb128 0x2e
 15229 00ea 01       		.byte	0x1
 15230 00eb 3F       		.uleb128 0x3f
 15231 00ec 19       		.uleb128 0x19
 15232 00ed 03       		.uleb128 0x3
 15233 00ee 0E       		.uleb128 0xe
 15234 00ef 3A       		.uleb128 0x3a
 15235 00f0 0B       		.uleb128 0xb
 15236 00f1 3B       		.uleb128 0x3b
 15237 00f2 05       		.uleb128 0x5
 15238 00f3 27       		.uleb128 0x27
 15239 00f4 19       		.uleb128 0x19
 15240 00f5 49       		.uleb128 0x49
 15241 00f6 13       		.uleb128 0x13
 15242 00f7 11       		.uleb128 0x11
 15243 00f8 01       		.uleb128 0x1
 15244 00f9 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 313


 15245 00fa 06       		.uleb128 0x6
 15246 00fb 40       		.uleb128 0x40
 15247 00fc 18       		.uleb128 0x18
 15248 00fd 9642     		.uleb128 0x2116
 15249 00ff 19       		.uleb128 0x19
 15250 0100 01       		.uleb128 0x1
 15251 0101 13       		.uleb128 0x13
 15252 0102 00       		.byte	0
 15253 0103 00       		.byte	0
 15254 0104 13       		.uleb128 0x13
 15255 0105 2E       		.uleb128 0x2e
 15256 0106 01       		.byte	0x1
 15257 0107 3F       		.uleb128 0x3f
 15258 0108 19       		.uleb128 0x19
 15259 0109 03       		.uleb128 0x3
 15260 010a 0E       		.uleb128 0xe
 15261 010b 3A       		.uleb128 0x3a
 15262 010c 0B       		.uleb128 0xb
 15263 010d 3B       		.uleb128 0x3b
 15264 010e 05       		.uleb128 0x5
 15265 010f 11       		.uleb128 0x11
 15266 0110 01       		.uleb128 0x1
 15267 0111 12       		.uleb128 0x12
 15268 0112 06       		.uleb128 0x6
 15269 0113 40       		.uleb128 0x40
 15270 0114 18       		.uleb128 0x18
 15271 0115 9642     		.uleb128 0x2116
 15272 0117 19       		.uleb128 0x19
 15273 0118 01       		.uleb128 0x1
 15274 0119 13       		.uleb128 0x13
 15275 011a 00       		.byte	0
 15276 011b 00       		.byte	0
 15277 011c 14       		.uleb128 0x14
 15278 011d 0B       		.uleb128 0xb
 15279 011e 01       		.byte	0x1
 15280 011f 11       		.uleb128 0x11
 15281 0120 01       		.uleb128 0x1
 15282 0121 12       		.uleb128 0x12
 15283 0122 06       		.uleb128 0x6
 15284 0123 01       		.uleb128 0x1
 15285 0124 13       		.uleb128 0x13
 15286 0125 00       		.byte	0
 15287 0126 00       		.byte	0
 15288 0127 15       		.uleb128 0x15
 15289 0128 34       		.uleb128 0x34
 15290 0129 00       		.byte	0
 15291 012a 03       		.uleb128 0x3
 15292 012b 08       		.uleb128 0x8
 15293 012c 3A       		.uleb128 0x3a
 15294 012d 0B       		.uleb128 0xb
 15295 012e 3B       		.uleb128 0x3b
 15296 012f 05       		.uleb128 0x5
 15297 0130 49       		.uleb128 0x49
 15298 0131 13       		.uleb128 0x13
 15299 0132 02       		.uleb128 0x2
 15300 0133 18       		.uleb128 0x18
 15301 0134 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 314


 15302 0135 00       		.byte	0
 15303 0136 16       		.uleb128 0x16
 15304 0137 0B       		.uleb128 0xb
 15305 0138 01       		.byte	0x1
 15306 0139 11       		.uleb128 0x11
 15307 013a 01       		.uleb128 0x1
 15308 013b 12       		.uleb128 0x12
 15309 013c 06       		.uleb128 0x6
 15310 013d 00       		.byte	0
 15311 013e 00       		.byte	0
 15312 013f 17       		.uleb128 0x17
 15313 0140 2E       		.uleb128 0x2e
 15314 0141 01       		.byte	0x1
 15315 0142 3F       		.uleb128 0x3f
 15316 0143 19       		.uleb128 0x19
 15317 0144 03       		.uleb128 0x3
 15318 0145 0E       		.uleb128 0xe
 15319 0146 3A       		.uleb128 0x3a
 15320 0147 0B       		.uleb128 0xb
 15321 0148 3B       		.uleb128 0x3b
 15322 0149 05       		.uleb128 0x5
 15323 014a 27       		.uleb128 0x27
 15324 014b 19       		.uleb128 0x19
 15325 014c 11       		.uleb128 0x11
 15326 014d 01       		.uleb128 0x1
 15327 014e 12       		.uleb128 0x12
 15328 014f 06       		.uleb128 0x6
 15329 0150 40       		.uleb128 0x40
 15330 0151 18       		.uleb128 0x18
 15331 0152 9642     		.uleb128 0x2116
 15332 0154 19       		.uleb128 0x19
 15333 0155 01       		.uleb128 0x1
 15334 0156 13       		.uleb128 0x13
 15335 0157 00       		.byte	0
 15336 0158 00       		.byte	0
 15337 0159 18       		.uleb128 0x18
 15338 015a 34       		.uleb128 0x34
 15339 015b 00       		.byte	0
 15340 015c 03       		.uleb128 0x3
 15341 015d 0E       		.uleb128 0xe
 15342 015e 3A       		.uleb128 0x3a
 15343 015f 0B       		.uleb128 0xb
 15344 0160 3B       		.uleb128 0x3b
 15345 0161 05       		.uleb128 0x5
 15346 0162 49       		.uleb128 0x49
 15347 0163 13       		.uleb128 0x13
 15348 0164 02       		.uleb128 0x2
 15349 0165 18       		.uleb128 0x18
 15350 0166 00       		.byte	0
 15351 0167 00       		.byte	0
 15352 0168 19       		.uleb128 0x19
 15353 0169 2E       		.uleb128 0x2e
 15354 016a 00       		.byte	0
 15355 016b 3F       		.uleb128 0x3f
 15356 016c 19       		.uleb128 0x19
 15357 016d 03       		.uleb128 0x3
 15358 016e 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 315


 15359 016f 3A       		.uleb128 0x3a
 15360 0170 0B       		.uleb128 0xb
 15361 0171 3B       		.uleb128 0x3b
 15362 0172 05       		.uleb128 0x5
 15363 0173 27       		.uleb128 0x27
 15364 0174 19       		.uleb128 0x19
 15365 0175 11       		.uleb128 0x11
 15366 0176 01       		.uleb128 0x1
 15367 0177 12       		.uleb128 0x12
 15368 0178 06       		.uleb128 0x6
 15369 0179 40       		.uleb128 0x40
 15370 017a 18       		.uleb128 0x18
 15371 017b 9642     		.uleb128 0x2116
 15372 017d 19       		.uleb128 0x19
 15373 017e 00       		.byte	0
 15374 017f 00       		.byte	0
 15375 0180 1A       		.uleb128 0x1a
 15376 0181 05       		.uleb128 0x5
 15377 0182 00       		.byte	0
 15378 0183 03       		.uleb128 0x3
 15379 0184 08       		.uleb128 0x8
 15380 0185 3A       		.uleb128 0x3a
 15381 0186 0B       		.uleb128 0xb
 15382 0187 3B       		.uleb128 0x3b
 15383 0188 05       		.uleb128 0x5
 15384 0189 49       		.uleb128 0x49
 15385 018a 13       		.uleb128 0x13
 15386 018b 02       		.uleb128 0x2
 15387 018c 18       		.uleb128 0x18
 15388 018d 00       		.byte	0
 15389 018e 00       		.byte	0
 15390 018f 1B       		.uleb128 0x1b
 15391 0190 0B       		.uleb128 0xb
 15392 0191 01       		.byte	0x1
 15393 0192 55       		.uleb128 0x55
 15394 0193 17       		.uleb128 0x17
 15395 0194 00       		.byte	0
 15396 0195 00       		.byte	0
 15397 0196 1C       		.uleb128 0x1c
 15398 0197 0F       		.uleb128 0xf
 15399 0198 00       		.byte	0
 15400 0199 0B       		.uleb128 0xb
 15401 019a 0B       		.uleb128 0xb
 15402 019b 49       		.uleb128 0x49
 15403 019c 13       		.uleb128 0x13
 15404 019d 00       		.byte	0
 15405 019e 00       		.byte	0
 15406 019f 1D       		.uleb128 0x1d
 15407 01a0 34       		.uleb128 0x34
 15408 01a1 00       		.byte	0
 15409 01a2 03       		.uleb128 0x3
 15410 01a3 0E       		.uleb128 0xe
 15411 01a4 3A       		.uleb128 0x3a
 15412 01a5 0B       		.uleb128 0xb
 15413 01a6 3B       		.uleb128 0x3b
 15414 01a7 0B       		.uleb128 0xb
 15415 01a8 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 316


 15416 01a9 13       		.uleb128 0x13
 15417 01aa 02       		.uleb128 0x2
 15418 01ab 18       		.uleb128 0x18
 15419 01ac 00       		.byte	0
 15420 01ad 00       		.byte	0
 15421 01ae 1E       		.uleb128 0x1e
 15422 01af 34       		.uleb128 0x34
 15423 01b0 00       		.byte	0
 15424 01b1 03       		.uleb128 0x3
 15425 01b2 0E       		.uleb128 0xe
 15426 01b3 3A       		.uleb128 0x3a
 15427 01b4 0B       		.uleb128 0xb
 15428 01b5 3B       		.uleb128 0x3b
 15429 01b6 0B       		.uleb128 0xb
 15430 01b7 49       		.uleb128 0x49
 15431 01b8 13       		.uleb128 0x13
 15432 01b9 3F       		.uleb128 0x3f
 15433 01ba 19       		.uleb128 0x19
 15434 01bb 3C       		.uleb128 0x3c
 15435 01bc 19       		.uleb128 0x19
 15436 01bd 00       		.byte	0
 15437 01be 00       		.byte	0
 15438 01bf 1F       		.uleb128 0x1f
 15439 01c0 21       		.uleb128 0x21
 15440 01c1 00       		.byte	0
 15441 01c2 49       		.uleb128 0x49
 15442 01c3 13       		.uleb128 0x13
 15443 01c4 2F       		.uleb128 0x2f
 15444 01c5 05       		.uleb128 0x5
 15445 01c6 00       		.byte	0
 15446 01c7 00       		.byte	0
 15447 01c8 20       		.uleb128 0x20
 15448 01c9 26       		.uleb128 0x26
 15449 01ca 00       		.byte	0
 15450 01cb 49       		.uleb128 0x49
 15451 01cc 13       		.uleb128 0x13
 15452 01cd 00       		.byte	0
 15453 01ce 00       		.byte	0
 15454 01cf 21       		.uleb128 0x21
 15455 01d0 34       		.uleb128 0x34
 15456 01d1 00       		.byte	0
 15457 01d2 03       		.uleb128 0x3
 15458 01d3 0E       		.uleb128 0xe
 15459 01d4 3A       		.uleb128 0x3a
 15460 01d5 0B       		.uleb128 0xb
 15461 01d6 3B       		.uleb128 0x3b
 15462 01d7 0B       		.uleb128 0xb
 15463 01d8 49       		.uleb128 0x49
 15464 01d9 13       		.uleb128 0x13
 15465 01da 3F       		.uleb128 0x3f
 15466 01db 19       		.uleb128 0x19
 15467 01dc 02       		.uleb128 0x2
 15468 01dd 18       		.uleb128 0x18
 15469 01de 00       		.byte	0
 15470 01df 00       		.byte	0
 15471 01e0 22       		.uleb128 0x22
 15472 01e1 34       		.uleb128 0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 317


 15473 01e2 00       		.byte	0
 15474 01e3 03       		.uleb128 0x3
 15475 01e4 0E       		.uleb128 0xe
 15476 01e5 3A       		.uleb128 0x3a
 15477 01e6 0B       		.uleb128 0xb
 15478 01e7 3B       		.uleb128 0x3b
 15479 01e8 05       		.uleb128 0x5
 15480 01e9 49       		.uleb128 0x49
 15481 01ea 13       		.uleb128 0x13
 15482 01eb 3F       		.uleb128 0x3f
 15483 01ec 19       		.uleb128 0x19
 15484 01ed 3C       		.uleb128 0x3c
 15485 01ee 19       		.uleb128 0x19
 15486 01ef 00       		.byte	0
 15487 01f0 00       		.byte	0
 15488 01f1 23       		.uleb128 0x23
 15489 01f2 34       		.uleb128 0x34
 15490 01f3 00       		.byte	0
 15491 01f4 03       		.uleb128 0x3
 15492 01f5 0E       		.uleb128 0xe
 15493 01f6 3A       		.uleb128 0x3a
 15494 01f7 0B       		.uleb128 0xb
 15495 01f8 3B       		.uleb128 0x3b
 15496 01f9 05       		.uleb128 0x5
 15497 01fa 49       		.uleb128 0x49
 15498 01fb 13       		.uleb128 0x13
 15499 01fc 3F       		.uleb128 0x3f
 15500 01fd 19       		.uleb128 0x19
 15501 01fe 02       		.uleb128 0x2
 15502 01ff 18       		.uleb128 0x18
 15503 0200 00       		.byte	0
 15504 0201 00       		.byte	0
 15505 0202 24       		.uleb128 0x24
 15506 0203 34       		.uleb128 0x34
 15507 0204 00       		.byte	0
 15508 0205 03       		.uleb128 0x3
 15509 0206 08       		.uleb128 0x8
 15510 0207 3A       		.uleb128 0x3a
 15511 0208 0B       		.uleb128 0xb
 15512 0209 3B       		.uleb128 0x3b
 15513 020a 0B       		.uleb128 0xb
 15514 020b 49       		.uleb128 0x49
 15515 020c 13       		.uleb128 0x13
 15516 020d 3F       		.uleb128 0x3f
 15517 020e 19       		.uleb128 0x19
 15518 020f 02       		.uleb128 0x2
 15519 0210 18       		.uleb128 0x18
 15520 0211 00       		.byte	0
 15521 0212 00       		.byte	0
 15522 0213 00       		.byte	0
 15523              		.section	.debug_aranges,"",%progbits
 15524 0000 FC000000 		.4byte	0xfc
 15525 0004 0200     		.2byte	0x2
 15526 0006 00000000 		.4byte	.Ldebug_info0
 15527 000a 04       		.byte	0x4
 15528 000b 00       		.byte	0
 15529 000c 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 318


 15530 000e 0000     		.2byte	0
 15531 0010 00000000 		.4byte	.LFB64
 15532 0014 56000000 		.4byte	.LFE64-.LFB64
 15533 0018 00000000 		.4byte	.LFB65
 15534 001c 64000000 		.4byte	.LFE65-.LFB65
 15535 0020 00000000 		.4byte	.LFB66
 15536 0024 E8010000 		.4byte	.LFE66-.LFB66
 15537 0028 00000000 		.4byte	.LFB67
 15538 002c 18010000 		.4byte	.LFE67-.LFB67
 15539 0030 00000000 		.4byte	.LFB68
 15540 0034 84000000 		.4byte	.LFE68-.LFB68
 15541 0038 00000000 		.4byte	.LFB69
 15542 003c 34000000 		.4byte	.LFE69-.LFB69
 15543 0040 00000000 		.4byte	.LFB70
 15544 0044 7C000000 		.4byte	.LFE70-.LFB70
 15545 0048 00000000 		.4byte	.LFB71
 15546 004c 14000000 		.4byte	.LFE71-.LFB71
 15547 0050 00000000 		.4byte	.LFB72
 15548 0054 9C000000 		.4byte	.LFE72-.LFB72
 15549 0058 00000000 		.4byte	.LFB73
 15550 005c 5C010000 		.4byte	.LFE73-.LFB73
 15551 0060 00000000 		.4byte	.LFB74
 15552 0064 80000000 		.4byte	.LFE74-.LFB74
 15553 0068 00000000 		.4byte	.LFB75
 15554 006c C8250000 		.4byte	.LFE75-.LFB75
 15555 0070 00000000 		.4byte	.LFB76
 15556 0074 70000000 		.4byte	.LFE76-.LFB76
 15557 0078 00000000 		.4byte	.LFB77
 15558 007c 70010000 		.4byte	.LFE77-.LFB77
 15559 0080 00000000 		.4byte	.LFB78
 15560 0084 E0000000 		.4byte	.LFE78-.LFB78
 15561 0088 00000000 		.4byte	.LFB79
 15562 008c F4000000 		.4byte	.LFE79-.LFB79
 15563 0090 00000000 		.4byte	.LFB80
 15564 0094 24000000 		.4byte	.LFE80-.LFB80
 15565 0098 00000000 		.4byte	.LFB81
 15566 009c 54000000 		.4byte	.LFE81-.LFB81
 15567 00a0 00000000 		.4byte	.LFB82
 15568 00a4 C4000000 		.4byte	.LFE82-.LFB82
 15569 00a8 00000000 		.4byte	.LFB83
 15570 00ac 98000000 		.4byte	.LFE83-.LFB83
 15571 00b0 00000000 		.4byte	.LFB84
 15572 00b4 D4000000 		.4byte	.LFE84-.LFB84
 15573 00b8 00000000 		.4byte	.LFB85
 15574 00bc 1C000000 		.4byte	.LFE85-.LFB85
 15575 00c0 00000000 		.4byte	.LFB86
 15576 00c4 68000000 		.4byte	.LFE86-.LFB86
 15577 00c8 00000000 		.4byte	.LFB87
 15578 00cc 68000000 		.4byte	.LFE87-.LFB87
 15579 00d0 00000000 		.4byte	.LFB88
 15580 00d4 68000000 		.4byte	.LFE88-.LFB88
 15581 00d8 00000000 		.4byte	.LFB89
 15582 00dc 6C000000 		.4byte	.LFE89-.LFB89
 15583 00e0 00000000 		.4byte	.LFB90
 15584 00e4 5C000000 		.4byte	.LFE90-.LFB90
 15585 00e8 00000000 		.4byte	.LFB91
 15586 00ec B00E0000 		.4byte	.LFE91-.LFB91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 319


 15587 00f0 00000000 		.4byte	.LFB92
 15588 00f4 FC010000 		.4byte	.LFE92-.LFB92
 15589 00f8 00000000 		.4byte	0
 15590 00fc 00000000 		.4byte	0
 15591              		.section	.debug_ranges,"",%progbits
 15592              	.Ldebug_ranges0:
 15593 0000 70120000 		.4byte	.LBB30
 15594 0004 B0130000 		.4byte	.LBE30
 15595 0008 20140000 		.4byte	.LBB31
 15596 000c 22140000 		.4byte	.LBE31
 15597 0010 00000000 		.4byte	0
 15598 0014 00000000 		.4byte	0
 15599 0018 00000000 		.4byte	.LFB64
 15600 001c 56000000 		.4byte	.LFE64
 15601 0020 00000000 		.4byte	.LFB65
 15602 0024 64000000 		.4byte	.LFE65
 15603 0028 00000000 		.4byte	.LFB66
 15604 002c E8010000 		.4byte	.LFE66
 15605 0030 00000000 		.4byte	.LFB67
 15606 0034 18010000 		.4byte	.LFE67
 15607 0038 00000000 		.4byte	.LFB68
 15608 003c 84000000 		.4byte	.LFE68
 15609 0040 00000000 		.4byte	.LFB69
 15610 0044 34000000 		.4byte	.LFE69
 15611 0048 00000000 		.4byte	.LFB70
 15612 004c 7C000000 		.4byte	.LFE70
 15613 0050 00000000 		.4byte	.LFB71
 15614 0054 14000000 		.4byte	.LFE71
 15615 0058 00000000 		.4byte	.LFB72
 15616 005c 9C000000 		.4byte	.LFE72
 15617 0060 00000000 		.4byte	.LFB73
 15618 0064 5C010000 		.4byte	.LFE73
 15619 0068 00000000 		.4byte	.LFB74
 15620 006c 80000000 		.4byte	.LFE74
 15621 0070 00000000 		.4byte	.LFB75
 15622 0074 C8250000 		.4byte	.LFE75
 15623 0078 00000000 		.4byte	.LFB76
 15624 007c 70000000 		.4byte	.LFE76
 15625 0080 00000000 		.4byte	.LFB77
 15626 0084 70010000 		.4byte	.LFE77
 15627 0088 00000000 		.4byte	.LFB78
 15628 008c E0000000 		.4byte	.LFE78
 15629 0090 00000000 		.4byte	.LFB79
 15630 0094 F4000000 		.4byte	.LFE79
 15631 0098 00000000 		.4byte	.LFB80
 15632 009c 24000000 		.4byte	.LFE80
 15633 00a0 00000000 		.4byte	.LFB81
 15634 00a4 54000000 		.4byte	.LFE81
 15635 00a8 00000000 		.4byte	.LFB82
 15636 00ac C4000000 		.4byte	.LFE82
 15637 00b0 00000000 		.4byte	.LFB83
 15638 00b4 98000000 		.4byte	.LFE83
 15639 00b8 00000000 		.4byte	.LFB84
 15640 00bc D4000000 		.4byte	.LFE84
 15641 00c0 00000000 		.4byte	.LFB85
 15642 00c4 1C000000 		.4byte	.LFE85
 15643 00c8 00000000 		.4byte	.LFB86
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 320


 15644 00cc 68000000 		.4byte	.LFE86
 15645 00d0 00000000 		.4byte	.LFB87
 15646 00d4 68000000 		.4byte	.LFE87
 15647 00d8 00000000 		.4byte	.LFB88
 15648 00dc 68000000 		.4byte	.LFE88
 15649 00e0 00000000 		.4byte	.LFB89
 15650 00e4 6C000000 		.4byte	.LFE89
 15651 00e8 00000000 		.4byte	.LFB90
 15652 00ec 5C000000 		.4byte	.LFE90
 15653 00f0 00000000 		.4byte	.LFB91
 15654 00f4 B00E0000 		.4byte	.LFE91
 15655 00f8 00000000 		.4byte	.LFB92
 15656 00fc FC010000 		.4byte	.LFE92
 15657 0100 00000000 		.4byte	0
 15658 0104 00000000 		.4byte	0
 15659              		.section	.debug_line,"",%progbits
 15660              	.Ldebug_line0:
 15661 0000 460D0000 		.section	.debug_str,"MS",%progbits,1
 15661      0200BC01 
 15661      00000201 
 15661      FB0E0D00 
 15661      01010101 
 15662              	.LASF97:
 15663 0000 70656461 		.ascii	"pedalsMIDIUp\000"
 15663      6C734D49 
 15663      44495570 
 15663      00
 15664              	.LASF244:
 15665 000d 70726573 		.ascii	"presetArraySection\000"
 15665      65744172 
 15665      72617953 
 15665      65637469 
 15665      6F6E00
 15666              	.LASF15:
 15667 0020 696E7438 		.ascii	"int8_t\000"
 15667      5F7400
 15668              	.LASF232:
 15669 0027 70726573 		.ascii	"presetArray\000"
 15669      65744172 
 15669      72617900 
 15670              	.LASF363:
 15671 0033 66697273 		.ascii	"firstSysex\000"
 15671      74537973 
 15671      657800
 15672              	.LASF30:
 15673 003e 73697A65 		.ascii	"sizetype\000"
 15673      74797065 
 15673      00
 15674              	.LASF250:
 15675 0047 73656E64 		.ascii	"sendingMessage\000"
 15675      696E674D 
 15675      65737361 
 15675      676500
 15676              	.LASF331:
 15677 0056 70726576 		.ascii	"prev_processed_volumePedal\000"
 15677      5F70726F 
 15677      63657373 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 321


 15677      65645F76 
 15677      6F6C756D 
 15678              	.LASF88:
 15679 0071 74656D70 		.ascii	"tempangle\000"
 15679      616E676C 
 15679      6500
 15680              	.LASF296:
 15681 007b 6E657744 		.ascii	"newDataFlag2\000"
 15681      61746146 
 15681      6C616732 
 15681      00
 15682              	.LASF177:
 15683 0088 6D616372 		.ascii	"macroNamesArray\000"
 15683      6F4E616D 
 15683      65734172 
 15683      72617900 
 15684              	.LASF209:
 15685 0098 73656E64 		.ascii	"sendLocalPresetStoreCommand\000"
 15685      4C6F6361 
 15685      6C507265 
 15685      73657453 
 15685      746F7265 
 15686              	.LASF40:
 15687 00b4 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 15687      4D5F4545 
 15687      50524F4D 
 15687      5F535543 
 15687      43455353 
 15688              	.LASF19:
 15689 00c9 696E7433 		.ascii	"int32_t\000"
 15689      325F7400 
 15690              	.LASF161:
 15691 00d1 456D5F45 		.ascii	"Em_EEPROM_context\000"
 15691      4550524F 
 15691      4D5F636F 
 15691      6E746578 
 15691      7400
 15692              	.LASF49:
 15693 00e3 54686972 		.ascii	"ThirdLine\000"
 15693      644C696E 
 15693      6500
 15694              	.LASF101:
 15695 00ed 62617242 		.ascii	"barBend\000"
 15695      656E6400 
 15696              	.LASF121:
 15697 00f5 6E6F7465 		.ascii	"noteEvent\000"
 15697      4576656E 
 15697      7400
 15698              	.LASF178:
 15699 00ff 636F6E74 		.ascii	"controlNamesArray\000"
 15699      726F6C4E 
 15699      616D6573 
 15699      41727261 
 15699      7900
 15700              	.LASF305:
 15701 0111 53504932 		.ascii	"SPI2errorflag\000"
 15701      6572726F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 322


 15701      72666C61 
 15701      6700
 15702              	.LASF23:
 15703 011f 75696E74 		.ascii	"uint32\000"
 15703      333200
 15704              	.LASF106:
 15705 0126 77686963 		.ascii	"whichMacroToStoreName\000"
 15705      684D6163 
 15705      726F546F 
 15705      53746F72 
 15705      654E616D 
 15706              	.LASF134:
 15707 013c 43437661 		.ascii	"CCval\000"
 15707      6C00
 15708              	.LASF256:
 15709 0142 6E756D4D 		.ascii	"numMappings\000"
 15709      61707069 
 15709      6E677300 
 15710              	.LASF166:
 15711 014e 49324362 		.ascii	"I2Cbuff1\000"
 15711      75666631 
 15711      00
 15712              	.LASF319:
 15713 0157 49324362 		.ascii	"I2Cbuff2\000"
 15713      75666632 
 15713      00
 15714              	.LASF321:
 15715 0160 6D75785F 		.ascii	"mux_states\000"
 15715      73746174 
 15715      657300
 15716              	.LASF150:
 15717 016b 74656D70 		.ascii	"tempLow\000"
 15717      4C6F7700 
 15718              	.LASF175:
 15719 0173 6E65636B 		.ascii	"necks\000"
 15719      7300
 15720              	.LASF167:
 15721 0179 6F637461 		.ascii	"octave\000"
 15721      766500
 15722              	.LASF252:
 15723 0180 63757272 		.ascii	"currentFloat\000"
 15723      656E7446 
 15723      6C6F6174 
 15723      00
 15724              	.LASF172:
 15725 018d 766F6C75 		.ascii	"volumeWaitingToSend\000"
 15725      6D655761 
 15725      6974696E 
 15725      67546F53 
 15725      656E6400 
 15726              	.LASF51:
 15727 01a1 4E696C4C 		.ascii	"NilLine\000"
 15727      696E6500 
 15728              	.LASF45:
 15729 01a9 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 15729      6E5F656D 
 15729      5F656570 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 323


 15729      726F6D5F 
 15729      73746174 
 15730              	.LASF221:
 15731 01c2 6C617374 		.ascii	"lastBufferStuff\000"
 15731      42756666 
 15731      65725374 
 15731      75666600 
 15732              	.LASF173:
 15733 01d2 6D616372 		.ascii	"macroOLEDWaitingToSend\000"
 15733      6F4F4C45 
 15733      44576169 
 15733      74696E67 
 15733      546F5365 
 15734              	.LASF190:
 15735 01e9 70656461 		.ascii	"pedals_high\000"
 15735      6C735F68 
 15735      69676800 
 15736              	.LASF112:
 15737 01f5 6E627974 		.ascii	"nbytes\000"
 15737      657300
 15738              	.LASF183:
 15739 01fc 636F7065 		.ascii	"copedentNamesArray\000"
 15739      64656E74 
 15739      4E616D65 
 15739      73417272 
 15739      617900
 15740              	.LASF254:
 15741 020f 76616C73 		.ascii	"valsCount\000"
 15741      436F756E 
 15741      7400
 15742              	.LASF218:
 15743 0219 6D617374 		.ascii	"masterTimer\000"
 15743      65725469 
 15743      6D657200 
 15744              	.LASF133:
 15745 0225 43436E75 		.ascii	"CCnum\000"
 15745      6D00
 15746              	.LASF225:
 15747 022b 73797365 		.ascii	"sysexReadPointer\000"
 15747      78526561 
 15747      64506F69 
 15747      6E746572 
 15747      00
 15748              	.LASF42:
 15749 023c 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 15749      4D5F4545 
 15749      50524F4D 
 15749      5F424144 
 15749      5F434845 
 15750              	.LASF38:
 15751 0256 75736572 		.ascii	"userFlashStartAddr\000"
 15751      466C6173 
 15751      68537461 
 15751      72744164 
 15751      647200
 15752              	.LASF32:
 15753 0269 6E756D62 		.ascii	"numberOfRows\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 324


 15753      65724F66 
 15753      526F7773 
 15753      00
 15754              	.LASF143:
 15755 0276 696E7456 		.ascii	"intVal\000"
 15755      616C00
 15756              	.LASF61:
 15757 027d 69737461 		.ascii	"istart\000"
 15757      727400
 15758              	.LASF66:
 15759 0284 70656461 		.ascii	"pedalDiff\000"
 15759      6C446966 
 15759      6600
 15760              	.LASF140:
 15761 028e 74686556 		.ascii	"theVal\000"
 15761      616C00
 15762              	.LASF36:
 15763 0295 72656475 		.ascii	"redundantCopy\000"
 15763      6E64616E 
 15763      74436F70 
 15763      7900
 15764              	.LASF1:
 15765 02a3 5F5F7569 		.ascii	"__uint8_t\000"
 15765      6E74385F 
 15765      7400
 15766              	.LASF255:
 15767 02ad 6D617043 		.ascii	"mapCountExpectation\000"
 15767      6F756E74 
 15767      45787065 
 15767      63746174 
 15767      696F6E00 
 15768              	.LASF59:
 15769 02c1 70726573 		.ascii	"presetEnd\000"
 15769      6574456E 
 15769      6400
 15770              	.LASF318:
 15771 02cb 62617243 		.ascii	"barCount\000"
 15771      6F756E74 
 15771      00
 15772              	.LASF235:
 15773 02d4 73656E64 		.ascii	"sendMessageEnd\000"
 15773      4D657373 
 15773      61676545 
 15773      6E6400
 15774              	.LASF324:
 15775 02e3 70656461 		.ascii	"pedals_highWithDeadZone\000"
 15775      6C735F68 
 15775      69676857 
 15775      69746844 
 15775      6561645A 
 15776              	.LASF182:
 15777 02fb 70726573 		.ascii	"presetNumberToLoad\000"
 15777      65744E75 
 15777      6D626572 
 15777      546F4C6F 
 15777      616400
 15778              	.LASF340:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 325


 15779 030e 766F6963 		.ascii	"voice\000"
 15779      6500
 15780              	.LASF215:
 15781 0314 76657273 		.ascii	"versionNumber\000"
 15781      696F6E4E 
 15781      756D6265 
 15781      7200
 15782              	.LASF286:
 15783 0322 73747269 		.ascii	"strings\000"
 15783      6E677300 
 15784              	.LASF9:
 15785 032a 6C6F6E67 		.ascii	"long int\000"
 15785      20696E74 
 15785      00
 15786              	.LASF171:
 15787 0333 6D61696E 		.ascii	"mainOLEDWaitingToSend\000"
 15787      4F4C4544 
 15787      57616974 
 15787      696E6754 
 15787      6F53656E 
 15788              	.LASF335:
 15789 0349 66726574 		.ascii	"fretScalingInMIDI\000"
 15789      5363616C 
 15789      696E6749 
 15789      6E4D4944 
 15789      4900
 15790              	.LASF334:
 15791 035b 70726573 		.ascii	"presetLoadedResponse\000"
 15791      65744C6F 
 15791      61646564 
 15791      52657370 
 15791      6F6E7365 
 15792              	.LASF233:
 15793 0370 70726573 		.ascii	"presetNumberToWrite\000"
 15793      65744E75 
 15793      6D626572 
 15793      546F5772 
 15793      69746500 
 15794              	.LASF105:
 15795 0384 77686963 		.ascii	"whichPresetToStoreName\000"
 15795      68507265 
 15795      73657454 
 15795      6F53746F 
 15795      72654E61 
 15796              	.LASF181:
 15797 039b 70726573 		.ascii	"presetNamesArray\000"
 15797      65744E61 
 15797      6D657341 
 15797      72726179 
 15797      00
 15798              	.LASF76:
 15799 03ac 6D61696E 		.ascii	"main\000"
 15799      00
 15800              	.LASF343:
 15801 03b1 70726576 		.ascii	"prevStringPitchBend\000"
 15801      53747269 
 15801      6E675069 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 326


 15801      74636842 
 15801      656E6400 
 15802              	.LASF128:
 15803 03c5 4D494449 		.ascii	"MIDInoteNum\000"
 15803      6E6F7465 
 15803      4E756D00 
 15804              	.LASF136:
 15805 03d1 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 15805      4D494449 
 15805      416C6C4E 
 15805      6F746573 
 15805      4F666600 
 15806              	.LASF210:
 15807 03e5 6E657750 		.ascii	"newPresetName\000"
 15807      72657365 
 15807      744E616D 
 15807      6500
 15808              	.LASF114:
 15809 03f3 6572726F 		.ascii	"error\000"
 15809      7200
 15810              	.LASF48:
 15811 03f9 5365636F 		.ascii	"SecondLine\000"
 15811      6E644C69 
 15811      6E6500
 15812              	.LASF87:
 15813 0404 74656D70 		.ascii	"tempSquished\000"
 15813      53717569 
 15813      73686564 
 15813      00
 15814              	.LASF251:
 15815 0411 73656E64 		.ascii	"sendKnobs\000"
 15815      4B6E6F62 
 15815      7300
 15816              	.LASF314:
 15817 041b 70726576 		.ascii	"prevMacroKnobValues7bit\000"
 15817      4D616372 
 15817      6F4B6E6F 
 15817      6256616C 
 15817      75657337 
 15818              	.LASF203:
 15819 0433 6D696469 		.ascii	"midiBarSendOn\000"
 15819      42617253 
 15819      656E644F 
 15819      6E00
 15820              	.LASF306:
 15821 0441 6B6E6F62 		.ascii	"knobs\000"
 15821      7300
 15822              	.LASF262:
 15823 0447 63757272 		.ascii	"currentVBUS\000"
 15823      656E7456 
 15823      42555300 
 15824              	.LASF81:
 15825 0453 73747269 		.ascii	"stringStartLoc\000"
 15825      6E675374 
 15825      6172744C 
 15825      6F6300
 15826              	.LASF2:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 327


 15827 0462 7369676E 		.ascii	"signed char\000"
 15827      65642063 
 15827      68617200 
 15828              	.LASF16:
 15829 046e 75696E74 		.ascii	"uint8_t\000"
 15829      385F7400 
 15830              	.LASF31:
 15831 0476 776C456E 		.ascii	"wlEndAddr\000"
 15831      64416464 
 15831      7200
 15832              	.LASF152:
 15833 0480 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 15833      63616C6C 
 15833      6261636B 
 15833      4C6F6361 
 15833      6C4D6964 
 15834              	.LASF207:
 15835 049b 70726576 		.ascii	"prevMacroKnobValues\000"
 15835      4D616372 
 15835      6F4B6E6F 
 15835      6256616C 
 15835      75657300 
 15836              	.LASF74:
 15837 04af 73706973 		.ascii	"spis_1_ss\000"
 15837      5F315F73 
 15837      7300
 15838              	.LASF43:
 15839 04b9 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 15839      4D5F4545 
 15839      50524F4D 
 15839      5F424144 
 15839      5F444154 
 15840              	.LASF52:
 15841 04cf 5F4F4C45 		.ascii	"_OLEDLine\000"
 15841      444C696E 
 15841      6500
 15842              	.LASF253:
 15843 04d9 6D617043 		.ascii	"mapCount\000"
 15843      6F756E74 
 15843      00
 15844              	.LASF148:
 15845 04e2 74656D70 		.ascii	"tempIntVersion\000"
 15845      496E7456 
 15845      65727369 
 15845      6F6E00
 15846              	.LASF337:
 15847 04f1 70656461 		.ascii	"pedalRatios\000"
 15847      6C526174 
 15847      696F7300 
 15848              	.LASF3:
 15849 04fd 756E7369 		.ascii	"unsigned char\000"
 15849      676E6564 
 15849      20636861 
 15849      7200
 15850              	.LASF204:
 15851 050b 6D696469 		.ascii	"midiDebugSendOn\000"
 15851      44656275 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 328


 15851      6753656E 
 15851      644F6E00 
 15852              	.LASF258:
 15853 051b 76616C43 		.ascii	"valCheck\000"
 15853      6865636B 
 15853      00
 15854              	.LASF142:
 15855 0524 76616C73 		.ascii	"valsStart\000"
 15855      53746172 
 15855      7400
 15856              	.LASF78:
 15857 052e 636F7065 		.ascii	"coped\000"
 15857      6400
 15858              	.LASF276:
 15859 0534 72783143 		.ascii	"rx1Channel\000"
 15859      68616E6E 
 15859      656C00
 15860              	.LASF80:
 15861 053f 70656461 		.ascii	"pedalStartLoc\000"
 15861      6C537461 
 15861      72744C6F 
 15861      6300
 15862              	.LASF292:
 15863 054d 6E657744 		.ascii	"newDataFlag\000"
 15863      61746146 
 15863      6C616700 
 15864              	.LASF352:
 15865 0559 73747269 		.ascii	"stringOctave\000"
 15865      6E674F63 
 15865      74617665 
 15865      00
 15866              	.LASF119:
 15867 0566 5553425F 		.ascii	"USB_service\000"
 15867      73657276 
 15867      69636500 
 15868              	.LASF99:
 15869 0572 6F70656E 		.ascii	"openStringTemp\000"
 15869      53747269 
 15869      6E675465 
 15869      6D7000
 15870              	.LASF237:
 15871 0581 73696E67 		.ascii	"singleParamToUpdateHigh\000"
 15871      6C655061 
 15871      72616D54 
 15871      6F557064 
 15871      61746548 
 15872              	.LASF60:
 15873 0599 76616C75 		.ascii	"value\000"
 15873      6500
 15874              	.LASF338:
 15875 059f 6C617374 		.ascii	"last_mux\000"
 15875      5F6D7578 
 15875      00
 15876              	.LASF131:
 15877 05a8 70726573 		.ascii	"pressure\000"
 15877      73757265 
 15877      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 329


 15878              	.LASF184:
 15879 05b1 70726573 		.ascii	"presetAlreadyDisplayed\000"
 15879      6574416C 
 15879      72656164 
 15879      79446973 
 15879      706C6179 
 15880              	.LASF55:
 15881 05c8 6D616372 		.ascii	"macroNames\000"
 15881      6F4E616D 
 15881      657300
 15882              	.LASF287:
 15883 05d3 70726576 		.ascii	"prevStrings\000"
 15883      53747269 
 15883      6E677300 
 15884              	.LASF26:
 15885 05df 63686172 		.ascii	"char\000"
 15885      00
 15886              	.LASF155:
 15887 05e4 65657072 		.ascii	"eepromArray\000"
 15887      6F6D4172 
 15887      72617900 
 15888              	.LASF138:
 15889 05f0 6D657373 		.ascii	"messageStart\000"
 15889      61676553 
 15889      74617274 
 15889      00
 15890              	.LASF272:
 15891 05fd 72617741 		.ascii	"rawAngle\000"
 15891      6E676C65 
 15891      00
 15892              	.LASF170:
 15893 0606 74726164 		.ascii	"traditionalPedalAdd\000"
 15893      6974696F 
 15893      6E616C50 
 15893      6564616C 
 15893      41646400 
 15894              	.LASF205:
 15895 061a 73656E64 		.ascii	"sendFirmwareUpdateRequest\000"
 15895      4669726D 
 15895      77617265 
 15895      55706461 
 15895      74655265 
 15896              	.LASF108:
 15897 0634 446D6154 		.ascii	"DmaTxConfiguration\000"
 15897      78436F6E 
 15897      66696775 
 15897      72617469 
 15897      6F6E00
 15898              	.LASF6:
 15899 0647 5F5F7569 		.ascii	"__uint16_t\000"
 15899      6E743136 
 15899      5F7400
 15900              	.LASF118:
 15901 0652 63686563 		.ascii	"checkUSB_Vbus\000"
 15901      6B555342 
 15901      5F566275 
 15901      7300
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 330


 15902              	.LASF347:
 15903 0660 73747269 		.ascii	"stringMappedPositionsInRatios\000"
 15903      6E674D61 
 15903      70706564 
 15903      506F7369 
 15903      74696F6E 
 15904              	.LASF151:
 15905 067e 726F756E 		.ascii	"roundedIndex\000"
 15905      64656449 
 15905      6E646578 
 15905      00
 15906              	.LASF317:
 15907 068b 65657072 		.ascii	"eeprom_cnt\000"
 15907      6F6D5F63 
 15907      6E7400
 15908              	.LASF159:
 15909 0696 5553425F 		.ascii	"USB_midi_out_ep\000"
 15909      6D696469 
 15909      5F6F7574 
 15909      5F657000 
 15910              	.LASF89:
 15911 06a6 74656D70 		.ascii	"tempPedal\000"
 15911      50656461 
 15911      6C00
 15912              	.LASF117:
 15913 06b0 4932435F 		.ascii	"I2C_reset\000"
 15913      72657365 
 15913      7400
 15914              	.LASF191:
 15915 06ba 70656461 		.ascii	"pedal_inverted\000"
 15915      6C5F696E 
 15915      76657274 
 15915      656400
 15916              	.LASF46:
 15917 06c9 75696E74 		.ascii	"uint\000"
 15917      00
 15918              	.LASF372:
 15919 06ce 6275726E 		.ascii	"burnInitialPedalZeroPositions\000"
 15919      496E6974 
 15919      69616C50 
 15919      6564616C 
 15919      5A65726F 
 15920              	.LASF130:
 15921 06ec 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 15921      4D494449 
 15921      506F6C79 
 15921      4B657950 
 15921      72657373 
 15922              	.LASF227:
 15923 0704 73797365 		.ascii	"sysexMessageStartPoints\000"
 15923      784D6573 
 15923      73616765 
 15923      53746172 
 15923      74506F69 
 15924              	.LASF147:
 15925 071c 73747269 		.ascii	"stringChange\000"
 15925      6E674368 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 331


 15925      616E6765 
 15925      00
 15926              	.LASF206:
 15927 0729 6B6E6F62 		.ascii	"knobFrozen\000"
 15927      46726F7A 
 15927      656E00
 15928              	.LASF365:
 15929 0734 6D6F7265 		.ascii	"moreToDo\000"
 15929      546F446F 
 15929      00
 15930              	.LASF94:
 15931 073d 636F6D70 		.ascii	"computerMIDIOffset\000"
 15931      75746572 
 15931      4D494449 
 15931      4F666673 
 15931      657400
 15932              	.LASF240:
 15933 0750 73696E67 		.ascii	"singleParamValueLow\000"
 15933      6C655061 
 15933      72616D56 
 15933      616C7565 
 15933      4C6F7700 
 15934              	.LASF132:
 15935 0764 73656E64 		.ascii	"sendMIDIControlChange\000"
 15935      4D494449 
 15935      436F6E74 
 15935      726F6C43 
 15935      68616E67 
 15936              	.LASF291:
 15937 077a 73706943 		.ascii	"spiCounter\000"
 15937      6F756E74 
 15937      657200
 15938              	.LASF194:
 15939 0785 7472616E 		.ascii	"transposeCents\000"
 15939      73706F73 
 15939      6543656E 
 15939      747300
 15940              	.LASF41:
 15941 0794 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 15941      4D5F4545 
 15941      50524F4D 
 15941      5F424144 
 15941      5F504152 
 15942              	.LASF364:
 15943 07ab 73797365 		.ascii	"sysexPointerMask\000"
 15943      78506F69 
 15943      6E746572 
 15943      4D61736B 
 15943      00
 15944              	.LASF163:
 15945 07bc 4932435F 		.ascii	"I2C_1_initVar\000"
 15945      315F696E 
 15945      69745661 
 15945      7200
 15946              	.LASF169:
 15947 07ca 63757272 		.ascii	"currentCopedent\000"
 15947      656E7443 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 332


 15947      6F706564 
 15947      656E7400 
 15948              	.LASF54:
 15949 07da 70726573 		.ascii	"presetName\000"
 15949      65744E61 
 15949      6D6500
 15950              	.LASF53:
 15951 07e5 5F707265 		.ascii	"_presetArraySectionState\000"
 15951      73657441 
 15951      72726179 
 15951      53656374 
 15951      696F6E53 
 15952              	.LASF231:
 15953 07fe 70617273 		.ascii	"parsingSysex\000"
 15953      696E6753 
 15953      79736578 
 15953      00
 15954              	.LASF269:
 15955 080b 72657475 		.ascii	"returnedData\000"
 15955      726E6564 
 15955      44617461 
 15955      00
 15956              	.LASF50:
 15957 0818 466F7572 		.ascii	"FourthLine\000"
 15957      74684C69 
 15957      6E6500
 15958              	.LASF333:
 15959 0823 736C6964 		.ascii	"sliderBugOn\000"
 15959      65724275 
 15959      674F6E00 
 15960              	.LASF185:
 15961 082f 77686963 		.ascii	"whichMacro\000"
 15961      684D6163 
 15961      726F00
 15962              	.LASF325:
 15963 083a 766F6C75 		.ascii	"volumePedal\000"
 15963      6D655065 
 15963      64616C00 
 15964              	.LASF284:
 15965 0846 72784275 		.ascii	"rxBufferPluck\000"
 15965      66666572 
 15965      506C7563 
 15965      6B00
 15966              	.LASF342:
 15967 0854 636F7065 		.ascii	"copedent\000"
 15967      64656E74 
 15967      00
 15968              	.LASF328:
 15969 085d 70656461 		.ascii	"pedals8bit\000"
 15969      6C733862 
 15969      697400
 15970              	.LASF68:
 15971 0868 756E7361 		.ascii	"unsafeFtom\000"
 15971      66654674 
 15971      6F6D00
 15972              	.LASF307:
 15973 0873 70726576 		.ascii	"prevKnobs\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 333


 15973      4B6E6F62 
 15973      7300
 15974              	.LASF303:
 15975 087d 6D795370 		.ascii	"mySpiCounter\000"
 15975      69436F75 
 15975      6E746572 
 15975      00
 15976              	.LASF222:
 15977 088a 6C617374 		.ascii	"lastEndReceive\000"
 15977      456E6452 
 15977      65636569 
 15977      766500
 15978              	.LASF247:
 15979 0899 73797365 		.ascii	"sysexMessageInProgress\000"
 15979      784D6573 
 15979      73616765 
 15979      496E5072 
 15979      6F677265 
 15980              	.LASF366:
 15981 08b0 5350495F 		.ascii	"SPI_errors\000"
 15981      6572726F 
 15981      727300
 15982              	.LASF126:
 15983 08bb 43434576 		.ascii	"CCEvent\000"
 15983      656E7400 
 15984              	.LASF349:
 15985 08c3 73747269 		.ascii	"stringMappedPositionsInMIDI\000"
 15985      6E674D61 
 15985      70706564 
 15985      506F7369 
 15985      74696F6E 
 15986              	.LASF137:
 15987 08df 70617273 		.ascii	"parseSysex\000"
 15987      65537973 
 15987      657800
 15988              	.LASF370:
 15989 08ea 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 15989      73657273 
 15989      5C4A6566 
 15989      66536E79 
 15989      6465725C 
 15990 0918 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 15990      355F656C 
 15990      65637472 
 15990      6F737465 
 15990      656C5F73 
 15991 094a 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 15991      5F50534F 
 15991      43335F35 
 15991      5F546865 
 15991      726D6973 
 15992              	.LASF301:
 15993 0968 696E7075 		.ascii	"inputData\000"
 15993      74446174 
 15993      6100
 15994              	.LASF39:
 15995 0972 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 334


 15995      74635F65 
 15995      6570726F 
 15995      6D5F636F 
 15995      6E746578 
 15996              	.LASF11:
 15997 098a 6C6F6E67 		.ascii	"long unsigned int\000"
 15997      20756E73 
 15997      69676E65 
 15997      6420696E 
 15997      7400
 15998              	.LASF356:
 15999 099c 70726573 		.ascii	"presetWhenMacroWriteStarted\000"
 15999      65745768 
 15999      656E4D61 
 15999      63726F57 
 15999      72697465 
 16000              	.LASF162:
 16001 09b8 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 16001      4550524F 
 16001      4D5F656D 
 16001      5F456570 
 16001      726F6D53 
 16002              	.LASF228:
 16003 09d3 73797365 		.ascii	"sysexMessageStartPointsWritePosition\000"
 16003      784D6573 
 16003      73616765 
 16003      53746172 
 16003      74506F69 
 16004              	.LASF316:
 16005 09f8 65657072 		.ascii	"eepromReturnValue\000"
 16005      6F6D5265 
 16005      7475726E 
 16005      56616C75 
 16005      6500
 16006              	.LASF165:
 16007 0a0a 4465636F 		.ascii	"Decoder_1_Enabled\000"
 16007      6465725F 
 16007      315F456E 
 16007      61626C65 
 16007      6400
 16008              	.LASF217:
 16009 0a1c 6C617374 		.ascii	"lastBufferBegin\000"
 16009      42756666 
 16009      65724265 
 16009      67696E00 
 16010              	.LASF86:
 16011 0a2c 74656D70 		.ascii	"tempInt\000"
 16011      496E7400 
 16012              	.LASF84:
 16013 0a34 73746174 		.ascii	"status\000"
 16013      757300
 16014              	.LASF320:
 16015 0a3b 73656E64 		.ascii	"send_it\000"
 16015      5F697400 
 16016              	.LASF274:
 16017 0a43 6D696469 		.ascii	"midiOverflow\000"
 16017      4F766572 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 335


 16017      666C6F77 
 16017      00
 16018              	.LASF129:
 16019 0a50 6368616E 		.ascii	"channel\000"
 16019      6E656C00 
 16020              	.LASF248:
 16021 0a58 70656461 		.ascii	"pedalHiRes\000"
 16021      6C486952 
 16021      657300
 16022              	.LASF310:
 16023 0a63 75376269 		.ascii	"u7bit_volumePedal\000"
 16023      745F766F 
 16023      6C756D65 
 16023      50656461 
 16023      6C00
 16024              	.LASF196:
 16025 0a75 766F6C75 		.ascii	"volumeInt\000"
 16025      6D65496E 
 16025      7400
 16026              	.LASF219:
 16027 0a7f 6C617374 		.ascii	"lastParseCall\000"
 16027      50617273 
 16027      6543616C 
 16027      6C00
 16028              	.LASF110:
 16029 0a8d 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 16029      4D617374 
 16029      65725772 
 16029      69746542 
 16029      6C6F636B 
 16030              	.LASF102:
 16031 0aa5 6261724D 		.ascii	"barMIDIInt\000"
 16031      49444949 
 16031      6E7400
 16032              	.LASF192:
 16033 0ab0 616E676C 		.ascii	"angle\000"
 16033      6500
 16034              	.LASF260:
 16035 0ab6 6E756D53 		.ascii	"numStrings\000"
 16035      7472696E 
 16035      677300
 16036              	.LASF350:
 16037 0ac1 6261724D 		.ascii	"barMidiOuterStrings\000"
 16037      6964694F 
 16037      75746572 
 16037      53747269 
 16037      6E677300 
 16038              	.LASF44:
 16039 0ad5 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 16039      4D5F4545 
 16039      50524F4D 
 16039      5F575249 
 16039      54455F46 
 16040              	.LASF63:
 16041 0aed 6F737461 		.ascii	"ostart\000"
 16041      727400
 16042              	.LASF180:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 336


 16043 0af4 63757272 		.ascii	"currentPresetSelection\000"
 16043      656E7450 
 16043      72657365 
 16043      7453656C 
 16043      65637469 
 16044              	.LASF355:
 16045 0b0b 6F70656E 		.ascii	"openStringMIDI_Int\000"
 16045      53747269 
 16045      6E674D49 
 16045      44495F49 
 16045      6E7400
 16046              	.LASF62:
 16047 0b1e 6973746F 		.ascii	"istop\000"
 16047      7000
 16048              	.LASF226:
 16049 0b24 73797365 		.ascii	"sysexReset\000"
 16049      78526573 
 16049      657400
 16050              	.LASF77:
 16051 0b2f 70656461 		.ascii	"pedal_inverted_byte\000"
 16051      6C5F696E 
 16051      76657274 
 16051      65645F62 
 16051      79746500 
 16052              	.LASF158:
 16053 0b43 5553425F 		.ascii	"USB_midiInBuffer\000"
 16053      6D696469 
 16053      496E4275 
 16053      66666572 
 16053      00
 16054              	.LASF368:
 16055 0b54 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 16055      43313120 
 16055      352E342E 
 16055      31203230 
 16055      31363036 
 16056 0b87 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 16056      20726576 
 16056      6973696F 
 16056      6E203233 
 16056      37373135 
 16057 0bba 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 16057      66756E63 
 16057      74696F6E 
 16057      2D736563 
 16057      74696F6E 
 16058              	.LASF211:
 16059 0be2 6B6E6F62 		.ascii	"knobPanelLightActive\000"
 16059      50616E65 
 16059      6C4C6967 
 16059      68744163 
 16059      74697665 
 16060              	.LASF127:
 16061 0bf7 73656E64 		.ascii	"sendMIDINoteOn\000"
 16061      4D494449 
 16061      4E6F7465 
 16061      4F6E00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 337


 16062              	.LASF339:
 16063 0c06 6D61696E 		.ascii	"main_counter\000"
 16063      5F636F75 
 16063      6E746572 
 16063      00
 16064              	.LASF139:
 16065 0c13 6D657373 		.ascii	"messageEnd\000"
 16065      61676545 
 16065      6E6400
 16066              	.LASF47:
 16067 0c1e 46697273 		.ascii	"FirstLine\000"
 16067      744C696E 
 16067      6500
 16068              	.LASF198:
 16069 0c28 6475616C 		.ascii	"dualSlider\000"
 16069      536C6964 
 16069      657200
 16070              	.LASF70:
 16071 0c33 72657374 		.ascii	"restartSystemCheck\000"
 16071      61727453 
 16071      79737465 
 16071      6D436865 
 16071      636B00
 16072              	.LASF265:
 16073 0c46 5553425F 		.ascii	"USB_check_flag\000"
 16073      63686563 
 16073      6B5F666C 
 16073      616700
 16074              	.LASF245:
 16075 0c55 6D657373 		.ascii	"messageArraySendCount\000"
 16075      61676541 
 16075      72726179 
 16075      53656E64 
 16075      436F756E 
 16076              	.LASF10:
 16077 0c6b 5F5F7569 		.ascii	"__uint32_t\000"
 16077      6E743332 
 16077      5F7400
 16078              	.LASF224:
 16079 0c76 73797365 		.ascii	"sysexWritePointer\000"
 16079      78577269 
 16079      7465506F 
 16079      696E7465 
 16079      7200
 16080              	.LASF12:
 16081 0c88 6C6F6E67 		.ascii	"long long int\000"
 16081      206C6F6E 
 16081      6720696E 
 16081      7400
 16082              	.LASF200:
 16083 0c96 73747269 		.ascii	"stringRepresentation\000"
 16083      6E675265 
 16083      70726573 
 16083      656E7461 
 16083      74696F6E 
 16084              	.LASF278:
 16085 0cab 72783154 		.ascii	"rx1TD\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 338


 16085      4400
 16086              	.LASF83:
 16087 0cb1 74656D70 		.ascii	"tempIntLow\000"
 16087      496E744C 
 16087      6F7700
 16088              	.LASF141:
 16089 0cbc 73746F70 		.ascii	"stoppingPoint\000"
 16089      70696E67 
 16089      506F696E 
 16089      7400
 16090              	.LASF37:
 16091 0cca 626C6F63 		.ascii	"blockingWrite\000"
 16091      6B696E67 
 16091      57726974 
 16091      6500
 16092              	.LASF282:
 16093 0cd8 72783343 		.ascii	"rx3Channel\000"
 16093      68616E6E 
 16093      656C00
 16094              	.LASF25:
 16095 0ce3 646F7562 		.ascii	"double\000"
 16095      6C6500
 16096              	.LASF369:
 16097 0cea 6D61696E 		.ascii	"main.c\000"
 16097      2E6300
 16098              	.LASF360:
 16099 0cf1 70726576 		.ascii	"prevNotes\000"
 16099      4E6F7465 
 16099      7300
 16100              	.LASF120:
 16101 0cfb 6C6F6732 		.ascii	"log2f_approx\000"
 16101      665F6170 
 16101      70726F78 
 16101      00
 16102              	.LASF213:
 16103 0d08 6E65636B 		.ascii	"neckPresetsByte\000"
 16103      50726573 
 16103      65747342 
 16103      79746500 
 16104              	.LASF202:
 16105 0d18 6D696469 		.ascii	"midiSendOn\000"
 16105      53656E64 
 16105      4F6E00
 16106              	.LASF239:
 16107 0d23 73696E67 		.ascii	"singleParamValueHigh\000"
 16107      6C655061 
 16107      72616D56 
 16107      616C7565 
 16107      48696768 
 16108              	.LASF164:
 16109 0d38 49544D5F 		.ascii	"ITM_RxBuffer\000"
 16109      52784275 
 16109      66666572 
 16109      00
 16110              	.LASF238:
 16111 0d45 73696E67 		.ascii	"singleParamToUpdateLow\000"
 16111      6C655061 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 339


 16111      72616D54 
 16111      6F557064 
 16111      6174654C 
 16112              	.LASF64:
 16113 0d5c 6F73746F 		.ascii	"ostop\000"
 16113      7000
 16114              	.LASF115:
 16115 0d62 74696D65 		.ascii	"timeout\000"
 16115      6F757400 
 16116              	.LASF24:
 16117 0d6a 666C6F61 		.ascii	"float\000"
 16117      7400
 16118              	.LASF327:
 16119 0d70 70726576 		.ascii	"prev_processed_pedals\000"
 16119      5F70726F 
 16119      63657373 
 16119      65645F70 
 16119      6564616C 
 16120              	.LASF312:
 16121 0d86 53504932 		.ascii	"SPI2started\000"
 16121      73746172 
 16121      74656400 
 16122              	.LASF297:
 16123 0d92 63757272 		.ascii	"currentPluckBuffer\000"
 16123      656E7450 
 16123      6C75636B 
 16123      42756666 
 16123      657200
 16124              	.LASF93:
 16125 0da5 6261724D 		.ascii	"barMIDI\000"
 16125      49444900 
 16126              	.LASF135:
 16127 0dad 73656E64 		.ascii	"sendMIDIPitchBend\000"
 16127      4D494449 
 16127      50697463 
 16127      6842656E 
 16127      6400
 16128              	.LASF14:
 16129 0dbf 756E7369 		.ascii	"unsigned int\000"
 16129      676E6564 
 16129      20696E74 
 16129      00
 16130              	.LASF345:
 16131 0dcc 70656461 		.ascii	"pedal_cc_assignments\000"
 16131      6C5F6363 
 16131      5F617373 
 16131      69676E6D 
 16131      656E7473 
 16132              	.LASF230:
 16133 0de1 72656365 		.ascii	"receivingSysex\000"
 16133      6976696E 
 16133      67537973 
 16133      657800
 16134              	.LASF153:
 16135 0df0 6361626C 		.ascii	"cable\000"
 16135      6500
 16136              	.LASF309:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 340


 16137 0df6 70726576 		.ascii	"prevKnobs7bit\000"
 16137      4B6E6F62 
 16137      73376269 
 16137      7400
 16138              	.LASF199:
 16139 0e04 64656164 		.ascii	"deadZone\000"
 16139      5A6F6E65 
 16139      00
 16140              	.LASF71:
 16141 0e0d 56627573 		.ascii	"Vbus_function\000"
 16141      5F66756E 
 16141      6374696F 
 16141      6E00
 16142              	.LASF330:
 16143 0e1b 70726576 		.ascii	"prevPedals7bit\000"
 16143      50656461 
 16143      6C733762 
 16143      697400
 16144              	.LASF123:
 16145 0e2a 76656C6F 		.ascii	"velocity\000"
 16145      63697479 
 16145      00
 16146              	.LASF75:
 16147 0e33 6C6F6164 		.ascii	"loadEEPROMdefaults\000"
 16147      45455052 
 16147      4F4D6465 
 16147      6661756C 
 16147      747300
 16148              	.LASF361:
 16149 0e46 63686563 		.ascii	"checkStatus\000"
 16149      6B537461 
 16149      74757300 
 16150              	.LASF27:
 16151 0e52 63797374 		.ascii	"cystatus\000"
 16151      61747573 
 16151      00
 16152              	.LASF308:
 16153 0e5b 6B6E6F62 		.ascii	"knobs7bit\000"
 16153      73376269 
 16153      7400
 16154              	.LASF69:
 16155 0e65 63616C63 		.ascii	"calculateStringRepDivider\000"
 16155      756C6174 
 16155      65537472 
 16155      696E6752 
 16155      65704469 
 16156              	.LASF122:
 16157 0e7f 73747269 		.ascii	"string\000"
 16157      6E6700
 16158              	.LASF304:
 16159 0e86 6F666673 		.ascii	"offsetErrorCount\000"
 16159      65744572 
 16159      726F7243 
 16159      6F756E74 
 16159      00
 16160              	.LASF332:
 16161 0e97 70726F63 		.ascii	"processed_volumePedal\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 341


 16161      65737365 
 16161      645F766F 
 16161      6C756D65 
 16161      50656461 
 16162              	.LASF100:
 16163 0ead 74656D70 		.ascii	"tempMIDI\000"
 16163      4D494449 
 16163      00
 16164              	.LASF285:
 16165 0eb6 72784275 		.ascii	"rxBufferBar\000"
 16165      66666572 
 16165      42617200 
 16166              	.LASF220:
 16167 0ec2 70726576 		.ascii	"prevLastParseCall\000"
 16167      4C617374 
 16167      50617273 
 16167      6543616C 
 16167      6C00
 16168              	.LASF280:
 16169 0ed4 74784368 		.ascii	"txChannel\000"
 16169      616E6E65 
 16169      6C00
 16170              	.LASF326:
 16171 0ede 70726F63 		.ascii	"processed_pedals\000"
 16171      65737365 
 16171      645F7065 
 16171      64616C73 
 16171      00
 16172              	.LASF341:
 16173 0eef 636F7065 		.ascii	"copedentMapping\000"
 16173      64656E74 
 16173      4D617070 
 16173      696E6700 
 16174              	.LASF270:
 16175 0eff 70726576 		.ascii	"prevAngle\000"
 16175      416E676C 
 16175      6500
 16176              	.LASF293:
 16177 0f09 706C7563 		.ascii	"pluck_index\000"
 16177      6B5F696E 
 16177      64657800 
 16178              	.LASF29:
 16179 0f15 6C6F6E67 		.ascii	"long double\000"
 16179      20646F75 
 16179      626C6500 
 16180              	.LASF103:
 16181 0f21 6F70656E 		.ascii	"openStringMIDI_Int2\000"
 16181      53747269 
 16181      6E674D49 
 16181      44495F49 
 16181      6E743200 
 16182              	.LASF116:
 16183 0f35 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 16183      4D617374 
 16183      65725265 
 16183      6164426C 
 16183      6F636B69 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 342


 16184              	.LASF298:
 16185 0f4c 63757272 		.ascii	"currentBarBuffer\000"
 16185      656E7442 
 16185      61724275 
 16185      66666572 
 16185      00
 16186              	.LASF271:
 16187 0f5d 4144435F 		.ascii	"ADC_values\000"
 16187      76616C75 
 16187      657300
 16188              	.LASF300:
 16189 0f68 53504931 		.ascii	"SPI1ErrorCount\000"
 16189      4572726F 
 16189      72436F75 
 16189      6E7400
 16190              	.LASF273:
 16191 0f77 6D696469 		.ascii	"midiSent\000"
 16191      53656E74 
 16191      00
 16192              	.LASF154:
 16193 0f80 6D696469 		.ascii	"midiMsg\000"
 16193      4D736700 
 16194              	.LASF0:
 16195 0f88 5F5F696E 		.ascii	"__int8_t\000"
 16195      74385F74 
 16195      00
 16196              	.LASF348:
 16197 0f91 73747269 		.ascii	"stringMappedPositionsInRatiosInt\000"
 16197      6E674D61 
 16197      70706564 
 16197      506F7369 
 16197      74696F6E 
 16198              	.LASF168:
 16199 0fb2 63757272 		.ascii	"currentNeck\000"
 16199      656E744E 
 16199      65636B00 
 16200              	.LASF176:
 16201 0fbe 65646974 		.ascii	"editMode\000"
 16201      4D6F6465 
 16201      00
 16202              	.LASF13:
 16203 0fc7 6C6F6E67 		.ascii	"long long unsigned int\000"
 16203      206C6F6E 
 16203      6720756E 
 16203      7369676E 
 16203      65642069 
 16204              	.LASF18:
 16205 0fde 75696E74 		.ascii	"uint16_t\000"
 16205      31365F74 
 16205      00
 16206              	.LASF149:
 16207 0fe7 74656D70 		.ascii	"tempHigh\000"
 16207      48696768 
 16207      00
 16208              	.LASF259:
 16209 0ff0 74657374 		.ascii	"testVal\000"
 16209      56616C00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 343


 16210              	.LASF91:
 16211 0ff8 70656461 		.ascii	"pedalsMIDI\000"
 16211      6C734D49 
 16211      444900
 16212              	.LASF279:
 16213 1003 72783254 		.ascii	"rx2TD\000"
 16213      4400
 16214              	.LASF243:
 16215 1009 636F6E74 		.ascii	"controlSmoothing\000"
 16215      726F6C53 
 16215      6D6F6F74 
 16215      68696E67 
 16215      00
 16216              	.LASF371:
 16217 101a 62726561 		.ascii	"breakFloat\000"
 16217      6B466C6F 
 16217      617400
 16218              	.LASF362:
 16219 1025 63686563 		.ascii	"checkBase\000"
 16219      6B426173 
 16219      6500
 16220              	.LASF96:
 16221 102f 70656461 		.ascii	"pedalsMIDIInt\000"
 16221      6C734D49 
 16221      4449496E 
 16221      7400
 16222              	.LASF72:
 16223 103d 73706973 		.ascii	"spis_2_ss\000"
 16223      5F325F73 
 16223      7300
 16224              	.LASF241:
 16225 1047 73656E64 		.ascii	"sendMappingChangeUpdate\000"
 16225      4D617070 
 16225      696E6743 
 16225      68616E67 
 16225      65557064 
 16226              	.LASF290:
 16227 105f 616D4865 		.ascii	"amHere\000"
 16227      726500
 16228              	.LASF315:
 16229 1066 61727261 		.ascii	"array\000"
 16229      7900
 16230              	.LASF104:
 16231 106c 7363616C 		.ascii	"scaledMIDI\000"
 16231      65644D49 
 16231      444900
 16232              	.LASF28:
 16233 1077 72656738 		.ascii	"reg8\000"
 16233      00
 16234              	.LASF234:
 16235 107c 636F7065 		.ascii	"copedentNumberToWrite\000"
 16235      64656E74 
 16235      4E756D62 
 16235      6572546F 
 16235      57726974 
 16236              	.LASF57:
 16237 1092 6D617043 		.ascii	"mapCountNext\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 344


 16237      6F756E74 
 16237      4E657874 
 16237      00
 16238              	.LASF295:
 16239 109f 73706943 		.ascii	"spiCounter2\000"
 16239      6F756E74 
 16239      65723200 
 16240              	.LASF124:
 16241 10ab 74656D70 		.ascii	"tempVel\000"
 16241      56656C00 
 16242              	.LASF261:
 16243 10b3 75736241 		.ascii	"usbActivityCounter\000"
 16243      63746976 
 16243      69747943 
 16243      6F756E74 
 16243      657200
 16244              	.LASF193:
 16245 10c6 7472616E 		.ascii	"transposeSemitones\000"
 16245      73706F73 
 16245      6553656D 
 16245      69746F6E 
 16245      657300
 16246              	.LASF257:
 16247 10d9 70617273 		.ascii	"parseThatMF\000"
 16247      65546861 
 16247      744D4600 
 16248              	.LASF4:
 16249 10e5 5F5F696E 		.ascii	"__int16_t\000"
 16249      7431365F 
 16249      7400
 16250              	.LASF56:
 16251 10ef 696E6974 		.ascii	"initialVals\000"
 16251      69616C56 
 16251      616C7300 
 16252              	.LASF264:
 16253 10fb 5553425F 		.ascii	"USB_active\000"
 16253      61637469 
 16253      766500
 16254              	.LASF186:
 16255 1106 66726574 		.ascii	"fretCalibrationMode\000"
 16255      43616C69 
 16255      62726174 
 16255      696F6E4D 
 16255      6F646500 
 16256              	.LASF144:
 16257 111a 69676E6F 		.ascii	"ignore\000"
 16257      726500
 16258              	.LASF236:
 16259 1121 73656E64 		.ascii	"sendSingleParamUpdate\000"
 16259      53696E67 
 16259      6C655061 
 16259      72616D55 
 16259      70646174 
 16260              	.LASF367:
 16261 1137 6E656172 		.ascii	"nearbyValues\000"
 16261      62795661 
 16261      6C756573 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 345


 16261      00
 16262              	.LASF223:
 16263 1144 73797365 		.ascii	"sysexBuffer\000"
 16263      78427566 
 16263      66657200 
 16264              	.LASF249:
 16265 1150 62756643 		.ascii	"bufCount\000"
 16265      6F756E74 
 16265      00
 16266              	.LASF216:
 16267 1159 70726576 		.ascii	"prevLastBufferBegin\000"
 16267      4C617374 
 16267      42756666 
 16267      65724265 
 16267      67696E00 
 16268              	.LASF85:
 16269 116d 6D794B6E 		.ascii	"myKnob\000"
 16269      6F6200
 16270              	.LASF145:
 16271 1174 74656D70 		.ascii	"tempChar\000"
 16271      43686172 
 16271      00
 16272              	.LASF359:
 16273 117d 73747269 		.ascii	"stringRepDivider\000"
 16273      6E675265 
 16273      70446976 
 16273      69646572 
 16273      00
 16274              	.LASF179:
 16275 118e 70617463 		.ascii	"patchNum\000"
 16275      684E756D 
 16275      00
 16276              	.LASF90:
 16277 1197 6D794D61 		.ascii	"myMappedPos\000"
 16277      70706564 
 16277      506F7300 
 16278              	.LASF358:
 16279 11a3 70656461 		.ascii	"pedals_float\000"
 16279      6C735F66 
 16279      6C6F6174 
 16279      00
 16280              	.LASF323:
 16281 11b0 70656461 		.ascii	"pedals_lowWithDeadZone\000"
 16281      6C735F6C 
 16281      6F775769 
 16281      74684465 
 16281      61645A6F 
 16282              	.LASF229:
 16283 11c7 73797365 		.ascii	"sysexMessageStartPointsReadPosition\000"
 16283      784D6573 
 16283      73616765 
 16283      53746172 
 16283      74506F69 
 16284              	.LASF313:
 16285 11eb 6D616372 		.ascii	"macroKnobValues7bit\000"
 16285      6F4B6E6F 
 16285      6256616C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 346


 16285      75657337 
 16285      62697400 
 16286              	.LASF21:
 16287 11ff 75696E74 		.ascii	"uint8\000"
 16287      3800
 16288              	.LASF67:
 16289 1205 64656164 		.ascii	"deadZoneFloat\000"
 16289      5A6F6E65 
 16289      466C6F61 
 16289      7400
 16290              	.LASF189:
 16291 1213 70656461 		.ascii	"pedals_low\000"
 16291      6C735F6C 
 16291      6F7700
 16292              	.LASF95:
 16293 121e 70697463 		.ascii	"pitchBendAmount\000"
 16293      6842656E 
 16293      64416D6F 
 16293      756E7400 
 16294              	.LASF197:
 16295 122e 70726576 		.ascii	"prevOctave\000"
 16295      4F637461 
 16295      766500
 16296              	.LASF5:
 16297 1239 73686F72 		.ascii	"short int\000"
 16297      7420696E 
 16297      7400
 16298              	.LASF246:
 16299 1243 6D657373 		.ascii	"messageArraySize\000"
 16299      61676541 
 16299      72726179 
 16299      53697A65 
 16299      00
 16300              	.LASF188:
 16301 1254 66726574 		.ascii	"fretMeasurements\000"
 16301      4D656173 
 16301      7572656D 
 16301      656E7473 
 16301      00
 16302              	.LASF113:
 16303 1265 6D6F6465 		.ascii	"mode\000"
 16303      00
 16304              	.LASF107:
 16305 126a 62756666 		.ascii	"bufferPointer\000"
 16305      6572506F 
 16305      696E7465 
 16305      7200
 16306              	.LASF174:
 16307 1278 6E65636B 		.ascii	"neckByte\000"
 16307      42797465 
 16307      00
 16308              	.LASF354:
 16309 1281 73747269 		.ascii	"stringMIDI\000"
 16309      6E674D49 
 16309      444900
 16310              	.LASF92:
 16311 128c 6F70656E 		.ascii	"openStringMIDI\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 347


 16311      53747269 
 16311      6E674D49 
 16311      444900
 16312              	.LASF17:
 16313 129b 696E7431 		.ascii	"int16_t\000"
 16313      365F7400 
 16314              	.LASF146:
 16315 12a3 70656461 		.ascii	"pedalToWrite\000"
 16315      6C546F57 
 16315      72697465 
 16315      00
 16316              	.LASF357:
 16317 12b0 6D616372 		.ascii	"macroPageWhenMacroWriteStarted\000"
 16317      6F506167 
 16317      65576865 
 16317      6E4D6163 
 16317      726F5772 
 16318              	.LASF34:
 16319 12cf 65657072 		.ascii	"eepromSize\000"
 16319      6F6D5369 
 16319      7A6500
 16320              	.LASF294:
 16321 12da 616D4865 		.ascii	"amHere2\000"
 16321      72653200 
 16322              	.LASF353:
 16323 12e2 73747269 		.ascii	"stringPitch\000"
 16323      6E675069 
 16323      74636800 
 16324              	.LASF35:
 16325 12ee 77656172 		.ascii	"wearLevelingFactor\000"
 16325      4C657665 
 16325      6C696E67 
 16325      46616374 
 16325      6F7200
 16326              	.LASF156:
 16327 1301 5553425F 		.ascii	"USB_midiInPointer\000"
 16327      6D696469 
 16327      496E506F 
 16327      696E7465 
 16327      7200
 16328              	.LASF111:
 16329 1313 69324341 		.ascii	"i2CAddr\000"
 16329      64647200 
 16330              	.LASF267:
 16331 131b 696E4275 		.ascii	"inBuffer\000"
 16331      66666572 
 16331      00
 16332              	.LASF98:
 16333 1324 70656461 		.ascii	"pedalsMIDIDown\000"
 16333      6C734D49 
 16333      4449446F 
 16333      776E00
 16334              	.LASF289:
 16335 1333 6D617853 		.ascii	"maxStrings\000"
 16335      7472696E 
 16335      677300
 16336              	.LASF79:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 348


 16337 133e 6C657474 		.ascii	"letter\000"
 16337      657200
 16338              	.LASF160:
 16339 1345 5553425F 		.ascii	"USB_midiOutBuffer\000"
 16339      6D696469 
 16339      4F757442 
 16339      75666665 
 16339      7200
 16340              	.LASF275:
 16341 1357 6D616372 		.ascii	"macroKnobValues\000"
 16341      6F4B6E6F 
 16341      6256616C 
 16341      75657300 
 16342              	.LASF322:
 16343 1367 6932635F 		.ascii	"i2c_skipped\000"
 16343      736B6970 
 16343      70656400 
 16344              	.LASF346:
 16345 1373 6F70656E 		.ascii	"openStringFrequencies\000"
 16345      53747269 
 16345      6E674672 
 16345      65717565 
 16345      6E636965 
 16346              	.LASF329:
 16347 1389 70656461 		.ascii	"pedals7bit\000"
 16347      6C733762 
 16347      697400
 16348              	.LASF311:
 16349 1394 70726576 		.ascii	"prev_7bit_volumePedal\000"
 16349      5F376269 
 16349      745F766F 
 16349      6C756D65 
 16349      50656461 
 16350              	.LASF266:
 16351 13aa 6D617070 		.ascii	"mappingArray\000"
 16351      696E6741 
 16351      72726179 
 16351      00
 16352              	.LASF302:
 16353 13b7 73706941 		.ascii	"spiAdjusted\000"
 16353      646A7573 
 16353      74656400 
 16354              	.LASF277:
 16355 13c3 72783243 		.ascii	"rx2Channel\000"
 16355      68616E6E 
 16355      656C00
 16356              	.LASF299:
 16357 13ce 706C7563 		.ascii	"pluckErrorCount\000"
 16357      6B457272 
 16357      6F72436F 
 16357      756E7400 
 16358              	.LASF187:
 16359 13de 6C657665 		.ascii	"leverCalibrationMode\000"
 16359      7243616C 
 16359      69627261 
 16359      74696F6E 
 16359      4D6F6465 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 349


 16360              	.LASF157:
 16361 13f3 5553425F 		.ascii	"USB_midi_in_ep\000"
 16361      6D696469 
 16361      5F696E5F 
 16361      657000
 16362              	.LASF109:
 16363 1402 446D6152 		.ascii	"DmaRxConfiguration\000"
 16363      78436F6E 
 16363      66696775 
 16363      72617469 
 16363      6F6E00
 16364              	.LASF20:
 16365 1415 75696E74 		.ascii	"uint32_t\000"
 16365      33325F74 
 16365      00
 16366              	.LASF201:
 16367 141e 6F637461 		.ascii	"octaveAction\000"
 16367      76654163 
 16367      74696F6E 
 16367      00
 16368              	.LASF263:
 16369 142b 70726576 		.ascii	"prevVBUS\000"
 16369      56425553 
 16369      00
 16370              	.LASF283:
 16371 1434 72783354 		.ascii	"rx3TD\000"
 16371      4400
 16372              	.LASF73:
 16373 143a 63616C63 		.ascii	"calculatePedalRatios\000"
 16373      756C6174 
 16373      65506564 
 16373      616C5261 
 16373      74696F73 
 16374              	.LASF7:
 16375 144f 73686F72 		.ascii	"short unsigned int\000"
 16375      7420756E 
 16375      7369676E 
 16375      65642069 
 16375      6E7400
 16376              	.LASF208:
 16377 1462 70726573 		.ascii	"presetNumberToStore\000"
 16377      65744E75 
 16377      6D626572 
 16377      546F5374 
 16377      6F726500 
 16378              	.LASF242:
 16379 1476 70697463 		.ascii	"pitchSmoothing\000"
 16379      68536D6F 
 16379      6F746869 
 16379      6E6700
 16380              	.LASF58:
 16381 1485 6D617070 		.ascii	"mapping\000"
 16381      696E6700 
 16382              	.LASF212:
 16383 148d 6E65636B 		.ascii	"neckPreset\000"
 16383      50726573 
 16383      657400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 350


 16384              	.LASF125:
 16385 1498 6E6F7465 		.ascii	"noteToSend\000"
 16385      546F5365 
 16385      6E6400
 16386              	.LASF281:
 16387 14a3 74785444 		.ascii	"txTD\000"
 16387      00
 16388              	.LASF8:
 16389 14a8 5F5F696E 		.ascii	"__int32_t\000"
 16389      7433325F 
 16389      7400
 16390              	.LASF288:
 16391 14b2 70726576 		.ascii	"prevBar\000"
 16391      42617200 
 16392              	.LASF344:
 16393 14ba 70656461 		.ascii	"pedals\000"
 16393      6C7300
 16394              	.LASF336:
 16395 14c1 66726574 		.ascii	"fretScalingInRatios\000"
 16395      5363616C 
 16395      696E6749 
 16395      6E526174 
 16395      696F7300 
 16396              	.LASF82:
 16397 14d5 74656D70 		.ascii	"tempIntHigh\000"
 16397      496E7448 
 16397      69676800 
 16398              	.LASF214:
 16399 14e1 77686963 		.ascii	"whichMacroPageIsActive\000"
 16399      684D6163 
 16399      726F5061 
 16399      67654973 
 16399      41637469 
 16400              	.LASF33:
 16401 14f8 6C617374 		.ascii	"lastWrRowAddr\000"
 16401      5772526F 
 16401      77416464 
 16401      7200
 16402              	.LASF195:
 16403 1506 7472616E 		.ascii	"transposeFloat\000"
 16403      73706F73 
 16403      65466C6F 
 16403      617400
 16404              	.LASF351:
 16405 1515 73747269 		.ascii	"stringFrequencies\000"
 16405      6E674672 
 16405      65717565 
 16405      6E636965 
 16405      7300
 16406              	.LASF22:
 16407 1527 75696E74 		.ascii	"uint16\000"
 16407      313600
 16408              	.LASF65:
 16409 152e 6D617044 		.ascii	"mapDualSlider\000"
 16409      75616C53 
 16409      6C696465 
 16409      7200
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccIvJ2eN.s 			page 351


 16410              	.LASF268:
 16411 153c 6D794172 		.ascii	"myArray\000"
 16411      72617900 
 16412              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
