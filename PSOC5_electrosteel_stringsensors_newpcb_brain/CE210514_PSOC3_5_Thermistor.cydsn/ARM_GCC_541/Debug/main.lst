ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	usbActivityCounter
  20              		.bss
  21              		.type	usbActivityCounter, %object
  22              		.size	usbActivityCounter, 1
  23              	usbActivityCounter:
  24 0000 00       		.space	1
  25              		.comm	midiMsg,4,4
  26              		.global	currentVBUS
  27              		.type	currentVBUS, %object
  28              		.size	currentVBUS, 1
  29              	currentVBUS:
  30 0001 00       		.space	1
  31              		.global	prevVBUS
  32              		.type	prevVBUS, %object
  33              		.size	prevVBUS, 1
  34              	prevVBUS:
  35 0002 00       		.space	1
  36              		.global	USB_active
  37              		.type	USB_active, %object
  38              		.size	USB_active, 1
  39              	USB_active:
  40 0003 00       		.space	1
  41              		.global	USB_check_flag
  42              		.type	USB_check_flag, %object
  43              		.size	USB_check_flag, 1
  44              	USB_check_flag:
  45 0004 00       		.space	1
  46              		.comm	myArray,74,4
  47              		.comm	myInputArray,2,4
  48              		.comm	linearPotValue32Bit,16,4
  49              		.global	i
  50              		.type	i, %object
  51              		.size	i, 1
  52              	i:
  53 0005 00       		.space	1
  54              		.global	counter
  55              		.type	counter, %object
  56              		.size	counter, 1
  57              	counter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 2


  58 0006 00       		.space	1
  59              		.comm	returnedData,74,4
  60              		.comm	temper,4,4
  61              		.comm	previousButtons,44,4
  62              		.global	octave
  63              		.data
  64              		.align	2
  65              		.type	octave, %object
  66              		.size	octave, 4
  67              	octave:
  68 0000 01000000 		.word	1
  69              		.comm	angle,20,4
  70              		.comm	prevAngle,20,4
  71              		.comm	ADC_values,8,4
  72              		.global	rawAngle
  73              		.bss
  74 0007 00       		.align	1
  75              		.type	rawAngle, %object
  76              		.size	rawAngle, 2
  77              	rawAngle:
  78 0008 0000     		.space	2
  79              		.global	midiSent
  80              		.align	1
  81              		.type	midiSent, %object
  82              		.size	midiSent, 2
  83              	midiSent:
  84 000a 0000     		.space	2
  85              		.global	midiOverflow
  86              		.align	1
  87              		.type	midiOverflow, %object
  88              		.size	midiOverflow, 2
  89              	midiOverflow:
  90 000c 0000     		.space	2
  91              		.comm	rx1Channel,1,1
  92              		.comm	rx2Channel,1,32
  93              		.comm	rx1TD,2,4
  94              		.comm	rx2TD,2,32
  95              		.comm	rxBufferPluck,52,32
  96              		.comm	rxBufferBar,24,32
  97              		.comm	strings,24,4
  98              		.comm	prevStrings,24,4
  99              		.comm	bar,8,4
 100              		.comm	prevBar,8,4
 101              		.comm	maxStrings,24,4
 102              		.global	amHere
 103              		.type	amHere, %object
 104              		.size	amHere, 1
 105              	amHere:
 106 000e 00       		.space	1
 107              		.global	spiCounter
 108              		.type	spiCounter, %object
 109              		.size	spiCounter, 1
 110              	spiCounter:
 111 000f 00       		.space	1
 112              		.global	newDataFlag
 113              		.type	newDataFlag, %object
 114              		.size	newDataFlag, 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 3


 115              	newDataFlag:
 116 0010 00       		.space	1
 117              		.global	prevOctave
 118 0011 000000   		.align	2
 119              		.type	prevOctave, %object
 120              		.size	prevOctave, 4
 121              	prevOctave:
 122 0014 00000000 		.space	4
 123              		.global	pluck_index
 124              		.type	pluck_index, %object
 125              		.size	pluck_index, 1
 126              	pluck_index:
 127 0018 00       		.space	1
 128              		.global	amHere2
 129              		.type	amHere2, %object
 130              		.size	amHere2, 1
 131              	amHere2:
 132 0019 00       		.space	1
 133              		.global	spiCounter2
 134              		.type	spiCounter2, %object
 135              		.size	spiCounter2, 1
 136              	spiCounter2:
 137 001a 00       		.space	1
 138              		.global	newDataFlag2
 139              		.type	newDataFlag2, %object
 140              		.size	newDataFlag2, 1
 141              	newDataFlag2:
 142 001b 00       		.space	1
 143              		.global	currentPluckBuffer
 144              		.type	currentPluckBuffer, %object
 145              		.size	currentPluckBuffer, 1
 146              	currentPluckBuffer:
 147 001c 00       		.space	1
 148              		.global	currentBarBuffer
 149              		.type	currentBarBuffer, %object
 150              		.size	currentBarBuffer, 1
 151              	currentBarBuffer:
 152 001d 00       		.space	1
 153              		.global	pluckErrorCount
 154              		.type	pluckErrorCount, %object
 155              		.size	pluckErrorCount, 1
 156              	pluckErrorCount:
 157 001e 00       		.space	1
 158              		.global	SPI1ErrorCount
 159 001f 00       		.align	1
 160              		.type	SPI1ErrorCount, %object
 161              		.size	SPI1ErrorCount, 2
 162              	SPI1ErrorCount:
 163 0020 0000     		.space	2
 164              		.global	inputData
 165              		.type	inputData, %object
 166              		.size	inputData, 1
 167              	inputData:
 168 0022 00       		.space	1
 169              		.section	.text.spis_1_ss,"ax",%progbits
 170              		.align	2
 171              		.global	spis_1_ss
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 4


 172              		.thumb
 173              		.thumb_func
 174              		.type	spis_1_ss, %function
 175              	spis_1_ss:
 176              	.LFB64:
 177              		.file 1 "main.c"
   1:main.c        **** /*main.c
   2:main.c        **** *****************************************************************************/
   3:main.c        **** #include <device.h>
   4:main.c        **** #include <stdio.h>
   5:main.c        **** #include <math.h>
   6:main.c        **** #include "oled.h"
   7:main.c        **** #include "main.h"
   8:main.c        **** 
   9:main.c        **** #define myBufferSize 74
  10:main.c        **** 
  11:main.c        **** 
  12:main.c        **** volatile uint8 usbActivityCounter = 0u;
  13:main.c        **** uint8 midiMsg[4];
  14:main.c        **** uint8_t currentVBUS = 0;
  15:main.c        **** uint8_t prevVBUS = 0;
  16:main.c        **** volatile uint8_t USB_active = 0;
  17:main.c        **** volatile uint8_t USB_check_flag = 0;
  18:main.c        **** 
  19:main.c        **** uint8 myArray[myBufferSize];
  20:main.c        **** uint8 myInputArray[2];
  21:main.c        **** int32_t linearPotValue32Bit[4];
  22:main.c        **** uint8_t i = 0;
  23:main.c        **** uint8_t counter = 0;
  24:main.c        **** uint8_t returnedData[myBufferSize];
  25:main.c        **** int32_t temper;
  26:main.c        **** int previousButtons[11];
  27:main.c        **** int octave = 1;
  28:main.c        **** uint16_t angle[10];
  29:main.c        **** uint16_t prevAngle[10];
  30:main.c        **** 
  31:main.c        **** uint16_t ADC_values[4];
  32:main.c        **** uint16_t rawAngle = 0;
  33:main.c        **** uint16_t midiSent = 0;
  34:main.c        **** uint16_t midiOverflow = 0;
  35:main.c        **** 
  36:main.c        **** void checkUSB_Vbus(void);
  37:main.c        **** void sendMIDIAllNotesOff(void);
  38:main.c        **** void sendMIDIPitchBend(int val, int channel);
  39:main.c        **** void firstCheckUSB_Vbus(void);
  40:main.c        **** void restartSystemCheck(void);
  41:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel);
  42:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel);
  43:main.c        **** CY_ISR_PROTO(SleepIsr_function);
  44:main.c        **** void noteEvent(int string);
  45:main.c        **** void I2C_reset(void);
  46:main.c        **** void CCEvent(int cc, int val);
  47:main.c        **** void DmaRxConfiguration(void);
  48:main.c        **** /* DMA Configuration for DMA_RX */
  49:main.c        **** #define DMA_RX_BYTES_PER_BURST      (1u)
  50:main.c        **** #define DMA_RX_REQUEST_PER_BURST    (1u)
  51:main.c        **** #define DMA_RX_SRC_BASE             (CYDEV_PERIPH_BASE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 5


  52:main.c        **** #define DMA_RX_DST_BASE             (CYDEV_SRAM_BASE)
  53:main.c        **** 
  54:main.c        **** #define PLUCK_BUFFER_SIZE                 (26u)
  55:main.c        **** #define BAR_BUFFER_SIZE                 (12u)
  56:main.c        **** #define STORE_TD_CFG_ONCMPLT        (1u)
  57:main.c        **** uint8 rx1Channel, rx2Channel __attribute__((aligned(32)));
  58:main.c        **** uint8 rx1TD[2], rx2TD[2] __attribute__((aligned(32)));
  59:main.c        **** 
  60:main.c        **** volatile uint8 rxBufferPluck[2][PLUCK_BUFFER_SIZE] __attribute__((aligned(32)));
  61:main.c        **** volatile uint8 rxBufferBar[2][BAR_BUFFER_SIZE] __attribute__((aligned(32)));
  62:main.c        **** 
  63:main.c        **** volatile uint16_t strings[12];
  64:main.c        **** volatile uint16_t prevStrings[12];
  65:main.c        **** volatile uint16_t bar[4];
  66:main.c        **** volatile uint16_t prevBar[4];
  67:main.c        **** volatile uint16_t maxStrings[12];
  68:main.c        **** volatile uint8_t amHere = 0;
  69:main.c        **** volatile uint8_t spiCounter = 0;
  70:main.c        **** volatile uint8_t newDataFlag = 0;
  71:main.c        **** int prevOctave = 0;
  72:main.c        **** uint8_t pluck_index = 0;
  73:main.c        **** volatile uint8_t amHere2 = 0;
  74:main.c        **** volatile uint8_t spiCounter2 = 0;
  75:main.c        **** volatile uint8_t newDataFlag2 = 0;
  76:main.c        **** volatile uint8_t currentPluckBuffer = 0;
  77:main.c        **** volatile uint8_t currentBarBuffer = 0;
  78:main.c        **** volatile uint8_t pluckErrorCount = 0;
  79:main.c        **** volatile uint16_t SPI1ErrorCount = 0;
  80:main.c        **** 
  81:main.c        **** 
  82:main.c        **** 
  83:main.c        **** volatile uint8_t inputData = 0;
  84:main.c        **** 
  85:main.c        **** 
  86:main.c        **** union breakFloat {
  87:main.c        ****  float f;
  88:main.c        ****  uint8_t b[4];  
  89:main.c        ****  uint32_t u32;
  90:main.c        **** };
  91:main.c        **** 
  92:main.c        **** 
  93:main.c        **** CY_ISR(spis_1_ss)
  94:main.c        **** {
 178              		.loc 1 94 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 80B5     		push	{r7, lr}
 183              		.cfi_def_cfa_offset 8
 184              		.cfi_offset 7, -8
 185              		.cfi_offset 14, -4
 186 0002 00AF     		add	r7, sp, #0
 187              		.cfi_def_cfa_register 7
  95:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 188              		.loc 1 95 0
 189 0004 224B     		ldr	r3, .L2
 190 0006 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 6


 191 0008 DBB2     		uxtb	r3, r3
 192 000a 002B     		cmp	r3, #0
 193 000c 0CBF     		ite	eq
 194 000e 0123     		moveq	r3, #1
 195 0010 0023     		movne	r3, #0
 196 0012 DBB2     		uxtb	r3, r3
 197 0014 1A46     		mov	r2, r3
 198 0016 1E4B     		ldr	r3, .L2
 199 0018 1A70     		strb	r2, [r3]
  96:main.c        **** 
  97:main.c        ****     SPIS_1_ClearRxBuffer();
 200              		.loc 1 97 0
 201 001a FFF7FEFF 		bl	SPIS_1_ClearRxBuffer
  98:main.c        ****     CyDmaClearPendingDrq(rx1Channel);
 202              		.loc 1 98 0
 203 001e 1D4B     		ldr	r3, .L2+4
 204 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 205 0022 1846     		mov	r0, r3
 206 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
  99:main.c        **** 
 100:main.c        ****     //set up the next DMA transaction
 101:main.c        **** 
 102:main.c        ****     CyDmaTdSetConfiguration(rx1TD[currentPluckBuffer], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DS
 207              		.loc 1 102 0
 208 0028 194B     		ldr	r3, .L2
 209 002a 1B78     		ldrb	r3, [r3]
 210 002c DBB2     		uxtb	r3, r3
 211 002e 1A46     		mov	r2, r3
 212 0030 194B     		ldr	r3, .L2+8
 213 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 214 0034 0223     		movs	r3, #2
 215 0036 FE22     		movs	r2, #254
 216 0038 1A21     		movs	r1, #26
 217 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 103:main.c        ****     CyDmaTdSetAddress(rx1TD[currentPluckBuffer], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rx
 218              		.loc 1 103 0
 219 003e 144B     		ldr	r3, .L2
 220 0040 1B78     		ldrb	r3, [r3]
 221 0042 DBB2     		uxtb	r3, r3
 222 0044 1A46     		mov	r2, r3
 223 0046 144B     		ldr	r3, .L2+8
 224 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 225 004a 114B     		ldr	r3, .L2
 226 004c 1B78     		ldrb	r3, [r3]
 227 004e DBB2     		uxtb	r3, r3
 228 0050 1A46     		mov	r2, r3
 229 0052 1A23     		movs	r3, #26
 230 0054 03FB02F3 		mul	r3, r3, r2
 231 0058 104A     		ldr	r2, .L2+12
 232 005a 1344     		add	r3, r3, r2
 233 005c 9BB2     		uxth	r3, r3
 234 005e 1A46     		mov	r2, r3
 235 0060 46F25741 		movw	r1, #25687
 236 0064 FFF7FEFF 		bl	CyDmaTdSetAddress
 104:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[currentPluckBuffer]);
 237              		.loc 1 104 0
 238 0068 0A4B     		ldr	r3, .L2+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 7


 239 006a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 240 006c 084B     		ldr	r3, .L2
 241 006e 1B78     		ldrb	r3, [r3]
 242 0070 DBB2     		uxtb	r3, r3
 243 0072 1946     		mov	r1, r3
 244 0074 084B     		ldr	r3, .L2+8
 245 0076 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 246 0078 1946     		mov	r1, r3
 247 007a 1046     		mov	r0, r2
 248 007c FFF7FEFF 		bl	CyDmaChSetInitialTd
 105:main.c        ****     CyDmaChEnable(rx1Channel, 1);
 249              		.loc 1 105 0
 250 0080 044B     		ldr	r3, .L2+4
 251 0082 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 252 0084 0121     		movs	r1, #1
 253 0086 1846     		mov	r0, r3
 254 0088 FFF7FEFF 		bl	CyDmaChEnable
 106:main.c        **** 
 107:main.c        ****     /*
 108:main.c        ****     //get rid of any data in the spi2 buffer
 109:main.c        ****     currentPluckBuffer = !currentPluckBuffer;
 110:main.c        ****     pluck_index = 0;
 111:main.c        ****     SPIS_1_ClearRxBuffer();
 112:main.c        ****     //set up dma to transfer with a clean start
 113:main.c        ****     //CyDmaChSetInitialTd(rx2Channel, rx2TD[0]);
 114:main.c        ****     //CyDmaChEnable(rx2Channel, 1);
 115:main.c        ****     //offsetErrorCount++;
 116:main.c        ****     //disable this interrupt until another error occurs
 117:main.c        ****     //isr_SPI2_ss_Stop();
 118:main.c        ****     */
 119:main.c        **** }
 255              		.loc 1 119 0
 256 008c 00BF     		nop
 257 008e 80BD     		pop	{r7, pc}
 258              	.L3:
 259              		.align	2
 260              	.L2:
 261 0090 00000000 		.word	currentPluckBuffer
 262 0094 00000000 		.word	rx1Channel
 263 0098 00000000 		.word	rx1TD
 264 009c 00000000 		.word	rxBufferPluck
 265              		.cfi_endproc
 266              	.LFE64:
 267              		.size	spis_1_ss, .-spis_1_ss
 268              		.section	.text.spis_1_function,"ax",%progbits
 269              		.align	2
 270              		.global	spis_1_function
 271              		.thumb
 272              		.thumb_func
 273              		.type	spis_1_function, %function
 274              	spis_1_function:
 275              	.LFB65:
 120:main.c        **** 
 121:main.c        **** CY_ISR(spis_1_function) {     /* No need to clear any interrupt source; interrupt component should 
 276              		.loc 1 121 0
 277              		.cfi_startproc
 278              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 8


 279              		@ frame_needed = 1, uses_anonymous_args = 0
 280 0000 90B5     		push	{r4, r7, lr}
 281              		.cfi_def_cfa_offset 12
 282              		.cfi_offset 4, -12
 283              		.cfi_offset 7, -8
 284              		.cfi_offset 14, -4
 285 0002 83B0     		sub	sp, sp, #12
 286              		.cfi_def_cfa_offset 24
 287 0004 00AF     		add	r7, sp, #0
 288              		.cfi_def_cfa_register 7
 122:main.c        ****     //SPI receive from pluck detector
 123:main.c        ****     while(SPIS_1_GetRxBufferSize())
 289              		.loc 1 123 0
 290 0006 17E0     		b	.L5
 291              	.L6:
 124:main.c        ****     {
 125:main.c        ****         rxBufferPluck[currentPluckBuffer][pluck_index] = CY_GET_REG8(SPIS_1_RXDATA_PTR);
 292              		.loc 1 125 0
 293 0008 3E4B     		ldr	r3, .L13
 294 000a 1B78     		ldrb	r3, [r3]
 295 000c DBB2     		uxtb	r3, r3
 296 000e 1C46     		mov	r4, r3
 297 0010 3D4B     		ldr	r3, .L13+4
 298 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 299 0014 1846     		mov	r0, r3
 300 0016 3D4B     		ldr	r3, .L13+8
 301 0018 1B78     		ldrb	r3, [r3]
 302 001a D9B2     		uxtb	r1, r3
 303 001c 3C4A     		ldr	r2, .L13+12
 304 001e 1A23     		movs	r3, #26
 305 0020 03FB04F3 		mul	r3, r3, r4
 306 0024 1344     		add	r3, r3, r2
 307 0026 0344     		add	r3, r3, r0
 308 0028 0A46     		mov	r2, r1
 309 002a 1A70     		strb	r2, [r3]
 126:main.c        ****         pluck_index++;
 310              		.loc 1 126 0
 311 002c 364B     		ldr	r3, .L13+4
 312 002e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 313 0030 0133     		adds	r3, r3, #1
 314 0032 DAB2     		uxtb	r2, r3
 315 0034 344B     		ldr	r3, .L13+4
 316 0036 1A70     		strb	r2, [r3]
 317              	.L5:
 123:main.c        ****     {
 318              		.loc 1 123 0
 319 0038 FFF7FEFF 		bl	SPIS_1_GetRxBufferSize
 320 003c 0346     		mov	r3, r0
 321 003e 002B     		cmp	r3, #0
 322 0040 E2D1     		bne	.L6
 127:main.c        ****     }
 128:main.c        ****         
 129:main.c        ****     if (pluck_index == 26)
 323              		.loc 1 129 0
 324 0042 314B     		ldr	r3, .L13+4
 325 0044 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 326 0046 1A2B     		cmp	r3, #26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 9


 327 0048 57D1     		bne	.L12
 130:main.c        ****     {
 131:main.c        ****         if ((rxBufferPluck[currentPluckBuffer][0] == 254) && (rxBufferPluck[currentPluckBuffer][21]
 328              		.loc 1 131 0
 329 004a 2E4B     		ldr	r3, .L13
 330 004c 1B78     		ldrb	r3, [r3]
 331 004e DBB2     		uxtb	r3, r3
 332 0050 1946     		mov	r1, r3
 333 0052 2F4A     		ldr	r2, .L13+12
 334 0054 1A23     		movs	r3, #26
 335 0056 03FB01F3 		mul	r3, r3, r1
 336 005a 1344     		add	r3, r3, r2
 337 005c 1B78     		ldrb	r3, [r3]
 338 005e DBB2     		uxtb	r3, r3
 339 0060 FE2B     		cmp	r3, #254
 340 0062 3FD1     		bne	.L8
 341              		.loc 1 131 0 is_stmt 0 discriminator 1
 342 0064 274B     		ldr	r3, .L13
 343 0066 1B78     		ldrb	r3, [r3]
 344 0068 DBB2     		uxtb	r3, r3
 345 006a 1946     		mov	r1, r3
 346 006c 284A     		ldr	r2, .L13+12
 347 006e 1A23     		movs	r3, #26
 348 0070 03FB01F3 		mul	r3, r3, r1
 349 0074 1344     		add	r3, r3, r2
 350 0076 1533     		adds	r3, r3, #21
 351 0078 1B78     		ldrb	r3, [r3]
 352 007a DBB2     		uxtb	r3, r3
 353 007c FD2B     		cmp	r3, #253
 354 007e 31D1     		bne	.L8
 355              	.LBB2:
 132:main.c        ****         {
 133:main.c        **** 
 134:main.c        ****             for (int i = 0; i < 12; i++)
 356              		.loc 1 134 0 is_stmt 1
 357 0080 0023     		movs	r3, #0
 358 0082 7B60     		str	r3, [r7, #4]
 359 0084 2AE0     		b	.L9
 360              	.L10:
 135:main.c        ****             {
 136:main.c        ****                 strings[i] = ((rxBufferPluck[currentPluckBuffer][(i*2)+1] << 7) + rxBufferPluck[cur
 361              		.loc 1 136 0 discriminator 3
 362 0086 1F4B     		ldr	r3, .L13
 363 0088 1B78     		ldrb	r3, [r3]
 364 008a DBB2     		uxtb	r3, r3
 365 008c 1846     		mov	r0, r3
 366 008e 7B68     		ldr	r3, [r7, #4]
 367 0090 5B00     		lsls	r3, r3, #1
 368 0092 0133     		adds	r3, r3, #1
 369 0094 1E49     		ldr	r1, .L13+12
 370 0096 1A22     		movs	r2, #26
 371 0098 02FB00F2 		mul	r2, r2, r0
 372 009c 0A44     		add	r2, r2, r1
 373 009e 1344     		add	r3, r3, r2
 374 00a0 1B78     		ldrb	r3, [r3]
 375 00a2 DBB2     		uxtb	r3, r3
 376 00a4 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 10


 377 00a6 DB01     		lsls	r3, r3, #7
 378 00a8 9AB2     		uxth	r2, r3
 379 00aa 164B     		ldr	r3, .L13
 380 00ac 1B78     		ldrb	r3, [r3]
 381 00ae DBB2     		uxtb	r3, r3
 382 00b0 1C46     		mov	r4, r3
 383 00b2 7B68     		ldr	r3, [r7, #4]
 384 00b4 0133     		adds	r3, r3, #1
 385 00b6 5B00     		lsls	r3, r3, #1
 386 00b8 1548     		ldr	r0, .L13+12
 387 00ba 1A21     		movs	r1, #26
 388 00bc 01FB04F1 		mul	r1, r1, r4
 389 00c0 0144     		add	r1, r1, r0
 390 00c2 0B44     		add	r3, r3, r1
 391 00c4 1B78     		ldrb	r3, [r3]
 392 00c6 DBB2     		uxtb	r3, r3
 393 00c8 9BB2     		uxth	r3, r3
 394 00ca 1344     		add	r3, r3, r2
 395 00cc 99B2     		uxth	r1, r3
 396 00ce 114A     		ldr	r2, .L13+16
 397 00d0 7B68     		ldr	r3, [r7, #4]
 398 00d2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 134:main.c        ****             {
 399              		.loc 1 134 0 discriminator 3
 400 00d6 7B68     		ldr	r3, [r7, #4]
 401 00d8 0133     		adds	r3, r3, #1
 402 00da 7B60     		str	r3, [r7, #4]
 403              	.L9:
 134:main.c        ****             {
 404              		.loc 1 134 0 is_stmt 0 discriminator 1
 405 00dc 7B68     		ldr	r3, [r7, #4]
 406 00de 0B2B     		cmp	r3, #11
 407 00e0 D1DD     		ble	.L10
 408              	.LBE2:
 134:main.c        ****             {
 409              		.loc 1 134 0
 410 00e2 0AE0     		b	.L11
 411              	.L8:
 137:main.c        ****             }
 138:main.c        ****             
 139:main.c        ****         }
 140:main.c        ****         else
 141:main.c        ****         {
 142:main.c        ****             
 143:main.c        ****             //disable the dma chain
 144:main.c        ****             //CyDmaChDisable(rx2Channel);
 145:main.c        **** 
 146:main.c        ****             SPI1ErrorCount++;
 412              		.loc 1 146 0 is_stmt 1
 413 00e4 0C4B     		ldr	r3, .L13+20
 414 00e6 1B88     		ldrh	r3, [r3]	@ movhi
 415 00e8 9BB2     		uxth	r3, r3
 416 00ea 0133     		adds	r3, r3, #1
 417 00ec 9AB2     		uxth	r2, r3
 418 00ee 0A4B     		ldr	r3, .L13+20
 419 00f0 1A80     		strh	r2, [r3]	@ movhi
 147:main.c        ****             //enable an interrupt to reset it on the rising edge of the cs (at the end of an 8-byte
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 11


 148:main.c        ****             //isr_SPI2_ss_StartEx(spis_2_ss);
 149:main.c        **** 
 150:main.c        **** 
 151:main.c        ****             
 152:main.c        ****             amHere = 1;
 420              		.loc 1 152 0
 421 00f2 0A4B     		ldr	r3, .L13+24
 422 00f4 0122     		movs	r2, #1
 423 00f6 1A70     		strb	r2, [r3]
 153:main.c        ****         }
 154:main.c        ****     }
 155:main.c        ****     /*
 156:main.c        ****     uint8_t currentTd = 0;
 157:main.c        ****     uint8_t state = 0;
 158:main.c        ****      CyDmaChStatus(rx1Channel, &currentTd, &state);
 159:main.c        ****     
 160:main.c        **** 
 161:main.c        ****     currentPluckBuffer = (currentTd & 1);
 162:main.c        ****     if ((rxBufferPluck[currentPluckBuffer][0] == 254) && (rxBufferPluck[currentPluckBuffer][21] == 
 163:main.c        ****     {
 164:main.c        ****         for (int i = 0; i < 10; i++)
 165:main.c        ****         {
 166:main.c        ****             strings[i] = ((rxBufferPluck[currentPluckBuffer][(i*2)+1] << 7) + rxBufferPluck[current
 167:main.c        ****         }
 168:main.c        ****     }
 169:main.c        ****     else
 170:main.c        ****     {
 171:main.c        ****         pluckErrorCount++;
 172:main.c        ****     }
 173:main.c        ****     amHere = 1;
 174:main.c        ****     */
 175:main.c        **** }
 424              		.loc 1 175 0
 425 00f8 FFE7     		b	.L12
 426              	.L11:
 427              	.L12:
 428 00fa 00BF     		nop
 429 00fc 0C37     		adds	r7, r7, #12
 430              		.cfi_def_cfa_offset 12
 431 00fe BD46     		mov	sp, r7
 432              		.cfi_def_cfa_register 13
 433              		@ sp needed
 434 0100 90BD     		pop	{r4, r7, pc}
 435              	.L14:
 436 0102 00BF     		.align	2
 437              	.L13:
 438 0104 00000000 		.word	currentPluckBuffer
 439 0108 00000000 		.word	pluck_index
 440 010c 57640040 		.word	1073767511
 441 0110 00000000 		.word	rxBufferPluck
 442 0114 00000000 		.word	strings
 443 0118 00000000 		.word	SPI1ErrorCount
 444 011c 00000000 		.word	amHere
 445              		.cfi_endproc
 446              	.LFE65:
 447              		.size	spis_1_function, .-spis_1_function
 448              		.global	spiAdjusted
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 12


 449              		.bss
 450              		.type	spiAdjusted, %object
 451              		.size	spiAdjusted, 1
 452              	spiAdjusted:
 453 0023 00       		.space	1
 454              		.global	mySpiCounter
 455              		.type	mySpiCounter, %object
 456              		.size	mySpiCounter, 1
 457              	mySpiCounter:
 458 0024 00       		.space	1
 459              		.global	offsetErrorCount
 460 0025 00       		.align	1
 461              		.type	offsetErrorCount, %object
 462              		.size	offsetErrorCount, 2
 463              	offsetErrorCount:
 464 0026 0000     		.space	2
 465              		.global	SPI2errorflag
 466              		.type	SPI2errorflag, %object
 467              		.size	SPI2errorflag, 1
 468              	SPI2errorflag:
 469 0028 00       		.space	1
 470              		.global	bar_index
 471 0029 000000   		.align	2
 472              		.type	bar_index, %object
 473              		.size	bar_index, 4
 474              	bar_index:
 475 002c 00000000 		.space	4
 476              		.comm	knobs,4,4
 477              		.comm	prevKnobs,4,4
 478              		.global	SPI2started
 479              		.type	SPI2started, %object
 480              		.size	SPI2started, 1
 481              	SPI2started:
 482 0030 00       		.space	1
 483              		.section	.text.spis_2_ss,"ax",%progbits
 484              		.align	2
 485              		.global	spis_2_ss
 486              		.thumb
 487              		.thumb_func
 488              		.type	spis_2_ss, %function
 489              	spis_2_ss:
 490              	.LFB66:
 176:main.c        **** 
 177:main.c        **** uint8_t spiAdjusted = 0;
 178:main.c        **** uint8_t mySpiCounter = 0;
 179:main.c        **** volatile uint16_t offsetErrorCount = 0;
 180:main.c        **** volatile uint8_t SPI2errorflag = 0;
 181:main.c        **** volatile int bar_index = 0;
 182:main.c        **** uint8_t knobs[4];
 183:main.c        **** uint8_t prevKnobs[4];
 184:main.c        **** 
 185:main.c        **** volatile uint8_t SPI2started = 0;
 186:main.c        **** 
 187:main.c        **** 
 188:main.c        **** CY_ISR(spis_2_ss)
 189:main.c        **** {
 491              		.loc 1 189 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 13


 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 1, uses_anonymous_args = 0
 495 0000 80B5     		push	{r7, lr}
 496              		.cfi_def_cfa_offset 8
 497              		.cfi_offset 7, -8
 498              		.cfi_offset 14, -4
 499 0002 00AF     		add	r7, sp, #0
 500              		.cfi_def_cfa_register 7
 190:main.c        ****     //get rid of any data in the spi2 buffer
 191:main.c        **** 
 192:main.c        **** 
 193:main.c        ****     currentBarBuffer = !currentBarBuffer;
 501              		.loc 1 193 0
 502 0004 234B     		ldr	r3, .L16
 503 0006 1B78     		ldrb	r3, [r3]
 504 0008 DBB2     		uxtb	r3, r3
 505 000a 002B     		cmp	r3, #0
 506 000c 0CBF     		ite	eq
 507 000e 0123     		moveq	r3, #1
 508 0010 0023     		movne	r3, #0
 509 0012 DBB2     		uxtb	r3, r3
 510 0014 1A46     		mov	r2, r3
 511 0016 1F4B     		ldr	r3, .L16
 512 0018 1A70     		strb	r2, [r3]
 194:main.c        ****     SPIS_2_ClearRxBuffer();
 513              		.loc 1 194 0
 514 001a FFF7FEFF 		bl	SPIS_2_ClearRxBuffer
 195:main.c        ****     CyDmaClearPendingDrq(rx2Channel);
 515              		.loc 1 195 0
 516 001e 1E4B     		ldr	r3, .L16+4
 517 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 518 0022 1846     		mov	r0, r3
 519 0024 FFF7FEFF 		bl	CyDmaClearPendingDrq
 196:main.c        **** 
 197:main.c        ****     //set up the next DMA transaction
 198:main.c        **** 
 199:main.c        ****     CyDmaTdSetConfiguration(rx2TD[currentBarBuffer], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_AD
 520              		.loc 1 199 0
 521 0028 1A4B     		ldr	r3, .L16
 522 002a 1B78     		ldrb	r3, [r3]
 523 002c DBB2     		uxtb	r3, r3
 524 002e 1A46     		mov	r2, r3
 525 0030 1A4B     		ldr	r3, .L16+8
 526 0032 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 527 0034 0623     		movs	r3, #6
 528 0036 FE22     		movs	r2, #254
 529 0038 0C21     		movs	r1, #12
 530 003a FFF7FEFF 		bl	CyDmaTdSetConfiguration
 200:main.c        ****     CyDmaTdSetAddress(rx2TD[currentBarBuffer], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBu
 531              		.loc 1 200 0
 532 003e 154B     		ldr	r3, .L16
 533 0040 1B78     		ldrb	r3, [r3]
 534 0042 DBB2     		uxtb	r3, r3
 535 0044 1A46     		mov	r2, r3
 536 0046 154B     		ldr	r3, .L16+8
 537 0048 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 14


 538 004a 124B     		ldr	r3, .L16
 539 004c 1B78     		ldrb	r3, [r3]
 540 004e DBB2     		uxtb	r3, r3
 541 0050 1A46     		mov	r2, r3
 542 0052 1346     		mov	r3, r2
 543 0054 5B00     		lsls	r3, r3, #1
 544 0056 1344     		add	r3, r3, r2
 545 0058 9B00     		lsls	r3, r3, #2
 546 005a 114A     		ldr	r2, .L16+12
 547 005c 1344     		add	r3, r3, r2
 548 005e 9BB2     		uxth	r3, r3
 549 0060 1A46     		mov	r2, r3
 550 0062 46F25B51 		movw	r1, #25947
 551 0066 FFF7FEFF 		bl	CyDmaTdSetAddress
 201:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[currentBarBuffer]);
 552              		.loc 1 201 0
 553 006a 0B4B     		ldr	r3, .L16+4
 554 006c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 555 006e 094B     		ldr	r3, .L16
 556 0070 1B78     		ldrb	r3, [r3]
 557 0072 DBB2     		uxtb	r3, r3
 558 0074 1946     		mov	r1, r3
 559 0076 094B     		ldr	r3, .L16+8
 560 0078 5B5C     		ldrb	r3, [r3, r1]	@ zero_extendqisi2
 561 007a 1946     		mov	r1, r3
 562 007c 1046     		mov	r0, r2
 563 007e FFF7FEFF 		bl	CyDmaChSetInitialTd
 202:main.c        ****     CyDmaChEnable(rx2Channel, 1);
 564              		.loc 1 202 0
 565 0082 054B     		ldr	r3, .L16+4
 566 0084 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567 0086 0121     		movs	r1, #1
 568 0088 1846     		mov	r0, r3
 569 008a FFF7FEFF 		bl	CyDmaChEnable
 203:main.c        ****     //SPI2started = 1;
 204:main.c        **** 
 205:main.c        ****     /*
 206:main.c        ****     //get rid of any data in the spi2 buffer
 207:main.c        ****     currentBarBuffer = !currentBarBuffer;
 208:main.c        ****     bar_index = 0;
 209:main.c        ****     SPIS_2_ClearRxBuffer();
 210:main.c        ****     */
 211:main.c        ****     //set up dma to transfer with a clean start
 212:main.c        ****     //CyDmaChSetInitialTd(rx2Channel, rx2TD[0]);
 213:main.c        ****     //CyDmaChEnable(rx2Channel, 1);
 214:main.c        ****     //offsetErrorCount++;
 215:main.c        ****     //disable this interrupt until another error occurs
 216:main.c        ****     //isr_SPI2_ss_Stop();
 217:main.c        **** }
 570              		.loc 1 217 0
 571 008e 00BF     		nop
 572 0090 80BD     		pop	{r7, pc}
 573              	.L17:
 574 0092 00BF     		.align	2
 575              	.L16:
 576 0094 00000000 		.word	currentBarBuffer
 577 0098 00000000 		.word	rx2Channel
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 15


 578 009c 00000000 		.word	rx2TD
 579 00a0 00000000 		.word	rxBufferBar
 580              		.cfi_endproc
 581              	.LFE66:
 582              		.size	spis_2_ss, .-spis_2_ss
 583              		.section	.text.spis_2_function,"ax",%progbits
 584              		.align	2
 585              		.global	spis_2_function
 586              		.thumb
 587              		.thumb_func
 588              		.type	spis_2_function, %function
 589              	spis_2_function:
 590              	.LFB67:
 218:main.c        **** 
 219:main.c        **** 
 220:main.c        **** CY_ISR(spis_2_function) {     /* No need to clear any interrupt source; interrupt component should 
 591              		.loc 1 220 0
 592              		.cfi_startproc
 593              		@ args = 0, pretend = 0, frame = 0
 594              		@ frame_needed = 1, uses_anonymous_args = 0
 595              		@ link register save eliminated.
 596 0000 80B4     		push	{r7}
 597              		.cfi_def_cfa_offset 4
 598              		.cfi_offset 7, -4
 599 0002 00AF     		add	r7, sp, #0
 600              		.cfi_def_cfa_register 7
 221:main.c        ****     //SPI receive from bar sensor
 222:main.c        ****     /*
 223:main.c        ****     while(SPIS_2_GetRxBufferSize())
 224:main.c        ****     {
 225:main.c        ****         rxBufferBar[currentBarBuffer][bar_index] = CY_GET_REG8(SPIS_2_RXDATA_PTR);
 226:main.c        ****         bar_index++;
 227:main.c        ****     }
 228:main.c        ****         
 229:main.c        ****     if (bar_index == 8)
 230:main.c        ****     {
 231:main.c        ****         if ((rxBufferBar[currentBarBuffer][6] == 254) && (rxBufferBar[currentBarBuffer][7] == 253))
 232:main.c        ****         {
 233:main.c        ****             for (int i = 0; i < 2; i++)
 234:main.c        ****             {
 235:main.c        ****                 bar[i] = ((rxBufferBar[currentBarBuffer][i*2] << 8) + rxBufferBar[currentBarBuffer]
 236:main.c        ****             }
 237:main.c        ****             
 238:main.c        ****         }
 239:main.c        ****         else
 240:main.c        ****         {
 241:main.c        ****             
 242:main.c        ****             //disable the dma chain
 243:main.c        ****             //CyDmaChDisable(rx2Channel);
 244:main.c        ****             SPI2errorflag = 1;
 245:main.c        ****             offsetErrorCount++;
 246:main.c        ****             //enable an interrupt to reset it on the rising edge of the cs (at the end of an 8-byte
 247:main.c        ****             //isr_SPI2_ss_StartEx(spis_2_ss);
 248:main.c        **** 
 249:main.c        **** 
 250:main.c        ****             
 251:main.c        ****             amHere2 = 1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 16


 252:main.c        ****         }
 253:main.c        ****     }
 254:main.c        ****     /*
 255:main.c        ****         uint8_t currentTd = 0;
 256:main.c        ****         uint8_t state = 0;
 257:main.c        ****         CyDmaChStatus(rx2Channel, &currentTd, &state);
 258:main.c        ****         currentBarBuffer = (currentTd & 1);
 259:main.c        ****         uint8_t datasize = 8;
 260:main.c        ****         */
 261:main.c        ****     
 262:main.c        ****     /*
 263:main.c        ****         if ((rxBufferBar[currentBarBuffer][6] == 254) && (rxBufferBar[currentBarBuffer][7] == 253))
 264:main.c        ****         {
 265:main.c        ****             for (int i = 0; i < 2; i++)
 266:main.c        ****             {
 267:main.c        ****                 bar[i] = ((rxBufferBar[currentBarBuffer][i*2] << 8) + rxBufferBar[currentBarBuffer]
 268:main.c        ****             }
 269:main.c        ****             
 270:main.c        ****         }
 271:main.c        ****         else
 272:main.c        ****         {
 273:main.c        ****             
 274:main.c        ****             //disable the dma chain
 275:main.c        ****             //CyDmaChDisable(rx2Channel);
 276:main.c        ****             SPI2errorflag = 1;
 277:main.c        ****             //enable an interrupt to reset it on the rising edge of the cs (at the end of an 8-byte
 278:main.c        ****             //isr_SPI2_ss_StartEx(spis_2_ss);
 279:main.c        **** 
 280:main.c        **** 
 281:main.c        ****             
 282:main.c        ****             amHere2 = 1;
 283:main.c        ****         }
 284:main.c        **** */
 285:main.c        ****         
 286:main.c        ****         amHere = 1;
 601              		.loc 1 286 0
 602 0004 034B     		ldr	r3, .L19
 603 0006 0122     		movs	r2, #1
 604 0008 1A70     		strb	r2, [r3]
 287:main.c        **** 
 288:main.c        **** }
 605              		.loc 1 288 0
 606 000a 00BF     		nop
 607 000c BD46     		mov	sp, r7
 608              		.cfi_def_cfa_register 13
 609              		@ sp needed
 610 000e 80BC     		pop	{r7}
 611              		.cfi_restore 7
 612              		.cfi_def_cfa_offset 0
 613 0010 7047     		bx	lr
 614              	.L20:
 615 0012 00BF     		.align	2
 616              	.L19:
 617 0014 00000000 		.word	amHere
 618              		.cfi_endproc
 619              	.LFE67:
 620              		.size	spis_2_function, .-spis_2_function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 17


 621              		.section	.text.SleepIsr_function,"ax",%progbits
 622              		.align	2
 623              		.global	SleepIsr_function
 624              		.thumb
 625              		.thumb_func
 626              		.type	SleepIsr_function, %function
 627              	SleepIsr_function:
 628              	.LFB68:
 289:main.c        **** 
 290:main.c        **** 
 291:main.c        **** 
 292:main.c        **** CY_ISR(SleepIsr_function)
 293:main.c        **** {
 629              		.loc 1 293 0
 630              		.cfi_startproc
 631              		@ args = 0, pretend = 0, frame = 0
 632              		@ frame_needed = 1, uses_anonymous_args = 0
 633 0000 80B5     		push	{r7, lr}
 634              		.cfi_def_cfa_offset 8
 635              		.cfi_offset 7, -8
 636              		.cfi_offset 14, -4
 637 0002 00AF     		add	r7, sp, #0
 638              		.cfi_def_cfa_register 7
 294:main.c        ****     if (USB_active)
 639              		.loc 1 294 0
 640 0004 0C4B     		ldr	r3, .L24
 641 0006 1B78     		ldrb	r3, [r3]
 642 0008 DBB2     		uxtb	r3, r3
 643 000a 002B     		cmp	r3, #0
 644 000c 0FD0     		beq	.L22
 295:main.c        ****     {
 296:main.c        ****         //check USB activity
 297:main.c        ****         if( USB_CheckActivity() != 0u ) 
 645              		.loc 1 297 0
 646 000e FFF7FEFF 		bl	USB_CheckActivity
 647 0012 0346     		mov	r3, r0
 648 0014 002B     		cmp	r3, #0
 649 0016 03D0     		beq	.L23
 298:main.c        ****         {
 299:main.c        ****             usbActivityCounter = 0u;
 650              		.loc 1 299 0
 651 0018 084B     		ldr	r3, .L24+4
 652 001a 0022     		movs	r2, #0
 653 001c 1A70     		strb	r2, [r3]
 654 001e 06E0     		b	.L22
 655              	.L23:
 300:main.c        ****         } 
 301:main.c        ****         else 
 302:main.c        ****         {
 303:main.c        ****             usbActivityCounter++;
 656              		.loc 1 303 0
 657 0020 064B     		ldr	r3, .L24+4
 658 0022 1B78     		ldrb	r3, [r3]
 659 0024 DBB2     		uxtb	r3, r3
 660 0026 0133     		adds	r3, r3, #1
 661 0028 DAB2     		uxtb	r2, r3
 662 002a 044B     		ldr	r3, .L24+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 18


 663 002c 1A70     		strb	r2, [r3]
 664              	.L22:
 304:main.c        ****         }
 305:main.c        **** 
 306:main.c        ****     }
 307:main.c        ****     //Clear pending interrupt
 308:main.c        ****     SleepTimer_GetStatus();
 665              		.loc 1 308 0
 666 002e FFF7FEFF 		bl	SleepTimer_GetStatus
 309:main.c        **** }
 667              		.loc 1 309 0
 668 0032 00BF     		nop
 669 0034 80BD     		pop	{r7, pc}
 670              	.L25:
 671 0036 00BF     		.align	2
 672              	.L24:
 673 0038 00000000 		.word	USB_active
 674 003c 00000000 		.word	usbActivityCounter
 675              		.cfi_endproc
 676              	.LFE68:
 677              		.size	SleepIsr_function, .-SleepIsr_function
 678              		.bss
 679 0031 000000   		.align	2
 680              	eepromArray:
 681 0034 0000     		.space	2
 682              		.global	array
 683 0036 0000     		.align	2
 684              		.type	array, %object
 685              		.size	array, 2
 686              	array:
 687 0038 0000     		.space	2
 688              		.comm	eepromReturnValue,1,1
 689              		.global	Em_EEPROM_em_EepromStorage
 690              		.section	.rodata
 691              		.align	8
 692              		.type	Em_EEPROM_em_EepromStorage, %object
 693              		.size	Em_EEPROM_em_EepromStorage, 1024
 694              	Em_EEPROM_em_EepromStorage:
 695 0000 00000000 		.space	1024
 695      00000000 
 695      00000000 
 695      00000000 
 695      00000000 
 696              		.comm	eeprom_cnt,1,1
 697              		.comm	status,4,4
 698              		.comm	ptr,4,4
 699              		.global	barCount
 700              		.bss
 701 003a 0000     		.align	2
 702              		.type	barCount, %object
 703              		.size	barCount, 4
 704              	barCount:
 705 003c 00000000 		.space	4
 706              		.section	.text.Vbus_function,"ax",%progbits
 707              		.align	2
 708              		.global	Vbus_function
 709              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 19


 710              		.thumb_func
 711              		.type	Vbus_function, %function
 712              	Vbus_function:
 713              	.LFB69:
 310:main.c        **** 
 311:main.c        ****     static uint8 CYCODE eepromArray[]={ 0, 0 };
 312:main.c        ****                                             
 313:main.c        ****     uint8 array[] ={ 0, 0 };
 314:main.c        ****                                 
 315:main.c        ****     /*Return status for EEPROM and UART*/ 
 316:main.c        **** cy_en_em_eeprom_status_t eepromReturnValue;
 317:main.c        **** 
 318:main.c        **** 
 319:main.c        **** /* EEPROM storage in work flash, this is defined in Em_EEPROM.c*/
 320:main.c        **** #if defined (__ICCARM__)
 321:main.c        **** #pragma data_alignment = CY_FLASH_SIZEOF_ROW
 322:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE] = {0u};
 323:main.c        **** #else
 324:main.c        **** const uint8_t Em_EEPROM_em_EepromStorage[Em_EEPROM_PHYSICAL_SIZE]
 325:main.c        **** __ALIGNED(CY_FLASH_SIZEOF_ROW) = {0u};
 326:main.c        **** #endif /* defined (__ICCARM__) */
 327:main.c        **** 
 328:main.c        ****     uint8 eeprom_cnt;
 329:main.c        ****     cystatus status;
 330:main.c        ****     volatile const uint8 * ptr;
 331:main.c        **** volatile int barCount = 0;
 332:main.c        **** 
 333:main.c        **** //#define I2C_1_TIMEOUT_ENABLE 1u //overwrites the default in the i2c block
 334:main.c        ****     
 335:main.c        **** //this ISR should happen when a USB cable is plugged in or unplugged.
 336:main.c        **** 
 337:main.c        **** CY_ISR(Vbus_function)
 338:main.c        **** {
 714              		.loc 1 338 0
 715              		.cfi_startproc
 716              		@ args = 0, pretend = 0, frame = 0
 717              		@ frame_needed = 1, uses_anonymous_args = 0
 718 0000 80B5     		push	{r7, lr}
 719              		.cfi_def_cfa_offset 8
 720              		.cfi_offset 7, -8
 721              		.cfi_offset 14, -4
 722 0002 00AF     		add	r7, sp, #0
 723              		.cfi_def_cfa_register 7
 339:main.c        ****     //plug or unplug event
 340:main.c        ****     //check if eeprom has a flag saying you just restarted. If so, don't restart again
 341:main.c        ****     //otherwise, restart
 342:main.c        ****     my_Vbus_ISR_ClearPending();
 724              		.loc 1 342 0
 725 0004 FFF7FEFF 		bl	my_Vbus_ISR_ClearPending
 343:main.c        ****     vBusPin_ClearInterrupt();
 726              		.loc 1 343 0
 727 0008 FFF7FEFF 		bl	vBusPin_ClearInterrupt
 344:main.c        ****     restartSystemCheck();
 728              		.loc 1 344 0
 729 000c FFF7FEFF 		bl	restartSystemCheck
 345:main.c        **** 
 346:main.c        **** }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 20


 730              		.loc 1 346 0
 731 0010 00BF     		nop
 732 0012 80BD     		pop	{r7, pc}
 733              		.cfi_endproc
 734              	.LFE69:
 735              		.size	Vbus_function, .-Vbus_function
 736              		.section	.text.restartSystemCheck,"ax",%progbits
 737              		.align	2
 738              		.global	restartSystemCheck
 739              		.thumb
 740              		.thumb_func
 741              		.type	restartSystemCheck, %function
 742              	restartSystemCheck:
 743              	.LFB70:
 347:main.c        **** 
 348:main.c        **** void restartSystemCheck()
 349:main.c        **** {
 744              		.loc 1 349 0
 745              		.cfi_startproc
 746              		@ args = 0, pretend = 0, frame = 0
 747              		@ frame_needed = 1, uses_anonymous_args = 0
 748 0000 80B5     		push	{r7, lr}
 749              		.cfi_def_cfa_offset 8
 750              		.cfi_offset 7, -8
 751              		.cfi_offset 14, -4
 752 0002 00AF     		add	r7, sp, #0
 753              		.cfi_def_cfa_register 7
 350:main.c        ****     eepromReturnValue = Em_EEPROM_Read(0u, eepromArray, 2u);
 754              		.loc 1 350 0
 755 0004 164B     		ldr	r3, .L31
 756 0006 0222     		movs	r2, #2
 757 0008 1649     		ldr	r1, .L31+4
 758 000a 0020     		movs	r0, #0
 759 000c FFF7FEFF 		bl	Cy_Em_EEPROM_Read
 760 0010 0346     		mov	r3, r0
 761 0012 1A46     		mov	r2, r3
 762 0014 144B     		ldr	r3, .L31+8
 763 0016 1A70     		strb	r2, [r3]
 351:main.c        ****     if (*(volatile uint8 *) &eepromArray[0] == 1u)
 764              		.loc 1 351 0
 765 0018 124B     		ldr	r3, .L31+4
 766 001a 1B78     		ldrb	r3, [r3]
 767 001c DBB2     		uxtb	r3, r3
 768 001e 012B     		cmp	r3, #1
 769 0020 0CD1     		bne	.L28
 352:main.c        ****     {
 353:main.c        ****         //a flag says we just restarted
 354:main.c        ****         //write a zero so it knows next time that it's OK to restart
 355:main.c        ****         array[0] = 0;
 770              		.loc 1 355 0
 771 0022 124B     		ldr	r3, .L31+12
 772 0024 0022     		movs	r2, #0
 773 0026 1A70     		strb	r2, [r3]
 356:main.c        ****         Em_EEPROM_Write(0u,array,2u);     
 774              		.loc 1 356 0
 775 0028 0D4B     		ldr	r3, .L31
 776 002a 0222     		movs	r2, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 21


 777 002c 0F49     		ldr	r1, .L31+12
 778 002e 0020     		movs	r0, #0
 779 0030 FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 357:main.c        ****         USB_check_flag = 1;
 780              		.loc 1 357 0
 781 0034 0E4B     		ldr	r3, .L31+16
 782 0036 0122     		movs	r2, #1
 783 0038 1A70     		strb	r2, [r3]
 358:main.c        ****     }
 359:main.c        ****     else
 360:main.c        ****     {
 361:main.c        ****        //otherwise, we need to restart
 362:main.c        ****        array[0] = 1;
 363:main.c        ****        Em_EEPROM_Write(0u,array,2u);  
 364:main.c        ****         USB_Stop();
 365:main.c        ****         I2C_1_Stop();
 366:main.c        ****        CySoftwareReset();
 367:main.c        ****     }
 368:main.c        **** }
 784              		.loc 1 368 0
 785 003a 0EE0     		b	.L30
 786              	.L28:
 362:main.c        ****        Em_EEPROM_Write(0u,array,2u);  
 787              		.loc 1 362 0
 788 003c 0B4B     		ldr	r3, .L31+12
 789 003e 0122     		movs	r2, #1
 790 0040 1A70     		strb	r2, [r3]
 363:main.c        ****         USB_Stop();
 791              		.loc 1 363 0
 792 0042 074B     		ldr	r3, .L31
 793 0044 0222     		movs	r2, #2
 794 0046 0949     		ldr	r1, .L31+12
 795 0048 0020     		movs	r0, #0
 796 004a FFF7FEFF 		bl	Cy_Em_EEPROM_Write
 364:main.c        ****         I2C_1_Stop();
 797              		.loc 1 364 0
 798 004e FFF7FEFF 		bl	USB_Stop
 365:main.c        ****        CySoftwareReset();
 799              		.loc 1 365 0
 800 0052 FFF7FEFF 		bl	I2C_1_Stop
 366:main.c        ****     }
 801              		.loc 1 366 0
 802 0056 FFF7FEFF 		bl	CySoftwareReset
 803              	.L30:
 804              		.loc 1 368 0
 805 005a 00BF     		nop
 806 005c 80BD     		pop	{r7, pc}
 807              	.L32:
 808 005e 00BF     		.align	2
 809              	.L31:
 810 0060 00000000 		.word	Em_EEPROM_context
 811 0064 34000000 		.word	eepromArray
 812 0068 00000000 		.word	eepromReturnValue
 813 006c 00000000 		.word	array
 814 0070 00000000 		.word	USB_check_flag
 815              		.cfi_endproc
 816              	.LFE70:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 22


 817              		.size	restartSystemCheck, .-restartSystemCheck
 818              		.global	__aeabi_fcmpgt
 819              		.global	__aeabi_fcmplt
 820              		.section	.text.LEAF_clip,"ax",%progbits
 821              		.align	2
 822              		.global	LEAF_clip
 823              		.thumb
 824              		.thumb_func
 825              		.type	LEAF_clip, %function
 826              	LEAF_clip:
 827              	.LFB71:
 369:main.c        ****     
 370:main.c        **** #define INV_440 0.0022727272727273f
 371:main.c        **** 
 372:main.c        **** float   LEAF_clip(float min, float val, float max)
 373:main.c        **** {
 828              		.loc 1 373 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 24
 831              		@ frame_needed = 1, uses_anonymous_args = 0
 832 0000 80B5     		push	{r7, lr}
 833              		.cfi_def_cfa_offset 8
 834              		.cfi_offset 7, -8
 835              		.cfi_offset 14, -4
 836 0002 86B0     		sub	sp, sp, #24
 837              		.cfi_def_cfa_offset 32
 838 0004 00AF     		add	r7, sp, #0
 839              		.cfi_def_cfa_register 7
 840 0006 F860     		str	r0, [r7, #12]	@ float
 841 0008 B960     		str	r1, [r7, #8]	@ float
 842 000a 7A60     		str	r2, [r7, #4]	@ float
 374:main.c        ****     float tempmin = min;
 843              		.loc 1 374 0
 844 000c FB68     		ldr	r3, [r7, #12]	@ float
 845 000e 7B61     		str	r3, [r7, #20]	@ float
 375:main.c        ****     float tempmax = max;
 846              		.loc 1 375 0
 847 0010 7B68     		ldr	r3, [r7, #4]	@ float
 848 0012 3B61     		str	r3, [r7, #16]	@ float
 376:main.c        ****     if (min > max)
 849              		.loc 1 376 0
 850 0014 7968     		ldr	r1, [r7, #4]	@ float
 851 0016 F868     		ldr	r0, [r7, #12]	@ float
 852 0018 FFF7FEFF 		bl	__aeabi_fcmpgt
 853 001c 0346     		mov	r3, r0
 854 001e 002B     		cmp	r3, #0
 855 0020 03D0     		beq	.L34
 377:main.c        ****     {
 378:main.c        ****         tempmin = max;
 856              		.loc 1 378 0
 857 0022 7B68     		ldr	r3, [r7, #4]	@ float
 858 0024 7B61     		str	r3, [r7, #20]	@ float
 379:main.c        ****         tempmax = min;
 859              		.loc 1 379 0
 860 0026 FB68     		ldr	r3, [r7, #12]	@ float
 861 0028 3B61     		str	r3, [r7, #16]	@ float
 862              	.L34:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 23


 380:main.c        ****     }
 381:main.c        ****     if (val < tempmin)
 863              		.loc 1 381 0
 864 002a 7969     		ldr	r1, [r7, #20]	@ float
 865 002c B868     		ldr	r0, [r7, #8]	@ float
 866 002e FFF7FEFF 		bl	__aeabi_fcmplt
 867 0032 0346     		mov	r3, r0
 868 0034 002B     		cmp	r3, #0
 869 0036 01D0     		beq	.L44
 382:main.c        ****     {
 383:main.c        ****         return tempmin;
 870              		.loc 1 383 0
 871 0038 7B69     		ldr	r3, [r7, #20]	@ float
 872 003a 09E0     		b	.L38
 873              	.L44:
 384:main.c        ****     }
 385:main.c        ****     else if (val > tempmax)
 874              		.loc 1 385 0
 875 003c 3969     		ldr	r1, [r7, #16]	@ float
 876 003e B868     		ldr	r0, [r7, #8]	@ float
 877 0040 FFF7FEFF 		bl	__aeabi_fcmpgt
 878 0044 0346     		mov	r3, r0
 879 0046 002B     		cmp	r3, #0
 880 0048 01D0     		beq	.L45
 386:main.c        ****     {
 387:main.c        ****         return tempmax;
 881              		.loc 1 387 0
 882 004a 3B69     		ldr	r3, [r7, #16]	@ float
 883 004c 00E0     		b	.L38
 884              	.L45:
 388:main.c        ****     }
 389:main.c        ****     else
 390:main.c        ****     {
 391:main.c        ****         return val;
 885              		.loc 1 391 0
 886 004e BB68     		ldr	r3, [r7, #8]	@ float
 887              	.L38:
 392:main.c        ****     }
 393:main.c        **** }
 888              		.loc 1 393 0
 889 0050 1846     		mov	r0, r3
 890 0052 1837     		adds	r7, r7, #24
 891              		.cfi_def_cfa_offset 8
 892 0054 BD46     		mov	sp, r7
 893              		.cfi_def_cfa_register 13
 894              		@ sp needed
 895 0056 80BD     		pop	{r7, pc}
 896              		.cfi_endproc
 897              	.LFE71:
 898              		.size	LEAF_clip, .-LEAF_clip
 899              		.global	__aeabi_fcmple
 900              		.global	__aeabi_fmul
 901              		.section	.text.mtof,"ax",%progbits
 902              		.align	2
 903              		.global	mtof
 904              		.thumb
 905              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 24


 906              		.type	mtof, %function
 907              	mtof:
 908              	.LFB72:
 394:main.c        **** float mtof(float f)
 395:main.c        **** {
 909              		.loc 1 395 0
 910              		.cfi_startproc
 911              		@ args = 0, pretend = 0, frame = 8
 912              		@ frame_needed = 1, uses_anonymous_args = 0
 913 0000 80B5     		push	{r7, lr}
 914              		.cfi_def_cfa_offset 8
 915              		.cfi_offset 7, -8
 916              		.cfi_offset 14, -4
 917 0002 82B0     		sub	sp, sp, #8
 918              		.cfi_def_cfa_offset 16
 919 0004 00AF     		add	r7, sp, #0
 920              		.cfi_def_cfa_register 7
 921 0006 7860     		str	r0, [r7, #4]	@ float
 396:main.c        ****     if (f <= -1500.0f) return(0);
 922              		.loc 1 396 0
 923 0008 1349     		ldr	r1, .L56
 924 000a 7868     		ldr	r0, [r7, #4]	@ float
 925 000c FFF7FEFF 		bl	__aeabi_fcmple
 926 0010 0346     		mov	r3, r0
 927 0012 002B     		cmp	r3, #0
 928 0014 02D0     		beq	.L54
 929              		.loc 1 396 0 is_stmt 0 discriminator 1
 930 0016 4FF00003 		mov	r3, #0
 931 001a 19E0     		b	.L49
 932              	.L54:
 397:main.c        ****     else if (f > 1499.0f) return(mtof(1499.0f));
 933              		.loc 1 397 0 is_stmt 1
 934 001c 0F49     		ldr	r1, .L56+4
 935 001e 7868     		ldr	r0, [r7, #4]	@ float
 936 0020 FFF7FEFF 		bl	__aeabi_fcmpgt
 937 0024 0346     		mov	r3, r0
 938 0026 002B     		cmp	r3, #0
 939 0028 04D0     		beq	.L55
 940              		.loc 1 397 0 is_stmt 0 discriminator 1
 941 002a 0C48     		ldr	r0, .L56+4
 942 002c FFF7FEFF 		bl	mtof
 943 0030 0346     		mov	r3, r0
 944 0032 0DE0     		b	.L49
 945              	.L55:
 398:main.c        ****     else return (8.17579891564f * expf(0.0577622650f * f));
 946              		.loc 1 398 0 is_stmt 1
 947 0034 0A49     		ldr	r1, .L56+8
 948 0036 7868     		ldr	r0, [r7, #4]	@ float
 949 0038 FFF7FEFF 		bl	__aeabi_fmul
 950 003c 0346     		mov	r3, r0
 951 003e 1846     		mov	r0, r3
 952 0040 FFF7FEFF 		bl	expf
 953 0044 0346     		mov	r3, r0
 954 0046 0749     		ldr	r1, .L56+12
 955 0048 1846     		mov	r0, r3
 956 004a FFF7FEFF 		bl	__aeabi_fmul
 957 004e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 25


 958              	.L49:
 399:main.c        **** }
 959              		.loc 1 399 0
 960 0050 1846     		mov	r0, r3
 961 0052 0837     		adds	r7, r7, #8
 962              		.cfi_def_cfa_offset 8
 963 0054 BD46     		mov	sp, r7
 964              		.cfi_def_cfa_register 13
 965              		@ sp needed
 966 0056 80BD     		pop	{r7, pc}
 967              	.L57:
 968              		.align	2
 969              	.L56:
 970 0058 0080BBC4 		.word	-994344960
 971 005c 0060BB44 		.word	1153130496
 972 0060 20986C3D 		.word	1030527008
 973 0064 13D00241 		.word	1090703379
 974              		.cfi_endproc
 975              	.LFE72:
 976              		.size	mtof, .-mtof
 977              		.section	.text.ftom,"ax",%progbits
 978              		.align	2
 979              		.global	ftom
 980              		.thumb
 981              		.thumb_func
 982              		.type	ftom, %function
 983              	ftom:
 984              	.LFB73:
 400:main.c        **** 
 401:main.c        **** float ftom(float f)
 402:main.c        **** {
 985              		.loc 1 402 0
 986              		.cfi_startproc
 987              		@ args = 0, pretend = 0, frame = 8
 988              		@ frame_needed = 1, uses_anonymous_args = 0
 989 0000 80B5     		push	{r7, lr}
 990              		.cfi_def_cfa_offset 8
 991              		.cfi_offset 7, -8
 992              		.cfi_offset 14, -4
 993 0002 82B0     		sub	sp, sp, #8
 994              		.cfi_def_cfa_offset 16
 995 0004 00AF     		add	r7, sp, #0
 996              		.cfi_def_cfa_register 7
 997 0006 7860     		str	r0, [r7, #4]	@ float
 403:main.c        ****     return (f > 0 ? 17.3123405046f * logf(.12231220585f * f) : -1500.0f);
 998              		.loc 1 403 0
 999 0008 4FF00001 		mov	r1, #0
 1000 000c 7868     		ldr	r0, [r7, #4]	@ float
 1001 000e FFF7FEFF 		bl	__aeabi_fcmpgt
 1002 0012 0346     		mov	r3, r0
 1003 0014 002B     		cmp	r3, #0
 1004 0016 0ED0     		beq	.L64
 1005              		.loc 1 403 0 is_stmt 0 discriminator 1
 1006 0018 0949     		ldr	r1, .L65
 1007 001a 7868     		ldr	r0, [r7, #4]	@ float
 1008 001c FFF7FEFF 		bl	__aeabi_fmul
 1009 0020 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 26


 1010 0022 1846     		mov	r0, r3
 1011 0024 FFF7FEFF 		bl	logf
 1012 0028 0346     		mov	r3, r0
 1013 002a 0649     		ldr	r1, .L65+4
 1014 002c 1846     		mov	r0, r3
 1015 002e FFF7FEFF 		bl	__aeabi_fmul
 1016 0032 0346     		mov	r3, r0
 1017 0034 00E0     		b	.L62
 1018              	.L64:
 1019              		.loc 1 403 0 discriminator 2
 1020 0036 044B     		ldr	r3, .L65+8
 1021              	.L62:
 404:main.c        **** }
 1022              		.loc 1 404 0 is_stmt 1 discriminator 5
 1023 0038 1846     		mov	r0, r3
 1024 003a 0837     		adds	r7, r7, #8
 1025              		.cfi_def_cfa_offset 8
 1026 003c BD46     		mov	sp, r7
 1027              		.cfi_def_cfa_register 13
 1028              		@ sp needed
 1029 003e 80BD     		pop	{r7, pc}
 1030              	.L66:
 1031              		.align	2
 1032              	.L65:
 1033 0040 D27EFA3D 		.word	1039826642
 1034 0044 AC7F8A41 		.word	1099595692
 1035 0048 0080BBC4 		.word	-994344960
 1036              		.cfi_endproc
 1037              	.LFE73:
 1038              		.size	ftom, .-ftom
 1039              		.global	__aeabi_fsub
 1040              		.global	__aeabi_fadd
 1041              		.section	.text.LEAF_interpolation_linear,"ax",%progbits
 1042              		.align	2
 1043              		.global	LEAF_interpolation_linear
 1044              		.thumb
 1045              		.thumb_func
 1046              		.type	LEAF_interpolation_linear, %function
 1047              	LEAF_interpolation_linear:
 1048              	.LFB74:
 405:main.c        **** 
 406:main.c        **** // alpha, [0.0, 1.0]
 407:main.c        **** float LEAF_interpolation_linear (float A, float B, float alpha)
 408:main.c        **** {
 1049              		.loc 1 408 0
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 24
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053 0000 80B5     		push	{r7, lr}
 1054              		.cfi_def_cfa_offset 8
 1055              		.cfi_offset 7, -8
 1056              		.cfi_offset 14, -4
 1057 0002 86B0     		sub	sp, sp, #24
 1058              		.cfi_def_cfa_offset 32
 1059 0004 00AF     		add	r7, sp, #0
 1060              		.cfi_def_cfa_register 7
 1061 0006 F860     		str	r0, [r7, #12]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 27


 1062 0008 B960     		str	r1, [r7, #8]	@ float
 1063 000a 7A60     		str	r2, [r7, #4]	@ float
 409:main.c        ****     float omAlpha = 1.0f - alpha;
 1064              		.loc 1 409 0
 1065 000c 7968     		ldr	r1, [r7, #4]	@ float
 1066 000e 4FF07E50 		mov	r0, #1065353216
 1067 0012 FFF7FEFF 		bl	__aeabi_fsub
 1068 0016 0346     		mov	r3, r0
 1069 0018 7B61     		str	r3, [r7, #20]	@ float
 410:main.c        ****     
 411:main.c        ****     // First 1/2 of interpolation
 412:main.c        ****     float out = A * omAlpha;
 1070              		.loc 1 412 0
 1071 001a 7969     		ldr	r1, [r7, #20]	@ float
 1072 001c F868     		ldr	r0, [r7, #12]	@ float
 1073 001e FFF7FEFF 		bl	__aeabi_fmul
 1074 0022 0346     		mov	r3, r0
 1075 0024 3B61     		str	r3, [r7, #16]	@ float
 413:main.c        ****     
 414:main.c        ****     out += B * alpha;
 1076              		.loc 1 414 0
 1077 0026 7968     		ldr	r1, [r7, #4]	@ float
 1078 0028 B868     		ldr	r0, [r7, #8]	@ float
 1079 002a FFF7FEFF 		bl	__aeabi_fmul
 1080 002e 0346     		mov	r3, r0
 1081 0030 1946     		mov	r1, r3
 1082 0032 3869     		ldr	r0, [r7, #16]	@ float
 1083 0034 FFF7FEFF 		bl	__aeabi_fadd
 1084 0038 0346     		mov	r3, r0
 1085 003a 3B61     		str	r3, [r7, #16]	@ float
 415:main.c        ****     
 416:main.c        ****     return out;
 1086              		.loc 1 416 0
 1087 003c 3B69     		ldr	r3, [r7, #16]	@ float
 417:main.c        **** }
 1088              		.loc 1 417 0
 1089 003e 1846     		mov	r0, r3
 1090 0040 1837     		adds	r7, r7, #24
 1091              		.cfi_def_cfa_offset 8
 1092 0042 BD46     		mov	sp, r7
 1093              		.cfi_def_cfa_register 13
 1094              		@ sp needed
 1095 0044 80BD     		pop	{r7, pc}
 1096              		.cfi_endproc
 1097              	.LFE74:
 1098              		.size	LEAF_interpolation_linear, .-LEAF_interpolation_linear
 1099              		.comm	I2Cbuff1,256,4
 1100              		.comm	I2Cbuff2,16,4
 1101              		.global	send_it
 1102 0046 00BF     		.bss
 1103              		.type	send_it, %object
 1104              		.size	send_it, 1
 1105              	send_it:
 1106 0040 00       		.space	1
 1107              		.global	mux_states
 1108              		.data
 1109              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 28


 1110              		.type	mux_states, %object
 1111              		.size	mux_states, 24
 1112              	mux_states:
 1113 0004 05       		.byte	5
 1114 0005 00       		.byte	0
 1115 0006 05       		.byte	5
 1116 0007 01       		.byte	1
 1117 0008 05       		.byte	5
 1118 0009 02       		.byte	2
 1119 000a 05       		.byte	5
 1120 000b 03       		.byte	3
 1121 000c 05       		.byte	5
 1122 000d 04       		.byte	4
 1123 000e 00       		.byte	0
 1124 000f 00       		.byte	0
 1125 0010 01       		.byte	1
 1126 0011 00       		.byte	0
 1127 0012 03       		.byte	3
 1128 0013 00       		.byte	0
 1129 0014 04       		.byte	4
 1130 0015 00       		.byte	0
 1131 0016 02       		.byte	2
 1132 0017 00       		.byte	0
 1133 0018 05       		.byte	5
 1134 0019 05       		.byte	5
 1135 001a 06       		.byte	6
 1136 001b 00       		.byte	0
 1137              		.global	pedals_low
 1138              		.align	2
 1139              		.type	pedals_low, %object
 1140              		.size	pedals_low, 20
 1141              	pedals_low:
 1142 001c 830A     		.short	2691
 1143 001e 0109     		.short	2305
 1144 0020 9909     		.short	2457
 1145 0022 0E02     		.short	526
 1146 0024 9A0E     		.short	3738
 1147 0026 0309     		.short	2307
 1148 0028 C60B     		.short	3014
 1149 002a 8E08     		.short	2190
 1150 002c E90A     		.short	2793
 1151 002e 2605     		.short	1318
 1152              		.global	pedals_high
 1153              		.align	2
 1154              		.type	pedals_high, %object
 1155              		.size	pedals_high, 20
 1156              	pedals_high:
 1157 0030 ED0A     		.short	2797
 1158 0032 6509     		.short	2405
 1159 0034 140A     		.short	2580
 1160 0036 8702     		.short	647
 1161 0038 0E0F     		.short	3854
 1162 003a 9D09     		.short	2461
 1163 003c 450C     		.short	3141
 1164 003e 3109     		.short	2353
 1165 0040 760B     		.short	2934
 1166 0042 E005     		.short	1504
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 29


 1167              		.global	deadzone
 1168              		.align	1
 1169              		.type	deadzone, %object
 1170              		.size	deadzone, 2
 1171              	deadzone:
 1172 0044 9600     		.short	150
 1173              		.global	volumePedal
 1174              		.align	1
 1175              		.type	volumePedal, %object
 1176              		.size	volumePedal, 2
 1177              	volumePedal:
 1178 0046 FF0F     		.short	4095
 1179              		.comm	processed_pedals,20,4
 1180              		.comm	prev_processed_pedals,20,4
 1181              		.comm	prev_processed_volumePedal,2,2
 1182              		.comm	processed_volumePedal,2,2
 1183              		.global	fretMeasurements
 1184              		.align	2
 1185              		.type	fretMeasurements, %object
 1186              		.size	fretMeasurements, 64
 1187              	fretMeasurements:
 1188 0048 006ADF46 		.word	1189046784
 1189 004c 00B8D746 		.word	1188542464
 1190 0050 0052F846 		.word	1190679040
 1191 0054 00000000 		.word	0
 1192 0058 00B43F46 		.word	1178579968
 1193 005c 00F04646 		.word	1179054080
 1194 0060 00507546 		.word	1182093312
 1195 0064 00000000 		.word	0
 1196 0068 00C0C945 		.word	1170849792
 1197 006c 0030CD45 		.word	1171075072
 1198 0070 00280446 		.word	1174677504
 1199 0074 00000000 		.word	0
 1200 0078 00A0D544 		.word	1154850816
 1201 007c 0000CF44 		.word	1154416640
 1202 0080 00202745 		.word	1160192000
 1203 0084 00000000 		.word	0
 1204              		.global	fretScaling
 1205              		.align	2
 1206              		.type	fretScaling, %object
 1207              		.size	fretScaling, 16
 1208              	fretScaling:
 1209 0088 0000803F 		.word	1065353216
 1210 008c ABAA2A3F 		.word	1059760811
 1211 0090 0000003F 		.word	1056964608
 1212 0094 0000803E 		.word	1048576000
 1213              		.comm	pedalRatios,40,4
 1214              		.global	last_mux
 1215              		.type	last_mux, %object
 1216              		.size	last_mux, 1
 1217              	last_mux:
 1218 0098 01       		.byte	1
 1219              		.global	main_counter
 1220              		.bss
 1221              		.type	main_counter, %object
 1222              		.size	main_counter, 1
 1223              	main_counter:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 30


 1224 0041 00       		.space	1
 1225              		.global	neck
 1226              		.type	neck, %object
 1227              		.size	neck, 1
 1228              	neck:
 1229 0042 00       		.space	1
 1230              		.global	dualSlider
 1231              		.type	dualSlider, %object
 1232              		.size	dualSlider, 1
 1233              	dualSlider:
 1234 0043 00       		.space	1
 1235              		.global	enterUp
 1236              		.data
 1237              		.type	enterUp, %object
 1238              		.size	enterUp, 1
 1239              	enterUp:
 1240 0099 01       		.byte	1
 1241              		.global	voice
 1242              		.bss
 1243              		.type	voice, %object
 1244              		.size	voice, 1
 1245              	voice:
 1246 0044 00       		.space	1
 1247              		.global	editUp
 1248              		.data
 1249              		.type	editUp, %object
 1250              		.size	editUp, 1
 1251              	editUp:
 1252 009a 01       		.byte	1
 1253              		.comm	encoderVal,16,4
 1254              		.global	encoderNum
 1255              		.bss
 1256 0045 000000   		.align	2
 1257              		.type	encoderNum, %object
 1258              		.size	encoderNum, 4
 1259              	encoderNum:
 1260 0048 00000000 		.space	4
 1261              		.global	button1Up
 1262              		.type	button1Up, %object
 1263              		.size	button1Up, 1
 1264              	button1Up:
 1265 004c 00       		.space	1
 1266              		.global	button2Up
 1267              		.type	button2Up, %object
 1268              		.size	button2Up, 1
 1269              	button2Up:
 1270 004d 00       		.space	1
 1271              		.global	button3Up
 1272              		.type	button3Up, %object
 1273              		.size	button3Up, 1
 1274              	button3Up:
 1275 004e 00       		.space	1
 1276              		.global	button4Up
 1277              		.type	button4Up, %object
 1278              		.size	button4Up, 1
 1279              	button4Up:
 1280 004f 00       		.space	1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 31


 1281              		.global	patchNum
 1282              		.type	patchNum, %object
 1283              		.size	patchNum, 1
 1284              	patchNum:
 1285 0050 00       		.space	1
 1286              		.comm	copedent,16896,4
 1287              		.comm	prevStringPitchBend,48,4
 1288              		.comm	pedals,480,4
 1289              		.comm	openStringFrequencies,48,4
 1290              		.comm	stringMappedPositions,48,4
 1291              		.comm	invStringMappedPositions,48,4
 1292              		.comm	stringFrequencies,48,4
 1293              		.comm	stringOctave,48,4
 1294              		.comm	stringPitch,48,4
 1295              		.comm	stringMIDI,48,4
 1296              		.comm	openStringMIDI_Int,48,4
 1297              		.global	OLEDcount
 1298 0051 000000   		.align	2
 1299              		.type	OLEDcount, %object
 1300              		.size	OLEDcount, 4
 1301              	OLEDcount:
 1302 0054 00000000 		.space	4
 1303              		.global	pedals_float
 1304              		.align	2
 1305              		.type	pedals_float, %object
 1306              		.size	pedals_float, 40
 1307              	pedals_float:
 1308 0058 00000000 		.space	40
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1308      00000000 
 1309              		.global	__aeabi_fdiv
 1310              		.section	.text.map,"ax",%progbits
 1311              		.align	2
 1312              		.global	map
 1313              		.thumb
 1314              		.thumb_func
 1315              		.type	map, %function
 1316              	map:
 1317              	.LFB75:
 418:main.c        **** 
 419:main.c        **** 
 420:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode);
 421:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode);
 422:main.c        **** void USB_service(void);
 423:main.c        **** 
 424:main.c        **** volatile uint8_t I2Cbuff1[256];
 425:main.c        **** volatile uint8_t I2Cbuff2[16];
 426:main.c        **** volatile uint8_t send_it = 0;
 427:main.c        **** 
 428:main.c        **** uint8_t mux_states[12][2] = {{5,0}, {5,1}, {5,2}, {5,3}, {5,4}, {0, 0}, {1, 0}, {3, 0}, {4, 0}, {2,
 429:main.c        **** uint16_t pedals_low[10] = {2691, 2305, 2457, 526, 3738, 2307, 3014, 2190, 2793, 1318};
 430:main.c        **** uint16_t pedals_high[10] = {2797, 2405, 2580, 647, 3854, 2461, 3141, 2353, 2934, 1504};
 431:main.c        **** uint16_t deadzone = 150;
 432:main.c        **** uint16_t volumePedal = 4095;
 433:main.c        **** uint16_t processed_pedals[10];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 32


 434:main.c        **** uint16_t prev_processed_pedals[10];
 435:main.c        **** int16_t prev_processed_volumePedal;
 436:main.c        **** int16_t processed_volumePedal;
 437:main.c        **** 
 438:main.c        **** 
 439:main.c        **** float fretMeasurements[4][4] ={
 440:main.c        **** 
 441:main.c        **** 		{28597.0f, 27612.0f, 31785.0f, 0.0f },
 442:main.c        **** 
 443:main.c        **** 		{12269.0f, 12732.0f, 15700.0f, 0.0f},
 444:main.c        **** 
 445:main.c        **** 		{6456.0f, 6566.0f, 8458.0f, 0.0f},
 446:main.c        **** 
 447:main.c        **** 		{1709.0f, 1656.0f, 2674.0f, 0.0f}
 448:main.c        **** 
 449:main.c        **** 	};
 450:main.c        **** 
 451:main.c        **** 
 452:main.c        **** 
 453:main.c        **** float fretScaling[4] = {1.0f, 0.6666666666666f, 0.5f, 0.25f};
 454:main.c        **** 
 455:main.c        **** 
 456:main.c        **** #define MAX_ENCODERS 16
 457:main.c        **** 
 458:main.c        **** float pedalRatios[10];
 459:main.c        **** uint8_t last_mux = 1;
 460:main.c        **** volatile uint8_t main_counter = 0;
 461:main.c        **** uint8_t neck = 0;
 462:main.c        **** uint8_t dualSlider = 0;
 463:main.c        **** uint8_t enterUp = 1;
 464:main.c        **** uint8_t voice = 0;
 465:main.c        **** uint8_t editUp = 1;
 466:main.c        **** volatile uint8_t encoderVal[MAX_ENCODERS];
 467:main.c        **** int encoderNum = 0;
 468:main.c        **** uint8_t button1Up = 0;
 469:main.c        **** uint8_t button2Up = 0;
 470:main.c        **** uint8_t button3Up = 0;
 471:main.c        **** uint8_t button4Up = 0;
 472:main.c        **** uint8_t patchNum = 0;
 473:main.c        **** #define NUM_STRINGS 12
 474:main.c        **** #define NUM_PEDALS 10
 475:main.c        **** #if 0
 476:main.c        **** float pedalsInCents[NUM_PEDALS][NUM_STRINGS] =
 477:main.c        **** {
 478:main.c        **** 		{-0.16f, 0.0f, 0.0f, 0.0f, 1.84f, 0.0f, -0.16f, 0.0f, 0.0f, 1.84f, 0.0f, 0.0f},
 479:main.c        **** 		{0.0f, 0.0f, 116.0f, 0.0f, 0.0f, 116.0f, 0.0f, 0.0f, -14.0f, 0.0f, 116.0f, 0.0f},
 480:main.c        **** 		{-16.0f, 0.0f, 0.0f, 184.0f, 184.0f, 0.0f, -16.0f, 0.0f, 0.0f, 0.0f, 0.f, 0.0f},
 481:main.c        **** 		{0.0f, 0.0f, 0.0f, 0.0f, -200.0f, -200.0f, 0.0f, 0.0f, 0.0f, -200.0f, -200.0f, 0.0f},
 482:main.c        ****         {-2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, -2400.0f, 
 483:main.c        ****         {0.0f, 0.0f, 0.0f, -112.0f, 0.0f, 0.0f, 0.0f, -112.0f, 0.0f, 0.0f, 0.0f, -112.0f},
 484:main.c        ****         {0.0f, 0.0f, 0.0f, 75.0f, 0.0f, 0.0f, 0.0f, 75.0f, 0.0f, 0.0f, 0.0f, 75.0f},
 485:main.c        ****         {-14.0f, -204.0f, 0.0f, 0.0f, 0.0f, 0.0f, -14.0f, 0.0f, -134.0f, 0.0f, 0.0f, 0.0f},
 486:main.c        **** 		{186.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 487:main.c        **** 		{0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f},
 488:main.c        **** };
 489:main.c        **** float openStringMidinotes[NUM_STRINGS] = {66.04f,62.88f,67.86f, 64.0f,59.02f, 55.86f, 54.04f, 52.0f
 490:main.c        **** #endif
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 33


 491:main.c        **** 
 492:main.c        **** float copedent[32][11][NUM_STRINGS];
 493:main.c        **** 
 494:main.c        **** float prevStringPitchBend[NUM_STRINGS];
 495:main.c        **** 
 496:main.c        **** 
 497:main.c        **** #if 0 
 498:main.c        **** 
 499:main.c        **** 
 500:main.c        **** float pedalsInCents[NUM_PEDALS][NUM_STRINGS] =
 501:main.c        **** {
 502:main.c        ****     {0.0f, 0.0f, -100.f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 503:main.c        ****     {0.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f},
 504:main.c        **** 	{0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f},
 505:main.c        **** 	{0.0f, 0.0f, 0.0f, 200.0f, 200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.f, 0.0f},
 506:main.c        **** 	{200.0f, 100.f, 0.0f, 0.0f, 0.0f, 0.0f, 200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 507:main.c        ****     
 508:main.c        ****     {0.0f, -200.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, -200.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 509:main.c        ****     {0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 510:main.c        ****     {0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 300.0f, 300.0f, 0.0f, 0.0f},
 511:main.c        **** 	{0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 100.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 512:main.c        **** 	{0.0f, 0.0f, 0.0f, 0.0f, -100.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f},
 513:main.c        **** };
 514:main.c        **** 
 515:main.c        **** float openStringMidinotes[NUM_STRINGS] = {66.0f, 63.0f, 68.0f,  64.0f, 59.0f, 56.0f, 54.0f, 52.0f, 
 516:main.c        **** #endif
 517:main.c        **** 
 518:main.c        **** float pedals[NUM_PEDALS][NUM_STRINGS];
 519:main.c        **** 
 520:main.c        **** 
 521:main.c        **** float openStringFrequencies[NUM_STRINGS];
 522:main.c        **** float stringMappedPositions[NUM_STRINGS];
 523:main.c        **** float invStringMappedPositions[NUM_STRINGS];
 524:main.c        **** float stringFrequencies[NUM_STRINGS];
 525:main.c        **** float stringOctave[NUM_STRINGS];
 526:main.c        **** float stringPitch[NUM_STRINGS];
 527:main.c        **** float stringMIDI[NUM_STRINGS];
 528:main.c        **** int openStringMIDI_Int[NUM_STRINGS];
 529:main.c        **** int OLEDcount = 0;
 530:main.c        **** 
 531:main.c        **** /*
 532:main.c        **** float fretMeasurements[4][2] ={
 533:main.c        **** 		{53699.0f, 62199.0f},
 534:main.c        **** 		{23462.0f, 30653.0f},
 535:main.c        **** 		{27336.0f, 28186.0f},
 536:main.c        **** 		{9460.0f, 9849.0f}
 537:main.c        **** 	};
 538:main.c        **** float fretScaling[4] = {1.0f, 0.5f, 0.5f, 0.25f};
 539:main.c        **** */
 540:main.c        **** float pedals_float[NUM_PEDALS] = {0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f, 0.0f};
 541:main.c        **** 
 542:main.c        **** float map(float value, float istart, float istop, float ostart, float ostop)
 543:main.c        **** {
 1318              		.loc 1 543 0
 1319              		.cfi_startproc
 1320              		@ args = 4, pretend = 0, frame = 16
 1321              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 34


 1322 0000 B0B5     		push	{r4, r5, r7, lr}
 1323              		.cfi_def_cfa_offset 16
 1324              		.cfi_offset 4, -16
 1325              		.cfi_offset 5, -12
 1326              		.cfi_offset 7, -8
 1327              		.cfi_offset 14, -4
 1328 0002 84B0     		sub	sp, sp, #16
 1329              		.cfi_def_cfa_offset 32
 1330 0004 00AF     		add	r7, sp, #0
 1331              		.cfi_def_cfa_register 7
 1332 0006 F860     		str	r0, [r7, #12]	@ float
 1333 0008 B960     		str	r1, [r7, #8]	@ float
 1334 000a 7A60     		str	r2, [r7, #4]	@ float
 1335 000c 3B60     		str	r3, [r7]	@ float
 544:main.c        ****     return ostart + (ostop - ostart) * ((value - istart) / (istop - istart));
 1336              		.loc 1 544 0
 1337 000e 3968     		ldr	r1, [r7]	@ float
 1338 0010 386A     		ldr	r0, [r7, #32]	@ float
 1339 0012 FFF7FEFF 		bl	__aeabi_fsub
 1340 0016 0346     		mov	r3, r0
 1341 0018 1C46     		mov	r4, r3
 1342 001a B968     		ldr	r1, [r7, #8]	@ float
 1343 001c F868     		ldr	r0, [r7, #12]	@ float
 1344 001e FFF7FEFF 		bl	__aeabi_fsub
 1345 0022 0346     		mov	r3, r0
 1346 0024 1D46     		mov	r5, r3
 1347 0026 B968     		ldr	r1, [r7, #8]	@ float
 1348 0028 7868     		ldr	r0, [r7, #4]	@ float
 1349 002a FFF7FEFF 		bl	__aeabi_fsub
 1350 002e 0346     		mov	r3, r0
 1351 0030 1946     		mov	r1, r3
 1352 0032 2846     		mov	r0, r5
 1353 0034 FFF7FEFF 		bl	__aeabi_fdiv
 1354 0038 0346     		mov	r3, r0
 1355 003a 1946     		mov	r1, r3
 1356 003c 2046     		mov	r0, r4
 1357 003e FFF7FEFF 		bl	__aeabi_fmul
 1358 0042 0346     		mov	r3, r0
 1359 0044 3968     		ldr	r1, [r7]	@ float
 1360 0046 1846     		mov	r0, r3
 1361 0048 FFF7FEFF 		bl	__aeabi_fadd
 1362 004c 0346     		mov	r3, r0
 545:main.c        **** }
 1363              		.loc 1 545 0
 1364 004e 1846     		mov	r0, r3
 1365 0050 1037     		adds	r7, r7, #16
 1366              		.cfi_def_cfa_offset 16
 1367 0052 BD46     		mov	sp, r7
 1368              		.cfi_def_cfa_register 13
 1369              		@ sp needed
 1370 0054 B0BD     		pop	{r4, r5, r7, pc}
 1371              		.cfi_endproc
 1372              	.LFE75:
 1373              		.size	map, .-map
 1374              		.global	currentNeck
 1375 0056 00BF     		.bss
 1376              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 35


 1377              		.type	currentNeck, %object
 1378              		.size	currentNeck, 4
 1379              	currentNeck:
 1380 0080 00000000 		.space	4
 1381              		.global	__aeabi_ui2f
 1382              		.global	__aeabi_i2f
 1383              		.global	__aeabi_f2uiz
 1384              		.section	.rodata
 1385              		.align	2
 1386              	.LC0:
 1387 0400 2000     		.ascii	" \000"
 1388 0402 0000     		.align	2
 1389              	.LC1:
 1390 0404 20202020 		.ascii	"     \000"
 1390      2000
 1391              		.global	__aeabi_f2iz
 1392              		.global	__aeabi_fcmpge
 1393              		.global	__aeabi_fcmpeq
 1394              		.section	.text.main,"ax",%progbits
 1395              		.align	2
 1396              		.global	main
 1397              		.thumb
 1398              		.thumb_func
 1399              		.type	main, %function
 1400              	main:
 1401              	.LFB76:
 546:main.c        **** 
 547:main.c        **** int currentNeck = 0;
 548:main.c        **** #define EEPROM_COPEDENT_OFFSET 0
 549:main.c        **** #define COPEDENT_SIZE_IN_BYTES 528
 550:main.c        **** 
 551:main.c        **** int main(void)
 552:main.c        **** {
 1402              		.loc 1 552 0
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 96
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 90B5     		push	{r4, r7, lr}
 1407              		.cfi_def_cfa_offset 12
 1408              		.cfi_offset 4, -12
 1409              		.cfi_offset 7, -8
 1410              		.cfi_offset 14, -4
 1411 0002 9BB0     		sub	sp, sp, #108
 1412              		.cfi_def_cfa_offset 120
 1413 0004 02AF     		add	r7, sp, #8
 1414              		.cfi_def_cfa 7, 112
 553:main.c        ****     
 554:main.c        **** 	CYGlobalIntEnable; 
 1415              		.loc 1 554 0
 1416              		.syntax unified
 1417              	@ 554 "main.c" 1
 1418 0006 62B6     		CPSIE   i
 1419              	@ 0 "" 2
 555:main.c        **** 
 556:main.c        ****     EEPROM_Start();
 1420              		.loc 1 556 0
 1421              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 36


 1422              		.syntax unified
 1423 0008 FFF7FEFF 		bl	EEPROM_Start
 1424              	.LBB3:
 557:main.c        ****     
 558:main.c        ****     //add deadzones on edges of pedal sensing
 559:main.c        ****     for (int i = 0; i < NUM_PEDALS; i++)
 1425              		.loc 1 559 0
 1426 000c 0023     		movs	r3, #0
 1427 000e FB65     		str	r3, [r7, #92]
 1428 0010 6EE0     		b	.L72
 1429              	.L73:
 1430              	.LBB4:
 560:main.c        ****     {
 561:main.c        **** 
 562:main.c        ****         float pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1431              		.loc 1 562 0 discriminator 3
 1432 0012 3F4A     		ldr	r2, .L168
 1433 0014 FB6D     		ldr	r3, [r7, #92]
 1434 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1435 001a 1846     		mov	r0, r3
 1436 001c FFF7FEFF 		bl	__aeabi_ui2f
 1437 0020 0446     		mov	r4, r0
 1438 0022 3C4A     		ldr	r2, .L168+4
 1439 0024 FB6D     		ldr	r3, [r7, #92]
 1440 0026 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1441 002a 1846     		mov	r0, r3
 1442 002c FFF7FEFF 		bl	__aeabi_ui2f
 1443 0030 0346     		mov	r3, r0
 1444 0032 1946     		mov	r1, r3
 1445 0034 2046     		mov	r0, r4
 1446 0036 FFF7FEFF 		bl	__aeabi_fsub
 1447 003a 0346     		mov	r3, r0
 1448 003c 3B63     		str	r3, [r7, #48]	@ float
 563:main.c        ****         pedals_low[i] = pedals_low[i] + (0.1f * pedalDiff);
 1449              		.loc 1 563 0 discriminator 3
 1450 003e 354A     		ldr	r2, .L168+4
 1451 0040 FB6D     		ldr	r3, [r7, #92]
 1452 0042 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1453 0046 1846     		mov	r0, r3
 1454 0048 FFF7FEFF 		bl	__aeabi_i2f
 1455 004c 0446     		mov	r4, r0
 1456 004e 3249     		ldr	r1, .L168+8
 1457 0050 386B     		ldr	r0, [r7, #48]	@ float
 1458 0052 FFF7FEFF 		bl	__aeabi_fmul
 1459 0056 0346     		mov	r3, r0
 1460 0058 1946     		mov	r1, r3
 1461 005a 2046     		mov	r0, r4
 1462 005c FFF7FEFF 		bl	__aeabi_fadd
 1463 0060 0346     		mov	r3, r0
 1464 0062 1846     		mov	r0, r3
 1465 0064 FFF7FEFF 		bl	__aeabi_f2uiz
 1466 0068 0346     		mov	r3, r0
 1467 006a 99B2     		uxth	r1, r3
 1468 006c 294A     		ldr	r2, .L168+4
 1469 006e FB6D     		ldr	r3, [r7, #92]
 1470 0070 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 564:main.c        ****         pedals_high[i] = pedals_high[i] - (0.1f * pedalDiff);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 37


 1471              		.loc 1 564 0 discriminator 3
 1472 0074 264A     		ldr	r2, .L168
 1473 0076 FB6D     		ldr	r3, [r7, #92]
 1474 0078 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1475 007c 1846     		mov	r0, r3
 1476 007e FFF7FEFF 		bl	__aeabi_i2f
 1477 0082 0446     		mov	r4, r0
 1478 0084 2449     		ldr	r1, .L168+8
 1479 0086 386B     		ldr	r0, [r7, #48]	@ float
 1480 0088 FFF7FEFF 		bl	__aeabi_fmul
 1481 008c 0346     		mov	r3, r0
 1482 008e 1946     		mov	r1, r3
 1483 0090 2046     		mov	r0, r4
 1484 0092 FFF7FEFF 		bl	__aeabi_fsub
 1485 0096 0346     		mov	r3, r0
 1486 0098 1846     		mov	r0, r3
 1487 009a FFF7FEFF 		bl	__aeabi_f2uiz
 1488 009e 0346     		mov	r3, r0
 1489 00a0 99B2     		uxth	r1, r3
 1490 00a2 1B4A     		ldr	r2, .L168
 1491 00a4 FB6D     		ldr	r3, [r7, #92]
 1492 00a6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 565:main.c        ****         pedalDiff =(float)pedals_high[i] - (float)pedals_low[i];
 1493              		.loc 1 565 0 discriminator 3
 1494 00aa 194A     		ldr	r2, .L168
 1495 00ac FB6D     		ldr	r3, [r7, #92]
 1496 00ae 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1497 00b2 1846     		mov	r0, r3
 1498 00b4 FFF7FEFF 		bl	__aeabi_ui2f
 1499 00b8 0446     		mov	r4, r0
 1500 00ba 164A     		ldr	r2, .L168+4
 1501 00bc FB6D     		ldr	r3, [r7, #92]
 1502 00be 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 1503 00c2 1846     		mov	r0, r3
 1504 00c4 FFF7FEFF 		bl	__aeabi_ui2f
 1505 00c8 0346     		mov	r3, r0
 1506 00ca 1946     		mov	r1, r3
 1507 00cc 2046     		mov	r0, r4
 1508 00ce FFF7FEFF 		bl	__aeabi_fsub
 1509 00d2 0346     		mov	r3, r0
 1510 00d4 3B63     		str	r3, [r7, #48]	@ float
 566:main.c        ****         pedalRatios[i] = 4095.0f / pedalDiff;
 1511              		.loc 1 566 0 discriminator 3
 1512 00d6 396B     		ldr	r1, [r7, #48]	@ float
 1513 00d8 1048     		ldr	r0, .L168+12
 1514 00da FFF7FEFF 		bl	__aeabi_fdiv
 1515 00de 0346     		mov	r3, r0
 1516 00e0 1946     		mov	r1, r3
 1517 00e2 0F4A     		ldr	r2, .L168+16
 1518 00e4 FB6D     		ldr	r3, [r7, #92]
 1519 00e6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 1520              	.LBE4:
 559:main.c        ****     {
 1521              		.loc 1 559 0 discriminator 3
 1522 00ea FB6D     		ldr	r3, [r7, #92]
 1523 00ec 0133     		adds	r3, r3, #1
 1524 00ee FB65     		str	r3, [r7, #92]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 38


 1525              	.L72:
 559:main.c        ****     {
 1526              		.loc 1 559 0 is_stmt 0 discriminator 1
 1527 00f0 FB6D     		ldr	r3, [r7, #92]
 1528 00f2 092B     		cmp	r3, #9
 1529 00f4 8DDD     		ble	.L73
 1530              	.LBE3:
 1531              	.LBB5:
 567:main.c        ****     }
 568:main.c        ****     //for (int i = 0; i < NUM_STRINGS; i++)
 569:main.c        ****     //{
 570:main.c        ****         //openStringFrequencies[i] = mtof(openStringMidinotes[i]);
 571:main.c        ****         //stringOctave[i] = 1.0f;
 572:main.c        ****    // }
 573:main.c        ****     for (int i = 0; i < 11; i++)
 1532              		.loc 1 573 0 is_stmt 1
 1533 00f6 0023     		movs	r3, #0
 1534 00f8 BB65     		str	r3, [r7, #88]
 1535 00fa A1E0     		b	.L74
 1536              	.L77:
 1537              	.LBB6:
 574:main.c        **** 	{
 575:main.c        **** 		int pedalStartLoc = i*48;
 1538              		.loc 1 575 0
 1539 00fc BA6D     		ldr	r2, [r7, #88]
 1540 00fe 1346     		mov	r3, r2
 1541 0100 5B00     		lsls	r3, r3, #1
 1542 0102 1344     		add	r3, r3, r2
 1543 0104 1B01     		lsls	r3, r3, #4
 1544 0106 FB62     		str	r3, [r7, #44]
 1545              	.LBB7:
 576:main.c        ****         //for (int j = 0; j < NUM_STRINGS; j++)
 577:main.c        **** 		//{
 578:main.c        **** 			//pedals[i][j] = pow(2.0, (pedalsInSemitones[currentNeck][i][j] / 1200.0));
 579:main.c        **** 		//}
 580:main.c        ****         for (int j = 0; j < NUM_STRINGS; j++)
 1546              		.loc 1 580 0
 1547 0108 0023     		movs	r3, #0
 1548 010a 7B65     		str	r3, [r7, #84]
 1549 010c 91E0     		b	.L75
 1550              	.L169:
 1551 010e 00BF     		.align	2
 1552              	.L168:
 1553 0110 00000000 		.word	pedals_high
 1554 0114 00000000 		.word	pedals_low
 1555 0118 CDCCCC3D 		.word	1036831949
 1556 011c 00F07F45 		.word	1166012416
 1557 0120 00000000 		.word	pedalRatios
 1558              	.L76:
 1559              	.LBB8:
 581:main.c        **** 		{
 582:main.c        **** 
 583:main.c        ****             int stringStartLoc = j*4;
 1560              		.loc 1 583 0 discriminator 3
 1561 0124 7B6D     		ldr	r3, [r7, #84]
 1562 0126 9B00     		lsls	r3, r3, #2
 1563 0128 BB62     		str	r3, [r7, #40]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 39


 584:main.c        **** 
 585:main.c        ****             union breakFloat myTemp;
 586:main.c        ****             myTemp.b[0] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc);
 1564              		.loc 1 586 0 discriminator 3
 1565 012a BB6A     		ldr	r3, [r7, #40]
 1566 012c 9AB2     		uxth	r2, r3
 1567 012e FB6A     		ldr	r3, [r7, #44]
 1568 0130 9BB2     		uxth	r3, r3
 1569 0132 1344     		add	r3, r3, r2
 1570 0134 9BB2     		uxth	r3, r3
 1571 0136 1846     		mov	r0, r3
 1572 0138 FFF7FEFF 		bl	EEPROM_ReadByte
 1573 013c 0346     		mov	r3, r0
 1574 013e 3B72     		strb	r3, [r7, #8]
 587:main.c        ****             myTemp.b[1] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1575              		.loc 1 587 0 discriminator 3
 1576 0140 BB6A     		ldr	r3, [r7, #40]
 1577 0142 9AB2     		uxth	r2, r3
 1578 0144 FB6A     		ldr	r3, [r7, #44]
 1579 0146 9BB2     		uxth	r3, r3
 1580 0148 1344     		add	r3, r3, r2
 1581 014a 9BB2     		uxth	r3, r3
 1582 014c 0133     		adds	r3, r3, #1
 1583 014e 9BB2     		uxth	r3, r3
 1584 0150 1846     		mov	r0, r3
 1585 0152 FFF7FEFF 		bl	EEPROM_ReadByte
 1586 0156 0346     		mov	r3, r0
 1587 0158 7B72     		strb	r3, [r7, #9]
 588:main.c        ****             myTemp.b[2] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1588              		.loc 1 588 0 discriminator 3
 1589 015a BB6A     		ldr	r3, [r7, #40]
 1590 015c 9AB2     		uxth	r2, r3
 1591 015e FB6A     		ldr	r3, [r7, #44]
 1592 0160 9BB2     		uxth	r3, r3
 1593 0162 1344     		add	r3, r3, r2
 1594 0164 9BB2     		uxth	r3, r3
 1595 0166 0233     		adds	r3, r3, #2
 1596 0168 9BB2     		uxth	r3, r3
 1597 016a 1846     		mov	r0, r3
 1598 016c FFF7FEFF 		bl	EEPROM_ReadByte
 1599 0170 0346     		mov	r3, r0
 1600 0172 BB72     		strb	r3, [r7, #10]
 589:main.c        ****             myTemp.b[3] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1601              		.loc 1 589 0 discriminator 3
 1602 0174 BB6A     		ldr	r3, [r7, #40]
 1603 0176 9AB2     		uxth	r2, r3
 1604 0178 FB6A     		ldr	r3, [r7, #44]
 1605 017a 9BB2     		uxth	r3, r3
 1606 017c 1344     		add	r3, r3, r2
 1607 017e 9BB2     		uxth	r3, r3
 1608 0180 0333     		adds	r3, r3, #3
 1609 0182 9BB2     		uxth	r3, r3
 1610 0184 1846     		mov	r0, r3
 1611 0186 FFF7FEFF 		bl	EEPROM_ReadByte
 1612 018a 0346     		mov	r3, r0
 1613 018c FB72     		strb	r3, [r7, #11]
 590:main.c        ****             copedent[0][i][j] = myTemp.f;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 40


 1614              		.loc 1 590 0 discriminator 3
 1615 018e B968     		ldr	r1, [r7, #8]	@ float
 1616 0190 B948     		ldr	r0, .L170
 1617 0192 BA6D     		ldr	r2, [r7, #88]
 1618 0194 1346     		mov	r3, r2
 1619 0196 5B00     		lsls	r3, r3, #1
 1620 0198 1344     		add	r3, r3, r2
 1621 019a 9B00     		lsls	r3, r3, #2
 1622 019c 7A6D     		ldr	r2, [r7, #84]
 1623 019e 1344     		add	r3, r3, r2
 1624 01a0 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
 591:main.c        ****             
 592:main.c        ****             myTemp.b[0] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1625              		.loc 1 592 0 discriminator 3
 1626 01a4 BB6A     		ldr	r3, [r7, #40]
 1627 01a6 9AB2     		uxth	r2, r3
 1628 01a8 FB6A     		ldr	r3, [r7, #44]
 1629 01aa 9BB2     		uxth	r3, r3
 1630 01ac 1344     		add	r3, r3, r2
 1631 01ae 9BB2     		uxth	r3, r3
 1632 01b0 03F50473 		add	r3, r3, #528
 1633 01b4 9BB2     		uxth	r3, r3
 1634 01b6 1846     		mov	r0, r3
 1635 01b8 FFF7FEFF 		bl	EEPROM_ReadByte
 1636 01bc 0346     		mov	r3, r0
 1637 01be 3B72     		strb	r3, [r7, #8]
 593:main.c        ****             myTemp.b[1] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1638              		.loc 1 593 0 discriminator 3
 1639 01c0 BB6A     		ldr	r3, [r7, #40]
 1640 01c2 9AB2     		uxth	r2, r3
 1641 01c4 FB6A     		ldr	r3, [r7, #44]
 1642 01c6 9BB2     		uxth	r3, r3
 1643 01c8 1344     		add	r3, r3, r2
 1644 01ca 9BB2     		uxth	r3, r3
 1645 01cc 03F21123 		addw	r3, r3, #529
 1646 01d0 9BB2     		uxth	r3, r3
 1647 01d2 1846     		mov	r0, r3
 1648 01d4 FFF7FEFF 		bl	EEPROM_ReadByte
 1649 01d8 0346     		mov	r3, r0
 1650 01da 7B72     		strb	r3, [r7, #9]
 594:main.c        ****             myTemp.b[2] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1651              		.loc 1 594 0 discriminator 3
 1652 01dc BB6A     		ldr	r3, [r7, #40]
 1653 01de 9AB2     		uxth	r2, r3
 1654 01e0 FB6A     		ldr	r3, [r7, #44]
 1655 01e2 9BB2     		uxth	r3, r3
 1656 01e4 1344     		add	r3, r3, r2
 1657 01e6 9BB2     		uxth	r3, r3
 1658 01e8 03F21223 		addw	r3, r3, #530
 1659 01ec 9BB2     		uxth	r3, r3
 1660 01ee 1846     		mov	r0, r3
 1661 01f0 FFF7FEFF 		bl	EEPROM_ReadByte
 1662 01f4 0346     		mov	r3, r0
 1663 01f6 BB72     		strb	r3, [r7, #10]
 595:main.c        ****             myTemp.b[3] = EEPROM_ReadByte(EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc +
 1664              		.loc 1 595 0 discriminator 3
 1665 01f8 BB6A     		ldr	r3, [r7, #40]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 41


 1666 01fa 9AB2     		uxth	r2, r3
 1667 01fc FB6A     		ldr	r3, [r7, #44]
 1668 01fe 9BB2     		uxth	r3, r3
 1669 0200 1344     		add	r3, r3, r2
 1670 0202 9BB2     		uxth	r3, r3
 1671 0204 03F21323 		addw	r3, r3, #531
 1672 0208 9BB2     		uxth	r3, r3
 1673 020a 1846     		mov	r0, r3
 1674 020c FFF7FEFF 		bl	EEPROM_ReadByte
 1675 0210 0346     		mov	r3, r0
 1676 0212 FB72     		strb	r3, [r7, #11]
 596:main.c        ****             copedent[1][i][j] = myTemp.f;
 1677              		.loc 1 596 0 discriminator 3
 1678 0214 B968     		ldr	r1, [r7, #8]	@ float
 1679 0216 9848     		ldr	r0, .L170
 1680 0218 BA6D     		ldr	r2, [r7, #88]
 1681 021a 1346     		mov	r3, r2
 1682 021c 5B00     		lsls	r3, r3, #1
 1683 021e 1344     		add	r3, r3, r2
 1684 0220 9B00     		lsls	r3, r3, #2
 1685 0222 7A6D     		ldr	r2, [r7, #84]
 1686 0224 1344     		add	r3, r3, r2
 1687 0226 8433     		adds	r3, r3, #132
 1688 0228 40F82310 		str	r1, [r0, r3, lsl #2]	@ float
 1689              	.LBE8:
 580:main.c        **** 		{
 1690              		.loc 1 580 0 discriminator 3
 1691 022c 7B6D     		ldr	r3, [r7, #84]
 1692 022e 0133     		adds	r3, r3, #1
 1693 0230 7B65     		str	r3, [r7, #84]
 1694              	.L75:
 580:main.c        **** 		{
 1695              		.loc 1 580 0 is_stmt 0 discriminator 1
 1696 0232 7B6D     		ldr	r3, [r7, #84]
 1697 0234 0B2B     		cmp	r3, #11
 1698 0236 7FF775AF 		ble	.L76
 1699              	.LBE7:
 1700              	.LBE6:
 573:main.c        **** 	{
 1701              		.loc 1 573 0 is_stmt 1 discriminator 2
 1702 023a BB6D     		ldr	r3, [r7, #88]
 1703 023c 0133     		adds	r3, r3, #1
 1704 023e BB65     		str	r3, [r7, #88]
 1705              	.L74:
 573:main.c        **** 	{
 1706              		.loc 1 573 0 is_stmt 0 discriminator 1
 1707 0240 BB6D     		ldr	r3, [r7, #88]
 1708 0242 0A2B     		cmp	r3, #10
 1709 0244 7FF75AAF 		ble	.L77
 1710              	.LBE5:
 597:main.c        ****         }
 598:main.c        **** 	}
 599:main.c        **** 
 600:main.c        ****     
 601:main.c        ****     QuadDec_1_Start();
 1711              		.loc 1 601 0 is_stmt 1
 1712 0248 FFF7FEFF 		bl	QuadDec_1_Start
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 42


 602:main.c        ****     LED_amber1_Write(0);
 1713              		.loc 1 602 0
 1714 024c 0020     		movs	r0, #0
 1715 024e FFF7FEFF 		bl	LED_amber1_Write
 603:main.c        ****     LED_amber2_Write(1);
 1716              		.loc 1 603 0
 1717 0252 0120     		movs	r0, #1
 1718 0254 FFF7FEFF 		bl	LED_amber2_Write
 604:main.c        ****     LED_amber3_Write(0);
 1719              		.loc 1 604 0
 1720 0258 0020     		movs	r0, #0
 1721 025a FFF7FEFF 		bl	LED_amber3_Write
 605:main.c        ****     LED_amber4_Write(0);
 1722              		.loc 1 605 0
 1723 025e 0020     		movs	r0, #0
 1724 0260 FFF7FEFF 		bl	LED_amber4_Write
 606:main.c        ****     //CyDmaChEnable(rxChannel, STORE_TD_CFG_ONCMPLT);
 607:main.c        ****     
 608:main.c        **** /*
 609:main.c        ****     while(1)
 610:main.c        ****     {
 611:main.c        ****         if (!oct1_Read())
 612:main.c        ****         {
 613:main.c        ****             LED_amber1_Write(1);
 614:main.c        ****             LED_amber2_Write(0);
 615:main.c        ****             LED_amber3_Write(0);
 616:main.c        ****             LED_amber4_Write(0);
 617:main.c        ****         }
 618:main.c        ****         if (!oct2_Read())
 619:main.c        ****         {
 620:main.c        ****             LED_amber1_Write(0);
 621:main.c        ****             LED_amber2_Write(1);
 622:main.c        ****             LED_amber3_Write(0);
 623:main.c        ****             LED_amber4_Write(0);
 624:main.c        ****         }
 625:main.c        ****         if (!oct3_Read())
 626:main.c        ****         {
 627:main.c        ****             LED_amber1_Write(0);
 628:main.c        ****             LED_amber2_Write(0);
 629:main.c        ****             LED_amber3_Write(1);
 630:main.c        ****             LED_amber4_Write(0);
 631:main.c        ****         }
 632:main.c        ****         if (!oct4_Read())
 633:main.c        ****         {
 634:main.c        ****             LED_amber1_Write(0);
 635:main.c        ****             LED_amber2_Write(0);
 636:main.c        ****             LED_amber3_Write(0);
 637:main.c        ****             LED_amber4_Write(1);
 638:main.c        ****         }
 639:main.c        **** 
 640:main.c        **** 
 641:main.c        ****     }
 642:main.c        ****     */
 643:main.c        ****     SPIM_1_Start();
 1725              		.loc 1 643 0
 1726 0264 FFF7FEFF 		bl	SPIM_1_Start
 644:main.c        ****  
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 43


 645:main.c        **** 
 646:main.c        **** 
 647:main.c        ****     //CyDelay(150);
 648:main.c        ****     eepromReturnValue = Em_EEPROM_Init((uint32_t)Em_EEPROM_em_EepromStorage);
 1727              		.loc 1 648 0
 1728 0268 844B     		ldr	r3, .L170+4
 1729 026a 1846     		mov	r0, r3
 1730 026c FFF7FEFF 		bl	Em_EEPROM_Init
 1731 0270 0346     		mov	r3, r0
 1732 0272 1A46     		mov	r2, r3
 1733 0274 824B     		ldr	r3, .L170+8
 1734 0276 1A70     		strb	r2, [r3]
 649:main.c        ****     if(eepromReturnValue != CY_EM_EEPROM_SUCCESS)
 650:main.c        ****     {
 651:main.c        ****        // HandleError();
 652:main.c        ****     }
 653:main.c        ****     uint8_t myArrayCounter = 0;
 1735              		.loc 1 653 0
 1736 0278 0023     		movs	r3, #0
 1737 027a 87F82730 		strb	r3, [r7, #39]
 654:main.c        ****     I2C_1_Start();    
 1738              		.loc 1 654 0
 1739 027e FFF7FEFF 		bl	I2C_1_Start
 655:main.c        ****     USB_SetPowerStatus(USB_DEVICE_STATUS_SELF_POWERED);
 1740              		.loc 1 655 0
 1741 0282 0120     		movs	r0, #1
 1742 0284 FFF7FEFF 		bl	USB_SetPowerStatus
 656:main.c        ****     my_Vbus_ISR_StartEx(Vbus_function);
 1743              		.loc 1 656 0
 1744 0288 7E48     		ldr	r0, .L170+12
 1745 028a FFF7FEFF 		bl	my_Vbus_ISR_StartEx
 657:main.c        ****     ADC_SAR_Seq_1_Start();
 1746              		.loc 1 657 0
 1747 028e FFF7FEFF 		bl	ADC_SAR_Seq_1_Start
 658:main.c        ****     ADC_SAR_Seq_1_StartConvert();
 1748              		.loc 1 658 0
 1749 0292 FFF7FEFF 		bl	ADC_SAR_Seq_1_StartConvert
 659:main.c        ****     if (!USB_VBusPresent())
 1750              		.loc 1 659 0
 1751 0296 FFF7FEFF 		bl	USB_VBusPresent
 1752 029a 0346     		mov	r3, r0
 1753 029c 002B     		cmp	r3, #0
 1754 029e 01D1     		bne	.L78
 660:main.c        ****     {
 661:main.c        ****         restartSystemCheck();
 1755              		.loc 1 661 0
 1756 02a0 FFF7FEFF 		bl	restartSystemCheck
 1757              	.L78:
 662:main.c        ****     }
 663:main.c        **** 
 664:main.c        **** 
 665:main.c        **** 
 666:main.c        ****     CyDelay(100);
 1758              		.loc 1 666 0
 1759 02a4 6420     		movs	r0, #100
 1760 02a6 FFF7FEFF 		bl	CyDelay
 667:main.c        ****     I2Cbuff1[0] = 1<<6;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 44


 1761              		.loc 1 667 0
 1762 02aa 774B     		ldr	r3, .L170+16
 1763 02ac 4022     		movs	r2, #64
 1764 02ae 1A70     		strb	r2, [r3]
 668:main.c        ****     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 1765              		.loc 1 668 0
 1766 02b0 0022     		movs	r2, #0
 1767 02b2 0121     		movs	r1, #1
 1768 02b4 7020     		movs	r0, #112
 1769 02b6 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 1770 02ba 0346     		mov	r3, r0
 1771 02bc 1A46     		mov	r2, r3
 1772 02be 734B     		ldr	r3, .L170+20
 1773 02c0 1A60     		str	r2, [r3]
 669:main.c        **** 
 670:main.c        ****     OLED_init();
 1774              		.loc 1 670 0
 1775 02c2 FFF7FEFF 		bl	OLED_init
 671:main.c        **** #if 0
 672:main.c        ****     while(1)
 673:main.c        ****     {
 674:main.c        ****         for (int i=  0; i < 4; i++)
 675:main.c        ****         {
 676:main.c        ****             knobs[i] = 127 - (ADC_SAR_Seq_1_GetResult16(i)/32);
 677:main.c        ****             if (knobs[i] != prevKnobs[i])
 678:main.c        ****             {
 679:main.c        ****                // sendMIDIControlChange(80+i, knobs[i]);
 680:main.c        ****             }
 681:main.c        ****             prevKnobs[i] = knobs[i];
 682:main.c        ****         }
 683:main.c        ****         
 684:main.c        **** 
 685:main.c        ****         I2Cbuff1[0] = 1<<0;
 686:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 687:main.c        **** 
 688:main.c        ****         //CyDelayUs(100);
 689:main.c        ****         I2Cbuff1[0] = 0x0E;
 690:main.c        ****         status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 691:main.c        ****         status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 692:main.c        ****        // CyDelayUs(100);
 693:main.c        ****         angle[0] = I2Cbuff2[0] << 8;
 694:main.c        ****         angle[0] +=  I2Cbuff2[1];
 695:main.c        ****         
 696:main.c        ****     }
 697:main.c        ****     #endif
 698:main.c        ****     //OLEDclear();
 699:main.c        ****     /*
 700:main.c        ****     while(1)
 701:main.c        ****     {
 702:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
 703:main.c        ****         OLED_draw();
 704:main.c        ****         CyDelay(1);
 705:main.c        ****         
 706:main.c        ****         OLEDwriteInt(oct1_Read(), 1, 0,SecondLine);
 707:main.c        ****         OLEDwriteInt(oct2_Read(), 1, 10,SecondLine);
 708:main.c        ****         OLEDwriteInt(oct3_Read(), 1, 20,SecondLine);
 709:main.c        ****         OLEDwriteInt(oct4_Read(), 1, 30,SecondLine);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 45


 710:main.c        ****         for (int i=  0; i < 4; i++)
 711:main.c        ****         {
 712:main.c        ****             OLEDwriteInt( ADC_SAR_Seq_1_GetResult16(i)/8, 3, i*30,2);
 713:main.c        ****         }
 714:main.c        **** 
 715:main.c        ****     }
 716:main.c        ****     */
 717:main.c        **** #if 0
 718:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][0];
 719:main.c        ****     uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 720:main.c        **** 
 721:main.c        **** 
 722:main.c        ****     I2Cbuff1[0] = 1<<mux_states[10][1];
 723:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 724:main.c        **** 
 725:main.c        ****     //address 0x48
 726:main.c        ****     I2Cbuff1[0] = 0x1;
 727:main.c        ****     I2Cbuff1[1] = 0b11000000;
 728:main.c        ****     I2Cbuff1[2] = 0b10000011;
 729:main.c        **** 
 730:main.c        ****     status = I2C_MasterWriteBlocking(0x48, 3, I2C_1_MODE_COMPLETE_XFER);
 731:main.c        ****     #endif
 732:main.c        ****     
 733:main.c        ****     SPIS_1_Start();  
 1776              		.loc 1 733 0
 1777 02c6 FFF7FEFF 		bl	SPIS_1_Start
 734:main.c        ****     SPIM_1_Start();  
 1778              		.loc 1 734 0
 1779 02ca FFF7FEFF 		bl	SPIM_1_Start
 735:main.c        ****     SPIS_2_Start(); 
 1780              		.loc 1 735 0
 1781 02ce FFF7FEFF 		bl	SPIS_2_Start
 736:main.c        ****     DmaRxConfiguration();
 1782              		.loc 1 736 0
 1783 02d2 FFF7FEFF 		bl	DmaRxConfiguration
 737:main.c        ****     //isr_1_StartEx(isr_1_function);
 738:main.c        ****     //isr_SPI1_DMA_StartEx(spis_1_function);
 739:main.c        ****     isr_SPI1_ss_StartEx(spis_1_ss);
 1784              		.loc 1 739 0
 1785 02d6 6E48     		ldr	r0, .L170+24
 1786 02d8 FFF7FEFF 		bl	isr_SPI1_ss_StartEx
 740:main.c        ****     //isr_SPI2_DMA_StartEx(spis_2_function);
 741:main.c        ****     isr_SPI2_ss_StartEx(spis_2_ss);
 1787              		.loc 1 741 0
 1788 02dc 6D48     		ldr	r0, .L170+28
 1789 02de FFF7FEFF 		bl	isr_SPI2_ss_StartEx
 742:main.c        ****     
 743:main.c        ****     myArray[72] = 254;
 1790              		.loc 1 743 0
 1791 02e2 6D4B     		ldr	r3, .L170+32
 1792 02e4 FE22     		movs	r2, #254
 1793 02e6 83F84820 		strb	r2, [r3, #72]
 744:main.c        ****     myArray[73] = 253;
 1794              		.loc 1 744 0
 1795 02ea 6B4B     		ldr	r3, .L170+32
 1796 02ec FD22     		movs	r2, #253
 1797 02ee 83F84920 		strb	r2, [r3, #73]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 46


 745:main.c        ****     //temporarily start on the volume pedal for testing!
 746:main.c        ****     //TODO: fix this
 747:main.c        ****     main_counter = 0;
 1798              		.loc 1 747 0
 1799 02f2 6A4B     		ldr	r3, .L170+36
 1800 02f4 0022     		movs	r2, #0
 1801 02f6 1A70     		strb	r2, [r3]
 1802              	.L160:
 748:main.c        ****     //CyDelay(1000);
 749:main.c        ****     //CyDelay(1);
 750:main.c        **** 	for(;;)
 751:main.c        ****     {
 752:main.c        ****         //if (newDataFlag)
 753:main.c        ****         //{
 754:main.c        ****         //}
 755:main.c        ****             /*
 756:main.c        ****             for (int i = 0; i < 5; i++)
 757:main.c        ****             {
 758:main.c        ****                 I2C_1_MasterSendStart(0x70, 0); 
 759:main.c        ****                 I2C_1_MasterWriteByte(1<<i);
 760:main.c        ****                 I2C_1_MasterSendStop(); 
 761:main.c        **** 
 762:main.c        **** 
 763:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 764:main.c        ****                 I2C_1_MasterWriteByte(0x0C);
 765:main.c        ****                 //I2C_1_MasterSendStop();
 766:main.c        ****                 I2C_1_MasterSendRestart(0x36, 1); 
 767:main.c        ****                 rawAngle = I2C_1_MasterReadByte(1) << 8;
 768:main.c        ****                 //I2C_1_MasterSendRestart(0x36, 1);
 769:main.c        ****                 rawAngle +=  I2C_1_MasterReadByte(0);
 770:main.c        ****                  I2C_1_MasterSendStop(); 
 771:main.c        ****                 
 772:main.c        ****                 CyDelay(1);
 773:main.c        **** 
 774:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 775:main.c        ****                 I2C_1_MasterWriteByte(0x01);
 776:main.c        ****                 I2C_1_MasterWriteByte(rawAngle >> 8);
 777:main.c        ****                 I2C_1_MasterWriteByte(rawAngle & 0xff);
 778:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) >> 8);
 779:main.c        ****                 I2C_1_MasterWriteByte((rawAngle+500) & 0xff);
 780:main.c        ****                 I2C_1_MasterSendStop(); 
 781:main.c        ****                 
 782:main.c        ****                 CyDelay(2);
 783:main.c        **** 
 784:main.c        ****                 I2C_1_MasterSendStart(0x36, 0); 
 785:main.c        ****                 I2C_1_MasterWriteByte(0xff);
 786:main.c        ****                I2C_1_MasterWriteByte(0x80);
 787:main.c        ****                 I2C_1_MasterSendStop(); 
 788:main.c        ****                CyDelay(2);
 789:main.c        ****             }
 790:main.c        ****         */
 791:main.c        ****         //set main i2c mux
 792:main.c        ****     
 793:main.c        ****         
 794:main.c        ****         /*
 795:main.c        ****         for (int i = 0; i < 4; i++)
 796:main.c        ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 47


 797:main.c        ****             I2C_1_MasterSendStart(0x71, 0); 
 798:main.c        ****             I2C_1_MasterWriteByte(1<<(i+2));
 799:main.c        ****             I2C_1_MasterSendStop(); 
 800:main.c        **** 
 801:main.c        **** 
 802:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 803:main.c        ****             I2C_1_MasterWriteByte(0x0C);
 804:main.c        ****             //I2C_1_MasterSendStop();
 805:main.c        ****             I2C_1_MasterSendRestart(0x36, 1); 
 806:main.c        ****             rawAngle = I2C_1_MasterReadByte(1) << 8;
 807:main.c        ****             //I2C_1_MasterSendRestart(0x36, 1);
 808:main.c        ****             rawAngle +=  I2C_1_MasterReadByte(0);
 809:main.c        ****              I2C_1_MasterSendStop(); 
 810:main.c        ****             
 811:main.c        ****             CyDelay(1);
 812:main.c        **** 
 813:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 814:main.c        ****             I2C_1_MasterWriteByte(0x01);
 815:main.c        ****             I2C_1_MasterWriteByte(rawAngle >> 8);
 816:main.c        ****             I2C_1_MasterWriteByte(rawAngle & 0xff);
 817:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) >> 8);
 818:main.c        ****             I2C_1_MasterWriteByte((rawAngle+700) & 0xff);
 819:main.c        ****             I2C_1_MasterSendStop(); 
 820:main.c        ****             
 821:main.c        ****             CyDelay(2);
 822:main.c        **** 
 823:main.c        ****             I2C_1_MasterSendStart(0x36, 0); 
 824:main.c        ****             I2C_1_MasterWriteByte(0xff);
 825:main.c        ****             I2C_1_MasterWriteByte(0x80);
 826:main.c        ****             I2C_1_MasterSendStop(); 
 827:main.c        ****            CyDelay(2);
 828:main.c        ****         }
 829:main.c        ****             */
 830:main.c        ****         /*    
 831:main.c        ****         if (main_counter == 6)
 832:main.c        ****         {
 833:main.c        ****             main_counter = 8;
 834:main.c        ****         }
 835:main.c        ****         */    
 836:main.c        **** 
 837:main.c        ****             
 838:main.c        ****         if (mux_states[main_counter][0] != last_mux)
 1803              		.loc 1 838 0
 1804 02f8 684B     		ldr	r3, .L170+36
 1805 02fa 1B78     		ldrb	r3, [r3]
 1806 02fc DBB2     		uxtb	r3, r3
 1807 02fe 1A46     		mov	r2, r3
 1808 0300 674B     		ldr	r3, .L170+40
 1809 0302 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 1810 0306 674B     		ldr	r3, .L170+44
 1811 0308 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1812 030a 9A42     		cmp	r2, r3
 1813 030c 14D0     		beq	.L79
 1814              	.LBB9:
 839:main.c        ****         {
 840:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
 1815              		.loc 1 840 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 48


 1816 030e 634B     		ldr	r3, .L170+36
 1817 0310 1B78     		ldrb	r3, [r3]
 1818 0312 DBB2     		uxtb	r3, r3
 1819 0314 1A46     		mov	r2, r3
 1820 0316 624B     		ldr	r3, .L170+40
 1821 0318 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 1822 031c 1A46     		mov	r2, r3
 1823 031e 0123     		movs	r3, #1
 1824 0320 9340     		lsls	r3, r3, r2
 1825 0322 DAB2     		uxtb	r2, r3
 1826 0324 584B     		ldr	r3, .L170+16
 1827 0326 1A70     		strb	r2, [r3]
 841:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 1828              		.loc 1 841 0
 1829 0328 0022     		movs	r2, #0
 1830 032a 0121     		movs	r1, #1
 1831 032c 7020     		movs	r0, #112
 1832 032e FFF7FEFF 		bl	I2C_MasterWriteBlocking
 1833 0332 0346     		mov	r3, r0
 1834 0334 87F82630 		strb	r3, [r7, #38]
 1835              	.L79:
 1836              	.LBE9:
 842:main.c        ****         }
 843:main.c        ****         last_mux = mux_states[main_counter][0];
 1837              		.loc 1 843 0
 1838 0338 584B     		ldr	r3, .L170+36
 1839 033a 1B78     		ldrb	r3, [r3]
 1840 033c DBB2     		uxtb	r3, r3
 1841 033e 1A46     		mov	r2, r3
 1842 0340 574B     		ldr	r3, .L170+40
 1843 0342 13F81220 		ldrb	r2, [r3, r2, lsl #1]	@ zero_extendqisi2
 1844 0346 574B     		ldr	r3, .L170+44
 1845 0348 1A70     		strb	r2, [r3]
 844:main.c        ****         
 845:main.c        ****         CyDelayUs(10);
 1846              		.loc 1 845 0
 1847 034a 0A20     		movs	r0, #10
 1848 034c FFF7FEFF 		bl	CyDelayUs
 846:main.c        ****         if (mux_states[main_counter][0] == 5)
 1849              		.loc 1 846 0
 1850 0350 524B     		ldr	r3, .L170+36
 1851 0352 1B78     		ldrb	r3, [r3]
 1852 0354 DBB2     		uxtb	r3, r3
 1853 0356 1A46     		mov	r2, r3
 1854 0358 514B     		ldr	r3, .L170+40
 1855 035a 13F81230 		ldrb	r3, [r3, r2, lsl #1]	@ zero_extendqisi2
 1856 035e 052B     		cmp	r3, #5
 1857 0360 15D1     		bne	.L80
 847:main.c        ****         {
 848:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][1];
 1858              		.loc 1 848 0
 1859 0362 4E4B     		ldr	r3, .L170+36
 1860 0364 1B78     		ldrb	r3, [r3]
 1861 0366 DBB2     		uxtb	r3, r3
 1862 0368 4D4A     		ldr	r2, .L170+40
 1863 036a 5B00     		lsls	r3, r3, #1
 1864 036c 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 49


 1865 036e 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 1866 0370 1A46     		mov	r2, r3
 1867 0372 0123     		movs	r3, #1
 1868 0374 9340     		lsls	r3, r3, r2
 1869 0376 DAB2     		uxtb	r2, r3
 1870 0378 434B     		ldr	r3, .L170+16
 1871 037a 1A70     		strb	r2, [r3]
 849:main.c        ****             status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 1872              		.loc 1 849 0
 1873 037c 0022     		movs	r2, #0
 1874 037e 0121     		movs	r1, #1
 1875 0380 7120     		movs	r0, #113
 1876 0382 FFF7FEFF 		bl	I2C_MasterWriteBlocking
 1877 0386 0346     		mov	r3, r0
 1878 0388 1A46     		mov	r2, r3
 1879 038a 404B     		ldr	r3, .L170+20
 1880 038c 1A60     		str	r2, [r3]
 1881              	.L80:
 850:main.c        ****         }
 851:main.c        **** 
 852:main.c        ****         CyDelayUs(10);
 1882              		.loc 1 852 0
 1883 038e 0A20     		movs	r0, #10
 1884 0390 FFF7FEFF 		bl	CyDelayUs
 853:main.c        ****         //if it's a hall sensor
 854:main.c        ****         if (main_counter < 10)
 1885              		.loc 1 854 0
 1886 0394 414B     		ldr	r3, .L170+36
 1887 0396 1B78     		ldrb	r3, [r3]
 1888 0398 DBB2     		uxtb	r3, r3
 1889 039a 092B     		cmp	r3, #9
 1890 039c 33D8     		bhi	.L81
 855:main.c        ****         {
 856:main.c        ****             //CyDelayUs(100);
 857:main.c        ****             I2Cbuff1[0] = 0x0E;
 1891              		.loc 1 857 0
 1892 039e 3A4B     		ldr	r3, .L170+16
 1893 03a0 0E22     		movs	r2, #14
 1894 03a2 1A70     		strb	r2, [r3]
 858:main.c        ****             status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 1895              		.loc 1 858 0
 1896 03a4 0222     		movs	r2, #2
 1897 03a6 0121     		movs	r1, #1
 1898 03a8 3620     		movs	r0, #54
 1899 03aa FFF7FEFF 		bl	I2C_MasterWriteBlocking
 1900 03ae 0346     		mov	r3, r0
 1901 03b0 1A46     		mov	r2, r3
 1902 03b2 364B     		ldr	r3, .L170+20
 1903 03b4 1A60     		str	r2, [r3]
 859:main.c        ****             status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 1904              		.loc 1 859 0
 1905 03b6 0122     		movs	r2, #1
 1906 03b8 0221     		movs	r1, #2
 1907 03ba 3620     		movs	r0, #54
 1908 03bc FFF7FEFF 		bl	I2C_MasterReadBlocking
 1909 03c0 0346     		mov	r3, r0
 1910 03c2 1A46     		mov	r2, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 50


 1911 03c4 314B     		ldr	r3, .L170+20
 1912 03c6 1A60     		str	r2, [r3]
 860:main.c        ****            // CyDelayUs(100);
 861:main.c        ****             angle[main_counter] = I2Cbuff2[0] << 8;
 1913              		.loc 1 861 0
 1914 03c8 344B     		ldr	r3, .L170+36
 1915 03ca 1B78     		ldrb	r3, [r3]
 1916 03cc DBB2     		uxtb	r3, r3
 1917 03ce 1A46     		mov	r2, r3
 1918 03d0 354B     		ldr	r3, .L170+48
 1919 03d2 1B78     		ldrb	r3, [r3]
 1920 03d4 DBB2     		uxtb	r3, r3
 1921 03d6 9BB2     		uxth	r3, r3
 1922 03d8 1B02     		lsls	r3, r3, #8
 1923 03da 99B2     		uxth	r1, r3
 1924 03dc 334B     		ldr	r3, .L170+52
 1925 03de 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 862:main.c        ****             angle[main_counter] +=  I2Cbuff2[1];
 1926              		.loc 1 862 0
 1927 03e2 314B     		ldr	r3, .L170+48
 1928 03e4 5B78     		ldrb	r3, [r3, #1]
 1929 03e6 D8B2     		uxtb	r0, r3
 1930 03e8 2C4B     		ldr	r3, .L170+36
 1931 03ea 1B78     		ldrb	r3, [r3]
 1932 03ec DBB2     		uxtb	r3, r3
 1933 03ee 1946     		mov	r1, r3
 1934 03f0 1A46     		mov	r2, r3
 1935 03f2 2E4B     		ldr	r3, .L170+52
 1936 03f4 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 1937 03f8 83B2     		uxth	r3, r0
 1938 03fa 1344     		add	r3, r3, r2
 1939 03fc 9AB2     		uxth	r2, r3
 1940 03fe 2B4B     		ldr	r3, .L170+52
 1941 0400 23F81120 		strh	r2, [r3, r1, lsl #1]	@ movhi
 1942 0404 A9E0     		b	.L82
 1943              	.L81:
 863:main.c        ****         }
 864:main.c        ****         //otherwise it's the ADC for the foot pedal
 865:main.c        ****         else if (main_counter == 10)
 1944              		.loc 1 865 0
 1945 0406 254B     		ldr	r3, .L170+36
 1946 0408 1B78     		ldrb	r3, [r3]
 1947 040a DBB2     		uxtb	r3, r3
 1948 040c 0A2B     		cmp	r3, #10
 1949 040e 1ED1     		bne	.L83
 866:main.c        ****         {
 867:main.c        ****         //0x4D is the 7=-bit version of the MCP3221 address, might need to be shifted over by 1 to 
 868:main.c        ****             I2Cbuff1[0] = 0x0;      
 1950              		.loc 1 868 0
 1951 0410 1D4B     		ldr	r3, .L170+16
 1952 0412 0022     		movs	r2, #0
 1953 0414 1A70     		strb	r2, [r3]
 869:main.c        ****             status = I2C_MasterReadBlocking(0x4f, 2, I2C_1_MODE_COMPLETE_XFER);
 1954              		.loc 1 869 0
 1955 0416 0022     		movs	r2, #0
 1956 0418 0221     		movs	r1, #2
 1957 041a 4F20     		movs	r0, #79
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 51


 1958 041c FFF7FEFF 		bl	I2C_MasterReadBlocking
 1959 0420 0346     		mov	r3, r0
 1960 0422 1A46     		mov	r2, r3
 1961 0424 194B     		ldr	r3, .L170+20
 1962 0426 1A60     		str	r2, [r3]
 870:main.c        ****             volumePedal = I2Cbuff2[0] << 8;
 1963              		.loc 1 870 0
 1964 0428 1F4B     		ldr	r3, .L170+48
 1965 042a 1B78     		ldrb	r3, [r3]
 1966 042c DBB2     		uxtb	r3, r3
 1967 042e 9BB2     		uxth	r3, r3
 1968 0430 1B02     		lsls	r3, r3, #8
 1969 0432 9AB2     		uxth	r2, r3
 1970 0434 1E4B     		ldr	r3, .L170+56
 1971 0436 1A80     		strh	r2, [r3]	@ movhi
 871:main.c        ****             volumePedal +=  I2Cbuff2[1];
 1972              		.loc 1 871 0
 1973 0438 1B4B     		ldr	r3, .L170+48
 1974 043a 5B78     		ldrb	r3, [r3, #1]
 1975 043c DBB2     		uxtb	r3, r3
 1976 043e 9AB2     		uxth	r2, r3
 1977 0440 1B4B     		ldr	r3, .L170+56
 1978 0442 1B88     		ldrh	r3, [r3]
 1979 0444 1344     		add	r3, r3, r2
 1980 0446 9AB2     		uxth	r2, r3
 1981 0448 194B     		ldr	r3, .L170+56
 1982 044a 1A80     		strh	r2, [r3]	@ movhi
 1983 044c 85E0     		b	.L82
 1984              	.L83:
 872:main.c        ****         }
 873:main.c        ****         
 874:main.c        ****         else
 875:main.c        ****         { 
 876:main.c        ****             if (OLEDcount == 0)
 1985              		.loc 1 876 0
 1986 044e 194B     		ldr	r3, .L170+60
 1987 0450 1B68     		ldr	r3, [r3]
 1988 0452 002B     		cmp	r3, #0
 1989 0454 03D1     		bne	.L84
 877:main.c        ****             {
 878:main.c        ****                 OLEDclearLine(FirstLine);
 1990              		.loc 1 878 0
 1991 0456 0020     		movs	r0, #0
 1992 0458 FFF7FEFF 		bl	OLEDclearLine
 1993 045c 71E0     		b	.L85
 1994              	.L84:
 879:main.c        ****             }
 880:main.c        ****             else if (OLEDcount == 1)
 1995              		.loc 1 880 0
 1996 045e 154B     		ldr	r3, .L170+60
 1997 0460 1B68     		ldr	r3, [r3]
 1998 0462 012B     		cmp	r3, #1
 1999 0464 2AD1     		bne	.L86
 881:main.c        ****             {
 882:main.c        ****                 OLEDwriteInt(encoderNum, 2, 0, FirstLine);
 2000              		.loc 1 882 0
 2001 0466 144B     		ldr	r3, .L170+64
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 52


 2002 0468 1B68     		ldr	r3, [r3]
 2003 046a 1846     		mov	r0, r3
 2004 046c 0023     		movs	r3, #0
 2005 046e 0022     		movs	r2, #0
 2006 0470 0221     		movs	r1, #2
 2007 0472 FFF7FEFF 		bl	OLEDwriteInt
 2008 0476 64E0     		b	.L85
 2009              	.L171:
 2010              		.align	2
 2011              	.L170:
 2012 0478 00000000 		.word	copedent
 2013 047c 00000000 		.word	Em_EEPROM_em_EepromStorage
 2014 0480 00000000 		.word	eepromReturnValue
 2015 0484 00000000 		.word	Vbus_function
 2016 0488 00000000 		.word	I2Cbuff1
 2017 048c 00000000 		.word	status
 2018 0490 00000000 		.word	spis_1_ss
 2019 0494 00000000 		.word	spis_2_ss
 2020 0498 00000000 		.word	myArray
 2021 049c 00000000 		.word	main_counter
 2022 04a0 00000000 		.word	mux_states
 2023 04a4 00000000 		.word	last_mux
 2024 04a8 00000000 		.word	I2Cbuff2
 2025 04ac 00000000 		.word	angle
 2026 04b0 00000000 		.word	volumePedal
 2027 04b4 00000000 		.word	OLEDcount
 2028 04b8 00000000 		.word	encoderNum
 2029              	.L86:
 883:main.c        **** 		    }
 884:main.c        ****             else if (OLEDcount == 2)
 2030              		.loc 1 884 0
 2031 04bc A64B     		ldr	r3, .L172
 2032 04be 1B68     		ldr	r3, [r3]
 2033 04c0 022B     		cmp	r3, #2
 2034 04c2 08D1     		bne	.L87
 885:main.c        ****             {
 886:main.c        ****                 OLEDwriteString(" ", 1, OLEDgetCursor(), FirstLine);
 2035              		.loc 1 886 0
 2036 04c4 FFF7FEFF 		bl	OLEDgetCursor
 2037 04c8 0246     		mov	r2, r0
 2038 04ca 0023     		movs	r3, #0
 2039 04cc 0121     		movs	r1, #1
 2040 04ce A348     		ldr	r0, .L172+4
 2041 04d0 FFF7FEFF 		bl	OLEDwriteString
 2042 04d4 35E0     		b	.L85
 2043              	.L87:
 887:main.c        ****             }
 888:main.c        ****             else if (OLEDcount == 3)
 2044              		.loc 1 888 0
 2045 04d6 A04B     		ldr	r3, .L172
 2046 04d8 1B68     		ldr	r3, [r3]
 2047 04da 032B     		cmp	r3, #3
 2048 04dc 0ED1     		bne	.L88
 889:main.c        ****             {
 890:main.c        ****                 OLEDwriteInt(encoderVal[encoderNum], 3, OLEDgetCursor(), FirstLine);
 2049              		.loc 1 890 0
 2050 04de A04B     		ldr	r3, .L172+8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 53


 2051 04e0 1B68     		ldr	r3, [r3]
 2052 04e2 A04A     		ldr	r2, .L172+12
 2053 04e4 D35C     		ldrb	r3, [r2, r3]
 2054 04e6 DBB2     		uxtb	r3, r3
 2055 04e8 1C46     		mov	r4, r3
 2056 04ea FFF7FEFF 		bl	OLEDgetCursor
 2057 04ee 0246     		mov	r2, r0
 2058 04f0 0023     		movs	r3, #0
 2059 04f2 0321     		movs	r1, #3
 2060 04f4 2046     		mov	r0, r4
 2061 04f6 FFF7FEFF 		bl	OLEDwriteInt
 2062 04fa 22E0     		b	.L85
 2063              	.L88:
 891:main.c        ****             }
 892:main.c        ****             else if (OLEDcount == 4)
 2064              		.loc 1 892 0
 2065 04fc 964B     		ldr	r3, .L172
 2066 04fe 1B68     		ldr	r3, [r3]
 2067 0500 042B     		cmp	r3, #4
 2068 0502 08D1     		bne	.L89
 893:main.c        ****             {
 894:main.c        ****                 OLEDwriteString("     ", 5, OLEDgetCursor(), FirstLine);
 2069              		.loc 1 894 0
 2070 0504 FFF7FEFF 		bl	OLEDgetCursor
 2071 0508 0246     		mov	r2, r0
 2072 050a 0023     		movs	r3, #0
 2073 050c 0521     		movs	r1, #5
 2074 050e 9648     		ldr	r0, .L172+16
 2075 0510 FFF7FEFF 		bl	OLEDwriteString
 2076 0514 15E0     		b	.L85
 2077              	.L89:
 895:main.c        ****             }
 896:main.c        ****             else if (OLEDcount == 5)
 2078              		.loc 1 896 0
 2079 0516 904B     		ldr	r3, .L172
 2080 0518 1B68     		ldr	r3, [r3]
 2081 051a 052B     		cmp	r3, #5
 2082 051c 0BD1     		bne	.L90
 897:main.c        ****             {
 898:main.c        ****                 OLEDwriteInt(patchNum, 2, OLEDgetCursor(), FirstLine);
 2083              		.loc 1 898 0
 2084 051e 934B     		ldr	r3, .L172+20
 2085 0520 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2086 0522 1C46     		mov	r4, r3
 2087 0524 FFF7FEFF 		bl	OLEDgetCursor
 2088 0528 0246     		mov	r2, r0
 2089 052a 0023     		movs	r3, #0
 2090 052c 0221     		movs	r1, #2
 2091 052e 2046     		mov	r0, r4
 2092 0530 FFF7FEFF 		bl	OLEDwriteInt
 2093 0534 05E0     		b	.L85
 2094              	.L90:
 899:main.c        ****             }
 900:main.c        ****             else if (OLEDcount == 6)
 2095              		.loc 1 900 0
 2096 0536 884B     		ldr	r3, .L172
 2097 0538 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 54


 2098 053a 062B     		cmp	r3, #6
 2099 053c 01D1     		bne	.L85
 901:main.c        ****             {
 902:main.c        ****                 OLED_drawFirstLine();
 2100              		.loc 1 902 0
 2101 053e FFF7FEFF 		bl	OLED_drawFirstLine
 2102              	.L85:
 903:main.c        ****             }
 904:main.c        ****             OLEDcount++;
 2103              		.loc 1 904 0
 2104 0542 854B     		ldr	r3, .L172
 2105 0544 1B68     		ldr	r3, [r3]
 2106 0546 0133     		adds	r3, r3, #1
 2107 0548 834A     		ldr	r2, .L172
 2108 054a 1360     		str	r3, [r2]
 905:main.c        ****             if (OLEDcount > 6)
 2109              		.loc 1 905 0
 2110 054c 824B     		ldr	r3, .L172
 2111 054e 1B68     		ldr	r3, [r3]
 2112 0550 062B     		cmp	r3, #6
 2113 0552 02DD     		ble	.L82
 906:main.c        ****             {
 907:main.c        ****                 OLEDcount = 0;
 2114              		.loc 1 907 0
 2115 0554 804B     		ldr	r3, .L172
 2116 0556 0022     		movs	r2, #0
 2117 0558 1A60     		str	r2, [r3]
 2118              	.L82:
 908:main.c        ****             }
 909:main.c        ****         }
 910:main.c        ****         
 911:main.c        ****         /*
 912:main.c        ****         I2Cbuff1[0] = 1<<main_counter;
 913:main.c        ****         uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 914:main.c        **** 
 915:main.c        ****                 for (int i = 0; i < 5; i++)
 916:main.c        ****                 {
 917:main.c        ****                     I2Cbuff1[0] = 1<<i;
 918:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 919:main.c        **** 
 920:main.c        ****                     I2Cbuff1[0] = 0x0E;
 921:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 922:main.c        **** 
 923:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 924:main.c        **** 
 925:main.c        **** 
 926:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 927:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 928:main.c        ****                 }
 929:main.c        ****             if (main_counter == 0)
 930:main.c        ****             {               
 931:main.c        ****                 I2Cbuff1[0] = 1<<main_counter;
 932:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 933:main.c        **** 
 934:main.c        ****                 for (int i = 0; i < 5; i++)
 935:main.c        ****                 {
 936:main.c        ****                     I2Cbuff1[0] = 1<<i;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 55


 937:main.c        ****                     status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
 938:main.c        **** 
 939:main.c        ****                     I2Cbuff1[0] = 0x0E;
 940:main.c        ****                     status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 941:main.c        **** 
 942:main.c        ****                     status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 943:main.c        **** 
 944:main.c        **** 
 945:main.c        ****                     angle[i] = I2Cbuff2[0] << 8;
 946:main.c        ****                     angle[i] +=  I2Cbuff2[1];
 947:main.c        ****                 }
 948:main.c        ****             }
 949:main.c        ****             else
 950:main.c        ****             {
 951:main.c        ****                 I2Cbuff1[0] = 1<<(main_counter+1);
 952:main.c        ****                 uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 953:main.c        ****                 I2Cbuff1[0] = 0x0E;
 954:main.c        ****                 status = I2C_MasterWriteBlocking(0x36, 1, I2C_1_MODE_NO_STOP);
 955:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 956:main.c        ****                 {
 957:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 958:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 959:main.c        ****                 }
 960:main.c        ****            
 961:main.c        **** 
 962:main.c        **** 
 963:main.c        ****                 status = I2C_MasterReadBlocking(0x36, 2, I2C_1_MODE_REPEAT_START);
 964:main.c        ****                  //I2C_1_MasterReadBuf(0x36, I2Cbuff3, 2, I2C_1_MODE_REPEAT_START);
 965:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 966:main.c        ****                 {
 967:main.c        ****                     I2Cbuff1[0] = 1<<(main_counter+1);
 968:main.c        ****                     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
 969:main.c        ****                 }
 970:main.c        ****                 
 971:main.c        ****                 angle[main_counter+4] = I2Cbuff2[0] << 8;
 972:main.c        ****                 angle[main_counter+4] +=  I2Cbuff2[1];
 973:main.c        ****             }    
 974:main.c        ****                 
 975:main.c        **** 
 976:main.c        ****             send_it = 1;
 977:main.c        ****         }
 978:main.c        ****         */
 979:main.c        ****         
 980:main.c        ****         if (main_counter < 10)
 2119              		.loc 1 980 0
 2120 055a 854B     		ldr	r3, .L172+24
 2121 055c 1B78     		ldrb	r3, [r3]
 2122 055e DBB2     		uxtb	r3, r3
 2123 0560 092B     		cmp	r3, #9
 2124 0562 77D8     		bhi	.L91
 2125              	.LBB10:
 981:main.c        ****         {
 982:main.c        ****             
 983:main.c        ****             //do math to make all pedals and levers report between 0 and 4095 scaled
 984:main.c        ****             int16_t tempangle = ((int16_t) angle[main_counter] - (int16_t)pedals_low[main_counter])
 2126              		.loc 1 984 0
 2127 0564 824B     		ldr	r3, .L172+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 56


 2128 0566 1B78     		ldrb	r3, [r3]
 2129 0568 DBB2     		uxtb	r3, r3
 2130 056a 1A46     		mov	r2, r3
 2131 056c 814B     		ldr	r3, .L172+28
 2132 056e 33F81220 		ldrh	r2, [r3, r2, lsl #1]
 2133 0572 7F4B     		ldr	r3, .L172+24
 2134 0574 1B78     		ldrb	r3, [r3]
 2135 0576 DBB2     		uxtb	r3, r3
 2136 0578 1946     		mov	r1, r3
 2137 057a 7F4B     		ldr	r3, .L172+32
 2138 057c 33F81130 		ldrh	r3, [r3, r1, lsl #1]
 2139 0580 D31A     		subs	r3, r2, r3
 2140 0582 9BB2     		uxth	r3, r3
 2141 0584 BB84     		strh	r3, [r7, #36]	@ movhi
 985:main.c        ****             
 986:main.c        ****             if (tempangle > 0)
 2142              		.loc 1 986 0
 2143 0586 B7F92430 		ldrsh	r3, [r7, #36]
 2144 058a 002B     		cmp	r3, #0
 2145 058c 1CDD     		ble	.L92
 987:main.c        ****             {
 988:main.c        ****                 processed_pedals[main_counter] = (float)tempangle * pedalRatios[main_counter];
 2146              		.loc 1 988 0
 2147 058e 784B     		ldr	r3, .L172+24
 2148 0590 1B78     		ldrb	r3, [r3]
 2149 0592 DBB2     		uxtb	r3, r3
 2150 0594 1C46     		mov	r4, r3
 2151 0596 B7F92430 		ldrsh	r3, [r7, #36]
 2152 059a 1846     		mov	r0, r3
 2153 059c FFF7FEFF 		bl	__aeabi_i2f
 2154 05a0 734B     		ldr	r3, .L172+24
 2155 05a2 1B78     		ldrb	r3, [r3]
 2156 05a4 DBB2     		uxtb	r3, r3
 2157 05a6 1A46     		mov	r2, r3
 2158 05a8 744B     		ldr	r3, .L172+36
 2159 05aa 53F82230 		ldr	r3, [r3, r2, lsl #2]	@ float
 2160 05ae 1946     		mov	r1, r3
 2161 05b0 FFF7FEFF 		bl	__aeabi_fmul
 2162 05b4 0346     		mov	r3, r0
 2163 05b6 1846     		mov	r0, r3
 2164 05b8 FFF7FEFF 		bl	__aeabi_f2uiz
 2165 05bc 0346     		mov	r3, r0
 2166 05be 9AB2     		uxth	r2, r3
 2167 05c0 6F4B     		ldr	r3, .L172+40
 2168 05c2 23F81420 		strh	r2, [r3, r4, lsl #1]	@ movhi
 2169 05c6 07E0     		b	.L93
 2170              	.L92:
 989:main.c        ****             }
 990:main.c        ****             else
 991:main.c        ****             {
 992:main.c        ****                 processed_pedals[main_counter] = 0;
 2171              		.loc 1 992 0
 2172 05c8 694B     		ldr	r3, .L172+24
 2173 05ca 1B78     		ldrb	r3, [r3]
 2174 05cc DBB2     		uxtb	r3, r3
 2175 05ce 1A46     		mov	r2, r3
 2176 05d0 6B4B     		ldr	r3, .L172+40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 57


 2177 05d2 0021     		movs	r1, #0
 2178 05d4 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2179              	.L93:
 993:main.c        ****             }
 994:main.c        ****             if (processed_pedals[main_counter] > 4095)
 2180              		.loc 1 994 0
 2181 05d8 654B     		ldr	r3, .L172+24
 2182 05da 1B78     		ldrb	r3, [r3]
 2183 05dc DBB2     		uxtb	r3, r3
 2184 05de 1A46     		mov	r2, r3
 2185 05e0 674B     		ldr	r3, .L172+40
 2186 05e2 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2187 05e6 B3F5805F 		cmp	r3, #4096
 2188 05ea 08D3     		bcc	.L94
 995:main.c        ****             {
 996:main.c        ****                 processed_pedals[main_counter] = 4095;
 2189              		.loc 1 996 0
 2190 05ec 604B     		ldr	r3, .L172+24
 2191 05ee 1B78     		ldrb	r3, [r3]
 2192 05f0 DBB2     		uxtb	r3, r3
 2193 05f2 1A46     		mov	r2, r3
 2194 05f4 624B     		ldr	r3, .L172+40
 2195 05f6 40F6FF71 		movw	r1, #4095
 2196 05fa 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2197              	.L94:
 997:main.c        ****             }
 998:main.c        ****             
 999:main.c        ****             
1000:main.c        ****             if ( processed_pedals[main_counter] != prev_processed_pedals[main_counter])
 2198              		.loc 1 1000 0
 2199 05fe 5C4B     		ldr	r3, .L172+24
 2200 0600 1B78     		ldrb	r3, [r3]
 2201 0602 5B4B     		ldr	r3, .L172+24
 2202 0604 1B78     		ldrb	r3, [r3]
1001:main.c        ****             {
1002:main.c        ****                 //sendMIDIControlChange(main_counter, (processed_pedals[main_counter] >> 7), 1);
1003:main.c        ****                 //sendMIDIControlChange(main_counter+36, (processed_pedals[main_counter] & 127), 1)
1004:main.c        ****             }
1005:main.c        ****             pedals_float[main_counter] = (float)processed_pedals[main_counter] * 2.442002442002442e
 2203              		.loc 1 1005 0
 2204 0606 5A4B     		ldr	r3, .L172+24
 2205 0608 1B78     		ldrb	r3, [r3]
 2206 060a DBB2     		uxtb	r3, r3
 2207 060c 1C46     		mov	r4, r3
 2208 060e 584B     		ldr	r3, .L172+24
 2209 0610 1B78     		ldrb	r3, [r3]
 2210 0612 DBB2     		uxtb	r3, r3
 2211 0614 1A46     		mov	r2, r3
 2212 0616 5A4B     		ldr	r3, .L172+40
 2213 0618 33F81230 		ldrh	r3, [r3, r2, lsl #1]
 2214 061c 1846     		mov	r0, r3
 2215 061e FFF7FEFF 		bl	__aeabi_ui2f
 2216 0622 0346     		mov	r3, r0
 2217 0624 5749     		ldr	r1, .L172+44
 2218 0626 1846     		mov	r0, r3
 2219 0628 FFF7FEFF 		bl	__aeabi_fmul
 2220 062c 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 58


 2221 062e 1A46     		mov	r2, r3
 2222 0630 554B     		ldr	r3, .L172+48
 2223 0632 43F82420 		str	r2, [r3, r4, lsl #2]	@ float
1006:main.c        ****             prev_processed_pedals[main_counter] = processed_pedals[main_counter];
 2224              		.loc 1 1006 0
 2225 0636 4E4B     		ldr	r3, .L172+24
 2226 0638 1B78     		ldrb	r3, [r3]
 2227 063a DBB2     		uxtb	r3, r3
 2228 063c 1A46     		mov	r2, r3
 2229 063e 4C4B     		ldr	r3, .L172+24
 2230 0640 1B78     		ldrb	r3, [r3]
 2231 0642 DBB2     		uxtb	r3, r3
 2232 0644 1946     		mov	r1, r3
 2233 0646 4E4B     		ldr	r3, .L172+40
 2234 0648 33F81110 		ldrh	r1, [r3, r1, lsl #1]
 2235 064c 4F4B     		ldr	r3, .L172+52
 2236 064e 23F81210 		strh	r1, [r3, r2, lsl #1]	@ movhi
 2237              	.LBE10:
 2238 0652 45E0     		b	.L95
 2239              	.L91:
1007:main.c        ****         }
1008:main.c        ****         else
1009:main.c        ****         {
1010:main.c        ****             processed_volumePedal = (float)volumePedal * 1.007378258730939f; //compensate for lower
 2240              		.loc 1 1010 0
 2241 0654 4E4B     		ldr	r3, .L172+56
 2242 0656 1B88     		ldrh	r3, [r3]
 2243 0658 1846     		mov	r0, r3
 2244 065a FFF7FEFF 		bl	__aeabi_ui2f
 2245 065e 0346     		mov	r3, r0
 2246 0660 4C49     		ldr	r1, .L172+60
 2247 0662 1846     		mov	r0, r3
 2248 0664 FFF7FEFF 		bl	__aeabi_fmul
 2249 0668 0346     		mov	r3, r0
 2250 066a 1846     		mov	r0, r3
 2251 066c FFF7FEFF 		bl	__aeabi_f2iz
 2252 0670 0346     		mov	r3, r0
 2253 0672 1AB2     		sxth	r2, r3
 2254 0674 484B     		ldr	r3, .L172+64
 2255 0676 1A80     		strh	r2, [r3]	@ movhi
1011:main.c        **** 
1012:main.c        ****             if (processed_volumePedal < 0)
 2256              		.loc 1 1012 0
 2257 0678 474B     		ldr	r3, .L172+64
 2258 067a B3F90030 		ldrsh	r3, [r3]
 2259 067e 002B     		cmp	r3, #0
 2260 0680 03DA     		bge	.L96
1013:main.c        ****             {
1014:main.c        ****                 processed_volumePedal = 0;
 2261              		.loc 1 1014 0
 2262 0682 454B     		ldr	r3, .L172+64
 2263 0684 0022     		movs	r2, #0
 2264 0686 1A80     		strh	r2, [r3]	@ movhi
 2265 0688 09E0     		b	.L97
 2266              	.L96:
1015:main.c        ****             }
1016:main.c        ****             else if (processed_volumePedal > 4095)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 59


 2267              		.loc 1 1016 0
 2268 068a 434B     		ldr	r3, .L172+64
 2269 068c B3F90030 		ldrsh	r3, [r3]
 2270 0690 B3F5805F 		cmp	r3, #4096
 2271 0694 03DB     		blt	.L97
1017:main.c        ****             {
1018:main.c        ****                  processed_volumePedal = 4095;
 2272              		.loc 1 1018 0
 2273 0696 404B     		ldr	r3, .L172+64
 2274 0698 40F6FF72 		movw	r2, #4095
 2275 069c 1A80     		strh	r2, [r3]	@ movhi
 2276              	.L97:
1019:main.c        ****             }
1020:main.c        ****             
1021:main.c        ****             if ( processed_volumePedal != prev_processed_volumePedal)
 2277              		.loc 1 1021 0
 2278 069e 3E4B     		ldr	r3, .L172+64
 2279 06a0 B3F90020 		ldrsh	r2, [r3]
 2280 06a4 3D4B     		ldr	r3, .L172+68
 2281 06a6 B3F90030 		ldrsh	r3, [r3]
 2282 06aa 9A42     		cmp	r2, r3
 2283 06ac 13D0     		beq	.L98
 2284              	.LBB11:
1022:main.c        ****             {
1023:main.c        ****                 uint16_t tempPedal = processed_volumePedal;
 2285              		.loc 1 1023 0
 2286 06ae 3A4B     		ldr	r3, .L172+64
 2287 06b0 B3F90030 		ldrsh	r3, [r3]
 2288 06b4 7B84     		strh	r3, [r7, #34]	@ movhi
1024:main.c        ****                 
1025:main.c        ****                 sendMIDIControlChange(21, ( tempPedal >> 7), 0);
 2289              		.loc 1 1025 0
 2290 06b6 7B8C     		ldrh	r3, [r7, #34]
 2291 06b8 DB09     		lsrs	r3, r3, #7
 2292 06ba 9BB2     		uxth	r3, r3
 2293 06bc 0022     		movs	r2, #0
 2294 06be 1946     		mov	r1, r3
 2295 06c0 1520     		movs	r0, #21
 2296 06c2 FFF7FEFF 		bl	sendMIDIControlChange
1026:main.c        ****                 sendMIDIControlChange(22, ( tempPedal & 127), 0);
 2297              		.loc 1 1026 0
 2298 06c6 7B8C     		ldrh	r3, [r7, #34]
 2299 06c8 03F07F03 		and	r3, r3, #127
 2300 06cc 0022     		movs	r2, #0
 2301 06ce 1946     		mov	r1, r3
 2302 06d0 1620     		movs	r0, #22
 2303 06d2 FFF7FEFF 		bl	sendMIDIControlChange
 2304              	.L98:
 2305              	.LBE11:
1027:main.c        ****             }
1028:main.c        ****              prev_processed_volumePedal = processed_volumePedal;
 2306              		.loc 1 1028 0
 2307 06d6 304B     		ldr	r3, .L172+64
 2308 06d8 B3F90020 		ldrsh	r2, [r3]
 2309 06dc 2F4B     		ldr	r3, .L172+68
 2310 06de 1A80     		strh	r2, [r3]	@ movhi
 2311              	.L95:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 60


1029:main.c        ****         }
1030:main.c        ****         
1031:main.c        ****         main_counter++;
 2312              		.loc 1 1031 0
 2313 06e0 234B     		ldr	r3, .L172+24
 2314 06e2 1B78     		ldrb	r3, [r3]
 2315 06e4 DBB2     		uxtb	r3, r3
 2316 06e6 0133     		adds	r3, r3, #1
 2317 06e8 DAB2     		uxtb	r2, r3
 2318 06ea 214B     		ldr	r3, .L172+24
 2319 06ec 1A70     		strb	r2, [r3]
1032:main.c        **** 
1033:main.c        ****         if (main_counter > 11)
 2320              		.loc 1 1033 0
 2321 06ee 204B     		ldr	r3, .L172+24
 2322 06f0 1B78     		ldrb	r3, [r3]
 2323 06f2 DBB2     		uxtb	r3, r3
 2324 06f4 0B2B     		cmp	r3, #11
 2325 06f6 02D9     		bls	.L99
1034:main.c        ****         {
1035:main.c        ****             main_counter = 0;
 2326              		.loc 1 1035 0
 2327 06f8 1D4B     		ldr	r3, .L172+24
 2328 06fa 0022     		movs	r2, #0
 2329 06fc 1A70     		strb	r2, [r3]
 2330              	.L99:
1036:main.c        ****         }
1037:main.c        ****         
1038:main.c        ****         #if 0
1039:main.c        ****             
1040:main.c        ****             
1041:main.c        ****         main_counter++;
1042:main.c        ****         if (main_counter >= 11)
1043:main.c        ****         {
1044:main.c        ****                /*  
1045:main.c        ****             testpin3_Write(1);
1046:main.c        ****             I2Cbuff1[0] = 1<<6;
1047:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1048:main.c        ****         OLEDwriteInt(bar[1], 5, 0,FirstLine);
1049:main.c        **** 
1050:main.c        ****         //CyDelay(1);
1051:main.c        ****         
1052:main.c        ****         OLEDwriteInt(octave, 1, 0,SecondLine);
1053:main.c        **** 
1054:main.c        ****         OLED_draw();
1055:main.c        ****                     I2Cbuff1[0] = 1<<0;
1056:main.c        ****     status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1057:main.c        ****         testpin3_Write(0);
1058:main.c        ****             */
1059:main.c        ****             main_counter = 0;
1060:main.c        ****         }
1061:main.c        ****         #endif
1062:main.c        ****         if ((rxBufferBar[!currentBarBuffer][10] == 254) && (rxBufferBar[!currentBarBuffer][11] == 2
 2331              		.loc 1 1062 0
 2332 06fe 284B     		ldr	r3, .L172+72
 2333 0700 1B78     		ldrb	r3, [r3]
 2334 0702 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 61


 2335 0704 002B     		cmp	r3, #0
 2336 0706 0CBF     		ite	eq
 2337 0708 0123     		moveq	r3, #1
 2338 070a 0023     		movne	r3, #0
 2339 070c DBB2     		uxtb	r3, r3
 2340 070e 1946     		mov	r1, r3
 2341 0710 244A     		ldr	r2, .L172+76
 2342 0712 0B46     		mov	r3, r1
 2343 0714 5B00     		lsls	r3, r3, #1
 2344 0716 0B44     		add	r3, r3, r1
 2345 0718 9B00     		lsls	r3, r3, #2
 2346 071a 1344     		add	r3, r3, r2
 2347 071c 0A33     		adds	r3, r3, #10
 2348 071e 1B78     		ldrb	r3, [r3]
 2349 0720 DBB2     		uxtb	r3, r3
 2350 0722 FE2B     		cmp	r3, #254
 2351 0724 40F07081 		bne	.L100
 2352              		.loc 1 1062 0 is_stmt 0 discriminator 1
 2353 0728 1D4B     		ldr	r3, .L172+72
 2354 072a 1B78     		ldrb	r3, [r3]
 2355 072c DBB2     		uxtb	r3, r3
 2356 072e 002B     		cmp	r3, #0
 2357 0730 0CBF     		ite	eq
 2358 0732 0123     		moveq	r3, #1
 2359 0734 0023     		movne	r3, #0
 2360 0736 DBB2     		uxtb	r3, r3
 2361 0738 1946     		mov	r1, r3
 2362 073a 1A4A     		ldr	r2, .L172+76
 2363 073c 0B46     		mov	r3, r1
 2364 073e 5B00     		lsls	r3, r3, #1
 2365 0740 0B44     		add	r3, r3, r1
 2366 0742 9B00     		lsls	r3, r3, #2
 2367 0744 1344     		add	r3, r3, r2
 2368 0746 0B33     		adds	r3, r3, #11
 2369 0748 1B78     		ldrb	r3, [r3]
 2370 074a DBB2     		uxtb	r3, r3
 2371 074c FD2B     		cmp	r3, #253
 2372 074e 40F05B81 		bne	.L100
 2373              	.LBB12:
1063:main.c        ****         {
1064:main.c        ****             for (int i = 0; i < 4; i++)
 2374              		.loc 1 1064 0 is_stmt 1
 2375 0752 0023     		movs	r3, #0
 2376 0754 3B65     		str	r3, [r7, #80]
 2377 0756 53E1     		b	.L101
 2378              	.L173:
 2379              		.align	2
 2380              	.L172:
 2381 0758 00000000 		.word	OLEDcount
 2382 075c 00040000 		.word	.LC0
 2383 0760 00000000 		.word	encoderNum
 2384 0764 00000000 		.word	encoderVal
 2385 0768 04040000 		.word	.LC1
 2386 076c 00000000 		.word	patchNum
 2387 0770 00000000 		.word	main_counter
 2388 0774 00000000 		.word	angle
 2389 0778 00000000 		.word	pedals_low
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 62


 2390 077c 00000000 		.word	pedalRatios
 2391 0780 00000000 		.word	processed_pedals
 2392 0784 01088039 		.word	964691969
 2393 0788 00000000 		.word	pedals_float
 2394 078c 00000000 		.word	prev_processed_pedals
 2395 0790 00000000 		.word	volumePedal
 2396 0794 C5F1803F 		.word	1065415109
 2397 0798 00000000 		.word	processed_volumePedal
 2398 079c 00000000 		.word	prev_processed_volumePedal
 2399 07a0 00000000 		.word	currentBarBuffer
 2400 07a4 00000000 		.word	rxBufferBar
 2401              	.L113:
1065:main.c        ****             {
1066:main.c        ****                 bar[i] = ((rxBufferBar[!currentBarBuffer][i*2] << 8) + rxBufferBar[!currentBarBuffe
 2402              		.loc 1 1066 0
 2403 07a8 AB4B     		ldr	r3, .L174
 2404 07aa 1B78     		ldrb	r3, [r3]
 2405 07ac DBB2     		uxtb	r3, r3
 2406 07ae 002B     		cmp	r3, #0
 2407 07b0 0CBF     		ite	eq
 2408 07b2 0123     		moveq	r3, #1
 2409 07b4 0023     		movne	r3, #0
 2410 07b6 DBB2     		uxtb	r3, r3
 2411 07b8 1846     		mov	r0, r3
 2412 07ba 3B6D     		ldr	r3, [r7, #80]
 2413 07bc 5A00     		lsls	r2, r3, #1
 2414 07be A749     		ldr	r1, .L174+4
 2415 07c0 0346     		mov	r3, r0
 2416 07c2 5B00     		lsls	r3, r3, #1
 2417 07c4 0344     		add	r3, r3, r0
 2418 07c6 9B00     		lsls	r3, r3, #2
 2419 07c8 0B44     		add	r3, r3, r1
 2420 07ca 1344     		add	r3, r3, r2
 2421 07cc 1B78     		ldrb	r3, [r3]
 2422 07ce DBB2     		uxtb	r3, r3
 2423 07d0 9BB2     		uxth	r3, r3
 2424 07d2 1B02     		lsls	r3, r3, #8
 2425 07d4 9AB2     		uxth	r2, r3
 2426 07d6 A04B     		ldr	r3, .L174
 2427 07d8 1B78     		ldrb	r3, [r3]
 2428 07da DBB2     		uxtb	r3, r3
 2429 07dc 002B     		cmp	r3, #0
 2430 07de 0CBF     		ite	eq
 2431 07e0 0123     		moveq	r3, #1
 2432 07e2 0023     		movne	r3, #0
 2433 07e4 DBB2     		uxtb	r3, r3
 2434 07e6 1C46     		mov	r4, r3
 2435 07e8 3B6D     		ldr	r3, [r7, #80]
 2436 07ea 5B00     		lsls	r3, r3, #1
 2437 07ec 591C     		adds	r1, r3, #1
 2438 07ee 9B48     		ldr	r0, .L174+4
 2439 07f0 2346     		mov	r3, r4
 2440 07f2 5B00     		lsls	r3, r3, #1
 2441 07f4 2344     		add	r3, r3, r4
 2442 07f6 9B00     		lsls	r3, r3, #2
 2443 07f8 0344     		add	r3, r3, r0
 2444 07fa 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 63


 2445 07fc 1B78     		ldrb	r3, [r3]
 2446 07fe DBB2     		uxtb	r3, r3
 2447 0800 9BB2     		uxth	r3, r3
 2448 0802 1344     		add	r3, r3, r2
 2449 0804 99B2     		uxth	r1, r3
 2450 0806 964A     		ldr	r2, .L174+8
 2451 0808 3B6D     		ldr	r3, [r7, #80]
 2452 080a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1067:main.c        ****     
1068:main.c        ****                 if (bar[i] != prevBar[i])
 2453              		.loc 1 1068 0
 2454 080e 944A     		ldr	r2, .L174+8
 2455 0810 3B6D     		ldr	r3, [r7, #80]
 2456 0812 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2457 0816 9AB2     		uxth	r2, r3
 2458 0818 9249     		ldr	r1, .L174+12
 2459 081a 3B6D     		ldr	r3, [r7, #80]
 2460 081c 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2461 0820 9BB2     		uxth	r3, r3
 2462 0822 9A42     		cmp	r2, r3
 2463 0824 00F0E080 		beq	.L102
1069:main.c        ****                 {
1070:main.c        ****     				if ((bar[i] == 65535) || (bar[i] > fretMeasurements[0][i]))
 2464              		.loc 1 1070 0
 2465 0828 8D4A     		ldr	r2, .L174+8
 2466 082a 3B6D     		ldr	r3, [r7, #80]
 2467 082c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2468 0830 9BB2     		uxth	r3, r3
 2469 0832 4FF6FF72 		movw	r2, #65535
 2470 0836 9342     		cmp	r3, r2
 2471 0838 11D0     		beq	.L103
 2472              		.loc 1 1070 0 is_stmt 0 discriminator 1
 2473 083a 894A     		ldr	r2, .L174+8
 2474 083c 3B6D     		ldr	r3, [r7, #80]
 2475 083e 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2476 0842 9BB2     		uxth	r3, r3
 2477 0844 1846     		mov	r0, r3
 2478 0846 FFF7FEFF 		bl	__aeabi_i2f
 2479 084a 874A     		ldr	r2, .L174+16
 2480 084c 3B6D     		ldr	r3, [r7, #80]
 2481 084e 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2482 0852 1946     		mov	r1, r3
 2483 0854 FFF7FEFF 		bl	__aeabi_fcmpgt
 2484 0858 0346     		mov	r3, r0
 2485 085a 002B     		cmp	r3, #0
 2486 085c 06D0     		beq	.L167
 2487              	.L103:
1071:main.c        ****     				{
1072:main.c        ****     					stringMappedPositions[i] = 1.0f;
 2488              		.loc 1 1072 0 is_stmt 1
 2489 085e 834A     		ldr	r2, .L174+20
 2490 0860 3B6D     		ldr	r3, [r7, #80]
 2491 0862 4FF07E51 		mov	r1, #1065353216
 2492 0866 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2493 086a AEE0     		b	.L106
 2494              	.L167:
1073:main.c        ****     				}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 64


1074:main.c        **** 
1075:main.c        ****     				else if ((bar[i] >= fretMeasurements[1][i]) && (bar[i] <= fretMeasurements[0][i]))
 2495              		.loc 1 1075 0
 2496 086c 7C4A     		ldr	r2, .L174+8
 2497 086e 3B6D     		ldr	r3, [r7, #80]
 2498 0870 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2499 0874 9BB2     		uxth	r3, r3
 2500 0876 1846     		mov	r0, r3
 2501 0878 FFF7FEFF 		bl	__aeabi_i2f
 2502 087c 7A4A     		ldr	r2, .L174+16
 2503 087e 3B6D     		ldr	r3, [r7, #80]
 2504 0880 0433     		adds	r3, r3, #4
 2505 0882 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2506 0886 1946     		mov	r1, r3
 2507 0888 FFF7FEFF 		bl	__aeabi_fcmpge
 2508 088c 0346     		mov	r3, r0
 2509 088e 002B     		cmp	r3, #0
 2510 0890 32D0     		beq	.L107
 2511              		.loc 1 1075 0 is_stmt 0 discriminator 1
 2512 0892 734A     		ldr	r2, .L174+8
 2513 0894 3B6D     		ldr	r3, [r7, #80]
 2514 0896 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2515 089a 9BB2     		uxth	r3, r3
 2516 089c 1846     		mov	r0, r3
 2517 089e FFF7FEFF 		bl	__aeabi_i2f
 2518 08a2 714A     		ldr	r2, .L174+16
 2519 08a4 3B6D     		ldr	r3, [r7, #80]
 2520 08a6 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2521 08aa 1946     		mov	r1, r3
 2522 08ac FFF7FEFF 		bl	__aeabi_fcmple
 2523 08b0 0346     		mov	r3, r0
 2524 08b2 002B     		cmp	r3, #0
 2525 08b4 20D0     		beq	.L107
1076:main.c        ****     				{
1077:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[0][i], fretMeasurements[1][
 2526              		.loc 1 1077 0 is_stmt 1
 2527 08b6 6A4A     		ldr	r2, .L174+8
 2528 08b8 3B6D     		ldr	r3, [r7, #80]
 2529 08ba 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2530 08be 9BB2     		uxth	r3, r3
 2531 08c0 1846     		mov	r0, r3
 2532 08c2 FFF7FEFF 		bl	__aeabi_ui2f
 2533 08c6 0446     		mov	r4, r0
 2534 08c8 674A     		ldr	r2, .L174+16
 2535 08ca 3B6D     		ldr	r3, [r7, #80]
 2536 08cc 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2537 08d0 654A     		ldr	r2, .L174+16
 2538 08d2 3B6D     		ldr	r3, [r7, #80]
 2539 08d4 0433     		adds	r3, r3, #4
 2540 08d6 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 2541 08da 654B     		ldr	r3, .L174+24
 2542 08dc 1868     		ldr	r0, [r3]	@ float
 2543 08de 644B     		ldr	r3, .L174+24
 2544 08e0 5B68     		ldr	r3, [r3, #4]	@ float
 2545 08e2 0093     		str	r3, [sp]	@ float
 2546 08e4 0346     		mov	r3, r0
 2547 08e6 2046     		mov	r0, r4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 65


 2548 08e8 FFF7FEFF 		bl	map
 2549 08ec 0146     		mov	r1, r0
 2550 08ee 5F4A     		ldr	r2, .L174+20
 2551 08f0 3B6D     		ldr	r3, [r7, #80]
 2552 08f2 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2553 08f6 68E0     		b	.L106
 2554              	.L107:
1078:main.c        ****     				}
1079:main.c        **** 
1080:main.c        ****     				else if ((bar[i] >= fretMeasurements[2][i]) && (bar[i] < fretMeasurements[1][i]))
 2555              		.loc 1 1080 0
 2556 08f8 594A     		ldr	r2, .L174+8
 2557 08fa 3B6D     		ldr	r3, [r7, #80]
 2558 08fc 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2559 0900 9BB2     		uxth	r3, r3
 2560 0902 1846     		mov	r0, r3
 2561 0904 FFF7FEFF 		bl	__aeabi_i2f
 2562 0908 574A     		ldr	r2, .L174+16
 2563 090a 3B6D     		ldr	r3, [r7, #80]
 2564 090c 0833     		adds	r3, r3, #8
 2565 090e 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2566 0912 1946     		mov	r1, r3
 2567 0914 FFF7FEFF 		bl	__aeabi_fcmpge
 2568 0918 0346     		mov	r3, r0
 2569 091a 002B     		cmp	r3, #0
 2570 091c 34D0     		beq	.L110
 2571              		.loc 1 1080 0 is_stmt 0 discriminator 1
 2572 091e 504A     		ldr	r2, .L174+8
 2573 0920 3B6D     		ldr	r3, [r7, #80]
 2574 0922 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2575 0926 9BB2     		uxth	r3, r3
 2576 0928 1846     		mov	r0, r3
 2577 092a FFF7FEFF 		bl	__aeabi_i2f
 2578 092e 4E4A     		ldr	r2, .L174+16
 2579 0930 3B6D     		ldr	r3, [r7, #80]
 2580 0932 0433     		adds	r3, r3, #4
 2581 0934 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2582 0938 1946     		mov	r1, r3
 2583 093a FFF7FEFF 		bl	__aeabi_fcmplt
 2584 093e 0346     		mov	r3, r0
 2585 0940 002B     		cmp	r3, #0
 2586 0942 21D0     		beq	.L110
1081:main.c        ****     				{
1082:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[1][i], fretMeasurements[2][
 2587              		.loc 1 1082 0 is_stmt 1
 2588 0944 464A     		ldr	r2, .L174+8
 2589 0946 3B6D     		ldr	r3, [r7, #80]
 2590 0948 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2591 094c 9BB2     		uxth	r3, r3
 2592 094e 1846     		mov	r0, r3
 2593 0950 FFF7FEFF 		bl	__aeabi_ui2f
 2594 0954 0446     		mov	r4, r0
 2595 0956 444A     		ldr	r2, .L174+16
 2596 0958 3B6D     		ldr	r3, [r7, #80]
 2597 095a 0433     		adds	r3, r3, #4
 2598 095c 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2599 0960 414A     		ldr	r2, .L174+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 66


 2600 0962 3B6D     		ldr	r3, [r7, #80]
 2601 0964 0833     		adds	r3, r3, #8
 2602 0966 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 2603 096a 414B     		ldr	r3, .L174+24
 2604 096c 5868     		ldr	r0, [r3, #4]	@ float
 2605 096e 404B     		ldr	r3, .L174+24
 2606 0970 9B68     		ldr	r3, [r3, #8]	@ float
 2607 0972 0093     		str	r3, [sp]	@ float
 2608 0974 0346     		mov	r3, r0
 2609 0976 2046     		mov	r0, r4
 2610 0978 FFF7FEFF 		bl	map
 2611 097c 0146     		mov	r1, r0
 2612 097e 3B4A     		ldr	r2, .L174+20
 2613 0980 3B6D     		ldr	r3, [r7, #80]
 2614 0982 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2615 0986 20E0     		b	.L106
 2616              	.L110:
1083:main.c        ****     				}
1084:main.c        **** 
1085:main.c        ****     				else
1086:main.c        ****     				{
1087:main.c        ****     					stringMappedPositions[i] = map((float)bar[i], fretMeasurements[2][i], fretMeasurements[3][
 2617              		.loc 1 1087 0
 2618 0988 354A     		ldr	r2, .L174+8
 2619 098a 3B6D     		ldr	r3, [r7, #80]
 2620 098c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2621 0990 9BB2     		uxth	r3, r3
 2622 0992 1846     		mov	r0, r3
 2623 0994 FFF7FEFF 		bl	__aeabi_ui2f
 2624 0998 0446     		mov	r4, r0
 2625 099a 334A     		ldr	r2, .L174+16
 2626 099c 3B6D     		ldr	r3, [r7, #80]
 2627 099e 0833     		adds	r3, r3, #8
 2628 09a0 52F82310 		ldr	r1, [r2, r3, lsl #2]	@ float
 2629 09a4 304A     		ldr	r2, .L174+16
 2630 09a6 3B6D     		ldr	r3, [r7, #80]
 2631 09a8 0C33     		adds	r3, r3, #12
 2632 09aa 52F82320 		ldr	r2, [r2, r3, lsl #2]	@ float
 2633 09ae 304B     		ldr	r3, .L174+24
 2634 09b0 9868     		ldr	r0, [r3, #8]	@ float
 2635 09b2 2F4B     		ldr	r3, .L174+24
 2636 09b4 DB68     		ldr	r3, [r3, #12]	@ float
 2637 09b6 0093     		str	r3, [sp]	@ float
 2638 09b8 0346     		mov	r3, r0
 2639 09ba 2046     		mov	r0, r4
 2640 09bc FFF7FEFF 		bl	map
 2641 09c0 0146     		mov	r1, r0
 2642 09c2 2A4A     		ldr	r2, .L174+20
 2643 09c4 3B6D     		ldr	r3, [r7, #80]
 2644 09c6 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2645              	.L106:
1088:main.c        ****     				}
1089:main.c        **** 
1090:main.c        ****                     invStringMappedPositions[i] = 1.0f / stringMappedPositions[i];
 2646              		.loc 1 1090 0
 2647 09ca 284A     		ldr	r2, .L174+20
 2648 09cc 3B6D     		ldr	r3, [r7, #80]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 67


 2649 09ce 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 2650 09d2 1946     		mov	r1, r3
 2651 09d4 4FF07E50 		mov	r0, #1065353216
 2652 09d8 FFF7FEFF 		bl	__aeabi_fdiv
 2653 09dc 0346     		mov	r3, r0
 2654 09de 1946     		mov	r1, r3
 2655 09e0 244A     		ldr	r2, .L174+28
 2656 09e2 3B6D     		ldr	r3, [r7, #80]
 2657 09e4 42F82310 		str	r1, [r2, r3, lsl #2]	@ float
 2658              	.L102:
1091:main.c        ****                 }
1092:main.c        ****                 prevBar[i] = bar[i];
 2659              		.loc 1 1092 0 discriminator 2
 2660 09e8 1D4A     		ldr	r2, .L174+8
 2661 09ea 3B6D     		ldr	r3, [r7, #80]
 2662 09ec 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2663 09f0 99B2     		uxth	r1, r3
 2664 09f2 1C4A     		ldr	r2, .L174+12
 2665 09f4 3B6D     		ldr	r3, [r7, #80]
 2666 09f6 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1064:main.c        ****             {
 2667              		.loc 1 1064 0 discriminator 2
 2668 09fa 3B6D     		ldr	r3, [r7, #80]
 2669 09fc 0133     		adds	r3, r3, #1
 2670 09fe 3B65     		str	r3, [r7, #80]
 2671              	.L101:
1064:main.c        ****             {
 2672              		.loc 1 1064 0 is_stmt 0 discriminator 1
 2673 0a00 3B6D     		ldr	r3, [r7, #80]
 2674 0a02 032B     		cmp	r3, #3
 2675 0a04 7FF7D0AE 		ble	.L113
 2676              	.L100:
 2677              	.LBE12:
1093:main.c        ****             }
1094:main.c        ****         }
1095:main.c        ****         if ((rxBufferPluck[!currentPluckBuffer][0] == 254) && (rxBufferPluck[!currentPluckBuffer][2
 2678              		.loc 1 1095 0 is_stmt 1
 2679 0a08 1B4B     		ldr	r3, .L174+32
 2680 0a0a 1B78     		ldrb	r3, [r3]
 2681 0a0c DBB2     		uxtb	r3, r3
 2682 0a0e 002B     		cmp	r3, #0
 2683 0a10 0CBF     		ite	eq
 2684 0a12 0123     		moveq	r3, #1
 2685 0a14 0023     		movne	r3, #0
 2686 0a16 DBB2     		uxtb	r3, r3
 2687 0a18 1946     		mov	r1, r3
 2688 0a1a 184A     		ldr	r2, .L174+36
 2689 0a1c 1A23     		movs	r3, #26
 2690 0a1e 03FB01F3 		mul	r3, r3, r1
 2691 0a22 1344     		add	r3, r3, r2
 2692 0a24 1B78     		ldrb	r3, [r3]
 2693 0a26 DBB2     		uxtb	r3, r3
 2694 0a28 FE2B     		cmp	r3, #254
 2695 0a2a 79D1     		bne	.L114
 2696              		.loc 1 1095 0 is_stmt 0 discriminator 1
 2697 0a2c 124B     		ldr	r3, .L174+32
 2698 0a2e 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 68


 2699 0a30 DBB2     		uxtb	r3, r3
 2700 0a32 002B     		cmp	r3, #0
 2701 0a34 0CBF     		ite	eq
 2702 0a36 0123     		moveq	r3, #1
 2703 0a38 0023     		movne	r3, #0
 2704 0a3a DBB2     		uxtb	r3, r3
 2705 0a3c 1946     		mov	r1, r3
 2706 0a3e 0F4A     		ldr	r2, .L174+36
 2707 0a40 1A23     		movs	r3, #26
 2708 0a42 03FB01F3 		mul	r3, r3, r1
 2709 0a46 1344     		add	r3, r3, r2
 2710 0a48 1933     		adds	r3, r3, #25
 2711 0a4a 1B78     		ldrb	r3, [r3]
 2712 0a4c DBB2     		uxtb	r3, r3
 2713 0a4e FD2B     		cmp	r3, #253
 2714 0a50 66D1     		bne	.L114
 2715              	.LBB13:
1096:main.c        ****         {
1097:main.c        ****             for (int i = 0 ; i < 12; i++)
 2716              		.loc 1 1097 0 is_stmt 1
 2717 0a52 0023     		movs	r3, #0
 2718 0a54 FB64     		str	r3, [r7, #76]
 2719 0a56 60E0     		b	.L115
 2720              	.L175:
 2721              		.align	2
 2722              	.L174:
 2723 0a58 00000000 		.word	currentBarBuffer
 2724 0a5c 00000000 		.word	rxBufferBar
 2725 0a60 00000000 		.word	bar
 2726 0a64 00000000 		.word	prevBar
 2727 0a68 00000000 		.word	fretMeasurements
 2728 0a6c 00000000 		.word	stringMappedPositions
 2729 0a70 00000000 		.word	fretScaling
 2730 0a74 00000000 		.word	invStringMappedPositions
 2731 0a78 00000000 		.word	currentPluckBuffer
 2732 0a7c 00000000 		.word	rxBufferPluck
 2733              	.L117:
1098:main.c        ****             {
1099:main.c        ****                 strings[i] = ((rxBufferPluck[!currentPluckBuffer][(i*2)+1] << 7) + rxBufferPluck[!c
 2734              		.loc 1 1099 0
 2735 0a80 B24B     		ldr	r3, .L176
 2736 0a82 1B78     		ldrb	r3, [r3]
 2737 0a84 DBB2     		uxtb	r3, r3
 2738 0a86 002B     		cmp	r3, #0
 2739 0a88 0CBF     		ite	eq
 2740 0a8a 0123     		moveq	r3, #1
 2741 0a8c 0023     		movne	r3, #0
 2742 0a8e DBB2     		uxtb	r3, r3
 2743 0a90 1846     		mov	r0, r3
 2744 0a92 FB6C     		ldr	r3, [r7, #76]
 2745 0a94 5B00     		lsls	r3, r3, #1
 2746 0a96 0133     		adds	r3, r3, #1
 2747 0a98 AD49     		ldr	r1, .L176+4
 2748 0a9a 1A22     		movs	r2, #26
 2749 0a9c 02FB00F2 		mul	r2, r2, r0
 2750 0aa0 0A44     		add	r2, r2, r1
 2751 0aa2 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 69


 2752 0aa4 1B78     		ldrb	r3, [r3]
 2753 0aa6 DBB2     		uxtb	r3, r3
 2754 0aa8 9BB2     		uxth	r3, r3
 2755 0aaa DB01     		lsls	r3, r3, #7
 2756 0aac 9AB2     		uxth	r2, r3
 2757 0aae A74B     		ldr	r3, .L176
 2758 0ab0 1B78     		ldrb	r3, [r3]
 2759 0ab2 DBB2     		uxtb	r3, r3
 2760 0ab4 002B     		cmp	r3, #0
 2761 0ab6 0CBF     		ite	eq
 2762 0ab8 0123     		moveq	r3, #1
 2763 0aba 0023     		movne	r3, #0
 2764 0abc DBB2     		uxtb	r3, r3
 2765 0abe 1C46     		mov	r4, r3
 2766 0ac0 FB6C     		ldr	r3, [r7, #76]
 2767 0ac2 0133     		adds	r3, r3, #1
 2768 0ac4 5B00     		lsls	r3, r3, #1
 2769 0ac6 A248     		ldr	r0, .L176+4
 2770 0ac8 1A21     		movs	r1, #26
 2771 0aca 01FB04F1 		mul	r1, r1, r4
 2772 0ace 0144     		add	r1, r1, r0
 2773 0ad0 0B44     		add	r3, r3, r1
 2774 0ad2 1B78     		ldrb	r3, [r3]
 2775 0ad4 DBB2     		uxtb	r3, r3
 2776 0ad6 9BB2     		uxth	r3, r3
 2777 0ad8 1344     		add	r3, r3, r2
 2778 0ada 99B2     		uxth	r1, r3
 2779 0adc 9D4A     		ldr	r2, .L176+8
 2780 0ade FB6C     		ldr	r3, [r7, #76]
 2781 0ae0 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1100:main.c        ****                 if (strings[i] != prevStrings[i])
 2782              		.loc 1 1100 0
 2783 0ae4 9B4A     		ldr	r2, .L176+8
 2784 0ae6 FB6C     		ldr	r3, [r7, #76]
 2785 0ae8 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2786 0aec 9AB2     		uxth	r2, r3
 2787 0aee 9A49     		ldr	r1, .L176+12
 2788 0af0 FB6C     		ldr	r3, [r7, #76]
 2789 0af2 31F81330 		ldrh	r3, [r1, r3, lsl #1]	@ movhi
 2790 0af6 9BB2     		uxth	r3, r3
 2791 0af8 9A42     		cmp	r2, r3
 2792 0afa 02D0     		beq	.L116
1101:main.c        ****                 {
1102:main.c        ****                     noteEvent(i);
 2793              		.loc 1 1102 0
 2794 0afc F86C     		ldr	r0, [r7, #76]
 2795 0afe FFF7FEFF 		bl	noteEvent
 2796              	.L116:
1103:main.c        ****                 }
1104:main.c        ****                 
1105:main.c        ****                 prevStrings[i] = strings[i];
 2797              		.loc 1 1105 0 discriminator 2
 2798 0b02 944A     		ldr	r2, .L176+8
 2799 0b04 FB6C     		ldr	r3, [r7, #76]
 2800 0b06 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 2801 0b0a 99B2     		uxth	r1, r3
 2802 0b0c 924A     		ldr	r2, .L176+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 70


 2803 0b0e FB6C     		ldr	r3, [r7, #76]
 2804 0b10 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1097:main.c        ****             {
 2805              		.loc 1 1097 0 discriminator 2
 2806 0b14 FB6C     		ldr	r3, [r7, #76]
 2807 0b16 0133     		adds	r3, r3, #1
 2808 0b18 FB64     		str	r3, [r7, #76]
 2809              	.L115:
1097:main.c        ****             {
 2810              		.loc 1 1097 0 is_stmt 0 discriminator 1
 2811 0b1a FB6C     		ldr	r3, [r7, #76]
 2812 0b1c 0B2B     		cmp	r3, #11
 2813 0b1e AFDD     		ble	.L117
 2814              	.L114:
 2815              	.LBE13:
1106:main.c        ****             }
1107:main.c        ****         }
1108:main.c        **** 
1109:main.c        **** 
1110:main.c        ****         
1111:main.c        ****         
1112:main.c        ****         if (!oct1_Read())
 2816              		.loc 1 1112 0 is_stmt 1
 2817 0b20 FFF7FEFF 		bl	oct1_Read
 2818 0b24 0346     		mov	r3, r0
 2819 0b26 002B     		cmp	r3, #0
 2820 0b28 0FD1     		bne	.L118
1113:main.c        ****         {
1114:main.c        ****             octave = 0;
 2821              		.loc 1 1114 0
 2822 0b2a 8C4B     		ldr	r3, .L176+16
 2823 0b2c 0022     		movs	r2, #0
 2824 0b2e 1A60     		str	r2, [r3]
1115:main.c        ****             LED_amber1_Write(1);
 2825              		.loc 1 1115 0
 2826 0b30 0120     		movs	r0, #1
 2827 0b32 FFF7FEFF 		bl	LED_amber1_Write
1116:main.c        ****             LED_amber2_Write(0);
 2828              		.loc 1 1116 0
 2829 0b36 0020     		movs	r0, #0
 2830 0b38 FFF7FEFF 		bl	LED_amber2_Write
1117:main.c        ****             LED_amber3_Write(0);
 2831              		.loc 1 1117 0
 2832 0b3c 0020     		movs	r0, #0
 2833 0b3e FFF7FEFF 		bl	LED_amber3_Write
1118:main.c        ****             LED_amber4_Write(0);
 2834              		.loc 1 1118 0
 2835 0b42 0020     		movs	r0, #0
 2836 0b44 FFF7FEFF 		bl	LED_amber4_Write
 2837 0b48 3DE0     		b	.L119
 2838              	.L118:
1119:main.c        ****         }
1120:main.c        ****         else if (!oct2_Read())
 2839              		.loc 1 1120 0
 2840 0b4a FFF7FEFF 		bl	oct2_Read
 2841 0b4e 0346     		mov	r3, r0
 2842 0b50 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 71


 2843 0b52 0FD1     		bne	.L120
1121:main.c        ****         {
1122:main.c        ****             octave = 1;
 2844              		.loc 1 1122 0
 2845 0b54 814B     		ldr	r3, .L176+16
 2846 0b56 0122     		movs	r2, #1
 2847 0b58 1A60     		str	r2, [r3]
1123:main.c        ****             LED_amber1_Write(0);
 2848              		.loc 1 1123 0
 2849 0b5a 0020     		movs	r0, #0
 2850 0b5c FFF7FEFF 		bl	LED_amber1_Write
1124:main.c        ****             LED_amber2_Write(1);
 2851              		.loc 1 1124 0
 2852 0b60 0120     		movs	r0, #1
 2853 0b62 FFF7FEFF 		bl	LED_amber2_Write
1125:main.c        ****             LED_amber3_Write(0);
 2854              		.loc 1 1125 0
 2855 0b66 0020     		movs	r0, #0
 2856 0b68 FFF7FEFF 		bl	LED_amber3_Write
1126:main.c        ****             LED_amber4_Write(0);
 2857              		.loc 1 1126 0
 2858 0b6c 0020     		movs	r0, #0
 2859 0b6e FFF7FEFF 		bl	LED_amber4_Write
 2860 0b72 28E0     		b	.L119
 2861              	.L120:
1127:main.c        ****         }
1128:main.c        ****         else if (!oct3_Read())
 2862              		.loc 1 1128 0
 2863 0b74 FFF7FEFF 		bl	oct3_Read
 2864 0b78 0346     		mov	r3, r0
 2865 0b7a 002B     		cmp	r3, #0
 2866 0b7c 0FD1     		bne	.L121
1129:main.c        ****         {
1130:main.c        ****             octave = 2;
 2867              		.loc 1 1130 0
 2868 0b7e 774B     		ldr	r3, .L176+16
 2869 0b80 0222     		movs	r2, #2
 2870 0b82 1A60     		str	r2, [r3]
1131:main.c        ****             LED_amber1_Write(0);
 2871              		.loc 1 1131 0
 2872 0b84 0020     		movs	r0, #0
 2873 0b86 FFF7FEFF 		bl	LED_amber1_Write
1132:main.c        ****             LED_amber2_Write(0);
 2874              		.loc 1 1132 0
 2875 0b8a 0020     		movs	r0, #0
 2876 0b8c FFF7FEFF 		bl	LED_amber2_Write
1133:main.c        ****             LED_amber3_Write(1);
 2877              		.loc 1 1133 0
 2878 0b90 0120     		movs	r0, #1
 2879 0b92 FFF7FEFF 		bl	LED_amber3_Write
1134:main.c        ****             LED_amber4_Write(0);            
 2880              		.loc 1 1134 0
 2881 0b96 0020     		movs	r0, #0
 2882 0b98 FFF7FEFF 		bl	LED_amber4_Write
 2883 0b9c 13E0     		b	.L119
 2884              	.L121:
1135:main.c        ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 72


1136:main.c        ****         else if (!oct4_Read())
 2885              		.loc 1 1136 0
 2886 0b9e FFF7FEFF 		bl	oct4_Read
 2887 0ba2 0346     		mov	r3, r0
 2888 0ba4 002B     		cmp	r3, #0
 2889 0ba6 0ED1     		bne	.L119
1137:main.c        ****         {
1138:main.c        ****             octave = 3;
 2890              		.loc 1 1138 0
 2891 0ba8 6C4B     		ldr	r3, .L176+16
 2892 0baa 0322     		movs	r2, #3
 2893 0bac 1A60     		str	r2, [r3]
1139:main.c        ****             LED_amber1_Write(0);
 2894              		.loc 1 1139 0
 2895 0bae 0020     		movs	r0, #0
 2896 0bb0 FFF7FEFF 		bl	LED_amber1_Write
1140:main.c        ****             LED_amber2_Write(0);
 2897              		.loc 1 1140 0
 2898 0bb4 0020     		movs	r0, #0
 2899 0bb6 FFF7FEFF 		bl	LED_amber2_Write
1141:main.c        ****             LED_amber3_Write(0);
 2900              		.loc 1 1141 0
 2901 0bba 0020     		movs	r0, #0
 2902 0bbc FFF7FEFF 		bl	LED_amber3_Write
1142:main.c        ****             LED_amber4_Write(1);
 2903              		.loc 1 1142 0
 2904 0bc0 0120     		movs	r0, #1
 2905 0bc2 FFF7FEFF 		bl	LED_amber4_Write
 2906              	.L119:
1143:main.c        ****         }
1144:main.c        ****         
1145:main.c        ****         if (!neck1_button_Read())
 2907              		.loc 1 1145 0
 2908 0bc6 FFF7FEFF 		bl	neck1_button_Read
 2909 0bca 0346     		mov	r3, r0
 2910 0bcc 002B     		cmp	r3, #0
 2911 0bce 0BD1     		bne	.L122
1146:main.c        ****         {
1147:main.c        ****             neck = 0;
 2912              		.loc 1 1147 0
 2913 0bd0 634B     		ldr	r3, .L176+20
 2914 0bd2 0022     		movs	r2, #0
 2915 0bd4 1A70     		strb	r2, [r3]
1148:main.c        ****             currentNeck = 0;
 2916              		.loc 1 1148 0
 2917 0bd6 634B     		ldr	r3, .L176+24
 2918 0bd8 0022     		movs	r2, #0
 2919 0bda 1A60     		str	r2, [r3]
1149:main.c        ****             LED_red1_Write(0);
 2920              		.loc 1 1149 0
 2921 0bdc 0020     		movs	r0, #0
 2922 0bde FFF7FEFF 		bl	LED_red1_Write
1150:main.c        ****             LED_green2_Write(1);
 2923              		.loc 1 1150 0
 2924 0be2 0120     		movs	r0, #1
 2925 0be4 FFF7FEFF 		bl	LED_green2_Write
 2926              	.L122:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 73


1151:main.c        ****         }
1152:main.c        ****         if (!neck2_button_Read())
 2927              		.loc 1 1152 0
 2928 0be8 FFF7FEFF 		bl	neck2_button_Read
 2929 0bec 0346     		mov	r3, r0
 2930 0bee 002B     		cmp	r3, #0
 2931 0bf0 0BD1     		bne	.L123
1153:main.c        ****         {
1154:main.c        ****             neck = 1;
 2932              		.loc 1 1154 0
 2933 0bf2 5B4B     		ldr	r3, .L176+20
 2934 0bf4 0122     		movs	r2, #1
 2935 0bf6 1A70     		strb	r2, [r3]
1155:main.c        ****             currentNeck = 1;
 2936              		.loc 1 1155 0
 2937 0bf8 5A4B     		ldr	r3, .L176+24
 2938 0bfa 0122     		movs	r2, #1
 2939 0bfc 1A60     		str	r2, [r3]
1156:main.c        ****             LED_red1_Write(1);
 2940              		.loc 1 1156 0
 2941 0bfe 0120     		movs	r0, #1
 2942 0c00 FFF7FEFF 		bl	LED_red1_Write
1157:main.c        ****             LED_green2_Write(0);
 2943              		.loc 1 1157 0
 2944 0c04 0020     		movs	r0, #0
 2945 0c06 FFF7FEFF 		bl	LED_green2_Write
 2946              	.L123:
1158:main.c        ****         }
1159:main.c        ****         
1160:main.c        ****         if ((!enter_button_Read()) && (enterUp))
 2947              		.loc 1 1160 0
 2948 0c0a FFF7FEFF 		bl	enter_button_Read
 2949 0c0e 0346     		mov	r3, r0
 2950 0c10 002B     		cmp	r3, #0
 2951 0c12 16D1     		bne	.L124
 2952              		.loc 1 1160 0 is_stmt 0 discriminator 1
 2953 0c14 544B     		ldr	r3, .L176+28
 2954 0c16 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2955 0c18 002B     		cmp	r3, #0
 2956 0c1a 12D0     		beq	.L124
1161:main.c        ****         {
1162:main.c        ****             dualSlider = !dualSlider;
 2957              		.loc 1 1162 0 is_stmt 1
 2958 0c1c 534B     		ldr	r3, .L176+32
 2959 0c1e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2960 0c20 002B     		cmp	r3, #0
 2961 0c22 0CBF     		ite	eq
 2962 0c24 0123     		moveq	r3, #1
 2963 0c26 0023     		movne	r3, #0
 2964 0c28 DBB2     		uxtb	r3, r3
 2965 0c2a 1A46     		mov	r2, r3
 2966 0c2c 4F4B     		ldr	r3, .L176+32
 2967 0c2e 1A70     		strb	r2, [r3]
1163:main.c        ****             LED_green1_Write(dualSlider);
 2968              		.loc 1 1163 0
 2969 0c30 4E4B     		ldr	r3, .L176+32
 2970 0c32 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 74


 2971 0c34 1846     		mov	r0, r3
 2972 0c36 FFF7FEFF 		bl	LED_green1_Write
1164:main.c        ****             enterUp = 0;
 2973              		.loc 1 1164 0
 2974 0c3a 4B4B     		ldr	r3, .L176+28
 2975 0c3c 0022     		movs	r2, #0
 2976 0c3e 1A70     		strb	r2, [r3]
 2977 0c40 07E0     		b	.L125
 2978              	.L124:
1165:main.c        ****         }
1166:main.c        ****         else if (enter_button_Read())
 2979              		.loc 1 1166 0
 2980 0c42 FFF7FEFF 		bl	enter_button_Read
 2981 0c46 0346     		mov	r3, r0
 2982 0c48 002B     		cmp	r3, #0
 2983 0c4a 02D0     		beq	.L125
1167:main.c        ****         {
1168:main.c        ****             enterUp = 1;
 2984              		.loc 1 1168 0
 2985 0c4c 464B     		ldr	r3, .L176+28
 2986 0c4e 0122     		movs	r2, #1
 2987 0c50 1A70     		strb	r2, [r3]
 2988              	.L125:
1169:main.c        ****         }
1170:main.c        ****         
1171:main.c        ****         
1172:main.c        ****         
1173:main.c        ****         if ((!button1_Read()) && (button1Up))
 2989              		.loc 1 1173 0
 2990 0c52 FFF7FEFF 		bl	button1_Read
 2991 0c56 0346     		mov	r3, r0
 2992 0c58 002B     		cmp	r3, #0
 2993 0c5a 12D1     		bne	.L126
 2994              		.loc 1 1173 0 is_stmt 0 discriminator 1
 2995 0c5c 444B     		ldr	r3, .L176+36
 2996 0c5e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 2997 0c60 002B     		cmp	r3, #0
 2998 0c62 0ED0     		beq	.L126
1174:main.c        ****         {
1175:main.c        ****             encoderNum -= 1;
 2999              		.loc 1 1175 0 is_stmt 1
 3000 0c64 434B     		ldr	r3, .L176+40
 3001 0c66 1B68     		ldr	r3, [r3]
 3002 0c68 013B     		subs	r3, r3, #1
 3003 0c6a 424A     		ldr	r2, .L176+40
 3004 0c6c 1360     		str	r3, [r2]
1176:main.c        ****             encoderNum &= 15;
 3005              		.loc 1 1176 0
 3006 0c6e 414B     		ldr	r3, .L176+40
 3007 0c70 1B68     		ldr	r3, [r3]
 3008 0c72 03F00F03 		and	r3, r3, #15
 3009 0c76 3F4A     		ldr	r2, .L176+40
 3010 0c78 1360     		str	r3, [r2]
1177:main.c        ****             button1Up = 0;
 3011              		.loc 1 1177 0
 3012 0c7a 3D4B     		ldr	r3, .L176+36
 3013 0c7c 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 75


 3014 0c7e 1A70     		strb	r2, [r3]
 3015 0c80 07E0     		b	.L127
 3016              	.L126:
1178:main.c        ****         }
1179:main.c        ****         else if (button1_Read())
 3017              		.loc 1 1179 0
 3018 0c82 FFF7FEFF 		bl	button1_Read
 3019 0c86 0346     		mov	r3, r0
 3020 0c88 002B     		cmp	r3, #0
 3021 0c8a 02D0     		beq	.L127
1180:main.c        ****         {
1181:main.c        ****             button1Up = 1;
 3022              		.loc 1 1181 0
 3023 0c8c 384B     		ldr	r3, .L176+36
 3024 0c8e 0122     		movs	r2, #1
 3025 0c90 1A70     		strb	r2, [r3]
 3026              	.L127:
1182:main.c        ****         }
1183:main.c        ****         
1184:main.c        ****         if ((!button2_Read()) && (button2Up))
 3027              		.loc 1 1184 0
 3028 0c92 FFF7FEFF 		bl	button2_Read
 3029 0c96 0346     		mov	r3, r0
 3030 0c98 002B     		cmp	r3, #0
 3031 0c9a 12D1     		bne	.L128
 3032              		.loc 1 1184 0 is_stmt 0 discriminator 1
 3033 0c9c 364B     		ldr	r3, .L176+44
 3034 0c9e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3035 0ca0 002B     		cmp	r3, #0
 3036 0ca2 0ED0     		beq	.L128
1185:main.c        ****         {
1186:main.c        ****             encoderNum += 1;
 3037              		.loc 1 1186 0 is_stmt 1
 3038 0ca4 334B     		ldr	r3, .L176+40
 3039 0ca6 1B68     		ldr	r3, [r3]
 3040 0ca8 0133     		adds	r3, r3, #1
 3041 0caa 324A     		ldr	r2, .L176+40
 3042 0cac 1360     		str	r3, [r2]
1187:main.c        ****             encoderNum &= 15;
 3043              		.loc 1 1187 0
 3044 0cae 314B     		ldr	r3, .L176+40
 3045 0cb0 1B68     		ldr	r3, [r3]
 3046 0cb2 03F00F03 		and	r3, r3, #15
 3047 0cb6 2F4A     		ldr	r2, .L176+40
 3048 0cb8 1360     		str	r3, [r2]
1188:main.c        ****             button2Up = 0;
 3049              		.loc 1 1188 0
 3050 0cba 2F4B     		ldr	r3, .L176+44
 3051 0cbc 0022     		movs	r2, #0
 3052 0cbe 1A70     		strb	r2, [r3]
 3053 0cc0 07E0     		b	.L129
 3054              	.L128:
1189:main.c        ****         }
1190:main.c        ****         else if (button2_Read())
 3055              		.loc 1 1190 0
 3056 0cc2 FFF7FEFF 		bl	button2_Read
 3057 0cc6 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 76


 3058 0cc8 002B     		cmp	r3, #0
 3059 0cca 02D0     		beq	.L129
1191:main.c        ****         {
1192:main.c        ****             button2Up = 1;
 3060              		.loc 1 1192 0
 3061 0ccc 2A4B     		ldr	r3, .L176+44
 3062 0cce 0122     		movs	r2, #1
 3063 0cd0 1A70     		strb	r2, [r3]
 3064              	.L129:
1193:main.c        ****         }
1194:main.c        ****         
1195:main.c        ****         if ((!button3_Read()) && (button3Up))
 3065              		.loc 1 1195 0
 3066 0cd2 FFF7FEFF 		bl	button3_Read
 3067 0cd6 0346     		mov	r3, r0
 3068 0cd8 002B     		cmp	r3, #0
 3069 0cda 14D1     		bne	.L130
 3070              		.loc 1 1195 0 is_stmt 0 discriminator 1
 3071 0cdc 274B     		ldr	r3, .L176+48
 3072 0cde 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3073 0ce0 002B     		cmp	r3, #0
 3074 0ce2 10D0     		beq	.L130
1196:main.c        ****         {
1197:main.c        ****             patchNum -= 1;
 3075              		.loc 1 1197 0 is_stmt 1
 3076 0ce4 264B     		ldr	r3, .L176+52
 3077 0ce6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3078 0ce8 013B     		subs	r3, r3, #1
 3079 0cea DAB2     		uxtb	r2, r3
 3080 0cec 244B     		ldr	r3, .L176+52
 3081 0cee 1A70     		strb	r2, [r3]
1198:main.c        ****             patchNum &= 15;
 3082              		.loc 1 1198 0
 3083 0cf0 234B     		ldr	r3, .L176+52
 3084 0cf2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3085 0cf4 03F00F03 		and	r3, r3, #15
 3086 0cf8 DAB2     		uxtb	r2, r3
 3087 0cfa 214B     		ldr	r3, .L176+52
 3088 0cfc 1A70     		strb	r2, [r3]
1199:main.c        ****             button3Up = 0;
 3089              		.loc 1 1199 0
 3090 0cfe 1F4B     		ldr	r3, .L176+48
 3091 0d00 0022     		movs	r2, #0
 3092 0d02 1A70     		strb	r2, [r3]
 3093 0d04 07E0     		b	.L131
 3094              	.L130:
1200:main.c        ****         }
1201:main.c        ****         else if (button3_Read())
 3095              		.loc 1 1201 0
 3096 0d06 FFF7FEFF 		bl	button3_Read
 3097 0d0a 0346     		mov	r3, r0
 3098 0d0c 002B     		cmp	r3, #0
 3099 0d0e 02D0     		beq	.L131
1202:main.c        ****         {
1203:main.c        ****             button3Up = 1;
 3100              		.loc 1 1203 0
 3101 0d10 1A4B     		ldr	r3, .L176+48
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 77


 3102 0d12 0122     		movs	r2, #1
 3103 0d14 1A70     		strb	r2, [r3]
 3104              	.L131:
1204:main.c        ****         }
1205:main.c        ****         
1206:main.c        ****         if ((!button4_Read()) && (button4Up))
 3105              		.loc 1 1206 0
 3106 0d16 FFF7FEFF 		bl	button4_Read
 3107 0d1a 0346     		mov	r3, r0
 3108 0d1c 002B     		cmp	r3, #0
 3109 0d1e 33D1     		bne	.L132
 3110              		.loc 1 1206 0 is_stmt 0 discriminator 1
 3111 0d20 184B     		ldr	r3, .L176+56
 3112 0d22 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3113 0d24 002B     		cmp	r3, #0
 3114 0d26 2FD0     		beq	.L132
1207:main.c        ****         {
1208:main.c        ****             patchNum += 1;
 3115              		.loc 1 1208 0 is_stmt 1
 3116 0d28 154B     		ldr	r3, .L176+52
 3117 0d2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3118 0d2c 0133     		adds	r3, r3, #1
 3119 0d2e DAB2     		uxtb	r2, r3
 3120 0d30 134B     		ldr	r3, .L176+52
 3121 0d32 1A70     		strb	r2, [r3]
1209:main.c        ****             patchNum &= 15;
 3122              		.loc 1 1209 0
 3123 0d34 124B     		ldr	r3, .L176+52
 3124 0d36 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3125 0d38 03F00F03 		and	r3, r3, #15
 3126 0d3c DAB2     		uxtb	r2, r3
 3127 0d3e 104B     		ldr	r3, .L176+52
 3128 0d40 1A70     		strb	r2, [r3]
1210:main.c        ****             button4Up = 0;
 3129              		.loc 1 1210 0
 3130 0d42 104B     		ldr	r3, .L176+56
 3131 0d44 0022     		movs	r2, #0
 3132 0d46 1A70     		strb	r2, [r3]
 3133 0d48 26E0     		b	.L133
 3134              	.L177:
 3135 0d4a 00BF     		.align	2
 3136              	.L176:
 3137 0d4c 00000000 		.word	currentPluckBuffer
 3138 0d50 00000000 		.word	rxBufferPluck
 3139 0d54 00000000 		.word	strings
 3140 0d58 00000000 		.word	prevStrings
 3141 0d5c 00000000 		.word	octave
 3142 0d60 00000000 		.word	neck
 3143 0d64 00000000 		.word	currentNeck
 3144 0d68 00000000 		.word	enterUp
 3145 0d6c 00000000 		.word	dualSlider
 3146 0d70 00000000 		.word	button1Up
 3147 0d74 00000000 		.word	encoderNum
 3148 0d78 00000000 		.word	button2Up
 3149 0d7c 00000000 		.word	button3Up
 3150 0d80 00000000 		.word	patchNum
 3151 0d84 00000000 		.word	button4Up
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 78


 3152              	.L132:
1211:main.c        ****         }
1212:main.c        ****         else if (button4_Read())
 3153              		.loc 1 1212 0
 3154 0d88 FFF7FEFF 		bl	button4_Read
 3155 0d8c 0346     		mov	r3, r0
 3156 0d8e 002B     		cmp	r3, #0
 3157 0d90 02D0     		beq	.L133
1213:main.c        ****         {
1214:main.c        ****             button4Up = 1;
 3158              		.loc 1 1214 0
 3159 0d92 404B     		ldr	r3, .L178
 3160 0d94 0122     		movs	r2, #1
 3161 0d96 1A70     		strb	r2, [r3]
 3162              	.L133:
1215:main.c        ****         }
1216:main.c        ****         
1217:main.c        ****         if ((!edit_button_Read()) && (editUp))
 3163              		.loc 1 1217 0
 3164 0d98 FFF7FEFF 		bl	edit_button_Read
 3165 0d9c 0346     		mov	r3, r0
 3166 0d9e 002B     		cmp	r3, #0
 3167 0da0 16D1     		bne	.L134
 3168              		.loc 1 1217 0 is_stmt 0 discriminator 1
 3169 0da2 3D4B     		ldr	r3, .L178+4
 3170 0da4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3171 0da6 002B     		cmp	r3, #0
 3172 0da8 12D0     		beq	.L134
1218:main.c        ****         {
1219:main.c        ****             voice = !voice;
 3173              		.loc 1 1219 0 is_stmt 1
 3174 0daa 3C4B     		ldr	r3, .L178+8
 3175 0dac 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3176 0dae 002B     		cmp	r3, #0
 3177 0db0 0CBF     		ite	eq
 3178 0db2 0123     		moveq	r3, #1
 3179 0db4 0023     		movne	r3, #0
 3180 0db6 DBB2     		uxtb	r3, r3
 3181 0db8 1A46     		mov	r2, r3
 3182 0dba 384B     		ldr	r3, .L178+8
 3183 0dbc 1A70     		strb	r2, [r3]
1220:main.c        ****             LED_red2_Write(voice);
 3184              		.loc 1 1220 0
 3185 0dbe 374B     		ldr	r3, .L178+8
 3186 0dc0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3187 0dc2 1846     		mov	r0, r3
 3188 0dc4 FFF7FEFF 		bl	LED_red2_Write
1221:main.c        ****             editUp = 0;
 3189              		.loc 1 1221 0
 3190 0dc8 334B     		ldr	r3, .L178+4
 3191 0dca 0022     		movs	r2, #0
 3192 0dcc 1A70     		strb	r2, [r3]
 3193 0dce 07E0     		b	.L135
 3194              	.L134:
1222:main.c        ****         }
1223:main.c        ****         else if (edit_button_Read())
 3195              		.loc 1 1223 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 79


 3196 0dd0 FFF7FEFF 		bl	edit_button_Read
 3197 0dd4 0346     		mov	r3, r0
 3198 0dd6 002B     		cmp	r3, #0
 3199 0dd8 02D0     		beq	.L135
1224:main.c        ****         {
1225:main.c        ****             editUp = 1;
 3200              		.loc 1 1225 0
 3201 0dda 2F4B     		ldr	r3, .L178+4
 3202 0ddc 0122     		movs	r2, #1
 3203 0dde 1A70     		strb	r2, [r3]
 3204              	.L135:
1226:main.c        ****         }
1227:main.c        ****         
1228:main.c        ****         if (octave != prevOctave)
1229:main.c        ****         {
1230:main.c        ****             //sendMIDIControlChange(90, octave);
1231:main.c        ****         }
1232:main.c        ****         prevOctave = octave;
 3205              		.loc 1 1232 0
 3206 0de0 2F4B     		ldr	r3, .L178+12
 3207 0de2 1B68     		ldr	r3, [r3]
 3208 0de4 2F4A     		ldr	r2, .L178+16
 3209 0de6 1360     		str	r3, [r2]
 3210              	.LBB14:
1233:main.c        ****         
1234:main.c        ****         
1235:main.c        ****         for (int i=  0; i < 4; i++)
 3211              		.loc 1 1235 0
 3212 0de8 0023     		movs	r3, #0
 3213 0dea BB64     		str	r3, [r7, #72]
 3214 0dec 4BE0     		b	.L136
 3215              	.L140:
1236:main.c        ****         {
1237:main.c        ****             knobs[i] = (ADC_SAR_Seq_1_GetResult16(i)/32);
 3216              		.loc 1 1237 0
 3217 0dee BB6C     		ldr	r3, [r7, #72]
 3218 0df0 9BB2     		uxth	r3, r3
 3219 0df2 1846     		mov	r0, r3
 3220 0df4 FFF7FEFF 		bl	ADC_SAR_Seq_1_GetResult16
 3221 0df8 0346     		mov	r3, r0
 3222 0dfa 002B     		cmp	r3, #0
 3223 0dfc 00DA     		bge	.L137
 3224 0dfe 1F33     		adds	r3, r3, #31
 3225              	.L137:
 3226 0e00 5B11     		asrs	r3, r3, #5
 3227 0e02 1BB2     		sxth	r3, r3
 3228 0e04 D9B2     		uxtb	r1, r3
 3229 0e06 284A     		ldr	r2, .L178+20
 3230 0e08 BB6C     		ldr	r3, [r7, #72]
 3231 0e0a 1344     		add	r3, r3, r2
 3232 0e0c 0A46     		mov	r2, r1
 3233 0e0e 1A70     		strb	r2, [r3]
1238:main.c        ****             if (i != 1)
 3234              		.loc 1 1238 0
 3235 0e10 BB6C     		ldr	r3, [r7, #72]
 3236 0e12 012B     		cmp	r3, #1
 3237 0e14 16D0     		beq	.L138
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 80


1239:main.c        ****             {
1240:main.c        ****                 knobs[i] = 127.0f - knobs[i];
 3238              		.loc 1 1240 0
 3239 0e16 244A     		ldr	r2, .L178+20
 3240 0e18 BB6C     		ldr	r3, [r7, #72]
 3241 0e1a 1344     		add	r3, r3, r2
 3242 0e1c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3243 0e1e 1846     		mov	r0, r3
 3244 0e20 FFF7FEFF 		bl	__aeabi_i2f
 3245 0e24 0346     		mov	r3, r0
 3246 0e26 1946     		mov	r1, r3
 3247 0e28 2048     		ldr	r0, .L178+24
 3248 0e2a FFF7FEFF 		bl	__aeabi_fsub
 3249 0e2e 0346     		mov	r3, r0
 3250 0e30 1846     		mov	r0, r3
 3251 0e32 FFF7FEFF 		bl	__aeabi_f2uiz
 3252 0e36 0346     		mov	r3, r0
 3253 0e38 D9B2     		uxtb	r1, r3
 3254 0e3a 1B4A     		ldr	r2, .L178+20
 3255 0e3c BB6C     		ldr	r3, [r7, #72]
 3256 0e3e 1344     		add	r3, r3, r2
 3257 0e40 0A46     		mov	r2, r1
 3258 0e42 1A70     		strb	r2, [r3]
 3259              	.L138:
1241:main.c        ****             }
1242:main.c        ****             if (knobs[i] != prevKnobs[i])
 3260              		.loc 1 1242 0
 3261 0e44 184A     		ldr	r2, .L178+20
 3262 0e46 BB6C     		ldr	r3, [r7, #72]
 3263 0e48 1344     		add	r3, r3, r2
 3264 0e4a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3265 0e4c 1849     		ldr	r1, .L178+28
 3266 0e4e BB6C     		ldr	r3, [r7, #72]
 3267 0e50 0B44     		add	r3, r3, r1
 3268 0e52 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3269 0e54 9A42     		cmp	r2, r3
 3270 0e56 0AD0     		beq	.L139
1243:main.c        ****             {
1244:main.c        ****                 sendMIDIControlChange(i+17, knobs[i], 0);
 3271              		.loc 1 1244 0
 3272 0e58 BB6C     		ldr	r3, [r7, #72]
 3273 0e5a 03F11100 		add	r0, r3, #17
 3274 0e5e 124A     		ldr	r2, .L178+20
 3275 0e60 BB6C     		ldr	r3, [r7, #72]
 3276 0e62 1344     		add	r3, r3, r2
 3277 0e64 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3278 0e66 0022     		movs	r2, #0
 3279 0e68 1946     		mov	r1, r3
 3280 0e6a FFF7FEFF 		bl	sendMIDIControlChange
 3281              	.L139:
1245:main.c        ****             }
1246:main.c        ****             prevKnobs[i] = knobs[i];
 3282              		.loc 1 1246 0 discriminator 2
 3283 0e6e 0E4A     		ldr	r2, .L178+20
 3284 0e70 BB6C     		ldr	r3, [r7, #72]
 3285 0e72 1344     		add	r3, r3, r2
 3286 0e74 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 81


 3287 0e76 0E4A     		ldr	r2, .L178+28
 3288 0e78 BB6C     		ldr	r3, [r7, #72]
 3289 0e7a 1344     		add	r3, r3, r2
 3290 0e7c 0A46     		mov	r2, r1
 3291 0e7e 1A70     		strb	r2, [r3]
1235:main.c        ****         {
 3292              		.loc 1 1235 0 discriminator 2
 3293 0e80 BB6C     		ldr	r3, [r7, #72]
 3294 0e82 0133     		adds	r3, r3, #1
 3295 0e84 BB64     		str	r3, [r7, #72]
 3296              	.L136:
1235:main.c        ****         {
 3297              		.loc 1 1235 0 is_stmt 0 discriminator 1
 3298 0e86 BB6C     		ldr	r3, [r7, #72]
 3299 0e88 032B     		cmp	r3, #3
 3300 0e8a B0DD     		ble	.L140
 3301              	.LBE14:
 3302              	.LBB15:
1247:main.c        ****         }
1248:main.c        ****         
1249:main.c        ****        
1250:main.c        ****         //calculate the pitch of each string based on the current Copedent
1251:main.c        ****         for (int i = 0; i < NUM_STRINGS; i++)
 3303              		.loc 1 1251 0 is_stmt 1
 3304 0e8c 0023     		movs	r3, #0
 3305 0e8e 7B64     		str	r3, [r7, #68]
 3306 0e90 8CE1     		b	.L141
 3307              	.L179:
 3308 0e92 00BF     		.align	2
 3309              	.L178:
 3310 0e94 00000000 		.word	button4Up
 3311 0e98 00000000 		.word	editUp
 3312 0e9c 00000000 		.word	voice
 3313 0ea0 00000000 		.word	octave
 3314 0ea4 00000000 		.word	prevOctave
 3315 0ea8 00000000 		.word	knobs
 3316 0eac 0000FE42 		.word	1123942400
 3317 0eb0 00000000 		.word	prevKnobs
 3318              	.L146:
 3319              	.LBB16:
1252:main.c        ****     	{
1253:main.c        ****     		//interpolate ratios for each of the strings
1254:main.c        ****            /*
1255:main.c        ****             float myMappedPos;
1256:main.c        ****             if (dualSlider)
1257:main.c        ****             {
1258:main.c        ****                myMappedPos = LEAF_interpolation_linear(stringMappedPositions[0], stringMappedPositi
1259:main.c        ****             }
1260:main.c        ****             else
1261:main.c        ****             {
1262:main.c        ****                 myMappedPos = stringMappedPositions[0];
1263:main.c        ****             }
1264:main.c        **** 
1265:main.c        ****     		stringOctave[i] = powf(2.0f,octave);
1266:main.c        ****             */
1267:main.c        ****     		//then apply those ratios to the fundamental frequencies
1268:main.c        ****     		float tempMIDI = (copedent[currentNeck][0][i] +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 82


 3320              		.loc 1 1268 0
 3321 0eb4 A64B     		ldr	r3, .L180
 3322 0eb6 1A68     		ldr	r2, [r3]
 3323 0eb8 A649     		ldr	r1, .L180+4
 3324 0eba 1346     		mov	r3, r2
 3325 0ebc 5B01     		lsls	r3, r3, #5
 3326 0ebe 1344     		add	r3, r3, r2
 3327 0ec0 9B00     		lsls	r3, r3, #2
 3328 0ec2 7A6C     		ldr	r2, [r7, #68]
 3329 0ec4 1344     		add	r3, r3, r2
 3330 0ec6 51F82340 		ldr	r4, [r1, r3, lsl #2]	@ float
1269:main.c        ****                         (copedent[currentNeck][4][i] * pedals_float[0]) +
 3331              		.loc 1 1269 0
 3332 0eca A14B     		ldr	r3, .L180
 3333 0ecc 1A68     		ldr	r2, [r3]
 3334 0ece A149     		ldr	r1, .L180+4
 3335 0ed0 1346     		mov	r3, r2
 3336 0ed2 5B01     		lsls	r3, r3, #5
 3337 0ed4 1344     		add	r3, r3, r2
 3338 0ed6 9B00     		lsls	r3, r3, #2
 3339 0ed8 7A6C     		ldr	r2, [r7, #68]
 3340 0eda 1344     		add	r3, r3, r2
 3341 0edc 3033     		adds	r3, r3, #48
 3342 0ede 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3343 0ee2 9D4B     		ldr	r3, .L180+8
 3344 0ee4 1B68     		ldr	r3, [r3]	@ float
 3345 0ee6 1946     		mov	r1, r3
 3346 0ee8 1046     		mov	r0, r2
 3347 0eea FFF7FEFF 		bl	__aeabi_fmul
 3348 0eee 0346     		mov	r3, r0
1268:main.c        ****                         (copedent[currentNeck][4][i] * pedals_float[0]) +
 3349              		.loc 1 1268 0
 3350 0ef0 1946     		mov	r1, r3
 3351 0ef2 2046     		mov	r0, r4
 3352 0ef4 FFF7FEFF 		bl	__aeabi_fadd
 3353 0ef8 0346     		mov	r3, r0
 3354 0efa 1C46     		mov	r4, r3
1270:main.c        ****                         (copedent[currentNeck][5][i] * pedals_float[1]) +
 3355              		.loc 1 1270 0
 3356 0efc 944B     		ldr	r3, .L180
 3357 0efe 1A68     		ldr	r2, [r3]
 3358 0f00 9449     		ldr	r1, .L180+4
 3359 0f02 1346     		mov	r3, r2
 3360 0f04 5B01     		lsls	r3, r3, #5
 3361 0f06 1344     		add	r3, r3, r2
 3362 0f08 9B00     		lsls	r3, r3, #2
 3363 0f0a 7A6C     		ldr	r2, [r7, #68]
 3364 0f0c 1344     		add	r3, r3, r2
 3365 0f0e 3C33     		adds	r3, r3, #60
 3366 0f10 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3367 0f14 904B     		ldr	r3, .L180+8
 3368 0f16 5B68     		ldr	r3, [r3, #4]	@ float
 3369 0f18 1946     		mov	r1, r3
 3370 0f1a 1046     		mov	r0, r2
 3371 0f1c FFF7FEFF 		bl	__aeabi_fmul
 3372 0f20 0346     		mov	r3, r0
1269:main.c        ****                         (copedent[currentNeck][4][i] * pedals_float[0]) +
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 83


 3373              		.loc 1 1269 0
 3374 0f22 1946     		mov	r1, r3
 3375 0f24 2046     		mov	r0, r4
 3376 0f26 FFF7FEFF 		bl	__aeabi_fadd
 3377 0f2a 0346     		mov	r3, r0
 3378 0f2c 1C46     		mov	r4, r3
1271:main.c        ****                         (copedent[currentNeck][6][i] * pedals_float[2]) +
 3379              		.loc 1 1271 0
 3380 0f2e 884B     		ldr	r3, .L180
 3381 0f30 1A68     		ldr	r2, [r3]
 3382 0f32 8849     		ldr	r1, .L180+4
 3383 0f34 1346     		mov	r3, r2
 3384 0f36 5B01     		lsls	r3, r3, #5
 3385 0f38 1344     		add	r3, r3, r2
 3386 0f3a 9B00     		lsls	r3, r3, #2
 3387 0f3c 7A6C     		ldr	r2, [r7, #68]
 3388 0f3e 1344     		add	r3, r3, r2
 3389 0f40 4833     		adds	r3, r3, #72
 3390 0f42 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3391 0f46 844B     		ldr	r3, .L180+8
 3392 0f48 9B68     		ldr	r3, [r3, #8]	@ float
 3393 0f4a 1946     		mov	r1, r3
 3394 0f4c 1046     		mov	r0, r2
 3395 0f4e FFF7FEFF 		bl	__aeabi_fmul
 3396 0f52 0346     		mov	r3, r0
1270:main.c        ****                         (copedent[currentNeck][5][i] * pedals_float[1]) +
 3397              		.loc 1 1270 0
 3398 0f54 1946     		mov	r1, r3
 3399 0f56 2046     		mov	r0, r4
 3400 0f58 FFF7FEFF 		bl	__aeabi_fadd
 3401 0f5c 0346     		mov	r3, r0
 3402 0f5e 1C46     		mov	r4, r3
1272:main.c        ****                         (copedent[currentNeck][7][i] * pedals_float[3]) +
 3403              		.loc 1 1272 0
 3404 0f60 7B4B     		ldr	r3, .L180
 3405 0f62 1A68     		ldr	r2, [r3]
 3406 0f64 7B49     		ldr	r1, .L180+4
 3407 0f66 1346     		mov	r3, r2
 3408 0f68 5B01     		lsls	r3, r3, #5
 3409 0f6a 1344     		add	r3, r3, r2
 3410 0f6c 9B00     		lsls	r3, r3, #2
 3411 0f6e 7A6C     		ldr	r2, [r7, #68]
 3412 0f70 1344     		add	r3, r3, r2
 3413 0f72 5433     		adds	r3, r3, #84
 3414 0f74 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3415 0f78 774B     		ldr	r3, .L180+8
 3416 0f7a DB68     		ldr	r3, [r3, #12]	@ float
 3417 0f7c 1946     		mov	r1, r3
 3418 0f7e 1046     		mov	r0, r2
 3419 0f80 FFF7FEFF 		bl	__aeabi_fmul
 3420 0f84 0346     		mov	r3, r0
1271:main.c        ****                         (copedent[currentNeck][6][i] * pedals_float[2]) +
 3421              		.loc 1 1271 0
 3422 0f86 1946     		mov	r1, r3
 3423 0f88 2046     		mov	r0, r4
 3424 0f8a FFF7FEFF 		bl	__aeabi_fadd
 3425 0f8e 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 84


 3426 0f90 1C46     		mov	r4, r3
1273:main.c        ****                         (copedent[currentNeck][8][i] * pedals_float[4]) +
 3427              		.loc 1 1273 0
 3428 0f92 6F4B     		ldr	r3, .L180
 3429 0f94 1A68     		ldr	r2, [r3]
 3430 0f96 6F49     		ldr	r1, .L180+4
 3431 0f98 1346     		mov	r3, r2
 3432 0f9a 5B01     		lsls	r3, r3, #5
 3433 0f9c 1344     		add	r3, r3, r2
 3434 0f9e 9B00     		lsls	r3, r3, #2
 3435 0fa0 7A6C     		ldr	r2, [r7, #68]
 3436 0fa2 1344     		add	r3, r3, r2
 3437 0fa4 6033     		adds	r3, r3, #96
 3438 0fa6 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3439 0faa 6B4B     		ldr	r3, .L180+8
 3440 0fac 1B69     		ldr	r3, [r3, #16]	@ float
 3441 0fae 1946     		mov	r1, r3
 3442 0fb0 1046     		mov	r0, r2
 3443 0fb2 FFF7FEFF 		bl	__aeabi_fmul
 3444 0fb6 0346     		mov	r3, r0
1272:main.c        ****                         (copedent[currentNeck][7][i] * pedals_float[3]) +
 3445              		.loc 1 1272 0
 3446 0fb8 1946     		mov	r1, r3
 3447 0fba 2046     		mov	r0, r4
 3448 0fbc FFF7FEFF 		bl	__aeabi_fadd
 3449 0fc0 0346     		mov	r3, r0
 3450 0fc2 1C46     		mov	r4, r3
1274:main.c        ****                         (copedent[currentNeck][10][i] * pedals_float[5]) +
 3451              		.loc 1 1274 0
 3452 0fc4 624B     		ldr	r3, .L180
 3453 0fc6 1A68     		ldr	r2, [r3]
 3454 0fc8 6249     		ldr	r1, .L180+4
 3455 0fca 1346     		mov	r3, r2
 3456 0fcc 5B01     		lsls	r3, r3, #5
 3457 0fce 1344     		add	r3, r3, r2
 3458 0fd0 9B00     		lsls	r3, r3, #2
 3459 0fd2 7A6C     		ldr	r2, [r7, #68]
 3460 0fd4 1344     		add	r3, r3, r2
 3461 0fd6 7833     		adds	r3, r3, #120
 3462 0fd8 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3463 0fdc 5E4B     		ldr	r3, .L180+8
 3464 0fde 5B69     		ldr	r3, [r3, #20]	@ float
 3465 0fe0 1946     		mov	r1, r3
 3466 0fe2 1046     		mov	r0, r2
 3467 0fe4 FFF7FEFF 		bl	__aeabi_fmul
 3468 0fe8 0346     		mov	r3, r0
1273:main.c        ****                         (copedent[currentNeck][8][i] * pedals_float[4]) +
 3469              		.loc 1 1273 0
 3470 0fea 1946     		mov	r1, r3
 3471 0fec 2046     		mov	r0, r4
 3472 0fee FFF7FEFF 		bl	__aeabi_fadd
 3473 0ff2 0346     		mov	r3, r0
 3474 0ff4 1C46     		mov	r4, r3
1275:main.c        ****                         (copedent[currentNeck][9][i] * pedals_float[6]) +
 3475              		.loc 1 1275 0
 3476 0ff6 564B     		ldr	r3, .L180
 3477 0ff8 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 85


 3478 0ffa 5649     		ldr	r1, .L180+4
 3479 0ffc 1346     		mov	r3, r2
 3480 0ffe 5B01     		lsls	r3, r3, #5
 3481 1000 1344     		add	r3, r3, r2
 3482 1002 9B00     		lsls	r3, r3, #2
 3483 1004 7A6C     		ldr	r2, [r7, #68]
 3484 1006 1344     		add	r3, r3, r2
 3485 1008 6C33     		adds	r3, r3, #108
 3486 100a 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3487 100e 524B     		ldr	r3, .L180+8
 3488 1010 9B69     		ldr	r3, [r3, #24]	@ float
 3489 1012 1946     		mov	r1, r3
 3490 1014 1046     		mov	r0, r2
 3491 1016 FFF7FEFF 		bl	__aeabi_fmul
 3492 101a 0346     		mov	r3, r0
1274:main.c        ****                         (copedent[currentNeck][10][i] * pedals_float[5]) +
 3493              		.loc 1 1274 0
 3494 101c 1946     		mov	r1, r3
 3495 101e 2046     		mov	r0, r4
 3496 1020 FFF7FEFF 		bl	__aeabi_fadd
 3497 1024 0346     		mov	r3, r0
 3498 1026 1C46     		mov	r4, r3
1276:main.c        ****                         (copedent[currentNeck][3][i] * pedals_float[7]) +
 3499              		.loc 1 1276 0
 3500 1028 494B     		ldr	r3, .L180
 3501 102a 1A68     		ldr	r2, [r3]
 3502 102c 4949     		ldr	r1, .L180+4
 3503 102e 1346     		mov	r3, r2
 3504 1030 5B01     		lsls	r3, r3, #5
 3505 1032 1344     		add	r3, r3, r2
 3506 1034 9B00     		lsls	r3, r3, #2
 3507 1036 7A6C     		ldr	r2, [r7, #68]
 3508 1038 1344     		add	r3, r3, r2
 3509 103a 2433     		adds	r3, r3, #36
 3510 103c 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3511 1040 454B     		ldr	r3, .L180+8
 3512 1042 DB69     		ldr	r3, [r3, #28]	@ float
 3513 1044 1946     		mov	r1, r3
 3514 1046 1046     		mov	r0, r2
 3515 1048 FFF7FEFF 		bl	__aeabi_fmul
 3516 104c 0346     		mov	r3, r0
1275:main.c        ****                         (copedent[currentNeck][9][i] * pedals_float[6]) +
 3517              		.loc 1 1275 0
 3518 104e 1946     		mov	r1, r3
 3519 1050 2046     		mov	r0, r4
 3520 1052 FFF7FEFF 		bl	__aeabi_fadd
 3521 1056 0346     		mov	r3, r0
 3522 1058 1C46     		mov	r4, r3
1277:main.c        ****                         (copedent[currentNeck][1][i] * pedals_float[8]) +
 3523              		.loc 1 1277 0
 3524 105a 3D4B     		ldr	r3, .L180
 3525 105c 1A68     		ldr	r2, [r3]
 3526 105e 3D49     		ldr	r1, .L180+4
 3527 1060 1346     		mov	r3, r2
 3528 1062 5B01     		lsls	r3, r3, #5
 3529 1064 1344     		add	r3, r3, r2
 3530 1066 9B00     		lsls	r3, r3, #2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 86


 3531 1068 7A6C     		ldr	r2, [r7, #68]
 3532 106a 1344     		add	r3, r3, r2
 3533 106c 0C33     		adds	r3, r3, #12
 3534 106e 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3535 1072 394B     		ldr	r3, .L180+8
 3536 1074 1B6A     		ldr	r3, [r3, #32]	@ float
 3537 1076 1946     		mov	r1, r3
 3538 1078 1046     		mov	r0, r2
 3539 107a FFF7FEFF 		bl	__aeabi_fmul
 3540 107e 0346     		mov	r3, r0
1276:main.c        ****                         (copedent[currentNeck][3][i] * pedals_float[7]) +
 3541              		.loc 1 1276 0
 3542 1080 1946     		mov	r1, r3
 3543 1082 2046     		mov	r0, r4
 3544 1084 FFF7FEFF 		bl	__aeabi_fadd
 3545 1088 0346     		mov	r3, r0
 3546 108a 1C46     		mov	r4, r3
1278:main.c        ****                         (copedent[currentNeck][2][i] * pedals_float[9]));
 3547              		.loc 1 1278 0
 3548 108c 304B     		ldr	r3, .L180
 3549 108e 1A68     		ldr	r2, [r3]
 3550 1090 3049     		ldr	r1, .L180+4
 3551 1092 1346     		mov	r3, r2
 3552 1094 5B01     		lsls	r3, r3, #5
 3553 1096 1344     		add	r3, r3, r2
 3554 1098 9B00     		lsls	r3, r3, #2
 3555 109a 7A6C     		ldr	r2, [r7, #68]
 3556 109c 1344     		add	r3, r3, r2
 3557 109e 1833     		adds	r3, r3, #24
 3558 10a0 51F82320 		ldr	r2, [r1, r3, lsl #2]	@ float
 3559 10a4 2C4B     		ldr	r3, .L180+8
 3560 10a6 5B6A     		ldr	r3, [r3, #36]	@ float
 3561 10a8 1946     		mov	r1, r3
 3562 10aa 1046     		mov	r0, r2
 3563 10ac FFF7FEFF 		bl	__aeabi_fmul
 3564 10b0 0346     		mov	r3, r0
1268:main.c        ****                         (copedent[currentNeck][4][i] * pedals_float[0]) +
 3565              		.loc 1 1268 0
 3566 10b2 1946     		mov	r1, r3
 3567 10b4 2046     		mov	r0, r4
 3568 10b6 FFF7FEFF 		bl	__aeabi_fadd
 3569 10ba 0346     		mov	r3, r0
 3570 10bc FB61     		str	r3, [r7, #28]	@ float
1279:main.c        ****     		//stringPitch[i] = tempFreq;
1280:main.c        ****             //stringMIDI[i] = ftom(stringPitch[i]);
1281:main.c        ****             
1282:main.c        ****             float openStringMIDI  = copedent[currentNeck][0][i];
 3571              		.loc 1 1282 0
 3572 10be 244B     		ldr	r3, .L180
 3573 10c0 1A68     		ldr	r2, [r3]
 3574 10c2 2449     		ldr	r1, .L180+4
 3575 10c4 1346     		mov	r3, r2
 3576 10c6 5B01     		lsls	r3, r3, #5
 3577 10c8 1344     		add	r3, r3, r2
 3578 10ca 9B00     		lsls	r3, r3, #2
 3579 10cc 7A6C     		ldr	r2, [r7, #68]
 3580 10ce 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 87


 3581 10d0 51F82330 		ldr	r3, [r1, r3, lsl #2]	@ float
 3582 10d4 BB61     		str	r3, [r7, #24]	@ float
1283:main.c        ****             openStringMIDI_Int[i] = (int)openStringMIDI;
 3583              		.loc 1 1283 0
 3584 10d6 B869     		ldr	r0, [r7, #24]	@ float
 3585 10d8 FFF7FEFF 		bl	__aeabi_f2iz
 3586 10dc 0146     		mov	r1, r0
 3587 10de 1F4A     		ldr	r2, .L180+12
 3588 10e0 7B6C     		ldr	r3, [r7, #68]
 3589 10e2 42F82310 		str	r1, [r2, r3, lsl #2]
1284:main.c        ****             
1285:main.c        ****             float barMIDI = ftom((invStringMappedPositions[0]) * mtof(tempMIDI));
 3590              		.loc 1 1285 0
 3591 10e6 1E4B     		ldr	r3, .L180+16
 3592 10e8 1C68     		ldr	r4, [r3]	@ float
 3593 10ea F869     		ldr	r0, [r7, #28]	@ float
 3594 10ec FFF7FEFF 		bl	mtof
 3595 10f0 0346     		mov	r3, r0
 3596 10f2 1946     		mov	r1, r3
 3597 10f4 2046     		mov	r0, r4
 3598 10f6 FFF7FEFF 		bl	__aeabi_fmul
 3599 10fa 0346     		mov	r3, r0
 3600 10fc 1846     		mov	r0, r3
 3601 10fe FFF7FEFF 		bl	ftom
 3602 1102 7861     		str	r0, [r7, #20]	@ float
1286:main.c        ****             
1287:main.c        ****             float computerMIDIOffset = barMIDI - openStringMIDI_Int[i];// + stringOctave[i];
 3603              		.loc 1 1287 0
 3604 1104 154A     		ldr	r2, .L180+12
 3605 1106 7B6C     		ldr	r3, [r7, #68]
 3606 1108 52F82330 		ldr	r3, [r2, r3, lsl #2]
 3607 110c 1846     		mov	r0, r3
 3608 110e FFF7FEFF 		bl	__aeabi_i2f
 3609 1112 0346     		mov	r3, r0
 3610 1114 1946     		mov	r1, r3
 3611 1116 7869     		ldr	r0, [r7, #20]	@ float
 3612 1118 FFF7FEFF 		bl	__aeabi_fsub
 3613 111c 0346     		mov	r3, r0
 3614 111e 3B61     		str	r3, [r7, #16]	@ float
1288:main.c        ****             
1289:main.c        ****             float pitchBendAmount = (computerMIDIOffset* 341.0f) + 8192.0f;  // 14bit number divide
 3615              		.loc 1 1289 0
 3616 1120 1049     		ldr	r1, .L180+20
 3617 1122 3869     		ldr	r0, [r7, #16]	@ float
 3618 1124 FFF7FEFF 		bl	__aeabi_fmul
 3619 1128 0346     		mov	r3, r0
 3620 112a 4FF08C41 		mov	r1, #1174405120
 3621 112e 1846     		mov	r0, r3
 3622 1130 FFF7FEFF 		bl	__aeabi_fadd
 3623 1134 0346     		mov	r3, r0
 3624 1136 FB60     		str	r3, [r7, #12]	@ float
1290:main.c        ****             if (pitchBendAmount != prevStringPitchBend[i])
 3625              		.loc 1 1290 0
 3626 1138 0B4A     		ldr	r2, .L180+24
 3627 113a 7B6C     		ldr	r3, [r7, #68]
 3628 113c 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3629 1140 F968     		ldr	r1, [r7, #12]	@ float
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 88


 3630 1142 1846     		mov	r0, r3
 3631 1144 FFF7FEFF 		bl	__aeabi_fcmpeq
 3632 1148 0346     		mov	r3, r0
 3633 114a 002B     		cmp	r3, #0
 3634 114c 19D1     		bne	.L142
 3635 114e 0DE0     		b	.L181
 3636              	.L182:
 3637              		.align	2
 3638              	.L180:
 3639 1150 00000000 		.word	currentNeck
 3640 1154 00000000 		.word	copedent
 3641 1158 00000000 		.word	pedals_float
 3642 115c 00000000 		.word	openStringMIDI_Int
 3643 1160 00000000 		.word	invStringMappedPositions
 3644 1164 0080AA43 		.word	1135247360
 3645 1168 00000000 		.word	prevStringPitchBend
 3646              	.L181:
1291:main.c        ****             {
1292:main.c        ****                 sendMIDIPitchBend((uint)pitchBendAmount, i+1);
 3647              		.loc 1 1292 0
 3648 116c F868     		ldr	r0, [r7, #12]	@ float
 3649 116e FFF7FEFF 		bl	__aeabi_f2uiz
 3650 1172 0346     		mov	r3, r0
 3651 1174 1A46     		mov	r2, r3
 3652 1176 7B6C     		ldr	r3, [r7, #68]
 3653 1178 0133     		adds	r3, r3, #1
 3654 117a 1946     		mov	r1, r3
 3655 117c 1046     		mov	r0, r2
 3656 117e FFF7FEFF 		bl	sendMIDIPitchBend
 3657              	.L142:
1293:main.c        ****             }
1294:main.c        ****             prevStringPitchBend[i] = pitchBendAmount;
 3658              		.loc 1 1294 0
 3659 1182 7549     		ldr	r1, .L183
 3660 1184 7B6C     		ldr	r3, [r7, #68]
 3661 1186 FA68     		ldr	r2, [r7, #12]	@ float
 3662 1188 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
1295:main.c        ****             if (tempMIDI > 0.0f)
 3663              		.loc 1 1295 0
 3664 118c 4FF00001 		mov	r1, #0
 3665 1190 F869     		ldr	r0, [r7, #28]	@ float
 3666 1192 FFF7FEFF 		bl	__aeabi_fcmpgt
 3667 1196 0346     		mov	r3, r0
 3668 1198 002B     		cmp	r3, #0
 3669 119a 04D0     		beq	.L144
1296:main.c        ****             {
1297:main.c        ****                 stringMIDI[i] = tempMIDI;
 3670              		.loc 1 1297 0
 3671 119c 6F49     		ldr	r1, .L183+4
 3672 119e 7B6C     		ldr	r3, [r7, #68]
 3673 11a0 FA69     		ldr	r2, [r7, #28]	@ float
 3674 11a2 41F82320 		str	r2, [r1, r3, lsl #2]	@ float
 3675              	.L144:
 3676              	.LBE16:
1251:main.c        ****     	{
 3677              		.loc 1 1251 0 discriminator 2
 3678 11a6 7B6C     		ldr	r3, [r7, #68]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 89


 3679 11a8 0133     		adds	r3, r3, #1
 3680 11aa 7B64     		str	r3, [r7, #68]
 3681              	.L141:
1251:main.c        ****     	{
 3682              		.loc 1 1251 0 is_stmt 0 discriminator 1
 3683 11ac 7B6C     		ldr	r3, [r7, #68]
 3684 11ae 0B2B     		cmp	r3, #11
 3685 11b0 7FF780AE 		ble	.L146
 3686              	.LBE15:
1298:main.c        ****             }
1299:main.c        ****     	}
1300:main.c        **** 
1301:main.c        ****         if (encoder_button_Read())
 3687              		.loc 1 1301 0 is_stmt 1
 3688 11b4 FFF7FEFF 		bl	encoder_button_Read
 3689 11b8 0346     		mov	r3, r0
 3690 11ba 002B     		cmp	r3, #0
 3691 11bc 10D0     		beq	.L147
1302:main.c        ****         {
1303:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter() * 4;
 3692              		.loc 1 1303 0
 3693 11be FFF7FEFF 		bl	QuadDec_1_GetCounter
 3694 11c2 0346     		mov	r3, r0
 3695 11c4 9800     		lsls	r0, r3, #2
 3696 11c6 664B     		ldr	r3, .L183+8
 3697 11c8 1B68     		ldr	r3, [r3]
 3698 11ca 654A     		ldr	r2, .L183+8
 3699 11cc 1268     		ldr	r2, [r2]
 3700 11ce 6549     		ldr	r1, .L183+12
 3701 11d0 8A5C     		ldrb	r2, [r1, r2]
 3702 11d2 D1B2     		uxtb	r1, r2
 3703 11d4 C2B2     		uxtb	r2, r0
 3704 11d6 0A44     		add	r2, r2, r1
 3705 11d8 D1B2     		uxtb	r1, r2
 3706 11da 624A     		ldr	r2, .L183+12
 3707 11dc D154     		strb	r1, [r2, r3]
 3708 11de 0FE0     		b	.L148
 3709              	.L147:
1304:main.c        ****         }
1305:main.c        ****         else
1306:main.c        ****         {
1307:main.c        ****             encoderVal[encoderNum] += QuadDec_1_GetCounter();
 3710              		.loc 1 1307 0
 3711 11e0 FFF7FEFF 		bl	QuadDec_1_GetCounter
 3712 11e4 0346     		mov	r3, r0
 3713 11e6 1846     		mov	r0, r3
 3714 11e8 5D4B     		ldr	r3, .L183+8
 3715 11ea 1B68     		ldr	r3, [r3]
 3716 11ec 5C4A     		ldr	r2, .L183+8
 3717 11ee 1268     		ldr	r2, [r2]
 3718 11f0 5C49     		ldr	r1, .L183+12
 3719 11f2 8A5C     		ldrb	r2, [r1, r2]
 3720 11f4 D1B2     		uxtb	r1, r2
 3721 11f6 C2B2     		uxtb	r2, r0
 3722 11f8 0A44     		add	r2, r2, r1
 3723 11fa D1B2     		uxtb	r1, r2
 3724 11fc 594A     		ldr	r2, .L183+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 90


 3725 11fe D154     		strb	r1, [r2, r3]
 3726              	.L148:
1308:main.c        ****         }
1309:main.c        ****         QuadDec_1_SetCounter(0);
 3727              		.loc 1 1309 0
 3728 1200 0020     		movs	r0, #0
 3729 1202 FFF7FEFF 		bl	QuadDec_1_SetCounter
1310:main.c        ****         
1311:main.c        **** 
1312:main.c        ****         
1313:main.c        ****         if (USB_check_flag)
 3730              		.loc 1 1313 0
 3731 1206 584B     		ldr	r3, .L183+16
 3732 1208 1B78     		ldrb	r3, [r3]
 3733 120a DBB2     		uxtb	r3, r3
 3734 120c 002B     		cmp	r3, #0
 3735 120e 01D0     		beq	.L149
1314:main.c        ****         {
1315:main.c        ****             checkUSB_Vbus();
 3736              		.loc 1 1315 0
 3737 1210 FFF7FEFF 		bl	checkUSB_Vbus
 3738              	.L149:
1316:main.c        ****         }
1317:main.c        ****         //only service the USB bus if there is a computer plugged in
1318:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 3739              		.loc 1 1318 0
 3740 1214 554B     		ldr	r3, .L183+20
 3741 1216 1B78     		ldrb	r3, [r3]
 3742 1218 DBB2     		uxtb	r3, r3
 3743 121a 002B     		cmp	r3, #0
 3744 121c 13D0     		beq	.L150
 3745              		.loc 1 1318 0 is_stmt 0 discriminator 1
 3746 121e FFF7FEFF 		bl	USB_VBusPresent
 3747 1222 0346     		mov	r3, r0
 3748 1224 002B     		cmp	r3, #0
 3749 1226 0ED0     		beq	.L150
1319:main.c        ****         {
1320:main.c        ****             if (midiSent > 64)
 3750              		.loc 1 1320 0 is_stmt 1
 3751 1228 514B     		ldr	r3, .L183+24
 3752 122a 1B88     		ldrh	r3, [r3]
 3753 122c 402B     		cmp	r3, #64
 3754 122e 05D9     		bls	.L151
1321:main.c        ****             {
1322:main.c        ****                 midiOverflow++;
 3755              		.loc 1 1322 0
 3756 1230 504B     		ldr	r3, .L183+28
 3757 1232 1B88     		ldrh	r3, [r3]
 3758 1234 0133     		adds	r3, r3, #1
 3759 1236 9AB2     		uxth	r2, r3
 3760 1238 4E4B     		ldr	r3, .L183+28
 3761 123a 1A80     		strh	r2, [r3]	@ movhi
 3762              	.L151:
1323:main.c        ****             }
1324:main.c        ****             midiSent = 0;
 3763              		.loc 1 1324 0
 3764 123c 4C4B     		ldr	r3, .L183+24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 91


 3765 123e 0022     		movs	r2, #0
 3766 1240 1A80     		strh	r2, [r3]	@ movhi
1325:main.c        ****             USB_service();
 3767              		.loc 1 1325 0
 3768 1242 FFF7FEFF 		bl	USB_service
 3769              	.L150:
 3770              	.LBB17:
1326:main.c        ****         }
1327:main.c        **** 
1328:main.c        ****         
1329:main.c        ****         /*
1330:main.c        ****         for (int i = 0; i < 10; i++)
1331:main.c        ****         {
1332:main.c        ****             myArray[i * 2] = processed_pedals[i] >> 8;
1333:main.c        ****             myArray[(i * 2) + 1] = processed_pedals[i] & 0xff;
1334:main.c        ****         }
1335:main.c        ****         
1336:main.c        ****         myArray[20] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
1337:main.c        ****         for (int i = 0; i < 4; i++)
1338:main.c        ****         {
1339:main.c        ****             myArray[i+21] = knobs[i];
1340:main.c        ****         }
1341:main.c        ****         myArray[25] = processed_volumePedal >> 8;
1342:main.c        ****         myArray[26] = processed_volumePedal & 0xff;
1343:main.c        ****         */
1344:main.c        ****         
1345:main.c        ****         for (int i = 0; i < 12; i++)
 3771              		.loc 1 1345 0
 3772 1246 0023     		movs	r3, #0
 3773 1248 3B64     		str	r3, [r7, #64]
 3774 124a 1EE0     		b	.L152
 3775              	.L153:
 3776              	.LBB18:
1346:main.c        ****         {
1347:main.c        ****             union breakFloat tempBreak;
1348:main.c        ****             tempBreak.f = stringMIDI[i];
 3777              		.loc 1 1348 0 discriminator 3
 3778 124c 434A     		ldr	r2, .L183+4
 3779 124e 3B6C     		ldr	r3, [r7, #64]
 3780 1250 52F82330 		ldr	r3, [r2, r3, lsl #2]	@ float
 3781 1254 7B60     		str	r3, [r7, #4]	@ float
1349:main.c        ****             
1350:main.c        ****             
1351:main.c        ****             myArray[i * 4] = tempBreak.b[0];
 3782              		.loc 1 1351 0 discriminator 3
 3783 1256 3B6C     		ldr	r3, [r7, #64]
 3784 1258 9B00     		lsls	r3, r3, #2
 3785 125a 3979     		ldrb	r1, [r7, #4]	@ zero_extendqisi2
 3786 125c 464A     		ldr	r2, .L183+32
 3787 125e D154     		strb	r1, [r2, r3]
1352:main.c        ****             myArray[(i * 4) + 1] = tempBreak.b[1];
 3788              		.loc 1 1352 0 discriminator 3
 3789 1260 3B6C     		ldr	r3, [r7, #64]
 3790 1262 9B00     		lsls	r3, r3, #2
 3791 1264 0133     		adds	r3, r3, #1
 3792 1266 7979     		ldrb	r1, [r7, #5]	@ zero_extendqisi2
 3793 1268 434A     		ldr	r2, .L183+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 92


 3794 126a D154     		strb	r1, [r2, r3]
1353:main.c        ****             myArray[(i * 4) + 2] = tempBreak.b[2];
 3795              		.loc 1 1353 0 discriminator 3
 3796 126c 3B6C     		ldr	r3, [r7, #64]
 3797 126e 9B00     		lsls	r3, r3, #2
 3798 1270 0233     		adds	r3, r3, #2
 3799 1272 B979     		ldrb	r1, [r7, #6]	@ zero_extendqisi2
 3800 1274 404A     		ldr	r2, .L183+32
 3801 1276 D154     		strb	r1, [r2, r3]
1354:main.c        ****             myArray[(i * 4) + 3] = tempBreak.b[3];
 3802              		.loc 1 1354 0 discriminator 3
 3803 1278 3B6C     		ldr	r3, [r7, #64]
 3804 127a 9B00     		lsls	r3, r3, #2
 3805 127c 0333     		adds	r3, r3, #3
 3806 127e F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 3807 1280 3D4A     		ldr	r2, .L183+32
 3808 1282 D154     		strb	r1, [r2, r3]
 3809              	.LBE18:
1345:main.c        ****         {
 3810              		.loc 1 1345 0 discriminator 3
 3811 1284 3B6C     		ldr	r3, [r7, #64]
 3812 1286 0133     		adds	r3, r3, #1
 3813 1288 3B64     		str	r3, [r7, #64]
 3814              	.L152:
1345:main.c        ****         {
 3815              		.loc 1 1345 0 is_stmt 0 discriminator 1
 3816 128a 3B6C     		ldr	r3, [r7, #64]
 3817 128c 0B2B     		cmp	r3, #11
 3818 128e DDDD     		ble	.L153
 3819              	.LBE17:
1355:main.c        ****         }
1356:main.c        ****         
1357:main.c        ****         myArray[48] = octave | (voice << 2) | (dualSlider << 3) | (neck << 4);
 3820              		.loc 1 1357 0 is_stmt 1
 3821 1290 3A4B     		ldr	r3, .L183+36
 3822 1292 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3823 1294 9B00     		lsls	r3, r3, #2
 3824 1296 5AB2     		sxtb	r2, r3
 3825 1298 394B     		ldr	r3, .L183+40
 3826 129a 1B68     		ldr	r3, [r3]
 3827 129c 5BB2     		sxtb	r3, r3
 3828 129e 1343     		orrs	r3, r3, r2
 3829 12a0 5AB2     		sxtb	r2, r3
 3830 12a2 384B     		ldr	r3, .L183+44
 3831 12a4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3832 12a6 DB00     		lsls	r3, r3, #3
 3833 12a8 5BB2     		sxtb	r3, r3
 3834 12aa 1343     		orrs	r3, r3, r2
 3835 12ac 5AB2     		sxtb	r2, r3
 3836 12ae 364B     		ldr	r3, .L183+48
 3837 12b0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3838 12b2 1B01     		lsls	r3, r3, #4
 3839 12b4 5BB2     		sxtb	r3, r3
 3840 12b6 1343     		orrs	r3, r3, r2
 3841 12b8 5BB2     		sxtb	r3, r3
 3842 12ba DAB2     		uxtb	r2, r3
 3843 12bc 2E4B     		ldr	r3, .L183+32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 93


 3844 12be 83F83020 		strb	r2, [r3, #48]
 3845              	.LBB19:
1358:main.c        ****         for (int i = 0; i < 4; i++)
 3846              		.loc 1 1358 0
 3847 12c2 0023     		movs	r3, #0
 3848 12c4 FB63     		str	r3, [r7, #60]
 3849 12c6 0AE0     		b	.L154
 3850              	.L155:
1359:main.c        ****         {
1360:main.c        ****             myArray[i+49] = knobs[i];
 3851              		.loc 1 1360 0 discriminator 3
 3852 12c8 FB6B     		ldr	r3, [r7, #60]
 3853 12ca 3133     		adds	r3, r3, #49
 3854 12cc 2F49     		ldr	r1, .L183+52
 3855 12ce FA6B     		ldr	r2, [r7, #60]
 3856 12d0 0A44     		add	r2, r2, r1
 3857 12d2 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3858 12d4 284A     		ldr	r2, .L183+32
 3859 12d6 D154     		strb	r1, [r2, r3]
1358:main.c        ****         for (int i = 0; i < 4; i++)
 3860              		.loc 1 1358 0 discriminator 3
 3861 12d8 FB6B     		ldr	r3, [r7, #60]
 3862 12da 0133     		adds	r3, r3, #1
 3863 12dc FB63     		str	r3, [r7, #60]
 3864              	.L154:
1358:main.c        ****         for (int i = 0; i < 4; i++)
 3865              		.loc 1 1358 0 is_stmt 0 discriminator 1
 3866 12de FB6B     		ldr	r3, [r7, #60]
 3867 12e0 032B     		cmp	r3, #3
 3868 12e2 F1DD     		ble	.L155
 3869              	.LBE19:
1361:main.c        ****         }
1362:main.c        ****         myArray[53] = processed_volumePedal >> 8;
 3870              		.loc 1 1362 0 is_stmt 1
 3871 12e4 2A4B     		ldr	r3, .L183+56
 3872 12e6 B3F90030 		ldrsh	r3, [r3]
 3873 12ea 1B12     		asrs	r3, r3, #8
 3874 12ec 1BB2     		sxth	r3, r3
 3875 12ee DAB2     		uxtb	r2, r3
 3876 12f0 214B     		ldr	r3, .L183+32
 3877 12f2 83F83520 		strb	r2, [r3, #53]
1363:main.c        ****         myArray[54] = processed_volumePedal & 0xff;
 3878              		.loc 1 1363 0
 3879 12f6 264B     		ldr	r3, .L183+56
 3880 12f8 B3F90030 		ldrsh	r3, [r3]
 3881 12fc DAB2     		uxtb	r2, r3
 3882 12fe 1E4B     		ldr	r3, .L183+32
 3883 1300 83F83620 		strb	r2, [r3, #54]
1364:main.c        ****         myArray[55] = patchNum;
 3884              		.loc 1 1364 0
 3885 1304 234B     		ldr	r3, .L183+60
 3886 1306 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 3887 1308 1B4B     		ldr	r3, .L183+32
 3888 130a 83F83720 		strb	r2, [r3, #55]
 3889              	.LBB20:
1365:main.c        ****         for (int i = 0; i < 16; i++)
 3890              		.loc 1 1365 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 94


 3891 130e 0023     		movs	r3, #0
 3892 1310 BB63     		str	r3, [r7, #56]
 3893 1312 0BE0     		b	.L156
 3894              	.L157:
1366:main.c        ****         {
1367:main.c        ****             myArray[i+56] = encoderVal[i];
 3895              		.loc 1 1367 0 discriminator 3
 3896 1314 BB6B     		ldr	r3, [r7, #56]
 3897 1316 3833     		adds	r3, r3, #56
 3898 1318 1249     		ldr	r1, .L183+12
 3899 131a BA6B     		ldr	r2, [r7, #56]
 3900 131c 0A44     		add	r2, r2, r1
 3901 131e 1278     		ldrb	r2, [r2]
 3902 1320 D1B2     		uxtb	r1, r2
 3903 1322 154A     		ldr	r2, .L183+32
 3904 1324 D154     		strb	r1, [r2, r3]
1365:main.c        ****         for (int i = 0; i < 16; i++)
 3905              		.loc 1 1365 0 discriminator 3
 3906 1326 BB6B     		ldr	r3, [r7, #56]
 3907 1328 0133     		adds	r3, r3, #1
 3908 132a BB63     		str	r3, [r7, #56]
 3909              	.L156:
1365:main.c        ****         for (int i = 0; i < 16; i++)
 3910              		.loc 1 1365 0 is_stmt 0 discriminator 1
 3911 132c BB6B     		ldr	r3, [r7, #56]
 3912 132e 0F2B     		cmp	r3, #15
 3913 1330 F0DD     		ble	.L157
 3914              	.LBE20:
 3915              	.LBB21:
1368:main.c        ****         }
1369:main.c        ****         for(int i = 0; i < 74; i++)
 3916              		.loc 1 1369 0 is_stmt 1
 3917 1332 0023     		movs	r3, #0
 3918 1334 7B63     		str	r3, [r7, #52]
 3919 1336 09E0     		b	.L158
 3920              	.L159:
1370:main.c        ****         {
1371:main.c        **** 
1372:main.c        ****             SPIM_1_WriteTxData(myArray[i]);
 3921              		.loc 1 1372 0 discriminator 3
 3922 1338 0F4A     		ldr	r2, .L183+32
 3923 133a 7B6B     		ldr	r3, [r7, #52]
 3924 133c 1344     		add	r3, r3, r2
 3925 133e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 3926 1340 1846     		mov	r0, r3
 3927 1342 FFF7FEFF 		bl	SPIM_1_WriteTxData
1369:main.c        ****         {
 3928              		.loc 1 1369 0 discriminator 3
 3929 1346 7B6B     		ldr	r3, [r7, #52]
 3930 1348 0133     		adds	r3, r3, #1
 3931 134a 7B63     		str	r3, [r7, #52]
 3932              	.L158:
1369:main.c        ****         {
 3933              		.loc 1 1369 0 is_stmt 0 discriminator 1
 3934 134c 7B6B     		ldr	r3, [r7, #52]
 3935 134e 492B     		cmp	r3, #73
 3936 1350 F2DD     		ble	.L159
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 95


 3937              	.LBE21:
1373:main.c        ****         }
1374:main.c        **** 
1375:main.c        ****         //CyDelayUs(400);
1376:main.c        ****         
1377:main.c        ****         
1378:main.c        ****      }
 3938              		.loc 1 1378 0 is_stmt 1
 3939 1352 FEF7D1BF 		b	.L160
 3940              	.L184:
 3941 1356 00BF     		.align	2
 3942              	.L183:
 3943 1358 00000000 		.word	prevStringPitchBend
 3944 135c 00000000 		.word	stringMIDI
 3945 1360 00000000 		.word	encoderNum
 3946 1364 00000000 		.word	encoderVal
 3947 1368 00000000 		.word	USB_check_flag
 3948 136c 00000000 		.word	USB_active
 3949 1370 00000000 		.word	midiSent
 3950 1374 00000000 		.word	midiOverflow
 3951 1378 00000000 		.word	myArray
 3952 137c 00000000 		.word	voice
 3953 1380 00000000 		.word	octave
 3954 1384 00000000 		.word	dualSlider
 3955 1388 00000000 		.word	neck
 3956 138c 00000000 		.word	knobs
 3957 1390 00000000 		.word	processed_volumePedal
 3958 1394 00000000 		.word	patchNum
 3959              		.cfi_endproc
 3960              	.LFE76:
 3961              		.size	main, .-main
 3962              		.section	.text.DmaRxConfiguration,"ax",%progbits
 3963              		.align	2
 3964              		.global	DmaRxConfiguration
 3965              		.thumb
 3966              		.thumb_func
 3967              		.type	DmaRxConfiguration, %function
 3968              	DmaRxConfiguration:
 3969              	.LFB77:
1379:main.c        **** }
1380:main.c        **** 
1381:main.c        **** 
1382:main.c        **** 
1383:main.c        **** void DmaRxConfiguration()
1384:main.c        **** { 
 3970              		.loc 1 1384 0
 3971              		.cfi_startproc
 3972              		@ args = 0, pretend = 0, frame = 0
 3973              		@ frame_needed = 1, uses_anonymous_args = 0
 3974 0000 80B5     		push	{r7, lr}
 3975              		.cfi_def_cfa_offset 8
 3976              		.cfi_offset 7, -8
 3977              		.cfi_offset 14, -4
 3978 0002 00AF     		add	r7, sp, #0
 3979              		.cfi_def_cfa_register 7
1385:main.c        **** 
1386:main.c        ****     //pluck dma
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 96


1387:main.c        ****     rx1Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 3980              		.loc 1 1387 0
 3981 0004 41F6FF73 		movw	r3, #8191
 3982 0008 4FF48042 		mov	r2, #16384
 3983 000c 0121     		movs	r1, #1
 3984 000e 0120     		movs	r0, #1
 3985 0010 FFF7FEFF 		bl	DMA_1_DmaInitialize
 3986 0014 0346     		mov	r3, r0
 3987 0016 1A46     		mov	r2, r3
 3988 0018 334B     		ldr	r3, .L186
 3989 001a 1A70     		strb	r2, [r3]
1388:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1389:main.c        **** 
1390:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
 3990              		.loc 1 1390 0
 3991 001c FFF7FEFF 		bl	CyDmaTdAllocate
 3992 0020 0346     		mov	r3, r0
 3993 0022 1A46     		mov	r2, r3
 3994 0024 314B     		ldr	r3, .L186+4
 3995 0026 1A70     		strb	r2, [r3]
1391:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
 3996              		.loc 1 1391 0
 3997 0028 FFF7FEFF 		bl	CyDmaTdAllocate
 3998 002c 0346     		mov	r3, r0
 3999 002e 1A46     		mov	r2, r3
 4000 0030 2E4B     		ldr	r3, .L186+4
 4001 0032 5A70     		strb	r2, [r3, #1]
1392:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD , TD_INC_DST_ADR | DMA_1__T
 4002              		.loc 1 1392 0
 4003 0034 2D4B     		ldr	r3, .L186+4
 4004 0036 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4005 0038 0223     		movs	r3, #2
 4006 003a FE22     		movs	r2, #254
 4007 003c 1A21     		movs	r1, #26
 4008 003e FFF7FEFF 		bl	CyDmaTdSetConfiguration
1393:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], PLUCK_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_1__TD
 4009              		.loc 1 1393 0
 4010 0042 2A4B     		ldr	r3, .L186+4
 4011 0044 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 4012 0046 0223     		movs	r3, #2
 4013 0048 FE22     		movs	r2, #254
 4014 004a 1A21     		movs	r1, #26
 4015 004c FFF7FEFF 		bl	CyDmaTdSetConfiguration
1394:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
 4016              		.loc 1 1394 0
 4017 0050 264B     		ldr	r3, .L186+4
 4018 0052 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4019 0054 264A     		ldr	r2, .L186+8
 4020 0056 92B2     		uxth	r2, r2
 4021 0058 46F25741 		movw	r1, #25687
 4022 005c 1846     		mov	r0, r3
 4023 005e FFF7FEFF 		bl	CyDmaTdSetAddress
1395:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
 4024              		.loc 1 1395 0
 4025 0062 224B     		ldr	r3, .L186+4
 4026 0064 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4027 0066 234A     		ldr	r2, .L186+12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 97


 4028 0068 92B2     		uxth	r2, r2
 4029 006a 46F25741 		movw	r1, #25687
 4030 006e 1846     		mov	r0, r3
 4031 0070 FFF7FEFF 		bl	CyDmaTdSetAddress
1396:main.c        **** 
1397:main.c        ****     
1398:main.c        ****     
1399:main.c        ****     //bar dma
1400:main.c        ****     rx2Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
 4032              		.loc 1 1400 0
 4033 0074 41F6FF73 		movw	r3, #8191
 4034 0078 4FF48042 		mov	r2, #16384
 4035 007c 0121     		movs	r1, #1
 4036 007e 0120     		movs	r0, #1
 4037 0080 FFF7FEFF 		bl	DMA_2_DmaInitialize
 4038 0084 0346     		mov	r3, r0
 4039 0086 1A46     		mov	r2, r3
 4040 0088 1B4B     		ldr	r3, .L186+16
 4041 008a 1A70     		strb	r2, [r3]
1401:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1402:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
 4042              		.loc 1 1402 0
 4043 008c FFF7FEFF 		bl	CyDmaTdAllocate
 4044 0090 0346     		mov	r3, r0
 4045 0092 1A46     		mov	r2, r3
 4046 0094 194B     		ldr	r3, .L186+20
 4047 0096 1A70     		strb	r2, [r3]
1403:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
 4048              		.loc 1 1403 0
 4049 0098 FFF7FEFF 		bl	CyDmaTdAllocate
 4050 009c 0346     		mov	r3, r0
 4051 009e 1A46     		mov	r2, r3
 4052 00a0 164B     		ldr	r3, .L186+20
 4053 00a2 5A70     		strb	r2, [r3, #1]
1404:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 4054              		.loc 1 1404 0
 4055 00a4 154B     		ldr	r3, .L186+20
 4056 00a6 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 4057 00a8 0623     		movs	r3, #6
 4058 00aa FE22     		movs	r2, #254
 4059 00ac 0C21     		movs	r1, #12
 4060 00ae FFF7FEFF 		bl	CyDmaTdSetConfiguration
1405:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], BAR_BUFFER_SIZE, DMA_DISABLE_TD, TD_INC_DST_ADR | DMA_2__TD_T
 4061              		.loc 1 1405 0
 4062 00b2 124B     		ldr	r3, .L186+20
 4063 00b4 5878     		ldrb	r0, [r3, #1]	@ zero_extendqisi2
 4064 00b6 0623     		movs	r3, #6
 4065 00b8 FE22     		movs	r2, #254
 4066 00ba 0C21     		movs	r1, #12
 4067 00bc FFF7FEFF 		bl	CyDmaTdSetConfiguration
1406:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
 4068              		.loc 1 1406 0
 4069 00c0 0E4B     		ldr	r3, .L186+20
 4070 00c2 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 4071 00c4 0E4A     		ldr	r2, .L186+24
 4072 00c6 92B2     		uxth	r2, r2
 4073 00c8 46F25B51 		movw	r1, #25947
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 98


 4074 00cc 1846     		mov	r0, r3
 4075 00ce FFF7FEFF 		bl	CyDmaTdSetAddress
1407:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
 4076              		.loc 1 1407 0
 4077 00d2 0A4B     		ldr	r3, .L186+20
 4078 00d4 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 4079 00d6 0B4A     		ldr	r2, .L186+28
 4080 00d8 92B2     		uxth	r2, r2
 4081 00da 46F25B51 		movw	r1, #25947
 4082 00de 1846     		mov	r0, r3
 4083 00e0 FFF7FEFF 		bl	CyDmaTdSetAddress
1408:main.c        **** 
1409:main.c        **** 
1410:main.c        ****     /*
1411:main.c        ****     rx1Channel = DMA_2_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
1412:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1413:main.c        **** 
1414:main.c        ****     rx1TD[0] = CyDmaTdAllocate();
1415:main.c        ****     rx1TD[1] = CyDmaTdAllocate();
1416:main.c        **** 
1417:main.c        ****     CyDmaTdSetConfiguration(rx1TD[0], BAR_BUFFER_SIZE, rx1TD[1] , TD_INC_DST_ADR | DMA_2__TD_TERMOU
1418:main.c        ****     CyDmaTdSetConfiguration(rx1TD[1], BAR_BUFFER_SIZE, rx1TD[0] , TD_INC_DST_ADR | DMA_2__TD_TERMOU
1419:main.c        ****     CyDmaTdSetAddress(rx1TD[0], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[0]));
1420:main.c        ****     CyDmaTdSetAddress(rx1TD[1], LO16((uint32) SPIS_2_RXDATA_PTR), LO16((uint32) rxBufferBar[1]));
1421:main.c        ****     CyDmaChSetInitialTd(rx1Channel, rx1TD[0]);
1422:main.c        ****     CyDmaChEnable(rx1Channel, 1);
1423:main.c        ****     
1424:main.c        ****     
1425:main.c        ****     rx2Channel = DMA_1_DmaInitialize(DMA_RX_BYTES_PER_BURST, DMA_RX_REQUEST_PER_BURST,
1426:main.c        ****                                      HI16(DMA_RX_SRC_BASE), HI16(DMA_RX_DST_BASE));
1427:main.c        **** 
1428:main.c        ****     rx2TD[0] = CyDmaTdAllocate();
1429:main.c        ****     rx2TD[1] = CyDmaTdAllocate();
1430:main.c        **** 
1431:main.c        ****     CyDmaTdSetConfiguration(rx2TD[0], PLUCK_BUFFER_SIZE, rx2TD[1] , TD_INC_DST_ADR | DMA_1__TD_TERM
1432:main.c        ****     CyDmaTdSetConfiguration(rx2TD[1], PLUCK_BUFFER_SIZE, rx2TD[0] , TD_INC_DST_ADR | DMA_1__TD_TERM
1433:main.c        ****     CyDmaTdSetAddress(rx2TD[0], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[0]));
1434:main.c        ****     CyDmaTdSetAddress(rx2TD[1], LO16((uint32) SPIS_1_RXDATA_PTR), LO16((uint32) rxBufferPluck[1]));
1435:main.c        ****     CyDmaChSetInitialTd(rx2Channel, rx2TD[0]);
1436:main.c        ****     CyDmaChEnable(rx2Channel, 1);
1437:main.c        **** */
1438:main.c        **** }
 4084              		.loc 1 1438 0
 4085 00e4 00BF     		nop
 4086 00e6 80BD     		pop	{r7, pc}
 4087              	.L187:
 4088              		.align	2
 4089              	.L186:
 4090 00e8 00000000 		.word	rx1Channel
 4091 00ec 00000000 		.word	rx1TD
 4092 00f0 00000000 		.word	rxBufferPluck
 4093 00f4 1A000000 		.word	rxBufferPluck+26
 4094 00f8 00000000 		.word	rx2Channel
 4095 00fc 00000000 		.word	rx2TD
 4096 0100 00000000 		.word	rxBufferBar
 4097 0104 0C000000 		.word	rxBufferBar+12
 4098              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 99


 4099              	.LFE77:
 4100              		.size	DmaRxConfiguration, .-DmaRxConfiguration
 4101              		.section	.text.I2C_MasterWriteBlocking,"ax",%progbits
 4102              		.align	2
 4103              		.global	I2C_MasterWriteBlocking
 4104              		.thumb
 4105              		.thumb_func
 4106              		.type	I2C_MasterWriteBlocking, %function
 4107              	I2C_MasterWriteBlocking:
 4108              	.LFB78:
1439:main.c        **** uint8 I2C_MasterWriteBlocking(uint8 i2CAddr, uint16 nbytes, uint8_t mode)
1440:main.c        **** {
 4109              		.loc 1 1440 0
 4110              		.cfi_startproc
 4111              		@ args = 0, pretend = 0, frame = 16
 4112              		@ frame_needed = 1, uses_anonymous_args = 0
 4113 0000 80B5     		push	{r7, lr}
 4114              		.cfi_def_cfa_offset 8
 4115              		.cfi_offset 7, -8
 4116              		.cfi_offset 14, -4
 4117 0002 84B0     		sub	sp, sp, #16
 4118              		.cfi_def_cfa_offset 24
 4119 0004 00AF     		add	r7, sp, #0
 4120              		.cfi_def_cfa_register 7
 4121 0006 0346     		mov	r3, r0
 4122 0008 FB71     		strb	r3, [r7, #7]
 4123 000a 0B46     		mov	r3, r1	@ movhi
 4124 000c BB80     		strh	r3, [r7, #4]	@ movhi
 4125 000e 1346     		mov	r3, r2
 4126 0010 BB71     		strb	r3, [r7, #6]
1441:main.c        ****     uint8 volatile status;
1442:main.c        ****     uint32_t timeout = 50000;
 4127              		.loc 1 1442 0
 4128 0012 4CF25033 		movw	r3, #50000
 4129 0016 FB60     		str	r3, [r7, #12]
1443:main.c        ****     status = I2C_1_MasterClearStatus();
 4130              		.loc 1 1443 0
 4131 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 4132 001c 0346     		mov	r3, r0
 4133 001e FB72     		strb	r3, [r7, #11]
1444:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 4134              		.loc 1 1444 0
 4135 0020 FB7A     		ldrb	r3, [r7, #11]
 4136 0022 DBB2     		uxtb	r3, r3
 4137 0024 5BB2     		sxtb	r3, r3
 4138 0026 002B     		cmp	r3, #0
 4139 0028 32DB     		blt	.L189
1445:main.c        ****     {
1446:main.c        ****         status = I2C_1_MasterWriteBuf(i2CAddr, (uint8 *)&I2Cbuff1, nbytes,
 4140              		.loc 1 1446 0
 4141 002a BB88     		ldrh	r3, [r7, #4]	@ movhi
 4142 002c DAB2     		uxtb	r2, r3
 4143 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 4144 0030 F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4145 0032 1A49     		ldr	r1, .L195
 4146 0034 FFF7FEFF 		bl	I2C_1_MasterWriteBuf
 4147 0038 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 100


 4148 003a FB72     		strb	r3, [r7, #11]
1447:main.c        ****                                      mode);
1448:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 4149              		.loc 1 1448 0
 4150 003c FB7A     		ldrb	r3, [r7, #11]
 4151 003e DBB2     		uxtb	r3, r3
 4152 0040 002B     		cmp	r3, #0
 4153 0042 21D1     		bne	.L190
 4154              	.L193:
1449:main.c        ****         {
1450:main.c        ****             /* wait for write complete and no error */
1451:main.c        ****             do
1452:main.c        ****             {
1453:main.c        ****                 status = I2C_1_MasterStatus();
 4155              		.loc 1 1453 0
 4156 0044 FFF7FEFF 		bl	I2C_1_MasterStatus
 4157 0048 0346     		mov	r3, r0
 4158 004a FB72     		strb	r3, [r7, #11]
1454:main.c        ****                 timeout--;
 4159              		.loc 1 1454 0
 4160 004c FB68     		ldr	r3, [r7, #12]
 4161 004e 013B     		subs	r3, r3, #1
 4162 0050 FB60     		str	r3, [r7, #12]
1455:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 4163              		.loc 1 1455 0
 4164 0052 FB7A     		ldrb	r3, [r7, #11]
 4165 0054 DBB2     		uxtb	r3, r3
 4166 0056 802B     		cmp	r3, #128
 4167 0058 01D1     		bne	.L191
1456:main.c        ****                 {
1457:main.c        ****                     I2C_reset();
 4168              		.loc 1 1457 0
 4169 005a FFF7FEFF 		bl	I2C_reset
 4170              	.L191:
1458:main.c        ****                 }
1459:main.c        ****                 if (timeout == 0)
 4171              		.loc 1 1459 0
 4172 005e FB68     		ldr	r3, [r7, #12]
 4173 0060 002B     		cmp	r3, #0
 4174 0062 03D1     		bne	.L192
1460:main.c        ****                 {
1461:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 4175              		.loc 1 1461 0
 4176 0064 8023     		movs	r3, #128
 4177 0066 FB72     		strb	r3, [r7, #11]
1462:main.c        ****                     I2C_reset();
 4178              		.loc 1 1462 0
 4179 0068 FFF7FEFF 		bl	I2C_reset
 4180              	.L192:
1463:main.c        ****                 }
1464:main.c        ****                 /*
1465:main.c        ****                 if (status == 0)
1466:main.c        ****                 {
1467:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
1468:main.c        ****                     I2C_reset();
1469:main.c        ****                 }
1470:main.c        ****                 */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 101


1471:main.c        ****             } while(((status & (I2C_1_MSTAT_WR_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 4181              		.loc 1 1471 0
 4182 006c FB7A     		ldrb	r3, [r7, #11]
 4183 006e DBB2     		uxtb	r3, r3
 4184 0070 03F08203 		and	r3, r3, #130
 4185 0074 002B     		cmp	r3, #0
 4186 0076 0BD1     		bne	.L189
 4187              		.loc 1 1471 0 is_stmt 0 discriminator 1
 4188 0078 FB7A     		ldrb	r3, [r7, #11]
 4189 007a DBB2     		uxtb	r3, r3
 4190 007c 002B     		cmp	r3, #0
 4191 007e 07D0     		beq	.L189
 4192              		.loc 1 1471 0 discriminator 2
 4193 0080 FB68     		ldr	r3, [r7, #12]
 4194 0082 002B     		cmp	r3, #0
 4195 0084 DED1     		bne	.L193
 4196 0086 03E0     		b	.L189
 4197              	.L190:
1472:main.c        ****         }
1473:main.c        ****         else
1474:main.c        ****         {
1475:main.c        ****             /* translate from I2CM_MasterWriteBuf() error output to
1476:main.c        ****             *  I2CM_MasterStatus() error output */
1477:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 4198              		.loc 1 1477 0 is_stmt 1
 4199 0088 8023     		movs	r3, #128
 4200 008a FB72     		strb	r3, [r7, #11]
1478:main.c        ****             I2C_reset();
 4201              		.loc 1 1478 0
 4202 008c FFF7FEFF 		bl	I2C_reset
 4203              	.L189:
1479:main.c        ****         } 
1480:main.c        ****     }  
1481:main.c        ****     return status;
 4204              		.loc 1 1481 0
 4205 0090 FB7A     		ldrb	r3, [r7, #11]
 4206 0092 DBB2     		uxtb	r3, r3
1482:main.c        **** }
 4207              		.loc 1 1482 0
 4208 0094 1846     		mov	r0, r3
 4209 0096 1037     		adds	r7, r7, #16
 4210              		.cfi_def_cfa_offset 8
 4211 0098 BD46     		mov	sp, r7
 4212              		.cfi_def_cfa_register 13
 4213              		@ sp needed
 4214 009a 80BD     		pop	{r7, pc}
 4215              	.L196:
 4216              		.align	2
 4217              	.L195:
 4218 009c 00000000 		.word	I2Cbuff1
 4219              		.cfi_endproc
 4220              	.LFE78:
 4221              		.size	I2C_MasterWriteBlocking, .-I2C_MasterWriteBlocking
 4222              		.section	.text.I2C_MasterReadBlocking,"ax",%progbits
 4223              		.align	2
 4224              		.global	I2C_MasterReadBlocking
 4225              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 102


 4226              		.thumb_func
 4227              		.type	I2C_MasterReadBlocking, %function
 4228              	I2C_MasterReadBlocking:
 4229              	.LFB79:
1483:main.c        **** 
1484:main.c        **** uint8 I2C_MasterReadBlocking(uint8 i2CAddr, uint8 nbytes, uint8_t mode)
1485:main.c        **** {
 4230              		.loc 1 1485 0
 4231              		.cfi_startproc
 4232              		@ args = 0, pretend = 0, frame = 16
 4233              		@ frame_needed = 1, uses_anonymous_args = 0
 4234 0000 80B5     		push	{r7, lr}
 4235              		.cfi_def_cfa_offset 8
 4236              		.cfi_offset 7, -8
 4237              		.cfi_offset 14, -4
 4238 0002 84B0     		sub	sp, sp, #16
 4239              		.cfi_def_cfa_offset 24
 4240 0004 00AF     		add	r7, sp, #0
 4241              		.cfi_def_cfa_register 7
 4242 0006 0346     		mov	r3, r0
 4243 0008 FB71     		strb	r3, [r7, #7]
 4244 000a 0B46     		mov	r3, r1
 4245 000c BB71     		strb	r3, [r7, #6]
 4246 000e 1346     		mov	r3, r2
 4247 0010 7B71     		strb	r3, [r7, #5]
1486:main.c        ****     uint8 volatile status;
1487:main.c        ****     uint32_t timeout = 50000;
 4248              		.loc 1 1487 0
 4249 0012 4CF25033 		movw	r3, #50000
 4250 0016 FB60     		str	r3, [r7, #12]
1488:main.c        ****     status = I2C_1_MasterClearStatus();
 4251              		.loc 1 1488 0
 4252 0018 FFF7FEFF 		bl	I2C_1_MasterClearStatus
 4253 001c 0346     		mov	r3, r0
 4254 001e FB72     		strb	r3, [r7, #11]
1489:main.c        ****     if(!(status & I2C_1_MSTAT_ERR_XFER))
 4255              		.loc 1 1489 0
 4256 0020 FB7A     		ldrb	r3, [r7, #11]
 4257 0022 DBB2     		uxtb	r3, r3
 4258 0024 5BB2     		sxtb	r3, r3
 4259 0026 002B     		cmp	r3, #0
 4260 0028 37DB     		blt	.L198
1490:main.c        ****     {
1491:main.c        ****         status = I2C_1_MasterReadBuf(i2CAddr,
 4261              		.loc 1 1491 0
 4262 002a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 4263 002c BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
 4264 002e F879     		ldrb	r0, [r7, #7]	@ zero_extendqisi2
 4265 0030 1D49     		ldr	r1, .L204
 4266 0032 FFF7FEFF 		bl	I2C_1_MasterReadBuf
 4267 0036 0346     		mov	r3, r0
 4268 0038 FB72     		strb	r3, [r7, #11]
1492:main.c        ****                                    (uint8 *)&(I2Cbuff2),
1493:main.c        ****                                     nbytes, mode); 
1494:main.c        ****         if(status == I2C_1_MSTR_NO_ERROR)
 4269              		.loc 1 1494 0
 4270 003a FB7A     		ldrb	r3, [r7, #11]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 103


 4271 003c DBB2     		uxtb	r3, r3
 4272 003e 002B     		cmp	r3, #0
 4273 0040 27D1     		bne	.L199
 4274              	.L202:
1495:main.c        ****         {
1496:main.c        ****             /* wait for read complete and no error */
1497:main.c        ****             do
1498:main.c        ****             {
1499:main.c        ****                 status = I2C_1_MasterStatus();
 4275              		.loc 1 1499 0
 4276 0042 FFF7FEFF 		bl	I2C_1_MasterStatus
 4277 0046 0346     		mov	r3, r0
 4278 0048 FB72     		strb	r3, [r7, #11]
1500:main.c        ****                 timeout--;
 4279              		.loc 1 1500 0
 4280 004a FB68     		ldr	r3, [r7, #12]
 4281 004c 013B     		subs	r3, r3, #1
 4282 004e FB60     		str	r3, [r7, #12]
1501:main.c        ****                 if (status == I2C_1_MSTAT_ERR_XFER)
 4283              		.loc 1 1501 0
 4284 0050 FB7A     		ldrb	r3, [r7, #11]
 4285 0052 DBB2     		uxtb	r3, r3
 4286 0054 802B     		cmp	r3, #128
 4287 0056 07D1     		bne	.L200
1502:main.c        ****                 {
1503:main.c        ****                     I2C_1_GENERATE_STOP_MANUAL;
 4288              		.loc 1 1503 0
 4289 0058 144B     		ldr	r3, .L204+4
 4290 005a 1022     		movs	r2, #16
 4291 005c 1A70     		strb	r2, [r3]
 4292 005e 144B     		ldr	r3, .L204+8
 4293 0060 0422     		movs	r2, #4
 4294 0062 1A70     		strb	r2, [r3]
1504:main.c        ****                     I2C_reset();
 4295              		.loc 1 1504 0
 4296 0064 FFF7FEFF 		bl	I2C_reset
 4297              	.L200:
1505:main.c        ****                 }
1506:main.c        ****                 if (timeout == 0)
 4298              		.loc 1 1506 0
 4299 0068 FB68     		ldr	r3, [r7, #12]
 4300 006a 002B     		cmp	r3, #0
 4301 006c 03D1     		bne	.L201
1507:main.c        ****                 {
1508:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
 4302              		.loc 1 1508 0
 4303 006e 8023     		movs	r3, #128
 4304 0070 FB72     		strb	r3, [r7, #11]
1509:main.c        ****                     I2C_reset();
 4305              		.loc 1 1509 0
 4306 0072 FFF7FEFF 		bl	I2C_reset
 4307              	.L201:
1510:main.c        ****                 }
1511:main.c        ****                 /*
1512:main.c        ****                 if (status == 0)
1513:main.c        ****                 {
1514:main.c        ****                     status = I2C_1_MSTAT_ERR_XFER;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 104


1515:main.c        ****                     I2C_reset();
1516:main.c        ****                 }
1517:main.c        ****                 */
1518:main.c        ****             } while(((status & (I2C_1_MSTAT_RD_CMPLT | I2C_1_MSTAT_ERR_XFER)) == 0u) && (status != 
 4308              		.loc 1 1518 0
 4309 0076 FB7A     		ldrb	r3, [r7, #11]
 4310 0078 DBB2     		uxtb	r3, r3
 4311 007a 03F08103 		and	r3, r3, #129
 4312 007e 002B     		cmp	r3, #0
 4313 0080 0BD1     		bne	.L198
 4314              		.loc 1 1518 0 is_stmt 0 discriminator 1
 4315 0082 FB7A     		ldrb	r3, [r7, #11]
 4316 0084 DBB2     		uxtb	r3, r3
 4317 0086 002B     		cmp	r3, #0
 4318 0088 07D0     		beq	.L198
 4319              		.loc 1 1518 0 discriminator 2
 4320 008a FB68     		ldr	r3, [r7, #12]
 4321 008c 002B     		cmp	r3, #0
 4322 008e D8D1     		bne	.L202
 4323 0090 03E0     		b	.L198
 4324              	.L199:
1519:main.c        ****         }
1520:main.c        ****         else
1521:main.c        ****         {
1522:main.c        ****             /* translate from I2CM_MasterReadBuf() error output to
1523:main.c        ****             *  I2CM_MasterStatus() error output */
1524:main.c        ****             status = I2C_1_MSTAT_ERR_XFER;
 4325              		.loc 1 1524 0 is_stmt 1
 4326 0092 8023     		movs	r3, #128
 4327 0094 FB72     		strb	r3, [r7, #11]
1525:main.c        ****             I2C_reset();
 4328              		.loc 1 1525 0
 4329 0096 FFF7FEFF 		bl	I2C_reset
 4330              	.L198:
1526:main.c        ****         }
1527:main.c        ****     }
1528:main.c        ****     return status;
 4331              		.loc 1 1528 0
 4332 009a FB7A     		ldrb	r3, [r7, #11]
 4333 009c DBB2     		uxtb	r3, r3
1529:main.c        **** }
 4334              		.loc 1 1529 0
 4335 009e 1846     		mov	r0, r3
 4336 00a0 1037     		adds	r7, r7, #16
 4337              		.cfi_def_cfa_offset 8
 4338 00a2 BD46     		mov	sp, r7
 4339              		.cfi_def_cfa_register 13
 4340              		@ sp needed
 4341 00a4 80BD     		pop	{r7, pc}
 4342              	.L205:
 4343 00a6 00BF     		.align	2
 4344              	.L204:
 4345 00a8 00000000 		.word	I2Cbuff2
 4346 00ac D9490040 		.word	1073760729
 4347 00b0 D7490040 		.word	1073760727
 4348              		.cfi_endproc
 4349              	.LFE79:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 105


 4350              		.size	I2C_MasterReadBlocking, .-I2C_MasterReadBlocking
 4351              		.section	.text.I2C_reset,"ax",%progbits
 4352              		.align	2
 4353              		.global	I2C_reset
 4354              		.thumb
 4355              		.thumb_func
 4356              		.type	I2C_reset, %function
 4357              	I2C_reset:
 4358              	.LFB80:
1530:main.c        **** 
1531:main.c        **** void I2C_reset(void)
1532:main.c        **** {
 4359              		.loc 1 1532 0
 4360              		.cfi_startproc
 4361              		@ args = 0, pretend = 0, frame = 0
 4362              		@ frame_needed = 1, uses_anonymous_args = 0
 4363              		@ link register save eliminated.
 4364 0000 80B4     		push	{r7}
 4365              		.cfi_def_cfa_offset 4
 4366              		.cfi_offset 7, -4
 4367 0002 00AF     		add	r7, sp, #0
 4368              		.cfi_def_cfa_register 7
1533:main.c        ****     //I2C_1_GENERATE_STOP_MANUAL;
1534:main.c        ****     //I2C_1_state = I2C_1_SM_EXIT_IDLE;
1535:main.c        ****     //CyDelay(100);
1536:main.c        ****     ///I2C_1_Stop();
1537:main.c        ****     //CyDelay(100);
1538:main.c        ****     //I2C_1_Init();
1539:main.c        ****     //CyDelay(100);
1540:main.c        ****     //I2C_1_Start();
1541:main.c        ****     //CyDelay(100);
1542:main.c        ****     /*
1543:main.c        ****             if (mux_states[main_counter][0] != last_mux)
1544:main.c        ****         {
1545:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][0];
1546:main.c        ****             uint8_t status = I2C_MasterWriteBlocking(0x71, 1, I2C_1_MODE_COMPLETE_XFER);
1547:main.c        ****         }
1548:main.c        ****         last_mux = mux_states[main_counter][0];
1549:main.c        ****         
1550:main.c        ****         CyDelayUs(10);
1551:main.c        ****         if (mux_states[main_counter][0] == 0)
1552:main.c        ****         {
1553:main.c        ****             I2Cbuff1[0] = 1<<mux_states[main_counter][1];
1554:main.c        ****             status = I2C_MasterWriteBlocking(0x70, 1, I2C_1_MODE_COMPLETE_XFER);
1555:main.c        ****         }
1556:main.c        ****         main_counter = 0;
1557:main.c        ****     */
1558:main.c        **** }
 4369              		.loc 1 1558 0
 4370 0004 00BF     		nop
 4371 0006 BD46     		mov	sp, r7
 4372              		.cfi_def_cfa_register 13
 4373              		@ sp needed
 4374 0008 80BC     		pop	{r7}
 4375              		.cfi_restore 7
 4376              		.cfi_def_cfa_offset 0
 4377 000a 7047     		bx	lr
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 106


 4378              		.cfi_endproc
 4379              	.LFE80:
 4380              		.size	I2C_reset, .-I2C_reset
 4381              		.section	.text.checkUSB_Vbus,"ax",%progbits
 4382              		.align	2
 4383              		.global	checkUSB_Vbus
 4384              		.thumb
 4385              		.thumb_func
 4386              		.type	checkUSB_Vbus, %function
 4387              	checkUSB_Vbus:
 4388              	.LFB81:
1559:main.c        **** 
1560:main.c        **** void checkUSB_Vbus(void)
1561:main.c        **** {
 4389              		.loc 1 1561 0
 4390              		.cfi_startproc
 4391              		@ args = 0, pretend = 0, frame = 0
 4392              		@ frame_needed = 1, uses_anonymous_args = 0
 4393 0000 80B5     		push	{r7, lr}
 4394              		.cfi_def_cfa_offset 8
 4395              		.cfi_offset 7, -8
 4396              		.cfi_offset 14, -4
 4397 0002 00AF     		add	r7, sp, #0
 4398              		.cfi_def_cfa_register 7
1562:main.c        ****    if (USB_VBusPresent() == 0)
 4399              		.loc 1 1562 0
 4400 0004 FFF7FEFF 		bl	USB_VBusPresent
 4401 0008 0346     		mov	r3, r0
 4402 000a 002B     		cmp	r3, #0
 4403 000c 05D1     		bne	.L208
1563:main.c        ****    {
1564:main.c        ****        USB_Stop();
 4404              		.loc 1 1564 0
 4405 000e FFF7FEFF 		bl	USB_Stop
1565:main.c        ****        //LED_PWM_Write(0);
1566:main.c        ****        USB_active = 0; 
 4406              		.loc 1 1566 0
 4407 0012 0E4B     		ldr	r3, .L211
 4408 0014 0022     		movs	r2, #0
 4409 0016 1A70     		strb	r2, [r3]
 4410 0018 13E0     		b	.L209
 4411              	.L208:
1567:main.c        ****         //CySoftwareReset();
1568:main.c        ****    }
1569:main.c        ****    else if (USB_active == 0 )
 4412              		.loc 1 1569 0
 4413 001a 0C4B     		ldr	r3, .L211
 4414 001c 1B78     		ldrb	r3, [r3]
 4415 001e DBB2     		uxtb	r3, r3
 4416 0020 002B     		cmp	r3, #0
 4417 0022 0ED1     		bne	.L209
1570:main.c        ****    {
1571:main.c        ****        USB_Start(0u, USB_3V_OPERATION ); 
 4418              		.loc 1 1571 0
 4419 0024 0021     		movs	r1, #0
 4420 0026 0020     		movs	r0, #0
 4421 0028 FFF7FEFF 		bl	USB_Start
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 107


1572:main.c        ****         while (0u == USB_GetConfiguration());
 4422              		.loc 1 1572 0
 4423 002c 00BF     		nop
 4424              	.L210:
 4425              		.loc 1 1572 0 is_stmt 0 discriminator 1
 4426 002e FFF7FEFF 		bl	USB_GetConfiguration
 4427 0032 0346     		mov	r3, r0
 4428 0034 002B     		cmp	r3, #0
 4429 0036 FAD0     		beq	.L210
1573:main.c        ****         USB_MIDI_EP_Init();
 4430              		.loc 1 1573 0 is_stmt 1
 4431 0038 FFF7FEFF 		bl	USB_MIDI_Init
1574:main.c        ****        //LED_PWM_Write(255);
1575:main.c        ****        USB_active = 1;
 4432              		.loc 1 1575 0
 4433 003c 034B     		ldr	r3, .L211
 4434 003e 0122     		movs	r2, #1
 4435 0040 1A70     		strb	r2, [r3]
 4436              	.L209:
1576:main.c        ****    }
1577:main.c        ****    USB_check_flag = 0;
 4437              		.loc 1 1577 0
 4438 0042 034B     		ldr	r3, .L211+4
 4439 0044 0022     		movs	r2, #0
 4440 0046 1A70     		strb	r2, [r3]
1578:main.c        **** }
 4441              		.loc 1 1578 0
 4442 0048 00BF     		nop
 4443 004a 80BD     		pop	{r7, pc}
 4444              	.L212:
 4445              		.align	2
 4446              	.L211:
 4447 004c 00000000 		.word	USB_active
 4448 0050 00000000 		.word	USB_check_flag
 4449              		.cfi_endproc
 4450              	.LFE81:
 4451              		.size	checkUSB_Vbus, .-checkUSB_Vbus
 4452              		.section	.text.USB_service,"ax",%progbits
 4453              		.align	2
 4454              		.global	USB_service
 4455              		.thumb
 4456              		.thumb_func
 4457              		.type	USB_service, %function
 4458              	USB_service:
 4459              	.LFB82:
1579:main.c        **** 
1580:main.c        **** 
1581:main.c        **** 
1582:main.c        **** void USB_service(void)
1583:main.c        **** {
 4460              		.loc 1 1583 0
 4461              		.cfi_startproc
 4462              		@ args = 0, pretend = 0, frame = 0
 4463              		@ frame_needed = 1, uses_anonymous_args = 0
 4464 0000 80B5     		push	{r7, lr}
 4465              		.cfi_def_cfa_offset 8
 4466              		.cfi_offset 7, -8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 108


 4467              		.cfi_offset 14, -4
 4468 0002 00AF     		add	r7, sp, #0
 4469              		.cfi_def_cfa_register 7
1584:main.c        ****     if(USB_IsConfigurationChanged() != 0u)
 4470              		.loc 1 1584 0
 4471 0004 FFF7FEFF 		bl	USB_IsConfigurationChanged
 4472 0008 0346     		mov	r3, r0
 4473 000a 002B     		cmp	r3, #0
 4474 000c 10D0     		beq	.L214
1585:main.c        ****     {
1586:main.c        ****         if(USB_GetConfiguration() != 0u)   
 4475              		.loc 1 1586 0
 4476 000e FFF7FEFF 		bl	USB_GetConfiguration
 4477 0012 0346     		mov	r3, r0
 4478 0014 002B     		cmp	r3, #0
 4479 0016 0BD0     		beq	.L214
1587:main.c        ****         {
1588:main.c        ****            // Sleep_isr_StartEx(SleepIsr_function);
1589:main.c        ****             
1590:main.c        ****             //SleepTimer_Start();
1591:main.c        ****         	
1592:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 4480              		.loc 1 1592 0
 4481 0018 154B     		ldr	r3, .L219
 4482 001a 1B78     		ldrb	r3, [r3]
 4483 001c DBB2     		uxtb	r3, r3
 4484 001e 002B     		cmp	r3, #0
 4485 0020 06D0     		beq	.L214
 4486              		.loc 1 1592 0 is_stmt 0 discriminator 1
 4487 0022 FFF7FEFF 		bl	USB_VBusPresent
 4488 0026 0346     		mov	r3, r0
 4489 0028 002B     		cmp	r3, #0
 4490 002a 01D0     		beq	.L214
1593:main.c        ****             {
1594:main.c        ****                 USB_MIDI_EP_Init();
 4491              		.loc 1 1594 0 is_stmt 1
 4492 002c FFF7FEFF 		bl	USB_MIDI_Init
 4493              	.L214:
1595:main.c        ****             }
1596:main.c        ****         }
1597:main.c        ****         else
1598:main.c        ****         {
1599:main.c        ****             //SleepTimer_Stop();
1600:main.c        ****         }    
1601:main.c        ****     }        
1602:main.c        ****     
1603:main.c        ****     if(USB_GetConfiguration() != 0u)    
 4494              		.loc 1 1603 0
 4495 0030 FFF7FEFF 		bl	USB_GetConfiguration
 4496 0034 0346     		mov	r3, r0
 4497 0036 002B     		cmp	r3, #0
 4498 0038 17D0     		beq	.L218
1604:main.c        ****     {
1605:main.c        ****         
1606:main.c        ****         #if(USB_EP_MM != USB__EP_DMAAUTO) 
1607:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 4499              		.loc 1 1607 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 109


 4500 003a 0D4B     		ldr	r3, .L219
 4501 003c 1B78     		ldrb	r3, [r3]
 4502 003e DBB2     		uxtb	r3, r3
 4503 0040 002B     		cmp	r3, #0
 4504 0042 06D0     		beq	.L217
 4505              		.loc 1 1607 0 is_stmt 0 discriminator 1
 4506 0044 FFF7FEFF 		bl	USB_VBusPresent
 4507 0048 0346     		mov	r3, r0
 4508 004a 002B     		cmp	r3, #0
 4509 004c 01D0     		beq	.L217
1608:main.c        ****             {
1609:main.c        ****                 USB_MIDI_IN_Service();
 4510              		.loc 1 1609 0 is_stmt 1
 4511 004e FFF7FEFF 		bl	USB_MIDI_IN_Service
 4512              	.L217:
1610:main.c        ****             }
1611:main.c        ****         #endif
1612:main.c        **** 
1613:main.c        ****         #if(USB_EP_MM != USB__EP_DMAAUTO) 
1614:main.c        ****             if ((USB_active) && (USB_VBusPresent()))
 4513              		.loc 1 1614 0
 4514 0052 074B     		ldr	r3, .L219
 4515 0054 1B78     		ldrb	r3, [r3]
 4516 0056 DBB2     		uxtb	r3, r3
 4517 0058 002B     		cmp	r3, #0
 4518 005a 06D0     		beq	.L218
 4519              		.loc 1 1614 0 is_stmt 0 discriminator 1
 4520 005c FFF7FEFF 		bl	USB_VBusPresent
 4521 0060 0346     		mov	r3, r0
 4522 0062 002B     		cmp	r3, #0
 4523 0064 01D0     		beq	.L218
1615:main.c        ****             {
1616:main.c        ****                 USB_MIDI_OUT_Service();
 4524              		.loc 1 1616 0 is_stmt 1
 4525 0066 FFF7FEFF 		bl	USB_MIDI_OUT_Service
 4526              	.L218:
1617:main.c        ****             }
1618:main.c        ****         #endif
1619:main.c        **** 
1620:main.c        **** /*
1621:main.c        ****         if( usbActivityCounter >= 2u ) 
1622:main.c        ****         {
1623:main.c        **** 
1624:main.c        ****             USB_Suspend();
1625:main.c        **** 
1626:main.c        ****             CyPmSaveClocks();
1627:main.c        ****             CyPmSleep(PM_SLEEP_TIME_NONE, PM_SLEEP_SRC_PICU);
1628:main.c        ****             CyPmRestoreClocks();
1629:main.c        **** 
1630:main.c        ****             USB_Resume();
1631:main.c        ****             USB_MIDI_EP_Init();
1632:main.c        ****             
1633:main.c        ****             usbActivityCounter = 0u; 
1634:main.c        **** 
1635:main.c        ****         }
1636:main.c        ****         */
1637:main.c        ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 110


1638:main.c        ****         
1639:main.c        **** }
 4527              		.loc 1 1639 0
 4528 006a 00BF     		nop
 4529 006c 80BD     		pop	{r7, pc}
 4530              	.L220:
 4531 006e 00BF     		.align	2
 4532              	.L219:
 4533 0070 00000000 		.word	USB_active
 4534              		.cfi_endproc
 4535              	.LFE82:
 4536              		.size	USB_service, .-USB_service
 4537              		.section	.text.log2f_approx,"ax",%progbits
 4538              		.align	2
 4539              		.global	log2f_approx
 4540              		.thumb
 4541              		.thumb_func
 4542              		.type	log2f_approx, %function
 4543              	log2f_approx:
 4544              	.LFB83:
1640:main.c        **** 
1641:main.c        **** // This is a fast approximation to log2()
1642:main.c        **** // Y = C[0]*F*F*F + C[1]*F*F + C[2]*F + C[3] + E;
1643:main.c        **** float log2f_approx(float X) {
 4545              		.loc 1 1643 0
 4546              		.cfi_startproc
 4547              		@ args = 0, pretend = 0, frame = 24
 4548              		@ frame_needed = 1, uses_anonymous_args = 0
 4549 0000 80B5     		push	{r7, lr}
 4550              		.cfi_def_cfa_offset 8
 4551              		.cfi_offset 7, -8
 4552              		.cfi_offset 14, -4
 4553 0002 86B0     		sub	sp, sp, #24
 4554              		.cfi_def_cfa_offset 32
 4555 0004 00AF     		add	r7, sp, #0
 4556              		.cfi_def_cfa_register 7
 4557 0006 7860     		str	r0, [r7, #4]	@ float
1644:main.c        ****   float Y, F;
1645:main.c        ****   int E;
1646:main.c        ****   F = frexpf(fabsf(X), &E);
 4558              		.loc 1 1646 0
 4559 0008 7B68     		ldr	r3, [r7, #4]
 4560 000a 23F00043 		bic	r3, r3, #-2147483648
 4561 000e 07F10C02 		add	r2, r7, #12
 4562 0012 1146     		mov	r1, r2
 4563 0014 1846     		mov	r0, r3
 4564 0016 FFF7FEFF 		bl	frexpf
 4565 001a 7861     		str	r0, [r7, #20]	@ float
1647:main.c        ****   Y = 1.23149591368684f;
 4566              		.loc 1 1647 0
 4567 001c 1A4B     		ldr	r3, .L223
 4568 001e 3B61     		str	r3, [r7, #16]	@ float
1648:main.c        ****   Y *= F;
 4569              		.loc 1 1648 0
 4570 0020 7969     		ldr	r1, [r7, #20]	@ float
 4571 0022 3869     		ldr	r0, [r7, #16]	@ float
 4572 0024 FFF7FEFF 		bl	__aeabi_fmul
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 111


 4573 0028 0346     		mov	r3, r0
 4574 002a 3B61     		str	r3, [r7, #16]	@ float
1649:main.c        ****   Y += -4.11852516267426f;
 4575              		.loc 1 1649 0
 4576 002c 1749     		ldr	r1, .L223+4
 4577 002e 3869     		ldr	r0, [r7, #16]	@ float
 4578 0030 FFF7FEFF 		bl	__aeabi_fsub
 4579 0034 0346     		mov	r3, r0
 4580 0036 3B61     		str	r3, [r7, #16]	@ float
1650:main.c        ****   Y *= F;
 4581              		.loc 1 1650 0
 4582 0038 7969     		ldr	r1, [r7, #20]	@ float
 4583 003a 3869     		ldr	r0, [r7, #16]	@ float
 4584 003c FFF7FEFF 		bl	__aeabi_fmul
 4585 0040 0346     		mov	r3, r0
 4586 0042 3B61     		str	r3, [r7, #16]	@ float
1651:main.c        ****   Y += 6.02197014179219f;
 4587              		.loc 1 1651 0
 4588 0044 1249     		ldr	r1, .L223+8
 4589 0046 3869     		ldr	r0, [r7, #16]	@ float
 4590 0048 FFF7FEFF 		bl	__aeabi_fadd
 4591 004c 0346     		mov	r3, r0
 4592 004e 3B61     		str	r3, [r7, #16]	@ float
1652:main.c        ****   Y *= F;
 4593              		.loc 1 1652 0
 4594 0050 7969     		ldr	r1, [r7, #20]	@ float
 4595 0052 3869     		ldr	r0, [r7, #16]	@ float
 4596 0054 FFF7FEFF 		bl	__aeabi_fmul
 4597 0058 0346     		mov	r3, r0
 4598 005a 3B61     		str	r3, [r7, #16]	@ float
1653:main.c        ****   Y += -3.13396450166353f;
 4599              		.loc 1 1653 0
 4600 005c 0D49     		ldr	r1, .L223+12
 4601 005e 3869     		ldr	r0, [r7, #16]	@ float
 4602 0060 FFF7FEFF 		bl	__aeabi_fsub
 4603 0064 0346     		mov	r3, r0
 4604 0066 3B61     		str	r3, [r7, #16]	@ float
1654:main.c        ****   Y += E;
 4605              		.loc 1 1654 0
 4606 0068 FB68     		ldr	r3, [r7, #12]
 4607 006a 1846     		mov	r0, r3
 4608 006c FFF7FEFF 		bl	__aeabi_i2f
 4609 0070 0346     		mov	r3, r0
 4610 0072 1946     		mov	r1, r3
 4611 0074 3869     		ldr	r0, [r7, #16]	@ float
 4612 0076 FFF7FEFF 		bl	__aeabi_fadd
 4613 007a 0346     		mov	r3, r0
 4614 007c 3B61     		str	r3, [r7, #16]	@ float
1655:main.c        ****   return(Y);
 4615              		.loc 1 1655 0
 4616 007e 3B69     		ldr	r3, [r7, #16]	@ float
1656:main.c        **** }
 4617              		.loc 1 1656 0
 4618 0080 1846     		mov	r0, r3
 4619 0082 1837     		adds	r7, r7, #24
 4620              		.cfi_def_cfa_offset 8
 4621 0084 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 112


 4622              		.cfi_def_cfa_register 13
 4623              		@ sp needed
 4624 0086 80BD     		pop	{r7, pc}
 4625              	.L224:
 4626              		.align	2
 4627              	.L223:
 4628 0088 A8A19D3F 		.word	1067295144
 4629 008c F5CA8340 		.word	1082378997
 4630 0090 FBB3C040 		.word	1086370811
 4631 0094 E0924840 		.word	1078498016
 4632              		.cfi_endproc
 4633              	.LFE83:
 4634              		.size	log2f_approx, .-log2f_approx
 4635              		.global	prevNotes
 4636              		.bss
 4637              		.align	2
 4638              		.type	prevNotes, %object
 4639              		.size	prevNotes, 48
 4640              	prevNotes:
 4641 0084 00000000 		.space	48
 4641      00000000 
 4641      00000000 
 4641      00000000 
 4641      00000000 
 4642              		.section	.text.noteEvent,"ax",%progbits
 4643              		.align	2
 4644              		.global	noteEvent
 4645              		.thumb
 4646              		.thumb_func
 4647              		.type	noteEvent, %function
 4648              	noteEvent:
 4649              	.LFB84:
1657:main.c        **** 
1658:main.c        **** //log10f is exactly log2(x)/log2(10.0f)
1659:main.c        **** #define log10f_fast(x)  (log2f_approx(x)*0.3010299956639812f)
1660:main.c        **** 
1661:main.c        **** int prevNotes[NUM_STRINGS] = {0,0,0,0,0,0,0,0,0,0,0,0};
1662:main.c        **** 
1663:main.c        **** void noteEvent(int string)
1664:main.c        **** {
 4650              		.loc 1 1664 0
 4651              		.cfi_startproc
 4652              		@ args = 0, pretend = 0, frame = 24
 4653              		@ frame_needed = 1, uses_anonymous_args = 0
 4654 0000 80B5     		push	{r7, lr}
 4655              		.cfi_def_cfa_offset 8
 4656              		.cfi_offset 7, -8
 4657              		.cfi_offset 14, -4
 4658 0002 86B0     		sub	sp, sp, #24
 4659              		.cfi_def_cfa_offset 32
 4660 0004 00AF     		add	r7, sp, #0
 4661              		.cfi_def_cfa_register 7
 4662 0006 7860     		str	r0, [r7, #4]
1665:main.c        ****     float tempAmp = strings[string] * 1.5259021896696421759365224689097e-5f;//divide by 65535
 4663              		.loc 1 1665 0
 4664 0008 394A     		ldr	r2, .L231
 4665 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 113


 4666 000c 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4667 0010 9BB2     		uxth	r3, r3
 4668 0012 1846     		mov	r0, r3
 4669 0014 FFF7FEFF 		bl	__aeabi_i2f
 4670 0018 0346     		mov	r3, r0
 4671 001a 3649     		ldr	r1, .L231+4
 4672 001c 1846     		mov	r0, r3
 4673 001e FFF7FEFF 		bl	__aeabi_fmul
 4674 0022 0346     		mov	r3, r0
 4675 0024 3B61     		str	r3, [r7, #16]	@ float
1666:main.c        ****     float v = 127.0f + (64.0f * log10f_fast(tempAmp));
 4676              		.loc 1 1666 0
 4677 0026 3869     		ldr	r0, [r7, #16]	@ float
 4678 0028 FFF7FEFF 		bl	log2f_approx
 4679 002c 0346     		mov	r3, r0
 4680 002e 3249     		ldr	r1, .L231+8
 4681 0030 1846     		mov	r0, r3
 4682 0032 FFF7FEFF 		bl	__aeabi_fmul
 4683 0036 0346     		mov	r3, r0
 4684 0038 4FF08541 		mov	r1, #1115684864
 4685 003c 1846     		mov	r0, r3
 4686 003e FFF7FEFF 		bl	__aeabi_fmul
 4687 0042 0346     		mov	r3, r0
 4688 0044 2D49     		ldr	r1, .L231+12
 4689 0046 1846     		mov	r0, r3
 4690 0048 FFF7FEFF 		bl	__aeabi_fadd
 4691 004c 0346     		mov	r3, r0
 4692 004e FB60     		str	r3, [r7, #12]	@ float
1667:main.c        ****     int vInt  = (int) (v*4.0f);
 4693              		.loc 1 1667 0
 4694 0050 4FF08141 		mov	r1, #1082130432
 4695 0054 F868     		ldr	r0, [r7, #12]	@ float
 4696 0056 FFF7FEFF 		bl	__aeabi_fmul
 4697 005a 0346     		mov	r3, r0
 4698 005c 1846     		mov	r0, r3
 4699 005e FFF7FEFF 		bl	__aeabi_f2iz
 4700 0062 0346     		mov	r3, r0
 4701 0064 7B61     		str	r3, [r7, #20]
1668:main.c        ****     if (vInt > 127)
 4702              		.loc 1 1668 0
 4703 0066 7B69     		ldr	r3, [r7, #20]
 4704 0068 7F2B     		cmp	r3, #127
 4705 006a 01DD     		ble	.L226
1669:main.c        ****     {
1670:main.c        ****         vInt = 127;
 4706              		.loc 1 1670 0
 4707 006c 7F23     		movs	r3, #127
 4708 006e 7B61     		str	r3, [r7, #20]
 4709              	.L226:
1671:main.c        ****     }
1672:main.c        ****     if (strings[string] == 0)
 4710              		.loc 1 1672 0
 4711 0070 1F4A     		ldr	r2, .L231
 4712 0072 7B68     		ldr	r3, [r7, #4]
 4713 0074 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 4714 0078 9BB2     		uxth	r3, r3
 4715 007a 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 114


 4716 007c 0AD1     		bne	.L227
1673:main.c        ****     {
1674:main.c        ****         sendMIDINoteOn(prevNotes[string], 0, string+1);
 4717              		.loc 1 1674 0
 4718 007e 204A     		ldr	r2, .L231+16
 4719 0080 7B68     		ldr	r3, [r7, #4]
 4720 0082 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4721 0086 7B68     		ldr	r3, [r7, #4]
 4722 0088 0133     		adds	r3, r3, #1
 4723 008a 1A46     		mov	r2, r3
 4724 008c 0021     		movs	r1, #0
 4725 008e FFF7FEFF 		bl	sendMIDINoteOn
1675:main.c        ****     }
1676:main.c        ****     else
1677:main.c        ****     {
1678:main.c        ****         if (vInt > 0)
1679:main.c        ****         {
1680:main.c        ****             //only update octave on note-ons
1681:main.c        ****             //stringOctave[string] = powf(2.0f,octave);
1682:main.c        ****             int noteToSend = ((octave - 1) * 12) + openStringMIDI_Int[string];
1683:main.c        ****             sendMIDINoteOn(noteToSend , ((uint8_t)vInt), string+1);
1684:main.c        ****             prevNotes[string] = noteToSend;
1685:main.c        ****         }
1686:main.c        ****         else
1687:main.c        ****         {
1688:main.c        ****              sendMIDINoteOn(prevNotes[string], 0, string+1);
1689:main.c        ****         }
1690:main.c        ****     }
1691:main.c        **** }
 4726              		.loc 1 1691 0
 4727 0092 28E0     		b	.L230
 4728              	.L227:
1678:main.c        ****         {
 4729              		.loc 1 1678 0
 4730 0094 7B69     		ldr	r3, [r7, #20]
 4731 0096 002B     		cmp	r3, #0
 4732 0098 1BDD     		ble	.L229
 4733              	.LBB22:
1682:main.c        ****             sendMIDINoteOn(noteToSend , ((uint8_t)vInt), string+1);
 4734              		.loc 1 1682 0
 4735 009a 1A4B     		ldr	r3, .L231+20
 4736 009c 1B68     		ldr	r3, [r3]
 4737 009e 5A1E     		subs	r2, r3, #1
 4738 00a0 1346     		mov	r3, r2
 4739 00a2 5B00     		lsls	r3, r3, #1
 4740 00a4 1344     		add	r3, r3, r2
 4741 00a6 9B00     		lsls	r3, r3, #2
 4742 00a8 1946     		mov	r1, r3
 4743 00aa 174A     		ldr	r2, .L231+24
 4744 00ac 7B68     		ldr	r3, [r7, #4]
 4745 00ae 52F82330 		ldr	r3, [r2, r3, lsl #2]
 4746 00b2 0B44     		add	r3, r3, r1
 4747 00b4 BB60     		str	r3, [r7, #8]
1683:main.c        ****             prevNotes[string] = noteToSend;
 4748              		.loc 1 1683 0
 4749 00b6 7B69     		ldr	r3, [r7, #20]
 4750 00b8 D9B2     		uxtb	r1, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 115


 4751 00ba 7B68     		ldr	r3, [r7, #4]
 4752 00bc 0133     		adds	r3, r3, #1
 4753 00be 1A46     		mov	r2, r3
 4754 00c0 B868     		ldr	r0, [r7, #8]
 4755 00c2 FFF7FEFF 		bl	sendMIDINoteOn
1684:main.c        ****         }
 4756              		.loc 1 1684 0
 4757 00c6 0E49     		ldr	r1, .L231+16
 4758 00c8 7B68     		ldr	r3, [r7, #4]
 4759 00ca BA68     		ldr	r2, [r7, #8]
 4760 00cc 41F82320 		str	r2, [r1, r3, lsl #2]
 4761              	.LBE22:
 4762              		.loc 1 1691 0
 4763 00d0 09E0     		b	.L230
 4764              	.L229:
1688:main.c        ****         }
 4765              		.loc 1 1688 0
 4766 00d2 0B4A     		ldr	r2, .L231+16
 4767 00d4 7B68     		ldr	r3, [r7, #4]
 4768 00d6 52F82300 		ldr	r0, [r2, r3, lsl #2]
 4769 00da 7B68     		ldr	r3, [r7, #4]
 4770 00dc 0133     		adds	r3, r3, #1
 4771 00de 1A46     		mov	r2, r3
 4772 00e0 0021     		movs	r1, #0
 4773 00e2 FFF7FEFF 		bl	sendMIDINoteOn
 4774              	.L230:
 4775              		.loc 1 1691 0
 4776 00e6 00BF     		nop
 4777 00e8 1837     		adds	r7, r7, #24
 4778              		.cfi_def_cfa_offset 8
 4779 00ea BD46     		mov	sp, r7
 4780              		.cfi_def_cfa_register 13
 4781              		@ sp needed
 4782 00ec 80BD     		pop	{r7, pc}
 4783              	.L232:
 4784 00ee 00BF     		.align	2
 4785              	.L231:
 4786 00f0 00000000 		.word	strings
 4787 00f4 80008037 		.word	931135616
 4788 00f8 9B209A3E 		.word	1050288283
 4789 00fc 0000FE42 		.word	1123942400
 4790 0100 00000000 		.word	prevNotes
 4791 0104 00000000 		.word	octave
 4792 0108 00000000 		.word	openStringMIDI_Int
 4793              		.cfi_endproc
 4794              	.LFE84:
 4795              		.size	noteEvent, .-noteEvent
 4796              		.section	.text.CCEvent,"ax",%progbits
 4797              		.align	2
 4798              		.global	CCEvent
 4799              		.thumb
 4800              		.thumb_func
 4801              		.type	CCEvent, %function
 4802              	CCEvent:
 4803              	.LFB85:
1692:main.c        **** 
1693:main.c        **** void CCEvent(int cc, int val)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 116


1694:main.c        **** {
 4804              		.loc 1 1694 0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 8
 4807              		@ frame_needed = 1, uses_anonymous_args = 0
 4808 0000 80B5     		push	{r7, lr}
 4809              		.cfi_def_cfa_offset 8
 4810              		.cfi_offset 7, -8
 4811              		.cfi_offset 14, -4
 4812 0002 82B0     		sub	sp, sp, #8
 4813              		.cfi_def_cfa_offset 16
 4814 0004 00AF     		add	r7, sp, #0
 4815              		.cfi_def_cfa_register 7
 4816 0006 7860     		str	r0, [r7, #4]
 4817 0008 3960     		str	r1, [r7]
1695:main.c        ****     
1696:main.c        ****     sendMIDIControlChange(cc, val, 0);
 4818              		.loc 1 1696 0
 4819 000a 0022     		movs	r2, #0
 4820 000c 3968     		ldr	r1, [r7]
 4821 000e 7868     		ldr	r0, [r7, #4]
 4822 0010 FFF7FEFF 		bl	sendMIDIControlChange
1697:main.c        **** }
 4823              		.loc 1 1697 0
 4824 0014 00BF     		nop
 4825 0016 0837     		adds	r7, r7, #8
 4826              		.cfi_def_cfa_offset 8
 4827 0018 BD46     		mov	sp, r7
 4828              		.cfi_def_cfa_register 13
 4829              		@ sp needed
 4830 001a 80BD     		pop	{r7, pc}
 4831              		.cfi_endproc
 4832              	.LFE85:
 4833              		.size	CCEvent, .-CCEvent
 4834              		.section	.text.sendMIDINoteOn,"ax",%progbits
 4835              		.align	2
 4836              		.global	sendMIDINoteOn
 4837              		.thumb
 4838              		.thumb_func
 4839              		.type	sendMIDINoteOn, %function
 4840              	sendMIDINoteOn:
 4841              	.LFB86:
1698:main.c        **** 
1699:main.c        **** void sendMIDINoteOn(int MIDInoteNum, int velocity, int channel)
1700:main.c        **** {  
 4842              		.loc 1 1700 0
 4843              		.cfi_startproc
 4844              		@ args = 0, pretend = 0, frame = 16
 4845              		@ frame_needed = 1, uses_anonymous_args = 0
 4846 0000 80B5     		push	{r7, lr}
 4847              		.cfi_def_cfa_offset 8
 4848              		.cfi_offset 7, -8
 4849              		.cfi_offset 14, -4
 4850 0002 84B0     		sub	sp, sp, #16
 4851              		.cfi_def_cfa_offset 24
 4852 0004 00AF     		add	r7, sp, #0
 4853              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 117


 4854 0006 F860     		str	r0, [r7, #12]
 4855 0008 B960     		str	r1, [r7, #8]
 4856 000a 7A60     		str	r2, [r7, #4]
1701:main.c        ****    
1702:main.c        ****     midiMsg[0] = USB_MIDI_NOTE_ON + channel;
 4857              		.loc 1 1702 0
 4858 000c 7B68     		ldr	r3, [r7, #4]
 4859 000e DBB2     		uxtb	r3, r3
 4860 0010 703B     		subs	r3, r3, #112
 4861 0012 DAB2     		uxtb	r2, r3
 4862 0014 114B     		ldr	r3, .L236
 4863 0016 1A70     		strb	r2, [r3]
1703:main.c        ****     midiMsg[1] = MIDInoteNum;
 4864              		.loc 1 1703 0
 4865 0018 FB68     		ldr	r3, [r7, #12]
 4866 001a DAB2     		uxtb	r2, r3
 4867 001c 0F4B     		ldr	r3, .L236
 4868 001e 5A70     		strb	r2, [r3, #1]
1704:main.c        ****     midiMsg[2] = velocity;	
 4869              		.loc 1 1704 0
 4870 0020 BB68     		ldr	r3, [r7, #8]
 4871 0022 DAB2     		uxtb	r2, r3
 4872 0024 0D4B     		ldr	r3, .L236
 4873 0026 9A70     		strb	r2, [r3, #2]
1705:main.c        ****     //MIDI1_UART_PutArray(midiMsg, 3);
1706:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 4874              		.loc 1 1706 0
 4875 0028 0D4B     		ldr	r3, .L236+4
 4876 002a 1B78     		ldrb	r3, [r3]
 4877 002c DBB2     		uxtb	r3, r3
 4878 002e 002B     		cmp	r3, #0
 4879 0030 09D0     		beq	.L235
 4880              		.loc 1 1706 0 is_stmt 0 discriminator 1
 4881 0032 FFF7FEFF 		bl	USB_VBusPresent
 4882 0036 0346     		mov	r3, r0
 4883 0038 002B     		cmp	r3, #0
 4884 003a 04D0     		beq	.L235
1707:main.c        ****     {
1708:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 4885              		.loc 1 1708 0 is_stmt 1
 4886 003c 0022     		movs	r2, #0
 4887 003e 0749     		ldr	r1, .L236
 4888 0040 0320     		movs	r0, #3
 4889 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 4890              	.L235:
1709:main.c        ****     } 
1710:main.c        ****     midiSent += 4;
 4891              		.loc 1 1710 0
 4892 0046 074B     		ldr	r3, .L236+8
 4893 0048 1B88     		ldrh	r3, [r3]
 4894 004a 0433     		adds	r3, r3, #4
 4895 004c 9AB2     		uxth	r2, r3
 4896 004e 054B     		ldr	r3, .L236+8
 4897 0050 1A80     		strh	r2, [r3]	@ movhi
1711:main.c        **** }
 4898              		.loc 1 1711 0
 4899 0052 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 118


 4900 0054 1037     		adds	r7, r7, #16
 4901              		.cfi_def_cfa_offset 8
 4902 0056 BD46     		mov	sp, r7
 4903              		.cfi_def_cfa_register 13
 4904              		@ sp needed
 4905 0058 80BD     		pop	{r7, pc}
 4906              	.L237:
 4907 005a 00BF     		.align	2
 4908              	.L236:
 4909 005c 00000000 		.word	midiMsg
 4910 0060 00000000 		.word	USB_active
 4911 0064 00000000 		.word	midiSent
 4912              		.cfi_endproc
 4913              	.LFE86:
 4914              		.size	sendMIDINoteOn, .-sendMIDINoteOn
 4915              		.section	.text.sendMIDIPolyKeyPressure,"ax",%progbits
 4916              		.align	2
 4917              		.global	sendMIDIPolyKeyPressure
 4918              		.thumb
 4919              		.thumb_func
 4920              		.type	sendMIDIPolyKeyPressure, %function
 4921              	sendMIDIPolyKeyPressure:
 4922              	.LFB87:
1712:main.c        **** 
1713:main.c        **** void sendMIDIPolyKeyPressure(int MIDInoteNum, int pressure, int channel)
1714:main.c        **** {
 4923              		.loc 1 1714 0
 4924              		.cfi_startproc
 4925              		@ args = 0, pretend = 0, frame = 16
 4926              		@ frame_needed = 1, uses_anonymous_args = 0
 4927 0000 80B5     		push	{r7, lr}
 4928              		.cfi_def_cfa_offset 8
 4929              		.cfi_offset 7, -8
 4930              		.cfi_offset 14, -4
 4931 0002 84B0     		sub	sp, sp, #16
 4932              		.cfi_def_cfa_offset 24
 4933 0004 00AF     		add	r7, sp, #0
 4934              		.cfi_def_cfa_register 7
 4935 0006 F860     		str	r0, [r7, #12]
 4936 0008 B960     		str	r1, [r7, #8]
 4937 000a 7A60     		str	r2, [r7, #4]
1715:main.c        ****     midiMsg[0] = USB_MIDI_POLY_KEY_PRESSURE + channel;
 4938              		.loc 1 1715 0
 4939 000c 7B68     		ldr	r3, [r7, #4]
 4940 000e DBB2     		uxtb	r3, r3
 4941 0010 603B     		subs	r3, r3, #96
 4942 0012 DAB2     		uxtb	r2, r3
 4943 0014 114B     		ldr	r3, .L240
 4944 0016 1A70     		strb	r2, [r3]
1716:main.c        ****     midiMsg[1] = MIDInoteNum;
 4945              		.loc 1 1716 0
 4946 0018 FB68     		ldr	r3, [r7, #12]
 4947 001a DAB2     		uxtb	r2, r3
 4948 001c 0F4B     		ldr	r3, .L240
 4949 001e 5A70     		strb	r2, [r3, #1]
1717:main.c        ****     midiMsg[2] = pressure;		
 4950              		.loc 1 1717 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 119


 4951 0020 BB68     		ldr	r3, [r7, #8]
 4952 0022 DAB2     		uxtb	r2, r3
 4953 0024 0D4B     		ldr	r3, .L240
 4954 0026 9A70     		strb	r2, [r3, #2]
1718:main.c        ****     //MIDI1_UART_PutArray(midiMsg, 3);
1719:main.c        **** 
1720:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 4955              		.loc 1 1720 0
 4956 0028 0D4B     		ldr	r3, .L240+4
 4957 002a 1B78     		ldrb	r3, [r3]
 4958 002c DBB2     		uxtb	r3, r3
 4959 002e 002B     		cmp	r3, #0
 4960 0030 09D0     		beq	.L239
 4961              		.loc 1 1720 0 is_stmt 0 discriminator 1
 4962 0032 FFF7FEFF 		bl	USB_VBusPresent
 4963 0036 0346     		mov	r3, r0
 4964 0038 002B     		cmp	r3, #0
 4965 003a 04D0     		beq	.L239
1721:main.c        ****     {
1722:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 4966              		.loc 1 1722 0 is_stmt 1
 4967 003c 0022     		movs	r2, #0
 4968 003e 0749     		ldr	r1, .L240
 4969 0040 0320     		movs	r0, #3
 4970 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 4971              	.L239:
1723:main.c        ****     } 
1724:main.c        ****     midiSent += 4;
 4972              		.loc 1 1724 0
 4973 0046 074B     		ldr	r3, .L240+8
 4974 0048 1B88     		ldrh	r3, [r3]
 4975 004a 0433     		adds	r3, r3, #4
 4976 004c 9AB2     		uxth	r2, r3
 4977 004e 054B     		ldr	r3, .L240+8
 4978 0050 1A80     		strh	r2, [r3]	@ movhi
1725:main.c        **** }
 4979              		.loc 1 1725 0
 4980 0052 00BF     		nop
 4981 0054 1037     		adds	r7, r7, #16
 4982              		.cfi_def_cfa_offset 8
 4983 0056 BD46     		mov	sp, r7
 4984              		.cfi_def_cfa_register 13
 4985              		@ sp needed
 4986 0058 80BD     		pop	{r7, pc}
 4987              	.L241:
 4988 005a 00BF     		.align	2
 4989              	.L240:
 4990 005c 00000000 		.word	midiMsg
 4991 0060 00000000 		.word	USB_active
 4992 0064 00000000 		.word	midiSent
 4993              		.cfi_endproc
 4994              	.LFE87:
 4995              		.size	sendMIDIPolyKeyPressure, .-sendMIDIPolyKeyPressure
 4996              		.section	.text.sendMIDIControlChange,"ax",%progbits
 4997              		.align	2
 4998              		.global	sendMIDIControlChange
 4999              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 120


 5000              		.thumb_func
 5001              		.type	sendMIDIControlChange, %function
 5002              	sendMIDIControlChange:
 5003              	.LFB88:
1726:main.c        **** 
1727:main.c        **** void sendMIDIControlChange(int CCnum, int CCval, int channel)
1728:main.c        **** {
 5004              		.loc 1 1728 0
 5005              		.cfi_startproc
 5006              		@ args = 0, pretend = 0, frame = 16
 5007              		@ frame_needed = 1, uses_anonymous_args = 0
 5008 0000 80B5     		push	{r7, lr}
 5009              		.cfi_def_cfa_offset 8
 5010              		.cfi_offset 7, -8
 5011              		.cfi_offset 14, -4
 5012 0002 84B0     		sub	sp, sp, #16
 5013              		.cfi_def_cfa_offset 24
 5014 0004 00AF     		add	r7, sp, #0
 5015              		.cfi_def_cfa_register 7
 5016 0006 F860     		str	r0, [r7, #12]
 5017 0008 B960     		str	r1, [r7, #8]
 5018 000a 7A60     		str	r2, [r7, #4]
1729:main.c        ****     midiMsg[0] = USB_MIDI_CONTROL_CHANGE + channel;
 5019              		.loc 1 1729 0
 5020 000c 7B68     		ldr	r3, [r7, #4]
 5021 000e DBB2     		uxtb	r3, r3
 5022 0010 503B     		subs	r3, r3, #80
 5023 0012 DAB2     		uxtb	r2, r3
 5024 0014 114B     		ldr	r3, .L244
 5025 0016 1A70     		strb	r2, [r3]
1730:main.c        ****     midiMsg[1] = CCnum;
 5026              		.loc 1 1730 0
 5027 0018 FB68     		ldr	r3, [r7, #12]
 5028 001a DAB2     		uxtb	r2, r3
 5029 001c 0F4B     		ldr	r3, .L244
 5030 001e 5A70     		strb	r2, [r3, #1]
1731:main.c        ****     midiMsg[2] = CCval;			
 5031              		.loc 1 1731 0
 5032 0020 BB68     		ldr	r3, [r7, #8]
 5033 0022 DAB2     		uxtb	r2, r3
 5034 0024 0D4B     		ldr	r3, .L244
 5035 0026 9A70     		strb	r2, [r3, #2]
1732:main.c        ****     //MIDI1_UART_PutArray(midiMsg, 3);
1733:main.c        ****     
1734:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 5036              		.loc 1 1734 0
 5037 0028 0D4B     		ldr	r3, .L244+4
 5038 002a 1B78     		ldrb	r3, [r3]
 5039 002c DBB2     		uxtb	r3, r3
 5040 002e 002B     		cmp	r3, #0
 5041 0030 09D0     		beq	.L243
 5042              		.loc 1 1734 0 is_stmt 0 discriminator 1
 5043 0032 FFF7FEFF 		bl	USB_VBusPresent
 5044 0036 0346     		mov	r3, r0
 5045 0038 002B     		cmp	r3, #0
 5046 003a 04D0     		beq	.L243
1735:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 121


1736:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 5047              		.loc 1 1736 0 is_stmt 1
 5048 003c 0022     		movs	r2, #0
 5049 003e 0749     		ldr	r1, .L244
 5050 0040 0320     		movs	r0, #3
 5051 0042 FFF7FEFF 		bl	USB_PutUsbMidiIn
 5052              	.L243:
1737:main.c        ****     } 
1738:main.c        ****     midiSent += 4;
 5053              		.loc 1 1738 0
 5054 0046 074B     		ldr	r3, .L244+8
 5055 0048 1B88     		ldrh	r3, [r3]
 5056 004a 0433     		adds	r3, r3, #4
 5057 004c 9AB2     		uxth	r2, r3
 5058 004e 054B     		ldr	r3, .L244+8
 5059 0050 1A80     		strh	r2, [r3]	@ movhi
1739:main.c        **** }
 5060              		.loc 1 1739 0
 5061 0052 00BF     		nop
 5062 0054 1037     		adds	r7, r7, #16
 5063              		.cfi_def_cfa_offset 8
 5064 0056 BD46     		mov	sp, r7
 5065              		.cfi_def_cfa_register 13
 5066              		@ sp needed
 5067 0058 80BD     		pop	{r7, pc}
 5068              	.L245:
 5069 005a 00BF     		.align	2
 5070              	.L244:
 5071 005c 00000000 		.word	midiMsg
 5072 0060 00000000 		.word	USB_active
 5073 0064 00000000 		.word	midiSent
 5074              		.cfi_endproc
 5075              	.LFE88:
 5076              		.size	sendMIDIControlChange, .-sendMIDIControlChange
 5077              		.section	.text.sendMIDIPitchBend,"ax",%progbits
 5078              		.align	2
 5079              		.global	sendMIDIPitchBend
 5080              		.thumb
 5081              		.thumb_func
 5082              		.type	sendMIDIPitchBend, %function
 5083              	sendMIDIPitchBend:
 5084              	.LFB89:
1740:main.c        **** 
1741:main.c        **** void sendMIDIPitchBend(int val, int channel)
1742:main.c        **** {
 5085              		.loc 1 1742 0
 5086              		.cfi_startproc
 5087              		@ args = 0, pretend = 0, frame = 8
 5088              		@ frame_needed = 1, uses_anonymous_args = 0
 5089 0000 80B5     		push	{r7, lr}
 5090              		.cfi_def_cfa_offset 8
 5091              		.cfi_offset 7, -8
 5092              		.cfi_offset 14, -4
 5093 0002 82B0     		sub	sp, sp, #8
 5094              		.cfi_def_cfa_offset 16
 5095 0004 00AF     		add	r7, sp, #0
 5096              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 122


 5097 0006 7860     		str	r0, [r7, #4]
 5098 0008 3960     		str	r1, [r7]
1743:main.c        ****     midiMsg[0] = USB_MIDI_PITCH_BEND_CHANGE + channel;
 5099              		.loc 1 1743 0
 5100 000a 3B68     		ldr	r3, [r7]
 5101 000c DBB2     		uxtb	r3, r3
 5102 000e 203B     		subs	r3, r3, #32
 5103 0010 DAB2     		uxtb	r2, r3
 5104 0012 134B     		ldr	r3, .L248
 5105 0014 1A70     		strb	r2, [r3]
1744:main.c        ****     midiMsg[1] = (val & 127); //LSB
 5106              		.loc 1 1744 0
 5107 0016 7B68     		ldr	r3, [r7, #4]
 5108 0018 DBB2     		uxtb	r3, r3
 5109 001a 03F07F03 		and	r3, r3, #127
 5110 001e DAB2     		uxtb	r2, r3
 5111 0020 0F4B     		ldr	r3, .L248
 5112 0022 5A70     		strb	r2, [r3, #1]
1745:main.c        ****     midiMsg[2] = (val >> 7);	//MSB		
 5113              		.loc 1 1745 0
 5114 0024 7B68     		ldr	r3, [r7, #4]
 5115 0026 DB11     		asrs	r3, r3, #7
 5116 0028 DAB2     		uxtb	r2, r3
 5117 002a 0D4B     		ldr	r3, .L248
 5118 002c 9A70     		strb	r2, [r3, #2]
1746:main.c        **** 
1747:main.c        ****     //MIDI1_UART_PutArray(midiMsg, 3);
1748:main.c        ****     
1749:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 5119              		.loc 1 1749 0
 5120 002e 0D4B     		ldr	r3, .L248+4
 5121 0030 1B78     		ldrb	r3, [r3]
 5122 0032 DBB2     		uxtb	r3, r3
 5123 0034 002B     		cmp	r3, #0
 5124 0036 09D0     		beq	.L247
 5125              		.loc 1 1749 0 is_stmt 0 discriminator 1
 5126 0038 FFF7FEFF 		bl	USB_VBusPresent
 5127 003c 0346     		mov	r3, r0
 5128 003e 002B     		cmp	r3, #0
 5129 0040 04D0     		beq	.L247
1750:main.c        ****     {
1751:main.c        ****         USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 5130              		.loc 1 1751 0 is_stmt 1
 5131 0042 0022     		movs	r2, #0
 5132 0044 0649     		ldr	r1, .L248
 5133 0046 0320     		movs	r0, #3
 5134 0048 FFF7FEFF 		bl	USB_PutUsbMidiIn
 5135              	.L247:
1752:main.c        ****     } 
1753:main.c        ****     midiSent += 4;
 5136              		.loc 1 1753 0
 5137 004c 064B     		ldr	r3, .L248+8
 5138 004e 1B88     		ldrh	r3, [r3]
 5139 0050 0433     		adds	r3, r3, #4
 5140 0052 9AB2     		uxth	r2, r3
 5141 0054 044B     		ldr	r3, .L248+8
 5142 0056 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 123


1754:main.c        **** }
 5143              		.loc 1 1754 0
 5144 0058 00BF     		nop
 5145 005a 0837     		adds	r7, r7, #8
 5146              		.cfi_def_cfa_offset 8
 5147 005c BD46     		mov	sp, r7
 5148              		.cfi_def_cfa_register 13
 5149              		@ sp needed
 5150 005e 80BD     		pop	{r7, pc}
 5151              	.L249:
 5152              		.align	2
 5153              	.L248:
 5154 0060 00000000 		.word	midiMsg
 5155 0064 00000000 		.word	USB_active
 5156 0068 00000000 		.word	midiSent
 5157              		.cfi_endproc
 5158              	.LFE89:
 5159              		.size	sendMIDIPitchBend, .-sendMIDIPitchBend
 5160              		.section	.text.sendMIDIAllNotesOff,"ax",%progbits
 5161              		.align	2
 5162              		.global	sendMIDIAllNotesOff
 5163              		.thumb
 5164              		.thumb_func
 5165              		.type	sendMIDIAllNotesOff, %function
 5166              	sendMIDIAllNotesOff:
 5167              	.LFB90:
1755:main.c        **** 
1756:main.c        **** void sendMIDIAllNotesOff(void)
1757:main.c        **** {   
 5168              		.loc 1 1757 0
 5169              		.cfi_startproc
 5170              		@ args = 0, pretend = 0, frame = 0
 5171              		@ frame_needed = 1, uses_anonymous_args = 0
 5172 0000 80B5     		push	{r7, lr}
 5173              		.cfi_def_cfa_offset 8
 5174              		.cfi_offset 7, -8
 5175              		.cfi_offset 14, -4
 5176 0002 00AF     		add	r7, sp, #0
 5177              		.cfi_def_cfa_register 7
1758:main.c        ****     for (i = 0; i < 128; i++)
 5178              		.loc 1 1758 0
 5179 0004 144B     		ldr	r3, .L254
 5180 0006 0022     		movs	r2, #0
 5181 0008 1A70     		strb	r2, [r3]
 5182 000a 1EE0     		b	.L251
 5183              	.L253:
1759:main.c        ****     {
1760:main.c        ****         midiMsg[0] = USB_MIDI_NOTE_ON;
 5184              		.loc 1 1760 0
 5185 000c 134B     		ldr	r3, .L254+4
 5186 000e 9022     		movs	r2, #144
 5187 0010 1A70     		strb	r2, [r3]
1761:main.c        ****         midiMsg[1] = i;
 5188              		.loc 1 1761 0
 5189 0012 114B     		ldr	r3, .L254
 5190 0014 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5191 0016 114B     		ldr	r3, .L254+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 124


 5192 0018 5A70     		strb	r2, [r3, #1]
1762:main.c        ****         midiMsg[2] = 0;	
 5193              		.loc 1 1762 0
 5194 001a 104B     		ldr	r3, .L254+4
 5195 001c 0022     		movs	r2, #0
 5196 001e 9A70     		strb	r2, [r3, #2]
1763:main.c        ****        // MIDI1_UART_PutArray(midiMsg, 3);
1764:main.c        ****         if ((USB_active) && (USB_VBusPresent()))
 5197              		.loc 1 1764 0
 5198 0020 0F4B     		ldr	r3, .L254+8
 5199 0022 1B78     		ldrb	r3, [r3]
 5200 0024 DBB2     		uxtb	r3, r3
 5201 0026 002B     		cmp	r3, #0
 5202 0028 09D0     		beq	.L252
 5203              		.loc 1 1764 0 is_stmt 0 discriminator 1
 5204 002a FFF7FEFF 		bl	USB_VBusPresent
 5205 002e 0346     		mov	r3, r0
 5206 0030 002B     		cmp	r3, #0
 5207 0032 04D0     		beq	.L252
1765:main.c        ****         {       
1766:main.c        ****             USB_PutUsbMidiIn(3u, midiMsg, USB_MIDI_CABLE_00);
 5208              		.loc 1 1766 0 is_stmt 1
 5209 0034 0022     		movs	r2, #0
 5210 0036 0949     		ldr	r1, .L254+4
 5211 0038 0320     		movs	r0, #3
 5212 003a FFF7FEFF 		bl	USB_PutUsbMidiIn
 5213              	.L252:
1758:main.c        ****     {
 5214              		.loc 1 1758 0 discriminator 2
 5215 003e 064B     		ldr	r3, .L254
 5216 0040 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5217 0042 0133     		adds	r3, r3, #1
 5218 0044 DAB2     		uxtb	r2, r3
 5219 0046 044B     		ldr	r3, .L254
 5220 0048 1A70     		strb	r2, [r3]
 5221              	.L251:
1758:main.c        ****     {
 5222              		.loc 1 1758 0 is_stmt 0 discriminator 1
 5223 004a 034B     		ldr	r3, .L254
 5224 004c 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5225 004e 5BB2     		sxtb	r3, r3
 5226 0050 002B     		cmp	r3, #0
 5227 0052 DBDA     		bge	.L253
1767:main.c        ****         }
1768:main.c        ****     }
1769:main.c        **** }
 5228              		.loc 1 1769 0 is_stmt 1
 5229 0054 00BF     		nop
 5230 0056 80BD     		pop	{r7, pc}
 5231              	.L255:
 5232              		.align	2
 5233              	.L254:
 5234 0058 00000000 		.word	i
 5235 005c 00000000 		.word	midiMsg
 5236 0060 00000000 		.word	USB_active
 5237              		.cfi_endproc
 5238              	.LFE90:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 125


 5239              		.size	sendMIDIAllNotesOff, .-sendMIDIAllNotesOff
 5240              		.comm	sysexBuffer,128,4
 5241              		.global	sysexPointer
 5242              		.bss
 5243              		.align	2
 5244              		.type	sysexPointer, %object
 5245              		.size	sysexPointer, 4
 5246              	sysexPointer:
 5247 00b4 00000000 		.space	4
 5248              		.global	receivingSysex
 5249              		.type	receivingSysex, %object
 5250              		.size	receivingSysex, 1
 5251              	receivingSysex:
 5252 00b8 00       		.space	1
 5253              		.global	parsingSysex
 5254              		.type	parsingSysex, %object
 5255              		.size	parsingSysex, 1
 5256              	parsingSysex:
 5257 00b9 00       		.space	1
 5258              		.global	checkStatus
 5259              		.type	checkStatus, %object
 5260              		.size	checkStatus, 1
 5261              	checkStatus:
 5262 00ba 00       		.space	1
 5263              		.global	checkBase
 5264              		.type	checkBase, %object
 5265              		.size	checkBase, 1
 5266              	checkBase:
 5267 00bb 00       		.space	1
 5268              		.global	testy
 5269              		.type	testy, %object
 5270              		.size	testy, 1
 5271              	testy:
 5272 00bc 00       		.space	1
 5273              		.comm	presetArray,74,4
 5274              		.section	.text.parseSysex,"ax",%progbits
 5275              		.align	2
 5276              		.global	parseSysex
 5277              		.thumb
 5278              		.thumb_func
 5279              		.type	parseSysex, %function
 5280              	parseSysex:
 5281              	.LFB91:
1770:main.c        **** 
1771:main.c        **** 
1772:main.c        **** 
1773:main.c        **** uint8_t sysexBuffer[128];
1774:main.c        **** uint32_t sysexPointer = 0;
1775:main.c        **** uint8_t receivingSysex = 0;
1776:main.c        **** uint8_t parsingSysex = 0;
1777:main.c        **** volatile uint8_t checkStatus = 0;
1778:main.c        **** volatile uint8_t checkBase = 0;
1779:main.c        **** 
1780:main.c        **** volatile uint8_t testy = 0;
1781:main.c        **** 
1782:main.c        **** volatile uint8_t presetArray[74];
1783:main.c        **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 126


1784:main.c        **** void parseSysex(void)
1785:main.c        **** {
 5282              		.loc 1 1785 0
 5283              		.cfi_startproc
 5284              		@ args = 0, pretend = 0, frame = 24
 5285              		@ frame_needed = 1, uses_anonymous_args = 0
 5286 0000 90B5     		push	{r4, r7, lr}
 5287              		.cfi_def_cfa_offset 12
 5288              		.cfi_offset 4, -12
 5289              		.cfi_offset 7, -8
 5290              		.cfi_offset 14, -4
 5291 0002 87B0     		sub	sp, sp, #28
 5292              		.cfi_def_cfa_offset 40
 5293 0004 00AF     		add	r7, sp, #0
 5294              		.cfi_def_cfa_register 7
1786:main.c        ****     // 0 = it's a preset
1787:main.c        ****     if (sysexBuffer[0] == 0)
 5295              		.loc 1 1787 0
 5296 0006 8B4B     		ldr	r3, .L265
 5297 0008 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5298 000a 002B     		cmp	r3, #0
 5299 000c 30D1     		bne	.L257
1788:main.c        ****     {
1789:main.c        ****         testy = 1;
 5300              		.loc 1 1789 0
 5301 000e 8A4B     		ldr	r3, .L265+4
 5302 0010 0122     		movs	r2, #1
 5303 0012 1A70     		strb	r2, [r3]
 5304              	.LBB23:
1790:main.c        ****         for(uint32_t i = 0; i < 72; i++)
 5305              		.loc 1 1790 0
 5306 0014 0023     		movs	r3, #0
 5307 0016 7B61     		str	r3, [r7, #20]
 5308 0018 16E0     		b	.L258
 5309              	.L261:
1791:main.c        ****         {
1792:main.c        ****             if (i < sysexPointer)
 5310              		.loc 1 1792 0
 5311 001a 884B     		ldr	r3, .L265+8
 5312 001c 1B68     		ldr	r3, [r3]
 5313 001e 7A69     		ldr	r2, [r7, #20]
 5314 0020 9A42     		cmp	r2, r3
 5315 0022 09D2     		bcs	.L259
1793:main.c        ****             {   
1794:main.c        ****                 presetArray[i] = sysexBuffer[i];
 5316              		.loc 1 1794 0
 5317 0024 834A     		ldr	r2, .L265
 5318 0026 7B69     		ldr	r3, [r7, #20]
 5319 0028 1344     		add	r3, r3, r2
 5320 002a 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 5321 002c 844A     		ldr	r2, .L265+12
 5322 002e 7B69     		ldr	r3, [r7, #20]
 5323 0030 1344     		add	r3, r3, r2
 5324 0032 0A46     		mov	r2, r1
 5325 0034 1A70     		strb	r2, [r3]
 5326 0036 04E0     		b	.L260
 5327              	.L259:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 127


1795:main.c        ****             }
1796:main.c        ****             else
1797:main.c        ****             {
1798:main.c        ****                 presetArray[i] = 255;
 5328              		.loc 1 1798 0
 5329 0038 814A     		ldr	r2, .L265+12
 5330 003a 7B69     		ldr	r3, [r7, #20]
 5331 003c 1344     		add	r3, r3, r2
 5332 003e FF22     		movs	r2, #255
 5333 0040 1A70     		strb	r2, [r3]
 5334              	.L260:
1790:main.c        ****         {
 5335              		.loc 1 1790 0 discriminator 2
 5336 0042 7B69     		ldr	r3, [r7, #20]
 5337 0044 0133     		adds	r3, r3, #1
 5338 0046 7B61     		str	r3, [r7, #20]
 5339              	.L258:
1790:main.c        ****         {
 5340              		.loc 1 1790 0 is_stmt 0 discriminator 1
 5341 0048 7B69     		ldr	r3, [r7, #20]
 5342 004a 472B     		cmp	r3, #71
 5343 004c E5D9     		bls	.L261
 5344              	.LBE23:
1799:main.c        ****             }
1800:main.c        ****         }
1801:main.c        ****         presetArray[72] = 240;
 5345              		.loc 1 1801 0 is_stmt 1
 5346 004e 7C4B     		ldr	r3, .L265+12
 5347 0050 F022     		movs	r2, #240
 5348 0052 83F84820 		strb	r2, [r3, #72]
1802:main.c        ****         presetArray[73] = 241;
 5349              		.loc 1 1802 0
 5350 0056 7A4B     		ldr	r3, .L265+12
 5351 0058 F122     		movs	r2, #241
 5352 005a 83F84920 		strb	r2, [r3, #73]
1803:main.c        ****         
1804:main.c        ****         SPIM_1_WriteTxData(presetArray[i]);
 5353              		.loc 1 1804 0
 5354 005e 794B     		ldr	r3, .L265+16
 5355 0060 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5356 0062 1A46     		mov	r2, r3
 5357 0064 764B     		ldr	r3, .L265+12
 5358 0066 9B5C     		ldrb	r3, [r3, r2]
 5359 0068 DBB2     		uxtb	r3, r3
 5360 006a 1846     		mov	r0, r3
 5361 006c FFF7FEFF 		bl	SPIM_1_WriteTxData
 5362              	.L257:
1805:main.c        ****         
1806:main.c        ****     }
1807:main.c        ****     //1 = it's a copedent
1808:main.c        ****     if (sysexBuffer[0] == 1)
 5363              		.loc 1 1808 0
 5364 0070 704B     		ldr	r3, .L265
 5365 0072 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5366 0074 012B     		cmp	r3, #1
 5367 0076 40F0D580 		bne	.L262
1809:main.c        ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 128


1810:main.c        ****         if ((sysexBuffer[2] > 49) && (sysexBuffer[2] <= 61))
 5368              		.loc 1 1810 0
 5369 007a 6E4B     		ldr	r3, .L265
 5370 007c 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5371 007e 312B     		cmp	r3, #49
 5372 0080 40F2D080 		bls	.L262
 5373              		.loc 1 1810 0 is_stmt 0 discriminator 1
 5374 0084 6B4B     		ldr	r3, .L265
 5375 0086 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5376 0088 3D2B     		cmp	r3, #61
 5377 008a 00F2CB80 		bhi	.L262
 5378              	.LBB24:
1811:main.c        ****         {
1812:main.c        ****             union breakFloat theVal;
1813:main.c        ****             uint32_t currentFloat = 0;
 5379              		.loc 1 1813 0 is_stmt 1
 5380 008e 0023     		movs	r3, #0
 5381 0090 3B61     		str	r3, [r7, #16]
1814:main.c        ****             uint32_t pedalToWrite = sysexBuffer[2] - 50;
 5382              		.loc 1 1814 0
 5383 0092 684B     		ldr	r3, .L265
 5384 0094 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 5385 0096 323B     		subs	r3, r3, #50
 5386 0098 BB60     		str	r3, [r7, #8]
1815:main.c        ****             uint16_t pedalStartLoc = pedalToWrite * 48;
 5387              		.loc 1 1815 0
 5388 009a BB68     		ldr	r3, [r7, #8]
 5389 009c 9BB2     		uxth	r3, r3
 5390 009e 1A46     		mov	r2, r3	@ movhi
 5391 00a0 5200     		lsls	r2, r2, #1
 5392 00a2 1344     		add	r3, r3, r2
 5393 00a4 1B01     		lsls	r3, r3, #4
 5394 00a6 FB80     		strh	r3, [r7, #6]	@ movhi
 5395              	.LBB25:
1816:main.c        **** 
1817:main.c        **** 
1818:main.c        ****             for (uint32_t i = 3; i < sysexPointer; i = i+5)
 5396              		.loc 1 1818 0
 5397 00a8 0323     		movs	r3, #3
 5398 00aa FB60     		str	r3, [r7, #12]
 5399 00ac B4E0     		b	.L263
 5400              	.L264:
 5401              	.LBB26:
1819:main.c        ****             {
1820:main.c        ****                 theVal.u32 = 0;
 5402              		.loc 1 1820 0 discriminator 3
 5403 00ae 0023     		movs	r3, #0
 5404 00b0 3B60     		str	r3, [r7]
1821:main.c        ****                 theVal.u32 |= ((sysexBuffer[i] &15) << 28);
 5405              		.loc 1 1821 0 discriminator 3
 5406 00b2 3B68     		ldr	r3, [r7]
 5407 00b4 5F49     		ldr	r1, .L265
 5408 00b6 FA68     		ldr	r2, [r7, #12]
 5409 00b8 0A44     		add	r2, r2, r1
 5410 00ba 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 5411 00bc 1207     		lsls	r2, r2, #28
 5412 00be 1343     		orrs	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 129


 5413 00c0 3B60     		str	r3, [r7]
1822:main.c        ****                 theVal.u32 |= (sysexBuffer[i+1] << 21);
 5414              		.loc 1 1822 0 discriminator 3
 5415 00c2 3B68     		ldr	r3, [r7]
 5416 00c4 FA68     		ldr	r2, [r7, #12]
 5417 00c6 0132     		adds	r2, r2, #1
 5418 00c8 5A49     		ldr	r1, .L265
 5419 00ca 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5420 00cc 5205     		lsls	r2, r2, #21
 5421 00ce 1343     		orrs	r3, r3, r2
 5422 00d0 3B60     		str	r3, [r7]
1823:main.c        ****                 theVal.u32 |= (sysexBuffer[i+2] << 14);
 5423              		.loc 1 1823 0 discriminator 3
 5424 00d2 3B68     		ldr	r3, [r7]
 5425 00d4 FA68     		ldr	r2, [r7, #12]
 5426 00d6 0232     		adds	r2, r2, #2
 5427 00d8 5649     		ldr	r1, .L265
 5428 00da 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5429 00dc 9203     		lsls	r2, r2, #14
 5430 00de 1343     		orrs	r3, r3, r2
 5431 00e0 3B60     		str	r3, [r7]
1824:main.c        ****                 theVal.u32 |= (sysexBuffer[i+3] << 7);
 5432              		.loc 1 1824 0 discriminator 3
 5433 00e2 3B68     		ldr	r3, [r7]
 5434 00e4 FA68     		ldr	r2, [r7, #12]
 5435 00e6 0332     		adds	r2, r2, #3
 5436 00e8 5249     		ldr	r1, .L265
 5437 00ea 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 5438 00ec D201     		lsls	r2, r2, #7
 5439 00ee 1343     		orrs	r3, r3, r2
 5440 00f0 3B60     		str	r3, [r7]
1825:main.c        ****                 theVal.u32 |= (sysexBuffer[i+4] & 127);
 5441              		.loc 1 1825 0 discriminator 3
 5442 00f2 3A68     		ldr	r2, [r7]
 5443 00f4 FB68     		ldr	r3, [r7, #12]
 5444 00f6 0433     		adds	r3, r3, #4
 5445 00f8 4E49     		ldr	r1, .L265
 5446 00fa CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 5447 00fc 03F07F03 		and	r3, r3, #127
 5448 0100 1343     		orrs	r3, r3, r2
 5449 0102 3B60     		str	r3, [r7]
1826:main.c        **** 
1827:main.c        ****                 copedent[currentNeck][pedalToWrite][currentFloat] = theVal.f;
 5450              		.loc 1 1827 0 discriminator 3
 5451 0104 504B     		ldr	r3, .L265+20
 5452 0106 1968     		ldr	r1, [r3]
 5453 0108 3868     		ldr	r0, [r7]	@ float
 5454 010a 504C     		ldr	r4, .L265+24
 5455 010c BB68     		ldr	r3, [r7, #8]
 5456 010e 1A46     		mov	r2, r3
 5457 0110 5200     		lsls	r2, r2, #1
 5458 0112 1A44     		add	r2, r2, r3
 5459 0114 9300     		lsls	r3, r2, #2
 5460 0116 1A46     		mov	r2, r3
 5461 0118 0B46     		mov	r3, r1
 5462 011a 5B01     		lsls	r3, r3, #5
 5463 011c 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 130


 5464 011e 9B00     		lsls	r3, r3, #2
 5465 0120 1A44     		add	r2, r2, r3
 5466 0122 3B69     		ldr	r3, [r7, #16]
 5467 0124 1344     		add	r3, r3, r2
 5468 0126 44F82300 		str	r0, [r4, r3, lsl #2]	@ float
1828:main.c        ****                 uint16_t stringStartLoc = currentFloat * 4;
 5469              		.loc 1 1828 0 discriminator 3
 5470 012a 3B69     		ldr	r3, [r7, #16]
 5471 012c 9BB2     		uxth	r3, r3
 5472 012e 9B00     		lsls	r3, r3, #2
 5473 0130 BB80     		strh	r3, [r7, #4]	@ movhi
1829:main.c        ****                 checkBase = EEPROM_COPEDENT_OFFSET + stringStartLoc + pedalStartLoc + (COPEDENT_SIZ
 5474              		.loc 1 1829 0 discriminator 3
 5475 0132 BB88     		ldrh	r3, [r7, #4]	@ movhi
 5476 0134 DAB2     		uxtb	r2, r3
 5477 0136 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5478 0138 DBB2     		uxtb	r3, r3
 5479 013a 1344     		add	r3, r3, r2
 5480 013c DAB2     		uxtb	r2, r3
 5481 013e 424B     		ldr	r3, .L265+20
 5482 0140 1B68     		ldr	r3, [r3]
 5483 0142 DBB2     		uxtb	r3, r3
 5484 0144 1B01     		lsls	r3, r3, #4
 5485 0146 DBB2     		uxtb	r3, r3
 5486 0148 1344     		add	r3, r3, r2
 5487 014a DAB2     		uxtb	r2, r3
 5488 014c 404B     		ldr	r3, .L265+28
 5489 014e 1A70     		strb	r2, [r3]
1830:main.c        ****                 checkStatus = EEPROM_WriteByte(theVal.b[0], EEPROM_COPEDENT_OFFSET + stringStartLoc
 5490              		.loc 1 1830 0 discriminator 3
 5491 0150 3878     		ldrb	r0, [r7]	@ zero_extendqisi2
 5492 0152 BA88     		ldrh	r2, [r7, #4]	@ movhi
 5493 0154 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5494 0156 1344     		add	r3, r3, r2
 5495 0158 9AB2     		uxth	r2, r3
 5496 015a 3B4B     		ldr	r3, .L265+20
 5497 015c 1B68     		ldr	r3, [r3]
 5498 015e 9BB2     		uxth	r3, r3
 5499 0160 1946     		mov	r1, r3	@ movhi
 5500 0162 4901     		lsls	r1, r1, #5
 5501 0164 0B44     		add	r3, r3, r1
 5502 0166 1B01     		lsls	r3, r3, #4
 5503 0168 9BB2     		uxth	r3, r3
 5504 016a 1344     		add	r3, r3, r2
 5505 016c 9BB2     		uxth	r3, r3
 5506 016e 1946     		mov	r1, r3
 5507 0170 FFF7FEFF 		bl	EEPROM_WriteByte
 5508 0174 0346     		mov	r3, r0
 5509 0176 DAB2     		uxtb	r2, r3
 5510 0178 364B     		ldr	r3, .L265+32
 5511 017a 1A70     		strb	r2, [r3]
1831:main.c        ****                 checkStatus = EEPROM_WriteByte(theVal.b[1], EEPROM_COPEDENT_OFFSET + stringStartLoc
 5512              		.loc 1 1831 0 discriminator 3
 5513 017c 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 5514 017e BA88     		ldrh	r2, [r7, #4]	@ movhi
 5515 0180 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5516 0182 1344     		add	r3, r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 131


 5517 0184 9AB2     		uxth	r2, r3
 5518 0186 304B     		ldr	r3, .L265+20
 5519 0188 1B68     		ldr	r3, [r3]
 5520 018a 9BB2     		uxth	r3, r3
 5521 018c 1946     		mov	r1, r3	@ movhi
 5522 018e 4901     		lsls	r1, r1, #5
 5523 0190 0B44     		add	r3, r3, r1
 5524 0192 1B01     		lsls	r3, r3, #4
 5525 0194 9BB2     		uxth	r3, r3
 5526 0196 1344     		add	r3, r3, r2
 5527 0198 9BB2     		uxth	r3, r3
 5528 019a 0133     		adds	r3, r3, #1
 5529 019c 9BB2     		uxth	r3, r3
 5530 019e 1946     		mov	r1, r3
 5531 01a0 FFF7FEFF 		bl	EEPROM_WriteByte
 5532 01a4 0346     		mov	r3, r0
 5533 01a6 DAB2     		uxtb	r2, r3
 5534 01a8 2A4B     		ldr	r3, .L265+32
 5535 01aa 1A70     		strb	r2, [r3]
1832:main.c        ****                 checkStatus = EEPROM_WriteByte(theVal.b[2], EEPROM_COPEDENT_OFFSET + stringStartLoc
 5536              		.loc 1 1832 0 discriminator 3
 5537 01ac B878     		ldrb	r0, [r7, #2]	@ zero_extendqisi2
 5538 01ae BA88     		ldrh	r2, [r7, #4]	@ movhi
 5539 01b0 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5540 01b2 1344     		add	r3, r3, r2
 5541 01b4 9AB2     		uxth	r2, r3
 5542 01b6 244B     		ldr	r3, .L265+20
 5543 01b8 1B68     		ldr	r3, [r3]
 5544 01ba 9BB2     		uxth	r3, r3
 5545 01bc 1946     		mov	r1, r3	@ movhi
 5546 01be 4901     		lsls	r1, r1, #5
 5547 01c0 0B44     		add	r3, r3, r1
 5548 01c2 1B01     		lsls	r3, r3, #4
 5549 01c4 9BB2     		uxth	r3, r3
 5550 01c6 1344     		add	r3, r3, r2
 5551 01c8 9BB2     		uxth	r3, r3
 5552 01ca 0233     		adds	r3, r3, #2
 5553 01cc 9BB2     		uxth	r3, r3
 5554 01ce 1946     		mov	r1, r3
 5555 01d0 FFF7FEFF 		bl	EEPROM_WriteByte
 5556 01d4 0346     		mov	r3, r0
 5557 01d6 DAB2     		uxtb	r2, r3
 5558 01d8 1E4B     		ldr	r3, .L265+32
 5559 01da 1A70     		strb	r2, [r3]
1833:main.c        ****                 checkStatus = EEPROM_WriteByte(theVal.b[3], EEPROM_COPEDENT_OFFSET + stringStartLoc
 5560              		.loc 1 1833 0 discriminator 3
 5561 01dc F878     		ldrb	r0, [r7, #3]	@ zero_extendqisi2
 5562 01de BA88     		ldrh	r2, [r7, #4]	@ movhi
 5563 01e0 FB88     		ldrh	r3, [r7, #6]	@ movhi
 5564 01e2 1344     		add	r3, r3, r2
 5565 01e4 9AB2     		uxth	r2, r3
 5566 01e6 184B     		ldr	r3, .L265+20
 5567 01e8 1B68     		ldr	r3, [r3]
 5568 01ea 9BB2     		uxth	r3, r3
 5569 01ec 1946     		mov	r1, r3	@ movhi
 5570 01ee 4901     		lsls	r1, r1, #5
 5571 01f0 0B44     		add	r3, r3, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 132


 5572 01f2 1B01     		lsls	r3, r3, #4
 5573 01f4 9BB2     		uxth	r3, r3
 5574 01f6 1344     		add	r3, r3, r2
 5575 01f8 9BB2     		uxth	r3, r3
 5576 01fa 0333     		adds	r3, r3, #3
 5577 01fc 9BB2     		uxth	r3, r3
 5578 01fe 1946     		mov	r1, r3
 5579 0200 FFF7FEFF 		bl	EEPROM_WriteByte
 5580 0204 0346     		mov	r3, r0
 5581 0206 DAB2     		uxtb	r2, r3
 5582 0208 124B     		ldr	r3, .L265+32
 5583 020a 1A70     		strb	r2, [r3]
1834:main.c        ****             
1835:main.c        ****                 currentFloat++;         
 5584              		.loc 1 1835 0 discriminator 3
 5585 020c 3B69     		ldr	r3, [r7, #16]
 5586 020e 0133     		adds	r3, r3, #1
 5587 0210 3B61     		str	r3, [r7, #16]
 5588              	.LBE26:
1818:main.c        ****             {
 5589              		.loc 1 1818 0 discriminator 3
 5590 0212 FB68     		ldr	r3, [r7, #12]
 5591 0214 0533     		adds	r3, r3, #5
 5592 0216 FB60     		str	r3, [r7, #12]
 5593              	.L263:
1818:main.c        ****             {
 5594              		.loc 1 1818 0 is_stmt 0 discriminator 1
 5595 0218 084B     		ldr	r3, .L265+8
 5596 021a 1B68     		ldr	r3, [r3]
 5597 021c FA68     		ldr	r2, [r7, #12]
 5598 021e 9A42     		cmp	r2, r3
 5599 0220 FFF445AF 		bcc	.L264
 5600              	.L262:
 5601              	.LBE25:
 5602              	.LBE24:
1836:main.c        ****             }
1837:main.c        ****         }
1838:main.c        ****     }
1839:main.c        ****     parsingSysex = 0;
 5603              		.loc 1 1839 0 is_stmt 1
 5604 0224 0C4B     		ldr	r3, .L265+36
 5605 0226 0022     		movs	r2, #0
 5606 0228 1A70     		strb	r2, [r3]
1840:main.c        ****     
1841:main.c        **** }
 5607              		.loc 1 1841 0
 5608 022a 00BF     		nop
 5609 022c 1C37     		adds	r7, r7, #28
 5610              		.cfi_def_cfa_offset 12
 5611 022e BD46     		mov	sp, r7
 5612              		.cfi_def_cfa_register 13
 5613              		@ sp needed
 5614 0230 90BD     		pop	{r4, r7, pc}
 5615              	.L266:
 5616 0232 00BF     		.align	2
 5617              	.L265:
 5618 0234 00000000 		.word	sysexBuffer
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 133


 5619 0238 00000000 		.word	testy
 5620 023c 00000000 		.word	sysexPointer
 5621 0240 00000000 		.word	presetArray
 5622 0244 00000000 		.word	i
 5623 0248 00000000 		.word	currentNeck
 5624 024c 00000000 		.word	copedent
 5625 0250 00000000 		.word	checkBase
 5626 0254 00000000 		.word	checkStatus
 5627 0258 00000000 		.word	parsingSysex
 5628              		.cfi_endproc
 5629              	.LFE91:
 5630              		.size	parseSysex, .-parseSysex
 5631              		.comm	tempMIDI,4,4
 5632              		.section	.text.USB_callbackLocalMidiEvent,"ax",%progbits
 5633              		.align	2
 5634              		.global	USB_callbackLocalMidiEvent
 5635              		.thumb
 5636              		.thumb_func
 5637              		.type	USB_callbackLocalMidiEvent, %function
 5638              	USB_callbackLocalMidiEvent:
 5639              	.LFB92:
1842:main.c        **** 
1843:main.c        **** uint8_t tempMIDI[4];
1844:main.c        **** 
1845:main.c        **** // this gets called if the Brain gets a MIDI message from the computer host
1846:main.c        **** void USB_callbackLocalMidiEvent(uint8 cable, uint8 *midiMsg) CYREENTRANT
1847:main.c        **** {   
 5640              		.loc 1 1847 0
 5641              		.cfi_startproc
 5642              		@ args = 0, pretend = 0, frame = 16
 5643              		@ frame_needed = 1, uses_anonymous_args = 0
 5644 0000 80B5     		push	{r7, lr}
 5645              		.cfi_def_cfa_offset 8
 5646              		.cfi_offset 7, -8
 5647              		.cfi_offset 14, -4
 5648 0002 84B0     		sub	sp, sp, #16
 5649              		.cfi_def_cfa_offset 24
 5650 0004 00AF     		add	r7, sp, #0
 5651              		.cfi_def_cfa_register 7
 5652 0006 0346     		mov	r3, r0
 5653 0008 3960     		str	r1, [r7]
 5654 000a FB71     		strb	r3, [r7, #7]
1848:main.c        ****     tempMIDI[0] = midiMsg[0];
 5655              		.loc 1 1848 0
 5656 000c 3B68     		ldr	r3, [r7]
 5657 000e 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 5658 0010 344B     		ldr	r3, .L276
 5659 0012 1A70     		strb	r2, [r3]
1849:main.c        ****     tempMIDI[1] = midiMsg[1];
 5660              		.loc 1 1849 0
 5661 0014 3B68     		ldr	r3, [r7]
 5662 0016 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 5663 0018 324B     		ldr	r3, .L276
 5664 001a 5A70     		strb	r2, [r3, #1]
1850:main.c        ****      tempMIDI[2] = midiMsg[2];
 5665              		.loc 1 1850 0
 5666 001c 3B68     		ldr	r3, [r7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 134


 5667 001e 9A78     		ldrb	r2, [r3, #2]	@ zero_extendqisi2
 5668 0020 304B     		ldr	r3, .L276
 5669 0022 9A70     		strb	r2, [r3, #2]
1851:main.c        ****      tempMIDI[3] = midiMsg[3];
 5670              		.loc 1 1851 0
 5671 0024 3B68     		ldr	r3, [r7]
 5672 0026 DA78     		ldrb	r2, [r3, #3]	@ zero_extendqisi2
 5673 0028 2E4B     		ldr	r3, .L276
 5674 002a DA70     		strb	r2, [r3, #3]
1852:main.c        ****     //check that we got here
1853:main.c        ****     
1854:main.c        ****     if ((USB_active) && (USB_VBusPresent()))
 5675              		.loc 1 1854 0
 5676 002c 2E4B     		ldr	r3, .L276+4
 5677 002e 1B78     		ldrb	r3, [r3]
 5678 0030 DBB2     		uxtb	r3, r3
 5679 0032 002B     		cmp	r3, #0
 5680 0034 52D0     		beq	.L275
 5681              		.loc 1 1854 0 is_stmt 0 discriminator 1
 5682 0036 FFF7FEFF 		bl	USB_VBusPresent
 5683 003a 0346     		mov	r3, r0
 5684 003c 002B     		cmp	r3, #0
 5685 003e 4DD0     		beq	.L275
1855:main.c        ****     { 
1856:main.c        ****         /*
1857:main.c        ****         if(midiMsg[USB_EVENT_BYTE0] == USB_MIDI_NOTE_ON)
1858:main.c        ****         {
1859:main.c        ****     
1860:main.c        ****             //write the note on into the mastrKeys array, which stores all the pitches on/off info 
1861:main.c        ****             masterKeys[ midiMsg[USB_EVENT_BYTE1] ][0] = midiMsg[USB_EVENT_BYTE2];
1862:main.c        ****             int possibleKey = (int)USB_EVENT_BYTE1 + (int)cvOffsetFinal - 32 - (int)keyOffset;
1863:main.c        ****             if ((possibleKey < NUM_KEYS) && (possibleKey >= 0))
1864:main.c        ****             {
1865:main.c        ****                 //looks like the MIDI note from the computer also lands on the keyboard with the cu
1866:main.c        ****                 masterKeys[ midiMsg[USB_EVENT_BYTE1] ][1] = possibleKey;
1867:main.c        ****             }
1868:main.c        ****             else
1869:main.c        ****             {
1870:main.c        ****                 masterKeys[ midiMsg[USB_EVENT_BYTE1] ][1] = -1;
1871:main.c        ****             }
1872:main.c        ****             if (midiMsg[USB_EVENT_BYTE2] > 0)
1873:main.c        ****             {
1874:main.c        ****                 //note on
1875:main.c        ****                 addToNoteStack(midiMsg[USB_EVENT_BYTE1]);
1876:main.c        ****                 if (mainMode == SEQUENCERMODE)
1877:main.c        ****                 {
1878:main.c        ****                     if (toggleKeys[midiMsg[USB_EVENT_BYTE1]] == 0)
1879:main.c        ****                     {
1880:main.c        ****                         toggleKeys[midiMsg[USB_EVENT_BYTE1]] = 1;
1881:main.c        ****                         addToSequencerStack(midiMsg[USB_EVENT_BYTE1]);
1882:main.c        ****                     }
1883:main.c        ****                     else
1884:main.c        ****                     {
1885:main.c        ****                         toggleKeys[midiMsg[USB_EVENT_BYTE1]] = 0;
1886:main.c        ****                         removeFromSequencerStack(midiMsg[USB_EVENT_BYTE1]);
1887:main.c        ****                     }
1888:main.c        ****                 }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 135


1889:main.c        ****             }
1890:main.c        ****             else
1891:main.c        ****             {
1892:main.c        ****                 //note off
1893:main.c        ****                 removeFromNoteStack(midiMsg[USB_EVENT_BYTE1]);
1894:main.c        ****             }
1895:main.c        ****             
1896:main.c        ****         }
1897:main.c        ****         
1898:main.c        ****         if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_CONTROL_CHANGE)
1899:main.c        ****         {
1900:main.c        ****             computerCC[midiMsg[USB_EVENT_BYTE2]] = midiMsg[USB_EVENT_BYTE1];
1901:main.c        ****             
1902:main.c        ****             if (midiMsg[USB_EVENT_BYTE2] == 0) // low res 7-bit full value
1903:main.c        ****             {
1904:main.c        ****                 DACvalue16 = (midiMsg[USB_EVENT_BYTE1] << 5); 
1905:main.c        ****                 //send the DAC value to masterpitch sensor
1906:main.c        ****                 WriteCommandPacket((DACvalue16 >> 8),(DACvalue16 & 255) , masterPitch);
1907:main.c        ****             }
1908:main.c        ****             
1909:main.c        ****             if (midiMsg[USB_EVENT_BYTE2] == 1) // high byte
1910:main.c        ****             {
1911:main.c        ****                 DACvalue16 = (midiMsg[USB_EVENT_BYTE1] << 7) + DAClowbyte7; 
1912:main.c        ****                 //send the DAC value to masterpitch sensor
1913:main.c        ****                 WriteCommandPacket((DACvalue16 >> 8),(DACvalue16 & 255) , masterPitch);
1914:main.c        ****             }
1915:main.c        ****             if (midiMsg[USB_EVENT_BYTE2] == 2) // low byte
1916:main.c        ****             {
1917:main.c        ****                 DAClowbyte7 = midiMsg[USB_EVENT_BYTE1];
1918:main.c        ****             }
1919:main.c        **** 
1920:main.c        ****         }
1921:main.c        ****         */
1922:main.c        ****         
1923:main.c        ****         if (receivingSysex)
 5686              		.loc 1 1923 0 is_stmt 1
 5687 0040 2A4B     		ldr	r3, .L276+8
 5688 0042 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5689 0044 002B     		cmp	r3, #0
 5690 0046 29D0     		beq	.L269
 5691              	.LBB27:
1924:main.c        ****         {
1925:main.c        ****             for (int i = 0; i < 3; i++)
 5692              		.loc 1 1925 0
 5693 0048 0023     		movs	r3, #0
 5694 004a FB60     		str	r3, [r7, #12]
 5695 004c 23E0     		b	.L270
 5696              	.L273:
1926:main.c        ****             {
1927:main.c        ****                 if (midiMsg[i] < 128)
 5697              		.loc 1 1927 0
 5698 004e FB68     		ldr	r3, [r7, #12]
 5699 0050 3A68     		ldr	r2, [r7]
 5700 0052 1344     		add	r3, r3, r2
 5701 0054 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5702 0056 5BB2     		sxtb	r3, r3
 5703 0058 002B     		cmp	r3, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 136


 5704 005a 0BDB     		blt	.L271
1928:main.c        ****                 {
1929:main.c        ****                     sysexBuffer[sysexPointer++] = midiMsg[i];
 5705              		.loc 1 1929 0
 5706 005c 244B     		ldr	r3, .L276+12
 5707 005e 1B68     		ldr	r3, [r3]
 5708 0060 5A1C     		adds	r2, r3, #1
 5709 0062 2349     		ldr	r1, .L276+12
 5710 0064 0A60     		str	r2, [r1]
 5711 0066 FA68     		ldr	r2, [r7, #12]
 5712 0068 3968     		ldr	r1, [r7]
 5713 006a 0A44     		add	r2, r2, r1
 5714 006c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 5715 006e 214A     		ldr	r2, .L276+16
 5716 0070 D154     		strb	r1, [r2, r3]
 5717 0072 0DE0     		b	.L272
 5718              	.L271:
1930:main.c        ****                 }
1931:main.c        ****                 else
1932:main.c        ****                 {
1933:main.c        ****                     if (midiMsg[i] == USB_MIDI_EOSEX)
 5719              		.loc 1 1933 0
 5720 0074 FB68     		ldr	r3, [r7, #12]
 5721 0076 3A68     		ldr	r2, [r7]
 5722 0078 1344     		add	r3, r3, r2
 5723 007a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5724 007c F72B     		cmp	r3, #247
 5725 007e 07D1     		bne	.L272
1934:main.c        ****                     {
1935:main.c        ****                         receivingSysex = 0;
 5726              		.loc 1 1935 0
 5727 0080 1A4B     		ldr	r3, .L276+8
 5728 0082 0022     		movs	r2, #0
 5729 0084 1A70     		strb	r2, [r3]
1936:main.c        ****                         parsingSysex = 1;
 5730              		.loc 1 1936 0
 5731 0086 1C4B     		ldr	r3, .L276+20
 5732 0088 0122     		movs	r2, #1
 5733 008a 1A70     		strb	r2, [r3]
1937:main.c        ****                         parseSysex();
 5734              		.loc 1 1937 0
 5735 008c FFF7FEFF 		bl	parseSysex
 5736              	.L272:
1925:main.c        ****             {
 5737              		.loc 1 1925 0 discriminator 2
 5738 0090 FB68     		ldr	r3, [r7, #12]
 5739 0092 0133     		adds	r3, r3, #1
 5740 0094 FB60     		str	r3, [r7, #12]
 5741              	.L270:
1925:main.c        ****             {
 5742              		.loc 1 1925 0 is_stmt 0 discriminator 1
 5743 0096 FB68     		ldr	r3, [r7, #12]
 5744 0098 022B     		cmp	r3, #2
 5745 009a D8DD     		ble	.L273
 5746              	.L269:
 5747              	.LBE27:
1938:main.c        ****                      }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 137


1939:main.c        ****                 }
1940:main.c        ****             }
1941:main.c        **** 
1942:main.c        ****         }
1943:main.c        ****         if (midiMsg[USB_EVENT_BYTE0] == USB_MIDI_SYSEX)
 5748              		.loc 1 1943 0 is_stmt 1
 5749 009c 3B68     		ldr	r3, [r7]
 5750 009e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5751 00a0 F02B     		cmp	r3, #240
 5752 00a2 1BD1     		bne	.L275
1944:main.c        ****         {
1945:main.c        ****             if (!parsingSysex)
 5753              		.loc 1 1945 0
 5754 00a4 144B     		ldr	r3, .L276+20
 5755 00a6 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 5756 00a8 002B     		cmp	r3, #0
 5757 00aa 17D1     		bne	.L275
1946:main.c        ****             {
1947:main.c        ****                 receivingSysex = 1;
 5758              		.loc 1 1947 0
 5759 00ac 0F4B     		ldr	r3, .L276+8
 5760 00ae 0122     		movs	r2, #1
 5761 00b0 1A70     		strb	r2, [r3]
1948:main.c        ****                 sysexPointer = 0;
 5762              		.loc 1 1948 0
 5763 00b2 0F4B     		ldr	r3, .L276+12
 5764 00b4 0022     		movs	r2, #0
 5765 00b6 1A60     		str	r2, [r3]
1949:main.c        ****                 sysexBuffer[sysexPointer++] = midiMsg[1];
 5766              		.loc 1 1949 0
 5767 00b8 0D4B     		ldr	r3, .L276+12
 5768 00ba 1B68     		ldr	r3, [r3]
 5769 00bc 5A1C     		adds	r2, r3, #1
 5770 00be 0C49     		ldr	r1, .L276+12
 5771 00c0 0A60     		str	r2, [r1]
 5772 00c2 3A68     		ldr	r2, [r7]
 5773 00c4 5178     		ldrb	r1, [r2, #1]	@ zero_extendqisi2
 5774 00c6 0B4A     		ldr	r2, .L276+16
 5775 00c8 D154     		strb	r1, [r2, r3]
1950:main.c        ****                 sysexBuffer[sysexPointer++] = midiMsg[2];
 5776              		.loc 1 1950 0
 5777 00ca 094B     		ldr	r3, .L276+12
 5778 00cc 1B68     		ldr	r3, [r3]
 5779 00ce 5A1C     		adds	r2, r3, #1
 5780 00d0 0749     		ldr	r1, .L276+12
 5781 00d2 0A60     		str	r2, [r1]
 5782 00d4 3A68     		ldr	r2, [r7]
 5783 00d6 9178     		ldrb	r1, [r2, #2]	@ zero_extendqisi2
 5784 00d8 064A     		ldr	r2, .L276+16
 5785 00da D154     		strb	r1, [r2, r3]
 5786              	.L275:
1951:main.c        ****             }
1952:main.c        ****         }
1953:main.c        ****         
1954:main.c        ****         cable = cable; // so it doesn't complain about unused variables
1955:main.c        ****     }
1956:main.c        **** }    
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 138


 5787              		.loc 1 1956 0
 5788 00dc 00BF     		nop
 5789 00de 1037     		adds	r7, r7, #16
 5790              		.cfi_def_cfa_offset 8
 5791 00e0 BD46     		mov	sp, r7
 5792              		.cfi_def_cfa_register 13
 5793              		@ sp needed
 5794 00e2 80BD     		pop	{r7, pc}
 5795              	.L277:
 5796              		.align	2
 5797              	.L276:
 5798 00e4 00000000 		.word	tempMIDI
 5799 00e8 00000000 		.word	USB_active
 5800 00ec 00000000 		.word	receivingSysex
 5801 00f0 00000000 		.word	sysexPointer
 5802 00f4 00000000 		.word	sysexBuffer
 5803 00f8 00000000 		.word	parsingSysex
 5804              		.cfi_endproc
 5805              	.LFE92:
 5806              		.size	USB_callbackLocalMidiEvent, .-USB_callbackLocalMidiEvent
 5807              		.text
 5808              	.Letext0:
 5809              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5810              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5811              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 5812              		.file 5 "Generated_Source\\PSoC5/cy_em_eeprom.h"
 5813              		.file 6 "c:\\program files (x86)\\cypress\\psoc creator\\4.4\\psoc creator\\import\\gnu\\arm\\5.4.
 5814              		.file 7 "Generated_Source\\PSoC5/Em_EEPROM.h"
 5815              		.file 8 "Generated_Source\\PSoC5/core_cm3.h"
 5816              		.file 9 "oled.h"
 5817              		.section	.debug_info,"",%progbits
 5818              	.Ldebug_info0:
 5819 0000 00150000 		.4byte	0x1500
 5820 0004 0400     		.2byte	0x4
 5821 0006 00000000 		.4byte	.Ldebug_abbrev0
 5822 000a 04       		.byte	0x4
 5823 000b 01       		.uleb128 0x1
 5824 000c 27060000 		.4byte	.LASF230
 5825 0010 0C       		.byte	0xc
 5826 0011 58070000 		.4byte	.LASF231
 5827 0015 83040000 		.4byte	.LASF232
 5828 0019 00000000 		.4byte	.Ldebug_ranges0+0
 5829 001d 00000000 		.4byte	0
 5830 0021 00000000 		.4byte	.Ldebug_line0
 5831 0025 02       		.uleb128 0x2
 5832 0026 01       		.byte	0x1
 5833 0027 06       		.byte	0x6
 5834 0028 42020000 		.4byte	.LASF0
 5835 002c 03       		.uleb128 0x3
 5836 002d 74010000 		.4byte	.LASF2
 5837 0031 02       		.byte	0x2
 5838 0032 1D       		.byte	0x1d
 5839 0033 37000000 		.4byte	0x37
 5840 0037 02       		.uleb128 0x2
 5841 0038 01       		.byte	0x1
 5842 0039 08       		.byte	0x8
 5843 003a B1020000 		.4byte	.LASF1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 139


 5844 003e 03       		.uleb128 0x3
 5845 003f D8090000 		.4byte	.LASF3
 5846 0043 02       		.byte	0x2
 5847 0044 29       		.byte	0x29
 5848 0045 49000000 		.4byte	0x49
 5849 0049 02       		.uleb128 0x2
 5850 004a 02       		.byte	0x2
 5851 004b 05       		.byte	0x5
 5852 004c 6D0A0000 		.4byte	.LASF4
 5853 0050 03       		.uleb128 0x3
 5854 0051 54030000 		.4byte	.LASF5
 5855 0055 02       		.byte	0x2
 5856 0056 2B       		.byte	0x2b
 5857 0057 5B000000 		.4byte	0x5b
 5858 005b 02       		.uleb128 0x2
 5859 005c 02       		.byte	0x2
 5860 005d 07       		.byte	0x7
 5861 005e 770B0000 		.4byte	.LASF6
 5862 0062 03       		.uleb128 0x3
 5863 0063 950B0000 		.4byte	.LASF7
 5864 0067 02       		.byte	0x2
 5865 0068 3F       		.byte	0x3f
 5866 0069 6D000000 		.4byte	0x6d
 5867 006d 02       		.uleb128 0x2
 5868 006e 04       		.byte	0x4
 5869 006f 05       		.byte	0x5
 5870 0070 9B010000 		.4byte	.LASF8
 5871 0074 03       		.uleb128 0x3
 5872 0075 08070000 		.4byte	.LASF9
 5873 0079 02       		.byte	0x2
 5874 007a 41       		.byte	0x41
 5875 007b 7F000000 		.4byte	0x7f
 5876 007f 02       		.uleb128 0x2
 5877 0080 04       		.byte	0x4
 5878 0081 07       		.byte	0x7
 5879 0082 60050000 		.4byte	.LASF10
 5880 0086 02       		.uleb128 0x2
 5881 0087 08       		.byte	0x8
 5882 0088 05       		.byte	0x5
 5883 0089 13070000 		.4byte	.LASF11
 5884 008d 02       		.uleb128 0x2
 5885 008e 08       		.byte	0x8
 5886 008f 07       		.byte	0x7
 5887 0090 46090000 		.4byte	.LASF12
 5888 0094 04       		.uleb128 0x4
 5889 0095 04       		.byte	0x4
 5890 0096 05       		.byte	0x5
 5891 0097 696E7400 		.ascii	"int\000"
 5892 009b 02       		.uleb128 0x2
 5893 009c 04       		.byte	0x4
 5894 009d 07       		.byte	0x7
 5895 009e E6070000 		.4byte	.LASF13
 5896 00a2 03       		.uleb128 0x3
 5897 00a3 4E020000 		.4byte	.LASF14
 5898 00a7 03       		.byte	0x3
 5899 00a8 18       		.byte	0x18
 5900 00a9 2C000000 		.4byte	0x2c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 140


 5901 00ad 03       		.uleb128 0x3
 5902 00ae A70A0000 		.4byte	.LASF15
 5903 00b2 03       		.byte	0x3
 5904 00b3 20       		.byte	0x20
 5905 00b4 3E000000 		.4byte	0x3e
 5906 00b8 03       		.uleb128 0x3
 5907 00b9 5D090000 		.4byte	.LASF16
 5908 00bd 03       		.byte	0x3
 5909 00be 24       		.byte	0x24
 5910 00bf 50000000 		.4byte	0x50
 5911 00c3 03       		.uleb128 0x3
 5912 00c4 5C000000 		.4byte	.LASF17
 5913 00c8 03       		.byte	0x3
 5914 00c9 2C       		.byte	0x2c
 5915 00ca 62000000 		.4byte	0x62
 5916 00ce 03       		.uleb128 0x3
 5917 00cf 450B0000 		.4byte	.LASF18
 5918 00d3 03       		.byte	0x3
 5919 00d4 30       		.byte	0x30
 5920 00d5 74000000 		.4byte	0x74
 5921 00d9 05       		.uleb128 0x5
 5922 00da 410A0000 		.4byte	.LASF19
 5923 00de 04       		.byte	0x4
 5924 00df E901     		.2byte	0x1e9
 5925 00e1 37000000 		.4byte	0x37
 5926 00e5 05       		.uleb128 0x5
 5927 00e6 F70B0000 		.4byte	.LASF20
 5928 00ea 04       		.byte	0x4
 5929 00eb EA01     		.2byte	0x1ea
 5930 00ed 5B000000 		.4byte	0x5b
 5931 00f1 05       		.uleb128 0x5
 5932 00f2 98000000 		.4byte	.LASF21
 5933 00f6 04       		.byte	0x4
 5934 00f7 EB01     		.2byte	0x1eb
 5935 00f9 7F000000 		.4byte	0x7f
 5936 00fd 02       		.uleb128 0x2
 5937 00fe 04       		.byte	0x4
 5938 00ff 04       		.byte	0x4
 5939 0100 91070000 		.4byte	.LASF22
 5940 0104 02       		.uleb128 0x2
 5941 0105 08       		.byte	0x8
 5942 0106 04       		.byte	0x4
 5943 0107 51070000 		.4byte	.LASF23
 5944 010b 02       		.uleb128 0x2
 5945 010c 01       		.byte	0x1
 5946 010d 08       		.byte	0x8
 5947 010e 2B030000 		.4byte	.LASF24
 5948 0112 05       		.uleb128 0x5
 5949 0113 2B080000 		.4byte	.LASF25
 5950 0117 04       		.byte	0x4
 5951 0118 8B02     		.2byte	0x28b
 5952 011a 7F000000 		.4byte	0x7f
 5953 011e 05       		.uleb128 0x5
 5954 011f AB090000 		.4byte	.LASF26
 5955 0123 04       		.byte	0x4
 5956 0124 9302     		.2byte	0x293
 5957 0126 2A010000 		.4byte	0x12a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 141


 5958 012a 06       		.uleb128 0x6
 5959 012b D9000000 		.4byte	0xd9
 5960 012f 02       		.uleb128 0x2
 5961 0130 08       		.byte	0x8
 5962 0131 04       		.byte	0x4
 5963 0132 CE080000 		.4byte	.LASF27
 5964 0136 02       		.uleb128 0x2
 5965 0137 04       		.byte	0x4
 5966 0138 07       		.byte	0x7
 5967 0139 0C000000 		.4byte	.LASF28
 5968 013d 07       		.uleb128 0x7
 5969 013e D9000000 		.4byte	0xd9
 5970 0142 4D010000 		.4byte	0x14d
 5971 0146 08       		.uleb128 0x8
 5972 0147 36010000 		.4byte	0x136
 5973 014b 03       		.byte	0x3
 5974 014c 00       		.byte	0
 5975 014d 09       		.uleb128 0x9
 5976 014e 1C       		.byte	0x1c
 5977 014f 05       		.byte	0x5
 5978 0150 1601     		.2byte	0x116
 5979 0152 BF010000 		.4byte	0x1bf
 5980 0156 0A       		.uleb128 0xa
 5981 0157 56020000 		.4byte	.LASF29
 5982 015b 05       		.byte	0x5
 5983 015c 1B01     		.2byte	0x11b
 5984 015e F1000000 		.4byte	0xf1
 5985 0162 00       		.byte	0
 5986 0163 0A       		.uleb128 0xa
 5987 0164 41010000 		.4byte	.LASF30
 5988 0168 05       		.byte	0x5
 5989 0169 2001     		.2byte	0x120
 5990 016b F1000000 		.4byte	0xf1
 5991 016f 04       		.byte	0x4
 5992 0170 0A       		.uleb128 0xa
 5993 0171 C20B0000 		.4byte	.LASF31
 5994 0175 05       		.byte	0x5
 5995 0176 2301     		.2byte	0x123
 5996 0178 F1000000 		.4byte	0xf1
 5997 017c 08       		.byte	0x8
 5998 017d 0A       		.uleb128 0xa
 5999 017e BC0A0000 		.4byte	.LASF32
 6000 0182 05       		.byte	0x5
 6001 0183 2601     		.2byte	0x126
 6002 0185 F1000000 		.4byte	0xf1
 6003 0189 0C       		.byte	0xc
 6004 018a 0A       		.uleb128 0xa
 6005 018b F50A0000 		.4byte	.LASF33
 6006 018f 05       		.byte	0x5
 6007 0190 2B01     		.2byte	0x12b
 6008 0192 F1000000 		.4byte	0xf1
 6009 0196 10       		.byte	0x10
 6010 0197 0A       		.uleb128 0xa
 6011 0198 66010000 		.4byte	.LASF34
 6012 019c 05       		.byte	0x5
 6013 019d 2E01     		.2byte	0x12e
 6014 019f D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 142


 6015 01a3 14       		.byte	0x14
 6016 01a4 0A       		.uleb128 0xa
 6017 01a5 43070000 		.4byte	.LASF35
 6018 01a9 05       		.byte	0x5
 6019 01aa 3301     		.2byte	0x133
 6020 01ac D9000000 		.4byte	0xd9
 6021 01b0 15       		.byte	0x15
 6022 01b1 0A       		.uleb128 0xa
 6023 01b2 2E010000 		.4byte	.LASF36
 6024 01b6 05       		.byte	0x5
 6025 01b7 3601     		.2byte	0x136
 6026 01b9 F1000000 		.4byte	0xf1
 6027 01bd 18       		.byte	0x18
 6028 01be 00       		.byte	0
 6029 01bf 05       		.uleb128 0x5
 6030 01c0 48050000 		.4byte	.LASF37
 6031 01c4 05       		.byte	0x5
 6032 01c5 3701     		.2byte	0x137
 6033 01c7 4D010000 		.4byte	0x14d
 6034 01cb 0B       		.uleb128 0xb
 6035 01cc 01       		.byte	0x1
 6036 01cd 37000000 		.4byte	0x37
 6037 01d1 05       		.byte	0x5
 6038 01d2 5401     		.2byte	0x154
 6039 01d4 F7010000 		.4byte	0x1f7
 6040 01d8 0C       		.uleb128 0xc
 6041 01d9 47000000 		.4byte	.LASF38
 6042 01dd 00       		.byte	0
 6043 01de 0C       		.uleb128 0xc
 6044 01df F5030000 		.4byte	.LASF39
 6045 01e3 01       		.byte	0x1
 6046 01e4 0C       		.uleb128 0xc
 6047 01e5 14010000 		.4byte	.LASF40
 6048 01e9 02       		.byte	0x2
 6049 01ea 0C       		.uleb128 0xc
 6050 01eb 85020000 		.4byte	.LASF41
 6051 01ef 03       		.byte	0x3
 6052 01f0 0C       		.uleb128 0xc
 6053 01f1 EF050000 		.4byte	.LASF42
 6054 01f5 04       		.byte	0x4
 6055 01f6 00       		.byte	0
 6056 01f7 05       		.uleb128 0x5
 6057 01f8 D1000000 		.4byte	.LASF43
 6058 01fc 05       		.byte	0x5
 6059 01fd 5A01     		.2byte	0x15a
 6060 01ff CB010000 		.4byte	0x1cb
 6061 0203 06       		.uleb128 0x6
 6062 0204 A2000000 		.4byte	0xa2
 6063 0208 06       		.uleb128 0x6
 6064 0209 B8000000 		.4byte	0xb8
 6065 020d 03       		.uleb128 0x3
 6066 020e 97030000 		.4byte	.LASF44
 6067 0212 06       		.byte	0x6
 6068 0213 6C       		.byte	0x6c
 6069 0214 9B000000 		.4byte	0x9b
 6070 0218 0D       		.uleb128 0xd
 6071 0219 9B020000 		.4byte	.LASF233
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 143


 6072 021d 01       		.byte	0x1
 6073 021e 37000000 		.4byte	0x37
 6074 0222 09       		.byte	0x9
 6075 0223 1C       		.byte	0x1c
 6076 0224 47020000 		.4byte	0x247
 6077 0228 0C       		.uleb128 0xc
 6078 0229 D1060000 		.4byte	.LASF45
 6079 022d 00       		.byte	0
 6080 022e 0C       		.uleb128 0xc
 6081 022f FC010000 		.4byte	.LASF46
 6082 0233 01       		.byte	0x1
 6083 0234 0C       		.uleb128 0xc
 6084 0235 76000000 		.4byte	.LASF47
 6085 0239 02       		.byte	0x2
 6086 023a 0C       		.uleb128 0xc
 6087 023b 26040000 		.4byte	.LASF48
 6088 023f 03       		.byte	0x3
 6089 0240 0C       		.uleb128 0xc
 6090 0241 C9000000 		.4byte	.LASF49
 6091 0245 04       		.byte	0x4
 6092 0246 00       		.byte	0
 6093 0247 0E       		.uleb128 0xe
 6094 0248 75090000 		.4byte	.LASF234
 6095 024c 04       		.byte	0x4
 6096 024d 01       		.byte	0x1
 6097 024e 56       		.byte	0x56
 6098 024f 71020000 		.4byte	0x271
 6099 0253 0F       		.uleb128 0xf
 6100 0254 6600     		.ascii	"f\000"
 6101 0256 01       		.byte	0x1
 6102 0257 57       		.byte	0x57
 6103 0258 FD000000 		.4byte	0xfd
 6104 025c 0F       		.uleb128 0xf
 6105 025d 6200     		.ascii	"b\000"
 6106 025f 01       		.byte	0x1
 6107 0260 58       		.byte	0x58
 6108 0261 71020000 		.4byte	0x271
 6109 0265 0F       		.uleb128 0xf
 6110 0266 75333200 		.ascii	"u32\000"
 6111 026a 01       		.byte	0x1
 6112 026b 59       		.byte	0x59
 6113 026c CE000000 		.4byte	0xce
 6114 0270 00       		.byte	0
 6115 0271 07       		.uleb128 0x7
 6116 0272 A2000000 		.4byte	0xa2
 6117 0276 81020000 		.4byte	0x281
 6118 027a 08       		.uleb128 0x8
 6119 027b 36010000 		.4byte	0x136
 6120 027f 03       		.byte	0x3
 6121 0280 00       		.byte	0
 6122 0281 10       		.uleb128 0x10
 6123 0282 7B020000 		.4byte	.LASF50
 6124 0286 01       		.byte	0x1
 6125 0287 5D       		.byte	0x5d
 6126 0288 00000000 		.4byte	.LFB64
 6127 028c A0000000 		.4byte	.LFE64-.LFB64
 6128 0290 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 144


 6129 0291 9C       		.byte	0x9c
 6130 0292 11       		.uleb128 0x11
 6131 0293 240A0000 		.4byte	.LASF95
 6132 0297 01       		.byte	0x1
 6133 0298 79       		.byte	0x79
 6134 0299 00000000 		.4byte	.LFB65
 6135 029d 20010000 		.4byte	.LFE65-.LFB65
 6136 02a1 01       		.uleb128 0x1
 6137 02a2 9C       		.byte	0x9c
 6138 02a3 BE020000 		.4byte	0x2be
 6139 02a7 12       		.uleb128 0x12
 6140 02a8 80000000 		.4byte	.LBB2
 6141 02ac 62000000 		.4byte	.LBE2-.LBB2
 6142 02b0 13       		.uleb128 0x13
 6143 02b1 6900     		.ascii	"i\000"
 6144 02b3 01       		.byte	0x1
 6145 02b4 86       		.byte	0x86
 6146 02b5 94000000 		.4byte	0x94
 6147 02b9 02       		.uleb128 0x2
 6148 02ba 91       		.byte	0x91
 6149 02bb 6C       		.sleb128 -20
 6150 02bc 00       		.byte	0
 6151 02bd 00       		.byte	0
 6152 02be 10       		.uleb128 0x10
 6153 02bf 8A090000 		.4byte	.LASF51
 6154 02c3 01       		.byte	0x1
 6155 02c4 BC       		.byte	0xbc
 6156 02c5 00000000 		.4byte	.LFB66
 6157 02c9 A4000000 		.4byte	.LFE66-.LFB66
 6158 02cd 01       		.uleb128 0x1
 6159 02ce 9C       		.byte	0x9c
 6160 02cf 14       		.uleb128 0x14
 6161 02d0 75080000 		.4byte	.LASF52
 6162 02d4 01       		.byte	0x1
 6163 02d5 DC       		.byte	0xdc
 6164 02d6 00000000 		.4byte	.LFB67
 6165 02da 18000000 		.4byte	.LFE67-.LFB67
 6166 02de 01       		.uleb128 0x1
 6167 02df 9C       		.byte	0x9c
 6168 02e0 15       		.uleb128 0x15
 6169 02e1 EA010000 		.4byte	.LASF53
 6170 02e5 01       		.byte	0x1
 6171 02e6 2401     		.2byte	0x124
 6172 02e8 00000000 		.4byte	.LFB68
 6173 02ec 40000000 		.4byte	.LFE68-.LFB68
 6174 02f0 01       		.uleb128 0x1
 6175 02f1 9C       		.byte	0x9c
 6176 02f2 15       		.uleb128 0x15
 6177 02f3 08080000 		.4byte	.LASF54
 6178 02f7 01       		.byte	0x1
 6179 02f8 5101     		.2byte	0x151
 6180 02fa 00000000 		.4byte	.LFB69
 6181 02fe 14000000 		.4byte	.LFE69-.LFB69
 6182 0302 01       		.uleb128 0x1
 6183 0303 9C       		.byte	0x9c
 6184 0304 15       		.uleb128 0x15
 6185 0305 E6060000 		.4byte	.LASF55
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 145


 6186 0309 01       		.byte	0x1
 6187 030a 5C01     		.2byte	0x15c
 6188 030c 00000000 		.4byte	.LFB70
 6189 0310 74000000 		.4byte	.LFE70-.LFB70
 6190 0314 01       		.uleb128 0x1
 6191 0315 9C       		.byte	0x9c
 6192 0316 16       		.uleb128 0x16
 6193 0317 45030000 		.4byte	.LASF58
 6194 031b 01       		.byte	0x1
 6195 031c 7401     		.2byte	0x174
 6196 031e FD000000 		.4byte	0xfd
 6197 0322 00000000 		.4byte	.LFB71
 6198 0326 58000000 		.4byte	.LFE71-.LFB71
 6199 032a 01       		.uleb128 0x1
 6200 032b 9C       		.byte	0x9c
 6201 032c 7C030000 		.4byte	0x37c
 6202 0330 17       		.uleb128 0x17
 6203 0331 6D696E00 		.ascii	"min\000"
 6204 0335 01       		.byte	0x1
 6205 0336 7401     		.2byte	0x174
 6206 0338 FD000000 		.4byte	0xfd
 6207 033c 02       		.uleb128 0x2
 6208 033d 91       		.byte	0x91
 6209 033e 6C       		.sleb128 -20
 6210 033f 17       		.uleb128 0x17
 6211 0340 76616C00 		.ascii	"val\000"
 6212 0344 01       		.byte	0x1
 6213 0345 7401     		.2byte	0x174
 6214 0347 FD000000 		.4byte	0xfd
 6215 034b 02       		.uleb128 0x2
 6216 034c 91       		.byte	0x91
 6217 034d 68       		.sleb128 -24
 6218 034e 17       		.uleb128 0x17
 6219 034f 6D617800 		.ascii	"max\000"
 6220 0353 01       		.byte	0x1
 6221 0354 7401     		.2byte	0x174
 6222 0356 FD000000 		.4byte	0xfd
 6223 035a 02       		.uleb128 0x2
 6224 035b 91       		.byte	0x91
 6225 035c 64       		.sleb128 -28
 6226 035d 18       		.uleb128 0x18
 6227 035e 3B070000 		.4byte	.LASF56
 6228 0362 01       		.byte	0x1
 6229 0363 7601     		.2byte	0x176
 6230 0365 FD000000 		.4byte	0xfd
 6231 0369 02       		.uleb128 0x2
 6232 036a 91       		.byte	0x91
 6233 036b 74       		.sleb128 -12
 6234 036c 18       		.uleb128 0x18
 6235 036d FD020000 		.4byte	.LASF57
 6236 0371 01       		.byte	0x1
 6237 0372 7701     		.2byte	0x177
 6238 0374 FD000000 		.4byte	0xfd
 6239 0378 02       		.uleb128 0x2
 6240 0379 91       		.byte	0x91
 6241 037a 70       		.sleb128 -16
 6242 037b 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 146


 6243 037c 16       		.uleb128 0x16
 6244 037d 13020000 		.4byte	.LASF59
 6245 0381 01       		.byte	0x1
 6246 0382 8A01     		.2byte	0x18a
 6247 0384 FD000000 		.4byte	0xfd
 6248 0388 00000000 		.4byte	.LFB72
 6249 038c 68000000 		.4byte	.LFE72-.LFB72
 6250 0390 01       		.uleb128 0x1
 6251 0391 9C       		.byte	0x9c
 6252 0392 A4030000 		.4byte	0x3a4
 6253 0396 17       		.uleb128 0x17
 6254 0397 6600     		.ascii	"f\000"
 6255 0399 01       		.byte	0x1
 6256 039a 8A01     		.2byte	0x18a
 6257 039c FD000000 		.4byte	0xfd
 6258 03a0 02       		.uleb128 0x2
 6259 03a1 91       		.byte	0x91
 6260 03a2 74       		.sleb128 -12
 6261 03a3 00       		.byte	0
 6262 03a4 16       		.uleb128 0x16
 6263 03a5 0D090000 		.4byte	.LASF60
 6264 03a9 01       		.byte	0x1
 6265 03aa 9101     		.2byte	0x191
 6266 03ac FD000000 		.4byte	0xfd
 6267 03b0 00000000 		.4byte	.LFB73
 6268 03b4 4C000000 		.4byte	.LFE73-.LFB73
 6269 03b8 01       		.uleb128 0x1
 6270 03b9 9C       		.byte	0x9c
 6271 03ba CC030000 		.4byte	0x3cc
 6272 03be 17       		.uleb128 0x17
 6273 03bf 6600     		.ascii	"f\000"
 6274 03c1 01       		.byte	0x1
 6275 03c2 9101     		.2byte	0x191
 6276 03c4 FD000000 		.4byte	0xfd
 6277 03c8 02       		.uleb128 0x2
 6278 03c9 91       		.byte	0x91
 6279 03ca 74       		.sleb128 -12
 6280 03cb 00       		.byte	0
 6281 03cc 16       		.uleb128 0x16
 6282 03cd 24050000 		.4byte	.LASF61
 6283 03d1 01       		.byte	0x1
 6284 03d2 9701     		.2byte	0x197
 6285 03d4 FD000000 		.4byte	0xfd
 6286 03d8 00000000 		.4byte	.LFB74
 6287 03dc 46000000 		.4byte	.LFE74-.LFB74
 6288 03e0 01       		.uleb128 0x1
 6289 03e1 9C       		.byte	0x9c
 6290 03e2 2E040000 		.4byte	0x42e
 6291 03e6 17       		.uleb128 0x17
 6292 03e7 4100     		.ascii	"A\000"
 6293 03e9 01       		.byte	0x1
 6294 03ea 9701     		.2byte	0x197
 6295 03ec FD000000 		.4byte	0xfd
 6296 03f0 02       		.uleb128 0x2
 6297 03f1 91       		.byte	0x91
 6298 03f2 6C       		.sleb128 -20
 6299 03f3 17       		.uleb128 0x17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 147


 6300 03f4 4200     		.ascii	"B\000"
 6301 03f6 01       		.byte	0x1
 6302 03f7 9701     		.2byte	0x197
 6303 03f9 FD000000 		.4byte	0xfd
 6304 03fd 02       		.uleb128 0x2
 6305 03fe 91       		.byte	0x91
 6306 03ff 68       		.sleb128 -24
 6307 0400 19       		.uleb128 0x19
 6308 0401 7E010000 		.4byte	.LASF62
 6309 0405 01       		.byte	0x1
 6310 0406 9701     		.2byte	0x197
 6311 0408 FD000000 		.4byte	0xfd
 6312 040c 02       		.uleb128 0x2
 6313 040d 91       		.byte	0x91
 6314 040e 64       		.sleb128 -28
 6315 040f 18       		.uleb128 0x18
 6316 0410 2B020000 		.4byte	.LASF63
 6317 0414 01       		.byte	0x1
 6318 0415 9901     		.2byte	0x199
 6319 0417 FD000000 		.4byte	0xfd
 6320 041b 02       		.uleb128 0x2
 6321 041c 91       		.byte	0x91
 6322 041d 74       		.sleb128 -12
 6323 041e 1A       		.uleb128 0x1a
 6324 041f 6F757400 		.ascii	"out\000"
 6325 0423 01       		.byte	0x1
 6326 0424 9C01     		.2byte	0x19c
 6327 0426 FD000000 		.4byte	0xfd
 6328 042a 02       		.uleb128 0x2
 6329 042b 91       		.byte	0x91
 6330 042c 70       		.sleb128 -16
 6331 042d 00       		.byte	0
 6332 042e 1B       		.uleb128 0x1b
 6333 042f 6D617000 		.ascii	"map\000"
 6334 0433 01       		.byte	0x1
 6335 0434 1E02     		.2byte	0x21e
 6336 0436 FD000000 		.4byte	0xfd
 6337 043a 00000000 		.4byte	.LFB75
 6338 043e 56000000 		.4byte	.LFE75-.LFB75
 6339 0442 01       		.uleb128 0x1
 6340 0443 9C       		.byte	0x9c
 6341 0444 94040000 		.4byte	0x494
 6342 0448 19       		.uleb128 0x19
 6343 0449 05030000 		.4byte	.LASF64
 6344 044d 01       		.byte	0x1
 6345 044e 1E02     		.2byte	0x21e
 6346 0450 FD000000 		.4byte	0xfd
 6347 0454 02       		.uleb128 0x2
 6348 0455 91       		.byte	0x91
 6349 0456 6C       		.sleb128 -20
 6350 0457 19       		.uleb128 0x19
 6351 0458 4E010000 		.4byte	.LASF65
 6352 045c 01       		.byte	0x1
 6353 045d 1E02     		.2byte	0x21e
 6354 045f FD000000 		.4byte	0xfd
 6355 0463 02       		.uleb128 0x2
 6356 0464 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 148


 6357 0465 68       		.sleb128 -24
 6358 0466 19       		.uleb128 0x19
 6359 0467 21060000 		.4byte	.LASF66
 6360 046b 01       		.byte	0x1
 6361 046c 1E02     		.2byte	0x21e
 6362 046e FD000000 		.4byte	0xfd
 6363 0472 02       		.uleb128 0x2
 6364 0473 91       		.byte	0x91
 6365 0474 64       		.sleb128 -28
 6366 0475 19       		.uleb128 0x19
 6367 0476 07060000 		.4byte	.LASF67
 6368 047a 01       		.byte	0x1
 6369 047b 1E02     		.2byte	0x21e
 6370 047d FD000000 		.4byte	0xfd
 6371 0481 02       		.uleb128 0x2
 6372 0482 91       		.byte	0x91
 6373 0483 60       		.sleb128 -32
 6374 0484 19       		.uleb128 0x19
 6375 0485 83070000 		.4byte	.LASF68
 6376 0489 01       		.byte	0x1
 6377 048a 1E02     		.2byte	0x21e
 6378 048c FD000000 		.4byte	0xfd
 6379 0490 02       		.uleb128 0x2
 6380 0491 91       		.byte	0x91
 6381 0492 00       		.sleb128 0
 6382 0493 00       		.byte	0
 6383 0494 16       		.uleb128 0x16
 6384 0495 B1010000 		.4byte	.LASF69
 6385 0499 01       		.byte	0x1
 6386 049a 2702     		.2byte	0x227
 6387 049c 94000000 		.4byte	0x94
 6388 04a0 00000000 		.4byte	.LFB76
 6389 04a4 98130000 		.4byte	.LFE76-.LFB76
 6390 04a8 01       		.uleb128 0x1
 6391 04a9 9C       		.byte	0x9c
 6392 04aa 0B070000 		.4byte	0x70b
 6393 04ae 18       		.uleb128 0x18
 6394 04af D00B0000 		.4byte	.LASF70
 6395 04b3 01       		.byte	0x1
 6396 04b4 8D02     		.2byte	0x28d
 6397 04b6 A2000000 		.4byte	0xa2
 6398 04ba 03       		.uleb128 0x3
 6399 04bb 91       		.byte	0x91
 6400 04bc B77F     		.sleb128 -73
 6401 04be 1C       		.uleb128 0x1c
 6402 04bf 0C000000 		.4byte	.LBB3
 6403 04c3 EA000000 		.4byte	.LBE3-.LBB3
 6404 04c7 F2040000 		.4byte	0x4f2
 6405 04cb 1A       		.uleb128 0x1a
 6406 04cc 6900     		.ascii	"i\000"
 6407 04ce 01       		.byte	0x1
 6408 04cf 2F02     		.2byte	0x22f
 6409 04d1 94000000 		.4byte	0x94
 6410 04d5 02       		.uleb128 0x2
 6411 04d6 91       		.byte	0x91
 6412 04d7 6C       		.sleb128 -20
 6413 04d8 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 149


 6414 04d9 12000000 		.4byte	.LBB4
 6415 04dd D8000000 		.4byte	.LBE4-.LBB4
 6416 04e1 18       		.uleb128 0x18
 6417 04e2 55010000 		.4byte	.LASF71
 6418 04e6 01       		.byte	0x1
 6419 04e7 3202     		.2byte	0x232
 6420 04e9 FD000000 		.4byte	0xfd
 6421 04ed 02       		.uleb128 0x2
 6422 04ee 91       		.byte	0x91
 6423 04ef 40       		.sleb128 -64
 6424 04f0 00       		.byte	0
 6425 04f1 00       		.byte	0
 6426 04f2 1C       		.uleb128 0x1c
 6427 04f3 F6000000 		.4byte	.LBB5
 6428 04f7 52010000 		.4byte	.LBE5-.LBB5
 6429 04fb 68050000 		.4byte	0x568
 6430 04ff 1A       		.uleb128 0x1a
 6431 0500 6900     		.ascii	"i\000"
 6432 0502 01       		.byte	0x1
 6433 0503 3D02     		.2byte	0x23d
 6434 0505 94000000 		.4byte	0x94
 6435 0509 02       		.uleb128 0x2
 6436 050a 91       		.byte	0x91
 6437 050b 68       		.sleb128 -24
 6438 050c 12       		.uleb128 0x12
 6439 050d FC000000 		.4byte	.LBB6
 6440 0511 3E010000 		.4byte	.LBE6-.LBB6
 6441 0515 18       		.uleb128 0x18
 6442 0516 CA020000 		.4byte	.LASF72
 6443 051a 01       		.byte	0x1
 6444 051b 3F02     		.2byte	0x23f
 6445 051d 94000000 		.4byte	0x94
 6446 0521 03       		.uleb128 0x3
 6447 0522 91       		.byte	0x91
 6448 0523 BC7F     		.sleb128 -68
 6449 0525 12       		.uleb128 0x12
 6450 0526 08010000 		.4byte	.LBB7
 6451 052a 32010000 		.4byte	.LBE7-.LBB7
 6452 052e 1A       		.uleb128 0x1a
 6453 052f 6A00     		.ascii	"j\000"
 6454 0531 01       		.byte	0x1
 6455 0532 4402     		.2byte	0x244
 6456 0534 94000000 		.4byte	0x94
 6457 0538 02       		.uleb128 0x2
 6458 0539 91       		.byte	0x91
 6459 053a 64       		.sleb128 -28
 6460 053b 12       		.uleb128 0x12
 6461 053c 24010000 		.4byte	.LBB8
 6462 0540 08010000 		.4byte	.LBE8-.LBB8
 6463 0544 18       		.uleb128 0x18
 6464 0545 33020000 		.4byte	.LASF73
 6465 0549 01       		.byte	0x1
 6466 054a 4702     		.2byte	0x247
 6467 054c 94000000 		.4byte	0x94
 6468 0550 03       		.uleb128 0x3
 6469 0551 91       		.byte	0x91
 6470 0552 B87F     		.sleb128 -72
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 150


 6471 0554 18       		.uleb128 0x18
 6472 0555 E2050000 		.4byte	.LASF74
 6473 0559 01       		.byte	0x1
 6474 055a 4902     		.2byte	0x249
 6475 055c 47020000 		.4byte	0x247
 6476 0560 03       		.uleb128 0x3
 6477 0561 91       		.byte	0x91
 6478 0562 987F     		.sleb128 -104
 6479 0564 00       		.byte	0
 6480 0565 00       		.byte	0
 6481 0566 00       		.byte	0
 6482 0567 00       		.byte	0
 6483 0568 1C       		.uleb128 0x1c
 6484 0569 0E030000 		.4byte	.LBB9
 6485 056d 2A000000 		.4byte	.LBE9-.LBB9
 6486 0571 86050000 		.4byte	0x586
 6487 0575 18       		.uleb128 0x18
 6488 0576 9F050000 		.4byte	.LASF75
 6489 057a 01       		.byte	0x1
 6490 057b 4903     		.2byte	0x349
 6491 057d A2000000 		.4byte	0xa2
 6492 0581 03       		.uleb128 0x3
 6493 0582 91       		.byte	0x91
 6494 0583 B67F     		.sleb128 -74
 6495 0585 00       		.byte	0
 6496 0586 1C       		.uleb128 0x1c
 6497 0587 64050000 		.4byte	.LBB10
 6498 058b EE000000 		.4byte	.LBE10-.LBB10
 6499 058f A4050000 		.4byte	0x5a4
 6500 0593 18       		.uleb128 0x18
 6501 0594 30000000 		.4byte	.LASF76
 6502 0598 01       		.byte	0x1
 6503 0599 D803     		.2byte	0x3d8
 6504 059b AD000000 		.4byte	0xad
 6505 059f 03       		.uleb128 0x3
 6506 05a0 91       		.byte	0x91
 6507 05a1 B47F     		.sleb128 -76
 6508 05a3 00       		.byte	0
 6509 05a4 1C       		.uleb128 0x1c
 6510 05a5 AE060000 		.4byte	.LBB11
 6511 05a9 28000000 		.4byte	.LBE11-.LBB11
 6512 05ad C2050000 		.4byte	0x5c2
 6513 05b1 18       		.uleb128 0x18
 6514 05b2 78030000 		.4byte	.LASF77
 6515 05b6 01       		.byte	0x1
 6516 05b7 FF03     		.2byte	0x3ff
 6517 05b9 B8000000 		.4byte	0xb8
 6518 05bd 03       		.uleb128 0x3
 6519 05be 91       		.byte	0x91
 6520 05bf B27F     		.sleb128 -78
 6521 05c1 00       		.byte	0
 6522 05c2 1C       		.uleb128 0x1c
 6523 05c3 52070000 		.4byte	.LBB12
 6524 05c7 B6020000 		.4byte	.LBE12-.LBB12
 6525 05cb DD050000 		.4byte	0x5dd
 6526 05cf 1A       		.uleb128 0x1a
 6527 05d0 6900     		.ascii	"i\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 151


 6528 05d2 01       		.byte	0x1
 6529 05d3 2804     		.2byte	0x428
 6530 05d5 94000000 		.4byte	0x94
 6531 05d9 02       		.uleb128 0x2
 6532 05da 91       		.byte	0x91
 6533 05db 60       		.sleb128 -32
 6534 05dc 00       		.byte	0
 6535 05dd 1C       		.uleb128 0x1c
 6536 05de 520A0000 		.4byte	.LBB13
 6537 05e2 CE000000 		.4byte	.LBE13-.LBB13
 6538 05e6 F8050000 		.4byte	0x5f8
 6539 05ea 1A       		.uleb128 0x1a
 6540 05eb 6900     		.ascii	"i\000"
 6541 05ed 01       		.byte	0x1
 6542 05ee 4904     		.2byte	0x449
 6543 05f0 94000000 		.4byte	0x94
 6544 05f4 02       		.uleb128 0x2
 6545 05f5 91       		.byte	0x91
 6546 05f6 5C       		.sleb128 -36
 6547 05f7 00       		.byte	0
 6548 05f8 1C       		.uleb128 0x1c
 6549 05f9 E80D0000 		.4byte	.LBB14
 6550 05fd A4000000 		.4byte	.LBE14-.LBB14
 6551 0601 13060000 		.4byte	0x613
 6552 0605 1A       		.uleb128 0x1a
 6553 0606 6900     		.ascii	"i\000"
 6554 0608 01       		.byte	0x1
 6555 0609 D304     		.2byte	0x4d3
 6556 060b 94000000 		.4byte	0x94
 6557 060f 02       		.uleb128 0x2
 6558 0610 91       		.byte	0x91
 6559 0611 58       		.sleb128 -40
 6560 0612 00       		.byte	0
 6561 0613 1C       		.uleb128 0x1c
 6562 0614 8C0E0000 		.4byte	.LBB15
 6563 0618 28030000 		.4byte	.LBE15-.LBB15
 6564 061c 88060000 		.4byte	0x688
 6565 0620 1A       		.uleb128 0x1a
 6566 0621 6900     		.ascii	"i\000"
 6567 0623 01       		.byte	0x1
 6568 0624 E304     		.2byte	0x4e3
 6569 0626 94000000 		.4byte	0x94
 6570 062a 02       		.uleb128 0x2
 6571 062b 91       		.byte	0x91
 6572 062c 54       		.sleb128 -44
 6573 062d 12       		.uleb128 0x12
 6574 062e B40E0000 		.4byte	.LBB16
 6575 0632 F2020000 		.4byte	.LBE16-.LBB16
 6576 0636 18       		.uleb128 0x18
 6577 0637 6C080000 		.4byte	.LASF78
 6578 063b 01       		.byte	0x1
 6579 063c F404     		.2byte	0x4f4
 6580 063e FD000000 		.4byte	0xfd
 6581 0642 03       		.uleb128 0x3
 6582 0643 91       		.byte	0x91
 6583 0644 AC7F     		.sleb128 -84
 6584 0646 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 152


 6585 0647 980A0000 		.4byte	.LASF79
 6586 064b 01       		.byte	0x1
 6587 064c 0205     		.2byte	0x502
 6588 064e FD000000 		.4byte	0xfd
 6589 0652 03       		.uleb128 0x3
 6590 0653 91       		.byte	0x91
 6591 0654 A87F     		.sleb128 -88
 6592 0656 18       		.uleb128 0x18
 6593 0657 CC070000 		.4byte	.LASF80
 6594 065b 01       		.byte	0x1
 6595 065c 0505     		.2byte	0x505
 6596 065e FD000000 		.4byte	0xfd
 6597 0662 03       		.uleb128 0x3
 6598 0663 91       		.byte	0x91
 6599 0664 A47F     		.sleb128 -92
 6600 0666 18       		.uleb128 0x18
 6601 0667 C1030000 		.4byte	.LASF81
 6602 066b 01       		.byte	0x1
 6603 066c 0705     		.2byte	0x507
 6604 066e FD000000 		.4byte	0xfd
 6605 0672 03       		.uleb128 0x3
 6606 0673 91       		.byte	0x91
 6607 0674 A07F     		.sleb128 -96
 6608 0676 18       		.uleb128 0x18
 6609 0677 520A0000 		.4byte	.LASF82
 6610 067b 01       		.byte	0x1
 6611 067c 0905     		.2byte	0x509
 6612 067e FD000000 		.4byte	0xfd
 6613 0682 03       		.uleb128 0x3
 6614 0683 91       		.byte	0x91
 6615 0684 9C7F     		.sleb128 -100
 6616 0686 00       		.byte	0
 6617 0687 00       		.byte	0
 6618 0688 1C       		.uleb128 0x1c
 6619 0689 46120000 		.4byte	.LBB17
 6620 068d 4A000000 		.4byte	.LBE17-.LBB17
 6621 0691 BD060000 		.4byte	0x6bd
 6622 0695 1A       		.uleb128 0x1a
 6623 0696 6900     		.ascii	"i\000"
 6624 0698 01       		.byte	0x1
 6625 0699 4105     		.2byte	0x541
 6626 069b 94000000 		.4byte	0x94
 6627 069f 02       		.uleb128 0x2
 6628 06a0 91       		.byte	0x91
 6629 06a1 50       		.sleb128 -48
 6630 06a2 12       		.uleb128 0x12
 6631 06a3 4C120000 		.4byte	.LBB18
 6632 06a7 38000000 		.4byte	.LBE18-.LBB18
 6633 06ab 18       		.uleb128 0x18
 6634 06ac FD000000 		.4byte	.LASF83
 6635 06b0 01       		.byte	0x1
 6636 06b1 4305     		.2byte	0x543
 6637 06b3 47020000 		.4byte	0x247
 6638 06b7 03       		.uleb128 0x3
 6639 06b8 91       		.byte	0x91
 6640 06b9 947F     		.sleb128 -108
 6641 06bb 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 153


 6642 06bc 00       		.byte	0
 6643 06bd 1C       		.uleb128 0x1c
 6644 06be C2120000 		.4byte	.LBB19
 6645 06c2 22000000 		.4byte	.LBE19-.LBB19
 6646 06c6 D8060000 		.4byte	0x6d8
 6647 06ca 1A       		.uleb128 0x1a
 6648 06cb 6900     		.ascii	"i\000"
 6649 06cd 01       		.byte	0x1
 6650 06ce 4E05     		.2byte	0x54e
 6651 06d0 94000000 		.4byte	0x94
 6652 06d4 02       		.uleb128 0x2
 6653 06d5 91       		.byte	0x91
 6654 06d6 4C       		.sleb128 -52
 6655 06d7 00       		.byte	0
 6656 06d8 1C       		.uleb128 0x1c
 6657 06d9 0E130000 		.4byte	.LBB20
 6658 06dd 24000000 		.4byte	.LBE20-.LBB20
 6659 06e1 F3060000 		.4byte	0x6f3
 6660 06e5 1A       		.uleb128 0x1a
 6661 06e6 6900     		.ascii	"i\000"
 6662 06e8 01       		.byte	0x1
 6663 06e9 5505     		.2byte	0x555
 6664 06eb 94000000 		.4byte	0x94
 6665 06ef 02       		.uleb128 0x2
 6666 06f0 91       		.byte	0x91
 6667 06f1 48       		.sleb128 -56
 6668 06f2 00       		.byte	0
 6669 06f3 12       		.uleb128 0x12
 6670 06f4 32130000 		.4byte	.LBB21
 6671 06f8 20000000 		.4byte	.LBE21-.LBB21
 6672 06fc 1A       		.uleb128 0x1a
 6673 06fd 6900     		.ascii	"i\000"
 6674 06ff 01       		.byte	0x1
 6675 0700 5905     		.2byte	0x559
 6676 0702 94000000 		.4byte	0x94
 6677 0706 02       		.uleb128 0x2
 6678 0707 91       		.byte	0x91
 6679 0708 44       		.sleb128 -60
 6680 0709 00       		.byte	0
 6681 070a 00       		.byte	0
 6682 070b 15       		.uleb128 0x15
 6683 070c 320B0000 		.4byte	.LASF84
 6684 0710 01       		.byte	0x1
 6685 0711 6705     		.2byte	0x567
 6686 0713 00000000 		.4byte	.LFB77
 6687 0717 08010000 		.4byte	.LFE77-.LFB77
 6688 071b 01       		.uleb128 0x1
 6689 071c 9C       		.byte	0x9c
 6690 071d 16       		.uleb128 0x16
 6691 071e CA050000 		.4byte	.LASF85
 6692 0722 01       		.byte	0x1
 6693 0723 9F05     		.2byte	0x59f
 6694 0725 D9000000 		.4byte	0xd9
 6695 0729 00000000 		.4byte	.LFB78
 6696 072d A0000000 		.4byte	.LFE78-.LFB78
 6697 0731 01       		.uleb128 0x1
 6698 0732 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 154


 6699 0733 83070000 		.4byte	0x783
 6700 0737 19       		.uleb128 0x19
 6701 0738 080B0000 		.4byte	.LASF86
 6702 073c 01       		.byte	0x1
 6703 073d 9F05     		.2byte	0x59f
 6704 073f D9000000 		.4byte	0xd9
 6705 0743 02       		.uleb128 0x2
 6706 0744 91       		.byte	0x91
 6707 0745 6F       		.sleb128 -17
 6708 0746 19       		.uleb128 0x19
 6709 0747 F6000000 		.4byte	.LASF87
 6710 074b 01       		.byte	0x1
 6711 074c 9F05     		.2byte	0x59f
 6712 074e E5000000 		.4byte	0xe5
 6713 0752 02       		.uleb128 0x2
 6714 0753 91       		.byte	0x91
 6715 0754 6C       		.sleb128 -20
 6716 0755 19       		.uleb128 0x19
 6717 0756 880A0000 		.4byte	.LASF88
 6718 075a 01       		.byte	0x1
 6719 075b 9F05     		.2byte	0x59f
 6720 075d A2000000 		.4byte	0xa2
 6721 0761 02       		.uleb128 0x2
 6722 0762 91       		.byte	0x91
 6723 0763 6E       		.sleb128 -18
 6724 0764 18       		.uleb128 0x18
 6725 0765 9F050000 		.4byte	.LASF75
 6726 0769 01       		.byte	0x1
 6727 076a A105     		.2byte	0x5a1
 6728 076c 2A010000 		.4byte	0x12a
 6729 0770 02       		.uleb128 0x2
 6730 0771 91       		.byte	0x91
 6731 0772 73       		.sleb128 -13
 6732 0773 18       		.uleb128 0x18
 6733 0774 89070000 		.4byte	.LASF89
 6734 0778 01       		.byte	0x1
 6735 0779 A205     		.2byte	0x5a2
 6736 077b CE000000 		.4byte	0xce
 6737 077f 02       		.uleb128 0x2
 6738 0780 91       		.byte	0x91
 6739 0781 74       		.sleb128 -12
 6740 0782 00       		.byte	0
 6741 0783 16       		.uleb128 0x16
 6742 0784 DA080000 		.4byte	.LASF90
 6743 0788 01       		.byte	0x1
 6744 0789 CC05     		.2byte	0x5cc
 6745 078b D9000000 		.4byte	0xd9
 6746 078f 00000000 		.4byte	.LFB79
 6747 0793 B4000000 		.4byte	.LFE79-.LFB79
 6748 0797 01       		.uleb128 0x1
 6749 0798 9C       		.byte	0x9c
 6750 0799 E9070000 		.4byte	0x7e9
 6751 079d 19       		.uleb128 0x19
 6752 079e 080B0000 		.4byte	.LASF86
 6753 07a2 01       		.byte	0x1
 6754 07a3 CC05     		.2byte	0x5cc
 6755 07a5 D9000000 		.4byte	0xd9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 155


 6756 07a9 02       		.uleb128 0x2
 6757 07aa 91       		.byte	0x91
 6758 07ab 6F       		.sleb128 -17
 6759 07ac 19       		.uleb128 0x19
 6760 07ad F6000000 		.4byte	.LASF87
 6761 07b1 01       		.byte	0x1
 6762 07b2 CC05     		.2byte	0x5cc
 6763 07b4 D9000000 		.4byte	0xd9
 6764 07b8 02       		.uleb128 0x2
 6765 07b9 91       		.byte	0x91
 6766 07ba 6E       		.sleb128 -18
 6767 07bb 19       		.uleb128 0x19
 6768 07bc 880A0000 		.4byte	.LASF88
 6769 07c0 01       		.byte	0x1
 6770 07c1 CC05     		.2byte	0x5cc
 6771 07c3 A2000000 		.4byte	0xa2
 6772 07c7 02       		.uleb128 0x2
 6773 07c8 91       		.byte	0x91
 6774 07c9 6D       		.sleb128 -19
 6775 07ca 18       		.uleb128 0x18
 6776 07cb 9F050000 		.4byte	.LASF75
 6777 07cf 01       		.byte	0x1
 6778 07d0 CE05     		.2byte	0x5ce
 6779 07d2 2A010000 		.4byte	0x12a
 6780 07d6 02       		.uleb128 0x2
 6781 07d7 91       		.byte	0x91
 6782 07d8 73       		.sleb128 -13
 6783 07d9 18       		.uleb128 0x18
 6784 07da 89070000 		.4byte	.LASF89
 6785 07de 01       		.byte	0x1
 6786 07df CF05     		.2byte	0x5cf
 6787 07e1 CE000000 		.4byte	0xce
 6788 07e5 02       		.uleb128 0x2
 6789 07e6 91       		.byte	0x91
 6790 07e7 74       		.sleb128 -12
 6791 07e8 00       		.byte	0
 6792 07e9 1D       		.uleb128 0x1d
 6793 07ea 82030000 		.4byte	.LASF91
 6794 07ee 01       		.byte	0x1
 6795 07ef FB05     		.2byte	0x5fb
 6796 07f1 00000000 		.4byte	.LFB80
 6797 07f5 0C000000 		.4byte	.LFE80-.LFB80
 6798 07f9 01       		.uleb128 0x1
 6799 07fa 9C       		.byte	0x9c
 6800 07fb 15       		.uleb128 0x15
 6801 07fc 5F030000 		.4byte	.LASF92
 6802 0800 01       		.byte	0x1
 6803 0801 1806     		.2byte	0x618
 6804 0803 00000000 		.4byte	.LFB81
 6805 0807 54000000 		.4byte	.LFE81-.LFB81
 6806 080b 01       		.uleb128 0x1
 6807 080c 9C       		.byte	0x9c
 6808 080d 15       		.uleb128 0x15
 6809 080e F1020000 		.4byte	.LASF93
 6810 0812 01       		.byte	0x1
 6811 0813 2E06     		.2byte	0x62e
 6812 0815 00000000 		.4byte	.LFB82
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 156


 6813 0819 74000000 		.4byte	.LFE82-.LFB82
 6814 081d 01       		.uleb128 0x1
 6815 081e 9C       		.byte	0x9c
 6816 081f 16       		.uleb128 0x16
 6817 0820 69070000 		.4byte	.LASF94
 6818 0824 01       		.byte	0x1
 6819 0825 6B06     		.2byte	0x66b
 6820 0827 FD000000 		.4byte	0xfd
 6821 082b 00000000 		.4byte	.LFB83
 6822 082f 98000000 		.4byte	.LFE83-.LFB83
 6823 0833 01       		.uleb128 0x1
 6824 0834 9C       		.byte	0x9c
 6825 0835 6E080000 		.4byte	0x86e
 6826 0839 17       		.uleb128 0x17
 6827 083a 5800     		.ascii	"X\000"
 6828 083c 01       		.byte	0x1
 6829 083d 6B06     		.2byte	0x66b
 6830 083f FD000000 		.4byte	0xfd
 6831 0843 02       		.uleb128 0x2
 6832 0844 91       		.byte	0x91
 6833 0845 64       		.sleb128 -28
 6834 0846 1A       		.uleb128 0x1a
 6835 0847 5900     		.ascii	"Y\000"
 6836 0849 01       		.byte	0x1
 6837 084a 6C06     		.2byte	0x66c
 6838 084c FD000000 		.4byte	0xfd
 6839 0850 02       		.uleb128 0x2
 6840 0851 91       		.byte	0x91
 6841 0852 70       		.sleb128 -16
 6842 0853 1A       		.uleb128 0x1a
 6843 0854 4600     		.ascii	"F\000"
 6844 0856 01       		.byte	0x1
 6845 0857 6C06     		.2byte	0x66c
 6846 0859 FD000000 		.4byte	0xfd
 6847 085d 02       		.uleb128 0x2
 6848 085e 91       		.byte	0x91
 6849 085f 74       		.sleb128 -12
 6850 0860 1A       		.uleb128 0x1a
 6851 0861 4500     		.ascii	"E\000"
 6852 0863 01       		.byte	0x1
 6853 0864 6D06     		.2byte	0x66d
 6854 0866 94000000 		.4byte	0x94
 6855 086a 02       		.uleb128 0x2
 6856 086b 91       		.byte	0x91
 6857 086c 6C       		.sleb128 -20
 6858 086d 00       		.byte	0
 6859 086e 1E       		.uleb128 0x1e
 6860 086f 80000000 		.4byte	.LASF96
 6861 0873 01       		.byte	0x1
 6862 0874 7F06     		.2byte	0x67f
 6863 0876 00000000 		.4byte	.LFB84
 6864 087a 0C010000 		.4byte	.LFE84-.LFB84
 6865 087e 01       		.uleb128 0x1
 6866 087f 9C       		.byte	0x9c
 6867 0880 D8080000 		.4byte	0x8d8
 6868 0884 19       		.uleb128 0x19
 6869 0885 3E080000 		.4byte	.LASF97
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 157


 6870 0889 01       		.byte	0x1
 6871 088a 7F06     		.2byte	0x67f
 6872 088c 94000000 		.4byte	0x94
 6873 0890 02       		.uleb128 0x2
 6874 0891 91       		.byte	0x91
 6875 0892 64       		.sleb128 -28
 6876 0893 18       		.uleb128 0x18
 6877 0894 090A0000 		.4byte	.LASF98
 6878 0898 01       		.byte	0x1
 6879 0899 8106     		.2byte	0x681
 6880 089b FD000000 		.4byte	0xfd
 6881 089f 02       		.uleb128 0x2
 6882 08a0 91       		.byte	0x91
 6883 08a1 70       		.sleb128 -16
 6884 08a2 1A       		.uleb128 0x1a
 6885 08a3 7600     		.ascii	"v\000"
 6886 08a5 01       		.byte	0x1
 6887 08a6 8206     		.2byte	0x682
 6888 08a8 FD000000 		.4byte	0xfd
 6889 08ac 02       		.uleb128 0x2
 6890 08ad 91       		.byte	0x91
 6891 08ae 6C       		.sleb128 -20
 6892 08af 18       		.uleb128 0x18
 6893 08b0 31040000 		.4byte	.LASF99
 6894 08b4 01       		.byte	0x1
 6895 08b5 8306     		.2byte	0x683
 6896 08b7 94000000 		.4byte	0x94
 6897 08bb 02       		.uleb128 0x2
 6898 08bc 91       		.byte	0x91
 6899 08bd 74       		.sleb128 -12
 6900 08be 12       		.uleb128 0x12
 6901 08bf 9A000000 		.4byte	.LBB22
 6902 08c3 36000000 		.4byte	.LBE22-.LBB22
 6903 08c7 18       		.uleb128 0x18
 6904 08c8 8A0B0000 		.4byte	.LASF100
 6905 08cc 01       		.byte	0x1
 6906 08cd 9206     		.2byte	0x692
 6907 08cf 94000000 		.4byte	0x94
 6908 08d3 02       		.uleb128 0x2
 6909 08d4 91       		.byte	0x91
 6910 08d5 68       		.sleb128 -24
 6911 08d6 00       		.byte	0
 6912 08d7 00       		.byte	0
 6913 08d8 1E       		.uleb128 0x1e
 6914 08d9 70040000 		.4byte	.LASF101
 6915 08dd 01       		.byte	0x1
 6916 08de 9D06     		.2byte	0x69d
 6917 08e0 00000000 		.4byte	.LFB85
 6918 08e4 1C000000 		.4byte	.LFE85-.LFB85
 6919 08e8 01       		.uleb128 0x1
 6920 08e9 9C       		.byte	0x9c
 6921 08ea 0C090000 		.4byte	0x90c
 6922 08ee 17       		.uleb128 0x17
 6923 08ef 636300   		.ascii	"cc\000"
 6924 08f2 01       		.byte	0x1
 6925 08f3 9D06     		.2byte	0x69d
 6926 08f5 94000000 		.4byte	0x94
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 158


 6927 08f9 02       		.uleb128 0x2
 6928 08fa 91       		.byte	0x91
 6929 08fb 74       		.sleb128 -12
 6930 08fc 17       		.uleb128 0x17
 6931 08fd 76616C00 		.ascii	"val\000"
 6932 0901 01       		.byte	0x1
 6933 0902 9D06     		.2byte	0x69d
 6934 0904 94000000 		.4byte	0x94
 6935 0908 02       		.uleb128 0x2
 6936 0909 91       		.byte	0x91
 6937 090a 70       		.sleb128 -16
 6938 090b 00       		.byte	0
 6939 090c 1E       		.uleb128 0x1e
 6940 090d B5060000 		.4byte	.LASF102
 6941 0911 01       		.byte	0x1
 6942 0912 A306     		.2byte	0x6a3
 6943 0914 00000000 		.4byte	.LFB86
 6944 0918 68000000 		.4byte	.LFE86-.LFB86
 6945 091c 01       		.uleb128 0x1
 6946 091d 9C       		.byte	0x9c
 6947 091e 50090000 		.4byte	0x950
 6948 0922 19       		.uleb128 0x19
 6949 0923 CA010000 		.4byte	.LASF103
 6950 0927 01       		.byte	0x1
 6951 0928 A306     		.2byte	0x6a3
 6952 092a 94000000 		.4byte	0x94
 6953 092e 02       		.uleb128 0x2
 6954 092f 91       		.byte	0x91
 6955 0930 74       		.sleb128 -12
 6956 0931 19       		.uleb128 0x19
 6957 0932 16080000 		.4byte	.LASF104
 6958 0936 01       		.byte	0x1
 6959 0937 A306     		.2byte	0x6a3
 6960 0939 94000000 		.4byte	0x94
 6961 093d 02       		.uleb128 0x2
 6962 093e 91       		.byte	0x91
 6963 093f 70       		.sleb128 -16
 6964 0940 19       		.uleb128 0x19
 6965 0941 C2050000 		.4byte	.LASF105
 6966 0945 01       		.byte	0x1
 6967 0946 A306     		.2byte	0x6a3
 6968 0948 94000000 		.4byte	0x94
 6969 094c 02       		.uleb128 0x2
 6970 094d 91       		.byte	0x91
 6971 094e 6C       		.sleb128 -20
 6972 094f 00       		.byte	0
 6973 0950 1E       		.uleb128 0x1e
 6974 0951 A9030000 		.4byte	.LASF106
 6975 0955 01       		.byte	0x1
 6976 0956 B106     		.2byte	0x6b1
 6977 0958 00000000 		.4byte	.LFB87
 6978 095c 68000000 		.4byte	.LFE87-.LFB87
 6979 0960 01       		.uleb128 0x1
 6980 0961 9C       		.byte	0x9c
 6981 0962 94090000 		.4byte	0x994
 6982 0966 19       		.uleb128 0x19
 6983 0967 CA010000 		.4byte	.LASF103
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 159


 6984 096b 01       		.byte	0x1
 6985 096c B106     		.2byte	0x6b1
 6986 096e 94000000 		.4byte	0x94
 6987 0972 02       		.uleb128 0x2
 6988 0973 91       		.byte	0x91
 6989 0974 74       		.sleb128 -12
 6990 0975 19       		.uleb128 0x19
 6991 0976 16030000 		.4byte	.LASF107
 6992 097a 01       		.byte	0x1
 6993 097b B106     		.2byte	0x6b1
 6994 097d 94000000 		.4byte	0x94
 6995 0981 02       		.uleb128 0x2
 6996 0982 91       		.byte	0x91
 6997 0983 70       		.sleb128 -16
 6998 0984 19       		.uleb128 0x19
 6999 0985 C2050000 		.4byte	.LASF105
 7000 0989 01       		.byte	0x1
 7001 098a B106     		.2byte	0x6b1
 7002 098c 94000000 		.4byte	0x94
 7003 0990 02       		.uleb128 0x2
 7004 0991 91       		.byte	0x91
 7005 0992 6C       		.sleb128 -20
 7006 0993 00       		.byte	0
 7007 0994 1E       		.uleb128 0x1e
 7008 0995 D4030000 		.4byte	.LASF108
 7009 0999 01       		.byte	0x1
 7010 099a BF06     		.2byte	0x6bf
 7011 099c 00000000 		.4byte	.LFB88
 7012 09a0 68000000 		.4byte	.LFE88-.LFB88
 7013 09a4 01       		.uleb128 0x1
 7014 09a5 9C       		.byte	0x9c
 7015 09a6 D8090000 		.4byte	0x9d8
 7016 09aa 19       		.uleb128 0x19
 7017 09ab 0E010000 		.4byte	.LASF109
 7018 09af 01       		.byte	0x1
 7019 09b0 BF06     		.2byte	0x6bf
 7020 09b2 94000000 		.4byte	0x94
 7021 09b6 02       		.uleb128 0x2
 7022 09b7 91       		.byte	0x91
 7023 09b8 74       		.sleb128 -12
 7024 09b9 19       		.uleb128 0x19
 7025 09ba 9F000000 		.4byte	.LASF110
 7026 09be 01       		.byte	0x1
 7027 09bf BF06     		.2byte	0x6bf
 7028 09c1 94000000 		.4byte	0x94
 7029 09c5 02       		.uleb128 0x2
 7030 09c6 91       		.byte	0x91
 7031 09c7 70       		.sleb128 -16
 7032 09c8 19       		.uleb128 0x19
 7033 09c9 C2050000 		.4byte	.LASF105
 7034 09cd 01       		.byte	0x1
 7035 09ce BF06     		.2byte	0x6bf
 7036 09d0 94000000 		.4byte	0x94
 7037 09d4 02       		.uleb128 0x2
 7038 09d5 91       		.byte	0x91
 7039 09d6 6C       		.sleb128 -20
 7040 09d7 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 160


 7041 09d8 1E       		.uleb128 0x1e
 7042 09d9 D4070000 		.4byte	.LASF111
 7043 09dd 01       		.byte	0x1
 7044 09de CD06     		.2byte	0x6cd
 7045 09e0 00000000 		.4byte	.LFB89
 7046 09e4 6C000000 		.4byte	.LFE89-.LFB89
 7047 09e8 01       		.uleb128 0x1
 7048 09e9 9C       		.byte	0x9c
 7049 09ea 0D0A0000 		.4byte	0xa0d
 7050 09ee 17       		.uleb128 0x17
 7051 09ef 76616C00 		.ascii	"val\000"
 7052 09f3 01       		.byte	0x1
 7053 09f4 CD06     		.2byte	0x6cd
 7054 09f6 94000000 		.4byte	0x94
 7055 09fa 02       		.uleb128 0x2
 7056 09fb 91       		.byte	0x91
 7057 09fc 74       		.sleb128 -12
 7058 09fd 19       		.uleb128 0x19
 7059 09fe C2050000 		.4byte	.LASF105
 7060 0a02 01       		.byte	0x1
 7061 0a03 CD06     		.2byte	0x6cd
 7062 0a05 94000000 		.4byte	0x94
 7063 0a09 02       		.uleb128 0x2
 7064 0a0a 91       		.byte	0x91
 7065 0a0b 70       		.sleb128 -16
 7066 0a0c 00       		.byte	0
 7067 0a0d 15       		.uleb128 0x15
 7068 0a0e D6010000 		.4byte	.LASF112
 7069 0a12 01       		.byte	0x1
 7070 0a13 DC06     		.2byte	0x6dc
 7071 0a15 00000000 		.4byte	.LFB90
 7072 0a19 64000000 		.4byte	.LFE90-.LFB90
 7073 0a1d 01       		.uleb128 0x1
 7074 0a1e 9C       		.byte	0x9c
 7075 0a1f 1E       		.uleb128 0x1e
 7076 0a20 78040000 		.4byte	.LASF113
 7077 0a24 01       		.byte	0x1
 7078 0a25 F806     		.2byte	0x6f8
 7079 0a27 00000000 		.4byte	.LFB91
 7080 0a2b 5C020000 		.4byte	.LFE91-.LFB91
 7081 0a2f 01       		.uleb128 0x1
 7082 0a30 9C       		.byte	0x9c
 7083 0a31 C70A0000 		.4byte	0xac7
 7084 0a35 1C       		.uleb128 0x1c
 7085 0a36 14000000 		.4byte	.LBB23
 7086 0a3a 3A000000 		.4byte	.LBE23-.LBB23
 7087 0a3e 500A0000 		.4byte	0xa50
 7088 0a42 1A       		.uleb128 0x1a
 7089 0a43 6900     		.ascii	"i\000"
 7090 0a45 01       		.byte	0x1
 7091 0a46 FE06     		.2byte	0x6fe
 7092 0a48 CE000000 		.4byte	0xce
 7093 0a4c 02       		.uleb128 0x2
 7094 0a4d 91       		.byte	0x91
 7095 0a4e 6C       		.sleb128 -20
 7096 0a4f 00       		.byte	0
 7097 0a50 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 161


 7098 0a51 8E000000 		.4byte	.LBB24
 7099 0a55 96010000 		.4byte	.LBE24-.LBB24
 7100 0a59 18       		.uleb128 0x18
 7101 0a5a 5F010000 		.4byte	.LASF114
 7102 0a5e 01       		.byte	0x1
 7103 0a5f 1407     		.2byte	0x714
 7104 0a61 47020000 		.4byte	0x247
 7105 0a65 02       		.uleb128 0x2
 7106 0a66 91       		.byte	0x91
 7107 0a67 58       		.sleb128 -40
 7108 0a68 18       		.uleb128 0x18
 7109 0a69 A4010000 		.4byte	.LASF115
 7110 0a6d 01       		.byte	0x1
 7111 0a6e 1507     		.2byte	0x715
 7112 0a70 CE000000 		.4byte	0xce
 7113 0a74 02       		.uleb128 0x2
 7114 0a75 91       		.byte	0x91
 7115 0a76 68       		.sleb128 -24
 7116 0a77 18       		.uleb128 0x18
 7117 0a78 AF0A0000 		.4byte	.LASF116
 7118 0a7c 01       		.byte	0x1
 7119 0a7d 1607     		.2byte	0x716
 7120 0a7f CE000000 		.4byte	0xce
 7121 0a83 02       		.uleb128 0x2
 7122 0a84 91       		.byte	0x91
 7123 0a85 60       		.sleb128 -32
 7124 0a86 18       		.uleb128 0x18
 7125 0a87 CA020000 		.4byte	.LASF72
 7126 0a8b 01       		.byte	0x1
 7127 0a8c 1707     		.2byte	0x717
 7128 0a8e B8000000 		.4byte	0xb8
 7129 0a92 02       		.uleb128 0x2
 7130 0a93 91       		.byte	0x91
 7131 0a94 5E       		.sleb128 -34
 7132 0a95 12       		.uleb128 0x12
 7133 0a96 A8000000 		.4byte	.LBB25
 7134 0a9a 7C010000 		.4byte	.LBE25-.LBB25
 7135 0a9e 1A       		.uleb128 0x1a
 7136 0a9f 6900     		.ascii	"i\000"
 7137 0aa1 01       		.byte	0x1
 7138 0aa2 1A07     		.2byte	0x71a
 7139 0aa4 CE000000 		.4byte	0xce
 7140 0aa8 02       		.uleb128 0x2
 7141 0aa9 91       		.byte	0x91
 7142 0aaa 64       		.sleb128 -28
 7143 0aab 12       		.uleb128 0x12
 7144 0aac AE000000 		.4byte	.LBB26
 7145 0ab0 64010000 		.4byte	.LBE26-.LBB26
 7146 0ab4 18       		.uleb128 0x18
 7147 0ab5 33020000 		.4byte	.LASF73
 7148 0ab9 01       		.byte	0x1
 7149 0aba 2407     		.2byte	0x724
 7150 0abc B8000000 		.4byte	0xb8
 7151 0ac0 02       		.uleb128 0x2
 7152 0ac1 91       		.byte	0x91
 7153 0ac2 5C       		.sleb128 -36
 7154 0ac3 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 162


 7155 0ac4 00       		.byte	0
 7156 0ac5 00       		.byte	0
 7157 0ac6 00       		.byte	0
 7158 0ac7 1E       		.uleb128 0x1e
 7159 0ac8 60020000 		.4byte	.LASF117
 7160 0acc 01       		.byte	0x1
 7161 0acd 3607     		.2byte	0x736
 7162 0acf 00000000 		.4byte	.LFB92
 7163 0ad3 FC000000 		.4byte	.LFE92-.LFB92
 7164 0ad7 01       		.uleb128 0x1
 7165 0ad8 9C       		.byte	0x9c
 7166 0ad9 130B0000 		.4byte	0xb13
 7167 0add 19       		.uleb128 0x19
 7168 0ade 02080000 		.4byte	.LASF118
 7169 0ae2 01       		.byte	0x1
 7170 0ae3 3607     		.2byte	0x736
 7171 0ae5 D9000000 		.4byte	0xd9
 7172 0ae9 02       		.uleb128 0x2
 7173 0aea 91       		.byte	0x91
 7174 0aeb 6F       		.sleb128 -17
 7175 0aec 19       		.uleb128 0x19
 7176 0aed 32090000 		.4byte	.LASF119
 7177 0af1 01       		.byte	0x1
 7178 0af2 3607     		.2byte	0x736
 7179 0af4 130B0000 		.4byte	0xb13
 7180 0af8 02       		.uleb128 0x2
 7181 0af9 91       		.byte	0x91
 7182 0afa 68       		.sleb128 -24
 7183 0afb 12       		.uleb128 0x12
 7184 0afc 48000000 		.4byte	.LBB27
 7185 0b00 54000000 		.4byte	.LBE27-.LBB27
 7186 0b04 1A       		.uleb128 0x1a
 7187 0b05 6900     		.ascii	"i\000"
 7188 0b07 01       		.byte	0x1
 7189 0b08 8507     		.2byte	0x785
 7190 0b0a 94000000 		.4byte	0x94
 7191 0b0e 02       		.uleb128 0x2
 7192 0b0f 91       		.byte	0x91
 7193 0b10 74       		.sleb128 -12
 7194 0b11 00       		.byte	0
 7195 0b12 00       		.byte	0
 7196 0b13 1F       		.uleb128 0x1f
 7197 0b14 04       		.byte	0x4
 7198 0b15 D9000000 		.4byte	0xd9
 7199 0b19 07       		.uleb128 0x7
 7200 0b1a D9000000 		.4byte	0xd9
 7201 0b1e 290B0000 		.4byte	0xb29
 7202 0b22 08       		.uleb128 0x8
 7203 0b23 36010000 		.4byte	0x136
 7204 0b27 01       		.byte	0x1
 7205 0b28 00       		.byte	0
 7206 0b29 18       		.uleb128 0x18
 7207 0b2a 30030000 		.4byte	.LASF120
 7208 0b2e 01       		.byte	0x1
 7209 0b2f 3701     		.2byte	0x137
 7210 0b31 190B0000 		.4byte	0xb19
 7211 0b35 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 163


 7212 0b36 03       		.byte	0x3
 7213 0b37 34000000 		.4byte	eepromArray
 7214 0b3b 20       		.uleb128 0x20
 7215 0b3c 64000000 		.4byte	.LASF121
 7216 0b40 07       		.byte	0x7
 7217 0b41 82       		.byte	0x82
 7218 0b42 BF010000 		.4byte	0x1bf
 7219 0b46 07       		.uleb128 0x7
 7220 0b47 570B0000 		.4byte	0xb57
 7221 0b4b 570B0000 		.4byte	0xb57
 7222 0b4f 21       		.uleb128 0x21
 7223 0b50 36010000 		.4byte	0x136
 7224 0b54 FF03     		.2byte	0x3ff
 7225 0b56 00       		.byte	0
 7226 0b57 22       		.uleb128 0x22
 7227 0b58 A2000000 		.4byte	0xa2
 7228 0b5c 23       		.uleb128 0x23
 7229 0b5d 72050000 		.4byte	.LASF122
 7230 0b61 01       		.byte	0x1
 7231 0b62 4401     		.2byte	0x144
 7232 0b64 6E0B0000 		.4byte	0xb6e
 7233 0b68 05       		.uleb128 0x5
 7234 0b69 03       		.byte	0x3
 7235 0b6a 00000000 		.4byte	Em_EEPROM_em_EepromStorage
 7236 0b6e 22       		.uleb128 0x22
 7237 0b6f 460B0000 		.4byte	0xb46
 7238 0b73 24       		.uleb128 0x24
 7239 0b74 76070000 		.4byte	.LASF123
 7240 0b78 08       		.byte	0x8
 7241 0b79 1207     		.2byte	0x712
 7242 0b7b 7F0B0000 		.4byte	0xb7f
 7243 0b7f 06       		.uleb128 0x6
 7244 0b80 C3000000 		.4byte	0xc3
 7245 0b84 07       		.uleb128 0x7
 7246 0b85 03020000 		.4byte	0x203
 7247 0b89 940B0000 		.4byte	0xb94
 7248 0b8d 08       		.uleb128 0x8
 7249 0b8e 36010000 		.4byte	0x136
 7250 0b92 FF       		.byte	0xff
 7251 0b93 00       		.byte	0
 7252 0b94 23       		.uleb128 0x23
 7253 0b95 A5000000 		.4byte	.LASF124
 7254 0b99 01       		.byte	0x1
 7255 0b9a A801     		.2byte	0x1a8
 7256 0b9c A60B0000 		.4byte	0xba6
 7257 0ba0 05       		.uleb128 0x5
 7258 0ba1 03       		.byte	0x3
 7259 0ba2 00000000 		.4byte	I2Cbuff1
 7260 0ba6 06       		.uleb128 0x6
 7261 0ba7 840B0000 		.4byte	0xb84
 7262 0bab 25       		.uleb128 0x25
 7263 0bac BC090000 		.4byte	.LASF125
 7264 0bb0 01       		.byte	0x1
 7265 0bb1 0C       		.byte	0xc
 7266 0bb2 2A010000 		.4byte	0x12a
 7267 0bb6 05       		.uleb128 0x5
 7268 0bb7 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 164


 7269 0bb8 00000000 		.4byte	usbActivityCounter
 7270 0bbc 25       		.uleb128 0x25
 7271 0bbd 32090000 		.4byte	.LASF119
 7272 0bc1 01       		.byte	0x1
 7273 0bc2 0D       		.byte	0xd
 7274 0bc3 3D010000 		.4byte	0x13d
 7275 0bc7 05       		.uleb128 0x5
 7276 0bc8 03       		.byte	0x3
 7277 0bc9 00000000 		.4byte	midiMsg
 7278 0bcd 25       		.uleb128 0x25
 7279 0bce 610B0000 		.4byte	.LASF126
 7280 0bd2 01       		.byte	0x1
 7281 0bd3 0E       		.byte	0xe
 7282 0bd4 A2000000 		.4byte	0xa2
 7283 0bd8 05       		.uleb128 0x5
 7284 0bd9 03       		.byte	0x3
 7285 0bda 00000000 		.4byte	currentVBUS
 7286 0bde 25       		.uleb128 0x25
 7287 0bdf 580B0000 		.4byte	.LASF127
 7288 0be3 01       		.byte	0x1
 7289 0be4 0F       		.byte	0xf
 7290 0be5 A2000000 		.4byte	0xa2
 7291 0be9 05       		.uleb128 0x5
 7292 0bea 03       		.byte	0x3
 7293 0beb 00000000 		.4byte	prevVBUS
 7294 0bef 25       		.uleb128 0x25
 7295 0bf0 E2090000 		.4byte	.LASF128
 7296 0bf4 01       		.byte	0x1
 7297 0bf5 10       		.byte	0x10
 7298 0bf6 03020000 		.4byte	0x203
 7299 0bfa 05       		.uleb128 0x5
 7300 0bfb 03       		.byte	0x3
 7301 0bfc 00000000 		.4byte	USB_active
 7302 0c00 25       		.uleb128 0x25
 7303 0c01 F9060000 		.4byte	.LASF129
 7304 0c05 01       		.byte	0x1
 7305 0c06 11       		.byte	0x11
 7306 0c07 03020000 		.4byte	0x203
 7307 0c0b 05       		.uleb128 0x5
 7308 0c0c 03       		.byte	0x3
 7309 0c0d 00000000 		.4byte	USB_check_flag
 7310 0c11 07       		.uleb128 0x7
 7311 0c12 D9000000 		.4byte	0xd9
 7312 0c16 210C0000 		.4byte	0xc21
 7313 0c1a 08       		.uleb128 0x8
 7314 0c1b 36010000 		.4byte	0x136
 7315 0c1f 49       		.byte	0x49
 7316 0c20 00       		.byte	0
 7317 0c21 25       		.uleb128 0x25
 7318 0c22 FE0B0000 		.4byte	.LASF130
 7319 0c26 01       		.byte	0x1
 7320 0c27 13       		.byte	0x13
 7321 0c28 110C0000 		.4byte	0xc11
 7322 0c2c 05       		.uleb128 0x5
 7323 0c2d 03       		.byte	0x3
 7324 0c2e 00000000 		.4byte	myArray
 7325 0c32 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 165


 7326 0c33 A70B0000 		.4byte	.LASF131
 7327 0c37 01       		.byte	0x1
 7328 0c38 14       		.byte	0x14
 7329 0c39 190B0000 		.4byte	0xb19
 7330 0c3d 05       		.uleb128 0x5
 7331 0c3e 03       		.byte	0x3
 7332 0c3f 00000000 		.4byte	myInputArray
 7333 0c43 07       		.uleb128 0x7
 7334 0c44 C3000000 		.4byte	0xc3
 7335 0c48 530C0000 		.4byte	0xc53
 7336 0c4c 08       		.uleb128 0x8
 7337 0c4d 36010000 		.4byte	0x136
 7338 0c51 03       		.byte	0x3
 7339 0c52 00       		.byte	0
 7340 0c53 25       		.uleb128 0x25
 7341 0c54 AE050000 		.4byte	.LASF132
 7342 0c58 01       		.byte	0x1
 7343 0c59 15       		.byte	0x15
 7344 0c5a 430C0000 		.4byte	0xc43
 7345 0c5e 05       		.uleb128 0x5
 7346 0c5f 03       		.byte	0x3
 7347 0c60 00000000 		.4byte	linearPotValue32Bit
 7348 0c64 26       		.uleb128 0x26
 7349 0c65 6900     		.ascii	"i\000"
 7350 0c67 01       		.byte	0x1
 7351 0c68 16       		.byte	0x16
 7352 0c69 A2000000 		.4byte	0xa2
 7353 0c6d 05       		.uleb128 0x5
 7354 0c6e 03       		.byte	0x3
 7355 0c6f 00000000 		.4byte	i
 7356 0c73 25       		.uleb128 0x25
 7357 0c74 21070000 		.4byte	.LASF133
 7358 0c78 01       		.byte	0x1
 7359 0c79 17       		.byte	0x17
 7360 0c7a A2000000 		.4byte	0xa2
 7361 0c7e 05       		.uleb128 0x5
 7362 0c7f 03       		.byte	0x3
 7363 0c80 00000000 		.4byte	counter
 7364 0c84 07       		.uleb128 0x7
 7365 0c85 A2000000 		.4byte	0xa2
 7366 0c89 940C0000 		.4byte	0xc94
 7367 0c8d 08       		.uleb128 0x8
 7368 0c8e 36010000 		.4byte	0x136
 7369 0c92 49       		.byte	0x49
 7370 0c93 00       		.byte	0
 7371 0c94 25       		.uleb128 0x25
 7372 0c95 19040000 		.4byte	.LASF134
 7373 0c99 01       		.byte	0x1
 7374 0c9a 18       		.byte	0x18
 7375 0c9b 840C0000 		.4byte	0xc84
 7376 0c9f 05       		.uleb128 0x5
 7377 0ca0 03       		.byte	0x3
 7378 0ca1 00000000 		.4byte	returnedData
 7379 0ca5 25       		.uleb128 0x25
 7380 0ca6 07010000 		.4byte	.LASF135
 7381 0caa 01       		.byte	0x1
 7382 0cab 19       		.byte	0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 166


 7383 0cac C3000000 		.4byte	0xc3
 7384 0cb0 05       		.uleb128 0x5
 7385 0cb1 03       		.byte	0x3
 7386 0cb2 00000000 		.4byte	temper
 7387 0cb6 07       		.uleb128 0x7
 7388 0cb7 94000000 		.4byte	0x94
 7389 0cbb C60C0000 		.4byte	0xcc6
 7390 0cbf 08       		.uleb128 0x8
 7391 0cc0 36010000 		.4byte	0x136
 7392 0cc4 0A       		.byte	0xa
 7393 0cc5 00       		.byte	0
 7394 0cc6 25       		.uleb128 0x25
 7395 0cc7 E50A0000 		.4byte	.LASF136
 7396 0ccb 01       		.byte	0x1
 7397 0ccc 1A       		.byte	0x1a
 7398 0ccd B60C0000 		.4byte	0xcb6
 7399 0cd1 05       		.uleb128 0x5
 7400 0cd2 03       		.byte	0x3
 7401 0cd3 00000000 		.4byte	previousButtons
 7402 0cd7 25       		.uleb128 0x25
 7403 0cd8 C2000000 		.4byte	.LASF137
 7404 0cdc 01       		.byte	0x1
 7405 0cdd 1B       		.byte	0x1b
 7406 0cde 94000000 		.4byte	0x94
 7407 0ce2 05       		.uleb128 0x5
 7408 0ce3 03       		.byte	0x3
 7409 0ce4 00000000 		.4byte	octave
 7410 0ce8 07       		.uleb128 0x7
 7411 0ce9 B8000000 		.4byte	0xb8
 7412 0ced F80C0000 		.4byte	0xcf8
 7413 0cf1 08       		.uleb128 0x8
 7414 0cf2 36010000 		.4byte	0x136
 7415 0cf6 09       		.byte	0x9
 7416 0cf7 00       		.byte	0
 7417 0cf8 25       		.uleb128 0x25
 7418 0cf9 E9050000 		.4byte	.LASF138
 7419 0cfd 01       		.byte	0x1
 7420 0cfe 1C       		.byte	0x1c
 7421 0cff E80C0000 		.4byte	0xce8
 7422 0d03 05       		.uleb128 0x5
 7423 0d04 03       		.byte	0x3
 7424 0d05 00000000 		.4byte	angle
 7425 0d09 25       		.uleb128 0x25
 7426 0d0a B8080000 		.4byte	.LASF139
 7427 0d0e 01       		.byte	0x1
 7428 0d0f 1D       		.byte	0x1d
 7429 0d10 E80C0000 		.4byte	0xce8
 7430 0d14 05       		.uleb128 0x5
 7431 0d15 03       		.byte	0x3
 7432 0d16 00000000 		.4byte	prevAngle
 7433 0d1a 07       		.uleb128 0x7
 7434 0d1b B8000000 		.4byte	0xb8
 7435 0d1f 2A0D0000 		.4byte	0xd2a
 7436 0d23 08       		.uleb128 0x8
 7437 0d24 36010000 		.4byte	0x136
 7438 0d28 03       		.byte	0x3
 7439 0d29 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 167


 7440 0d2a 25       		.uleb128 0x25
 7441 0d2b 02090000 		.4byte	.LASF140
 7442 0d2f 01       		.byte	0x1
 7443 0d30 1F       		.byte	0x1f
 7444 0d31 1A0D0000 		.4byte	0xd1a
 7445 0d35 05       		.uleb128 0x5
 7446 0d36 03       		.byte	0x3
 7447 0d37 00000000 		.4byte	ADC_values
 7448 0d3b 25       		.uleb128 0x25
 7449 0d3c 3C030000 		.4byte	.LASF141
 7450 0d40 01       		.byte	0x1
 7451 0d41 20       		.byte	0x20
 7452 0d42 B8000000 		.4byte	0xb8
 7453 0d46 05       		.uleb128 0x5
 7454 0d47 03       		.byte	0x3
 7455 0d48 00000000 		.4byte	rawAngle
 7456 0d4c 25       		.uleb128 0x25
 7457 0d4d 29090000 		.4byte	.LASF142
 7458 0d51 01       		.byte	0x1
 7459 0d52 21       		.byte	0x21
 7460 0d53 B8000000 		.4byte	0xb8
 7461 0d57 05       		.uleb128 0x5
 7462 0d58 03       		.byte	0x3
 7463 0d59 00000000 		.4byte	midiSent
 7464 0d5d 25       		.uleb128 0x25
 7465 0d5e 9C030000 		.4byte	.LASF143
 7466 0d62 01       		.byte	0x1
 7467 0d63 22       		.byte	0x22
 7468 0d64 B8000000 		.4byte	0xb8
 7469 0d68 05       		.uleb128 0x5
 7470 0d69 03       		.byte	0x3
 7471 0d6a 00000000 		.4byte	midiOverflow
 7472 0d6e 25       		.uleb128 0x25
 7473 0d6f BF020000 		.4byte	.LASF144
 7474 0d73 01       		.byte	0x1
 7475 0d74 39       		.byte	0x39
 7476 0d75 D9000000 		.4byte	0xd9
 7477 0d79 05       		.uleb128 0x5
 7478 0d7a 03       		.byte	0x3
 7479 0d7b 00000000 		.4byte	rx1Channel
 7480 0d7f 25       		.uleb128 0x25
 7481 0d80 270B0000 		.4byte	.LASF145
 7482 0d84 01       		.byte	0x1
 7483 0d85 39       		.byte	0x39
 7484 0d86 D9000000 		.4byte	0xd9
 7485 0d8a 05       		.uleb128 0x5
 7486 0d8b 03       		.byte	0x3
 7487 0d8c 00000000 		.4byte	rx2Channel
 7488 0d90 25       		.uleb128 0x25
 7489 0d91 35070000 		.4byte	.LASF146
 7490 0d95 01       		.byte	0x1
 7491 0d96 3A       		.byte	0x3a
 7492 0d97 190B0000 		.4byte	0xb19
 7493 0d9b 05       		.uleb128 0x5
 7494 0d9c 03       		.byte	0x3
 7495 0d9d 00000000 		.4byte	rx1TD
 7496 0da1 25       		.uleb128 0x25
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 168


 7497 0da2 6F090000 		.4byte	.LASF147
 7498 0da6 01       		.byte	0x1
 7499 0da7 3A       		.byte	0x3a
 7500 0da8 190B0000 		.4byte	0xb19
 7501 0dac 05       		.uleb128 0x5
 7502 0dad 03       		.byte	0x3
 7503 0dae 00000000 		.4byte	rx2TD
 7504 0db2 07       		.uleb128 0x7
 7505 0db3 2A010000 		.4byte	0x12a
 7506 0db7 C80D0000 		.4byte	0xdc8
 7507 0dbb 08       		.uleb128 0x8
 7508 0dbc 36010000 		.4byte	0x136
 7509 0dc0 01       		.byte	0x1
 7510 0dc1 08       		.uleb128 0x8
 7511 0dc2 36010000 		.4byte	0x136
 7512 0dc6 19       		.byte	0x19
 7513 0dc7 00       		.byte	0
 7514 0dc8 25       		.uleb128 0x25
 7515 0dc9 42040000 		.4byte	.LASF148
 7516 0dcd 01       		.byte	0x1
 7517 0dce 3C       		.byte	0x3c
 7518 0dcf D90D0000 		.4byte	0xdd9
 7519 0dd3 05       		.uleb128 0x5
 7520 0dd4 03       		.byte	0x3
 7521 0dd5 00000000 		.4byte	rxBufferPluck
 7522 0dd9 06       		.uleb128 0x6
 7523 0dda B20D0000 		.4byte	0xdb2
 7524 0dde 07       		.uleb128 0x7
 7525 0ddf 2A010000 		.4byte	0x12a
 7526 0de3 F40D0000 		.4byte	0xdf4
 7527 0de7 08       		.uleb128 0x8
 7528 0de8 36010000 		.4byte	0x136
 7529 0dec 01       		.byte	0x1
 7530 0ded 08       		.uleb128 0x8
 7531 0dee 36010000 		.4byte	0x136
 7532 0df2 0B       		.byte	0xb
 7533 0df3 00       		.byte	0
 7534 0df4 25       		.uleb128 0x25
 7535 0df5 85080000 		.4byte	.LASF149
 7536 0df9 01       		.byte	0x1
 7537 0dfa 3D       		.byte	0x3d
 7538 0dfb 050E0000 		.4byte	0xe05
 7539 0dff 05       		.uleb128 0x5
 7540 0e00 03       		.byte	0x3
 7541 0e01 00000000 		.4byte	rxBufferBar
 7542 0e05 06       		.uleb128 0x6
 7543 0e06 DE0D0000 		.4byte	0xdde
 7544 0e0a 07       		.uleb128 0x7
 7545 0e0b 08020000 		.4byte	0x208
 7546 0e0f 1A0E0000 		.4byte	0xe1a
 7547 0e13 08       		.uleb128 0x8
 7548 0e14 36010000 		.4byte	0x136
 7549 0e18 0B       		.byte	0xb
 7550 0e19 00       		.byte	0
 7551 0e1a 25       		.uleb128 0x25
 7552 0e1b 93010000 		.4byte	.LASF150
 7553 0e1f 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 169


 7554 0e20 3F       		.byte	0x3f
 7555 0e21 2B0E0000 		.4byte	0xe2b
 7556 0e25 05       		.uleb128 0x5
 7557 0e26 03       		.byte	0x3
 7558 0e27 00000000 		.4byte	strings
 7559 0e2b 06       		.uleb128 0x6
 7560 0e2c 0A0E0000 		.4byte	0xe0a
 7561 0e30 25       		.uleb128 0x25
 7562 0e31 1F030000 		.4byte	.LASF151
 7563 0e35 01       		.byte	0x1
 7564 0e36 40       		.byte	0x40
 7565 0e37 410E0000 		.4byte	0xe41
 7566 0e3b 05       		.uleb128 0x5
 7567 0e3c 03       		.byte	0x3
 7568 0e3d 00000000 		.4byte	prevStrings
 7569 0e41 06       		.uleb128 0x6
 7570 0e42 0A0E0000 		.4byte	0xe0a
 7571 0e46 07       		.uleb128 0x7
 7572 0e47 08020000 		.4byte	0x208
 7573 0e4b 560E0000 		.4byte	0xe56
 7574 0e4f 08       		.uleb128 0x8
 7575 0e50 36010000 		.4byte	0x136
 7576 0e54 03       		.byte	0x3
 7577 0e55 00       		.byte	0
 7578 0e56 26       		.uleb128 0x26
 7579 0e57 62617200 		.ascii	"bar\000"
 7580 0e5b 01       		.byte	0x1
 7581 0e5c 41       		.byte	0x41
 7582 0e5d 670E0000 		.4byte	0xe67
 7583 0e61 05       		.uleb128 0x5
 7584 0e62 03       		.byte	0x3
 7585 0e63 00000000 		.4byte	bar
 7586 0e67 06       		.uleb128 0x6
 7587 0e68 460E0000 		.4byte	0xe46
 7588 0e6c 25       		.uleb128 0x25
 7589 0e6d 9F0B0000 		.4byte	.LASF152
 7590 0e71 01       		.byte	0x1
 7591 0e72 42       		.byte	0x42
 7592 0e73 7D0E0000 		.4byte	0xe7d
 7593 0e77 05       		.uleb128 0x5
 7594 0e78 03       		.byte	0x3
 7595 0e79 00000000 		.4byte	prevBar
 7596 0e7d 06       		.uleb128 0x6
 7597 0e7e 460E0000 		.4byte	0xe46
 7598 0e82 25       		.uleb128 0x25
 7599 0e83 100B0000 		.4byte	.LASF153
 7600 0e87 01       		.byte	0x1
 7601 0e88 43       		.byte	0x43
 7602 0e89 930E0000 		.4byte	0xe93
 7603 0e8d 05       		.uleb128 0x5
 7604 0e8e 03       		.byte	0x3
 7605 0e8f 00000000 		.4byte	maxStrings
 7606 0e93 06       		.uleb128 0x6
 7607 0e94 0A0E0000 		.4byte	0xe0a
 7608 0e98 25       		.uleb128 0x25
 7609 0e99 9E090000 		.4byte	.LASF154
 7610 0e9d 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 170


 7611 0e9e 44       		.byte	0x44
 7612 0e9f 03020000 		.4byte	0x203
 7613 0ea3 05       		.uleb128 0x5
 7614 0ea4 03       		.byte	0x3
 7615 0ea5 00000000 		.4byte	amHere
 7616 0ea9 25       		.uleb128 0x25
 7617 0eaa EA030000 		.4byte	.LASF155
 7618 0eae 01       		.byte	0x1
 7619 0eaf 45       		.byte	0x45
 7620 0eb0 03020000 		.4byte	0x203
 7621 0eb4 05       		.uleb128 0x5
 7622 0eb5 03       		.byte	0x3
 7623 0eb6 00000000 		.4byte	spiCounter
 7624 0eba 25       		.uleb128 0x25
 7625 0ebb D8020000 		.4byte	.LASF156
 7626 0ebf 01       		.byte	0x1
 7627 0ec0 46       		.byte	0x46
 7628 0ec1 03020000 		.4byte	0x203
 7629 0ec5 05       		.uleb128 0x5
 7630 0ec6 03       		.byte	0x3
 7631 0ec7 00000000 		.4byte	newDataFlag
 7632 0ecb 25       		.uleb128 0x25
 7633 0ecc 620A0000 		.4byte	.LASF157
 7634 0ed0 01       		.byte	0x1
 7635 0ed1 47       		.byte	0x47
 7636 0ed2 94000000 		.4byte	0x94
 7637 0ed6 05       		.uleb128 0x5
 7638 0ed7 03       		.byte	0x3
 7639 0ed8 00000000 		.4byte	prevOctave
 7640 0edc 25       		.uleb128 0x25
 7641 0edd C2080000 		.4byte	.LASF158
 7642 0ee1 01       		.byte	0x1
 7643 0ee2 48       		.byte	0x48
 7644 0ee3 A2000000 		.4byte	0xa2
 7645 0ee7 05       		.uleb128 0x5
 7646 0ee8 03       		.byte	0x3
 7647 0ee9 00000000 		.4byte	pluck_index
 7648 0eed 25       		.uleb128 0x25
 7649 0eee C70A0000 		.4byte	.LASF159
 7650 0ef2 01       		.byte	0x1
 7651 0ef3 49       		.byte	0x49
 7652 0ef4 03020000 		.4byte	0x203
 7653 0ef8 05       		.uleb128 0x5
 7654 0ef9 03       		.byte	0x3
 7655 0efa 00000000 		.4byte	amHere2
 7656 0efe 25       		.uleb128 0x25
 7657 0eff B0090000 		.4byte	.LASF160
 7658 0f03 01       		.byte	0x1
 7659 0f04 4A       		.byte	0x4a
 7660 0f05 03020000 		.4byte	0x203
 7661 0f09 05       		.uleb128 0x5
 7662 0f0a 03       		.byte	0x3
 7663 0f0b 00000000 		.4byte	spiCounter2
 7664 0f0f 25       		.uleb128 0x25
 7665 0f10 3A000000 		.4byte	.LASF161
 7666 0f14 01       		.byte	0x1
 7667 0f15 4B       		.byte	0x4b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 171


 7668 0f16 03020000 		.4byte	0x203
 7669 0f1a 05       		.uleb128 0x5
 7670 0f1b 03       		.byte	0x3
 7671 0f1c 00000000 		.4byte	newDataFlag2
 7672 0f20 25       		.uleb128 0x25
 7673 0f21 B9070000 		.4byte	.LASF162
 7674 0f25 01       		.byte	0x1
 7675 0f26 4C       		.byte	0x4c
 7676 0f27 03020000 		.4byte	0x203
 7677 0f2b 05       		.uleb128 0x5
 7678 0f2c 03       		.byte	0x3
 7679 0f2d 00000000 		.4byte	currentPluckBuffer
 7680 0f31 25       		.uleb128 0x25
 7681 0f32 F1080000 		.4byte	.LASF163
 7682 0f36 01       		.byte	0x1
 7683 0f37 4D       		.byte	0x4d
 7684 0f38 03020000 		.4byte	0x203
 7685 0f3c 05       		.uleb128 0x5
 7686 0f3d 03       		.byte	0x3
 7687 0f3e 00000000 		.4byte	currentBarBuffer
 7688 0f42 25       		.uleb128 0x25
 7689 0f43 F9090000 		.4byte	.LASF164
 7690 0f47 01       		.byte	0x1
 7691 0f48 4E       		.byte	0x4e
 7692 0f49 03020000 		.4byte	0x203
 7693 0f4d 05       		.uleb128 0x5
 7694 0f4e 03       		.byte	0x3
 7695 0f4f 00000000 		.4byte	pluckErrorCount
 7696 0f53 25       		.uleb128 0x25
 7697 0f54 1A090000 		.4byte	.LASF165
 7698 0f58 01       		.byte	0x1
 7699 0f59 4F       		.byte	0x4f
 7700 0f5a 08020000 		.4byte	0x208
 7701 0f5e 05       		.uleb128 0x5
 7702 0f5f 03       		.byte	0x3
 7703 0f60 00000000 		.4byte	SPI1ErrorCount
 7704 0f64 25       		.uleb128 0x25
 7705 0f65 1A050000 		.4byte	.LASF166
 7706 0f69 01       		.byte	0x1
 7707 0f6a 53       		.byte	0x53
 7708 0f6b 03020000 		.4byte	0x203
 7709 0f6f 05       		.uleb128 0x5
 7710 0f70 03       		.byte	0x3
 7711 0f71 00000000 		.4byte	inputData
 7712 0f75 25       		.uleb128 0x25
 7713 0f76 1B0B0000 		.4byte	.LASF167
 7714 0f7a 01       		.byte	0x1
 7715 0f7b B1       		.byte	0xb1
 7716 0f7c A2000000 		.4byte	0xa2
 7717 0f80 05       		.uleb128 0x5
 7718 0f81 03       		.byte	0x3
 7719 0f82 00000000 		.4byte	spiAdjusted
 7720 0f86 25       		.uleb128 0x25
 7721 0f87 63040000 		.4byte	.LASF168
 7722 0f8b 01       		.byte	0x1
 7723 0f8c B2       		.byte	0xb2
 7724 0f8d A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 172


 7725 0f91 05       		.uleb128 0x5
 7726 0f92 03       		.byte	0x3
 7727 0f93 00000000 		.4byte	mySpiCounter
 7728 0f97 25       		.uleb128 0x25
 7729 0f98 45080000 		.4byte	.LASF169
 7730 0f9c 01       		.byte	0x1
 7731 0f9d B3       		.byte	0xb3
 7732 0f9e 08020000 		.4byte	0x208
 7733 0fa2 05       		.uleb128 0x5
 7734 0fa3 03       		.byte	0x3
 7735 0fa4 00000000 		.4byte	offsetErrorCount
 7736 0fa8 25       		.uleb128 0x25
 7737 0fa9 8A000000 		.4byte	.LASF170
 7738 0fad 01       		.byte	0x1
 7739 0fae B4       		.byte	0xb4
 7740 0faf 03020000 		.4byte	0x203
 7741 0fb3 05       		.uleb128 0x5
 7742 0fb4 03       		.byte	0x3
 7743 0fb5 00000000 		.4byte	SPI2errorflag
 7744 0fb9 25       		.uleb128 0x25
 7745 0fba 34080000 		.4byte	.LASF171
 7746 0fbe 01       		.byte	0x1
 7747 0fbf B5       		.byte	0xb5
 7748 0fc0 CA0F0000 		.4byte	0xfca
 7749 0fc4 05       		.uleb128 0x5
 7750 0fc5 03       		.byte	0x3
 7751 0fc6 00000000 		.4byte	bar_index
 7752 0fca 06       		.uleb128 0x6
 7753 0fcb 94000000 		.4byte	0x94
 7754 0fcf 25       		.uleb128 0x25
 7755 0fd0 18020000 		.4byte	.LASF172
 7756 0fd4 01       		.byte	0x1
 7757 0fd5 B6       		.byte	0xb6
 7758 0fd6 71020000 		.4byte	0x271
 7759 0fda 05       		.uleb128 0x5
 7760 0fdb 03       		.byte	0x3
 7761 0fdc 00000000 		.4byte	knobs
 7762 0fe0 25       		.uleb128 0x25
 7763 0fe1 59040000 		.4byte	.LASF173
 7764 0fe5 01       		.byte	0x1
 7765 0fe6 B7       		.byte	0xb7
 7766 0fe7 71020000 		.4byte	0x271
 7767 0feb 05       		.uleb128 0x5
 7768 0fec 03       		.byte	0x3
 7769 0fed 00000000 		.4byte	prevKnobs
 7770 0ff1 25       		.uleb128 0x25
 7771 0ff2 AD070000 		.4byte	.LASF174
 7772 0ff6 01       		.byte	0x1
 7773 0ff7 B9       		.byte	0xb9
 7774 0ff8 03020000 		.4byte	0x203
 7775 0ffc 05       		.uleb128 0x5
 7776 0ffd 03       		.byte	0x3
 7777 0ffe 00000000 		.4byte	SPI2started
 7778 1002 23       		.uleb128 0x23
 7779 1003 A5090000 		.4byte	.LASF175
 7780 1007 01       		.byte	0x1
 7781 1008 3901     		.2byte	0x139
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 173


 7782 100a 190B0000 		.4byte	0xb19
 7783 100e 05       		.uleb128 0x5
 7784 100f 03       		.byte	0x3
 7785 1010 00000000 		.4byte	array
 7786 1014 23       		.uleb128 0x23
 7787 1015 8D050000 		.4byte	.LASF176
 7788 1019 01       		.byte	0x1
 7789 101a 3C01     		.2byte	0x13c
 7790 101c F7010000 		.4byte	0x1f7
 7791 1020 05       		.uleb128 0x5
 7792 1021 03       		.byte	0x3
 7793 1022 00000000 		.4byte	eepromReturnValue
 7794 1026 23       		.uleb128 0x23
 7795 1027 6D030000 		.4byte	.LASF177
 7796 102b 01       		.byte	0x1
 7797 102c 4801     		.2byte	0x148
 7798 102e D9000000 		.4byte	0xd9
 7799 1032 05       		.uleb128 0x5
 7800 1033 03       		.byte	0x3
 7801 1034 00000000 		.4byte	eeprom_cnt
 7802 1038 23       		.uleb128 0x23
 7803 1039 9F050000 		.4byte	.LASF75
 7804 103d 01       		.byte	0x1
 7805 103e 4901     		.2byte	0x149
 7806 1040 12010000 		.4byte	0x112
 7807 1044 05       		.uleb128 0x5
 7808 1045 03       		.byte	0x3
 7809 1046 00000000 		.4byte	status
 7810 104a 27       		.uleb128 0x27
 7811 104b 70747200 		.ascii	"ptr\000"
 7812 104f 01       		.byte	0x1
 7813 1050 4A01     		.2byte	0x14a
 7814 1052 5C100000 		.4byte	0x105c
 7815 1056 05       		.uleb128 0x5
 7816 1057 03       		.byte	0x3
 7817 1058 00000000 		.4byte	ptr
 7818 105c 1F       		.uleb128 0x1f
 7819 105d 04       		.byte	0x4
 7820 105e 67100000 		.4byte	0x1067
 7821 1062 22       		.uleb128 0x22
 7822 1063 D9000000 		.4byte	0xd9
 7823 1067 06       		.uleb128 0x6
 7824 1068 62100000 		.4byte	0x1062
 7825 106c 23       		.uleb128 0x23
 7826 106d 84010000 		.4byte	.LASF178
 7827 1071 01       		.byte	0x1
 7828 1072 4B01     		.2byte	0x14b
 7829 1074 CA0F0000 		.4byte	0xfca
 7830 1078 05       		.uleb128 0x5
 7831 1079 03       		.byte	0x3
 7832 107a 00000000 		.4byte	barCount
 7833 107e 07       		.uleb128 0x7
 7834 107f 03020000 		.4byte	0x203
 7835 1083 8E100000 		.4byte	0x108e
 7836 1087 08       		.uleb128 0x8
 7837 1088 36010000 		.4byte	0x136
 7838 108c 0F       		.byte	0xf
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 174


 7839 108d 00       		.byte	0
 7840 108e 23       		.uleb128 0x23
 7841 108f AE000000 		.4byte	.LASF179
 7842 1093 01       		.byte	0x1
 7843 1094 A901     		.2byte	0x1a9
 7844 1096 A0100000 		.4byte	0x10a0
 7845 109a 05       		.uleb128 0x5
 7846 109b 03       		.byte	0x3
 7847 109c 00000000 		.4byte	I2Cbuff2
 7848 10a0 06       		.uleb128 0x6
 7849 10a1 7E100000 		.4byte	0x107e
 7850 10a5 23       		.uleb128 0x23
 7851 10a6 A6050000 		.4byte	.LASF180
 7852 10aa 01       		.byte	0x1
 7853 10ab AA01     		.2byte	0x1aa
 7854 10ad 03020000 		.4byte	0x203
 7855 10b1 05       		.uleb128 0x5
 7856 10b2 03       		.byte	0x3
 7857 10b3 00000000 		.4byte	send_it
 7858 10b7 07       		.uleb128 0x7
 7859 10b8 A2000000 		.4byte	0xa2
 7860 10bc CD100000 		.4byte	0x10cd
 7861 10c0 08       		.uleb128 0x8
 7862 10c1 36010000 		.4byte	0x136
 7863 10c5 0B       		.byte	0xb
 7864 10c6 08       		.uleb128 0x8
 7865 10c7 36010000 		.4byte	0x136
 7866 10cb 01       		.byte	0x1
 7867 10cc 00       		.byte	0
 7868 10cd 23       		.uleb128 0x23
 7869 10ce B7000000 		.4byte	.LASF181
 7870 10d2 01       		.byte	0x1
 7871 10d3 AC01     		.2byte	0x1ac
 7872 10d5 B7100000 		.4byte	0x10b7
 7873 10d9 05       		.uleb128 0x5
 7874 10da 03       		.byte	0x3
 7875 10db 00000000 		.4byte	mux_states
 7876 10df 23       		.uleb128 0x23
 7877 10e0 470A0000 		.4byte	.LASF182
 7878 10e4 01       		.byte	0x1
 7879 10e5 AD01     		.2byte	0x1ad
 7880 10e7 E80C0000 		.4byte	0xce8
 7881 10eb 05       		.uleb128 0x5
 7882 10ec 03       		.byte	0x3
 7883 10ed 00000000 		.4byte	pedals_low
 7884 10f1 23       		.uleb128 0x23
 7885 10f2 EA000000 		.4byte	.LASF183
 7886 10f6 01       		.byte	0x1
 7887 10f7 AE01     		.2byte	0x1ae
 7888 10f9 E80C0000 		.4byte	0xce8
 7889 10fd 05       		.uleb128 0x5
 7890 10fe 03       		.byte	0x3
 7891 10ff 00000000 		.4byte	pedals_high
 7892 1103 23       		.uleb128 0x23
 7893 1104 CF090000 		.4byte	.LASF184
 7894 1108 01       		.byte	0x1
 7895 1109 AF01     		.2byte	0x1af
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 175


 7896 110b B8000000 		.4byte	0xb8
 7897 110f 05       		.uleb128 0x5
 7898 1110 03       		.byte	0x3
 7899 1111 00000000 		.4byte	deadzone
 7900 1115 23       		.uleb128 0x23
 7901 1116 36040000 		.4byte	.LASF185
 7902 111a 01       		.byte	0x1
 7903 111b B001     		.2byte	0x1b0
 7904 111d B8000000 		.4byte	0xb8
 7905 1121 05       		.uleb128 0x5
 7906 1122 03       		.byte	0x3
 7907 1123 00000000 		.4byte	volumePedal
 7908 1127 23       		.uleb128 0x23
 7909 1128 91080000 		.4byte	.LASF186
 7910 112c 01       		.byte	0x1
 7911 112d B101     		.2byte	0x1b1
 7912 112f E80C0000 		.4byte	0xce8
 7913 1133 05       		.uleb128 0x5
 7914 1134 03       		.byte	0x3
 7915 1135 00000000 		.4byte	processed_pedals
 7916 1139 23       		.uleb128 0x23
 7917 113a 97070000 		.4byte	.LASF187
 7918 113e 01       		.byte	0x1
 7919 113f B201     		.2byte	0x1b2
 7920 1141 E80C0000 		.4byte	0xce8
 7921 1145 05       		.uleb128 0x5
 7922 1146 03       		.byte	0x3
 7923 1147 00000000 		.4byte	prev_processed_pedals
 7924 114b 23       		.uleb128 0x23
 7925 114c 15000000 		.4byte	.LASF188
 7926 1150 01       		.byte	0x1
 7927 1151 B301     		.2byte	0x1b3
 7928 1153 AD000000 		.4byte	0xad
 7929 1157 05       		.uleb128 0x5
 7930 1158 03       		.byte	0x3
 7931 1159 00000000 		.4byte	prev_processed_volumePedal
 7932 115d 23       		.uleb128 0x23
 7933 115e 56080000 		.4byte	.LASF189
 7934 1162 01       		.byte	0x1
 7935 1163 B401     		.2byte	0x1b4
 7936 1165 AD000000 		.4byte	0xad
 7937 1169 05       		.uleb128 0x5
 7938 116a 03       		.byte	0x3
 7939 116b 00000000 		.4byte	processed_volumePedal
 7940 116f 07       		.uleb128 0x7
 7941 1170 FD000000 		.4byte	0xfd
 7942 1174 85110000 		.4byte	0x1185
 7943 1178 08       		.uleb128 0x8
 7944 1179 36010000 		.4byte	0x136
 7945 117d 03       		.byte	0x3
 7946 117e 08       		.uleb128 0x8
 7947 117f 36010000 		.4byte	0x136
 7948 1183 03       		.byte	0x3
 7949 1184 00       		.byte	0
 7950 1185 23       		.uleb128 0x23
 7951 1186 770A0000 		.4byte	.LASF190
 7952 118a 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 176


 7953 118b B701     		.2byte	0x1b7
 7954 118d 6F110000 		.4byte	0x116f
 7955 1191 05       		.uleb128 0x5
 7956 1192 03       		.byte	0x3
 7957 1193 00000000 		.4byte	fretMeasurements
 7958 1197 07       		.uleb128 0x7
 7959 1198 FD000000 		.4byte	0xfd
 7960 119c A7110000 		.4byte	0x11a7
 7961 11a0 08       		.uleb128 0x8
 7962 11a1 36010000 		.4byte	0x136
 7963 11a5 03       		.byte	0x3
 7964 11a6 00       		.byte	0
 7965 11a7 23       		.uleb128 0x23
 7966 11a8 07020000 		.4byte	.LASF191
 7967 11ac 01       		.byte	0x1
 7968 11ad C501     		.2byte	0x1c5
 7969 11af 97110000 		.4byte	0x1197
 7970 11b3 05       		.uleb128 0x5
 7971 11b4 03       		.byte	0x3
 7972 11b5 00000000 		.4byte	fretScaling
 7973 11b9 07       		.uleb128 0x7
 7974 11ba FD000000 		.4byte	0xfd
 7975 11be C9110000 		.4byte	0x11c9
 7976 11c2 08       		.uleb128 0x8
 7977 11c3 36010000 		.4byte	0x136
 7978 11c7 09       		.byte	0x9
 7979 11c8 00       		.byte	0
 7980 11c9 23       		.uleb128 0x23
 7981 11ca A5020000 		.4byte	.LASF192
 7982 11ce 01       		.byte	0x1
 7983 11cf CA01     		.2byte	0x1ca
 7984 11d1 B9110000 		.4byte	0x11b9
 7985 11d5 05       		.uleb128 0x5
 7986 11d6 03       		.byte	0x3
 7987 11d7 00000000 		.4byte	pedalRatios
 7988 11db 23       		.uleb128 0x23
 7989 11dc 66090000 		.4byte	.LASF193
 7990 11e0 01       		.byte	0x1
 7991 11e1 CB01     		.2byte	0x1cb
 7992 11e3 A2000000 		.4byte	0xa2
 7993 11e7 05       		.uleb128 0x5
 7994 11e8 03       		.byte	0x3
 7995 11e9 00000000 		.4byte	last_mux
 7996 11ed 23       		.uleb128 0x23
 7997 11ee C4060000 		.4byte	.LASF194
 7998 11f2 01       		.byte	0x1
 7999 11f3 CC01     		.2byte	0x1cc
 8000 11f5 03020000 		.4byte	0x203
 8001 11f9 05       		.uleb128 0x5
 8002 11fa 03       		.byte	0x3
 8003 11fb 00000000 		.4byte	main_counter
 8004 11ff 23       		.uleb128 0x23
 8005 1200 4F030000 		.4byte	.LASF195
 8006 1204 01       		.byte	0x1
 8007 1205 CD01     		.2byte	0x1cd
 8008 1207 A2000000 		.4byte	0xa2
 8009 120b 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 177


 8010 120c 03       		.byte	0x3
 8011 120d 00000000 		.4byte	neck
 8012 1211 23       		.uleb128 0x23
 8013 1212 DB060000 		.4byte	.LASF196
 8014 1216 01       		.byte	0x1
 8015 1217 CE01     		.2byte	0x1ce
 8016 1219 A2000000 		.4byte	0xa2
 8017 121d 05       		.uleb128 0x5
 8018 121e 03       		.byte	0x3
 8019 121f 00000000 		.4byte	dualSlider
 8020 1223 23       		.uleb128 0x23
 8021 1224 12090000 		.4byte	.LASF197
 8022 1228 01       		.byte	0x1
 8023 1229 CF01     		.2byte	0x1cf
 8024 122b A2000000 		.4byte	0xa2
 8025 122f 05       		.uleb128 0x5
 8026 1230 03       		.byte	0x3
 8027 1231 00000000 		.4byte	enterUp
 8028 1235 23       		.uleb128 0x23
 8029 1236 8D010000 		.4byte	.LASF198
 8030 123a 01       		.byte	0x1
 8031 123b D001     		.2byte	0x1d0
 8032 123d A2000000 		.4byte	0xa2
 8033 1241 05       		.uleb128 0x5
 8034 1242 03       		.byte	0x3
 8035 1243 00000000 		.4byte	voice
 8036 1247 23       		.uleb128 0x23
 8037 1248 BB0B0000 		.4byte	.LASF199
 8038 124c 01       		.byte	0x1
 8039 124d D101     		.2byte	0x1d1
 8040 124f A2000000 		.4byte	0xa2
 8041 1253 05       		.uleb128 0x5
 8042 1254 03       		.byte	0x3
 8043 1255 00000000 		.4byte	editUp
 8044 1259 23       		.uleb128 0x23
 8045 125a 0B030000 		.4byte	.LASF200
 8046 125e 01       		.byte	0x1
 8047 125f D201     		.2byte	0x1d2
 8048 1261 6B120000 		.4byte	0x126b
 8049 1265 05       		.uleb128 0x5
 8050 1266 03       		.byte	0x3
 8051 1267 00000000 		.4byte	encoderVal
 8052 126b 06       		.uleb128 0x6
 8053 126c 7E100000 		.4byte	0x107e
 8054 1270 23       		.uleb128 0x23
 8055 1271 8C030000 		.4byte	.LASF201
 8056 1275 01       		.byte	0x1
 8057 1276 D301     		.2byte	0x1d3
 8058 1278 94000000 		.4byte	0x94
 8059 127c 05       		.uleb128 0x5
 8060 127d 03       		.byte	0x3
 8061 127e 00000000 		.4byte	encoderNum
 8062 1282 23       		.uleb128 0x23
 8063 1283 5F070000 		.4byte	.LASF202
 8064 1287 01       		.byte	0x1
 8065 1288 D401     		.2byte	0x1d4
 8066 128a A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 178


 8067 128e 05       		.uleb128 0x5
 8068 128f 03       		.byte	0x3
 8069 1290 00000000 		.4byte	button1Up
 8070 1294 23       		.uleb128 0x23
 8071 1295 94090000 		.4byte	.LASF203
 8072 1299 01       		.byte	0x1
 8073 129a D501     		.2byte	0x1d5
 8074 129c A2000000 		.4byte	0xa2
 8075 12a0 05       		.uleb128 0x5
 8076 12a1 03       		.byte	0x3
 8077 12a2 00000000 		.4byte	button2Up
 8078 12a6 23       		.uleb128 0x23
 8079 12a7 6D0B0000 		.4byte	.LASF204
 8080 12ab 01       		.byte	0x1
 8081 12ac D601     		.2byte	0x1d6
 8082 12ae A2000000 		.4byte	0xa2
 8083 12b2 05       		.uleb128 0x5
 8084 12b3 03       		.byte	0x3
 8085 12b4 00000000 		.4byte	button3Up
 8086 12b8 23       		.uleb128 0x23
 8087 12b9 4E0B0000 		.4byte	.LASF205
 8088 12bd 01       		.byte	0x1
 8089 12be D701     		.2byte	0x1d7
 8090 12c0 A2000000 		.4byte	0xa2
 8091 12c4 05       		.uleb128 0x5
 8092 12c5 03       		.byte	0x3
 8093 12c6 00000000 		.4byte	button4Up
 8094 12ca 23       		.uleb128 0x23
 8095 12cb 1B0A0000 		.4byte	.LASF206
 8096 12cf 01       		.byte	0x1
 8097 12d0 D801     		.2byte	0x1d8
 8098 12d2 A2000000 		.4byte	0xa2
 8099 12d6 05       		.uleb128 0x5
 8100 12d7 03       		.byte	0x3
 8101 12d8 00000000 		.4byte	patchNum
 8102 12dc 07       		.uleb128 0x7
 8103 12dd FD000000 		.4byte	0xfd
 8104 12e1 F8120000 		.4byte	0x12f8
 8105 12e5 08       		.uleb128 0x8
 8106 12e6 36010000 		.4byte	0x136
 8107 12ea 1F       		.byte	0x1f
 8108 12eb 08       		.uleb128 0x8
 8109 12ec 36010000 		.4byte	0x136
 8110 12f0 0A       		.byte	0xa
 8111 12f1 08       		.uleb128 0x8
 8112 12f2 36010000 		.4byte	0x136
 8113 12f6 0B       		.byte	0xb
 8114 12f7 00       		.byte	0
 8115 12f8 23       		.uleb128 0x23
 8116 12f9 50040000 		.4byte	.LASF207
 8117 12fd 01       		.byte	0x1
 8118 12fe EC01     		.2byte	0x1ec
 8119 1300 DC120000 		.4byte	0x12dc
 8120 1304 05       		.uleb128 0x5
 8121 1305 03       		.byte	0x3
 8122 1306 00000000 		.4byte	copedent
 8123 130a 07       		.uleb128 0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 179


 8124 130b FD000000 		.4byte	0xfd
 8125 130f 1A130000 		.4byte	0x131a
 8126 1313 08       		.uleb128 0x8
 8127 1314 36010000 		.4byte	0x136
 8128 1318 0B       		.byte	0xb
 8129 1319 00       		.byte	0
 8130 131a 23       		.uleb128 0x23
 8131 131b B6010000 		.4byte	.LASF208
 8132 131f 01       		.byte	0x1
 8133 1320 EE01     		.2byte	0x1ee
 8134 1322 0A130000 		.4byte	0x130a
 8135 1326 05       		.uleb128 0x5
 8136 1327 03       		.byte	0x3
 8137 1328 00000000 		.4byte	prevStringPitchBend
 8138 132c 07       		.uleb128 0x7
 8139 132d FD000000 		.4byte	0xfd
 8140 1331 42130000 		.4byte	0x1342
 8141 1335 08       		.uleb128 0x8
 8142 1336 36010000 		.4byte	0x136
 8143 133a 09       		.byte	0x9
 8144 133b 08       		.uleb128 0x8
 8145 133c 36010000 		.4byte	0x136
 8146 1340 0B       		.byte	0xb
 8147 1341 00       		.byte	0
 8148 1342 23       		.uleb128 0x23
 8149 1343 B40B0000 		.4byte	.LASF209
 8150 1347 01       		.byte	0x1
 8151 1348 0602     		.2byte	0x206
 8152 134a 2C130000 		.4byte	0x132c
 8153 134e 05       		.uleb128 0x5
 8154 134f 03       		.byte	0x3
 8155 1350 00000000 		.4byte	pedals
 8156 1354 23       		.uleb128 0x23
 8157 1355 A2080000 		.4byte	.LASF210
 8158 1359 01       		.byte	0x1
 8159 135a 0902     		.2byte	0x209
 8160 135c 0A130000 		.4byte	0x130a
 8161 1360 05       		.uleb128 0x5
 8162 1361 03       		.byte	0x3
 8163 1362 00000000 		.4byte	openStringFrequencies
 8164 1366 23       		.uleb128 0x23
 8165 1367 CF0A0000 		.4byte	.LASF211
 8166 136b 01       		.byte	0x1
 8167 136c 0A02     		.2byte	0x20a
 8168 136e 0A130000 		.4byte	0x130a
 8169 1372 05       		.uleb128 0x5
 8170 1373 03       		.byte	0x3
 8171 1374 00000000 		.4byte	stringMappedPositions
 8172 1378 23       		.uleb128 0x23
 8173 1379 01050000 		.4byte	.LASF212
 8174 137d 01       		.byte	0x1
 8175 137e 0B02     		.2byte	0x20b
 8176 1380 0A130000 		.4byte	0x130a
 8177 1384 05       		.uleb128 0x5
 8178 1385 03       		.byte	0x3
 8179 1386 00000000 		.4byte	invStringMappedPositions
 8180 138a 23       		.uleb128 0x23
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 180


 8181 138b E50B0000 		.4byte	.LASF213
 8182 138f 01       		.byte	0x1
 8183 1390 0C02     		.2byte	0x20c
 8184 1392 0A130000 		.4byte	0x130a
 8185 1396 05       		.uleb128 0x5
 8186 1397 03       		.byte	0x3
 8187 1398 00000000 		.4byte	stringFrequencies
 8188 139c 23       		.uleb128 0x23
 8189 139d E4020000 		.4byte	.LASF214
 8190 13a1 01       		.byte	0x1
 8191 13a2 0D02     		.2byte	0x20d
 8192 13a4 0A130000 		.4byte	0x130a
 8193 13a8 05       		.uleb128 0x5
 8194 13a9 03       		.byte	0x3
 8195 13aa 00000000 		.4byte	stringOctave
 8196 13ae 23       		.uleb128 0x23
 8197 13af 29070000 		.4byte	.LASF215
 8198 13b3 01       		.byte	0x1
 8199 13b4 0E02     		.2byte	0x20e
 8200 13b6 0A130000 		.4byte	0x130a
 8201 13ba 05       		.uleb128 0x5
 8202 13bb 03       		.byte	0x3
 8203 13bc 00000000 		.4byte	stringPitch
 8204 13c0 23       		.uleb128 0x23
 8205 13c1 8D0A0000 		.4byte	.LASF216
 8206 13c5 01       		.byte	0x1
 8207 13c6 0F02     		.2byte	0x20f
 8208 13c8 0A130000 		.4byte	0x130a
 8209 13cc 05       		.uleb128 0x5
 8210 13cd 03       		.byte	0x3
 8211 13ce 00000000 		.4byte	stringMIDI
 8212 13d2 07       		.uleb128 0x7
 8213 13d3 94000000 		.4byte	0x94
 8214 13d7 E2130000 		.4byte	0x13e2
 8215 13db 08       		.uleb128 0x8
 8216 13dc 36010000 		.4byte	0x136
 8217 13e0 0B       		.byte	0xb
 8218 13e1 00       		.byte	0
 8219 13e2 23       		.uleb128 0x23
 8220 13e3 0E060000 		.4byte	.LASF217
 8221 13e7 01       		.byte	0x1
 8222 13e8 1002     		.2byte	0x210
 8223 13ea D2130000 		.4byte	0x13d2
 8224 13ee 05       		.uleb128 0x5
 8225 13ef 03       		.byte	0x3
 8226 13f0 00000000 		.4byte	openStringMIDI_Int
 8227 13f4 23       		.uleb128 0x23
 8228 13f5 110A0000 		.4byte	.LASF218
 8229 13f9 01       		.byte	0x1
 8230 13fa 1102     		.2byte	0x211
 8231 13fc 94000000 		.4byte	0x94
 8232 1400 05       		.uleb128 0x5
 8233 1401 03       		.byte	0x3
 8234 1402 00000000 		.4byte	OLEDcount
 8235 1406 23       		.uleb128 0x23
 8236 1407 340A0000 		.4byte	.LASF219
 8237 140b 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 181


 8238 140c 1C02     		.2byte	0x21c
 8239 140e B9110000 		.4byte	0x11b9
 8240 1412 05       		.uleb128 0x5
 8241 1413 03       		.byte	0x3
 8242 1414 00000000 		.4byte	pedals_float
 8243 1418 23       		.uleb128 0x23
 8244 1419 3A090000 		.4byte	.LASF220
 8245 141d 01       		.byte	0x1
 8246 141e 2302     		.2byte	0x223
 8247 1420 94000000 		.4byte	0x94
 8248 1424 05       		.uleb128 0x5
 8249 1425 03       		.byte	0x3
 8250 1426 00000000 		.4byte	currentNeck
 8251 142a 23       		.uleb128 0x23
 8252 142b 3E050000 		.4byte	.LASF221
 8253 142f 01       		.byte	0x1
 8254 1430 7D06     		.2byte	0x67d
 8255 1432 D2130000 		.4byte	0x13d2
 8256 1436 05       		.uleb128 0x5
 8257 1437 03       		.byte	0x3
 8258 1438 00000000 		.4byte	prevNotes
 8259 143c 07       		.uleb128 0x7
 8260 143d A2000000 		.4byte	0xa2
 8261 1441 4C140000 		.4byte	0x144c
 8262 1445 08       		.uleb128 0x8
 8263 1446 36010000 		.4byte	0x136
 8264 144a 7F       		.byte	0x7f
 8265 144b 00       		.byte	0
 8266 144c 23       		.uleb128 0x23
 8267 144d ED090000 		.4byte	.LASF222
 8268 1451 01       		.byte	0x1
 8269 1452 ED06     		.2byte	0x6ed
 8270 1454 3C140000 		.4byte	0x143c
 8271 1458 05       		.uleb128 0x5
 8272 1459 03       		.byte	0x3
 8273 145a 00000000 		.4byte	sysexBuffer
 8274 145e 23       		.uleb128 0x23
 8275 145f 1E020000 		.4byte	.LASF223
 8276 1463 01       		.byte	0x1
 8277 1464 EE06     		.2byte	0x6ee
 8278 1466 CE000000 		.4byte	0xce
 8279 146a 05       		.uleb128 0x5
 8280 146b 03       		.byte	0x3
 8281 146c 00000000 		.4byte	sysexPointer
 8282 1470 23       		.uleb128 0x23
 8283 1471 F3070000 		.4byte	.LASF224
 8284 1475 01       		.byte	0x1
 8285 1476 EF06     		.2byte	0x6ef
 8286 1478 A2000000 		.4byte	0xa2
 8287 147c 05       		.uleb128 0x5
 8288 147d 03       		.byte	0x3
 8289 147e 00000000 		.4byte	receivingSysex
 8290 1482 23       		.uleb128 0x23
 8291 1483 0C040000 		.4byte	.LASF225
 8292 1487 01       		.byte	0x1
 8293 1488 F006     		.2byte	0x6f0
 8294 148a A2000000 		.4byte	0xa2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 182


 8295 148e 05       		.uleb128 0x5
 8296 148f 03       		.byte	0x3
 8297 1490 00000000 		.4byte	parsingSysex
 8298 1494 23       		.uleb128 0x23
 8299 1495 1F080000 		.4byte	.LASF226
 8300 1499 01       		.byte	0x1
 8301 149a F106     		.2byte	0x6f1
 8302 149c 03020000 		.4byte	0x203
 8303 14a0 05       		.uleb128 0x5
 8304 14a1 03       		.byte	0x3
 8305 14a2 00000000 		.4byte	checkStatus
 8306 14a6 23       		.uleb128 0x23
 8307 14a7 80090000 		.4byte	.LASF227
 8308 14ab 01       		.byte	0x1
 8309 14ac F206     		.2byte	0x6f2
 8310 14ae 03020000 		.4byte	0x203
 8311 14b2 05       		.uleb128 0x5
 8312 14b3 03       		.byte	0x3
 8313 14b4 00000000 		.4byte	checkBase
 8314 14b8 23       		.uleb128 0x23
 8315 14b9 DF0B0000 		.4byte	.LASF228
 8316 14bd 01       		.byte	0x1
 8317 14be F406     		.2byte	0x6f4
 8318 14c0 03020000 		.4byte	0x203
 8319 14c4 05       		.uleb128 0x5
 8320 14c5 03       		.byte	0x3
 8321 14c6 00000000 		.4byte	testy
 8322 14ca 07       		.uleb128 0x7
 8323 14cb 03020000 		.4byte	0x203
 8324 14cf DA140000 		.4byte	0x14da
 8325 14d3 08       		.uleb128 0x8
 8326 14d4 36010000 		.4byte	0x136
 8327 14d8 49       		.byte	0x49
 8328 14d9 00       		.byte	0
 8329 14da 23       		.uleb128 0x23
 8330 14db 00000000 		.4byte	.LASF229
 8331 14df 01       		.byte	0x1
 8332 14e0 F606     		.2byte	0x6f6
 8333 14e2 EC140000 		.4byte	0x14ec
 8334 14e6 05       		.uleb128 0x5
 8335 14e7 03       		.byte	0x3
 8336 14e8 00000000 		.4byte	presetArray
 8337 14ec 06       		.uleb128 0x6
 8338 14ed CA140000 		.4byte	0x14ca
 8339 14f1 23       		.uleb128 0x23
 8340 14f2 6C080000 		.4byte	.LASF78
 8341 14f6 01       		.byte	0x1
 8342 14f7 3307     		.2byte	0x733
 8343 14f9 71020000 		.4byte	0x271
 8344 14fd 05       		.uleb128 0x5
 8345 14fe 03       		.byte	0x3
 8346 14ff 00000000 		.4byte	tempMIDI
 8347 1503 00       		.byte	0
 8348              		.section	.debug_abbrev,"",%progbits
 8349              	.Ldebug_abbrev0:
 8350 0000 01       		.uleb128 0x1
 8351 0001 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 183


 8352 0002 01       		.byte	0x1
 8353 0003 25       		.uleb128 0x25
 8354 0004 0E       		.uleb128 0xe
 8355 0005 13       		.uleb128 0x13
 8356 0006 0B       		.uleb128 0xb
 8357 0007 03       		.uleb128 0x3
 8358 0008 0E       		.uleb128 0xe
 8359 0009 1B       		.uleb128 0x1b
 8360 000a 0E       		.uleb128 0xe
 8361 000b 55       		.uleb128 0x55
 8362 000c 17       		.uleb128 0x17
 8363 000d 11       		.uleb128 0x11
 8364 000e 01       		.uleb128 0x1
 8365 000f 10       		.uleb128 0x10
 8366 0010 17       		.uleb128 0x17
 8367 0011 00       		.byte	0
 8368 0012 00       		.byte	0
 8369 0013 02       		.uleb128 0x2
 8370 0014 24       		.uleb128 0x24
 8371 0015 00       		.byte	0
 8372 0016 0B       		.uleb128 0xb
 8373 0017 0B       		.uleb128 0xb
 8374 0018 3E       		.uleb128 0x3e
 8375 0019 0B       		.uleb128 0xb
 8376 001a 03       		.uleb128 0x3
 8377 001b 0E       		.uleb128 0xe
 8378 001c 00       		.byte	0
 8379 001d 00       		.byte	0
 8380 001e 03       		.uleb128 0x3
 8381 001f 16       		.uleb128 0x16
 8382 0020 00       		.byte	0
 8383 0021 03       		.uleb128 0x3
 8384 0022 0E       		.uleb128 0xe
 8385 0023 3A       		.uleb128 0x3a
 8386 0024 0B       		.uleb128 0xb
 8387 0025 3B       		.uleb128 0x3b
 8388 0026 0B       		.uleb128 0xb
 8389 0027 49       		.uleb128 0x49
 8390 0028 13       		.uleb128 0x13
 8391 0029 00       		.byte	0
 8392 002a 00       		.byte	0
 8393 002b 04       		.uleb128 0x4
 8394 002c 24       		.uleb128 0x24
 8395 002d 00       		.byte	0
 8396 002e 0B       		.uleb128 0xb
 8397 002f 0B       		.uleb128 0xb
 8398 0030 3E       		.uleb128 0x3e
 8399 0031 0B       		.uleb128 0xb
 8400 0032 03       		.uleb128 0x3
 8401 0033 08       		.uleb128 0x8
 8402 0034 00       		.byte	0
 8403 0035 00       		.byte	0
 8404 0036 05       		.uleb128 0x5
 8405 0037 16       		.uleb128 0x16
 8406 0038 00       		.byte	0
 8407 0039 03       		.uleb128 0x3
 8408 003a 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 184


 8409 003b 3A       		.uleb128 0x3a
 8410 003c 0B       		.uleb128 0xb
 8411 003d 3B       		.uleb128 0x3b
 8412 003e 05       		.uleb128 0x5
 8413 003f 49       		.uleb128 0x49
 8414 0040 13       		.uleb128 0x13
 8415 0041 00       		.byte	0
 8416 0042 00       		.byte	0
 8417 0043 06       		.uleb128 0x6
 8418 0044 35       		.uleb128 0x35
 8419 0045 00       		.byte	0
 8420 0046 49       		.uleb128 0x49
 8421 0047 13       		.uleb128 0x13
 8422 0048 00       		.byte	0
 8423 0049 00       		.byte	0
 8424 004a 07       		.uleb128 0x7
 8425 004b 01       		.uleb128 0x1
 8426 004c 01       		.byte	0x1
 8427 004d 49       		.uleb128 0x49
 8428 004e 13       		.uleb128 0x13
 8429 004f 01       		.uleb128 0x1
 8430 0050 13       		.uleb128 0x13
 8431 0051 00       		.byte	0
 8432 0052 00       		.byte	0
 8433 0053 08       		.uleb128 0x8
 8434 0054 21       		.uleb128 0x21
 8435 0055 00       		.byte	0
 8436 0056 49       		.uleb128 0x49
 8437 0057 13       		.uleb128 0x13
 8438 0058 2F       		.uleb128 0x2f
 8439 0059 0B       		.uleb128 0xb
 8440 005a 00       		.byte	0
 8441 005b 00       		.byte	0
 8442 005c 09       		.uleb128 0x9
 8443 005d 13       		.uleb128 0x13
 8444 005e 01       		.byte	0x1
 8445 005f 0B       		.uleb128 0xb
 8446 0060 0B       		.uleb128 0xb
 8447 0061 3A       		.uleb128 0x3a
 8448 0062 0B       		.uleb128 0xb
 8449 0063 3B       		.uleb128 0x3b
 8450 0064 05       		.uleb128 0x5
 8451 0065 01       		.uleb128 0x1
 8452 0066 13       		.uleb128 0x13
 8453 0067 00       		.byte	0
 8454 0068 00       		.byte	0
 8455 0069 0A       		.uleb128 0xa
 8456 006a 0D       		.uleb128 0xd
 8457 006b 00       		.byte	0
 8458 006c 03       		.uleb128 0x3
 8459 006d 0E       		.uleb128 0xe
 8460 006e 3A       		.uleb128 0x3a
 8461 006f 0B       		.uleb128 0xb
 8462 0070 3B       		.uleb128 0x3b
 8463 0071 05       		.uleb128 0x5
 8464 0072 49       		.uleb128 0x49
 8465 0073 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 185


 8466 0074 38       		.uleb128 0x38
 8467 0075 0B       		.uleb128 0xb
 8468 0076 00       		.byte	0
 8469 0077 00       		.byte	0
 8470 0078 0B       		.uleb128 0xb
 8471 0079 04       		.uleb128 0x4
 8472 007a 01       		.byte	0x1
 8473 007b 0B       		.uleb128 0xb
 8474 007c 0B       		.uleb128 0xb
 8475 007d 49       		.uleb128 0x49
 8476 007e 13       		.uleb128 0x13
 8477 007f 3A       		.uleb128 0x3a
 8478 0080 0B       		.uleb128 0xb
 8479 0081 3B       		.uleb128 0x3b
 8480 0082 05       		.uleb128 0x5
 8481 0083 01       		.uleb128 0x1
 8482 0084 13       		.uleb128 0x13
 8483 0085 00       		.byte	0
 8484 0086 00       		.byte	0
 8485 0087 0C       		.uleb128 0xc
 8486 0088 28       		.uleb128 0x28
 8487 0089 00       		.byte	0
 8488 008a 03       		.uleb128 0x3
 8489 008b 0E       		.uleb128 0xe
 8490 008c 1C       		.uleb128 0x1c
 8491 008d 0B       		.uleb128 0xb
 8492 008e 00       		.byte	0
 8493 008f 00       		.byte	0
 8494 0090 0D       		.uleb128 0xd
 8495 0091 04       		.uleb128 0x4
 8496 0092 01       		.byte	0x1
 8497 0093 03       		.uleb128 0x3
 8498 0094 0E       		.uleb128 0xe
 8499 0095 0B       		.uleb128 0xb
 8500 0096 0B       		.uleb128 0xb
 8501 0097 49       		.uleb128 0x49
 8502 0098 13       		.uleb128 0x13
 8503 0099 3A       		.uleb128 0x3a
 8504 009a 0B       		.uleb128 0xb
 8505 009b 3B       		.uleb128 0x3b
 8506 009c 0B       		.uleb128 0xb
 8507 009d 01       		.uleb128 0x1
 8508 009e 13       		.uleb128 0x13
 8509 009f 00       		.byte	0
 8510 00a0 00       		.byte	0
 8511 00a1 0E       		.uleb128 0xe
 8512 00a2 17       		.uleb128 0x17
 8513 00a3 01       		.byte	0x1
 8514 00a4 03       		.uleb128 0x3
 8515 00a5 0E       		.uleb128 0xe
 8516 00a6 0B       		.uleb128 0xb
 8517 00a7 0B       		.uleb128 0xb
 8518 00a8 3A       		.uleb128 0x3a
 8519 00a9 0B       		.uleb128 0xb
 8520 00aa 3B       		.uleb128 0x3b
 8521 00ab 0B       		.uleb128 0xb
 8522 00ac 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 186


 8523 00ad 13       		.uleb128 0x13
 8524 00ae 00       		.byte	0
 8525 00af 00       		.byte	0
 8526 00b0 0F       		.uleb128 0xf
 8527 00b1 0D       		.uleb128 0xd
 8528 00b2 00       		.byte	0
 8529 00b3 03       		.uleb128 0x3
 8530 00b4 08       		.uleb128 0x8
 8531 00b5 3A       		.uleb128 0x3a
 8532 00b6 0B       		.uleb128 0xb
 8533 00b7 3B       		.uleb128 0x3b
 8534 00b8 0B       		.uleb128 0xb
 8535 00b9 49       		.uleb128 0x49
 8536 00ba 13       		.uleb128 0x13
 8537 00bb 00       		.byte	0
 8538 00bc 00       		.byte	0
 8539 00bd 10       		.uleb128 0x10
 8540 00be 2E       		.uleb128 0x2e
 8541 00bf 00       		.byte	0
 8542 00c0 3F       		.uleb128 0x3f
 8543 00c1 19       		.uleb128 0x19
 8544 00c2 03       		.uleb128 0x3
 8545 00c3 0E       		.uleb128 0xe
 8546 00c4 3A       		.uleb128 0x3a
 8547 00c5 0B       		.uleb128 0xb
 8548 00c6 3B       		.uleb128 0x3b
 8549 00c7 0B       		.uleb128 0xb
 8550 00c8 27       		.uleb128 0x27
 8551 00c9 19       		.uleb128 0x19
 8552 00ca 11       		.uleb128 0x11
 8553 00cb 01       		.uleb128 0x1
 8554 00cc 12       		.uleb128 0x12
 8555 00cd 06       		.uleb128 0x6
 8556 00ce 40       		.uleb128 0x40
 8557 00cf 18       		.uleb128 0x18
 8558 00d0 9642     		.uleb128 0x2116
 8559 00d2 19       		.uleb128 0x19
 8560 00d3 00       		.byte	0
 8561 00d4 00       		.byte	0
 8562 00d5 11       		.uleb128 0x11
 8563 00d6 2E       		.uleb128 0x2e
 8564 00d7 01       		.byte	0x1
 8565 00d8 3F       		.uleb128 0x3f
 8566 00d9 19       		.uleb128 0x19
 8567 00da 03       		.uleb128 0x3
 8568 00db 0E       		.uleb128 0xe
 8569 00dc 3A       		.uleb128 0x3a
 8570 00dd 0B       		.uleb128 0xb
 8571 00de 3B       		.uleb128 0x3b
 8572 00df 0B       		.uleb128 0xb
 8573 00e0 27       		.uleb128 0x27
 8574 00e1 19       		.uleb128 0x19
 8575 00e2 11       		.uleb128 0x11
 8576 00e3 01       		.uleb128 0x1
 8577 00e4 12       		.uleb128 0x12
 8578 00e5 06       		.uleb128 0x6
 8579 00e6 40       		.uleb128 0x40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 187


 8580 00e7 18       		.uleb128 0x18
 8581 00e8 9642     		.uleb128 0x2116
 8582 00ea 19       		.uleb128 0x19
 8583 00eb 01       		.uleb128 0x1
 8584 00ec 13       		.uleb128 0x13
 8585 00ed 00       		.byte	0
 8586 00ee 00       		.byte	0
 8587 00ef 12       		.uleb128 0x12
 8588 00f0 0B       		.uleb128 0xb
 8589 00f1 01       		.byte	0x1
 8590 00f2 11       		.uleb128 0x11
 8591 00f3 01       		.uleb128 0x1
 8592 00f4 12       		.uleb128 0x12
 8593 00f5 06       		.uleb128 0x6
 8594 00f6 00       		.byte	0
 8595 00f7 00       		.byte	0
 8596 00f8 13       		.uleb128 0x13
 8597 00f9 34       		.uleb128 0x34
 8598 00fa 00       		.byte	0
 8599 00fb 03       		.uleb128 0x3
 8600 00fc 08       		.uleb128 0x8
 8601 00fd 3A       		.uleb128 0x3a
 8602 00fe 0B       		.uleb128 0xb
 8603 00ff 3B       		.uleb128 0x3b
 8604 0100 0B       		.uleb128 0xb
 8605 0101 49       		.uleb128 0x49
 8606 0102 13       		.uleb128 0x13
 8607 0103 02       		.uleb128 0x2
 8608 0104 18       		.uleb128 0x18
 8609 0105 00       		.byte	0
 8610 0106 00       		.byte	0
 8611 0107 14       		.uleb128 0x14
 8612 0108 2E       		.uleb128 0x2e
 8613 0109 00       		.byte	0
 8614 010a 3F       		.uleb128 0x3f
 8615 010b 19       		.uleb128 0x19
 8616 010c 03       		.uleb128 0x3
 8617 010d 0E       		.uleb128 0xe
 8618 010e 3A       		.uleb128 0x3a
 8619 010f 0B       		.uleb128 0xb
 8620 0110 3B       		.uleb128 0x3b
 8621 0111 0B       		.uleb128 0xb
 8622 0112 27       		.uleb128 0x27
 8623 0113 19       		.uleb128 0x19
 8624 0114 11       		.uleb128 0x11
 8625 0115 01       		.uleb128 0x1
 8626 0116 12       		.uleb128 0x12
 8627 0117 06       		.uleb128 0x6
 8628 0118 40       		.uleb128 0x40
 8629 0119 18       		.uleb128 0x18
 8630 011a 9742     		.uleb128 0x2117
 8631 011c 19       		.uleb128 0x19
 8632 011d 00       		.byte	0
 8633 011e 00       		.byte	0
 8634 011f 15       		.uleb128 0x15
 8635 0120 2E       		.uleb128 0x2e
 8636 0121 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 188


 8637 0122 3F       		.uleb128 0x3f
 8638 0123 19       		.uleb128 0x19
 8639 0124 03       		.uleb128 0x3
 8640 0125 0E       		.uleb128 0xe
 8641 0126 3A       		.uleb128 0x3a
 8642 0127 0B       		.uleb128 0xb
 8643 0128 3B       		.uleb128 0x3b
 8644 0129 05       		.uleb128 0x5
 8645 012a 27       		.uleb128 0x27
 8646 012b 19       		.uleb128 0x19
 8647 012c 11       		.uleb128 0x11
 8648 012d 01       		.uleb128 0x1
 8649 012e 12       		.uleb128 0x12
 8650 012f 06       		.uleb128 0x6
 8651 0130 40       		.uleb128 0x40
 8652 0131 18       		.uleb128 0x18
 8653 0132 9642     		.uleb128 0x2116
 8654 0134 19       		.uleb128 0x19
 8655 0135 00       		.byte	0
 8656 0136 00       		.byte	0
 8657 0137 16       		.uleb128 0x16
 8658 0138 2E       		.uleb128 0x2e
 8659 0139 01       		.byte	0x1
 8660 013a 3F       		.uleb128 0x3f
 8661 013b 19       		.uleb128 0x19
 8662 013c 03       		.uleb128 0x3
 8663 013d 0E       		.uleb128 0xe
 8664 013e 3A       		.uleb128 0x3a
 8665 013f 0B       		.uleb128 0xb
 8666 0140 3B       		.uleb128 0x3b
 8667 0141 05       		.uleb128 0x5
 8668 0142 27       		.uleb128 0x27
 8669 0143 19       		.uleb128 0x19
 8670 0144 49       		.uleb128 0x49
 8671 0145 13       		.uleb128 0x13
 8672 0146 11       		.uleb128 0x11
 8673 0147 01       		.uleb128 0x1
 8674 0148 12       		.uleb128 0x12
 8675 0149 06       		.uleb128 0x6
 8676 014a 40       		.uleb128 0x40
 8677 014b 18       		.uleb128 0x18
 8678 014c 9642     		.uleb128 0x2116
 8679 014e 19       		.uleb128 0x19
 8680 014f 01       		.uleb128 0x1
 8681 0150 13       		.uleb128 0x13
 8682 0151 00       		.byte	0
 8683 0152 00       		.byte	0
 8684 0153 17       		.uleb128 0x17
 8685 0154 05       		.uleb128 0x5
 8686 0155 00       		.byte	0
 8687 0156 03       		.uleb128 0x3
 8688 0157 08       		.uleb128 0x8
 8689 0158 3A       		.uleb128 0x3a
 8690 0159 0B       		.uleb128 0xb
 8691 015a 3B       		.uleb128 0x3b
 8692 015b 05       		.uleb128 0x5
 8693 015c 49       		.uleb128 0x49
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 189


 8694 015d 13       		.uleb128 0x13
 8695 015e 02       		.uleb128 0x2
 8696 015f 18       		.uleb128 0x18
 8697 0160 00       		.byte	0
 8698 0161 00       		.byte	0
 8699 0162 18       		.uleb128 0x18
 8700 0163 34       		.uleb128 0x34
 8701 0164 00       		.byte	0
 8702 0165 03       		.uleb128 0x3
 8703 0166 0E       		.uleb128 0xe
 8704 0167 3A       		.uleb128 0x3a
 8705 0168 0B       		.uleb128 0xb
 8706 0169 3B       		.uleb128 0x3b
 8707 016a 05       		.uleb128 0x5
 8708 016b 49       		.uleb128 0x49
 8709 016c 13       		.uleb128 0x13
 8710 016d 02       		.uleb128 0x2
 8711 016e 18       		.uleb128 0x18
 8712 016f 00       		.byte	0
 8713 0170 00       		.byte	0
 8714 0171 19       		.uleb128 0x19
 8715 0172 05       		.uleb128 0x5
 8716 0173 00       		.byte	0
 8717 0174 03       		.uleb128 0x3
 8718 0175 0E       		.uleb128 0xe
 8719 0176 3A       		.uleb128 0x3a
 8720 0177 0B       		.uleb128 0xb
 8721 0178 3B       		.uleb128 0x3b
 8722 0179 05       		.uleb128 0x5
 8723 017a 49       		.uleb128 0x49
 8724 017b 13       		.uleb128 0x13
 8725 017c 02       		.uleb128 0x2
 8726 017d 18       		.uleb128 0x18
 8727 017e 00       		.byte	0
 8728 017f 00       		.byte	0
 8729 0180 1A       		.uleb128 0x1a
 8730 0181 34       		.uleb128 0x34
 8731 0182 00       		.byte	0
 8732 0183 03       		.uleb128 0x3
 8733 0184 08       		.uleb128 0x8
 8734 0185 3A       		.uleb128 0x3a
 8735 0186 0B       		.uleb128 0xb
 8736 0187 3B       		.uleb128 0x3b
 8737 0188 05       		.uleb128 0x5
 8738 0189 49       		.uleb128 0x49
 8739 018a 13       		.uleb128 0x13
 8740 018b 02       		.uleb128 0x2
 8741 018c 18       		.uleb128 0x18
 8742 018d 00       		.byte	0
 8743 018e 00       		.byte	0
 8744 018f 1B       		.uleb128 0x1b
 8745 0190 2E       		.uleb128 0x2e
 8746 0191 01       		.byte	0x1
 8747 0192 3F       		.uleb128 0x3f
 8748 0193 19       		.uleb128 0x19
 8749 0194 03       		.uleb128 0x3
 8750 0195 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 190


 8751 0196 3A       		.uleb128 0x3a
 8752 0197 0B       		.uleb128 0xb
 8753 0198 3B       		.uleb128 0x3b
 8754 0199 05       		.uleb128 0x5
 8755 019a 27       		.uleb128 0x27
 8756 019b 19       		.uleb128 0x19
 8757 019c 49       		.uleb128 0x49
 8758 019d 13       		.uleb128 0x13
 8759 019e 11       		.uleb128 0x11
 8760 019f 01       		.uleb128 0x1
 8761 01a0 12       		.uleb128 0x12
 8762 01a1 06       		.uleb128 0x6
 8763 01a2 40       		.uleb128 0x40
 8764 01a3 18       		.uleb128 0x18
 8765 01a4 9642     		.uleb128 0x2116
 8766 01a6 19       		.uleb128 0x19
 8767 01a7 01       		.uleb128 0x1
 8768 01a8 13       		.uleb128 0x13
 8769 01a9 00       		.byte	0
 8770 01aa 00       		.byte	0
 8771 01ab 1C       		.uleb128 0x1c
 8772 01ac 0B       		.uleb128 0xb
 8773 01ad 01       		.byte	0x1
 8774 01ae 11       		.uleb128 0x11
 8775 01af 01       		.uleb128 0x1
 8776 01b0 12       		.uleb128 0x12
 8777 01b1 06       		.uleb128 0x6
 8778 01b2 01       		.uleb128 0x1
 8779 01b3 13       		.uleb128 0x13
 8780 01b4 00       		.byte	0
 8781 01b5 00       		.byte	0
 8782 01b6 1D       		.uleb128 0x1d
 8783 01b7 2E       		.uleb128 0x2e
 8784 01b8 00       		.byte	0
 8785 01b9 3F       		.uleb128 0x3f
 8786 01ba 19       		.uleb128 0x19
 8787 01bb 03       		.uleb128 0x3
 8788 01bc 0E       		.uleb128 0xe
 8789 01bd 3A       		.uleb128 0x3a
 8790 01be 0B       		.uleb128 0xb
 8791 01bf 3B       		.uleb128 0x3b
 8792 01c0 05       		.uleb128 0x5
 8793 01c1 27       		.uleb128 0x27
 8794 01c2 19       		.uleb128 0x19
 8795 01c3 11       		.uleb128 0x11
 8796 01c4 01       		.uleb128 0x1
 8797 01c5 12       		.uleb128 0x12
 8798 01c6 06       		.uleb128 0x6
 8799 01c7 40       		.uleb128 0x40
 8800 01c8 18       		.uleb128 0x18
 8801 01c9 9742     		.uleb128 0x2117
 8802 01cb 19       		.uleb128 0x19
 8803 01cc 00       		.byte	0
 8804 01cd 00       		.byte	0
 8805 01ce 1E       		.uleb128 0x1e
 8806 01cf 2E       		.uleb128 0x2e
 8807 01d0 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 191


 8808 01d1 3F       		.uleb128 0x3f
 8809 01d2 19       		.uleb128 0x19
 8810 01d3 03       		.uleb128 0x3
 8811 01d4 0E       		.uleb128 0xe
 8812 01d5 3A       		.uleb128 0x3a
 8813 01d6 0B       		.uleb128 0xb
 8814 01d7 3B       		.uleb128 0x3b
 8815 01d8 05       		.uleb128 0x5
 8816 01d9 27       		.uleb128 0x27
 8817 01da 19       		.uleb128 0x19
 8818 01db 11       		.uleb128 0x11
 8819 01dc 01       		.uleb128 0x1
 8820 01dd 12       		.uleb128 0x12
 8821 01de 06       		.uleb128 0x6
 8822 01df 40       		.uleb128 0x40
 8823 01e0 18       		.uleb128 0x18
 8824 01e1 9642     		.uleb128 0x2116
 8825 01e3 19       		.uleb128 0x19
 8826 01e4 01       		.uleb128 0x1
 8827 01e5 13       		.uleb128 0x13
 8828 01e6 00       		.byte	0
 8829 01e7 00       		.byte	0
 8830 01e8 1F       		.uleb128 0x1f
 8831 01e9 0F       		.uleb128 0xf
 8832 01ea 00       		.byte	0
 8833 01eb 0B       		.uleb128 0xb
 8834 01ec 0B       		.uleb128 0xb
 8835 01ed 49       		.uleb128 0x49
 8836 01ee 13       		.uleb128 0x13
 8837 01ef 00       		.byte	0
 8838 01f0 00       		.byte	0
 8839 01f1 20       		.uleb128 0x20
 8840 01f2 34       		.uleb128 0x34
 8841 01f3 00       		.byte	0
 8842 01f4 03       		.uleb128 0x3
 8843 01f5 0E       		.uleb128 0xe
 8844 01f6 3A       		.uleb128 0x3a
 8845 01f7 0B       		.uleb128 0xb
 8846 01f8 3B       		.uleb128 0x3b
 8847 01f9 0B       		.uleb128 0xb
 8848 01fa 49       		.uleb128 0x49
 8849 01fb 13       		.uleb128 0x13
 8850 01fc 3F       		.uleb128 0x3f
 8851 01fd 19       		.uleb128 0x19
 8852 01fe 3C       		.uleb128 0x3c
 8853 01ff 19       		.uleb128 0x19
 8854 0200 00       		.byte	0
 8855 0201 00       		.byte	0
 8856 0202 21       		.uleb128 0x21
 8857 0203 21       		.uleb128 0x21
 8858 0204 00       		.byte	0
 8859 0205 49       		.uleb128 0x49
 8860 0206 13       		.uleb128 0x13
 8861 0207 2F       		.uleb128 0x2f
 8862 0208 05       		.uleb128 0x5
 8863 0209 00       		.byte	0
 8864 020a 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 192


 8865 020b 22       		.uleb128 0x22
 8866 020c 26       		.uleb128 0x26
 8867 020d 00       		.byte	0
 8868 020e 49       		.uleb128 0x49
 8869 020f 13       		.uleb128 0x13
 8870 0210 00       		.byte	0
 8871 0211 00       		.byte	0
 8872 0212 23       		.uleb128 0x23
 8873 0213 34       		.uleb128 0x34
 8874 0214 00       		.byte	0
 8875 0215 03       		.uleb128 0x3
 8876 0216 0E       		.uleb128 0xe
 8877 0217 3A       		.uleb128 0x3a
 8878 0218 0B       		.uleb128 0xb
 8879 0219 3B       		.uleb128 0x3b
 8880 021a 05       		.uleb128 0x5
 8881 021b 49       		.uleb128 0x49
 8882 021c 13       		.uleb128 0x13
 8883 021d 3F       		.uleb128 0x3f
 8884 021e 19       		.uleb128 0x19
 8885 021f 02       		.uleb128 0x2
 8886 0220 18       		.uleb128 0x18
 8887 0221 00       		.byte	0
 8888 0222 00       		.byte	0
 8889 0223 24       		.uleb128 0x24
 8890 0224 34       		.uleb128 0x34
 8891 0225 00       		.byte	0
 8892 0226 03       		.uleb128 0x3
 8893 0227 0E       		.uleb128 0xe
 8894 0228 3A       		.uleb128 0x3a
 8895 0229 0B       		.uleb128 0xb
 8896 022a 3B       		.uleb128 0x3b
 8897 022b 05       		.uleb128 0x5
 8898 022c 49       		.uleb128 0x49
 8899 022d 13       		.uleb128 0x13
 8900 022e 3F       		.uleb128 0x3f
 8901 022f 19       		.uleb128 0x19
 8902 0230 3C       		.uleb128 0x3c
 8903 0231 19       		.uleb128 0x19
 8904 0232 00       		.byte	0
 8905 0233 00       		.byte	0
 8906 0234 25       		.uleb128 0x25
 8907 0235 34       		.uleb128 0x34
 8908 0236 00       		.byte	0
 8909 0237 03       		.uleb128 0x3
 8910 0238 0E       		.uleb128 0xe
 8911 0239 3A       		.uleb128 0x3a
 8912 023a 0B       		.uleb128 0xb
 8913 023b 3B       		.uleb128 0x3b
 8914 023c 0B       		.uleb128 0xb
 8915 023d 49       		.uleb128 0x49
 8916 023e 13       		.uleb128 0x13
 8917 023f 3F       		.uleb128 0x3f
 8918 0240 19       		.uleb128 0x19
 8919 0241 02       		.uleb128 0x2
 8920 0242 18       		.uleb128 0x18
 8921 0243 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 193


 8922 0244 00       		.byte	0
 8923 0245 26       		.uleb128 0x26
 8924 0246 34       		.uleb128 0x34
 8925 0247 00       		.byte	0
 8926 0248 03       		.uleb128 0x3
 8927 0249 08       		.uleb128 0x8
 8928 024a 3A       		.uleb128 0x3a
 8929 024b 0B       		.uleb128 0xb
 8930 024c 3B       		.uleb128 0x3b
 8931 024d 0B       		.uleb128 0xb
 8932 024e 49       		.uleb128 0x49
 8933 024f 13       		.uleb128 0x13
 8934 0250 3F       		.uleb128 0x3f
 8935 0251 19       		.uleb128 0x19
 8936 0252 02       		.uleb128 0x2
 8937 0253 18       		.uleb128 0x18
 8938 0254 00       		.byte	0
 8939 0255 00       		.byte	0
 8940 0256 27       		.uleb128 0x27
 8941 0257 34       		.uleb128 0x34
 8942 0258 00       		.byte	0
 8943 0259 03       		.uleb128 0x3
 8944 025a 08       		.uleb128 0x8
 8945 025b 3A       		.uleb128 0x3a
 8946 025c 0B       		.uleb128 0xb
 8947 025d 3B       		.uleb128 0x3b
 8948 025e 05       		.uleb128 0x5
 8949 025f 49       		.uleb128 0x49
 8950 0260 13       		.uleb128 0x13
 8951 0261 3F       		.uleb128 0x3f
 8952 0262 19       		.uleb128 0x19
 8953 0263 02       		.uleb128 0x2
 8954 0264 18       		.uleb128 0x18
 8955 0265 00       		.byte	0
 8956 0266 00       		.byte	0
 8957 0267 00       		.byte	0
 8958              		.section	.debug_aranges,"",%progbits
 8959 0000 FC000000 		.4byte	0xfc
 8960 0004 0200     		.2byte	0x2
 8961 0006 00000000 		.4byte	.Ldebug_info0
 8962 000a 04       		.byte	0x4
 8963 000b 00       		.byte	0
 8964 000c 0000     		.2byte	0
 8965 000e 0000     		.2byte	0
 8966 0010 00000000 		.4byte	.LFB64
 8967 0014 A0000000 		.4byte	.LFE64-.LFB64
 8968 0018 00000000 		.4byte	.LFB65
 8969 001c 20010000 		.4byte	.LFE65-.LFB65
 8970 0020 00000000 		.4byte	.LFB66
 8971 0024 A4000000 		.4byte	.LFE66-.LFB66
 8972 0028 00000000 		.4byte	.LFB67
 8973 002c 18000000 		.4byte	.LFE67-.LFB67
 8974 0030 00000000 		.4byte	.LFB68
 8975 0034 40000000 		.4byte	.LFE68-.LFB68
 8976 0038 00000000 		.4byte	.LFB69
 8977 003c 14000000 		.4byte	.LFE69-.LFB69
 8978 0040 00000000 		.4byte	.LFB70
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 194


 8979 0044 74000000 		.4byte	.LFE70-.LFB70
 8980 0048 00000000 		.4byte	.LFB71
 8981 004c 58000000 		.4byte	.LFE71-.LFB71
 8982 0050 00000000 		.4byte	.LFB72
 8983 0054 68000000 		.4byte	.LFE72-.LFB72
 8984 0058 00000000 		.4byte	.LFB73
 8985 005c 4C000000 		.4byte	.LFE73-.LFB73
 8986 0060 00000000 		.4byte	.LFB74
 8987 0064 46000000 		.4byte	.LFE74-.LFB74
 8988 0068 00000000 		.4byte	.LFB75
 8989 006c 56000000 		.4byte	.LFE75-.LFB75
 8990 0070 00000000 		.4byte	.LFB76
 8991 0074 98130000 		.4byte	.LFE76-.LFB76
 8992 0078 00000000 		.4byte	.LFB77
 8993 007c 08010000 		.4byte	.LFE77-.LFB77
 8994 0080 00000000 		.4byte	.LFB78
 8995 0084 A0000000 		.4byte	.LFE78-.LFB78
 8996 0088 00000000 		.4byte	.LFB79
 8997 008c B4000000 		.4byte	.LFE79-.LFB79
 8998 0090 00000000 		.4byte	.LFB80
 8999 0094 0C000000 		.4byte	.LFE80-.LFB80
 9000 0098 00000000 		.4byte	.LFB81
 9001 009c 54000000 		.4byte	.LFE81-.LFB81
 9002 00a0 00000000 		.4byte	.LFB82
 9003 00a4 74000000 		.4byte	.LFE82-.LFB82
 9004 00a8 00000000 		.4byte	.LFB83
 9005 00ac 98000000 		.4byte	.LFE83-.LFB83
 9006 00b0 00000000 		.4byte	.LFB84
 9007 00b4 0C010000 		.4byte	.LFE84-.LFB84
 9008 00b8 00000000 		.4byte	.LFB85
 9009 00bc 1C000000 		.4byte	.LFE85-.LFB85
 9010 00c0 00000000 		.4byte	.LFB86
 9011 00c4 68000000 		.4byte	.LFE86-.LFB86
 9012 00c8 00000000 		.4byte	.LFB87
 9013 00cc 68000000 		.4byte	.LFE87-.LFB87
 9014 00d0 00000000 		.4byte	.LFB88
 9015 00d4 68000000 		.4byte	.LFE88-.LFB88
 9016 00d8 00000000 		.4byte	.LFB89
 9017 00dc 6C000000 		.4byte	.LFE89-.LFB89
 9018 00e0 00000000 		.4byte	.LFB90
 9019 00e4 64000000 		.4byte	.LFE90-.LFB90
 9020 00e8 00000000 		.4byte	.LFB91
 9021 00ec 5C020000 		.4byte	.LFE91-.LFB91
 9022 00f0 00000000 		.4byte	.LFB92
 9023 00f4 FC000000 		.4byte	.LFE92-.LFB92
 9024 00f8 00000000 		.4byte	0
 9025 00fc 00000000 		.4byte	0
 9026              		.section	.debug_ranges,"",%progbits
 9027              	.Ldebug_ranges0:
 9028 0000 00000000 		.4byte	.LFB64
 9029 0004 A0000000 		.4byte	.LFE64
 9030 0008 00000000 		.4byte	.LFB65
 9031 000c 20010000 		.4byte	.LFE65
 9032 0010 00000000 		.4byte	.LFB66
 9033 0014 A4000000 		.4byte	.LFE66
 9034 0018 00000000 		.4byte	.LFB67
 9035 001c 18000000 		.4byte	.LFE67
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 195


 9036 0020 00000000 		.4byte	.LFB68
 9037 0024 40000000 		.4byte	.LFE68
 9038 0028 00000000 		.4byte	.LFB69
 9039 002c 14000000 		.4byte	.LFE69
 9040 0030 00000000 		.4byte	.LFB70
 9041 0034 74000000 		.4byte	.LFE70
 9042 0038 00000000 		.4byte	.LFB71
 9043 003c 58000000 		.4byte	.LFE71
 9044 0040 00000000 		.4byte	.LFB72
 9045 0044 68000000 		.4byte	.LFE72
 9046 0048 00000000 		.4byte	.LFB73
 9047 004c 4C000000 		.4byte	.LFE73
 9048 0050 00000000 		.4byte	.LFB74
 9049 0054 46000000 		.4byte	.LFE74
 9050 0058 00000000 		.4byte	.LFB75
 9051 005c 56000000 		.4byte	.LFE75
 9052 0060 00000000 		.4byte	.LFB76
 9053 0064 98130000 		.4byte	.LFE76
 9054 0068 00000000 		.4byte	.LFB77
 9055 006c 08010000 		.4byte	.LFE77
 9056 0070 00000000 		.4byte	.LFB78
 9057 0074 A0000000 		.4byte	.LFE78
 9058 0078 00000000 		.4byte	.LFB79
 9059 007c B4000000 		.4byte	.LFE79
 9060 0080 00000000 		.4byte	.LFB80
 9061 0084 0C000000 		.4byte	.LFE80
 9062 0088 00000000 		.4byte	.LFB81
 9063 008c 54000000 		.4byte	.LFE81
 9064 0090 00000000 		.4byte	.LFB82
 9065 0094 74000000 		.4byte	.LFE82
 9066 0098 00000000 		.4byte	.LFB83
 9067 009c 98000000 		.4byte	.LFE83
 9068 00a0 00000000 		.4byte	.LFB84
 9069 00a4 0C010000 		.4byte	.LFE84
 9070 00a8 00000000 		.4byte	.LFB85
 9071 00ac 1C000000 		.4byte	.LFE85
 9072 00b0 00000000 		.4byte	.LFB86
 9073 00b4 68000000 		.4byte	.LFE86
 9074 00b8 00000000 		.4byte	.LFB87
 9075 00bc 68000000 		.4byte	.LFE87
 9076 00c0 00000000 		.4byte	.LFB88
 9077 00c4 68000000 		.4byte	.LFE88
 9078 00c8 00000000 		.4byte	.LFB89
 9079 00cc 6C000000 		.4byte	.LFE89
 9080 00d0 00000000 		.4byte	.LFB90
 9081 00d4 64000000 		.4byte	.LFE90
 9082 00d8 00000000 		.4byte	.LFB91
 9083 00dc 5C020000 		.4byte	.LFE91
 9084 00e0 00000000 		.4byte	.LFB92
 9085 00e4 FC000000 		.4byte	.LFE92
 9086 00e8 00000000 		.4byte	0
 9087 00ec 00000000 		.4byte	0
 9088              		.section	.debug_line,"",%progbits
 9089              	.Ldebug_line0:
 9090 0000 51080000 		.section	.debug_str,"MS",%progbits,1
 9090      02008201 
 9090      00000201 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 196


 9090      FB0E0D00 
 9090      01010101 
 9091              	.LASF229:
 9092 0000 70726573 		.ascii	"presetArray\000"
 9092      65744172 
 9092      72617900 
 9093              	.LASF28:
 9094 000c 73697A65 		.ascii	"sizetype\000"
 9094      74797065 
 9094      00
 9095              	.LASF188:
 9096 0015 70726576 		.ascii	"prev_processed_volumePedal\000"
 9096      5F70726F 
 9096      63657373 
 9096      65645F76 
 9096      6F6C756D 
 9097              	.LASF76:
 9098 0030 74656D70 		.ascii	"tempangle\000"
 9098      616E676C 
 9098      6500
 9099              	.LASF161:
 9100 003a 6E657744 		.ascii	"newDataFlag2\000"
 9100      61746146 
 9100      6C616732 
 9100      00
 9101              	.LASF38:
 9102 0047 43595F45 		.ascii	"CY_EM_EEPROM_SUCCESS\000"
 9102      4D5F4545 
 9102      50524F4D 
 9102      5F535543 
 9102      43455353 
 9103              	.LASF17:
 9104 005c 696E7433 		.ascii	"int32_t\000"
 9104      325F7400 
 9105              	.LASF121:
 9106 0064 456D5F45 		.ascii	"Em_EEPROM_context\000"
 9106      4550524F 
 9106      4D5F636F 
 9106      6E746578 
 9106      7400
 9107              	.LASF47:
 9108 0076 54686972 		.ascii	"ThirdLine\000"
 9108      644C696E 
 9108      6500
 9109              	.LASF96:
 9110 0080 6E6F7465 		.ascii	"noteEvent\000"
 9110      4576656E 
 9110      7400
 9111              	.LASF170:
 9112 008a 53504932 		.ascii	"SPI2errorflag\000"
 9112      6572726F 
 9112      72666C61 
 9112      6700
 9113              	.LASF21:
 9114 0098 75696E74 		.ascii	"uint32\000"
 9114      333200
 9115              	.LASF110:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 197


 9116 009f 43437661 		.ascii	"CCval\000"
 9116      6C00
 9117              	.LASF124:
 9118 00a5 49324362 		.ascii	"I2Cbuff1\000"
 9118      75666631 
 9118      00
 9119              	.LASF179:
 9120 00ae 49324362 		.ascii	"I2Cbuff2\000"
 9120      75666632 
 9120      00
 9121              	.LASF181:
 9122 00b7 6D75785F 		.ascii	"mux_states\000"
 9122      73746174 
 9122      657300
 9123              	.LASF137:
 9124 00c2 6F637461 		.ascii	"octave\000"
 9124      766500
 9125              	.LASF49:
 9126 00c9 4E696C4C 		.ascii	"NilLine\000"
 9126      696E6500 
 9127              	.LASF43:
 9128 00d1 63795F65 		.ascii	"cy_en_em_eeprom_status_t\000"
 9128      6E5F656D 
 9128      5F656570 
 9128      726F6D5F 
 9128      73746174 
 9129              	.LASF183:
 9130 00ea 70656461 		.ascii	"pedals_high\000"
 9130      6C735F68 
 9130      69676800 
 9131              	.LASF87:
 9132 00f6 6E627974 		.ascii	"nbytes\000"
 9132      657300
 9133              	.LASF83:
 9134 00fd 74656D70 		.ascii	"tempBreak\000"
 9134      42726561 
 9134      6B00
 9135              	.LASF135:
 9136 0107 74656D70 		.ascii	"temper\000"
 9136      657200
 9137              	.LASF109:
 9138 010e 43436E75 		.ascii	"CCnum\000"
 9138      6D00
 9139              	.LASF40:
 9140 0114 43595F45 		.ascii	"CY_EM_EEPROM_BAD_CHECKSUM\000"
 9140      4D5F4545 
 9140      50524F4D 
 9140      5F424144 
 9140      5F434845 
 9141              	.LASF36:
 9142 012e 75736572 		.ascii	"userFlashStartAddr\000"
 9142      466C6173 
 9142      68537461 
 9142      72744164 
 9142      647200
 9143              	.LASF30:
 9144 0141 6E756D62 		.ascii	"numberOfRows\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 198


 9144      65724F66 
 9144      526F7773 
 9144      00
 9145              	.LASF65:
 9146 014e 69737461 		.ascii	"istart\000"
 9146      727400
 9147              	.LASF71:
 9148 0155 70656461 		.ascii	"pedalDiff\000"
 9148      6C446966 
 9148      6600
 9149              	.LASF114:
 9150 015f 74686556 		.ascii	"theVal\000"
 9150      616C00
 9151              	.LASF34:
 9152 0166 72656475 		.ascii	"redundantCopy\000"
 9152      6E64616E 
 9152      74436F70 
 9152      7900
 9153              	.LASF2:
 9154 0174 5F5F7569 		.ascii	"__uint8_t\000"
 9154      6E74385F 
 9154      7400
 9155              	.LASF62:
 9156 017e 616C7068 		.ascii	"alpha\000"
 9156      6100
 9157              	.LASF178:
 9158 0184 62617243 		.ascii	"barCount\000"
 9158      6F756E74 
 9158      00
 9159              	.LASF198:
 9160 018d 766F6963 		.ascii	"voice\000"
 9160      6500
 9161              	.LASF150:
 9162 0193 73747269 		.ascii	"strings\000"
 9162      6E677300 
 9163              	.LASF8:
 9164 019b 6C6F6E67 		.ascii	"long int\000"
 9164      20696E74 
 9164      00
 9165              	.LASF115:
 9166 01a4 63757272 		.ascii	"currentFloat\000"
 9166      656E7446 
 9166      6C6F6174 
 9166      00
 9167              	.LASF69:
 9168 01b1 6D61696E 		.ascii	"main\000"
 9168      00
 9169              	.LASF208:
 9170 01b6 70726576 		.ascii	"prevStringPitchBend\000"
 9170      53747269 
 9170      6E675069 
 9170      74636842 
 9170      656E6400 
 9171              	.LASF103:
 9172 01ca 4D494449 		.ascii	"MIDInoteNum\000"
 9172      6E6F7465 
 9172      4E756D00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 199


 9173              	.LASF112:
 9174 01d6 73656E64 		.ascii	"sendMIDIAllNotesOff\000"
 9174      4D494449 
 9174      416C6C4E 
 9174      6F746573 
 9174      4F666600 
 9175              	.LASF53:
 9176 01ea 536C6565 		.ascii	"SleepIsr_function\000"
 9176      70497372 
 9176      5F66756E 
 9176      6374696F 
 9176      6E00
 9177              	.LASF46:
 9178 01fc 5365636F 		.ascii	"SecondLine\000"
 9178      6E644C69 
 9178      6E6500
 9179              	.LASF191:
 9180 0207 66726574 		.ascii	"fretScaling\000"
 9180      5363616C 
 9180      696E6700 
 9181              	.LASF59:
 9182 0213 6D746F66 		.ascii	"mtof\000"
 9182      00
 9183              	.LASF172:
 9184 0218 6B6E6F62 		.ascii	"knobs\000"
 9184      7300
 9185              	.LASF223:
 9186 021e 73797365 		.ascii	"sysexPointer\000"
 9186      78506F69 
 9186      6E746572 
 9186      00
 9187              	.LASF63:
 9188 022b 6F6D416C 		.ascii	"omAlpha\000"
 9188      70686100 
 9189              	.LASF73:
 9190 0233 73747269 		.ascii	"stringStartLoc\000"
 9190      6E675374 
 9190      6172744C 
 9190      6F6300
 9191              	.LASF0:
 9192 0242 7369676E 		.ascii	"signed char\000"
 9192      65642063 
 9192      68617200 
 9193              	.LASF14:
 9194 024e 75696E74 		.ascii	"uint8_t\000"
 9194      385F7400 
 9195              	.LASF29:
 9196 0256 776C456E 		.ascii	"wlEndAddr\000"
 9196      64416464 
 9196      7200
 9197              	.LASF117:
 9198 0260 5553425F 		.ascii	"USB_callbackLocalMidiEvent\000"
 9198      63616C6C 
 9198      6261636B 
 9198      4C6F6361 
 9198      6C4D6964 
 9199              	.LASF50:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 200


 9200 027b 73706973 		.ascii	"spis_1_ss\000"
 9200      5F315F73 
 9200      7300
 9201              	.LASF41:
 9202 0285 43595F45 		.ascii	"CY_EM_EEPROM_BAD_DATA\000"
 9202      4D5F4545 
 9202      50524F4D 
 9202      5F424144 
 9202      5F444154 
 9203              	.LASF233:
 9204 029b 5F4F4C45 		.ascii	"_OLEDLine\000"
 9204      444C696E 
 9204      6500
 9205              	.LASF192:
 9206 02a5 70656461 		.ascii	"pedalRatios\000"
 9206      6C526174 
 9206      696F7300 
 9207              	.LASF1:
 9208 02b1 756E7369 		.ascii	"unsigned char\000"
 9208      676E6564 
 9208      20636861 
 9208      7200
 9209              	.LASF144:
 9210 02bf 72783143 		.ascii	"rx1Channel\000"
 9210      68616E6E 
 9210      656C00
 9211              	.LASF72:
 9212 02ca 70656461 		.ascii	"pedalStartLoc\000"
 9212      6C537461 
 9212      72744C6F 
 9212      6300
 9213              	.LASF156:
 9214 02d8 6E657744 		.ascii	"newDataFlag\000"
 9214      61746146 
 9214      6C616700 
 9215              	.LASF214:
 9216 02e4 73747269 		.ascii	"stringOctave\000"
 9216      6E674F63 
 9216      74617665 
 9216      00
 9217              	.LASF93:
 9218 02f1 5553425F 		.ascii	"USB_service\000"
 9218      73657276 
 9218      69636500 
 9219              	.LASF57:
 9220 02fd 74656D70 		.ascii	"tempmax\000"
 9220      6D617800 
 9221              	.LASF64:
 9222 0305 76616C75 		.ascii	"value\000"
 9222      6500
 9223              	.LASF200:
 9224 030b 656E636F 		.ascii	"encoderVal\000"
 9224      64657256 
 9224      616C00
 9225              	.LASF107:
 9226 0316 70726573 		.ascii	"pressure\000"
 9226      73757265 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 201


 9226      00
 9227              	.LASF151:
 9228 031f 70726576 		.ascii	"prevStrings\000"
 9228      53747269 
 9228      6E677300 
 9229              	.LASF24:
 9230 032b 63686172 		.ascii	"char\000"
 9230      00
 9231              	.LASF120:
 9232 0330 65657072 		.ascii	"eepromArray\000"
 9232      6F6D4172 
 9232      72617900 
 9233              	.LASF141:
 9234 033c 72617741 		.ascii	"rawAngle\000"
 9234      6E676C65 
 9234      00
 9235              	.LASF58:
 9236 0345 4C454146 		.ascii	"LEAF_clip\000"
 9236      5F636C69 
 9236      7000
 9237              	.LASF195:
 9238 034f 6E65636B 		.ascii	"neck\000"
 9238      00
 9239              	.LASF5:
 9240 0354 5F5F7569 		.ascii	"__uint16_t\000"
 9240      6E743136 
 9240      5F7400
 9241              	.LASF92:
 9242 035f 63686563 		.ascii	"checkUSB_Vbus\000"
 9242      6B555342 
 9242      5F566275 
 9242      7300
 9243              	.LASF177:
 9244 036d 65657072 		.ascii	"eeprom_cnt\000"
 9244      6F6D5F63 
 9244      6E7400
 9245              	.LASF77:
 9246 0378 74656D70 		.ascii	"tempPedal\000"
 9246      50656461 
 9246      6C00
 9247              	.LASF91:
 9248 0382 4932435F 		.ascii	"I2C_reset\000"
 9248      72657365 
 9248      7400
 9249              	.LASF201:
 9250 038c 656E636F 		.ascii	"encoderNum\000"
 9250      6465724E 
 9250      756D00
 9251              	.LASF44:
 9252 0397 75696E74 		.ascii	"uint\000"
 9252      00
 9253              	.LASF143:
 9254 039c 6D696469 		.ascii	"midiOverflow\000"
 9254      4F766572 
 9254      666C6F77 
 9254      00
 9255              	.LASF106:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 202


 9256 03a9 73656E64 		.ascii	"sendMIDIPolyKeyPressure\000"
 9256      4D494449 
 9256      506F6C79 
 9256      4B657950 
 9256      72657373 
 9257              	.LASF81:
 9258 03c1 636F6D70 		.ascii	"computerMIDIOffset\000"
 9258      75746572 
 9258      4D494449 
 9258      4F666673 
 9258      657400
 9259              	.LASF108:
 9260 03d4 73656E64 		.ascii	"sendMIDIControlChange\000"
 9260      4D494449 
 9260      436F6E74 
 9260      726F6C43 
 9260      68616E67 
 9261              	.LASF155:
 9262 03ea 73706943 		.ascii	"spiCounter\000"
 9262      6F756E74 
 9262      657200
 9263              	.LASF39:
 9264 03f5 43595F45 		.ascii	"CY_EM_EEPROM_BAD_PARAM\000"
 9264      4D5F4545 
 9264      50524F4D 
 9264      5F424144 
 9264      5F504152 
 9265              	.LASF225:
 9266 040c 70617273 		.ascii	"parsingSysex\000"
 9266      696E6753 
 9266      79736578 
 9266      00
 9267              	.LASF134:
 9268 0419 72657475 		.ascii	"returnedData\000"
 9268      726E6564 
 9268      44617461 
 9268      00
 9269              	.LASF48:
 9270 0426 466F7572 		.ascii	"FourthLine\000"
 9270      74684C69 
 9270      6E6500
 9271              	.LASF99:
 9272 0431 76496E74 		.ascii	"vInt\000"
 9272      00
 9273              	.LASF185:
 9274 0436 766F6C75 		.ascii	"volumePedal\000"
 9274      6D655065 
 9274      64616C00 
 9275              	.LASF148:
 9276 0442 72784275 		.ascii	"rxBufferPluck\000"
 9276      66666572 
 9276      506C7563 
 9276      6B00
 9277              	.LASF207:
 9278 0450 636F7065 		.ascii	"copedent\000"
 9278      64656E74 
 9278      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 203


 9279              	.LASF173:
 9280 0459 70726576 		.ascii	"prevKnobs\000"
 9280      4B6E6F62 
 9280      7300
 9281              	.LASF168:
 9282 0463 6D795370 		.ascii	"mySpiCounter\000"
 9282      69436F75 
 9282      6E746572 
 9282      00
 9283              	.LASF101:
 9284 0470 43434576 		.ascii	"CCEvent\000"
 9284      656E7400 
 9285              	.LASF113:
 9286 0478 70617273 		.ascii	"parseSysex\000"
 9286      65537973 
 9286      657800
 9287              	.LASF232:
 9288 0483 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 9288      73657273 
 9288      5C4A6566 
 9288      66536E79 
 9288      6465725C 
 9289 04b1 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 9289      355F656C 
 9289      65637472 
 9289      6F737465 
 9289      656C5F73 
 9290 04e3 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 9290      5F50534F 
 9290      43335F35 
 9290      5F546865 
 9290      726D6973 
 9291              	.LASF212:
 9292 0501 696E7653 		.ascii	"invStringMappedPositions\000"
 9292      7472696E 
 9292      674D6170 
 9292      70656450 
 9292      6F736974 
 9293              	.LASF166:
 9294 051a 696E7075 		.ascii	"inputData\000"
 9294      74446174 
 9294      6100
 9295              	.LASF61:
 9296 0524 4C454146 		.ascii	"LEAF_interpolation_linear\000"
 9296      5F696E74 
 9296      6572706F 
 9296      6C617469 
 9296      6F6E5F6C 
 9297              	.LASF221:
 9298 053e 70726576 		.ascii	"prevNotes\000"
 9298      4E6F7465 
 9298      7300
 9299              	.LASF37:
 9300 0548 63795F73 		.ascii	"cy_stc_eeprom_context_t\000"
 9300      74635F65 
 9300      6570726F 
 9300      6D5F636F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 204


 9300      6E746578 
 9301              	.LASF10:
 9302 0560 6C6F6E67 		.ascii	"long unsigned int\000"
 9302      20756E73 
 9302      69676E65 
 9302      6420696E 
 9302      7400
 9303              	.LASF122:
 9304 0572 456D5F45 		.ascii	"Em_EEPROM_em_EepromStorage\000"
 9304      4550524F 
 9304      4D5F656D 
 9304      5F456570 
 9304      726F6D53 
 9305              	.LASF176:
 9306 058d 65657072 		.ascii	"eepromReturnValue\000"
 9306      6F6D5265 
 9306      7475726E 
 9306      56616C75 
 9306      6500
 9307              	.LASF75:
 9308 059f 73746174 		.ascii	"status\000"
 9308      757300
 9309              	.LASF180:
 9310 05a6 73656E64 		.ascii	"send_it\000"
 9310      5F697400 
 9311              	.LASF132:
 9312 05ae 6C696E65 		.ascii	"linearPotValue32Bit\000"
 9312      6172506F 
 9312      7456616C 
 9312      75653332 
 9312      42697400 
 9313              	.LASF105:
 9314 05c2 6368616E 		.ascii	"channel\000"
 9314      6E656C00 
 9315              	.LASF85:
 9316 05ca 4932435F 		.ascii	"I2C_MasterWriteBlocking\000"
 9316      4D617374 
 9316      65725772 
 9316      69746542 
 9316      6C6F636B 
 9317              	.LASF74:
 9318 05e2 6D795465 		.ascii	"myTemp\000"
 9318      6D7000
 9319              	.LASF138:
 9320 05e9 616E676C 		.ascii	"angle\000"
 9320      6500
 9321              	.LASF42:
 9322 05ef 43595F45 		.ascii	"CY_EM_EEPROM_WRITE_FAIL\000"
 9322      4D5F4545 
 9322      50524F4D 
 9322      5F575249 
 9322      54455F46 
 9323              	.LASF67:
 9324 0607 6F737461 		.ascii	"ostart\000"
 9324      727400
 9325              	.LASF217:
 9326 060e 6F70656E 		.ascii	"openStringMIDI_Int\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 205


 9326      53747269 
 9326      6E674D49 
 9326      44495F49 
 9326      6E7400
 9327              	.LASF66:
 9328 0621 6973746F 		.ascii	"istop\000"
 9328      7000
 9329              	.LASF230:
 9330 0627 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 9330      43313120 
 9330      352E342E 
 9330      31203230 
 9330      31363036 
 9331 065a 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 9331      20726576 
 9331      6973696F 
 9331      6E203233 
 9331      37373135 
 9332 068d 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 9332      66756E63 
 9332      74696F6E 
 9332      2D736563 
 9332      74696F6E 
 9333              	.LASF102:
 9334 06b5 73656E64 		.ascii	"sendMIDINoteOn\000"
 9334      4D494449 
 9334      4E6F7465 
 9334      4F6E00
 9335              	.LASF194:
 9336 06c4 6D61696E 		.ascii	"main_counter\000"
 9336      5F636F75 
 9336      6E746572 
 9336      00
 9337              	.LASF45:
 9338 06d1 46697273 		.ascii	"FirstLine\000"
 9338      744C696E 
 9338      6500
 9339              	.LASF196:
 9340 06db 6475616C 		.ascii	"dualSlider\000"
 9340      536C6964 
 9340      657200
 9341              	.LASF55:
 9342 06e6 72657374 		.ascii	"restartSystemCheck\000"
 9342      61727453 
 9342      79737465 
 9342      6D436865 
 9342      636B00
 9343              	.LASF129:
 9344 06f9 5553425F 		.ascii	"USB_check_flag\000"
 9344      63686563 
 9344      6B5F666C 
 9344      616700
 9345              	.LASF9:
 9346 0708 5F5F7569 		.ascii	"__uint32_t\000"
 9346      6E743332 
 9346      5F7400
 9347              	.LASF11:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 206


 9348 0713 6C6F6E67 		.ascii	"long long int\000"
 9348      206C6F6E 
 9348      6720696E 
 9348      7400
 9349              	.LASF133:
 9350 0721 636F756E 		.ascii	"counter\000"
 9350      74657200 
 9351              	.LASF215:
 9352 0729 73747269 		.ascii	"stringPitch\000"
 9352      6E675069 
 9352      74636800 
 9353              	.LASF146:
 9354 0735 72783154 		.ascii	"rx1TD\000"
 9354      4400
 9355              	.LASF56:
 9356 073b 74656D70 		.ascii	"tempmin\000"
 9356      6D696E00 
 9357              	.LASF35:
 9358 0743 626C6F63 		.ascii	"blockingWrite\000"
 9358      6B696E67 
 9358      57726974 
 9358      6500
 9359              	.LASF23:
 9360 0751 646F7562 		.ascii	"double\000"
 9360      6C6500
 9361              	.LASF231:
 9362 0758 6D61696E 		.ascii	"main.c\000"
 9362      2E6300
 9363              	.LASF202:
 9364 075f 62757474 		.ascii	"button1Up\000"
 9364      6F6E3155 
 9364      7000
 9365              	.LASF94:
 9366 0769 6C6F6732 		.ascii	"log2f_approx\000"
 9366      665F6170 
 9366      70726F78 
 9366      00
 9367              	.LASF123:
 9368 0776 49544D5F 		.ascii	"ITM_RxBuffer\000"
 9368      52784275 
 9368      66666572 
 9368      00
 9369              	.LASF68:
 9370 0783 6F73746F 		.ascii	"ostop\000"
 9370      7000
 9371              	.LASF89:
 9372 0789 74696D65 		.ascii	"timeout\000"
 9372      6F757400 
 9373              	.LASF22:
 9374 0791 666C6F61 		.ascii	"float\000"
 9374      7400
 9375              	.LASF187:
 9376 0797 70726576 		.ascii	"prev_processed_pedals\000"
 9376      5F70726F 
 9376      63657373 
 9376      65645F70 
 9376      6564616C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 207


 9377              	.LASF174:
 9378 07ad 53504932 		.ascii	"SPI2started\000"
 9378      73746172 
 9378      74656400 
 9379              	.LASF162:
 9380 07b9 63757272 		.ascii	"currentPluckBuffer\000"
 9380      656E7450 
 9380      6C75636B 
 9380      42756666 
 9380      657200
 9381              	.LASF80:
 9382 07cc 6261724D 		.ascii	"barMIDI\000"
 9382      49444900 
 9383              	.LASF111:
 9384 07d4 73656E64 		.ascii	"sendMIDIPitchBend\000"
 9384      4D494449 
 9384      50697463 
 9384      6842656E 
 9384      6400
 9385              	.LASF13:
 9386 07e6 756E7369 		.ascii	"unsigned int\000"
 9386      676E6564 
 9386      20696E74 
 9386      00
 9387              	.LASF224:
 9388 07f3 72656365 		.ascii	"receivingSysex\000"
 9388      6976696E 
 9388      67537973 
 9388      657800
 9389              	.LASF118:
 9390 0802 6361626C 		.ascii	"cable\000"
 9390      6500
 9391              	.LASF54:
 9392 0808 56627573 		.ascii	"Vbus_function\000"
 9392      5F66756E 
 9392      6374696F 
 9392      6E00
 9393              	.LASF104:
 9394 0816 76656C6F 		.ascii	"velocity\000"
 9394      63697479 
 9394      00
 9395              	.LASF226:
 9396 081f 63686563 		.ascii	"checkStatus\000"
 9396      6B537461 
 9396      74757300 
 9397              	.LASF25:
 9398 082b 63797374 		.ascii	"cystatus\000"
 9398      61747573 
 9398      00
 9399              	.LASF171:
 9400 0834 6261725F 		.ascii	"bar_index\000"
 9400      696E6465 
 9400      7800
 9401              	.LASF97:
 9402 083e 73747269 		.ascii	"string\000"
 9402      6E6700
 9403              	.LASF169:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 208


 9404 0845 6F666673 		.ascii	"offsetErrorCount\000"
 9404      65744572 
 9404      726F7243 
 9404      6F756E74 
 9404      00
 9405              	.LASF189:
 9406 0856 70726F63 		.ascii	"processed_volumePedal\000"
 9406      65737365 
 9406      645F766F 
 9406      6C756D65 
 9406      50656461 
 9407              	.LASF78:
 9408 086c 74656D70 		.ascii	"tempMIDI\000"
 9408      4D494449 
 9408      00
 9409              	.LASF52:
 9410 0875 73706973 		.ascii	"spis_2_function\000"
 9410      5F325F66 
 9410      756E6374 
 9410      696F6E00 
 9411              	.LASF149:
 9412 0885 72784275 		.ascii	"rxBufferBar\000"
 9412      66666572 
 9412      42617200 
 9413              	.LASF186:
 9414 0891 70726F63 		.ascii	"processed_pedals\000"
 9414      65737365 
 9414      645F7065 
 9414      64616C73 
 9414      00
 9415              	.LASF210:
 9416 08a2 6F70656E 		.ascii	"openStringFrequencies\000"
 9416      53747269 
 9416      6E674672 
 9416      65717565 
 9416      6E636965 
 9417              	.LASF139:
 9418 08b8 70726576 		.ascii	"prevAngle\000"
 9418      416E676C 
 9418      6500
 9419              	.LASF158:
 9420 08c2 706C7563 		.ascii	"pluck_index\000"
 9420      6B5F696E 
 9420      64657800 
 9421              	.LASF27:
 9422 08ce 6C6F6E67 		.ascii	"long double\000"
 9422      20646F75 
 9422      626C6500 
 9423              	.LASF90:
 9424 08da 4932435F 		.ascii	"I2C_MasterReadBlocking\000"
 9424      4D617374 
 9424      65725265 
 9424      6164426C 
 9424      6F636B69 
 9425              	.LASF163:
 9426 08f1 63757272 		.ascii	"currentBarBuffer\000"
 9426      656E7442 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 209


 9426      61724275 
 9426      66666572 
 9426      00
 9427              	.LASF140:
 9428 0902 4144435F 		.ascii	"ADC_values\000"
 9428      76616C75 
 9428      657300
 9429              	.LASF60:
 9430 090d 66746F6D 		.ascii	"ftom\000"
 9430      00
 9431              	.LASF197:
 9432 0912 656E7465 		.ascii	"enterUp\000"
 9432      72557000 
 9433              	.LASF165:
 9434 091a 53504931 		.ascii	"SPI1ErrorCount\000"
 9434      4572726F 
 9434      72436F75 
 9434      6E7400
 9435              	.LASF142:
 9436 0929 6D696469 		.ascii	"midiSent\000"
 9436      53656E74 
 9436      00
 9437              	.LASF119:
 9438 0932 6D696469 		.ascii	"midiMsg\000"
 9438      4D736700 
 9439              	.LASF220:
 9440 093a 63757272 		.ascii	"currentNeck\000"
 9440      656E744E 
 9440      65636B00 
 9441              	.LASF12:
 9442 0946 6C6F6E67 		.ascii	"long long unsigned int\000"
 9442      206C6F6E 
 9442      6720756E 
 9442      7369676E 
 9442      65642069 
 9443              	.LASF16:
 9444 095d 75696E74 		.ascii	"uint16_t\000"
 9444      31365F74 
 9444      00
 9445              	.LASF193:
 9446 0966 6C617374 		.ascii	"last_mux\000"
 9446      5F6D7578 
 9446      00
 9447              	.LASF147:
 9448 096f 72783254 		.ascii	"rx2TD\000"
 9448      4400
 9449              	.LASF234:
 9450 0975 62726561 		.ascii	"breakFloat\000"
 9450      6B466C6F 
 9450      617400
 9451              	.LASF227:
 9452 0980 63686563 		.ascii	"checkBase\000"
 9452      6B426173 
 9452      6500
 9453              	.LASF51:
 9454 098a 73706973 		.ascii	"spis_2_ss\000"
 9454      5F325F73 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 210


 9454      7300
 9455              	.LASF203:
 9456 0994 62757474 		.ascii	"button2Up\000"
 9456      6F6E3255 
 9456      7000
 9457              	.LASF154:
 9458 099e 616D4865 		.ascii	"amHere\000"
 9458      726500
 9459              	.LASF175:
 9460 09a5 61727261 		.ascii	"array\000"
 9460      7900
 9461              	.LASF26:
 9462 09ab 72656738 		.ascii	"reg8\000"
 9462      00
 9463              	.LASF160:
 9464 09b0 73706943 		.ascii	"spiCounter2\000"
 9464      6F756E74 
 9464      65723200 
 9465              	.LASF125:
 9466 09bc 75736241 		.ascii	"usbActivityCounter\000"
 9466      63746976 
 9466      69747943 
 9466      6F756E74 
 9466      657200
 9467              	.LASF184:
 9468 09cf 64656164 		.ascii	"deadzone\000"
 9468      7A6F6E65 
 9468      00
 9469              	.LASF3:
 9470 09d8 5F5F696E 		.ascii	"__int16_t\000"
 9470      7431365F 
 9470      7400
 9471              	.LASF128:
 9472 09e2 5553425F 		.ascii	"USB_active\000"
 9472      61637469 
 9472      766500
 9473              	.LASF222:
 9474 09ed 73797365 		.ascii	"sysexBuffer\000"
 9474      78427566 
 9474      66657200 
 9475              	.LASF164:
 9476 09f9 706C7563 		.ascii	"pluckErrorCount\000"
 9476      6B457272 
 9476      6F72436F 
 9476      756E7400 
 9477              	.LASF98:
 9478 0a09 74656D70 		.ascii	"tempAmp\000"
 9478      416D7000 
 9479              	.LASF218:
 9480 0a11 4F4C4544 		.ascii	"OLEDcount\000"
 9480      636F756E 
 9480      7400
 9481              	.LASF206:
 9482 0a1b 70617463 		.ascii	"patchNum\000"
 9482      684E756D 
 9482      00
 9483              	.LASF95:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 211


 9484 0a24 73706973 		.ascii	"spis_1_function\000"
 9484      5F315F66 
 9484      756E6374 
 9484      696F6E00 
 9485              	.LASF219:
 9486 0a34 70656461 		.ascii	"pedals_float\000"
 9486      6C735F66 
 9486      6C6F6174 
 9486      00
 9487              	.LASF19:
 9488 0a41 75696E74 		.ascii	"uint8\000"
 9488      3800
 9489              	.LASF182:
 9490 0a47 70656461 		.ascii	"pedals_low\000"
 9490      6C735F6C 
 9490      6F7700
 9491              	.LASF82:
 9492 0a52 70697463 		.ascii	"pitchBendAmount\000"
 9492      6842656E 
 9492      64416D6F 
 9492      756E7400 
 9493              	.LASF157:
 9494 0a62 70726576 		.ascii	"prevOctave\000"
 9494      4F637461 
 9494      766500
 9495              	.LASF4:
 9496 0a6d 73686F72 		.ascii	"short int\000"
 9496      7420696E 
 9496      7400
 9497              	.LASF190:
 9498 0a77 66726574 		.ascii	"fretMeasurements\000"
 9498      4D656173 
 9498      7572656D 
 9498      656E7473 
 9498      00
 9499              	.LASF88:
 9500 0a88 6D6F6465 		.ascii	"mode\000"
 9500      00
 9501              	.LASF216:
 9502 0a8d 73747269 		.ascii	"stringMIDI\000"
 9502      6E674D49 
 9502      444900
 9503              	.LASF79:
 9504 0a98 6F70656E 		.ascii	"openStringMIDI\000"
 9504      53747269 
 9504      6E674D49 
 9504      444900
 9505              	.LASF15:
 9506 0aa7 696E7431 		.ascii	"int16_t\000"
 9506      365F7400 
 9507              	.LASF116:
 9508 0aaf 70656461 		.ascii	"pedalToWrite\000"
 9508      6C546F57 
 9508      72697465 
 9508      00
 9509              	.LASF32:
 9510 0abc 65657072 		.ascii	"eepromSize\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 212


 9510      6F6D5369 
 9510      7A6500
 9511              	.LASF159:
 9512 0ac7 616D4865 		.ascii	"amHere2\000"
 9512      72653200 
 9513              	.LASF211:
 9514 0acf 73747269 		.ascii	"stringMappedPositions\000"
 9514      6E674D61 
 9514      70706564 
 9514      506F7369 
 9514      74696F6E 
 9515              	.LASF136:
 9516 0ae5 70726576 		.ascii	"previousButtons\000"
 9516      696F7573 
 9516      42757474 
 9516      6F6E7300 
 9517              	.LASF33:
 9518 0af5 77656172 		.ascii	"wearLevelingFactor\000"
 9518      4C657665 
 9518      6C696E67 
 9518      46616374 
 9518      6F7200
 9519              	.LASF86:
 9520 0b08 69324341 		.ascii	"i2CAddr\000"
 9520      64647200 
 9521              	.LASF153:
 9522 0b10 6D617853 		.ascii	"maxStrings\000"
 9522      7472696E 
 9522      677300
 9523              	.LASF167:
 9524 0b1b 73706941 		.ascii	"spiAdjusted\000"
 9524      646A7573 
 9524      74656400 
 9525              	.LASF145:
 9526 0b27 72783243 		.ascii	"rx2Channel\000"
 9526      68616E6E 
 9526      656C00
 9527              	.LASF84:
 9528 0b32 446D6152 		.ascii	"DmaRxConfiguration\000"
 9528      78436F6E 
 9528      66696775 
 9528      72617469 
 9528      6F6E00
 9529              	.LASF18:
 9530 0b45 75696E74 		.ascii	"uint32_t\000"
 9530      33325F74 
 9530      00
 9531              	.LASF205:
 9532 0b4e 62757474 		.ascii	"button4Up\000"
 9532      6F6E3455 
 9532      7000
 9533              	.LASF127:
 9534 0b58 70726576 		.ascii	"prevVBUS\000"
 9534      56425553 
 9534      00
 9535              	.LASF126:
 9536 0b61 63757272 		.ascii	"currentVBUS\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 213


 9536      656E7456 
 9536      42555300 
 9537              	.LASF204:
 9538 0b6d 62757474 		.ascii	"button3Up\000"
 9538      6F6E3355 
 9538      7000
 9539              	.LASF6:
 9540 0b77 73686F72 		.ascii	"short unsigned int\000"
 9540      7420756E 
 9540      7369676E 
 9540      65642069 
 9540      6E7400
 9541              	.LASF100:
 9542 0b8a 6E6F7465 		.ascii	"noteToSend\000"
 9542      546F5365 
 9542      6E6400
 9543              	.LASF7:
 9544 0b95 5F5F696E 		.ascii	"__int32_t\000"
 9544      7433325F 
 9544      7400
 9545              	.LASF152:
 9546 0b9f 70726576 		.ascii	"prevBar\000"
 9546      42617200 
 9547              	.LASF131:
 9548 0ba7 6D79496E 		.ascii	"myInputArray\000"
 9548      70757441 
 9548      72726179 
 9548      00
 9549              	.LASF209:
 9550 0bb4 70656461 		.ascii	"pedals\000"
 9550      6C7300
 9551              	.LASF199:
 9552 0bbb 65646974 		.ascii	"editUp\000"
 9552      557000
 9553              	.LASF31:
 9554 0bc2 6C617374 		.ascii	"lastWrRowAddr\000"
 9554      5772526F 
 9554      77416464 
 9554      7200
 9555              	.LASF70:
 9556 0bd0 6D794172 		.ascii	"myArrayCounter\000"
 9556      72617943 
 9556      6F756E74 
 9556      657200
 9557              	.LASF228:
 9558 0bdf 74657374 		.ascii	"testy\000"
 9558      7900
 9559              	.LASF213:
 9560 0be5 73747269 		.ascii	"stringFrequencies\000"
 9560      6E674672 
 9560      65717565 
 9560      6E636965 
 9560      7300
 9561              	.LASF20:
 9562 0bf7 75696E74 		.ascii	"uint16\000"
 9562      313600
 9563              	.LASF130:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccuKe7QT.s 			page 214


 9564 0bfe 6D794172 		.ascii	"myArray\000"
 9564      72617900 
 9565              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
