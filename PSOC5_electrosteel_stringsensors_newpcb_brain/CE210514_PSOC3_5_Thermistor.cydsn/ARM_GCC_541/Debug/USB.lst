ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"USB.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	USB_initVar
  20              		.bss
  21              		.type	USB_initVar, %object
  22              		.size	USB_initVar, 1
  23              	USB_initVar:
  24 0000 00       		.space	1
  25              		.section	.text.USB_Start,"ax",%progbits
  26              		.align	2
  27              		.global	USB_Start
  28              		.thumb
  29              		.thumb_func
  30              		.type	USB_Start, %function
  31              	USB_Start:
  32              	.LFB0:
  33              		.file 1 "Generated_Source\\PSoC5\\USB.c"
   1:Generated_Source\PSoC5/USB.c **** /***************************************************************************//**
   2:Generated_Source\PSoC5/USB.c **** * \file USB.c
   3:Generated_Source\PSoC5/USB.c **** * \version 3.20
   4:Generated_Source\PSoC5/USB.c **** *
   5:Generated_Source\PSoC5/USB.c **** * \brief
   6:Generated_Source\PSoC5/USB.c **** *  This file contains the global USBFS API functions.
   7:Generated_Source\PSoC5/USB.c **** *
   8:Generated_Source\PSoC5/USB.c **** * Note:
   9:Generated_Source\PSoC5/USB.c **** *  Many of the functions use an endpoint number. SRAM arrays are sized with 9
  10:Generated_Source\PSoC5/USB.c **** *  elements, so they are indexed directly by epNumber.  The SIE and ARB
  11:Generated_Source\PSoC5/USB.c **** *  registers are indexed by variations of epNumber - 1.
  12:Generated_Source\PSoC5/USB.c **** *
  13:Generated_Source\PSoC5/USB.c **** ********************************************************************************
  14:Generated_Source\PSoC5/USB.c **** * \copyright
  15:Generated_Source\PSoC5/USB.c **** * Copyright 2008-2016, Cypress Semiconductor Corporation.  All rights reserved.
  16:Generated_Source\PSoC5/USB.c **** * You may use this file only in accordance with the license, terms, conditions,
  17:Generated_Source\PSoC5/USB.c **** * disclaimers, and limitations in the end user license agreement accompanying
  18:Generated_Source\PSoC5/USB.c **** * the software package with which this file was provided.
  19:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
  20:Generated_Source\PSoC5/USB.c **** 
  21:Generated_Source\PSoC5/USB.c **** #include "USB_pvt.h"
  22:Generated_Source\PSoC5/USB.c **** #include "USB_cydmac.h"
  23:Generated_Source\PSoC5/USB.c **** #include "USB_hid.h"
  24:Generated_Source\PSoC5/USB.c **** #include "USB_Dp.h"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 2


  25:Generated_Source\PSoC5/USB.c **** 
  26:Generated_Source\PSoC5/USB.c **** 
  27:Generated_Source\PSoC5/USB.c **** /***************************************
  28:Generated_Source\PSoC5/USB.c **** * Global data allocation
  29:Generated_Source\PSoC5/USB.c **** ***************************************/
  30:Generated_Source\PSoC5/USB.c **** 
  31:Generated_Source\PSoC5/USB.c **** /** Indicates whether the USBFS has been initialized. The variable is
  32:Generated_Source\PSoC5/USB.c **** * initialized to 0 after device reset and set to 1 the first time USBFS_Start()
  33:Generated_Source\PSoC5/USB.c **** * is called. This allows the Component to restart without reinitialization after
  34:Generated_Source\PSoC5/USB.c **** * the first call to the USBFS_Start() routine.
  35:Generated_Source\PSoC5/USB.c **** * If re-initialization of the Component is required, the variable should be set
  36:Generated_Source\PSoC5/USB.c **** * to 0 before the USBFS_Start() routine is called. Alternatively, the USBFS can
  37:Generated_Source\PSoC5/USB.c **** * be reinitialized by calling both USBFS_Init() and USBFS_InitComponent()
  38:Generated_Source\PSoC5/USB.c **** * functions.
  39:Generated_Source\PSoC5/USB.c **** */
  40:Generated_Source\PSoC5/USB.c **** uint8 USB_initVar = 0u;
  41:Generated_Source\PSoC5/USB.c **** 
  42:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
  43:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC4)
  44:Generated_Source\PSoC5/USB.c ****         static void USB_InitEpDma(void);
  45:Generated_Source\PSoC5/USB.c **** 
  46:Generated_Source\PSoC5/USB.c ****         /* DMA chanels assigend for endpoints. */
  47:Generated_Source\PSoC5/USB.c ****         const uint8 USB_DmaChan[USB_MAX_EP] =
  48:Generated_Source\PSoC5/USB.c ****         {
  49:Generated_Source\PSoC5/USB.c ****             0u,
  50:Generated_Source\PSoC5/USB.c ****             0u,
  51:Generated_Source\PSoC5/USB.c ****             0u,
  52:Generated_Source\PSoC5/USB.c ****             0u,
  53:Generated_Source\PSoC5/USB.c ****             0u,
  54:Generated_Source\PSoC5/USB.c ****             0u,
  55:Generated_Source\PSoC5/USB.c ****             0u,
  56:Generated_Source\PSoC5/USB.c ****             0u,
  57:Generated_Source\PSoC5/USB.c ****             0u,
  58:Generated_Source\PSoC5/USB.c ****         };        
  59:Generated_Source\PSoC5/USB.c ****     #else
  60:Generated_Source\PSoC5/USB.c ****         /* DMA chanels assigend for endpoints. */
  61:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaChan[USB_MAX_EP];
  62:Generated_Source\PSoC5/USB.c ****         
  63:Generated_Source\PSoC5/USB.c ****         /* DMA TDs require for PSoC 3/5LP operation. */
  64:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaTd[USB_MAX_EP];
  65:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC4) */
  66:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
  67:Generated_Source\PSoC5/USB.c **** 
  68:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA_AUTO)
  69:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
  70:Generated_Source\PSoC5/USB.c ****     /* Number of DMA bursts. */
  71:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpBurstCnt   [USB_MAX_EP];
  72:Generated_Source\PSoC5/USB.c ****     
  73:Generated_Source\PSoC5/USB.c ****     /* Number of bytes to transfer in last DMA burst. */
  74:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpLastBurstEl[USB_MAX_EP];
  75:Generated_Source\PSoC5/USB.c **** 
  76:Generated_Source\PSoC5/USB.c ****     /* Storage for arrays above. */
  77:Generated_Source\PSoC5/USB.c ****     uint8  USB_DmaEpBurstCntBackup  [USB_MAX_EP];
  78:Generated_Source\PSoC5/USB.c ****     uint32 USB_DmaEpBufferAddrBackup[USB_MAX_EP];
  79:Generated_Source\PSoC5/USB.c ****      
  80:Generated_Source\PSoC5/USB.c ****     /* DMA trigger mux output for usb.dma_req[0-7]. */
  81:Generated_Source\PSoC5/USB.c ****     const uint8 USB_DmaReqOut[USB_MAX_EP] =
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 3


  82:Generated_Source\PSoC5/USB.c ****     {
  83:Generated_Source\PSoC5/USB.c ****         0u,
  84:Generated_Source\PSoC5/USB.c ****         USB_ep1_dma__TR_OUTPUT,
  85:Generated_Source\PSoC5/USB.c ****         USB_ep2_dma__TR_OUTPUT,
  86:Generated_Source\PSoC5/USB.c ****         0u,
  87:Generated_Source\PSoC5/USB.c ****         0u,
  88:Generated_Source\PSoC5/USB.c ****         0u,
  89:Generated_Source\PSoC5/USB.c ****         0u,
  90:Generated_Source\PSoC5/USB.c ****         0u,
  91:Generated_Source\PSoC5/USB.c ****         0u,
  92:Generated_Source\PSoC5/USB.c ****     };
  93:Generated_Source\PSoC5/USB.c **** 
  94:Generated_Source\PSoC5/USB.c ****     /* DMA trigger mux output for usb.dma_burstend[0-7]. */
  95:Generated_Source\PSoC5/USB.c ****     const uint8 USB_DmaBurstEndOut[USB_MAX_EP] =
  96:Generated_Source\PSoC5/USB.c ****     {
  97:Generated_Source\PSoC5/USB.c ****         0u,
  98:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_0_TR_OUTPUT,
  99:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_1_TR_OUTPUT,
 100:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_2_TR_OUTPUT,
 101:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_3_TR_OUTPUT,
 102:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_4_TR_OUTPUT,
 103:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_5_TR_OUTPUT,
 104:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_6_TR_OUTPUT,
 105:Generated_Source\PSoC5/USB.c ****         USB_BURSTEND_7_TR_OUTPUT
 106:Generated_Source\PSoC5/USB.c ****     };
 107:Generated_Source\PSoC5/USB.c ****     
 108:Generated_Source\PSoC5/USB.c **** #else
 109:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_DMA_AUTO_OPT == 0u)
 110:Generated_Source\PSoC5/USB.c ****         static uint8 clearInDataRdyStatus = USB_ARB_EPX_CFG_DEFAULT;
 111:Generated_Source\PSoC5/USB.c ****         uint8 USB_DmaNextTd[USB_MAX_EP];
 112:Generated_Source\PSoC5/USB.c ****         const uint8 USB_epX_TD_TERMOUT_EN[USB_MAX_EP] =
 113:Generated_Source\PSoC5/USB.c ****         {
 114:Generated_Source\PSoC5/USB.c ****             0u,
 115:Generated_Source\PSoC5/USB.c ****             0u,
 116:Generated_Source\PSoC5/USB.c ****             0u,
 117:Generated_Source\PSoC5/USB.c ****             0u,
 118:Generated_Source\PSoC5/USB.c ****             0u,
 119:Generated_Source\PSoC5/USB.c ****             0u,
 120:Generated_Source\PSoC5/USB.c ****             0u,
 121:Generated_Source\PSoC5/USB.c ****             0u,
 122:Generated_Source\PSoC5/USB.c ****             0u,
 123:Generated_Source\PSoC5/USB.c ****         };
 124:Generated_Source\PSoC5/USB.c **** 
 125:Generated_Source\PSoC5/USB.c ****         volatile uint16 USB_inLength[USB_MAX_EP];
 126:Generated_Source\PSoC5/USB.c ****         const uint8 *USB_inDataPointer[USB_MAX_EP];
 127:Generated_Source\PSoC5/USB.c ****         volatile uint8 USB_inBufFull[USB_MAX_EP];
 128:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
 129:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 130:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 131:Generated_Source\PSoC5/USB.c **** 
 132:Generated_Source\PSoC5/USB.c **** 
 133:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 134:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Start
 135:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 136:Generated_Source\PSoC5/USB.c **** *
 137:Generated_Source\PSoC5/USB.c **** *   This function performs all required initialization for the USBFS component.
 138:Generated_Source\PSoC5/USB.c **** *   After this function call, the USB device initiates communication with the
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 4


 139:Generated_Source\PSoC5/USB.c **** *   host by pull-up D+ line. This is the preferred method to begin component
 140:Generated_Source\PSoC5/USB.c **** *   operation.
 141:Generated_Source\PSoC5/USB.c **** *
 142:Generated_Source\PSoC5/USB.c **** *   Note that global interrupts have to be enabled because interrupts are
 143:Generated_Source\PSoC5/USB.c **** *   required for USBFS component operation.
 144:Generated_Source\PSoC5/USB.c **** *
 145:Generated_Source\PSoC5/USB.c **** *   PSoC 4200L devices: when USBFS component configured to DMA with Automatic
 146:Generated_Source\PSoC5/USB.c **** *   Buffer Management, the DMA interrupt priority is changed to the highest
 147:Generated_Source\PSoC5/USB.c **** *   (priority 0) inside this function.
 148:Generated_Source\PSoC5/USB.c **** *
 149:Generated_Source\PSoC5/USB.c **** *   PSoC 3/PSoC 5LP devices: when USBFS component configured to DMA with
 150:Generated_Source\PSoC5/USB.c **** *   Automatic Buffer Management, the Arbiter interrupt priority is changed to
 151:Generated_Source\PSoC5/USB.c **** *   the highest (priority 0) inside this function.
 152:Generated_Source\PSoC5/USB.c **** *
 153:Generated_Source\PSoC5/USB.c **** *  \param device
 154:Generated_Source\PSoC5/USB.c **** *          Contains the device number of the desired device descriptor.
 155:Generated_Source\PSoC5/USB.c **** *          The device number can be found in the Device Descriptor Tab of
 156:Generated_Source\PSoC5/USB.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 157:Generated_Source\PSoC5/USB.c **** *          in the "Device Number" field.
 158:Generated_Source\PSoC5/USB.c **** *  \param mode:
 159:Generated_Source\PSoC5/USB.c **** *   The operating voltage. This determines whether the voltage regulator
 160:Generated_Source\PSoC5/USB.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 161:Generated_Source\PSoC5/USB.c **** *   operation. Symbolic names and their associated values are given in the
 162:Generated_Source\PSoC5/USB.c **** *   following list.
 163:Generated_Source\PSoC5/USB.c **** *
 164:Generated_Source\PSoC5/USB.c **** *       *USB_3V_OPERATION* - Disable voltage regulator and pass-
 165:Generated_Source\PSoC5/USB.c **** *                                      through Vcc for pull-up
 166:Generated_Source\PSoC5/USB.c **** *
 167:Generated_Source\PSoC5/USB.c **** *       *USB_5V_OPERATION* - Enable voltage regulator and use
 168:Generated_Source\PSoC5/USB.c **** *                                      regulator for pull-up
 169:Generated_Source\PSoC5/USB.c **** *
 170:Generated_Source\PSoC5/USB.c **** *       *USB_DWR_POWER_OPERATION* - Enable or disable the voltage
 171:Generated_Source\PSoC5/USB.c **** *                                      regulator depending on the power supply
 172:Generated_Source\PSoC5/USB.c **** *                                      voltage configuration in the DWR tab.
 173:Generated_Source\PSoC5/USB.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 174:Generated_Source\PSoC5/USB.c **** *                                      voltage is considered and for PSoC 4A-L,
 175:Generated_Source\PSoC5/USB.c **** *                                      the VBUS supply voltage is considered.*
 176:Generated_Source\PSoC5/USB.c **** * \globalvars
 177:Generated_Source\PSoC5/USB.c **** *  \ref USB_initVar
 178:Generated_Source\PSoC5/USB.c **** *
 179:Generated_Source\PSoC5/USB.c **** * \sideeffect
 180:Generated_Source\PSoC5/USB.c **** *   This function will reset all communication states to default.
 181:Generated_Source\PSoC5/USB.c **** *
 182:Generated_Source\PSoC5/USB.c **** * \reentrant
 183:Generated_Source\PSoC5/USB.c **** *  No.
 184:Generated_Source\PSoC5/USB.c **** *
 185:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/USB.c **** void USB_Start(uint8 device, uint8 mode) 
 187:Generated_Source\PSoC5/USB.c **** {
  34              		.loc 1 187 0
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 8
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              		.cfi_def_cfa_offset 8
  40              		.cfi_offset 7, -8
  41              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 5


  42 0002 82B0     		sub	sp, sp, #8
  43              		.cfi_def_cfa_offset 16
  44 0004 00AF     		add	r7, sp, #0
  45              		.cfi_def_cfa_register 7
  46 0006 0346     		mov	r3, r0
  47 0008 0A46     		mov	r2, r1
  48 000a FB71     		strb	r3, [r7, #7]
  49 000c 1346     		mov	r3, r2
  50 000e BB71     		strb	r3, [r7, #6]
 188:Generated_Source\PSoC5/USB.c ****     if (0u == USB_initVar)
  51              		.loc 1 188 0
  52 0010 094B     		ldr	r3, .L3
  53 0012 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  54 0014 002B     		cmp	r3, #0
  55 0016 04D1     		bne	.L2
 189:Generated_Source\PSoC5/USB.c ****     {
 190:Generated_Source\PSoC5/USB.c ****         USB_Init();
  56              		.loc 1 190 0
  57 0018 FFF7FEFF 		bl	USB_Init
 191:Generated_Source\PSoC5/USB.c ****         USB_initVar = 1u;
  58              		.loc 1 191 0
  59 001c 064B     		ldr	r3, .L3
  60 001e 0122     		movs	r2, #1
  61 0020 1A70     		strb	r2, [r3]
  62              	.L2:
 192:Generated_Source\PSoC5/USB.c ****     }
 193:Generated_Source\PSoC5/USB.c **** 
 194:Generated_Source\PSoC5/USB.c ****     USB_InitComponent(device, mode);
  63              		.loc 1 194 0
  64 0022 BA79     		ldrb	r2, [r7, #6]	@ zero_extendqisi2
  65 0024 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  66 0026 1146     		mov	r1, r2
  67 0028 1846     		mov	r0, r3
  68 002a FFF7FEFF 		bl	USB_InitComponent
 195:Generated_Source\PSoC5/USB.c **** }
  69              		.loc 1 195 0
  70 002e 00BF     		nop
  71 0030 0837     		adds	r7, r7, #8
  72              		.cfi_def_cfa_offset 8
  73 0032 BD46     		mov	sp, r7
  74              		.cfi_def_cfa_register 13
  75              		@ sp needed
  76 0034 80BD     		pop	{r7, pc}
  77              	.L4:
  78 0036 00BF     		.align	2
  79              	.L3:
  80 0038 00000000 		.word	USB_initVar
  81              		.cfi_endproc
  82              	.LFE0:
  83              		.size	USB_Start, .-USB_Start
  84              		.section	.text.USB_Init,"ax",%progbits
  85              		.align	2
  86              		.global	USB_Init
  87              		.thumb
  88              		.thumb_func
  89              		.type	USB_Init, %function
  90              	USB_Init:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 6


  91              	.LFB1:
 196:Generated_Source\PSoC5/USB.c **** 
 197:Generated_Source\PSoC5/USB.c **** 
 198:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 199:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Init
 200:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 201:Generated_Source\PSoC5/USB.c **** *
 202:Generated_Source\PSoC5/USB.c **** * This function initializes or restores the component according to the
 203:Generated_Source\PSoC5/USB.c **** * customizer Configure dialog settings. It is not necessary to call
 204:Generated_Source\PSoC5/USB.c **** * USB_Init() because the USB_Start() routine calls
 205:Generated_Source\PSoC5/USB.c **** * this function and is the preferred method to begin component operation.
 206:Generated_Source\PSoC5/USB.c **** *
 207:Generated_Source\PSoC5/USB.c **** * \reentrant
 208:Generated_Source\PSoC5/USB.c **** *  No.
 209:Generated_Source\PSoC5/USB.c **** *
 210:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 211:Generated_Source\PSoC5/USB.c **** void USB_Init(void) 
 212:Generated_Source\PSoC5/USB.c **** {
  92              		.loc 1 212 0
  93              		.cfi_startproc
  94              		@ args = 0, pretend = 0, frame = 8
  95              		@ frame_needed = 1, uses_anonymous_args = 0
  96 0000 80B5     		push	{r7, lr}
  97              		.cfi_def_cfa_offset 8
  98              		.cfi_offset 7, -8
  99              		.cfi_offset 14, -4
 100 0002 82B0     		sub	sp, sp, #8
 101              		.cfi_def_cfa_offset 16
 102 0004 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 213:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 214:Generated_Source\PSoC5/USB.c ****     /* Enable clock to USB IP. */
 215:Generated_Source\PSoC5/USB.c ****     USB_USB_CLK_EN_REG = USB_USB_CLK_CSR_CLK_EN;
 216:Generated_Source\PSoC5/USB.c **** 
 217:Generated_Source\PSoC5/USB.c ****     /* The internal regulator (CR1.REG_ENABLE) is enabled in
 218:Generated_Source\PSoC5/USB.c ****     * USB_InitComponent() if it is required.
 219:Generated_Source\PSoC5/USB.c ****     */
 220:Generated_Source\PSoC5/USB.c **** 
 221:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO control on drive mode of D+ and D- pins. */
 222:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= ~ (uint32) USB_USBIO_CR1_IOMODE;
 223:Generated_Source\PSoC5/USB.c **** 
 224:Generated_Source\PSoC5/USB.c ****     /* Set number of LF CLK to detect UBS bus reset. */
 225:Generated_Source\PSoC5/USB.c ****     USB_BUS_RST_CNT_REG = USB_DEFUALT_BUS_RST_CNT;
 226:Generated_Source\PSoC5/USB.c **** 
 227:Generated_Source\PSoC5/USB.c ****     /* Select VBUS detection source and clear PHY isolate. The application level
 228:Generated_Source\PSoC5/USB.c ****     * must ensure that VBUS is valid. There is no need to wait 2us before VBUS is valid.
 229:Generated_Source\PSoC5/USB.c ****     */
 230:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG = USB_DEFAULT_POWER_CTRL_VBUS;
 231:Generated_Source\PSoC5/USB.c **** 
 232:Generated_Source\PSoC5/USB.c ****     /* Enable PHY detector and single-ended and differential receivers. */
 233:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG |= USB_DEFAULT_POWER_CTRL_PHY;
 234:Generated_Source\PSoC5/USB.c **** 
 235:Generated_Source\PSoC5/USB.c ****     /* Suspend clear sequence. */
 236:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_SUSPEND;
 237:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_SUSPEND_DEL_DISABLE);
 238:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_SUSPEND_DEL;
 239:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 7


 240:Generated_Source\PSoC5/USB.c ****     /* Sets IMO lock options and clear all other bits. */
 241:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = USB_DEFUALT_CR1;
 242:Generated_Source\PSoC5/USB.c **** 
 243:Generated_Source\PSoC5/USB.c ****     /* Configure level (hi, lo, med) for each interrupt source. */
 244:Generated_Source\PSoC5/USB.c ****     USB_INTR_LVL_SEL_REG = USB_DEFAULT_INTR_LVL_SEL;
 245:Generated_Source\PSoC5/USB.c **** 
 246:Generated_Source\PSoC5/USB.c ****     /* Configure interrupt sources from: SOF, Bus Reset and EP0. */
 247:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG = USB_DEFAULT_INTR_SIE_MASK;
 248:Generated_Source\PSoC5/USB.c **** 
 249:Generated_Source\PSoC5/USB.c **** #else
 250:Generated_Source\PSoC5/USB.c ****     uint8 enableInterrupts = CyEnterCriticalSection();
 104              		.loc 1 250 0
 105 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 106 000a 0346     		mov	r3, r0
 107 000c FB71     		strb	r3, [r7, #7]
 251:Generated_Source\PSoC5/USB.c **** 
 252:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 253:Generated_Source\PSoC5/USB.c ****     uint16 i;
 254:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 255:Generated_Source\PSoC5/USB.c **** 
 256:Generated_Source\PSoC5/USB.c ****     /* Enable USB block. */
 257:Generated_Source\PSoC5/USB.c ****     USB_PM_ACT_CFG_REG |= USB_PM_ACT_EN_FSUSB;
 108              		.loc 1 257 0
 109 000e 4C4A     		ldr	r2, .L6
 110 0010 4B4B     		ldr	r3, .L6
 111 0012 1B78     		ldrb	r3, [r3]
 112 0014 DBB2     		uxtb	r3, r3
 113 0016 43F00103 		orr	r3, r3, #1
 114 001a DBB2     		uxtb	r3, r3
 115 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/USB.c ****     /* Enable USB block for Standby Power Mode. */
 259:Generated_Source\PSoC5/USB.c ****     USB_PM_STBY_CFG_REG |= USB_PM_STBY_EN_FSUSB;
 116              		.loc 1 259 0
 117 001e 494A     		ldr	r2, .L6+4
 118 0020 484B     		ldr	r3, .L6+4
 119 0022 1B78     		ldrb	r3, [r3]
 120 0024 DBB2     		uxtb	r3, r3
 121 0026 43F00103 		orr	r3, r3, #1
 122 002a DBB2     		uxtb	r3, r3
 123 002c 1370     		strb	r3, [r2]
 260:Generated_Source\PSoC5/USB.c **** 
 261:Generated_Source\PSoC5/USB.c ****     /* Enable core clock. */
 262:Generated_Source\PSoC5/USB.c ****     USB_USB_CLK_EN_REG = USB_USB_CLK_ENABLE;
 124              		.loc 1 262 0
 125 002e 464B     		ldr	r3, .L6+8
 126 0030 0122     		movs	r2, #1
 127 0032 1A70     		strb	r2, [r3]
 263:Generated_Source\PSoC5/USB.c **** 
 264:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = USB_CR1_ENABLE_LOCK;
 128              		.loc 1 264 0
 129 0034 454B     		ldr	r3, .L6+12
 130 0036 0222     		movs	r2, #2
 131 0038 1A70     		strb	r2, [r3]
 265:Generated_Source\PSoC5/USB.c **** 
 266:Generated_Source\PSoC5/USB.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE. */
 267:Generated_Source\PSoC5/USB.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled. */
 268:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR0_REG &= (uint8) ~USB_USBIO_CR0_TEN;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 8


 132              		.loc 1 268 0
 133 003a 454A     		ldr	r2, .L6+16
 134 003c 444B     		ldr	r3, .L6+16
 135 003e 1B78     		ldrb	r3, [r3]
 136 0040 DBB2     		uxtb	r3, r3
 137 0042 03F07F03 		and	r3, r3, #127
 138 0046 DBB2     		uxtb	r3, r3
 139 0048 1370     		strb	r3, [r2]
 269:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_REG_STABILITY_50NS);  /* ~50ns delay. */
 140              		.loc 1 269 0
 141 004a 0020     		movs	r0, #0
 142 004c FFF7FEFF 		bl	CyDelayUs
 270:Generated_Source\PSoC5/USB.c ****     /* Disable USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted.
 271:Generated_Source\PSoC5/USB.c ****     *  high. These bits will be set low by the power manager out-of-reset.
 272:Generated_Source\PSoC5/USB.c ****     *  Also confirm USBIO pull-up is disabled.
 273:Generated_Source\PSoC5/USB.c ****     */
 274:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG &= (uint8) ~(USB_PM_USB_CR0_PD_N |
 143              		.loc 1 274 0
 144 0050 404A     		ldr	r2, .L6+20
 145 0052 404B     		ldr	r3, .L6+20
 146 0054 1B78     		ldrb	r3, [r3]
 147 0056 DBB2     		uxtb	r3, r3
 148 0058 23F00603 		bic	r3, r3, #6
 149 005c DBB2     		uxtb	r3, r3
 150 005e 1370     		strb	r3, [r2]
 275:Generated_Source\PSoC5/USB.c ****                                                  USB_PM_USB_CR0_PD_PULLUP_N);
 276:Generated_Source\PSoC5/USB.c **** 
 277:Generated_Source\PSoC5/USB.c ****     /* Select IOMODE to USB mode. */
 278:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= (uint8) ~USB_USBIO_CR1_IOMODE;
 151              		.loc 1 278 0
 152 0060 3D4A     		ldr	r2, .L6+24
 153 0062 3D4B     		ldr	r3, .L6+24
 154 0064 1B78     		ldrb	r3, [r3]
 155 0066 DBB2     		uxtb	r3, r3
 156 0068 23F02003 		bic	r3, r3, #32
 157 006c DBB2     		uxtb	r3, r3
 158 006e 1370     		strb	r3, [r2]
 279:Generated_Source\PSoC5/USB.c **** 
 280:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO reference by setting PM.USB_CR0.fsusbio_ref_en. */
 281:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_REF_EN;
 159              		.loc 1 281 0
 160 0070 384A     		ldr	r2, .L6+20
 161 0072 384B     		ldr	r3, .L6+20
 162 0074 1B78     		ldrb	r3, [r3]
 163 0076 DBB2     		uxtb	r3, r3
 164 0078 43F00103 		orr	r3, r3, #1
 165 007c DBB2     		uxtb	r3, r3
 166 007e 1370     		strb	r3, [r2]
 282:Generated_Source\PSoC5/USB.c ****     /* Reference is available for 1us after regulator is enabled. */
 283:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_REG_STABILITY_1US);
 167              		.loc 1 283 0
 168 0080 0120     		movs	r0, #1
 169 0082 FFF7FEFF 		bl	CyDelayUs
 284:Generated_Source\PSoC5/USB.c ****     /* OR 40us after power is restored. */
 285:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_VREF_RESTORE);
 170              		.loc 1 285 0
 171 0086 2820     		movs	r0, #40
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 9


 172 0088 FFF7FEFF 		bl	CyDelayUs
 286:Generated_Source\PSoC5/USB.c ****     /* Ensure single-ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). */
 287:Generated_Source\PSoC5/USB.c ****     USB_DM_INP_DIS_REG &= (uint8) ~USB_DM_MASK;
 173              		.loc 1 287 0
 174 008c 334A     		ldr	r2, .L6+28
 175 008e 334B     		ldr	r3, .L6+28
 176 0090 1B78     		ldrb	r3, [r3]
 177 0092 DBB2     		uxtb	r3, r3
 178 0094 03F07F03 		and	r3, r3, #127
 179 0098 DBB2     		uxtb	r3, r3
 180 009a 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/USB.c ****     USB_DP_INP_DIS_REG &= (uint8) ~USB_DP_MASK;
 181              		.loc 1 288 0
 182 009c 2F4A     		ldr	r2, .L6+28
 183 009e 2F4B     		ldr	r3, .L6+28
 184 00a0 1B78     		ldrb	r3, [r3]
 185 00a2 DBB2     		uxtb	r3, r3
 186 00a4 23F04003 		bic	r3, r3, #64
 187 00a8 DBB2     		uxtb	r3, r3
 188 00aa 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/USB.c **** 
 290:Generated_Source\PSoC5/USB.c ****     /* Enable USBIO. */
 291:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_PD_N;
 189              		.loc 1 291 0
 190 00ac 294A     		ldr	r2, .L6+20
 191 00ae 294B     		ldr	r3, .L6+20
 192 00b0 1B78     		ldrb	r3, [r3]
 193 00b2 DBB2     		uxtb	r3, r3
 194 00b4 43F00203 		orr	r3, r3, #2
 195 00b8 DBB2     		uxtb	r3, r3
 196 00ba 1370     		strb	r3, [r2]
 292:Generated_Source\PSoC5/USB.c ****     CyDelayUs(USB_WAIT_PD_PULLUP_N_ENABLE);
 197              		.loc 1 292 0
 198 00bc 0220     		movs	r0, #2
 199 00be FFF7FEFF 		bl	CyDelayUs
 293:Generated_Source\PSoC5/USB.c ****     /* Set USBIO pull-up enable. */
 294:Generated_Source\PSoC5/USB.c ****     USB_PM_USB_CR0_REG |= USB_PM_USB_CR0_PD_PULLUP_N;
 200              		.loc 1 294 0
 201 00c2 244A     		ldr	r2, .L6+20
 202 00c4 234B     		ldr	r3, .L6+20
 203 00c6 1B78     		ldrb	r3, [r3]
 204 00c8 DBB2     		uxtb	r3, r3
 205 00ca 43F00403 		orr	r3, r3, #4
 206 00ce DBB2     		uxtb	r3, r3
 207 00d0 1370     		strb	r3, [r2]
 295:Generated_Source\PSoC5/USB.c **** 
 296:Generated_Source\PSoC5/USB.c ****     /* Reset Arbiter Write Address register for endpoint 1. */
 297:Generated_Source\PSoC5/USB.c ****     CY_SET_REG8(USB_ARB_RW1_WA_PTR,     0u);
 208              		.loc 1 297 0
 209 00d2 234B     		ldr	r3, .L6+32
 210 00d4 0022     		movs	r2, #0
 211 00d6 1A70     		strb	r2, [r3]
 298:Generated_Source\PSoC5/USB.c ****     CY_SET_REG8(USB_ARB_RW1_WA_MSB_PTR, 0u);
 212              		.loc 1 298 0
 213 00d8 224B     		ldr	r3, .L6+36
 214 00da 0022     		movs	r2, #0
 215 00dc 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 10


 299:Generated_Source\PSoC5/USB.c **** 
 300:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 301:Generated_Source\PSoC5/USB.c ****     /* Initialize transfer descriptor. This will be used to detect DMA state - initialized or not. 
 302:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_EP; ++i)
 303:Generated_Source\PSoC5/USB.c ****     {
 304:Generated_Source\PSoC5/USB.c ****         USB_DmaTd[i] = DMA_INVALID_TD;
 305:Generated_Source\PSoC5/USB.c **** 
 306:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
 307:Generated_Source\PSoC5/USB.c ****         USB_DmaNextTd[i] = DMA_INVALID_TD;
 308:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
 309:Generated_Source\PSoC5/USB.c ****     }
 310:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 311:Generated_Source\PSoC5/USB.c **** 
 312:Generated_Source\PSoC5/USB.c ****     CyExitCriticalSection(enableInterrupts);
 216              		.loc 1 312 0
 217 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 218 00e0 1846     		mov	r0, r3
 219 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 313:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 314:Generated_Source\PSoC5/USB.c **** 
 315:Generated_Source\PSoC5/USB.c ****     /* Configure interrupts from USB block. */
 316:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 317:Generated_Source\PSoC5/USB.c ****     /* Configure hi_int: set handler and priority. */
 318:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_HI_VECT_NUM,  USB_INTR_HI_PRIORITY);
 319:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_HI_VECT_NUM, &USB_INTR_HI_ISR);
 320:Generated_Source\PSoC5/USB.c **** 
 321:Generated_Source\PSoC5/USB.c ****     /* Configure lo_int: set handler and priority. */
 322:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_LO_VECT_NUM,  USB_INTR_LO_PRIORITY);
 323:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_LO_VECT_NUM, &USB_INTR_LO_ISR);
 324:Generated_Source\PSoC5/USB.c **** 
 325:Generated_Source\PSoC5/USB.c ****     /* Configure med_int: set handler and priority (routed through DSI). */
 326:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_INTR_MED_VECT_NUM,  USB_INTR_MED_PRIORITY);
 327:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_INTR_MED_VECT_NUM, &USB_INTR_MED_ISR);
 328:Generated_Source\PSoC5/USB.c **** 
 329:Generated_Source\PSoC5/USB.c **** #else
 330:Generated_Source\PSoC5/USB.c ****     /* Set bus reset interrupt. */
 331:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority(USB_BUS_RESET_VECT_NUM, USB_BUS_RESET_PRIOR);
 220              		.loc 1 331 0
 221 00e6 0121     		movs	r1, #1
 222 00e8 1720     		movs	r0, #23
 223 00ea FFF7FEFF 		bl	CyIntSetPriority
 332:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_BUS_RESET_VECT_NUM,   &USB_BUS_RESET_ISR);
 224              		.loc 1 332 0
 225 00ee 1E49     		ldr	r1, .L6+40
 226 00f0 1720     		movs	r0, #23
 227 00f2 FFF7FEFF 		bl	CyIntSetVector
 333:Generated_Source\PSoC5/USB.c **** 
 334:Generated_Source\PSoC5/USB.c ****     /* Set Control Endpoint Interrupt. */
 335:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority(USB_EP_0_VECT_NUM, USB_EP_0_PRIOR);
 228              		.loc 1 335 0
 229 00f6 0121     		movs	r1, #1
 230 00f8 1820     		movs	r0, #24
 231 00fa FFF7FEFF 		bl	CyIntSetPriority
 336:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_EP_0_VECT_NUM,   &USB_EP_0_ISR);
 232              		.loc 1 336 0
 233 00fe 1B49     		ldr	r1, .L6+44
 234 0100 1820     		movs	r0, #24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 11


 235 0102 FFF7FEFF 		bl	CyIntSetVector
 337:Generated_Source\PSoC5/USB.c **** 
 338:Generated_Source\PSoC5/USB.c ****     /* Set SOF interrupt. */
 339:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 340:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_SOF_VECT_NUM,  USB_SOF_PRIOR);
 341:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_SOF_VECT_NUM, &USB_SOF_ISR);
 342:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 343:Generated_Source\PSoC5/USB.c **** 
 344:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 1 Interrupt. */
 345:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 346:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_1_VECT_NUM,  USB_EP_1_PRIOR);
 236              		.loc 1 346 0
 237 0106 0121     		movs	r1, #1
 238 0108 0120     		movs	r0, #1
 239 010a FFF7FEFF 		bl	CyIntSetPriority
 347:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_1_VECT_NUM,  &USB_EP_1_ISR);
 240              		.loc 1 347 0
 241 010e 1849     		ldr	r1, .L6+48
 242 0110 0120     		movs	r0, #1
 243 0112 FFF7FEFF 		bl	CyIntSetVector
 348:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 349:Generated_Source\PSoC5/USB.c **** 
 350:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 2 Interrupt. */
 351:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 352:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_2_VECT_NUM,  USB_EP_2_PRIOR);
 244              		.loc 1 352 0
 245 0116 0121     		movs	r1, #1
 246 0118 0220     		movs	r0, #2
 247 011a FFF7FEFF 		bl	CyIntSetPriority
 353:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_2_VECT_NUM, &USB_EP_2_ISR);
 248              		.loc 1 353 0
 249 011e 1549     		ldr	r1, .L6+52
 250 0120 0220     		movs	r0, #2
 251 0122 FFF7FEFF 		bl	CyIntSetVector
 354:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP2_ISR_ACTIVE) */
 355:Generated_Source\PSoC5/USB.c **** 
 356:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 3 Interrupt. */
 357:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 358:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_3_VECT_NUM,  USB_EP_3_PRIOR);
 359:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_3_VECT_NUM, &USB_EP_3_ISR);
 360:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP3_ISR_ACTIVE) */
 361:Generated_Source\PSoC5/USB.c **** 
 362:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 4 Interrupt. */
 363:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 364:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_4_VECT_NUM,  USB_EP_4_PRIOR);
 365:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_4_VECT_NUM, &USB_EP_4_ISR);
 366:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP4_ISR_ACTIVE) */
 367:Generated_Source\PSoC5/USB.c **** 
 368:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 5 Interrupt. */
 369:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 370:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_5_VECT_NUM,  USB_EP_5_PRIOR);
 371:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_5_VECT_NUM, &USB_EP_5_ISR);
 372:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 373:Generated_Source\PSoC5/USB.c **** 
 374:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 6 Interrupt. */
 375:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 376:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_6_VECT_NUM,  USB_EP_6_PRIOR);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 12


 377:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_6_VECT_NUM, &USB_EP_6_ISR);
 378:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP6_ISR_ACTIVE) */
 379:Generated_Source\PSoC5/USB.c **** 
 380:Generated_Source\PSoC5/USB.c ****      /* Set Data Endpoint 7 Interrupt. */
 381:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 382:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_7_VECT_NUM,  USB_EP_7_PRIOR);
 383:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_7_VECT_NUM, &USB_EP_7_ISR);
 384:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 385:Generated_Source\PSoC5/USB.c **** 
 386:Generated_Source\PSoC5/USB.c ****     /* Set Data Endpoint 8 Interrupt. */
 387:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 388:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_EP_8_VECT_NUM,  USB_EP_8_PRIOR);
 389:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_EP_8_VECT_NUM, &USB_EP_8_ISR);
 390:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 391:Generated_Source\PSoC5/USB.c **** 
 392:Generated_Source\PSoC5/USB.c ****     /* Set ARB Interrupt. */
 393:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE)
 394:Generated_Source\PSoC5/USB.c ****         CyIntSetPriority     (USB_ARB_VECT_NUM,  USB_ARB_PRIOR);
 395:Generated_Source\PSoC5/USB.c ****         (void) CyIntSetVector(USB_ARB_VECT_NUM, &USB_ARB_ISR);
 396:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE) */
 397:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 398:Generated_Source\PSoC5/USB.c **** 
 399:Generated_Source\PSoC5/USB.c ****     /* Common: Configure GPIO interrupt for wakeup. */
 400:Generated_Source\PSoC5/USB.c **** #if (USB_DP_ISR_ACTIVE)
 401:Generated_Source\PSoC5/USB.c ****     CyIntSetPriority     (USB_DP_INTC_VECT_NUM,  USB_DP_INTC_PRIORITY);
 252              		.loc 1 401 0
 253 0126 0121     		movs	r1, #1
 254 0128 0C20     		movs	r0, #12
 255 012a FFF7FEFF 		bl	CyIntSetPriority
 402:Generated_Source\PSoC5/USB.c ****     (void) CyIntSetVector(USB_DP_INTC_VECT_NUM, &USB_DP_ISR);
 256              		.loc 1 402 0
 257 012e 1249     		ldr	r1, .L6+56
 258 0130 0C20     		movs	r0, #12
 259 0132 FFF7FEFF 		bl	CyIntSetVector
 403:Generated_Source\PSoC5/USB.c **** #endif /* (USB_DP_ISR_ACTIVE) */
 404:Generated_Source\PSoC5/USB.c **** 
 405:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA && CY_PSOC4)
 406:Generated_Source\PSoC5/USB.c ****     /* Initialize DMA channels. */
 407:Generated_Source\PSoC5/USB.c ****     USB_InitEpDma();
 408:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA && CY_PSOC4) */
 409:Generated_Source\PSoC5/USB.c **** }
 260              		.loc 1 409 0
 261 0136 00BF     		nop
 262 0138 0837     		adds	r7, r7, #8
 263              		.cfi_def_cfa_offset 8
 264 013a BD46     		mov	sp, r7
 265              		.cfi_def_cfa_register 13
 266              		@ sp needed
 267 013c 80BD     		pop	{r7, pc}
 268              	.L7:
 269 013e 00BF     		.align	2
 270              	.L6:
 271 0140 A5430040 		.word	1073759141
 272 0144 B5430040 		.word	1073759157
 273 0148 9D600040 		.word	1073766557
 274 014c 09600040 		.word	1073766409
 275 0150 10600040 		.word	1073766416
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 13


 276 0154 94430040 		.word	1073759124
 277 0158 12600040 		.word	1073766418
 278 015c F8510040 		.word	1073762808
 279 0160 84600040 		.word	1073766532
 280 0164 85600040 		.word	1073766533
 281 0168 00000000 		.word	USB_BUS_RESET_ISR
 282 016c 00000000 		.word	USB_EP_0_ISR
 283 0170 00000000 		.word	USB_EP_1_ISR
 284 0174 00000000 		.word	USB_EP_2_ISR
 285 0178 00000000 		.word	USB_DP_ISR
 286              		.cfi_endproc
 287              	.LFE1:
 288              		.size	USB_Init, .-USB_Init
 289              		.section	.text.USB_InitComponent,"ax",%progbits
 290              		.align	2
 291              		.global	USB_InitComponent
 292              		.thumb
 293              		.thumb_func
 294              		.type	USB_InitComponent, %function
 295              	USB_InitComponent:
 296              	.LFB2:
 410:Generated_Source\PSoC5/USB.c **** 
 411:Generated_Source\PSoC5/USB.c **** 
 412:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 413:Generated_Source\PSoC5/USB.c **** * Function Name: USB_InitComponent
 414:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 415:Generated_Source\PSoC5/USB.c **** *
 416:Generated_Source\PSoC5/USB.c **** *   This function initializes the component’s global variables and initiates
 417:Generated_Source\PSoC5/USB.c **** *   communication with the host by pull-up D+ line.
 418:Generated_Source\PSoC5/USB.c **** *
 419:Generated_Source\PSoC5/USB.c **** * \param device:
 420:Generated_Source\PSoC5/USB.c **** *   Contains the device number of the desired device descriptor. The device
 421:Generated_Source\PSoC5/USB.c **** *   number can be found in the Device Descriptor Tab of "Configure" dialog,
 422:Generated_Source\PSoC5/USB.c **** *   under the settings of desired Device Descriptor, in the *Device Number*
 423:Generated_Source\PSoC5/USB.c **** *   field.
 424:Generated_Source\PSoC5/USB.c **** *  \param mode:
 425:Generated_Source\PSoC5/USB.c **** *   The operating voltage. This determines whether the voltage regulator
 426:Generated_Source\PSoC5/USB.c **** *   is enabled for 5V operation or if pass through mode is used for 3.3V
 427:Generated_Source\PSoC5/USB.c **** *   operation. Symbolic names and their associated values are given in the
 428:Generated_Source\PSoC5/USB.c **** *   following list.
 429:Generated_Source\PSoC5/USB.c **** *
 430:Generated_Source\PSoC5/USB.c **** *       *USB_3V_OPERATION* - Disable voltage regulator and pass-
 431:Generated_Source\PSoC5/USB.c **** *                                      through Vcc for pull-up
 432:Generated_Source\PSoC5/USB.c **** *
 433:Generated_Source\PSoC5/USB.c **** *       *USB_5V_OPERATION* - Enable voltage regulator and use
 434:Generated_Source\PSoC5/USB.c **** *                                      regulator for pull-up
 435:Generated_Source\PSoC5/USB.c **** *
 436:Generated_Source\PSoC5/USB.c **** *       *USB_DWR_POWER_OPERATION* - Enable or disable the voltage
 437:Generated_Source\PSoC5/USB.c **** *                                      regulator depending on the power supply
 438:Generated_Source\PSoC5/USB.c **** *                                      voltage configuration in the DWR tab.
 439:Generated_Source\PSoC5/USB.c **** *                                      For PSoC 3/5LP devices, the VDDD supply
 440:Generated_Source\PSoC5/USB.c **** *                                      voltage is considered and for PSoC 4A-L,
 441:Generated_Source\PSoC5/USB.c **** *                                      the VBUS supply voltage is considered.
 442:Generated_Source\PSoC5/USB.c **** *
 443:Generated_Source\PSoC5/USB.c **** * \globalvars
 444:Generated_Source\PSoC5/USB.c **** *   \ref USB_device
 445:Generated_Source\PSoC5/USB.c **** *   \ref USB_transferState
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 14


 446:Generated_Source\PSoC5/USB.c **** *   \ref USB_configuration
 447:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceStatus
 448:Generated_Source\PSoC5/USB.c **** *
 449:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceAddress - Contains the current device address. This
 450:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 451:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using a
 452:Generated_Source\PSoC5/USB.c **** *      SET_ADDRESS request.
 453:Generated_Source\PSoC5/USB.c **** *
 454:Generated_Source\PSoC5/USB.c **** *   \ref USB_lastPacketSize - Initialized to 0;
 455:Generated_Source\PSoC5/USB.c **** *
 456:Generated_Source\PSoC5/USB.c **** * \reentrant
 457:Generated_Source\PSoC5/USB.c **** *  No.
 458:Generated_Source\PSoC5/USB.c **** *
 459:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 460:Generated_Source\PSoC5/USB.c **** void USB_InitComponent(uint8 device, uint8 mode) 
 461:Generated_Source\PSoC5/USB.c **** {
 297              		.loc 1 461 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 8
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301 0000 80B5     		push	{r7, lr}
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 82B0     		sub	sp, sp, #8
 306              		.cfi_def_cfa_offset 16
 307 0004 00AF     		add	r7, sp, #0
 308              		.cfi_def_cfa_register 7
 309 0006 0346     		mov	r3, r0
 310 0008 0A46     		mov	r2, r1
 311 000a FB71     		strb	r3, [r7, #7]
 312 000c 1346     		mov	r3, r2
 313 000e BB71     		strb	r3, [r7, #6]
 462:Generated_Source\PSoC5/USB.c ****     /* Initialize _hidProtocol variable to comply with
 463:Generated_Source\PSoC5/USB.c ****     *  HID 7.2.6 Set_Protocol Request:
 464:Generated_Source\PSoC5/USB.c ****     *  "When initialized, all devices default to report protocol."
 465:Generated_Source\PSoC5/USB.c ****     */
 466:Generated_Source\PSoC5/USB.c **** #if defined(USB_ENABLE_HID_CLASS)
 467:Generated_Source\PSoC5/USB.c ****     uint8 i;
 468:Generated_Source\PSoC5/USB.c **** 
 469:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_INTERFACES_NUMBER; i++)
 470:Generated_Source\PSoC5/USB.c ****     {
 471:Generated_Source\PSoC5/USB.c ****         USB_hidProtocol[i] = USB_PROTOCOL_REPORT;
 472:Generated_Source\PSoC5/USB.c ****     }
 473:Generated_Source\PSoC5/USB.c **** #endif /* USB_ENABLE_HID_CLASS */
 474:Generated_Source\PSoC5/USB.c **** 
 475:Generated_Source\PSoC5/USB.c ****     /* Store device number to access descriptor. */
 476:Generated_Source\PSoC5/USB.c ****     USB_device = device;
 314              		.loc 1 476 0
 315 0010 2B4A     		ldr	r2, .L14
 316 0012 FB79     		ldrb	r3, [r7, #7]
 317 0014 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/USB.c **** 
 478:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 479:Generated_Source\PSoC5/USB.c ****     USB_transferState   = USB_TRANS_STATE_IDLE;
 318              		.loc 1 479 0
 319 0016 2B4B     		ldr	r3, .L14+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 15


 320 0018 0022     		movs	r2, #0
 321 001a 1A70     		strb	r2, [r3]
 480:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
 322              		.loc 1 480 0
 323 001c 2A4B     		ldr	r3, .L14+8
 324 001e 0022     		movs	r2, #0
 325 0020 1A70     		strb	r2, [r3]
 481:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 326              		.loc 1 481 0
 327 0022 2A4B     		ldr	r3, .L14+12
 328 0024 0022     		movs	r2, #0
 329 0026 1A70     		strb	r2, [r3]
 482:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 330              		.loc 1 482 0
 331 0028 294B     		ldr	r3, .L14+16
 332 002a 0022     		movs	r2, #0
 333 002c 1A70     		strb	r2, [r3]
 483:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 334              		.loc 1 483 0
 335 002e 294B     		ldr	r3, .L14+20
 336 0030 0022     		movs	r2, #0
 337 0032 1A70     		strb	r2, [r3]
 484:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 338              		.loc 1 484 0
 339 0034 284B     		ldr	r3, .L14+24
 340 0036 0022     		movs	r2, #0
 341 0038 1A70     		strb	r2, [r3]
 485:Generated_Source\PSoC5/USB.c ****     USB_lastPacketSize  = 0u;
 342              		.loc 1 485 0
 343 003a 284B     		ldr	r3, .L14+28
 344 003c 0022     		movs	r2, #0
 345 003e 1A70     		strb	r2, [r3]
 486:Generated_Source\PSoC5/USB.c **** 
 487:Generated_Source\PSoC5/USB.c ****     /* Enable component interrupts. */
 488:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 489:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_HI_VECT_NUM);
 490:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_MED_VECT_NUM);
 491:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_INTR_LO_VECT_NUM);
 492:Generated_Source\PSoC5/USB.c **** #else
 493:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_BUS_RESET_VECT_NUM);
 346              		.loc 1 493 0
 347 0040 274B     		ldr	r3, .L14+32
 348 0042 4FF40002 		mov	r2, #8388608
 349 0046 1A60     		str	r2, [r3]
 494:Generated_Source\PSoC5/USB.c ****     CyIntEnable(USB_EP_0_VECT_NUM);
 350              		.loc 1 494 0
 351 0048 254B     		ldr	r3, .L14+32
 352 004a 4FF08072 		mov	r2, #16777216
 353 004e 1A60     		str	r2, [r3]
 495:Generated_Source\PSoC5/USB.c **** 
 496:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 497:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_SOF_VECT_NUM);
 498:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 499:Generated_Source\PSoC5/USB.c **** 
 500:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 501:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_1_VECT_NUM);
 354              		.loc 1 501 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 16


 355 0050 234B     		ldr	r3, .L14+32
 356 0052 0222     		movs	r2, #2
 357 0054 1A60     		str	r2, [r3]
 502:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 503:Generated_Source\PSoC5/USB.c **** 
 504:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 505:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_2_VECT_NUM);
 358              		.loc 1 505 0
 359 0056 224B     		ldr	r3, .L14+32
 360 0058 0422     		movs	r2, #4
 361 005a 1A60     		str	r2, [r3]
 506:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 507:Generated_Source\PSoC5/USB.c **** 
 508:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 509:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_3_VECT_NUM);
 510:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 511:Generated_Source\PSoC5/USB.c **** 
 512:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 513:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_4_VECT_NUM);
 514:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 515:Generated_Source\PSoC5/USB.c **** 
 516:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 517:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_5_VECT_NUM);
 518:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 519:Generated_Source\PSoC5/USB.c **** 
 520:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 521:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_6_VECT_NUM);
 522:Generated_Source\PSoC5/USB.c ****     #endif /* USB_EP6_ISR_REMOVE */
 523:Generated_Source\PSoC5/USB.c **** 
 524:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 525:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_7_VECT_NUM);
 526:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 527:Generated_Source\PSoC5/USB.c **** 
 528:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 529:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_EP_8_VECT_NUM);
 530:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 531:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 532:Generated_Source\PSoC5/USB.c **** 
 533:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE)
 534:Generated_Source\PSoC5/USB.c ****     /* Enable ARB EP interrupt sources. */
 535:Generated_Source\PSoC5/USB.c ****     USB_ARB_INT_EN_REG = USB_DEFAULT_ARB_INT_EN;
 536:Generated_Source\PSoC5/USB.c **** 
 537:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC3 || CY_PSOC5)
 538:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_ARB_VECT_NUM);
 539:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC3 || CY_PSOC5) */
 540:Generated_Source\PSoC5/USB.c **** #endif   /* (USB_EP_MANAGEMENT_DMA && USB_ARB_ISR_ACTIVE) */
 541:Generated_Source\PSoC5/USB.c **** 
 542:Generated_Source\PSoC5/USB.c **** /* Arbiter configuration for DMA transfers. */
 543:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 544:Generated_Source\PSoC5/USB.c ****     /* Configure Arbiter for Manual or Auto DMA operation and clear configuration completion. */
 545:Generated_Source\PSoC5/USB.c ****     USB_ARB_CFG_REG = USB_DEFAULT_ARB_CFG;
 546:Generated_Source\PSoC5/USB.c **** 
 547:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC4)
 548:Generated_Source\PSoC5/USB.c ****         /* Enable DMA operation. */
 549:Generated_Source\PSoC5/USB.c ****         CyDmaEnable();
 550:Generated_Source\PSoC5/USB.c **** 
 551:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 17


 552:Generated_Source\PSoC5/USB.c ****             /* Change DMA priority to be highest. */
 553:Generated_Source\PSoC5/USB.c ****              CyIntSetPriority(CYDMA_INTR_NUMBER, USB_DMA_AUTO_INTR_PRIO);
 554:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 555:Generated_Source\PSoC5/USB.c ****     #endif /* (CY_PSOC4) */
 556:Generated_Source\PSoC5/USB.c **** 
 557:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO)
 558:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
 559:Generated_Source\PSoC5/USB.c ****             /* Enable DMA interrupt to handle DMA management. */
 560:Generated_Source\PSoC5/USB.c ****             CyIntEnable(CYDMA_INTR_NUMBER);
 561:Generated_Source\PSoC5/USB.c ****         #else
 562:Generated_Source\PSoC5/USB.c ****             #if (USB_EP_DMA_AUTO_OPT == 0u)
 563:Generated_Source\PSoC5/USB.c ****                 /* Initialize interrupts which handle verification of successful DMA transaction. *
 564:Generated_Source\PSoC5/USB.c ****                 USB_EP_DMA_Done_isr_StartEx(&USB_EP_DMA_DONE_ISR);
 565:Generated_Source\PSoC5/USB.c ****                 USB_EP17_DMA_Done_SR_InterruptEnable();
 566:Generated_Source\PSoC5/USB.c ****                 USB_EP8_DMA_Done_SR_InterruptEnable();
 567:Generated_Source\PSoC5/USB.c ****             #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
 568:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
 569:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
 570:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 571:Generated_Source\PSoC5/USB.c **** 
 572:Generated_Source\PSoC5/USB.c ****     /* Enable USB regulator depends on operation voltage. IMO Locking is enabled in Init(). */
 573:Generated_Source\PSoC5/USB.c ****     switch(mode)
 362              		.loc 1 573 0
 363 005c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 364 005e 002B     		cmp	r3, #0
 365 0060 02D0     		beq	.L10
 366 0062 012B     		cmp	r3, #1
 367 0064 09D0     		beq	.L11
 368 0066 11E0     		b	.L13
 369              	.L10:
 574:Generated_Source\PSoC5/USB.c ****     {
 575:Generated_Source\PSoC5/USB.c ****     case USB_3V_OPERATION:
 576:Generated_Source\PSoC5/USB.c ****         /* Disable regulator for 3V operation. */
 577:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG &= (uint8) ~USB_CR1_REG_ENABLE;
 370              		.loc 1 577 0
 371 0068 1E4A     		ldr	r2, .L14+36
 372 006a 1E4B     		ldr	r3, .L14+36
 373 006c 1B78     		ldrb	r3, [r3]
 374 006e DBB2     		uxtb	r3, r3
 375 0070 23F00103 		bic	r3, r3, #1
 376 0074 DBB2     		uxtb	r3, r3
 377 0076 1370     		strb	r3, [r2]
 578:Generated_Source\PSoC5/USB.c ****         break;
 378              		.loc 1 578 0
 379 0078 11E0     		b	.L12
 380              	.L11:
 579:Generated_Source\PSoC5/USB.c **** 
 580:Generated_Source\PSoC5/USB.c ****     case USB_5V_OPERATION:
 581:Generated_Source\PSoC5/USB.c ****         /* Enable regulator for 5V operation. */
 582:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG |= (uint8)  USB_CR1_REG_ENABLE;
 381              		.loc 1 582 0
 382 007a 1A4A     		ldr	r2, .L14+36
 383 007c 194B     		ldr	r3, .L14+36
 384 007e 1B78     		ldrb	r3, [r3]
 385 0080 DBB2     		uxtb	r3, r3
 386 0082 43F00103 		orr	r3, r3, #1
 387 0086 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 18


 388 0088 1370     		strb	r3, [r2]
 583:Generated_Source\PSoC5/USB.c ****         break;
 389              		.loc 1 583 0
 390 008a 08E0     		b	.L12
 391              	.L13:
 584:Generated_Source\PSoC5/USB.c **** 
 585:Generated_Source\PSoC5/USB.c ****     default: /* Check DWR settings of USB power supply. */
 586:Generated_Source\PSoC5/USB.c ****     #if (USB_VDDD_MV < USB_3500MV)
 587:Generated_Source\PSoC5/USB.c ****         /* Disable regulator for 3V operation. */
 588:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG &= (uint8) ~USB_CR1_REG_ENABLE;
 392              		.loc 1 588 0
 393 008c 154A     		ldr	r2, .L14+36
 394 008e 154B     		ldr	r3, .L14+36
 395 0090 1B78     		ldrb	r3, [r3]
 396 0092 DBB2     		uxtb	r3, r3
 397 0094 23F00103 		bic	r3, r3, #1
 398 0098 DBB2     		uxtb	r3, r3
 399 009a 1370     		strb	r3, [r2]
 589:Generated_Source\PSoC5/USB.c ****     #else
 590:Generated_Source\PSoC5/USB.c ****         /* Enable regulator for 5V operation. */
 591:Generated_Source\PSoC5/USB.c ****         USB_CR1_REG |= (uint8)  USB_CR1_REG_ENABLE;
 592:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_VDDD_MV < USB_3500MV) */
 593:Generated_Source\PSoC5/USB.c ****         break;
 400              		.loc 1 593 0
 401 009c 00BF     		nop
 402              	.L12:
 594:Generated_Source\PSoC5/USB.c ****     }
 595:Generated_Source\PSoC5/USB.c **** 
 596:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 597:Generated_Source\PSoC5/USB.c ****     /* Clear bus activity. */
 598:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG &= (uint32) ~USB_CR1_BUS_ACTIVITY;
 599:Generated_Source\PSoC5/USB.c **** 
 600:Generated_Source\PSoC5/USB.c ****     /* Clear EP0 count register. */
 601:Generated_Source\PSoC5/USB.c ****     USB_EP0_CNT_REG = USB_CLEAR_REG;
 602:Generated_Source\PSoC5/USB.c **** 
 603:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 604:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_NAK_IN_OUT;
 605:Generated_Source\PSoC5/USB.c **** 
 606:Generated_Source\PSoC5/USB.c ****     #if (USB_LPM_ACTIVE)
 607:Generated_Source\PSoC5/USB.c ****         if (NULL != USB_GetBOSPtr())
 608:Generated_Source\PSoC5/USB.c ****         {
 609:Generated_Source\PSoC5/USB.c ****             /* Enable LPM and acknowledge LPM packets for active device.
 610:Generated_Source\PSoC5/USB.c ****             * Reset NYET_EN and SUB_RESP bits in the LPM_CTRL register.
 611:Generated_Source\PSoC5/USB.c ****             */
 612:Generated_Source\PSoC5/USB.c ****             USB_LPM_CTRL_REG = (USB_LPM_CTRL_LPM_EN | \
 613:Generated_Source\PSoC5/USB.c ****                                              USB_LPM_CTRL_LPM_ACK_RESP);
 614:Generated_Source\PSoC5/USB.c ****         }
 615:Generated_Source\PSoC5/USB.c ****         else
 616:Generated_Source\PSoC5/USB.c ****         {
 617:Generated_Source\PSoC5/USB.c ****             /* Disable LPM for active device. */
 618:Generated_Source\PSoC5/USB.c ****             USB_LPM_CTRL_REG &= (uint32) ~USB_LPM_CTRL_LPM_EN;
 619:Generated_Source\PSoC5/USB.c ****         }
 620:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_LPM_ACTIVE) */
 621:Generated_Source\PSoC5/USB.c **** 
 622:Generated_Source\PSoC5/USB.c ****     /* Enable device to responds to USB traffic with address 0. */
 623:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
 624:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 19


 625:Generated_Source\PSoC5/USB.c **** #else
 626:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 627:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_STALL_IN_OUT;
 403              		.loc 1 627 0
 404 009e 124B     		ldr	r3, .L14+40
 405 00a0 0322     		movs	r2, #3
 406 00a2 1A70     		strb	r2, [r3]
 628:Generated_Source\PSoC5/USB.c **** 
 629:Generated_Source\PSoC5/USB.c ****     /* Enable device to respond to USB traffic with address 0. */
 630:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
 407              		.loc 1 630 0
 408 00a4 114B     		ldr	r3, .L14+44
 409 00a6 8022     		movs	r2, #128
 410 00a8 1A70     		strb	r2, [r3]
 631:Generated_Source\PSoC5/USB.c ****     CyDelayCycles(USB_WAIT_CR0_REG_STABILITY);
 411              		.loc 1 631 0
 412 00aa 0120     		movs	r0, #1
 413 00ac FFF7FEFF 		bl	CyDelayCycles
 632:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 633:Generated_Source\PSoC5/USB.c **** 
 634:Generated_Source\PSoC5/USB.c ****     /* Enable D+ pull-up and keep USB control on IO. */
 635:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG = USB_USBIO_CR1_USBPUEN;
 414              		.loc 1 635 0
 415 00b0 0F4B     		ldr	r3, .L14+48
 416 00b2 0422     		movs	r2, #4
 417 00b4 1A70     		strb	r2, [r3]
 636:Generated_Source\PSoC5/USB.c **** }
 418              		.loc 1 636 0
 419 00b6 00BF     		nop
 420 00b8 0837     		adds	r7, r7, #8
 421              		.cfi_def_cfa_offset 8
 422 00ba BD46     		mov	sp, r7
 423              		.cfi_def_cfa_register 13
 424              		@ sp needed
 425 00bc 80BD     		pop	{r7, pc}
 426              	.L15:
 427 00be 00BF     		.align	2
 428              	.L14:
 429 00c0 00000000 		.word	USB_device
 430 00c4 00000000 		.word	USB_transferState
 431 00c8 00000000 		.word	USB_configurationChanged
 432 00cc 00000000 		.word	USB_configuration
 433 00d0 00000000 		.word	USB_interfaceNumber
 434 00d4 00000000 		.word	USB_deviceAddress
 435 00d8 00000000 		.word	USB_deviceStatus
 436 00dc 00000000 		.word	USB_lastPacketSize
 437 00e0 00E100E0 		.word	-536813312
 438 00e4 09600040 		.word	1073766409
 439 00e8 28600040 		.word	1073766440
 440 00ec 08600040 		.word	1073766408
 441 00f0 12600040 		.word	1073766418
 442              		.cfi_endproc
 443              	.LFE2:
 444              		.size	USB_InitComponent, .-USB_InitComponent
 445              		.section	.text.USB_ReInitComponent,"ax",%progbits
 446              		.align	2
 447              		.global	USB_ReInitComponent
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 20


 448              		.thumb
 449              		.thumb_func
 450              		.type	USB_ReInitComponent, %function
 451              	USB_ReInitComponent:
 452              	.LFB3:
 637:Generated_Source\PSoC5/USB.c **** 
 638:Generated_Source\PSoC5/USB.c **** 
 639:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 640:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReInitComponent
 641:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 642:Generated_Source\PSoC5/USB.c **** *
 643:Generated_Source\PSoC5/USB.c **** *  This function reinitialize the component configuration and is
 644:Generated_Source\PSoC5/USB.c **** *  intend to be called from the Reset interrupt.
 645:Generated_Source\PSoC5/USB.c **** *
 646:Generated_Source\PSoC5/USB.c **** * \globalvars
 647:Generated_Source\PSoC5/USB.c **** *   USB_device - Contains the device number of the desired Device
 648:Generated_Source\PSoC5/USB.c **** *        Descriptor. The device number can be found in the Device Descriptor tab
 649:Generated_Source\PSoC5/USB.c **** *       of the Configure dialog, under the settings of the desired Device Descriptor,
 650:Generated_Source\PSoC5/USB.c **** *       in the Device Number field.
 651:Generated_Source\PSoC5/USB.c **** *   USB_transferState - This variable is used by the communication
 652:Generated_Source\PSoC5/USB.c **** *       functions to handle the current transfer state. Initialized to
 653:Generated_Source\PSoC5/USB.c **** *       TRANS_STATE_IDLE in this API.
 654:Generated_Source\PSoC5/USB.c **** *   USB_configuration - Contains the current configuration number
 655:Generated_Source\PSoC5/USB.c **** *       set by the Host using a SET_CONFIGURATION request.
 656:Generated_Source\PSoC5/USB.c **** *       Initialized to zero in this API.
 657:Generated_Source\PSoC5/USB.c **** *   USB_deviceAddress - Contains the current device address. This
 658:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 659:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using
 660:Generated_Source\PSoC5/USB.c **** *      a SET_ADDRESS request.
 661:Generated_Source\PSoC5/USB.c **** *   USB_deviceStatus - Initialized to 0.
 662:Generated_Source\PSoC5/USB.c **** *       This is a two-bit variable which contains the power status in the first bit
 663:Generated_Source\PSoC5/USB.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and the remote
 664:Generated_Source\PSoC5/USB.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in the second bit.
 665:Generated_Source\PSoC5/USB.c **** *   USB_lastPacketSize - Initialized to 0;
 666:Generated_Source\PSoC5/USB.c **** *
 667:Generated_Source\PSoC5/USB.c **** * \reentrant
 668:Generated_Source\PSoC5/USB.c **** *  No.
 669:Generated_Source\PSoC5/USB.c **** *
 670:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 671:Generated_Source\PSoC5/USB.c **** void USB_ReInitComponent(void) 
 672:Generated_Source\PSoC5/USB.c **** {
 453              		.loc 1 672 0
 454              		.cfi_startproc
 455              		@ args = 0, pretend = 0, frame = 0
 456              		@ frame_needed = 1, uses_anonymous_args = 0
 457              		@ link register save eliminated.
 458 0000 80B4     		push	{r7}
 459              		.cfi_def_cfa_offset 4
 460              		.cfi_offset 7, -4
 461 0002 00AF     		add	r7, sp, #0
 462              		.cfi_def_cfa_register 7
 673:Generated_Source\PSoC5/USB.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 674:Generated_Source\PSoC5/USB.c ****     *  Request: "When initialized, all devices default to report protocol."
 675:Generated_Source\PSoC5/USB.c ****     */
 676:Generated_Source\PSoC5/USB.c **** #if defined(USB_ENABLE_HID_CLASS)
 677:Generated_Source\PSoC5/USB.c ****     uint8 i;
 678:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 21


 679:Generated_Source\PSoC5/USB.c ****     for (i = 0u; i < USB_MAX_INTERFACES_NUMBER; i++)
 680:Generated_Source\PSoC5/USB.c ****     {
 681:Generated_Source\PSoC5/USB.c ****         USB_hidProtocol[i] = USB_PROTOCOL_REPORT;
 682:Generated_Source\PSoC5/USB.c ****     }
 683:Generated_Source\PSoC5/USB.c **** #endif /* USB_ENABLE_HID_CLASS */
 684:Generated_Source\PSoC5/USB.c **** 
 685:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 686:Generated_Source\PSoC5/USB.c ****     USB_transferState   = USB_TRANS_STATE_IDLE;
 463              		.loc 1 686 0
 464 0004 0F4B     		ldr	r3, .L17
 465 0006 0022     		movs	r2, #0
 466 0008 1A70     		strb	r2, [r3]
 687:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
 467              		.loc 1 687 0
 468 000a 0F4B     		ldr	r3, .L17+4
 469 000c 0022     		movs	r2, #0
 470 000e 1A70     		strb	r2, [r3]
 688:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 471              		.loc 1 688 0
 472 0010 0E4B     		ldr	r3, .L17+8
 473 0012 0022     		movs	r2, #0
 474 0014 1A70     		strb	r2, [r3]
 689:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 475              		.loc 1 689 0
 476 0016 0E4B     		ldr	r3, .L17+12
 477 0018 0022     		movs	r2, #0
 478 001a 1A70     		strb	r2, [r3]
 690:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 479              		.loc 1 690 0
 480 001c 0D4B     		ldr	r3, .L17+16
 481 001e 0022     		movs	r2, #0
 482 0020 1A70     		strb	r2, [r3]
 691:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 483              		.loc 1 691 0
 484 0022 0D4B     		ldr	r3, .L17+20
 485 0024 0022     		movs	r2, #0
 486 0026 1A70     		strb	r2, [r3]
 692:Generated_Source\PSoC5/USB.c ****     USB_lastPacketSize  = 0u;
 487              		.loc 1 692 0
 488 0028 0C4B     		ldr	r3, .L17+24
 489 002a 0022     		movs	r2, #0
 490 002c 1A70     		strb	r2, [r3]
 693:Generated_Source\PSoC5/USB.c **** 
 694:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 695:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, NAK IN/OUT. */
 696:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_NAK_IN_OUT;
 697:Generated_Source\PSoC5/USB.c **** #else
 698:Generated_Source\PSoC5/USB.c ****     /* Set EP0.CR: ACK Setup, STALL IN/OUT. */
 699:Generated_Source\PSoC5/USB.c ****     USB_EP0_CR_REG = USB_MODE_STALL_IN_OUT;
 491              		.loc 1 699 0
 492 002e 0C4B     		ldr	r3, .L17+28
 493 0030 0322     		movs	r2, #3
 494 0032 1A70     		strb	r2, [r3]
 700:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 701:Generated_Source\PSoC5/USB.c **** 
 702:Generated_Source\PSoC5/USB.c ****     /* Enable device to respond to USB traffic with address 0. */
 703:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG = USB_DEFUALT_CR0;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 22


 495              		.loc 1 703 0
 496 0034 0B4B     		ldr	r3, .L17+32
 497 0036 8022     		movs	r2, #128
 498 0038 1A70     		strb	r2, [r3]
 704:Generated_Source\PSoC5/USB.c **** }
 499              		.loc 1 704 0
 500 003a 00BF     		nop
 501 003c BD46     		mov	sp, r7
 502              		.cfi_def_cfa_register 13
 503              		@ sp needed
 504 003e 80BC     		pop	{r7}
 505              		.cfi_restore 7
 506              		.cfi_def_cfa_offset 0
 507 0040 7047     		bx	lr
 508              	.L18:
 509 0042 00BF     		.align	2
 510              	.L17:
 511 0044 00000000 		.word	USB_transferState
 512 0048 00000000 		.word	USB_configurationChanged
 513 004c 00000000 		.word	USB_configuration
 514 0050 00000000 		.word	USB_interfaceNumber
 515 0054 00000000 		.word	USB_deviceAddress
 516 0058 00000000 		.word	USB_deviceStatus
 517 005c 00000000 		.word	USB_lastPacketSize
 518 0060 28600040 		.word	1073766440
 519 0064 08600040 		.word	1073766408
 520              		.cfi_endproc
 521              	.LFE3:
 522              		.size	USB_ReInitComponent, .-USB_ReInitComponent
 523              		.section	.text.USB_Stop,"ax",%progbits
 524              		.align	2
 525              		.global	USB_Stop
 526              		.thumb
 527              		.thumb_func
 528              		.type	USB_Stop, %function
 529              	USB_Stop:
 530              	.LFB4:
 705:Generated_Source\PSoC5/USB.c **** 
 706:Generated_Source\PSoC5/USB.c **** 
 707:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 708:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Stop
 709:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 710:Generated_Source\PSoC5/USB.c **** *
 711:Generated_Source\PSoC5/USB.c **** *  This function shuts down the USB function including to release
 712:Generated_Source\PSoC5/USB.c **** *  the D+ pull-up and disabling the SIE.
 713:Generated_Source\PSoC5/USB.c **** *
 714:Generated_Source\PSoC5/USB.c **** * \globalvars
 715:Generated_Source\PSoC5/USB.c **** *   \ref USB_configuration
 716:Generated_Source\PSoC5/USB.c **** *
 717:Generated_Source\PSoC5/USB.c **** *   USB_deviceAddress - Contains the current device address. This
 718:Generated_Source\PSoC5/USB.c **** *       variable is initialized to zero in this API. The Host starts to communicate
 719:Generated_Source\PSoC5/USB.c **** *      to the device with address 0 and then sets it to a whatever value using
 720:Generated_Source\PSoC5/USB.c **** *      a SET_ADDRESS request.
 721:Generated_Source\PSoC5/USB.c **** *
 722:Generated_Source\PSoC5/USB.c **** *   \ref USB_deviceStatus
 723:Generated_Source\PSoC5/USB.c **** *
 724:Generated_Source\PSoC5/USB.c **** *   \ref USB_configurationChanged
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 23


 725:Generated_Source\PSoC5/USB.c **** *
 726:Generated_Source\PSoC5/USB.c **** *   USB_intiVar -  This variable is set to zero
 727:Generated_Source\PSoC5/USB.c **** *
 728:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 729:Generated_Source\PSoC5/USB.c **** void USB_Stop(void) 
 730:Generated_Source\PSoC5/USB.c **** {
 531              		.loc 1 730 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535 0000 80B5     		push	{r7, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 82B0     		sub	sp, sp, #8
 540              		.cfi_def_cfa_offset 16
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 731:Generated_Source\PSoC5/USB.c ****     uint8 enableInterrupts;
 732:Generated_Source\PSoC5/USB.c **** 
 733:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 734:Generated_Source\PSoC5/USB.c ****     /* Stop all DMA channels. */
 735:Generated_Source\PSoC5/USB.c ****     USB_Stop_DMA(USB_MAX_EP);
 736:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
 737:Generated_Source\PSoC5/USB.c **** 
 738:Generated_Source\PSoC5/USB.c ****     enableInterrupts = CyEnterCriticalSection();
 543              		.loc 1 738 0
 544 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 545 000a 0346     		mov	r3, r0
 546 000c FB71     		strb	r3, [r7, #7]
 739:Generated_Source\PSoC5/USB.c **** 
 740:Generated_Source\PSoC5/USB.c ****     /* Disable USB IP to respond to USB traffic. */
 741:Generated_Source\PSoC5/USB.c ****     USB_CR0_REG &= (uint8) ~USB_CR0_ENABLE;
 547              		.loc 1 741 0
 548 000e 2F4A     		ldr	r2, .L20
 549 0010 2E4B     		ldr	r3, .L20
 550 0012 1B78     		ldrb	r3, [r3]
 551 0014 DBB2     		uxtb	r3, r3
 552 0016 03F07F03 		and	r3, r3, #127
 553 001a DBB2     		uxtb	r3, r3
 554 001c 1370     		strb	r3, [r2]
 742:Generated_Source\PSoC5/USB.c **** 
 743:Generated_Source\PSoC5/USB.c ****     /* Disable D+ pull-up. */
 744:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR1_REG &= (uint8) ~ USB_USBIO_CR1_USBPUEN;
 555              		.loc 1 744 0
 556 001e 2C4A     		ldr	r2, .L20+4
 557 0020 2B4B     		ldr	r3, .L20+4
 558 0022 1B78     		ldrb	r3, [r3]
 559 0024 DBB2     		uxtb	r3, r3
 560 0026 23F00403 		bic	r3, r3, #4
 561 002a DBB2     		uxtb	r3, r3
 562 002c 1370     		strb	r3, [r2]
 745:Generated_Source\PSoC5/USB.c **** 
 746:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 747:Generated_Source\PSoC5/USB.c ****     /* Disable USBFS block. */
 748:Generated_Source\PSoC5/USB.c ****     USB_POWER_CTRL_REG &= (uint32) ~USB_POWER_CTRL_ENABLE;
 749:Generated_Source\PSoC5/USB.c **** #else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 24


 750:Generated_Source\PSoC5/USB.c ****     /* Clear power active and standby mode templates. */
 751:Generated_Source\PSoC5/USB.c ****     USB_PM_ACT_CFG_REG  &= (uint8) ~USB_PM_ACT_EN_FSUSB;
 563              		.loc 1 751 0
 564 002e 294A     		ldr	r2, .L20+8
 565 0030 284B     		ldr	r3, .L20+8
 566 0032 1B78     		ldrb	r3, [r3]
 567 0034 DBB2     		uxtb	r3, r3
 568 0036 23F00103 		bic	r3, r3, #1
 569 003a DBB2     		uxtb	r3, r3
 570 003c 1370     		strb	r3, [r2]
 752:Generated_Source\PSoC5/USB.c ****     USB_PM_STBY_CFG_REG &= (uint8) ~USB_PM_STBY_EN_FSUSB;
 571              		.loc 1 752 0
 572 003e 264A     		ldr	r2, .L20+12
 573 0040 254B     		ldr	r3, .L20+12
 574 0042 1B78     		ldrb	r3, [r3]
 575 0044 DBB2     		uxtb	r3, r3
 576 0046 23F00103 		bic	r3, r3, #1
 577 004a DBB2     		uxtb	r3, r3
 578 004c 1370     		strb	r3, [r2]
 753:Generated_Source\PSoC5/USB.c **** 
 754:Generated_Source\PSoC5/USB.c ****     /* Ensure single-ended disable bits are high (PRT15.INP_DIS[7:6])
 755:Generated_Source\PSoC5/USB.c ****      * (input receiver disabled). */
 756:Generated_Source\PSoC5/USB.c ****     USB_DM_INP_DIS_REG |= (uint8) USB_DM_MASK;
 579              		.loc 1 756 0
 580 004e 234A     		ldr	r2, .L20+16
 581 0050 224B     		ldr	r3, .L20+16
 582 0052 1B78     		ldrb	r3, [r3]
 583 0054 DBB2     		uxtb	r3, r3
 584 0056 63F07F03 		orn	r3, r3, #127
 585 005a DBB2     		uxtb	r3, r3
 586 005c 1370     		strb	r3, [r2]
 757:Generated_Source\PSoC5/USB.c ****     USB_DP_INP_DIS_REG |= (uint8) USB_DP_MASK;
 587              		.loc 1 757 0
 588 005e 1F4A     		ldr	r2, .L20+16
 589 0060 1E4B     		ldr	r3, .L20+16
 590 0062 1B78     		ldrb	r3, [r3]
 591 0064 DBB2     		uxtb	r3, r3
 592 0066 43F04003 		orr	r3, r3, #64
 593 006a DBB2     		uxtb	r3, r3
 594 006c 1370     		strb	r3, [r2]
 758:Generated_Source\PSoC5/USB.c **** 
 759:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 760:Generated_Source\PSoC5/USB.c **** 
 761:Generated_Source\PSoC5/USB.c ****     CyExitCriticalSection(enableInterrupts);
 595              		.loc 1 761 0
 596 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 597 0070 1846     		mov	r0, r3
 598 0072 FFF7FEFF 		bl	CyExitCriticalSection
 762:Generated_Source\PSoC5/USB.c **** 
 763:Generated_Source\PSoC5/USB.c ****     /* Disable component interrupts. */
 764:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
 765:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_HI_VECT_NUM);
 766:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_LO_VECT_NUM);
 767:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_INTR_MED_VECT_NUM);
 768:Generated_Source\PSoC5/USB.c **** #else
 769:Generated_Source\PSoC5/USB.c **** 
 770:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_BUS_RESET_VECT_NUM);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 25


 599              		.loc 1 770 0
 600 0076 1A4B     		ldr	r3, .L20+20
 601 0078 4FF40002 		mov	r2, #8388608
 602 007c 1A60     		str	r2, [r3]
 771:Generated_Source\PSoC5/USB.c ****     CyIntDisable(USB_EP_0_VECT_NUM);
 603              		.loc 1 771 0
 604 007e 184B     		ldr	r3, .L20+20
 605 0080 4FF08072 		mov	r2, #16777216
 606 0084 1A60     		str	r2, [r3]
 772:Generated_Source\PSoC5/USB.c **** 
 773:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
 774:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_SOF_VECT_NUM);
 775:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
 776:Generated_Source\PSoC5/USB.c **** 
 777:Generated_Source\PSoC5/USB.c ****     #if (USB_EP1_ISR_ACTIVE)
 778:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_1_VECT_NUM);
 607              		.loc 1 778 0
 608 0086 164B     		ldr	r3, .L20+20
 609 0088 0222     		movs	r2, #2
 610 008a 1A60     		str	r2, [r3]
 779:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP1_ISR_ACTIVE) */
 780:Generated_Source\PSoC5/USB.c **** 
 781:Generated_Source\PSoC5/USB.c ****     #if (USB_EP2_ISR_ACTIVE)
 782:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_2_VECT_NUM);
 611              		.loc 1 782 0
 612 008c 144B     		ldr	r3, .L20+20
 613 008e 0422     		movs	r2, #4
 614 0090 1A60     		str	r2, [r3]
 783:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP2_ISR_ACTIVE) */
 784:Generated_Source\PSoC5/USB.c **** 
 785:Generated_Source\PSoC5/USB.c ****     #if (USB_EP3_ISR_ACTIVE)
 786:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_3_VECT_NUM);
 787:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP3_ISR_ACTIVE) */
 788:Generated_Source\PSoC5/USB.c **** 
 789:Generated_Source\PSoC5/USB.c ****     #if (USB_EP4_ISR_ACTIVE)
 790:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_4_VECT_NUM);
 791:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP4_ISR_ACTIVE) */
 792:Generated_Source\PSoC5/USB.c **** 
 793:Generated_Source\PSoC5/USB.c ****     #if (USB_EP5_ISR_ACTIVE)
 794:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_5_VECT_NUM);
 795:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP5_ISR_ACTIVE) */
 796:Generated_Source\PSoC5/USB.c **** 
 797:Generated_Source\PSoC5/USB.c ****     #if (USB_EP6_ISR_ACTIVE)
 798:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_6_VECT_NUM);
 799:Generated_Source\PSoC5/USB.c ****     #endif /* USB_EP6_ISR_REMOVE */
 800:Generated_Source\PSoC5/USB.c **** 
 801:Generated_Source\PSoC5/USB.c ****     #if (USB_EP7_ISR_ACTIVE)
 802:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_7_VECT_NUM);
 803:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP7_ISR_ACTIVE) */
 804:Generated_Source\PSoC5/USB.c **** 
 805:Generated_Source\PSoC5/USB.c ****     #if (USB_EP8_ISR_ACTIVE)
 806:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_EP_8_VECT_NUM);
 807:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP8_ISR_ACTIVE) */
 808:Generated_Source\PSoC5/USB.c **** 
 809:Generated_Source\PSoC5/USB.c ****     #if (USB_DP_ISR_ACTIVE)
 810:Generated_Source\PSoC5/USB.c ****         /* Clear active mode Dp interrupt source history. */
 811:Generated_Source\PSoC5/USB.c ****         (void) USB_Dp_ClearInterrupt();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 26


 615              		.loc 1 811 0
 616 0092 FFF7FEFF 		bl	USB_Dp_ClearInterrupt
 812:Generated_Source\PSoC5/USB.c ****         CyIntClearPending(USB_DP_INTC_VECT_NUM);
 617              		.loc 1 812 0
 618 0096 134B     		ldr	r3, .L20+24
 619 0098 4FF48052 		mov	r2, #4096
 620 009c 1A60     		str	r2, [r3]
 813:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DP_ISR_ACTIVE). */
 814:Generated_Source\PSoC5/USB.c **** 
 815:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
 816:Generated_Source\PSoC5/USB.c **** 
 817:Generated_Source\PSoC5/USB.c ****     /* Reset component internal variables. */
 818:Generated_Source\PSoC5/USB.c ****     USB_configurationChanged = 0u;
 621              		.loc 1 818 0
 622 009e 124B     		ldr	r3, .L20+28
 623 00a0 0022     		movs	r2, #0
 624 00a2 1A70     		strb	r2, [r3]
 819:Generated_Source\PSoC5/USB.c ****     USB_configuration   = 0u;
 625              		.loc 1 819 0
 626 00a4 114B     		ldr	r3, .L20+32
 627 00a6 0022     		movs	r2, #0
 628 00a8 1A70     		strb	r2, [r3]
 820:Generated_Source\PSoC5/USB.c ****     USB_interfaceNumber = 0u;
 629              		.loc 1 820 0
 630 00aa 114B     		ldr	r3, .L20+36
 631 00ac 0022     		movs	r2, #0
 632 00ae 1A70     		strb	r2, [r3]
 821:Generated_Source\PSoC5/USB.c ****     USB_deviceAddress   = 0u;
 633              		.loc 1 821 0
 634 00b0 104B     		ldr	r3, .L20+40
 635 00b2 0022     		movs	r2, #0
 636 00b4 1A70     		strb	r2, [r3]
 822:Generated_Source\PSoC5/USB.c ****     USB_deviceStatus    = 0u;
 637              		.loc 1 822 0
 638 00b6 104B     		ldr	r3, .L20+44
 639 00b8 0022     		movs	r2, #0
 640 00ba 1A70     		strb	r2, [r3]
 823:Generated_Source\PSoC5/USB.c **** 
 824:Generated_Source\PSoC5/USB.c ****     /* It is mandatory for correct device startup. */
 825:Generated_Source\PSoC5/USB.c ****     USB_initVar = 0u;
 641              		.loc 1 825 0
 642 00bc 0F4B     		ldr	r3, .L20+48
 643 00be 0022     		movs	r2, #0
 644 00c0 1A70     		strb	r2, [r3]
 826:Generated_Source\PSoC5/USB.c **** }
 645              		.loc 1 826 0
 646 00c2 00BF     		nop
 647 00c4 0837     		adds	r7, r7, #8
 648              		.cfi_def_cfa_offset 8
 649 00c6 BD46     		mov	sp, r7
 650              		.cfi_def_cfa_register 13
 651              		@ sp needed
 652 00c8 80BD     		pop	{r7, pc}
 653              	.L21:
 654 00ca 00BF     		.align	2
 655              	.L20:
 656 00cc 08600040 		.word	1073766408
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 27


 657 00d0 12600040 		.word	1073766418
 658 00d4 A5430040 		.word	1073759141
 659 00d8 B5430040 		.word	1073759157
 660 00dc F8510040 		.word	1073762808
 661 00e0 80E100E0 		.word	-536813184
 662 00e4 80E200E0 		.word	-536812928
 663 00e8 00000000 		.word	USB_configurationChanged
 664 00ec 00000000 		.word	USB_configuration
 665 00f0 00000000 		.word	USB_interfaceNumber
 666 00f4 00000000 		.word	USB_deviceAddress
 667 00f8 00000000 		.word	USB_deviceStatus
 668 00fc 00000000 		.word	USB_initVar
 669              		.cfi_endproc
 670              	.LFE4:
 671              		.size	USB_Stop, .-USB_Stop
 672              		.section	.text.USB_CheckActivity,"ax",%progbits
 673              		.align	2
 674              		.global	USB_CheckActivity
 675              		.thumb
 676              		.thumb_func
 677              		.type	USB_CheckActivity, %function
 678              	USB_CheckActivity:
 679              	.LFB5:
 827:Generated_Source\PSoC5/USB.c **** 
 828:Generated_Source\PSoC5/USB.c **** 
 829:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 830:Generated_Source\PSoC5/USB.c **** * Function Name: USB_CheckActivity
 831:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 832:Generated_Source\PSoC5/USB.c **** *
 833:Generated_Source\PSoC5/USB.c **** *  This function returns the activity status of the bus. It clears the hardware
 834:Generated_Source\PSoC5/USB.c **** *  status to provide updated status on the next call of this function. It
 835:Generated_Source\PSoC5/USB.c **** *  provides a way to determine whether any USB bus activity occurred. The
 836:Generated_Source\PSoC5/USB.c **** *  application should use this function to determine if the USB suspend
 837:Generated_Source\PSoC5/USB.c **** *  conditions are met.
 838:Generated_Source\PSoC5/USB.c **** *
 839:Generated_Source\PSoC5/USB.c **** *
 840:Generated_Source\PSoC5/USB.c **** * \return
 841:Generated_Source\PSoC5/USB.c **** *  cystatus: Status of the bus since the last call of the function.
 842:Generated_Source\PSoC5/USB.c **** *  Return Value |   Description
 843:Generated_Source\PSoC5/USB.c **** *  -------------|---------------------------------------------------------------
 844:Generated_Source\PSoC5/USB.c **** *  1            |Bus activity was detected since the last call to this function
 845:Generated_Source\PSoC5/USB.c **** *  0            |Bus activity was not detected since the last call to this function
 846:Generated_Source\PSoC5/USB.c **** *
 847:Generated_Source\PSoC5/USB.c **** *
 848:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 849:Generated_Source\PSoC5/USB.c **** uint8 USB_CheckActivity(void) 
 850:Generated_Source\PSoC5/USB.c **** {
 680              		.loc 1 850 0
 681              		.cfi_startproc
 682              		@ args = 0, pretend = 0, frame = 8
 683              		@ frame_needed = 1, uses_anonymous_args = 0
 684              		@ link register save eliminated.
 685 0000 80B4     		push	{r7}
 686              		.cfi_def_cfa_offset 4
 687              		.cfi_offset 7, -4
 688 0002 83B0     		sub	sp, sp, #12
 689              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 28


 690 0004 00AF     		add	r7, sp, #0
 691              		.cfi_def_cfa_register 7
 851:Generated_Source\PSoC5/USB.c ****     uint8 cr1Reg = USB_CR1_REG;
 692              		.loc 1 851 0
 693 0006 0B4B     		ldr	r3, .L26
 694 0008 1B78     		ldrb	r3, [r3]
 695 000a FB71     		strb	r3, [r7, #7]
 852:Generated_Source\PSoC5/USB.c **** 
 853:Generated_Source\PSoC5/USB.c ****     /* Clear bus activity. */
 854:Generated_Source\PSoC5/USB.c ****     USB_CR1_REG = (cr1Reg & (uint8) ~USB_CR1_BUS_ACTIVITY);
 696              		.loc 1 854 0
 697 000c 094A     		ldr	r2, .L26
 698 000e FB79     		ldrb	r3, [r7, #7]
 699 0010 23F00403 		bic	r3, r3, #4
 700 0014 DBB2     		uxtb	r3, r3
 701 0016 1370     		strb	r3, [r2]
 855:Generated_Source\PSoC5/USB.c **** 
 856:Generated_Source\PSoC5/USB.c ****     /* Get bus activity. */
 857:Generated_Source\PSoC5/USB.c ****     return ((0u != (cr1Reg & USB_CR1_BUS_ACTIVITY)) ? (1u) : (0u));
 702              		.loc 1 857 0
 703 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 704 001a 03F00403 		and	r3, r3, #4
 705 001e 002B     		cmp	r3, #0
 706 0020 01D0     		beq	.L23
 707              		.loc 1 857 0 is_stmt 0 discriminator 1
 708 0022 0123     		movs	r3, #1
 709 0024 00E0     		b	.L24
 710              	.L23:
 711              		.loc 1 857 0 discriminator 2
 712 0026 0023     		movs	r3, #0
 713              	.L24:
 858:Generated_Source\PSoC5/USB.c **** }
 714              		.loc 1 858 0 is_stmt 1 discriminator 4
 715 0028 1846     		mov	r0, r3
 716 002a 0C37     		adds	r7, r7, #12
 717              		.cfi_def_cfa_offset 4
 718 002c BD46     		mov	sp, r7
 719              		.cfi_def_cfa_register 13
 720              		@ sp needed
 721 002e 80BC     		pop	{r7}
 722              		.cfi_restore 7
 723              		.cfi_def_cfa_offset 0
 724 0030 7047     		bx	lr
 725              	.L27:
 726 0032 00BF     		.align	2
 727              	.L26:
 728 0034 09600040 		.word	1073766409
 729              		.cfi_endproc
 730              	.LFE5:
 731              		.size	USB_CheckActivity, .-USB_CheckActivity
 732              		.section	.text.USB_GetConfiguration,"ax",%progbits
 733              		.align	2
 734              		.global	USB_GetConfiguration
 735              		.thumb
 736              		.thumb_func
 737              		.type	USB_GetConfiguration, %function
 738              	USB_GetConfiguration:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 29


 739              	.LFB6:
 859:Generated_Source\PSoC5/USB.c **** 
 860:Generated_Source\PSoC5/USB.c **** 
 861:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 862:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetConfiguration
 863:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 864:Generated_Source\PSoC5/USB.c **** *
 865:Generated_Source\PSoC5/USB.c **** *  This function gets the current configuration of the USB device.
 866:Generated_Source\PSoC5/USB.c **** *
 867:Generated_Source\PSoC5/USB.c **** * \return
 868:Generated_Source\PSoC5/USB.c **** *  Returns the currently assigned configuration. Returns 0 if the device
 869:Generated_Source\PSoC5/USB.c **** *  is not configured
 870:Generated_Source\PSoC5/USB.c **** *
 871:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 872:Generated_Source\PSoC5/USB.c **** uint8 USB_GetConfiguration(void) 
 873:Generated_Source\PSoC5/USB.c **** {
 740              		.loc 1 873 0
 741              		.cfi_startproc
 742              		@ args = 0, pretend = 0, frame = 0
 743              		@ frame_needed = 1, uses_anonymous_args = 0
 744              		@ link register save eliminated.
 745 0000 80B4     		push	{r7}
 746              		.cfi_def_cfa_offset 4
 747              		.cfi_offset 7, -4
 748 0002 00AF     		add	r7, sp, #0
 749              		.cfi_def_cfa_register 7
 874:Generated_Source\PSoC5/USB.c ****     return (USB_configuration);
 750              		.loc 1 874 0
 751 0004 034B     		ldr	r3, .L30
 752 0006 1B78     		ldrb	r3, [r3]
 753 0008 DBB2     		uxtb	r3, r3
 875:Generated_Source\PSoC5/USB.c **** }
 754              		.loc 1 875 0
 755 000a 1846     		mov	r0, r3
 756 000c BD46     		mov	sp, r7
 757              		.cfi_def_cfa_register 13
 758              		@ sp needed
 759 000e 80BC     		pop	{r7}
 760              		.cfi_restore 7
 761              		.cfi_def_cfa_offset 0
 762 0010 7047     		bx	lr
 763              	.L31:
 764 0012 00BF     		.align	2
 765              	.L30:
 766 0014 00000000 		.word	USB_configuration
 767              		.cfi_endproc
 768              	.LFE6:
 769              		.size	USB_GetConfiguration, .-USB_GetConfiguration
 770              		.section	.text.USB_IsConfigurationChanged,"ax",%progbits
 771              		.align	2
 772              		.global	USB_IsConfigurationChanged
 773              		.thumb
 774              		.thumb_func
 775              		.type	USB_IsConfigurationChanged, %function
 776              	USB_IsConfigurationChanged:
 777              	.LFB7:
 876:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 30


 877:Generated_Source\PSoC5/USB.c **** 
 878:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 879:Generated_Source\PSoC5/USB.c **** * Function Name: USB_IsConfigurationChanged
 880:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 881:Generated_Source\PSoC5/USB.c **** *
 882:Generated_Source\PSoC5/USB.c **** *  This function returns the clear-on-read configuration state.  It is useful
 883:Generated_Source\PSoC5/USB.c **** *  when the host sends double SET_CONFIGURATION request with the same 
 884:Generated_Source\PSoC5/USB.c **** *  configuration number or changes alternate settings of the interface. 
 885:Generated_Source\PSoC5/USB.c **** *  After configuration has been changed the OUT endpoints must be enabled and IN 
 886:Generated_Source\PSoC5/USB.c **** *  endpoint must be loaded with data to start communication with the host.
 887:Generated_Source\PSoC5/USB.c **** *
 888:Generated_Source\PSoC5/USB.c **** * \return
 889:Generated_Source\PSoC5/USB.c **** *  None-zero value when new configuration has been changed, otherwise zero is
 890:Generated_Source\PSoC5/USB.c **** *  returned.
 891:Generated_Source\PSoC5/USB.c **** *
 892:Generated_Source\PSoC5/USB.c **** * \globalvars
 893:Generated_Source\PSoC5/USB.c **** *
 894:Generated_Source\PSoC5/USB.c **** *  \ref USB_configurationChanged - This variable is set to 1 after
 895:Generated_Source\PSoC5/USB.c **** *   a SET_CONFIGURATION request and cleared in this function.
 896:Generated_Source\PSoC5/USB.c **** *
 897:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 898:Generated_Source\PSoC5/USB.c **** uint8 USB_IsConfigurationChanged(void) 
 899:Generated_Source\PSoC5/USB.c **** {
 778              		.loc 1 899 0
 779              		.cfi_startproc
 780              		@ args = 0, pretend = 0, frame = 8
 781              		@ frame_needed = 1, uses_anonymous_args = 0
 782              		@ link register save eliminated.
 783 0000 80B4     		push	{r7}
 784              		.cfi_def_cfa_offset 4
 785              		.cfi_offset 7, -4
 786 0002 83B0     		sub	sp, sp, #12
 787              		.cfi_def_cfa_offset 16
 788 0004 00AF     		add	r7, sp, #0
 789              		.cfi_def_cfa_register 7
 900:Generated_Source\PSoC5/USB.c ****     uint8 res = 0u;
 790              		.loc 1 900 0
 791 0006 0023     		movs	r3, #0
 792 0008 FB71     		strb	r3, [r7, #7]
 901:Generated_Source\PSoC5/USB.c **** 
 902:Generated_Source\PSoC5/USB.c ****     if (USB_configurationChanged != 0u)
 793              		.loc 1 902 0
 794 000a 084B     		ldr	r3, .L35
 795 000c 1B78     		ldrb	r3, [r3]
 796 000e DBB2     		uxtb	r3, r3
 797 0010 002B     		cmp	r3, #0
 798 0012 05D0     		beq	.L33
 903:Generated_Source\PSoC5/USB.c ****     {
 904:Generated_Source\PSoC5/USB.c ****         res = USB_configurationChanged;
 799              		.loc 1 904 0
 800 0014 054B     		ldr	r3, .L35
 801 0016 1B78     		ldrb	r3, [r3]
 802 0018 FB71     		strb	r3, [r7, #7]
 905:Generated_Source\PSoC5/USB.c ****         USB_configurationChanged = 0u;
 803              		.loc 1 905 0
 804 001a 044B     		ldr	r3, .L35
 805 001c 0022     		movs	r2, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 31


 806 001e 1A70     		strb	r2, [r3]
 807              	.L33:
 906:Generated_Source\PSoC5/USB.c ****     }
 907:Generated_Source\PSoC5/USB.c **** 
 908:Generated_Source\PSoC5/USB.c ****     return (res);
 808              		.loc 1 908 0
 809 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 909:Generated_Source\PSoC5/USB.c **** }
 810              		.loc 1 909 0
 811 0022 1846     		mov	r0, r3
 812 0024 0C37     		adds	r7, r7, #12
 813              		.cfi_def_cfa_offset 4
 814 0026 BD46     		mov	sp, r7
 815              		.cfi_def_cfa_register 13
 816              		@ sp needed
 817 0028 80BC     		pop	{r7}
 818              		.cfi_restore 7
 819              		.cfi_def_cfa_offset 0
 820 002a 7047     		bx	lr
 821              	.L36:
 822              		.align	2
 823              	.L35:
 824 002c 00000000 		.word	USB_configurationChanged
 825              		.cfi_endproc
 826              	.LFE7:
 827              		.size	USB_IsConfigurationChanged, .-USB_IsConfigurationChanged
 828              		.section	.text.USB_GetInterfaceSetting,"ax",%progbits
 829              		.align	2
 830              		.global	USB_GetInterfaceSetting
 831              		.thumb
 832              		.thumb_func
 833              		.type	USB_GetInterfaceSetting, %function
 834              	USB_GetInterfaceSetting:
 835              	.LFB8:
 910:Generated_Source\PSoC5/USB.c **** 
 911:Generated_Source\PSoC5/USB.c **** 
 912:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 913:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetInterfaceSetting
 914:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 915:Generated_Source\PSoC5/USB.c **** *
 916:Generated_Source\PSoC5/USB.c **** *  This function gets the current alternate setting for the specified interface.
 917:Generated_Source\PSoC5/USB.c **** *  It is useful to identify which alternate settings are active in the specified 
 918:Generated_Source\PSoC5/USB.c **** *  interface.
 919:Generated_Source\PSoC5/USB.c **** *
 920:Generated_Source\PSoC5/USB.c **** *  \param
 921:Generated_Source\PSoC5/USB.c **** *  interfaceNumber interface number
 922:Generated_Source\PSoC5/USB.c **** *
 923:Generated_Source\PSoC5/USB.c **** * \return
 924:Generated_Source\PSoC5/USB.c **** *  Returns the current alternate setting for the specified interface.
 925:Generated_Source\PSoC5/USB.c **** *
 926:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 927:Generated_Source\PSoC5/USB.c **** uint8  USB_GetInterfaceSetting(uint8 interfaceNumber)
 928:Generated_Source\PSoC5/USB.c ****                                                     
 929:Generated_Source\PSoC5/USB.c **** {
 836              		.loc 1 929 0
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 32


 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 80B4     		push	{r7}
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 7, -4
 844 0002 83B0     		sub	sp, sp, #12
 845              		.cfi_def_cfa_offset 16
 846 0004 00AF     		add	r7, sp, #0
 847              		.cfi_def_cfa_register 7
 848 0006 0346     		mov	r3, r0
 849 0008 FB71     		strb	r3, [r7, #7]
 930:Generated_Source\PSoC5/USB.c ****     return (USB_interfaceSetting[interfaceNumber]);
 850              		.loc 1 930 0
 851 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 852 000c 034A     		ldr	r2, .L39
 853 000e D35C     		ldrb	r3, [r2, r3]
 854 0010 DBB2     		uxtb	r3, r3
 931:Generated_Source\PSoC5/USB.c **** }
 855              		.loc 1 931 0
 856 0012 1846     		mov	r0, r3
 857 0014 0C37     		adds	r7, r7, #12
 858              		.cfi_def_cfa_offset 4
 859 0016 BD46     		mov	sp, r7
 860              		.cfi_def_cfa_register 13
 861              		@ sp needed
 862 0018 80BC     		pop	{r7}
 863              		.cfi_restore 7
 864              		.cfi_def_cfa_offset 0
 865 001a 7047     		bx	lr
 866              	.L40:
 867              		.align	2
 868              	.L39:
 869 001c 00000000 		.word	USB_interfaceSetting
 870              		.cfi_endproc
 871              	.LFE8:
 872              		.size	USB_GetInterfaceSetting, .-USB_GetInterfaceSetting
 873              		.section	.text.USB_GetEPState,"ax",%progbits
 874              		.align	2
 875              		.global	USB_GetEPState
 876              		.thumb
 877              		.thumb_func
 878              		.type	USB_GetEPState, %function
 879              	USB_GetEPState:
 880              	.LFB9:
 932:Generated_Source\PSoC5/USB.c **** 
 933:Generated_Source\PSoC5/USB.c **** 
 934:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 935:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPState
 936:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 937:Generated_Source\PSoC5/USB.c **** *
 938:Generated_Source\PSoC5/USB.c **** *  This function returns the state of the requested endpoint.
 939:Generated_Source\PSoC5/USB.c **** *
 940:Generated_Source\PSoC5/USB.c **** * \param epNumber Data endpoint number
 941:Generated_Source\PSoC5/USB.c **** *
 942:Generated_Source\PSoC5/USB.c **** * \return
 943:Generated_Source\PSoC5/USB.c **** *  Returns the current state of the specified USBFS endpoint. Symbolic names and
 944:Generated_Source\PSoC5/USB.c **** *  their associated values are given in the following table. Use these constants
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 33


 945:Generated_Source\PSoC5/USB.c **** *  whenever you write code to change the state of the endpoints, such as ISR
 946:Generated_Source\PSoC5/USB.c **** *  code, to handle data sent or received.
 947:Generated_Source\PSoC5/USB.c **** *
 948:Generated_Source\PSoC5/USB.c **** *  Return Value           | Description
 949:Generated_Source\PSoC5/USB.c **** *  -----------------------|-----------------------------------------------------
 950:Generated_Source\PSoC5/USB.c **** *  USBFS_NO_EVENT_PENDING |The endpoint is awaiting SIE action
 951:Generated_Source\PSoC5/USB.c **** *  USBFS_EVENT_PENDING    |The endpoint is awaiting CPU action
 952:Generated_Source\PSoC5/USB.c **** *  USBFS_NO_EVENT_ALLOWED |The endpoint is locked from access
 953:Generated_Source\PSoC5/USB.c **** *  USBFS_IN_BUFFER_FULL   |The IN endpoint is loaded and the mode is set to ACK IN
 954:Generated_Source\PSoC5/USB.c **** *  USBFS_IN_BUFFER_EMPTY  |An IN transaction occurred and more data can be loaded
 955:Generated_Source\PSoC5/USB.c **** *  USBFS_OUT_BUFFER_EMPTY |The OUT endpoint is set to ACK OUT and is waiting for data
 956:Generated_Source\PSoC5/USB.c **** *  USBFS_OUT_BUFFER_FULL  |An OUT transaction has occurred and data can be read
 957:Generated_Source\PSoC5/USB.c **** *
 958:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 959:Generated_Source\PSoC5/USB.c **** uint8 USB_GetEPState(uint8 epNumber) 
 960:Generated_Source\PSoC5/USB.c **** {
 881              		.loc 1 960 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 8
 884              		@ frame_needed = 1, uses_anonymous_args = 0
 885              		@ link register save eliminated.
 886 0000 80B4     		push	{r7}
 887              		.cfi_def_cfa_offset 4
 888              		.cfi_offset 7, -4
 889 0002 83B0     		sub	sp, sp, #12
 890              		.cfi_def_cfa_offset 16
 891 0004 00AF     		add	r7, sp, #0
 892              		.cfi_def_cfa_register 7
 893 0006 0346     		mov	r3, r0
 894 0008 FB71     		strb	r3, [r7, #7]
 961:Generated_Source\PSoC5/USB.c ****     return (USB_EP[epNumber].apiEpState);
 895              		.loc 1 961 0
 896 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 897 000c 0649     		ldr	r1, .L43
 898 000e 1346     		mov	r3, r2
 899 0010 5B00     		lsls	r3, r3, #1
 900 0012 1344     		add	r3, r3, r2
 901 0014 9B00     		lsls	r3, r3, #2
 902 0016 0B44     		add	r3, r3, r1
 903 0018 0133     		adds	r3, r3, #1
 904 001a 1B78     		ldrb	r3, [r3]
 905 001c DBB2     		uxtb	r3, r3
 962:Generated_Source\PSoC5/USB.c **** }
 906              		.loc 1 962 0
 907 001e 1846     		mov	r0, r3
 908 0020 0C37     		adds	r7, r7, #12
 909              		.cfi_def_cfa_offset 4
 910 0022 BD46     		mov	sp, r7
 911              		.cfi_def_cfa_register 13
 912              		@ sp needed
 913 0024 80BC     		pop	{r7}
 914              		.cfi_restore 7
 915              		.cfi_def_cfa_offset 0
 916 0026 7047     		bx	lr
 917              	.L44:
 918              		.align	2
 919              	.L43:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 34


 920 0028 00000000 		.word	USB_EP
 921              		.cfi_endproc
 922              	.LFE9:
 923              		.size	USB_GetEPState, .-USB_GetEPState
 924              		.section	.text.USB_GetEPCount,"ax",%progbits
 925              		.align	2
 926              		.global	USB_GetEPCount
 927              		.thumb
 928              		.thumb_func
 929              		.type	USB_GetEPCount, %function
 930              	USB_GetEPCount:
 931              	.LFB10:
 963:Generated_Source\PSoC5/USB.c **** 
 964:Generated_Source\PSoC5/USB.c **** 
 965:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
 966:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPCount
 967:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
 968:Generated_Source\PSoC5/USB.c **** *
 969:Generated_Source\PSoC5/USB.c **** *  This function supports Data Endpoints only(EP1-EP8).
 970:Generated_Source\PSoC5/USB.c **** *  Returns the transfer count for the requested endpoint.  The value from
 971:Generated_Source\PSoC5/USB.c **** *  the count registers includes 2 counts for the two byte checksum of the
 972:Generated_Source\PSoC5/USB.c **** *  packet.  This function subtracts the two counts.
 973:Generated_Source\PSoC5/USB.c **** *
 974:Generated_Source\PSoC5/USB.c **** *  \param epNumber Data Endpoint Number.
 975:Generated_Source\PSoC5/USB.c **** *                   Valid values are between 1 and 8.
 976:Generated_Source\PSoC5/USB.c **** *
 977:Generated_Source\PSoC5/USB.c **** * \return
 978:Generated_Source\PSoC5/USB.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 979:Generated_Source\PSoC5/USB.c **** *  invalid endpoint.
 980:Generated_Source\PSoC5/USB.c **** *
 981:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
 982:Generated_Source\PSoC5/USB.c **** uint16 USB_GetEPCount(uint8 epNumber) 
 983:Generated_Source\PSoC5/USB.c **** {
 932              		.loc 1 983 0
 933              		.cfi_startproc
 934              		@ args = 0, pretend = 0, frame = 16
 935              		@ frame_needed = 1, uses_anonymous_args = 0
 936              		@ link register save eliminated.
 937 0000 80B4     		push	{r7}
 938              		.cfi_def_cfa_offset 4
 939              		.cfi_offset 7, -4
 940 0002 85B0     		sub	sp, sp, #20
 941              		.cfi_def_cfa_offset 24
 942 0004 00AF     		add	r7, sp, #0
 943              		.cfi_def_cfa_register 7
 944 0006 0346     		mov	r3, r0
 945 0008 FB71     		strb	r3, [r7, #7]
 984:Generated_Source\PSoC5/USB.c ****     uint16 cntr = 0u;
 946              		.loc 1 984 0
 947 000a 0023     		movs	r3, #0
 948 000c FB81     		strh	r3, [r7, #14]	@ movhi
 985:Generated_Source\PSoC5/USB.c **** 
 986:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 949              		.loc 1 986 0
 950 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 951 0010 002B     		cmp	r3, #0
 952 0012 1CD0     		beq	.L46
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 35


 953              		.loc 1 986 0 is_stmt 0 discriminator 1
 954 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 955 0016 082B     		cmp	r3, #8
 956 0018 19D8     		bhi	.L46
 987:Generated_Source\PSoC5/USB.c ****     {
 988:Generated_Source\PSoC5/USB.c ****         /* Get 11-bits EP counter where epCnt0 - 3 bits MSB and epCnt1 - 8 bits LSB. */
 989:Generated_Source\PSoC5/USB.c ****         cntr  = ((uint16) USB_SIE_EP_BASE.sieEp[epNumber].epCnt0) & USB_EPX_CNT0_MASK;
 957              		.loc 1 989 0 is_stmt 1
 958 001a 104A     		ldr	r2, .L48
 959 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 960 001e 1B01     		lsls	r3, r3, #4
 961 0020 1344     		add	r3, r3, r2
 962 0022 1B78     		ldrb	r3, [r3]
 963 0024 DBB2     		uxtb	r3, r3
 964 0026 9BB2     		uxth	r3, r3
 965 0028 03F00F03 		and	r3, r3, #15
 966 002c FB81     		strh	r3, [r7, #14]	@ movhi
 990:Generated_Source\PSoC5/USB.c ****         cntr  = ((uint16) (cntr << 8u)) | ((uint16) USB_SIE_EP_BASE.sieEp[epNumber].epCnt1);
 967              		.loc 1 990 0
 968 002e FB89     		ldrh	r3, [r7, #14]	@ movhi
 969 0030 1B02     		lsls	r3, r3, #8
 970 0032 9AB2     		uxth	r2, r3
 971 0034 0949     		ldr	r1, .L48
 972 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 973 0038 1B01     		lsls	r3, r3, #4
 974 003a 0B44     		add	r3, r3, r1
 975 003c 0133     		adds	r3, r3, #1
 976 003e 1B78     		ldrb	r3, [r3]
 977 0040 DBB2     		uxtb	r3, r3
 978 0042 9BB2     		uxth	r3, r3
 979 0044 1343     		orrs	r3, r3, r2
 980 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 991:Generated_Source\PSoC5/USB.c ****         cntr -= USB_EPX_CNTX_CRC_COUNT;
 981              		.loc 1 991 0
 982 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 983 004a 023B     		subs	r3, r3, #2
 984 004c FB81     		strh	r3, [r7, #14]	@ movhi
 985              	.L46:
 992:Generated_Source\PSoC5/USB.c ****     }
 993:Generated_Source\PSoC5/USB.c **** 
 994:Generated_Source\PSoC5/USB.c ****     return (cntr);
 986              		.loc 1 994 0
 987 004e FB89     		ldrh	r3, [r7, #14]
 995:Generated_Source\PSoC5/USB.c **** }
 988              		.loc 1 995 0
 989 0050 1846     		mov	r0, r3
 990 0052 1437     		adds	r7, r7, #20
 991              		.cfi_def_cfa_offset 4
 992 0054 BD46     		mov	sp, r7
 993              		.cfi_def_cfa_register 13
 994              		@ sp needed
 995 0056 80BC     		pop	{r7}
 996              		.cfi_restore 7
 997              		.cfi_def_cfa_offset 0
 998 0058 7047     		bx	lr
 999              	.L49:
 1000 005a 00BF     		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 36


 1001              	.L48:
 1002 005c FC5F0040 		.word	1073766396
 1003              		.cfi_endproc
 1004              	.LFE10:
 1005              		.size	USB_GetEPCount, .-USB_GetEPCount
 1006              		.section	.text.USB_LoadInEP,"ax",%progbits
 1007              		.align	2
 1008              		.global	USB_LoadInEP
 1009              		.thumb
 1010              		.thumb_func
 1011              		.type	USB_LoadInEP, %function
 1012              	USB_LoadInEP:
 1013              	.LFB11:
 996:Generated_Source\PSoC5/USB.c **** 
 997:Generated_Source\PSoC5/USB.c **** 
 998:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA)
 999:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
1000:Generated_Source\PSoC5/USB.c ****     /*******************************************************************************
1001:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_InitEpDma
1002:Generated_Source\PSoC5/USB.c ****     ****************************************************************************//**
1003:Generated_Source\PSoC5/USB.c ****     *
1004:Generated_Source\PSoC5/USB.c ****     *  This function configures priority for all DMA channels utilized by the
1005:Generated_Source\PSoC5/USB.c ****     *  component. Also sets callbacks for DMA auto mode.
1006:Generated_Source\PSoC5/USB.c ****     *
1007:Generated_Source\PSoC5/USB.c ****     *******************************************************************************/
1008:Generated_Source\PSoC5/USB.c ****     static void USB_InitEpDma(void)
1009:Generated_Source\PSoC5/USB.c ****     {
1010:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA1_ACTIVE)
1011:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep1_dma_CHANNEL] = USB_ep1_dma_CHANNEL_CFG;
1012:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA1_ACTIVE) */
1013:Generated_Source\PSoC5/USB.c **** 
1014:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA2_ACTIVE)
1015:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep2_dma_CHANNEL] = USB_ep2_dma_CHANNEL_CFG;
1016:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA2_ACTIVE) */
1017:Generated_Source\PSoC5/USB.c **** 
1018:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA3_ACTIVE)
1019:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep3_dma_CHANNEL] = USB_ep3_dma_CHANNEL_CFG;
1020:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA3_ACTIVE) */
1021:Generated_Source\PSoC5/USB.c **** 
1022:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA4_ACTIVE)
1023:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep4_dma_CHANNEL] = USB_ep4_dma_CHANNEL_CFG;
1024:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA4_ACTIVE) */
1025:Generated_Source\PSoC5/USB.c **** 
1026:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA5_ACTIVE)
1027:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep5_dma_CHANNEL] = USB_ep5_dma_CHANNEL_CFG;
1028:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA5_ACTIVE) */
1029:Generated_Source\PSoC5/USB.c **** 
1030:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA6_ACTIVE)
1031:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep6_dma_CHANNEL] = USB_ep6_dma_CHANNEL_CFG;
1032:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA6_ACTIVE) */
1033:Generated_Source\PSoC5/USB.c **** 
1034:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA7_ACTIVE)
1035:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep7_dma_CHANNEL] = USB_ep7_dma_CHANNEL_CFG;
1036:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA7_ACTIVE) */
1037:Generated_Source\PSoC5/USB.c **** 
1038:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA8_ACTIVE)
1039:Generated_Source\PSoC5/USB.c ****         CYDMA_CH_CTL_BASE.ctl[USB_ep8_dma_CHANNEL] = USB_ep8_dma_CHANNEL_CFG;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 37


1040:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA8_ACTIVE) */
1041:Generated_Source\PSoC5/USB.c **** 
1042:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_DMA_AUTO)
1043:Generated_Source\PSoC5/USB.c ****         /* Initialize DMA channel callbacks. */
1044:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA1_ACTIVE)
1045:Generated_Source\PSoC5/USB.c ****             (void) USB_ep1_dma_SetInterruptCallback(&USB_EP1_DMA_DONE_ISR);
1046:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA1_ACTIVE) */
1047:Generated_Source\PSoC5/USB.c **** 
1048:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA2_ACTIVE)
1049:Generated_Source\PSoC5/USB.c ****             (void) USB_ep2_dma_SetInterruptCallback(&USB_EP2_DMA_DONE_ISR);
1050:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA2_ACTIVE) */
1051:Generated_Source\PSoC5/USB.c **** 
1052:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA3_ACTIVE)
1053:Generated_Source\PSoC5/USB.c ****             (void) USB_ep3_dma_SetInterruptCallback(&USB_EP3_DMA_DONE_ISR);
1054:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA3_ACTIVE) */
1055:Generated_Source\PSoC5/USB.c **** 
1056:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA4_ACTIVE)
1057:Generated_Source\PSoC5/USB.c ****             (void) USB_ep4_dma_SetInterruptCallback(&USB_EP4_DMA_DONE_ISR);
1058:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA4_ACTIVE) */
1059:Generated_Source\PSoC5/USB.c **** 
1060:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA5_ACTIVE)
1061:Generated_Source\PSoC5/USB.c ****             (void) USB_ep5_dma_SetInterruptCallback(&USB_EP5_DMA_DONE_ISR);
1062:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA5_ACTIVE) */
1063:Generated_Source\PSoC5/USB.c **** 
1064:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA6_ACTIVE)
1065:Generated_Source\PSoC5/USB.c ****             (void) USB_ep6_dma_SetInterruptCallback(&USB_EP6_DMA_DONE_ISR);
1066:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA6_ACTIVE) */
1067:Generated_Source\PSoC5/USB.c **** 
1068:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA7_ACTIVE)
1069:Generated_Source\PSoC5/USB.c ****             (void) USB_ep7_dma_SetInterruptCallback(&USB_EP7_DMA_DONE_ISR);
1070:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA7_ACTIVE) */
1071:Generated_Source\PSoC5/USB.c **** 
1072:Generated_Source\PSoC5/USB.c ****         #if (USB_DMA8_ACTIVE)
1073:Generated_Source\PSoC5/USB.c ****             (void) USB_ep8_dma_SetInterruptCallback(&USB_EP8_DMA_DONE_ISR);
1074:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_DMA8_ACTIVE) */
1075:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1076:Generated_Source\PSoC5/USB.c ****     }
1077:Generated_Source\PSoC5/USB.c **** #else
1078:Generated_Source\PSoC5/USB.c **** 
1079:Generated_Source\PSoC5/USB.c **** 
1080:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1081:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_InitEP_DMA
1082:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1083:Generated_Source\PSoC5/USB.c ****     *
1084:Generated_Source\PSoC5/USB.c ****     *  This function allocates and initializes a DMA channel to be used by the
1085:Generated_Source\PSoC5/USB.c ****     *  USB_LoadInEP() or USB_ReadOutEP() APIs for data
1086:Generated_Source\PSoC5/USB.c ****     *  transfer. It is available when the Endpoint Memory Management parameter
1087:Generated_Source\PSoC5/USB.c ****     *  is set to DMA.
1088:Generated_Source\PSoC5/USB.c ****     *
1089:Generated_Source\PSoC5/USB.c ****     *  This function is automatically called from the USBFS_LoadInEP() and USBFS_ReadOutEP() APIs.
1090:Generated_Source\PSoC5/USB.c ****     *
1091:Generated_Source\PSoC5/USB.c ****     *  \param epNumber Contains the data endpoint number.
1092:Generated_Source\PSoC5/USB.c ****     *            Valid values are between 1 and 8.
1093:Generated_Source\PSoC5/USB.c ****     *  \param *pData Pointer to a data array that is related to the EP transfers.
1094:Generated_Source\PSoC5/USB.c ****     *
1095:Generated_Source\PSoC5/USB.c ****     * \reentrant No.
1096:Generated_Source\PSoC5/USB.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 38


1097:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1098:Generated_Source\PSoC5/USB.c ****     void USB_InitEP_DMA(uint8 epNumber, const uint8 *pData)
1099:Generated_Source\PSoC5/USB.c ****                                                                     
1100:Generated_Source\PSoC5/USB.c ****     {
1101:Generated_Source\PSoC5/USB.c ****         uint16 src;
1102:Generated_Source\PSoC5/USB.c ****         uint16 dst;
1103:Generated_Source\PSoC5/USB.c **** 
1104:Generated_Source\PSoC5/USB.c ****     #if (CY_PSOC3)
1105:Generated_Source\PSoC5/USB.c ****         src = HI16(CYDEV_SRAM_BASE);
1106:Generated_Source\PSoC5/USB.c ****         dst = HI16(CYDEV_PERIPH_BASE);
1107:Generated_Source\PSoC5/USB.c ****         pData = pData;
1108:Generated_Source\PSoC5/USB.c ****     #else
1109:Generated_Source\PSoC5/USB.c ****         if ((USB_EP[epNumber].addr & USB_DIR_IN) != 0u)
1110:Generated_Source\PSoC5/USB.c ****         {
1111:Generated_Source\PSoC5/USB.c ****             /* IN endpoint: source is memory buffer. */
1112:Generated_Source\PSoC5/USB.c ****             src = HI16(pData);
1113:Generated_Source\PSoC5/USB.c ****             dst = HI16(CYDEV_PERIPH_BASE);
1114:Generated_Source\PSoC5/USB.c ****         }
1115:Generated_Source\PSoC5/USB.c ****         else
1116:Generated_Source\PSoC5/USB.c ****         {
1117:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint: source is USB IP memory buffer. */
1118:Generated_Source\PSoC5/USB.c ****             src = HI16(CYDEV_PERIPH_BASE);
1119:Generated_Source\PSoC5/USB.c ****             dst = HI16(pData);
1120:Generated_Source\PSoC5/USB.c ****         }
1121:Generated_Source\PSoC5/USB.c ****     #endif  /* (CY_PSOC3) */
1122:Generated_Source\PSoC5/USB.c **** 
1123:Generated_Source\PSoC5/USB.c ****         switch(epNumber)
1124:Generated_Source\PSoC5/USB.c ****         {
1125:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA1_ACTIVE)
1126:Generated_Source\PSoC5/USB.c ****         case USB_EP1:
1127:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep1_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1128:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1129:Generated_Source\PSoC5/USB.c ****             break;
1130:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA1_ACTIVE) */
1131:Generated_Source\PSoC5/USB.c **** 
1132:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA2_ACTIVE)
1133:Generated_Source\PSoC5/USB.c ****         case USB_EP2:
1134:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep2_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1135:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1136:Generated_Source\PSoC5/USB.c ****             break;
1137:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA2_ACTIVE) */
1138:Generated_Source\PSoC5/USB.c **** 
1139:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA3_ACTIVE)
1140:Generated_Source\PSoC5/USB.c ****             case USB_EP3:
1141:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep3_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1142:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1143:Generated_Source\PSoC5/USB.c ****             break;
1144:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA3_ACTIVE) */
1145:Generated_Source\PSoC5/USB.c **** 
1146:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA4_ACTIVE)
1147:Generated_Source\PSoC5/USB.c ****             case USB_EP4:
1148:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep4_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1149:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1150:Generated_Source\PSoC5/USB.c ****             break;
1151:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA4_ACTIVE) */
1152:Generated_Source\PSoC5/USB.c **** 
1153:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA5_ACTIVE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 39


1154:Generated_Source\PSoC5/USB.c ****             case USB_EP5:
1155:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep5_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1156:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1157:Generated_Source\PSoC5/USB.c ****             break;
1158:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA5_ACTIVE) */
1159:Generated_Source\PSoC5/USB.c **** 
1160:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA6_ACTIVE)
1161:Generated_Source\PSoC5/USB.c ****         case USB_EP6:
1162:Generated_Source\PSoC5/USB.c ****             USB_DmaChan[epNumber] = USB_ep6_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1163:Generated_Source\PSoC5/USB.c ****                                                                                     USB_DMA_REQUEST
1164:Generated_Source\PSoC5/USB.c ****             break;
1165:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA6_ACTIVE) */
1166:Generated_Source\PSoC5/USB.c **** 
1167:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA7_ACTIVE)
1168:Generated_Source\PSoC5/USB.c ****         case USB_EP7:
1169:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep7_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1170:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1171:Generated_Source\PSoC5/USB.c ****             break;
1172:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA7_ACTIVE) */
1173:Generated_Source\PSoC5/USB.c **** 
1174:Generated_Source\PSoC5/USB.c ****     #if (USB_DMA8_ACTIVE)
1175:Generated_Source\PSoC5/USB.c ****         case USB_EP8:
1176:Generated_Source\PSoC5/USB.c ****                 USB_DmaChan[epNumber] = USB_ep8_DmaInitialize(USB_DMA_BYTES_PER_BURST,
1177:Generated_Source\PSoC5/USB.c ****                                                                                         USB_DMA_REQ
1178:Generated_Source\PSoC5/USB.c ****             break;
1179:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_DMA8_ACTIVE) */
1180:Generated_Source\PSoC5/USB.c **** 
1181:Generated_Source\PSoC5/USB.c ****         default:
1182:Generated_Source\PSoC5/USB.c ****             /* Do nothing for endpoints other than 1-8. */
1183:Generated_Source\PSoC5/USB.c ****             break;
1184:Generated_Source\PSoC5/USB.c ****         }
1185:Generated_Source\PSoC5/USB.c **** 
1186:Generated_Source\PSoC5/USB.c ****         if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
1187:Generated_Source\PSoC5/USB.c ****         {
1188:Generated_Source\PSoC5/USB.c ****             USB_DmaTd[epNumber] = CyDmaTdAllocate();
1189:Generated_Source\PSoC5/USB.c **** 
1190:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1191:Generated_Source\PSoC5/USB.c ****             USB_DmaNextTd[epNumber] = CyDmaTdAllocate();
1192:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1193:Generated_Source\PSoC5/USB.c ****         }
1194:Generated_Source\PSoC5/USB.c ****     }
1195:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
1196:Generated_Source\PSoC5/USB.c **** 
1197:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1198:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_Stop_DMA
1199:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1200:Generated_Source\PSoC5/USB.c ****     *  
1201:Generated_Source\PSoC5/USB.c ****     *  This function stops DMA channel associated with endpoint. It is available 
1202:Generated_Source\PSoC5/USB.c ****     *  when the Endpoint Buffer Management parameter is set to DMA. Call this 
1203:Generated_Source\PSoC5/USB.c ****     *  function when endpoint direction is changed from IN to OUT or vice versa 
1204:Generated_Source\PSoC5/USB.c ****     *  to trigger DMA re-configuration when USB_LoadInEP() or 
1205:Generated_Source\PSoC5/USB.c ****     *  USB_ReadOutEP() functions are called the first time. 
1206:Generated_Source\PSoC5/USB.c ****     *  
1207:Generated_Source\PSoC5/USB.c ****     *  \param epNumber: The data endpoint number for which associated DMA 
1208:Generated_Source\PSoC5/USB.c ****     *  channel is stopped. The range of valid values is between 1 and 8. To stop 
1209:Generated_Source\PSoC5/USB.c ****     *  all DMAs associated with endpoints call this function with 
1210:Generated_Source\PSoC5/USB.c ****     *  USB_MAX_EP argument.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 40


1211:Generated_Source\PSoC5/USB.c ****     *
1212:Generated_Source\PSoC5/USB.c ****     * \reentrant
1213:Generated_Source\PSoC5/USB.c ****     *  No.
1214:Generated_Source\PSoC5/USB.c ****     *
1215:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1216:Generated_Source\PSoC5/USB.c ****     void USB_Stop_DMA(uint8 epNumber) 
1217:Generated_Source\PSoC5/USB.c ****     {
1218:Generated_Source\PSoC5/USB.c ****         uint8 i;
1219:Generated_Source\PSoC5/USB.c **** 
1220:Generated_Source\PSoC5/USB.c ****         i = (epNumber < USB_MAX_EP) ? epNumber : USB_EP1;
1221:Generated_Source\PSoC5/USB.c **** 
1222:Generated_Source\PSoC5/USB.c ****         do
1223:Generated_Source\PSoC5/USB.c ****         {
1224:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1225:Generated_Source\PSoC5/USB.c ****             if (0u != USB_DmaChan[i])
1226:Generated_Source\PSoC5/USB.c ****             {
1227:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(USB_DmaChan[i]);
1228:Generated_Source\PSoC5/USB.c ****             }
1229:Generated_Source\PSoC5/USB.c ****         #else
1230:Generated_Source\PSoC5/USB.c ****             if(USB_DmaTd[i] != DMA_INVALID_TD)
1231:Generated_Source\PSoC5/USB.c ****             {
1232:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[i]);
1233:Generated_Source\PSoC5/USB.c ****                 CyDmaTdFree(USB_DmaTd[i]);
1234:Generated_Source\PSoC5/USB.c ****                 USB_DmaTd[i] = DMA_INVALID_TD;
1235:Generated_Source\PSoC5/USB.c ****             }
1236:Generated_Source\PSoC5/USB.c **** 
1237:Generated_Source\PSoC5/USB.c ****             #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1238:Generated_Source\PSoC5/USB.c ****                 if(USB_DmaNextTd[i] != DMA_INVALID_TD)
1239:Generated_Source\PSoC5/USB.c ****                 {
1240:Generated_Source\PSoC5/USB.c ****                     CyDmaTdFree(USB_DmaNextTd[i]);
1241:Generated_Source\PSoC5/USB.c ****                     USB_DmaNextTd[i] = DMA_INVALID_TD;
1242:Generated_Source\PSoC5/USB.c ****                 }
1243:Generated_Source\PSoC5/USB.c ****             #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1244:Generated_Source\PSoC5/USB.c **** 
1245:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1246:Generated_Source\PSoC5/USB.c ****             i++;
1247:Generated_Source\PSoC5/USB.c ****         }
1248:Generated_Source\PSoC5/USB.c ****         while ((i < USB_MAX_EP) && (epNumber == USB_MAX_EP));
1249:Generated_Source\PSoC5/USB.c ****     }
1250:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA) */
1251:Generated_Source\PSoC5/USB.c **** 
1252:Generated_Source\PSoC5/USB.c **** 
1253:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC3 || CY_PSOC5)
1254:Generated_Source\PSoC5/USB.c **** #if (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u))
1255:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
1256:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_LoadNextInEP
1257:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
1258:Generated_Source\PSoC5/USB.c ****     *
1259:Generated_Source\PSoC5/USB.c ****     * Summary:
1260:Generated_Source\PSoC5/USB.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
1261:Generated_Source\PSoC5/USB.c ****     *  Auto DMA mode.
1262:Generated_Source\PSoC5/USB.c ****     *
1263:Generated_Source\PSoC5/USB.c ****     * Parameters:
1264:Generated_Source\PSoC5/USB.c ****     *  epNumber: Contains the data endpoint number.
1265:Generated_Source\PSoC5/USB.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
1266:Generated_Source\PSoC5/USB.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
1267:Generated_Source\PSoC5/USB.c ****     *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 41


1268:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
1269:Generated_Source\PSoC5/USB.c ****     void USB_LoadNextInEP(uint8 epNumber, uint8 mode) 
1270:Generated_Source\PSoC5/USB.c ****     {
1271:Generated_Source\PSoC5/USB.c ****         reg16 *convert;
1272:Generated_Source\PSoC5/USB.c **** 
1273:Generated_Source\PSoC5/USB.c ****         if (mode == 0u)
1274:Generated_Source\PSoC5/USB.c ****         {
1275:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to send rest of data. */
1276:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1277:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD0[0u];
1278:Generated_Source\PSoC5/USB.c ****             /* Set transfer length. */
1279:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, USB_inLength[epNumber] - USB_DMA_BYTES_PER_BURST);
1280:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1281:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD1[0u];
1282:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, LO16((uint32)USB_inDataPointer[epNumber] +
1283:Generated_Source\PSoC5/USB.c ****                                             USB_DMA_BYTES_PER_BURST));
1284:Generated_Source\PSoC5/USB.c ****             USB_inBufFull[epNumber] = 1u;
1285:Generated_Source\PSoC5/USB.c ****         }
1286:Generated_Source\PSoC5/USB.c ****         else
1287:Generated_Source\PSoC5/USB.c ****         {
1288:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
1289:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetConfiguration API is optimized to change transfer length only and configur
1290:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD0[0u];
1291:Generated_Source\PSoC5/USB.c ****             /* Set transfer length. */
1292:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert, USB_DMA_BYTES_REPEAT);
1293:Generated_Source\PSoC5/USB.c ****             /* CyDmaTdSetAddress API is optimized to change source address only. */
1294:Generated_Source\PSoC5/USB.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[USB_DmaTd[epNumber]].TD1[0u];
1295:Generated_Source\PSoC5/USB.c ****             CY_SET_REG16(convert,  LO16((uint32)USB_inDataPointer[epNumber] +
1296:Generated_Source\PSoC5/USB.c ****                                    (USB_DMA_BYTES_PER_BURST - USB_DMA_BYTES_REPEAT)));
1297:Generated_Source\PSoC5/USB.c ****         }
1298:Generated_Source\PSoC5/USB.c **** 
1299:Generated_Source\PSoC5/USB.c ****         /* CyDmaChSetInitialTd API is optimized to initialize TD. */
1300:Generated_Source\PSoC5/USB.c ****         CY_DMA_CH_STRUCT_PTR[USB_DmaChan[epNumber]].basic_status[1u] = USB_DmaTd[epNumber];
1301:Generated_Source\PSoC5/USB.c ****     }
1302:Generated_Source\PSoC5/USB.c **** #endif /* (USB_EP_MANAGEMENT_DMA_AUTO && (USB_EP_DMA_AUTO_OPT == 0u)) */
1303:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC3 || CY_PSOC5) */
1304:Generated_Source\PSoC5/USB.c **** 
1305:Generated_Source\PSoC5/USB.c **** 
1306:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1307:Generated_Source\PSoC5/USB.c **** * Function Name: USB_LoadInEP
1308:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1309:Generated_Source\PSoC5/USB.c **** *
1310:Generated_Source\PSoC5/USB.c **** *  This function performs different functionality depending on the Component’s
1311:Generated_Source\PSoC5/USB.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1312:Generated_Source\PSoC5/USB.c **** *  the Descriptor Root in Component Configure window.
1313:Generated_Source\PSoC5/USB.c **** *
1314:Generated_Source\PSoC5/USB.c **** *  *Manual (Static/Dynamic Allocation):*
1315:Generated_Source\PSoC5/USB.c **** *  This function loads and enables the specified USB data endpoint for an IN
1316:Generated_Source\PSoC5/USB.c **** *  data transfer.
1317:Generated_Source\PSoC5/USB.c **** *
1318:Generated_Source\PSoC5/USB.c **** *  *DMA with Manual Buffer Management:*
1319:Generated_Source\PSoC5/USB.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1320:Generated_Source\PSoC5/USB.c **** *  Generates request for a transfer.
1321:Generated_Source\PSoC5/USB.c **** *
1322:Generated_Source\PSoC5/USB.c **** *  *DMA with Automatic Buffer Management:*
1323:Generated_Source\PSoC5/USB.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1324:Generated_Source\PSoC5/USB.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 42


1325:Generated_Source\PSoC5/USB.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1326:Generated_Source\PSoC5/USB.c **** *  prepares data in endpoint buffer.
1327:Generated_Source\PSoC5/USB.c **** *
1328:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
1329:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
1330:Generated_Source\PSoC5/USB.c **** *  \param *pData A pointer to a data array from which the data for the endpoint space
1331:Generated_Source\PSoC5/USB.c **** *          is loaded.
1332:Generated_Source\PSoC5/USB.c **** *  \param length The number of bytes to transfer from the array and then send as
1333:Generated_Source\PSoC5/USB.c **** *          a result of an IN request. Valid values are between 0 and 512
1334:Generated_Source\PSoC5/USB.c **** *          (1023 for DMA with Automatic Buffer Management mode). The value 512
1335:Generated_Source\PSoC5/USB.c **** *          is applicable if only one endpoint is used.
1336:Generated_Source\PSoC5/USB.c **** *
1337:Generated_Source\PSoC5/USB.c **** *
1338:Generated_Source\PSoC5/USB.c **** * \reentrant
1339:Generated_Source\PSoC5/USB.c **** *  No.
1340:Generated_Source\PSoC5/USB.c **** *
1341:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1342:Generated_Source\PSoC5/USB.c **** void USB_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1343:Generated_Source\PSoC5/USB.c ****                                                                         
1344:Generated_Source\PSoC5/USB.c **** {
 1014              		.loc 1 1344 0
 1015              		.cfi_startproc
 1016              		@ args = 0, pretend = 0, frame = 16
 1017              		@ frame_needed = 1, uses_anonymous_args = 0
 1018              		@ link register save eliminated.
 1019 0000 B0B4     		push	{r4, r5, r7}
 1020              		.cfi_def_cfa_offset 12
 1021              		.cfi_offset 4, -12
 1022              		.cfi_offset 5, -8
 1023              		.cfi_offset 7, -4
 1024 0002 85B0     		sub	sp, sp, #20
 1025              		.cfi_def_cfa_offset 32
 1026 0004 00AF     		add	r7, sp, #0
 1027              		.cfi_def_cfa_register 7
 1028 0006 0346     		mov	r3, r0
 1029 0008 3960     		str	r1, [r7]
 1030 000a FB71     		strb	r3, [r7, #7]
 1031 000c 1346     		mov	r3, r2	@ movhi
 1032 000e BB80     		strh	r3, [r7, #4]	@ movhi
1345:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1033              		.loc 1 1345 0
 1034 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1035 0012 002B     		cmp	r3, #0
 1036 0014 6DD0     		beq	.L56
 1037              		.loc 1 1345 0 is_stmt 0 discriminator 1
 1038 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1039 0018 082B     		cmp	r3, #8
 1040 001a 6AD8     		bhi	.L56
1346:Generated_Source\PSoC5/USB.c ****     {
1347:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1348:Generated_Source\PSoC5/USB.c ****         /* Limit length to available buffer USB IP buffer size.*/
1349:Generated_Source\PSoC5/USB.c ****         if (length > (USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset))
 1041              		.loc 1 1349 0 is_stmt 1
 1042 001c B988     		ldrh	r1, [r7, #4]
 1043 001e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1044 0020 3648     		ldr	r0, .L57
 1045 0022 1346     		mov	r3, r2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 43


 1046 0024 5B00     		lsls	r3, r3, #1
 1047 0026 1344     		add	r3, r3, r2
 1048 0028 9B00     		lsls	r3, r3, #2
 1049 002a 0344     		add	r3, r3, r0
 1050 002c 0633     		adds	r3, r3, #6
 1051 002e 1B88     		ldrh	r3, [r3]	@ movhi
 1052 0030 9BB2     		uxth	r3, r3
 1053 0032 C3F50073 		rsb	r3, r3, #512
 1054 0036 9942     		cmp	r1, r3
 1055 0038 0CD9     		bls	.L52
1350:Generated_Source\PSoC5/USB.c ****         {
1351:Generated_Source\PSoC5/USB.c ****             length = USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset;
 1056              		.loc 1 1351 0
 1057 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1058 003c 2F49     		ldr	r1, .L57
 1059 003e 1346     		mov	r3, r2
 1060 0040 5B00     		lsls	r3, r3, #1
 1061 0042 1344     		add	r3, r3, r2
 1062 0044 9B00     		lsls	r3, r3, #2
 1063 0046 0B44     		add	r3, r3, r1
 1064 0048 0633     		adds	r3, r3, #6
 1065 004a 1B88     		ldrh	r3, [r3]	@ movhi
 1066 004c 9BB2     		uxth	r3, r3
 1067 004e C3F50073 		rsb	r3, r3, #512
 1068 0052 BB80     		strh	r3, [r7, #4]	@ movhi
 1069              	.L52:
1352:Generated_Source\PSoC5/USB.c ****         }
1353:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
1354:Generated_Source\PSoC5/USB.c **** 
1355:Generated_Source\PSoC5/USB.c ****         /* Set count and data toggle. */
1356:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint8) HI8(length) | USB_EP[epNumber].epToggle;
 1070              		.loc 1 1356 0
 1071 0054 2A4C     		ldr	r4, .L57+4
 1072 0056 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1073 0058 BB88     		ldrh	r3, [r7, #4]
 1074 005a 1B0A     		lsrs	r3, r3, #8
 1075 005c 9BB2     		uxth	r3, r3
 1076 005e D8B2     		uxtb	r0, r3
 1077 0060 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1078 0062 264D     		ldr	r5, .L57
 1079 0064 1346     		mov	r3, r2
 1080 0066 5B00     		lsls	r3, r3, #1
 1081 0068 1344     		add	r3, r3, r2
 1082 006a 9B00     		lsls	r3, r3, #2
 1083 006c 2B44     		add	r3, r3, r5
 1084 006e 0333     		adds	r3, r3, #3
 1085 0070 1B78     		ldrb	r3, [r3]
 1086 0072 DBB2     		uxtb	r3, r3
 1087 0074 0343     		orrs	r3, r3, r0
 1088 0076 DAB2     		uxtb	r2, r3
 1089 0078 0B01     		lsls	r3, r1, #4
 1090 007a 2344     		add	r3, r3, r4
 1091 007c 1A70     		strb	r2, [r3]
1357:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint8) LO8(length);
 1092              		.loc 1 1357 0
 1093 007e 204A     		ldr	r2, .L57+4
 1094 0080 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 44


 1095 0082 B988     		ldrh	r1, [r7, #4]	@ movhi
 1096 0084 C9B2     		uxtb	r1, r1
 1097 0086 1B01     		lsls	r3, r3, #4
 1098 0088 1344     		add	r3, r3, r2
 1099 008a 0133     		adds	r3, r3, #1
 1100 008c 0A46     		mov	r2, r1
 1101 008e 1A70     		strb	r2, [r3]
1358:Generated_Source\PSoC5/USB.c **** 
1359:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1360:Generated_Source\PSoC5/USB.c ****         if (NULL != pData)
 1102              		.loc 1 1360 0
 1103 0090 3B68     		ldr	r3, [r7]
 1104 0092 002B     		cmp	r3, #0
 1105 0094 13D0     		beq	.L53
 1106              	.LBB2:
1361:Generated_Source\PSoC5/USB.c ****         {
1362:Generated_Source\PSoC5/USB.c **** 			/* Copy data using arbiter data register. */
1363:Generated_Source\PSoC5/USB.c ****             uint16 i;
1364:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < length; ++i)
 1107              		.loc 1 1364 0
 1108 0096 0023     		movs	r3, #0
 1109 0098 FB81     		strh	r3, [r7, #14]	@ movhi
 1110 009a 0CE0     		b	.L54
 1111              	.L55:
1365:Generated_Source\PSoC5/USB.c ****             {
1366:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].rwDr = pData[i];
 1112              		.loc 1 1366 0 discriminator 3
 1113 009c 1948     		ldr	r0, .L57+8
 1114 009e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1115 00a0 FA89     		ldrh	r2, [r7, #14]
 1116 00a2 3968     		ldr	r1, [r7]
 1117 00a4 0A44     		add	r2, r2, r1
 1118 00a6 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 1119 00a8 1B01     		lsls	r3, r3, #4
 1120 00aa 0344     		add	r3, r3, r0
 1121 00ac 0833     		adds	r3, r3, #8
 1122 00ae 1A70     		strb	r2, [r3]
1364:Generated_Source\PSoC5/USB.c ****             {
 1123              		.loc 1 1364 0 discriminator 3
 1124 00b0 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1125 00b2 0133     		adds	r3, r3, #1
 1126 00b4 FB81     		strh	r3, [r7, #14]	@ movhi
 1127              	.L54:
1364:Generated_Source\PSoC5/USB.c ****             {
 1128              		.loc 1 1364 0 is_stmt 0 discriminator 1
 1129 00b6 FA89     		ldrh	r2, [r7, #14]
 1130 00b8 BB88     		ldrh	r3, [r7, #4]
 1131 00ba 9A42     		cmp	r2, r3
 1132 00bc EED3     		bcc	.L55
 1133              	.L53:
 1134              	.LBE2:
1367:Generated_Source\PSoC5/USB.c ****             }
1368:Generated_Source\PSoC5/USB.c ****         }
1369:Generated_Source\PSoC5/USB.c **** 
1370:Generated_Source\PSoC5/USB.c ****         /* IN endpoint buffer is full - read to be read. */
1371:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
 1135              		.loc 1 1371 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 45


 1136 00be FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1137 00c0 0E49     		ldr	r1, .L57
 1138 00c2 1346     		mov	r3, r2
 1139 00c4 5B00     		lsls	r3, r3, #1
 1140 00c6 1344     		add	r3, r3, r2
 1141 00c8 9B00     		lsls	r3, r3, #2
 1142 00ca 0B44     		add	r3, r3, r1
 1143 00cc 0133     		adds	r3, r3, #1
 1144 00ce 0022     		movs	r2, #0
 1145 00d0 1A70     		strb	r2, [r3]
1372:Generated_Source\PSoC5/USB.c **** 
1373:Generated_Source\PSoC5/USB.c ****         /* Arm IN endpoint. */
1374:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
 1146              		.loc 1 1374 0
 1147 00d2 0B48     		ldr	r0, .L57+4
 1148 00d4 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1149 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1150 00d8 084C     		ldr	r4, .L57
 1151 00da 1346     		mov	r3, r2
 1152 00dc 5B00     		lsls	r3, r3, #1
 1153 00de 1344     		add	r3, r3, r2
 1154 00e0 9B00     		lsls	r3, r3, #2
 1155 00e2 2344     		add	r3, r3, r4
 1156 00e4 0533     		adds	r3, r3, #5
 1157 00e6 1B78     		ldrb	r3, [r3]
 1158 00e8 DAB2     		uxtb	r2, r3
 1159 00ea 0B01     		lsls	r3, r1, #4
 1160 00ec 0344     		add	r3, r3, r0
 1161 00ee 0233     		adds	r3, r3, #2
 1162 00f0 1A70     		strb	r2, [r3]
 1163              	.L56:
1375:Generated_Source\PSoC5/USB.c **** 
1376:Generated_Source\PSoC5/USB.c ****     #else
1377:Generated_Source\PSoC5/USB.c **** 
1378:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1379:Generated_Source\PSoC5/USB.c ****             /* Initialize DMA if it was not initialized. */
1380:Generated_Source\PSoC5/USB.c ****             if (DMA_INVALID_TD == USB_DmaTd[epNumber])
1381:Generated_Source\PSoC5/USB.c ****             {
1382:Generated_Source\PSoC5/USB.c ****                 USB_InitEP_DMA(epNumber, pData);
1383:Generated_Source\PSoC5/USB.c ****             }
1384:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1385:Generated_Source\PSoC5/USB.c **** 
1386:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1387:Generated_Source\PSoC5/USB.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1388:Generated_Source\PSoC5/USB.c ****             USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1389:Generated_Source\PSoC5/USB.c **** 
1390:Generated_Source\PSoC5/USB.c ****             if ((pData != NULL) && (length > 0u))
1391:Generated_Source\PSoC5/USB.c ****             {
1392:Generated_Source\PSoC5/USB.c ****             #if (CY_PSOC4)
1393:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1394:Generated_Source\PSoC5/USB.c **** 
1395:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1396:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1397:Generated_Source\PSoC5/USB.c **** 
1398:Generated_Source\PSoC5/USB.c ****                 /* Configure source and destination. */
1399:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1400:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[e
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 46


1401:Generated_Source\PSoC5/USB.c **** 
1402:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1403:Generated_Source\PSoC5/USB.c ****                 --length;
1404:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | length |
1405:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1406:Generated_Source\PSoC5/USB.c **** 
1407:Generated_Source\PSoC5/USB.c ****                 /* Validate descriptor to execute on following DMA request. */
1408:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1409:Generated_Source\PSoC5/USB.c **** 
1410:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1411:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1412:Generated_Source\PSoC5/USB.c ****             #else
1413:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA to transfer data. */
1414:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1415:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_T
1416:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData), LO16((uint32) &
1417:Generated_Source\PSoC5/USB.c **** 
1418:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel. */
1419:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1420:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1421:Generated_Source\PSoC5/USB.c ****             #endif /* (CY_PSOC4) */
1422:Generated_Source\PSoC5/USB.c **** 
1423:Generated_Source\PSoC5/USB.c ****                 /* Generate DMA request. */
1424:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USB_ARB_EPX_CFG_DMA_REQ;
1425:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USB_ARB_EPX_CFG_DMA_REQ;
1426:Generated_Source\PSoC5/USB.c **** 
1427:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1428:Generated_Source\PSoC5/USB.c ****             }
1429:Generated_Source\PSoC5/USB.c ****             else
1430:Generated_Source\PSoC5/USB.c ****             {
1431:Generated_Source\PSoC5/USB.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1432:Generated_Source\PSoC5/USB.c ****                 USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1433:Generated_Source\PSoC5/USB.c ****             }
1434:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1435:Generated_Source\PSoC5/USB.c **** 
1436:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1437:Generated_Source\PSoC5/USB.c ****             if (pData != NULL)
1438:Generated_Source\PSoC5/USB.c ****             {
1439:Generated_Source\PSoC5/USB.c ****             #if (CY_PSOC4)
1440:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1441:Generated_Source\PSoC5/USB.c **** 
1442:Generated_Source\PSoC5/USB.c ****                 /* Store address of buffer. */
1443:Generated_Source\PSoC5/USB.c ****                 USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1444:Generated_Source\PSoC5/USB.c **** 
1445:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1446:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1447:Generated_Source\PSoC5/USB.c **** 
1448:Generated_Source\PSoC5/USB.c ****                 /* Set destination address. */
1449:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[e
1450:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP_BASE.arbEp[e
1451:Generated_Source\PSoC5/USB.c **** 
1452:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1453:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  |
1454:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1455:Generated_Source\PSoC5/USB.c **** 
1456:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1457:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  |
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 47


1458:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_BYTE | CYDMA_ELEMENT_WORD | CYDMA_INC
1459:Generated_Source\PSoC5/USB.c **** 
1460:Generated_Source\PSoC5/USB.c ****                 /* Enable interrupt from DMA channel. */
1461:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetInterruptMask(channelNum);
1462:Generated_Source\PSoC5/USB.c **** 
1463:Generated_Source\PSoC5/USB.c **** 
1464:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1465:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1466:Generated_Source\PSoC5/USB.c **** 
1467:Generated_Source\PSoC5/USB.c ****             #else
1468:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1469:Generated_Source\PSoC5/USB.c **** 
1470:Generated_Source\PSoC5/USB.c ****                 #if (USB_EP_DMA_AUTO_OPT == 0u)
1471:Generated_Source\PSoC5/USB.c ****                     USB_inLength[epNumber] = length;
1472:Generated_Source\PSoC5/USB.c ****                     USB_inDataPointer[epNumber] = pData;
1473:Generated_Source\PSoC5/USB.c **** 
1474:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send data only for first burst */
1475:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber],
1476:Generated_Source\PSoC5/USB.c ****                         (length > USB_DMA_BYTES_PER_BURST) ? USB_DMA_BYTES_PER_BURST : length,
1477:Generated_Source\PSoC5/USB.c ****                         USB_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1478:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData),
1479:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1480:Generated_Source\PSoC5/USB.c **** 
1481:Generated_Source\PSoC5/USB.c ****                     /* The second TD will be executed only when the first one fails.
1482:Generated_Source\PSoC5/USB.c ****                     *  The intention of this TD is to generate NRQ interrupt
1483:Generated_Source\PSoC5/USB.c ****                     *  and repeat 2 last bytes of the first burst.
1484:Generated_Source\PSoC5/USB.c ****                     */
1485:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaNextTd[epNumber], 1u,
1486:Generated_Source\PSoC5/USB.c ****                                                    USB_DmaNextTd[epNumber],
1487:Generated_Source\PSoC5/USB.c ****                                                    USB_epX_TD_TERMOUT_EN[epNumber]);
1488:Generated_Source\PSoC5/USB.c **** 
1489:Generated_Source\PSoC5/USB.c ****                     /* Configure DmaNextTd to clear Data Ready status. */
1490:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaNextTd[epNumber], LO16((uint32) &clearInDataRdy
1491:Generated_Source\PSoC5/USB.c ****                                                                                    LO16((uint32) &U
1492:Generated_Source\PSoC5/USB.c ****                 #else
1493:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send all data. */
1494:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length,
1495:Generated_Source\PSoC5/USB.c ****                                                    USB_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_A
1496:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) pData),
1497:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1498:Generated_Source\PSoC5/USB.c ****                 #endif /* (USB_EP_DMA_AUTO_OPT == 0u) */
1499:Generated_Source\PSoC5/USB.c **** 
1500:Generated_Source\PSoC5/USB.c ****                 /* Clear any potential pending DMA requests before starting DMA channel to transfer
1501:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1502:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA. */
1503:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1504:Generated_Source\PSoC5/USB.c ****                 (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1505:Generated_Source\PSoC5/USB.c ****             #endif /* (CY_PSOC4) */
1506:Generated_Source\PSoC5/USB.c ****             }
1507:Generated_Source\PSoC5/USB.c ****             else
1508:Generated_Source\PSoC5/USB.c ****             {
1509:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1510:Generated_Source\PSoC5/USB.c ****                 USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1511:Generated_Source\PSoC5/USB.c **** 
1512:Generated_Source\PSoC5/USB.c ****                 if (length > 0u)
1513:Generated_Source\PSoC5/USB.c ****                 {
1514:Generated_Source\PSoC5/USB.c ****                 #if (CY_PSOC4)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 48


1515:Generated_Source\PSoC5/USB.c ****                     uint32 lengthDescr0, lengthDescr1;
1516:Generated_Source\PSoC5/USB.c ****                     uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1517:Generated_Source\PSoC5/USB.c **** 
1518:Generated_Source\PSoC5/USB.c ****                     /* Get number of full bursts. */
1519:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1520:Generated_Source\PSoC5/USB.c **** 
1521:Generated_Source\PSoC5/USB.c ****                     /* Get number of elements in the last burst. */
1522:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1523:Generated_Source\PSoC5/USB.c **** 
1524:Generated_Source\PSoC5/USB.c ****                     /* Get total number of bursts. */
1525:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1526:Generated_Source\PSoC5/USB.c **** 
1527:Generated_Source\PSoC5/USB.c ****                     /* Adjust number of data elements transferred in last burst. */
1528:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1529:Generated_Source\PSoC5/USB.c ****                                                                           (USB_DmaEpLastBurstEl[epN
1530:Generated_Source\PSoC5/USB.c ****                                                                           (USB_DMA_BYTES_PER_BURST 
1531:Generated_Source\PSoC5/USB.c **** 
1532:Generated_Source\PSoC5/USB.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
1533:Generated_Source\PSoC5/USB.c ****                     lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
1534:Generated_Source\PSoC5/USB.c ****                     lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
1535:Generated_Source\PSoC5/USB.c **** 
1536:Generated_Source\PSoC5/USB.c **** 
1537:Generated_Source\PSoC5/USB.c ****                     /* Mark which descriptor is last one to execute. */
1538:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) 
1539:Generated_Source\PSoC5/USB.c ****                                                                             USB_DMA_DESCR0_MASK : U
1540:Generated_Source\PSoC5/USB.c **** 
1541:Generated_Source\PSoC5/USB.c ****                     /* Restore DMA settings for current transfer. */
1542:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChDisable(channelNum);
1543:Generated_Source\PSoC5/USB.c **** 
1544:Generated_Source\PSoC5/USB.c ****                     /* Restore destination address for input endpoint. */
1545:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) USB_DmaEpB
1546:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) USB_DmaEpB
1547:Generated_Source\PSoC5/USB.c ****                                                                                                    
1548:Generated_Source\PSoC5/USB.c **** 
1549:Generated_Source\PSoC5/USB.c ****                     /* Set number of elements to transfer. */
1550:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR0, lengthDescr0);
1551:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR1, lengthDescr1);
1552:Generated_Source\PSoC5/USB.c **** 
1553:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 0 and command to start with it. */
1554:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1555:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetDescriptor0Next(channelNum);
1556:Generated_Source\PSoC5/USB.c **** 
1557:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 1. */
1558:Generated_Source\PSoC5/USB.c ****                     if (USB_DmaEpBurstCnt[epNumber] > 1u)
1559:Generated_Source\PSoC5/USB.c ****                     {
1560:Generated_Source\PSoC5/USB.c ****                         USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1); 
1561:Generated_Source\PSoC5/USB.c ****                     }                   
1562:Generated_Source\PSoC5/USB.c **** 
1563:Generated_Source\PSoC5/USB.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
1564:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]
1565:Generated_Source\PSoC5/USB.c **** 
1566:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA channel: configuration complete. */
1567:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChEnable(channelNum);
1568:Generated_Source\PSoC5/USB.c **** 
1569:Generated_Source\PSoC5/USB.c ****                 #elif (USB_EP_DMA_AUTO_OPT == 0u)
1570:Generated_Source\PSoC5/USB.c ****                     USB_inLength[epNumber]  = length;
1571:Generated_Source\PSoC5/USB.c ****                     USB_inBufFull[epNumber] = 0u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 49


1572:Generated_Source\PSoC5/USB.c **** 
1573:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1574:Generated_Source\PSoC5/USB.c ****                     /* Configure DMA to send data only for first burst. */
1575:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetConfiguration(
1576:Generated_Source\PSoC5/USB.c ****                         USB_DmaTd[epNumber], (length > USB_DMA_BYTES_PER_BURST) ?
1577:Generated_Source\PSoC5/USB.c ****                         USB_DMA_BYTES_PER_BURST : length,
1578:Generated_Source\PSoC5/USB.c ****                         USB_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1579:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32)  USB_inDataPointer[
1580:Generated_Source\PSoC5/USB.c ****                                                                                LO16((uint32) &USB_A
1581:Generated_Source\PSoC5/USB.c ****                     /* Clear Any potential pending DMA requests before starting DMA channel to tran
1582:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1583:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA. */
1584:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1585:Generated_Source\PSoC5/USB.c ****                     (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1586:Generated_Source\PSoC5/USB.c ****                 #endif /* (CY_PSOC4) */
1587:Generated_Source\PSoC5/USB.c **** 
1588:Generated_Source\PSoC5/USB.c ****                 #if !defined (USB_MANUAL_IN_EP_ARM)
1589:Generated_Source\PSoC5/USB.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
1590:Generated_Source\PSoC5/USB.c ****                     USB_ARB_EP_BASE.arbEp[epNumber].epCfg |= USB_ARB_EPX_CFG_IN_DATA_RDY;
1591:Generated_Source\PSoC5/USB.c ****                 #endif  /* (USB_MANUAL_IN_EP_ARM) */
1592:Generated_Source\PSoC5/USB.c **** 
1593:Generated_Source\PSoC5/USB.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
1594:Generated_Source\PSoC5/USB.c ****                 }
1595:Generated_Source\PSoC5/USB.c ****                 else
1596:Generated_Source\PSoC5/USB.c ****                 {
1597:Generated_Source\PSoC5/USB.c ****                     /* When zero-length packet: arm IN endpoint directly. */
1598:Generated_Source\PSoC5/USB.c ****                     USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1599:Generated_Source\PSoC5/USB.c ****                 }
1600:Generated_Source\PSoC5/USB.c ****             }
1601:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1602:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
1603:Generated_Source\PSoC5/USB.c ****     }
1604:Generated_Source\PSoC5/USB.c **** }
 1164              		.loc 1 1604 0
 1165 00f2 00BF     		nop
 1166 00f4 1437     		adds	r7, r7, #20
 1167              		.cfi_def_cfa_offset 12
 1168 00f6 BD46     		mov	sp, r7
 1169              		.cfi_def_cfa_register 13
 1170              		@ sp needed
 1171 00f8 B0BC     		pop	{r4, r5, r7}
 1172              		.cfi_restore 7
 1173              		.cfi_restore 5
 1174              		.cfi_restore 4
 1175              		.cfi_def_cfa_offset 0
 1176 00fa 7047     		bx	lr
 1177              	.L58:
 1178              		.align	2
 1179              	.L57:
 1180 00fc 00000000 		.word	USB_EP
 1181 0100 FC5F0040 		.word	1073766396
 1182 0104 70600040 		.word	1073766512
 1183              		.cfi_endproc
 1184              	.LFE11:
 1185              		.size	USB_LoadInEP, .-USB_LoadInEP
 1186              		.section	.text.USB_ReadOutEP,"ax",%progbits
 1187              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 50


 1188              		.global	USB_ReadOutEP
 1189              		.thumb
 1190              		.thumb_func
 1191              		.type	USB_ReadOutEP, %function
 1192              	USB_ReadOutEP:
 1193              	.LFB12:
1605:Generated_Source\PSoC5/USB.c **** 
1606:Generated_Source\PSoC5/USB.c **** 
1607:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1608:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReadOutEP
1609:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1610:Generated_Source\PSoC5/USB.c **** *
1611:Generated_Source\PSoC5/USB.c **** *   This function performs different functionality depending on the Component’s
1612:Generated_Source\PSoC5/USB.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
1613:Generated_Source\PSoC5/USB.c **** *   Descriptor Root in Component Configure window.
1614:Generated_Source\PSoC5/USB.c **** *
1615:Generated_Source\PSoC5/USB.c **** *   *Manual (Static/Dynamic Allocation):*
1616:Generated_Source\PSoC5/USB.c **** *   This function moves the specified number of bytes from endpoint buffer to
1617:Generated_Source\PSoC5/USB.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
1618:Generated_Source\PSoC5/USB.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
1619:Generated_Source\PSoC5/USB.c **** *   the number of bytes requested by the length parameter.
1620:Generated_Source\PSoC5/USB.c **** *
1621:Generated_Source\PSoC5/USB.c **** *   *DMA with Manual Buffer Management:*
1622:Generated_Source\PSoC5/USB.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
1623:Generated_Source\PSoC5/USB.c **** *   a DMA request. The firmware must wait until the DMA completes the data
1624:Generated_Source\PSoC5/USB.c **** *   transfer after calling the USB_ReadOutEP() API. For example,
1625:Generated_Source\PSoC5/USB.c **** *   by checking EPstate:
1626:Generated_Source\PSoC5/USB.c **** *
1627:Generated_Source\PSoC5/USB.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
1628:Generated_Source\PSoC5/USB.c **** *
1629:Generated_Source\PSoC5/USB.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
1630:Generated_Source\PSoC5/USB.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
1631:Generated_Source\PSoC5/USB.c **** *   buffer to SRAM.
1632:Generated_Source\PSoC5/USB.c **** *
1633:Generated_Source\PSoC5/USB.c **** *   *DMA with Automatic Buffer Management:*
1634:Generated_Source\PSoC5/USB.c **** *   Configure DMA. This is required only once and automatically generates DMA
1635:Generated_Source\PSoC5/USB.c **** *   requests as data arrives
1636:Generated_Source\PSoC5/USB.c **** *
1637:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
1638:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
1639:Generated_Source\PSoC5/USB.c **** *  \param pData: A pointer to a data array from which the data for the endpoint
1640:Generated_Source\PSoC5/USB.c **** *         space is loaded.
1641:Generated_Source\PSoC5/USB.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
1642:Generated_Source\PSoC5/USB.c **** *          loads it into data array. Valid values are between 0 and 1023. The
1643:Generated_Source\PSoC5/USB.c **** *          function moves fewer than the requested number of bytes if the host
1644:Generated_Source\PSoC5/USB.c **** *          sends fewer bytes than requested.
1645:Generated_Source\PSoC5/USB.c **** *
1646:Generated_Source\PSoC5/USB.c **** * \return
1647:Generated_Source\PSoC5/USB.c **** *  Number of bytes received, 0 for an invalid endpoint.
1648:Generated_Source\PSoC5/USB.c **** *
1649:Generated_Source\PSoC5/USB.c **** * \reentrant
1650:Generated_Source\PSoC5/USB.c **** *  No.
1651:Generated_Source\PSoC5/USB.c **** *
1652:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1653:Generated_Source\PSoC5/USB.c **** uint16 USB_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1654:Generated_Source\PSoC5/USB.c ****                                                                         
1655:Generated_Source\PSoC5/USB.c **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 51


 1194              		.loc 1 1655 0
 1195              		.cfi_startproc
 1196              		@ args = 0, pretend = 0, frame = 16
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0000 80B5     		push	{r7, lr}
 1199              		.cfi_def_cfa_offset 8
 1200              		.cfi_offset 7, -8
 1201              		.cfi_offset 14, -4
 1202 0002 84B0     		sub	sp, sp, #16
 1203              		.cfi_def_cfa_offset 24
 1204 0004 00AF     		add	r7, sp, #0
 1205              		.cfi_def_cfa_register 7
 1206 0006 0346     		mov	r3, r0
 1207 0008 3960     		str	r1, [r7]
 1208 000a FB71     		strb	r3, [r7, #7]
 1209 000c 1346     		mov	r3, r2	@ movhi
 1210 000e BB80     		strh	r3, [r7, #4]	@ movhi
1656:Generated_Source\PSoC5/USB.c ****     if ((pData != NULL) && (epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1211              		.loc 1 1656 0
 1212 0010 3B68     		ldr	r3, [r7]
 1213 0012 002B     		cmp	r3, #0
 1214 0014 30D0     		beq	.L60
 1215              		.loc 1 1656 0 is_stmt 0 discriminator 1
 1216 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1217 0018 002B     		cmp	r3, #0
 1218 001a 2DD0     		beq	.L60
 1219              		.loc 1 1656 0 discriminator 2
 1220 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1221 001e 082B     		cmp	r3, #8
 1222 0020 2AD8     		bhi	.L60
1657:Generated_Source\PSoC5/USB.c ****     {
1658:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1659:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length to available data. */
1660:Generated_Source\PSoC5/USB.c ****         length = (length > USB_GetEPCount(epNumber)) ? USB_GetEPCount(epNumber) : length;
 1223              		.loc 1 1660 0 is_stmt 1
 1224 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1225 0024 1846     		mov	r0, r3
 1226 0026 FFF7FEFF 		bl	USB_GetEPCount
 1227 002a 0346     		mov	r3, r0
 1228 002c 1A46     		mov	r2, r3
 1229 002e BB88     		ldrh	r3, [r7, #4]
 1230 0030 9342     		cmp	r3, r2
 1231 0032 05D9     		bls	.L61
 1232              		.loc 1 1660 0 is_stmt 0 discriminator 1
 1233 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1234 0036 1846     		mov	r0, r3
 1235 0038 FFF7FEFF 		bl	USB_GetEPCount
 1236 003c 0346     		mov	r3, r0
 1237 003e 00E0     		b	.L62
 1238              	.L61:
 1239              		.loc 1 1660 0 discriminator 2
 1240 0040 BB88     		ldrh	r3, [r7, #4]
 1241              	.L62:
 1242              		.loc 1 1660 0 discriminator 4
 1243 0042 BB80     		strh	r3, [r7, #4]	@ movhi
 1244              	.LBB3:
1661:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 52


1662:Generated_Source\PSoC5/USB.c **** 
1663:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1664:Generated_Source\PSoC5/USB.c ****         {
1665:Generated_Source\PSoC5/USB.c ****             /* Copy data using arbiter data register. */
1666:Generated_Source\PSoC5/USB.c ****             uint16 i;
1667:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < length; ++i)
 1245              		.loc 1 1667 0 is_stmt 1 discriminator 4
 1246 0044 0023     		movs	r3, #0
 1247 0046 FB81     		strh	r3, [r7, #14]	@ movhi
 1248 0048 0DE0     		b	.L63
 1249              	.L64:
1668:Generated_Source\PSoC5/USB.c ****             {
1669:Generated_Source\PSoC5/USB.c ****                 pData[i] = (uint8) USB_ARB_EP_BASE.arbEp[epNumber].rwDr;
 1250              		.loc 1 1669 0 discriminator 3
 1251 004a FB89     		ldrh	r3, [r7, #14]
 1252 004c 3A68     		ldr	r2, [r7]
 1253 004e 1344     		add	r3, r3, r2
 1254 0050 0D49     		ldr	r1, .L67
 1255 0052 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1256 0054 1201     		lsls	r2, r2, #4
 1257 0056 0A44     		add	r2, r2, r1
 1258 0058 0832     		adds	r2, r2, #8
 1259 005a 1278     		ldrb	r2, [r2]
 1260 005c D2B2     		uxtb	r2, r2
 1261 005e 1A70     		strb	r2, [r3]
1667:Generated_Source\PSoC5/USB.c ****             {
 1262              		.loc 1 1667 0 discriminator 3
 1263 0060 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1264 0062 0133     		adds	r3, r3, #1
 1265 0064 FB81     		strh	r3, [r7, #14]	@ movhi
 1266              	.L63:
1667:Generated_Source\PSoC5/USB.c ****             {
 1267              		.loc 1 1667 0 is_stmt 0 discriminator 1
 1268 0066 FA89     		ldrh	r2, [r7, #14]
 1269 0068 BB88     		ldrh	r3, [r7, #4]
 1270 006a 9A42     		cmp	r2, r3
 1271 006c EDD3     		bcc	.L64
 1272              	.LBE3:
1670:Generated_Source\PSoC5/USB.c ****             }
1671:Generated_Source\PSoC5/USB.c ****         }
1672:Generated_Source\PSoC5/USB.c **** 
1673:Generated_Source\PSoC5/USB.c ****         /* Arm OUT endpoint after data has been copied from endpoint buffer. */
1674:Generated_Source\PSoC5/USB.c ****         USB_EnableOutEP(epNumber);
 1273              		.loc 1 1674 0 is_stmt 1
 1274 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1275 0070 1846     		mov	r0, r3
 1276 0072 FFF7FEFF 		bl	USB_EnableOutEP
 1277 0076 01E0     		b	.L65
 1278              	.L60:
1675:Generated_Source\PSoC5/USB.c ****     #else
1676:Generated_Source\PSoC5/USB.c **** 
1677:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
1678:Generated_Source\PSoC5/USB.c ****             /* Initialize DMA if it was not initialized. */
1679:Generated_Source\PSoC5/USB.c ****             if (DMA_INVALID_TD == USB_DmaTd[epNumber])
1680:Generated_Source\PSoC5/USB.c ****             {
1681:Generated_Source\PSoC5/USB.c ****                 USB_InitEP_DMA(epNumber, pData);
1682:Generated_Source\PSoC5/USB.c ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 53


1683:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC3 || CY_PSOC5LP) */
1684:Generated_Source\PSoC5/USB.c **** 
1685:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1686:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1687:Generated_Source\PSoC5/USB.c ****         {
1688:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1689:Generated_Source\PSoC5/USB.c **** 
1690:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
1691:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
1692:Generated_Source\PSoC5/USB.c **** 
1693:Generated_Source\PSoC5/USB.c ****             /* Configure source and destination. */
1694:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1695:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1696:Generated_Source\PSoC5/USB.c **** 
1697:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1698:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | (uint16)(len
1699:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1700:Generated_Source\PSoC5/USB.c **** 
1701:Generated_Source\PSoC5/USB.c ****             /* Validate descriptor to execute on following DMA request. */
1702:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1703:Generated_Source\PSoC5/USB.c **** 
1704:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
1705:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
1706:Generated_Source\PSoC5/USB.c ****         }
1707:Generated_Source\PSoC5/USB.c ****         #else
1708:Generated_Source\PSoC5/USB.c ****             /* Configure DMA to transfer data. */
1709:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1710:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length, CY_DMA_DISABLE_TD, TD_TERMI
1711:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) &USB_ARB_EP_BASE.arbEp[epNu
1712:Generated_Source\PSoC5/USB.c **** 
1713:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel. */
1714:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1715:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1716:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1717:Generated_Source\PSoC5/USB.c **** 
1718:Generated_Source\PSoC5/USB.c ****             /* Generate DMA request. */
1719:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint8)  USB_ARB_EPX_CFG_DMA_REQ;
1720:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint8) ~USB_ARB_EPX_CFG_DMA_REQ;
1721:Generated_Source\PSoC5/USB.c **** 
1722:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1723:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1724:Generated_Source\PSoC5/USB.c ****             */
1725:Generated_Source\PSoC5/USB.c **** 
1726:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1727:Generated_Source\PSoC5/USB.c **** 
1728:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1729:Generated_Source\PSoC5/USB.c ****         #if (CY_PSOC4)
1730:Generated_Source\PSoC5/USB.c ****         {
1731:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1732:Generated_Source\PSoC5/USB.c ****             uint32 lengthDescr0, lengthDescr1;
1733:Generated_Source\PSoC5/USB.c **** 
1734:Generated_Source\PSoC5/USB.c ****             /* Get number of full bursts. */
1735:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1736:Generated_Source\PSoC5/USB.c **** 
1737:Generated_Source\PSoC5/USB.c ****             /* Get number of elements in the last burst. */
1738:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1739:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 54


1740:Generated_Source\PSoC5/USB.c ****             /* Get total number of bursts. */
1741:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
1742:Generated_Source\PSoC5/USB.c **** 
1743:Generated_Source\PSoC5/USB.c ****             /* Adjust number of the data elements transfered in last burst. */
1744:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1745:Generated_Source\PSoC5/USB.c ****                                                                   (USB_DmaEpLastBurstEl[epNumber] -
1746:Generated_Source\PSoC5/USB.c ****                                                                   (USB_DMA_BYTES_PER_BURST - 1u);
1747:Generated_Source\PSoC5/USB.c **** 
1748:Generated_Source\PSoC5/USB.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
1749:Generated_Source\PSoC5/USB.c ****             lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
1750:Generated_Source\PSoC5/USB.c ****             lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
1751:Generated_Source\PSoC5/USB.c **** 
1752:Generated_Source\PSoC5/USB.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
1753:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (USB_DmaEpBurstCnt[epNumber] > 2u) ? USB_DMA_DESCR_RE
1754:Generated_Source\PSoC5/USB.c **** 
1755:Generated_Source\PSoC5/USB.c ****             /* Mark last descriptor to be executed. */
1756:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) ?
1757:Generated_Source\PSoC5/USB.c ****                                                                     USB_DMA_DESCR0_MASK : USB_DMA_D
1758:Generated_Source\PSoC5/USB.c **** 
1759:Generated_Source\PSoC5/USB.c ****             /* Store address of buffer and burst counter for endpoint. */
1760:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1761:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCntBackup[epNumber]   = USB_DmaEpBurstCnt[epNumber];
1762:Generated_Source\PSoC5/USB.c **** 
1763:Generated_Source\PSoC5/USB.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
1764:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]);
1765:Generated_Source\PSoC5/USB.c **** 
1766:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
1767:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
1768:Generated_Source\PSoC5/USB.c **** 
1769:Generated_Source\PSoC5/USB.c ****             /* Set destination address. */
1770:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1771:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP_BASE.arbEp[epNum
1772:Generated_Source\PSoC5/USB.c **** 
1773:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) pData));
1774:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) pData + USB_DMA_BY
1775:Generated_Source\PSoC5/USB.c **** 
1776:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1777:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  | lengthDescr
1778:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1779:Generated_Source\PSoC5/USB.c **** 
1780:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
1781:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  | lengthDescr
1782:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_BYTE | CYDMA_WORD_ELEMENT | CYDMA_INC_DST
1783:Generated_Source\PSoC5/USB.c **** 
1784:Generated_Source\PSoC5/USB.c ****             /* Enable interrupt from DMA channel. */
1785:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetInterruptMask(channelNum);
1786:Generated_Source\PSoC5/USB.c **** 
1787:Generated_Source\PSoC5/USB.c ****             /* Validate DMA descriptor 0 and 1. */
1788:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1789:Generated_Source\PSoC5/USB.c **** 
1790:Generated_Source\PSoC5/USB.c ****             if (USB_DmaEpBurstCntBackup[epNumber] > 1u)
1791:Generated_Source\PSoC5/USB.c ****             {
1792:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
1793:Generated_Source\PSoC5/USB.c ****             }
1794:Generated_Source\PSoC5/USB.c **** 
1795:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
1796:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 55


1797:Generated_Source\PSoC5/USB.c ****         }
1798:Generated_Source\PSoC5/USB.c ****         #else
1799:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChDisable(USB_DmaChan[epNumber]);
1800:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetConfiguration(USB_DmaTd[epNumber], length,  USB_DmaTd[epNumber], TD_TE
1801:Generated_Source\PSoC5/USB.c ****             (void) CyDmaTdSetAddress(USB_DmaTd[epNumber], LO16((uint32) &USB_ARB_EP_BASE.arbEp[epNu
1802:Generated_Source\PSoC5/USB.c **** 
1803:Generated_Source\PSoC5/USB.c ****             /* Clear Any potential pending DMA requests before starting DMA channel to transfer dat
1804:Generated_Source\PSoC5/USB.c ****             (void) CyDmaClearPendingDrq(USB_DmaChan[epNumber]);
1805:Generated_Source\PSoC5/USB.c **** 
1806:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel. */
1807:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChSetInitialTd(USB_DmaChan[epNumber], USB_DmaTd[epNumber]);
1808:Generated_Source\PSoC5/USB.c ****             (void) CyDmaChEnable(USB_DmaChan[epNumber], 1u);
1809:Generated_Source\PSoC5/USB.c ****         #endif /* (CY_PSOC4) */
1810:Generated_Source\PSoC5/USB.c **** 
1811:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
1812:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
1813:Generated_Source\PSoC5/USB.c ****             */
1814:Generated_Source\PSoC5/USB.c **** 
1815:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
1816:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
1817:Generated_Source\PSoC5/USB.c ****     }
1818:Generated_Source\PSoC5/USB.c ****     else
1819:Generated_Source\PSoC5/USB.c ****     {
1820:Generated_Source\PSoC5/USB.c ****         length = 0u;
 1279              		.loc 1 1820 0
 1280 0078 0023     		movs	r3, #0
 1281 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1282              	.L65:
1821:Generated_Source\PSoC5/USB.c ****     }
1822:Generated_Source\PSoC5/USB.c **** 
1823:Generated_Source\PSoC5/USB.c ****     return (length);
 1283              		.loc 1 1823 0
 1284 007c BB88     		ldrh	r3, [r7, #4]
1824:Generated_Source\PSoC5/USB.c **** }
 1285              		.loc 1 1824 0
 1286 007e 1846     		mov	r0, r3
 1287 0080 1037     		adds	r7, r7, #16
 1288              		.cfi_def_cfa_offset 8
 1289 0082 BD46     		mov	sp, r7
 1290              		.cfi_def_cfa_register 13
 1291              		@ sp needed
 1292 0084 80BD     		pop	{r7, pc}
 1293              	.L68:
 1294 0086 00BF     		.align	2
 1295              	.L67:
 1296 0088 70600040 		.word	1073766512
 1297              		.cfi_endproc
 1298              	.LFE12:
 1299              		.size	USB_ReadOutEP, .-USB_ReadOutEP
 1300              		.section	.text.USB_EnableOutEP,"ax",%progbits
 1301              		.align	2
 1302              		.global	USB_EnableOutEP
 1303              		.thumb
 1304              		.thumb_func
 1305              		.type	USB_EnableOutEP, %function
 1306              	USB_EnableOutEP:
 1307              	.LFB13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 56


1825:Generated_Source\PSoC5/USB.c **** 
1826:Generated_Source\PSoC5/USB.c **** 
1827:Generated_Source\PSoC5/USB.c **** #if (USB_16BITS_EP_ACCESS_ENABLE)
1828:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
1829:Generated_Source\PSoC5/USB.c **** * Function Name: USB_LoadInEP16
1830:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
1831:Generated_Source\PSoC5/USB.c **** *
1832:Generated_Source\PSoC5/USB.c **** *  This function performs different functionality depending on the Component’s
1833:Generated_Source\PSoC5/USB.c **** *  configured Endpoint Buffer Management. This parameter is defined in
1834:Generated_Source\PSoC5/USB.c **** *  the Descriptor Root in Component Configure window.
1835:Generated_Source\PSoC5/USB.c **** *
1836:Generated_Source\PSoC5/USB.c **** *  *Manual (Static/Dynamic Allocation):*
1837:Generated_Source\PSoC5/USB.c **** *  This function loads and enables the specified USB data endpoint for an IN
1838:Generated_Source\PSoC5/USB.c **** *  data transfer.
1839:Generated_Source\PSoC5/USB.c **** *
1840:Generated_Source\PSoC5/USB.c **** *  *DMA with Manual Buffer Management:*
1841:Generated_Source\PSoC5/USB.c **** *  Configures DMA for a data transfer from system RAM to endpoint buffer.
1842:Generated_Source\PSoC5/USB.c **** *  Generates request for a transfer.
1843:Generated_Source\PSoC5/USB.c **** *
1844:Generated_Source\PSoC5/USB.c **** *  *DMA with Automatic Buffer Management:*
1845:Generated_Source\PSoC5/USB.c **** *  Configures DMA. This is required only once, so it is done only when parameter
1846:Generated_Source\PSoC5/USB.c **** *  pData is not NULL. When the pData pointer is NULL, the function skips this
1847:Generated_Source\PSoC5/USB.c **** *  task. Sets Data ready status: This generates the first DMA transfer and
1848:Generated_Source\PSoC5/USB.c **** *  prepares data in endpoint buffer.
1849:Generated_Source\PSoC5/USB.c **** *
1850:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
1851:Generated_Source\PSoC5/USB.c **** *        Valid values are between 1 and 8.
1852:Generated_Source\PSoC5/USB.c **** *  \param *pData A pointer to a data array from which the data for the endpoint
1853:Generated_Source\PSoC5/USB.c **** *        space is loaded. It shall be ensured that this pointer address is even
1854:Generated_Source\PSoC5/USB.c **** *        to ensure the 16-bit transfer is aligned to even address. Else, a hard
1855:Generated_Source\PSoC5/USB.c **** *        fault condition can occur.
1856:Generated_Source\PSoC5/USB.c **** *  \param length The number of bytes to transfer from the array and then send as
1857:Generated_Source\PSoC5/USB.c **** *        a result of an IN request. Valid values are between 0 and 512 (1023 for
1858:Generated_Source\PSoC5/USB.c **** *        DMA with Automatic Buffer Management mode). The value 512 is applicable
1859:Generated_Source\PSoC5/USB.c **** *        if only one endpoint is used.
1860:Generated_Source\PSoC5/USB.c **** *
1861:Generated_Source\PSoC5/USB.c **** * \reentrant
1862:Generated_Source\PSoC5/USB.c **** *  No.
1863:Generated_Source\PSoC5/USB.c **** *
1864:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
1865:Generated_Source\PSoC5/USB.c **** void USB_LoadInEP16(uint8 epNumber, const uint8 pData[], uint16 length)
1866:Generated_Source\PSoC5/USB.c **** {
1867:Generated_Source\PSoC5/USB.c ****     /* Check array alignment on half-word boundary. */
1868:Generated_Source\PSoC5/USB.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
1869:Generated_Source\PSoC5/USB.c **** 
1870:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
1871:Generated_Source\PSoC5/USB.c ****     {
1872:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
1873:Generated_Source\PSoC5/USB.c ****         /* Limit length to available buffer USB IP buffer size. */
1874:Generated_Source\PSoC5/USB.c ****         if (length > (USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset))
1875:Generated_Source\PSoC5/USB.c ****         {
1876:Generated_Source\PSoC5/USB.c ****             length = USB_EPX_DATA_BUF_MAX - USB_EP[epNumber].buffOffset;
1877:Generated_Source\PSoC5/USB.c ****         }
1878:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
1879:Generated_Source\PSoC5/USB.c **** 
1880:Generated_Source\PSoC5/USB.c ****         /* Set count and data toggle. */
1881:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt0 = (uint32) HI8(length) | USB_EP[epNumber].epToggle;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 57


1882:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCnt1 = (uint32) LO8(length);
1883:Generated_Source\PSoC5/USB.c **** 
1884:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length: 2 bytes are handled at one data register access. */
1885:Generated_Source\PSoC5/USB.c ****         length += (length & 0x01u);
1886:Generated_Source\PSoC5/USB.c **** 
1887:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
1888:Generated_Source\PSoC5/USB.c ****         if (NULL != pData)
1889:Generated_Source\PSoC5/USB.c ****         {
1890:Generated_Source\PSoC5/USB.c ****             /* Convert uint8 array to uint16. */
1891:Generated_Source\PSoC5/USB.c ****             const uint16 *dataBuf = (uint16 *) pData;
1892:Generated_Source\PSoC5/USB.c **** 
1893:Generated_Source\PSoC5/USB.c ****             /* Copy data using 16-bits arbiter data register. */
1894:Generated_Source\PSoC5/USB.c ****             uint16 i;
1895:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < (length >> 1u); ++i)
1896:Generated_Source\PSoC5/USB.c ****             {
1897:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP16_BASE.arbEp[epNumber].rwDr16 = dataBuf[i];
1898:Generated_Source\PSoC5/USB.c ****             }
1899:Generated_Source\PSoC5/USB.c ****         }
1900:Generated_Source\PSoC5/USB.c **** 
1901:Generated_Source\PSoC5/USB.c ****         /* IN endpoint buffer is full - read to be read. */
1902:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1903:Generated_Source\PSoC5/USB.c **** 
1904:Generated_Source\PSoC5/USB.c ****         /* Arm IN endpoint. */
1905:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1906:Generated_Source\PSoC5/USB.c **** 
1907:Generated_Source\PSoC5/USB.c ****     #else
1908:Generated_Source\PSoC5/USB.c **** 
1909:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
1910:Generated_Source\PSoC5/USB.c ****             /* IN endpoint buffer will be fully loaded by DMA shortly. */
1911:Generated_Source\PSoC5/USB.c ****             USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1912:Generated_Source\PSoC5/USB.c **** 
1913:Generated_Source\PSoC5/USB.c ****             if ((pData != NULL) && (length > 0u))
1914:Generated_Source\PSoC5/USB.c ****             {
1915:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1916:Generated_Source\PSoC5/USB.c **** 
1917:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1918:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1919:Generated_Source\PSoC5/USB.c **** 
1920:Generated_Source\PSoC5/USB.c ****                 /* Configure source and destination. */
1921:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
1922:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp
1923:Generated_Source\PSoC5/USB.c **** 
1924:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1925:Generated_Source\PSoC5/USB.c ****                 length = (length >> 1u) - 1u;
1926:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | length |
1927:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1928:Generated_Source\PSoC5/USB.c **** 
1929:Generated_Source\PSoC5/USB.c ****                 /* Validate descriptor to execute on following DMA request. */
1930:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
1931:Generated_Source\PSoC5/USB.c **** 
1932:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1933:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1934:Generated_Source\PSoC5/USB.c **** 
1935:Generated_Source\PSoC5/USB.c ****                 /* Generate DMA request. */
1936:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USB_ARB_EPX_CFG_DMA_REQ;
1937:Generated_Source\PSoC5/USB.c ****                 USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USB_ARB_EPX_CFG_DMA_REQ;
1938:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 58


1939:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA transf
1940:Generated_Source\PSoC5/USB.c ****             }
1941:Generated_Source\PSoC5/USB.c ****             else
1942:Generated_Source\PSoC5/USB.c ****             {
1943:Generated_Source\PSoC5/USB.c ****                 /* When zero-length packet: arm IN endpoint directly. */
1944:Generated_Source\PSoC5/USB.c ****                 USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
1945:Generated_Source\PSoC5/USB.c ****             }
1946:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
1947:Generated_Source\PSoC5/USB.c **** 
1948:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
1949:Generated_Source\PSoC5/USB.c ****             if (pData != NULL)
1950:Generated_Source\PSoC5/USB.c ****             {
1951:Generated_Source\PSoC5/USB.c ****                 uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1952:Generated_Source\PSoC5/USB.c **** 
1953:Generated_Source\PSoC5/USB.c ****                 /* Store address of buffer. */
1954:Generated_Source\PSoC5/USB.c ****                 USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
1955:Generated_Source\PSoC5/USB.c **** 
1956:Generated_Source\PSoC5/USB.c ****                 /* Disable DMA channel: start configuration. */
1957:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChDisable(channelNum);
1958:Generated_Source\PSoC5/USB.c **** 
1959:Generated_Source\PSoC5/USB.c ****                 /* Set destination address. */
1960:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp
1961:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP16_BASE.arbEp
1962:Generated_Source\PSoC5/USB.c **** 
1963:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1964:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  |
1965:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1966:Generated_Source\PSoC5/USB.c **** 
1967:Generated_Source\PSoC5/USB.c ****                 /* Configure DMA descriptor. */
1968:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  |
1969:Generated_Source\PSoC5/USB.c ****                                                         CYDMA_HALFWORD | CYDMA_ELEMENT_WORD | CYDMA
1970:Generated_Source\PSoC5/USB.c **** 
1971:Generated_Source\PSoC5/USB.c ****                 /* Enable interrupt from DMA channel. */
1972:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaSetInterruptMask(channelNum);
1973:Generated_Source\PSoC5/USB.c **** 
1974:Generated_Source\PSoC5/USB.c ****                 /* Enable DMA channel: configuration complete. */
1975:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaChEnable(channelNum);
1976:Generated_Source\PSoC5/USB.c ****             }
1977:Generated_Source\PSoC5/USB.c ****             else
1978:Generated_Source\PSoC5/USB.c ****             {
1979:Generated_Source\PSoC5/USB.c ****                 /* IN endpoint buffer (32 bytes) will shortly be preloaded by DMA. */
1980:Generated_Source\PSoC5/USB.c ****                 USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
1981:Generated_Source\PSoC5/USB.c **** 
1982:Generated_Source\PSoC5/USB.c ****                 if (length > 0u)
1983:Generated_Source\PSoC5/USB.c ****                 {
1984:Generated_Source\PSoC5/USB.c ****                     uint32 lengthDescr0, lengthDescr1;
1985:Generated_Source\PSoC5/USB.c ****                     uint32 channelNum = (uint32) USB_DmaChan[epNumber];
1986:Generated_Source\PSoC5/USB.c **** 
1987:Generated_Source\PSoC5/USB.c ****                     /* Get number of full bursts. */
1988:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = (uint8) (length / USB_DMA_BYTES_PER_BURST);
1989:Generated_Source\PSoC5/USB.c **** 
1990:Generated_Source\PSoC5/USB.c ****                     /* Get number of elements in the last burst. */
1991:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (uint8) (length % USB_DMA_BYTES_PER_BURST);
1992:Generated_Source\PSoC5/USB.c **** 
1993:Generated_Source\PSoC5/USB.c ****                     /* Get total number of bursts. */
1994:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u
1995:Generated_Source\PSoC5/USB.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 59


1996:Generated_Source\PSoC5/USB.c ****                     /* Adjust number of data elements transferred in last burst. */
1997:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
1998:Generated_Source\PSoC5/USB.c ****                                                                           ((USB_DmaEpLastBurstEl[ep
1999:Generated_Source\PSoC5/USB.c ****                                                                            (USB_DMA_HALFWORDS_PER_B
2000:Generated_Source\PSoC5/USB.c **** 
2001:Generated_Source\PSoC5/USB.c ****                     /* Get number of data elements to transfer for descriptor 0 and 1. */
2002:Generated_Source\PSoC5/USB.c ****                     lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
2003:Generated_Source\PSoC5/USB.c ****                     lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNum
2004:Generated_Source\PSoC5/USB.c **** 
2005:Generated_Source\PSoC5/USB.c ****                     /* Mark which descriptor is last one to execute. */
2006:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) 
2007:Generated_Source\PSoC5/USB.c ****                                                                             USB_DMA_DESCR0_MASK : U
2008:Generated_Source\PSoC5/USB.c **** 
2009:Generated_Source\PSoC5/USB.c ****                     /* Restore DMA settings for current transfer. */
2010:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChDisable(channelNum);
2011:Generated_Source\PSoC5/USB.c **** 
2012:Generated_Source\PSoC5/USB.c ****                     /* Restore destination address for input endpoint. */
2013:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) USB_DmaEpB
2014:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) USB_DmaEpB
2015:Generated_Source\PSoC5/USB.c ****                                                                                                    
2016:Generated_Source\PSoC5/USB.c **** 
2017:Generated_Source\PSoC5/USB.c ****                     /* Set number of elements to transfer. */
2018:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR0, lengthDescr0);
2019:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetNumDataElements(channelNum, USB_DMA_DESCR1, lengthDescr1);
2020:Generated_Source\PSoC5/USB.c **** 
2021:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 0 and command to start with it. */
2022:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2023:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaSetDescriptor0Next(channelNum);
2024:Generated_Source\PSoC5/USB.c **** 
2025:Generated_Source\PSoC5/USB.c ****                     /* Validate descriptor 1. */
2026:Generated_Source\PSoC5/USB.c ****                     if (USB_DmaEpBurstCnt[epNumber] > 1u)
2027:Generated_Source\PSoC5/USB.c ****                     {
2028:Generated_Source\PSoC5/USB.c ****                         USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
2029:Generated_Source\PSoC5/USB.c ****                     }
2030:Generated_Source\PSoC5/USB.c **** 
2031:Generated_Source\PSoC5/USB.c ****                     /* Adjust burst counter taking to account: 2 valid descriptors and interrupt tr
2032:Generated_Source\PSoC5/USB.c ****                     USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]
2033:Generated_Source\PSoC5/USB.c **** 
2034:Generated_Source\PSoC5/USB.c ****                     /* Enable DMA channel: configuration complete. */
2035:Generated_Source\PSoC5/USB.c ****                     USB_CyDmaChEnable(channelNum);
2036:Generated_Source\PSoC5/USB.c **** 
2037:Generated_Source\PSoC5/USB.c ****                 #if !defined (USB_MANUAL_IN_EP_ARM)
2038:Generated_Source\PSoC5/USB.c ****                     /* Set IN data ready to generate DMA request to load data into endpoint buffer.
2039:Generated_Source\PSoC5/USB.c ****                     USB_ARB_EP_BASE.arbEp[epNumber].epCfg |= USB_ARB_EPX_CFG_IN_DATA_RDY;
2040:Generated_Source\PSoC5/USB.c ****                 #endif  /* (USB_MANUAL_IN_EP_ARM) */
2041:Generated_Source\PSoC5/USB.c **** 
2042:Generated_Source\PSoC5/USB.c ****                     /* IN endpoint will be armed in ARB_ISR(source: IN_BUF_FULL) after first DMA tr
2043:Generated_Source\PSoC5/USB.c ****                 }
2044:Generated_Source\PSoC5/USB.c ****                 else
2045:Generated_Source\PSoC5/USB.c ****                 {
2046:Generated_Source\PSoC5/USB.c ****                     /* When zero-length packet: arm IN endpoint directly. */
2047:Generated_Source\PSoC5/USB.c ****                     USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
2048:Generated_Source\PSoC5/USB.c ****                 }
2049:Generated_Source\PSoC5/USB.c ****             }
2050:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
2051:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
2052:Generated_Source\PSoC5/USB.c ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 60


2053:Generated_Source\PSoC5/USB.c **** }
2054:Generated_Source\PSoC5/USB.c **** 
2055:Generated_Source\PSoC5/USB.c **** 
2056:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2057:Generated_Source\PSoC5/USB.c **** * Function Name: USB_ReadOutEP16
2058:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2059:Generated_Source\PSoC5/USB.c **** *
2060:Generated_Source\PSoC5/USB.c **** *   This function performs different functionality depending on the Component’s
2061:Generated_Source\PSoC5/USB.c **** *   configured Endpoint Buffer Management. This parameter is defined in the
2062:Generated_Source\PSoC5/USB.c **** *   Descriptor Root in Component Configure window.
2063:Generated_Source\PSoC5/USB.c **** *
2064:Generated_Source\PSoC5/USB.c **** *   *Manual (Static/Dynamic Allocation):*
2065:Generated_Source\PSoC5/USB.c **** *   This function moves the specified number of bytes from endpoint buffer to
2066:Generated_Source\PSoC5/USB.c **** *   system RAM. The number of bytes actually transferred from endpoint buffer to
2067:Generated_Source\PSoC5/USB.c **** *   system RAM is the lesser of the actual number of bytes sent by the host or
2068:Generated_Source\PSoC5/USB.c **** *   the number of bytes requested by the length parameter.
2069:Generated_Source\PSoC5/USB.c **** *
2070:Generated_Source\PSoC5/USB.c **** *   *DMA with Manual Buffer Management:*
2071:Generated_Source\PSoC5/USB.c **** *   Configure DMA to transfer data from endpoint buffer to system RAM. Generate
2072:Generated_Source\PSoC5/USB.c **** *   a DMA request. The firmware must wait until the DMA completes the data
2073:Generated_Source\PSoC5/USB.c **** *   transfer after calling the USB_ReadOutEP() API. For example,
2074:Generated_Source\PSoC5/USB.c **** *   by checking EPstate:
2075:Generated_Source\PSoC5/USB.c **** *
2076:Generated_Source\PSoC5/USB.c **** *   \snippet /USBFS_sut_02.cydsn/main.c checking EPstatey
2077:Generated_Source\PSoC5/USB.c **** *
2078:Generated_Source\PSoC5/USB.c **** *   The USBFS_EnableOutEP() has to be called to allow host to write data into
2079:Generated_Source\PSoC5/USB.c **** *   the endpoint buffer after DMA has completed transfer data from OUT endpoint
2080:Generated_Source\PSoC5/USB.c **** *   buffer to SRAM.
2081:Generated_Source\PSoC5/USB.c **** *
2082:Generated_Source\PSoC5/USB.c **** *   *DMA with Automatic Buffer Management:*
2083:Generated_Source\PSoC5/USB.c **** *   Configure DMA. This is required only once and automatically generates DMA
2084:Generated_Source\PSoC5/USB.c **** *   requests as data arrives
2085:Generated_Source\PSoC5/USB.c **** *
2086:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
2087:Generated_Source\PSoC5/USB.c **** *         Valid values are between 1 and 8.
2088:Generated_Source\PSoC5/USB.c **** *  \param pData: A pointer to a data array into which the data for the endpoint
2089:Generated_Source\PSoC5/USB.c **** *         space is copied. It shall be ensured that this pointer address is
2090:Generated_Source\PSoC5/USB.c **** *         even to ensure the 16-bit transfer is aligned to even address. Else,
2091:Generated_Source\PSoC5/USB.c **** *         a hard fault condition can occur.
2092:Generated_Source\PSoC5/USB.c **** *  \param length: The number of bytes to transfer from the USB Out endpoint and
2093:Generated_Source\PSoC5/USB.c **** *         loads it into data array. Valid values are between 0 and 1023. The
2094:Generated_Source\PSoC5/USB.c **** *         function moves fewer than the requested number of bytes if the host
2095:Generated_Source\PSoC5/USB.c **** *         sends fewer bytes than requested.
2096:Generated_Source\PSoC5/USB.c **** *
2097:Generated_Source\PSoC5/USB.c **** * \return
2098:Generated_Source\PSoC5/USB.c **** *  Number of bytes received, 0 for an invalid endpoint.
2099:Generated_Source\PSoC5/USB.c **** *
2100:Generated_Source\PSoC5/USB.c **** * \reentrant
2101:Generated_Source\PSoC5/USB.c **** *  No.
2102:Generated_Source\PSoC5/USB.c **** *
2103:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2104:Generated_Source\PSoC5/USB.c **** uint16 USB_ReadOutEP16(uint8 epNumber, uint8 pData[], uint16 length)
2105:Generated_Source\PSoC5/USB.c **** {
2106:Generated_Source\PSoC5/USB.c ****     uint32 adjLength;
2107:Generated_Source\PSoC5/USB.c **** 
2108:Generated_Source\PSoC5/USB.c ****     /* Check array alignment on half-word boundary */
2109:Generated_Source\PSoC5/USB.c ****     CYASSERT(0u == (((uint32) pData) & 0x01u));
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 61


2110:Generated_Source\PSoC5/USB.c **** 
2111:Generated_Source\PSoC5/USB.c ****     if ((pData != NULL) && (epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
2112:Generated_Source\PSoC5/USB.c ****     {
2113:Generated_Source\PSoC5/USB.c ****     #if (!USB_EP_MANAGEMENT_DMA_AUTO)
2114:Generated_Source\PSoC5/USB.c ****         /* Adjust requested length to available data. */
2115:Generated_Source\PSoC5/USB.c ****         length = (length > USB_GetEPCount(epNumber)) ? USB_GetEPCount(epNumber) : length;
2116:Generated_Source\PSoC5/USB.c ****     #endif /* (!USB_EP_MANAGEMENT_DMA_AUTO) */
2117:Generated_Source\PSoC5/USB.c **** 
2118:Generated_Source\PSoC5/USB.c ****     /* Adjust requested length: 2 bytes are handled at one data register access. */
2119:Generated_Source\PSoC5/USB.c ****     adjLength =  length + ((uint32)length & 1u);
2120:Generated_Source\PSoC5/USB.c **** 
2121:Generated_Source\PSoC5/USB.c ****     #if (USB_EP_MANAGEMENT_MANUAL)
2122:Generated_Source\PSoC5/USB.c ****         {
2123:Generated_Source\PSoC5/USB.c ****             /* Convert uint8 array to uint16. */
2124:Generated_Source\PSoC5/USB.c ****             uint16 *dataBuf = (uint16 *) pData;
2125:Generated_Source\PSoC5/USB.c **** 
2126:Generated_Source\PSoC5/USB.c ****             /* Copy data using 16-bits arbiter data register. */
2127:Generated_Source\PSoC5/USB.c ****             uint16 i;
2128:Generated_Source\PSoC5/USB.c ****             for (i = 0u; i < (adjLength >> 1u); ++i)
2129:Generated_Source\PSoC5/USB.c ****             {
2130:Generated_Source\PSoC5/USB.c ****                 dataBuf[i] = (uint16) USB_ARB_EP16_BASE.arbEp[epNumber].rwDr16;
2131:Generated_Source\PSoC5/USB.c ****             }
2132:Generated_Source\PSoC5/USB.c ****         }
2133:Generated_Source\PSoC5/USB.c **** 
2134:Generated_Source\PSoC5/USB.c ****         /* Arm OUT endpoint after data has been read from endpoint buffer. */
2135:Generated_Source\PSoC5/USB.c ****         USB_EnableOutEP(epNumber);
2136:Generated_Source\PSoC5/USB.c ****     #else
2137:Generated_Source\PSoC5/USB.c **** 
2138:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_MANUAL)
2139:Generated_Source\PSoC5/USB.c ****         {
2140:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
2141:Generated_Source\PSoC5/USB.c **** 
2142:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
2143:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
2144:Generated_Source\PSoC5/USB.c **** 
2145:Generated_Source\PSoC5/USB.c ****             /* Configure source and destination. */
2146:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2147:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) pData);
2148:Generated_Source\PSoC5/USB.c **** 
2149:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor. */
2150:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG | (uint16)((ad
2151:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2152:Generated_Source\PSoC5/USB.c **** 
2153:Generated_Source\PSoC5/USB.c ****             /* Validate descriptor to execute on following DMA request. */
2154:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2155:Generated_Source\PSoC5/USB.c **** 
2156:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
2157:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
2158:Generated_Source\PSoC5/USB.c **** 
2159:Generated_Source\PSoC5/USB.c ****             /* Generate DMA request. */
2160:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg |=  (uint32)  USB_ARB_EPX_CFG_DMA_REQ;
2161:Generated_Source\PSoC5/USB.c ****             USB_ARB_EP_BASE.arbEp[epNumber].epCfg &=  (uint32) ~USB_ARB_EPX_CFG_DMA_REQ;
2162:Generated_Source\PSoC5/USB.c **** 
2163:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2164:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2165:Generated_Source\PSoC5/USB.c ****             */
2166:Generated_Source\PSoC5/USB.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 62


2167:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_MANUAL) */
2168:Generated_Source\PSoC5/USB.c **** 
2169:Generated_Source\PSoC5/USB.c ****         #if (USB_EP_MANAGEMENT_DMA_AUTO)
2170:Generated_Source\PSoC5/USB.c ****         {
2171:Generated_Source\PSoC5/USB.c ****             uint32 lengthDescr0, lengthDescr1;
2172:Generated_Source\PSoC5/USB.c ****             uint32 channelNum = (uint32) USB_DmaChan[epNumber];
2173:Generated_Source\PSoC5/USB.c **** 
2174:Generated_Source\PSoC5/USB.c ****             /* Get number of full bursts. */
2175:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = (uint8) (adjLength / USB_DMA_BYTES_PER_BURST);
2176:Generated_Source\PSoC5/USB.c **** 
2177:Generated_Source\PSoC5/USB.c ****             /* Get number of elements in last burst. */
2178:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (uint8) (adjLength % USB_DMA_BYTES_PER_BURST);
2179:Generated_Source\PSoC5/USB.c **** 
2180:Generated_Source\PSoC5/USB.c ****             /* Get total number of bursts. */
2181:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] += (0u != USB_DmaEpLastBurstEl[epNumber]) ? 1u : 0u;
2182:Generated_Source\PSoC5/USB.c **** 
2183:Generated_Source\PSoC5/USB.c ****             /* Adjust number of data elements transferred in last burst. */
2184:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] = (0u != USB_DmaEpLastBurstEl[epNumber]) ?
2185:Generated_Source\PSoC5/USB.c ****                                                                   ((USB_DmaEpLastBurstEl[epNumber] 
2186:Generated_Source\PSoC5/USB.c ****                                                                    (USB_DMA_HALFWORDS_PER_BURST - 1
2187:Generated_Source\PSoC5/USB.c **** 
2188:Generated_Source\PSoC5/USB.c ****             /* Get number of data elements to transfer for descriptor 0 and 1. */
2189:Generated_Source\PSoC5/USB.c ****             lengthDescr0 = (1u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
2190:Generated_Source\PSoC5/USB.c ****             lengthDescr1 = (2u == USB_DmaEpBurstCnt[epNumber]) ? USB_DmaEpLastBurstEl[epNumber] : (
2191:Generated_Source\PSoC5/USB.c **** 
2192:Generated_Source\PSoC5/USB.c ****             /* Mark last descriptor to be executed. */
2193:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (0u != (USB_DmaEpBurstCnt[epNumber] & 0x1u)) ?
2194:Generated_Source\PSoC5/USB.c ****                                                                     USB_DMA_DESCR0_MASK : USB_DMA_D
2195:Generated_Source\PSoC5/USB.c **** 
2196:Generated_Source\PSoC5/USB.c ****             /* Mark if revert number of data elements in descriptor after transfer completion. */
2197:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= (USB_DmaEpBurstCnt[epNumber] > 2u) ? USB_DMA_DESCR_RE
2198:Generated_Source\PSoC5/USB.c **** 
2199:Generated_Source\PSoC5/USB.c ****             /* Mark that 16-bits access to data register is performed. */
2200:Generated_Source\PSoC5/USB.c ****             USB_DmaEpLastBurstEl[epNumber] |= USB_DMA_DESCR_16BITS;
2201:Generated_Source\PSoC5/USB.c **** 
2202:Generated_Source\PSoC5/USB.c ****             /* Store address of buffer and burst counter for endpoint. */
2203:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBufferAddrBackup[epNumber] = (uint32) pData;
2204:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCntBackup[epNumber]   = USB_DmaEpBurstCnt[epNumber];
2205:Generated_Source\PSoC5/USB.c **** 
2206:Generated_Source\PSoC5/USB.c ****             /* Adjust burst counter taking to account: 2 valid descriptors and interrupt trigger af
2207:Generated_Source\PSoC5/USB.c ****             USB_DmaEpBurstCnt[epNumber] = USB_DMA_GET_BURST_CNT(USB_DmaEpBurstCnt[epNumber]);
2208:Generated_Source\PSoC5/USB.c **** 
2209:Generated_Source\PSoC5/USB.c ****             /* Disable DMA channel: start configuration. */
2210:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChDisable(channelNum);
2211:Generated_Source\PSoC5/USB.c **** 
2212:Generated_Source\PSoC5/USB.c ****             /* Set destination address. */
2213:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR0, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2214:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetSrcAddress(channelNum, USB_DMA_DESCR1, (void*) &USB_ARB_EP16_BASE.arbEp[epN
2215:Generated_Source\PSoC5/USB.c **** 
2216:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR0, (void*) ((uint32) pData));
2217:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetDstAddress(channelNum, USB_DMA_DESCR1, (void*) ((uint32) pData + USB_DMA_BY
2218:Generated_Source\PSoC5/USB.c **** 
2219:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor 0. */
2220:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR0, USB_DMA_COMMON_CFG  | lengthDescr
2221:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2222:Generated_Source\PSoC5/USB.c **** 
2223:Generated_Source\PSoC5/USB.c ****             /* Configure DMA descriptor 1. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 63


2224:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetConfiguration(channelNum, USB_DMA_DESCR1, USB_DMA_COMMON_CFG  | lengthDescr
2225:Generated_Source\PSoC5/USB.c ****                                                     CYDMA_HALFWORD | CYDMA_WORD_ELEMENT | CYDMA_INC
2226:Generated_Source\PSoC5/USB.c **** 
2227:Generated_Source\PSoC5/USB.c ****             /* Enable interrupt from DMA channel. */
2228:Generated_Source\PSoC5/USB.c ****             USB_CyDmaSetInterruptMask(channelNum);
2229:Generated_Source\PSoC5/USB.c **** 
2230:Generated_Source\PSoC5/USB.c ****             /* Validate DMA descriptor 0 and 1. */
2231:Generated_Source\PSoC5/USB.c ****             USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR0);
2232:Generated_Source\PSoC5/USB.c ****             
2233:Generated_Source\PSoC5/USB.c ****             if (USB_DmaEpBurstCntBackup[epNumber] > 1u)
2234:Generated_Source\PSoC5/USB.c ****             {
2235:Generated_Source\PSoC5/USB.c ****                 USB_CyDmaValidateDescriptor(channelNum, USB_DMA_DESCR1);
2236:Generated_Source\PSoC5/USB.c ****             }
2237:Generated_Source\PSoC5/USB.c **** 
2238:Generated_Source\PSoC5/USB.c ****             /* Enable DMA channel: configuration complete. */
2239:Generated_Source\PSoC5/USB.c ****             USB_CyDmaChEnable(channelNum);
2240:Generated_Source\PSoC5/USB.c **** 
2241:Generated_Source\PSoC5/USB.c ****             /* OUT endpoint has to be armed again by user when DMA transfers have been completed.
2242:Generated_Source\PSoC5/USB.c ****             * NO_EVENT_PENDING: notifies that data has been copied from endpoint buffer.
2243:Generated_Source\PSoC5/USB.c ****             */
2244:Generated_Source\PSoC5/USB.c ****         }
2245:Generated_Source\PSoC5/USB.c ****         #endif /* (USB_EP_MANAGEMENT_DMA_AUTO) */
2246:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_EP_MANAGEMENT_MANUAL) */
2247:Generated_Source\PSoC5/USB.c ****     }
2248:Generated_Source\PSoC5/USB.c ****     else
2249:Generated_Source\PSoC5/USB.c ****     {
2250:Generated_Source\PSoC5/USB.c ****         length = 0u;
2251:Generated_Source\PSoC5/USB.c ****     }
2252:Generated_Source\PSoC5/USB.c **** 
2253:Generated_Source\PSoC5/USB.c ****     return (length);
2254:Generated_Source\PSoC5/USB.c **** }
2255:Generated_Source\PSoC5/USB.c **** #endif /* (USB_16BITS_EP_ACCESS_ENABLE) */
2256:Generated_Source\PSoC5/USB.c **** 
2257:Generated_Source\PSoC5/USB.c **** 
2258:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2259:Generated_Source\PSoC5/USB.c **** * Function Name: USB_EnableOutEP
2260:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2261:Generated_Source\PSoC5/USB.c **** *
2262:Generated_Source\PSoC5/USB.c **** *  This function enables the specified endpoint for OUT transfers. Do not call
2263:Generated_Source\PSoC5/USB.c **** *  this function for IN endpoints.
2264:Generated_Source\PSoC5/USB.c **** *
2265:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number. Valid values are between
2266:Generated_Source\PSoC5/USB.c **** *  1 and 8.
2267:Generated_Source\PSoC5/USB.c **** *
2268:Generated_Source\PSoC5/USB.c **** * \globalvars
2269:Generated_Source\PSoC5/USB.c **** *
2270:Generated_Source\PSoC5/USB.c **** *  \ref USB_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
2271:Generated_Source\PSoC5/USB.c **** *
2272:Generated_Source\PSoC5/USB.c **** * \reentrant
2273:Generated_Source\PSoC5/USB.c **** *  No.
2274:Generated_Source\PSoC5/USB.c **** *
2275:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2276:Generated_Source\PSoC5/USB.c **** void USB_EnableOutEP(uint8 epNumber) 
2277:Generated_Source\PSoC5/USB.c **** {
 1308              		.loc 1 2277 0
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 64


 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312              		@ link register save eliminated.
 1313 0000 90B4     		push	{r4, r7}
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 4, -8
 1316              		.cfi_offset 7, -4
 1317 0002 82B0     		sub	sp, sp, #8
 1318              		.cfi_def_cfa_offset 16
 1319 0004 00AF     		add	r7, sp, #0
 1320              		.cfi_def_cfa_register 7
 1321 0006 0346     		mov	r3, r0
 1322 0008 FB71     		strb	r3, [r7, #7]
2278:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1323              		.loc 1 2278 0
 1324 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1325 000c 002B     		cmp	r3, #0
 1326 000e 1CD0     		beq	.L71
 1327              		.loc 1 2278 0 is_stmt 0 discriminator 1
 1328 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1329 0012 082B     		cmp	r3, #8
 1330 0014 19D8     		bhi	.L71
2279:Generated_Source\PSoC5/USB.c ****     {
2280:Generated_Source\PSoC5/USB.c ****         USB_EP[epNumber].apiEpState = USB_NO_EVENT_PENDING;
 1331              		.loc 1 2280 0 is_stmt 1
 1332 0016 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1333 0018 0E49     		ldr	r1, .L72
 1334 001a 1346     		mov	r3, r2
 1335 001c 5B00     		lsls	r3, r3, #1
 1336 001e 1344     		add	r3, r3, r2
 1337 0020 9B00     		lsls	r3, r3, #2
 1338 0022 0B44     		add	r3, r3, r1
 1339 0024 0133     		adds	r3, r3, #1
 1340 0026 0022     		movs	r2, #0
 1341 0028 1A70     		strb	r2, [r3]
2281:Generated_Source\PSoC5/USB.c **** 
2282:Generated_Source\PSoC5/USB.c ****         /* Enable OUT endpoint to be written by Host. */
2283:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_EP[epNumber].epMode;
 1342              		.loc 1 2283 0
 1343 002a 0B48     		ldr	r0, .L72+4
 1344 002c F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1345 002e FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1346 0030 084C     		ldr	r4, .L72
 1347 0032 1346     		mov	r3, r2
 1348 0034 5B00     		lsls	r3, r3, #1
 1349 0036 1344     		add	r3, r3, r2
 1350 0038 9B00     		lsls	r3, r3, #2
 1351 003a 2344     		add	r3, r3, r4
 1352 003c 0533     		adds	r3, r3, #5
 1353 003e 1B78     		ldrb	r3, [r3]
 1354 0040 DAB2     		uxtb	r2, r3
 1355 0042 0B01     		lsls	r3, r1, #4
 1356 0044 0344     		add	r3, r3, r0
 1357 0046 0233     		adds	r3, r3, #2
 1358 0048 1A70     		strb	r2, [r3]
 1359              	.L71:
2284:Generated_Source\PSoC5/USB.c ****         
2285:Generated_Source\PSoC5/USB.c ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 65


2286:Generated_Source\PSoC5/USB.c **** }
 1360              		.loc 1 2286 0
 1361 004a 00BF     		nop
 1362 004c 0837     		adds	r7, r7, #8
 1363              		.cfi_def_cfa_offset 8
 1364 004e BD46     		mov	sp, r7
 1365              		.cfi_def_cfa_register 13
 1366              		@ sp needed
 1367 0050 90BC     		pop	{r4, r7}
 1368              		.cfi_restore 7
 1369              		.cfi_restore 4
 1370              		.cfi_def_cfa_offset 0
 1371 0052 7047     		bx	lr
 1372              	.L73:
 1373              		.align	2
 1374              	.L72:
 1375 0054 00000000 		.word	USB_EP
 1376 0058 FC5F0040 		.word	1073766396
 1377              		.cfi_endproc
 1378              	.LFE13:
 1379              		.size	USB_EnableOutEP, .-USB_EnableOutEP
 1380              		.section	.text.USB_DisableOutEP,"ax",%progbits
 1381              		.align	2
 1382              		.global	USB_DisableOutEP
 1383              		.thumb
 1384              		.thumb_func
 1385              		.type	USB_DisableOutEP, %function
 1386              	USB_DisableOutEP:
 1387              	.LFB14:
2287:Generated_Source\PSoC5/USB.c **** 
2288:Generated_Source\PSoC5/USB.c **** 
2289:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2290:Generated_Source\PSoC5/USB.c **** * Function Name: USB_DisableOutEP
2291:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2292:Generated_Source\PSoC5/USB.c **** *
2293:Generated_Source\PSoC5/USB.c **** *  This function disables the specified USBFS OUT endpoint. Do not call this
2294:Generated_Source\PSoC5/USB.c **** *  function for IN endpoints.
2295:Generated_Source\PSoC5/USB.c **** *
2296:Generated_Source\PSoC5/USB.c **** *  \param epNumber: Contains the data endpoint number.
2297:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
2298:Generated_Source\PSoC5/USB.c **** *
2299:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2300:Generated_Source\PSoC5/USB.c **** void USB_DisableOutEP(uint8 epNumber) 
2301:Generated_Source\PSoC5/USB.c **** {
 1388              		.loc 1 2301 0
 1389              		.cfi_startproc
 1390              		@ args = 0, pretend = 0, frame = 8
 1391              		@ frame_needed = 1, uses_anonymous_args = 0
 1392              		@ link register save eliminated.
 1393 0000 80B4     		push	{r7}
 1394              		.cfi_def_cfa_offset 4
 1395              		.cfi_offset 7, -4
 1396 0002 83B0     		sub	sp, sp, #12
 1397              		.cfi_def_cfa_offset 16
 1398 0004 00AF     		add	r7, sp, #0
 1399              		.cfi_def_cfa_register 7
 1400 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 66


 1401 0008 FB71     		strb	r3, [r7, #7]
2302:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1402              		.loc 1 2302 0
 1403 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1404 000c 002B     		cmp	r3, #0
 1405 000e 09D0     		beq	.L76
 1406              		.loc 1 2302 0 is_stmt 0 discriminator 1
 1407 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1408 0012 082B     		cmp	r3, #8
 1409 0014 06D8     		bhi	.L76
2303:Generated_Source\PSoC5/USB.c ****     {
2304:Generated_Source\PSoC5/USB.c ****         /* Set NAK response for OUT endpoint. */
2305:Generated_Source\PSoC5/USB.c ****         USB_SIE_EP_BASE.sieEp[epNumber].epCr0 = USB_MODE_NAK_OUT;
 1410              		.loc 1 2305 0 is_stmt 1
 1411 0016 064A     		ldr	r2, .L77
 1412 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1413 001a 1B01     		lsls	r3, r3, #4
 1414 001c 1344     		add	r3, r3, r2
 1415 001e 0233     		adds	r3, r3, #2
 1416 0020 0822     		movs	r2, #8
 1417 0022 1A70     		strb	r2, [r3]
 1418              	.L76:
2306:Generated_Source\PSoC5/USB.c ****     }
2307:Generated_Source\PSoC5/USB.c **** }
 1419              		.loc 1 2307 0
 1420 0024 00BF     		nop
 1421 0026 0C37     		adds	r7, r7, #12
 1422              		.cfi_def_cfa_offset 4
 1423 0028 BD46     		mov	sp, r7
 1424              		.cfi_def_cfa_register 13
 1425              		@ sp needed
 1426 002a 80BC     		pop	{r7}
 1427              		.cfi_restore 7
 1428              		.cfi_def_cfa_offset 0
 1429 002c 7047     		bx	lr
 1430              	.L78:
 1431 002e 00BF     		.align	2
 1432              	.L77:
 1433 0030 FC5F0040 		.word	1073766396
 1434              		.cfi_endproc
 1435              	.LFE14:
 1436              		.size	USB_DisableOutEP, .-USB_DisableOutEP
 1437              		.section	.text.USB_Force,"ax",%progbits
 1438              		.align	2
 1439              		.global	USB_Force
 1440              		.thumb
 1441              		.thumb_func
 1442              		.type	USB_Force, %function
 1443              	USB_Force:
 1444              	.LFB15:
2308:Generated_Source\PSoC5/USB.c **** 
2309:Generated_Source\PSoC5/USB.c **** 
2310:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2311:Generated_Source\PSoC5/USB.c **** * Function Name: USB_Force
2312:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2313:Generated_Source\PSoC5/USB.c **** *
2314:Generated_Source\PSoC5/USB.c **** *  This function forces a USB J, K, or SE0 state on the D+/D– lines. It provides
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 67


2315:Generated_Source\PSoC5/USB.c **** *  the necessary mechanism for a USB device application to perform a USB Remote
2316:Generated_Source\PSoC5/USB.c **** *  Wakeup. For more information, see the USB 2.0 Specification for details on
2317:Generated_Source\PSoC5/USB.c **** *  Suspend and Resume.
2318:Generated_Source\PSoC5/USB.c **** *
2319:Generated_Source\PSoC5/USB.c **** *  \param state A byte indicating which of the four bus states to enable.
2320:Generated_Source\PSoC5/USB.c **** *        Symbolic names  and their associated values are listed here:
2321:Generated_Source\PSoC5/USB.c **** *    State                      |Description
2322:Generated_Source\PSoC5/USB.c **** *    ---------------------------|----------------------------------------------
2323:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_J   | Force a J State onto the D+/D– lines
2324:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_K   | Force a K State onto the D+/D– lines
2325:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_SE0 | Force a Single Ended 0 onto the D+/D– lines
2326:Generated_Source\PSoC5/USB.c **** *    USB_FORCE_NONE| Return bus to SIE control
2327:Generated_Source\PSoC5/USB.c **** *
2328:Generated_Source\PSoC5/USB.c **** *
2329:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2330:Generated_Source\PSoC5/USB.c **** void USB_Force(uint8 bState) 
2331:Generated_Source\PSoC5/USB.c **** {
 1445              		.loc 1 2331 0
 1446              		.cfi_startproc
 1447              		@ args = 0, pretend = 0, frame = 8
 1448              		@ frame_needed = 1, uses_anonymous_args = 0
 1449              		@ link register save eliminated.
 1450 0000 80B4     		push	{r7}
 1451              		.cfi_def_cfa_offset 4
 1452              		.cfi_offset 7, -4
 1453 0002 83B0     		sub	sp, sp, #12
 1454              		.cfi_def_cfa_offset 16
 1455 0004 00AF     		add	r7, sp, #0
 1456              		.cfi_def_cfa_register 7
 1457 0006 0346     		mov	r3, r0
 1458 0008 FB71     		strb	r3, [r7, #7]
2332:Generated_Source\PSoC5/USB.c ****     /* This registers is used only for manual control of SIE (no masking is
2333:Generated_Source\PSoC5/USB.c ****     * needed before write into it).
2334:Generated_Source\PSoC5/USB.c ****     */
2335:Generated_Source\PSoC5/USB.c ****     USB_USBIO_CR0_REG = bState;
 1459              		.loc 1 2335 0
 1460 000a 044A     		ldr	r2, .L80
 1461 000c FB79     		ldrb	r3, [r7, #7]
 1462 000e 1370     		strb	r3, [r2]
2336:Generated_Source\PSoC5/USB.c **** }
 1463              		.loc 1 2336 0
 1464 0010 00BF     		nop
 1465 0012 0C37     		adds	r7, r7, #12
 1466              		.cfi_def_cfa_offset 4
 1467 0014 BD46     		mov	sp, r7
 1468              		.cfi_def_cfa_register 13
 1469              		@ sp needed
 1470 0016 80BC     		pop	{r7}
 1471              		.cfi_restore 7
 1472              		.cfi_def_cfa_offset 0
 1473 0018 7047     		bx	lr
 1474              	.L81:
 1475 001a 00BF     		.align	2
 1476              	.L80:
 1477 001c 10600040 		.word	1073766416
 1478              		.cfi_endproc
 1479              	.LFE15:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 68


 1480              		.size	USB_Force, .-USB_Force
 1481              		.section	.text.USB_GetEPAckState,"ax",%progbits
 1482              		.align	2
 1483              		.global	USB_GetEPAckState
 1484              		.thumb
 1485              		.thumb_func
 1486              		.type	USB_GetEPAckState, %function
 1487              	USB_GetEPAckState:
 1488              	.LFB16:
2337:Generated_Source\PSoC5/USB.c **** 
2338:Generated_Source\PSoC5/USB.c **** 
2339:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2340:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetEPAckState
2341:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2342:Generated_Source\PSoC5/USB.c **** *
2343:Generated_Source\PSoC5/USB.c **** *  This function determines whether an ACK transaction occurred on this endpoint
2344:Generated_Source\PSoC5/USB.c **** *  by reading the ACK bit in the control register of the endpoint. It does not
2345:Generated_Source\PSoC5/USB.c **** *  clear the ACK bit.
2346:Generated_Source\PSoC5/USB.c **** *
2347:Generated_Source\PSoC5/USB.c **** *  \param epNumber Contains the data endpoint number.
2348:Generated_Source\PSoC5/USB.c **** *            Valid values are between 1 and 8.
2349:Generated_Source\PSoC5/USB.c **** *
2350:Generated_Source\PSoC5/USB.c **** *  \return
2351:Generated_Source\PSoC5/USB.c **** *  If an ACKed transaction occurred, this function returns a non-zero value.
2352:Generated_Source\PSoC5/USB.c **** *  Otherwise, it returns zero.
2353:Generated_Source\PSoC5/USB.c **** *
2354:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2355:Generated_Source\PSoC5/USB.c **** uint8 USB_GetEPAckState(uint8 epNumber) 
2356:Generated_Source\PSoC5/USB.c **** {
 1489              		.loc 1 2356 0
 1490              		.cfi_startproc
 1491              		@ args = 0, pretend = 0, frame = 16
 1492              		@ frame_needed = 1, uses_anonymous_args = 0
 1493              		@ link register save eliminated.
 1494 0000 80B4     		push	{r7}
 1495              		.cfi_def_cfa_offset 4
 1496              		.cfi_offset 7, -4
 1497 0002 85B0     		sub	sp, sp, #20
 1498              		.cfi_def_cfa_offset 24
 1499 0004 00AF     		add	r7, sp, #0
 1500              		.cfi_def_cfa_register 7
 1501 0006 0346     		mov	r3, r0
 1502 0008 FB71     		strb	r3, [r7, #7]
2357:Generated_Source\PSoC5/USB.c ****     uint8 cr = 0u;
 1503              		.loc 1 2357 0
 1504 000a 0023     		movs	r3, #0
 1505 000c FB73     		strb	r3, [r7, #15]
2358:Generated_Source\PSoC5/USB.c **** 
2359:Generated_Source\PSoC5/USB.c ****     if ((epNumber > USB_EP0) && (epNumber < USB_MAX_EP))
 1506              		.loc 1 2359 0
 1507 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1508 0010 002B     		cmp	r3, #0
 1509 0012 0CD0     		beq	.L83
 1510              		.loc 1 2359 0 is_stmt 0 discriminator 1
 1511 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1512 0016 082B     		cmp	r3, #8
 1513 0018 09D8     		bhi	.L83
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 69


2360:Generated_Source\PSoC5/USB.c ****     {
2361:Generated_Source\PSoC5/USB.c ****         cr = USB_SIE_EP_BASE.sieEp[epNumber].epCr0 & USB_MODE_ACKD;
 1514              		.loc 1 2361 0 is_stmt 1
 1515 001a 084A     		ldr	r2, .L85
 1516 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1517 001e 1B01     		lsls	r3, r3, #4
 1518 0020 1344     		add	r3, r3, r2
 1519 0022 0233     		adds	r3, r3, #2
 1520 0024 1B78     		ldrb	r3, [r3]
 1521 0026 DBB2     		uxtb	r3, r3
 1522 0028 03F01003 		and	r3, r3, #16
 1523 002c FB73     		strb	r3, [r7, #15]
 1524              	.L83:
2362:Generated_Source\PSoC5/USB.c ****     }
2363:Generated_Source\PSoC5/USB.c **** 
2364:Generated_Source\PSoC5/USB.c ****     return ((uint8) cr);
 1525              		.loc 1 2364 0
 1526 002e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
2365:Generated_Source\PSoC5/USB.c **** }
 1527              		.loc 1 2365 0
 1528 0030 1846     		mov	r0, r3
 1529 0032 1437     		adds	r7, r7, #20
 1530              		.cfi_def_cfa_offset 4
 1531 0034 BD46     		mov	sp, r7
 1532              		.cfi_def_cfa_register 13
 1533              		@ sp needed
 1534 0036 80BC     		pop	{r7}
 1535              		.cfi_restore 7
 1536              		.cfi_def_cfa_offset 0
 1537 0038 7047     		bx	lr
 1538              	.L86:
 1539 003a 00BF     		.align	2
 1540              	.L85:
 1541 003c FC5F0040 		.word	1073766396
 1542              		.cfi_endproc
 1543              	.LFE16:
 1544              		.size	USB_GetEPAckState, .-USB_GetEPAckState
 1545              		.section	.text.USB_SetPowerStatus,"ax",%progbits
 1546              		.align	2
 1547              		.global	USB_SetPowerStatus
 1548              		.thumb
 1549              		.thumb_func
 1550              		.type	USB_SetPowerStatus, %function
 1551              	USB_SetPowerStatus:
 1552              	.LFB17:
2366:Generated_Source\PSoC5/USB.c **** 
2367:Generated_Source\PSoC5/USB.c **** 
2368:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2369:Generated_Source\PSoC5/USB.c **** * Function Name: USB_SetPowerStatus
2370:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2371:Generated_Source\PSoC5/USB.c **** *
2372:Generated_Source\PSoC5/USB.c **** *  This function sets the current power status. The device replies to USB
2373:Generated_Source\PSoC5/USB.c **** *  GET_STATUS requests based on this value. This allows the device to properly
2374:Generated_Source\PSoC5/USB.c **** *  report its status for USB Chapter 9 compliance. Devices can change their
2375:Generated_Source\PSoC5/USB.c **** *  power source from self powered to bus powered at any time and report their
2376:Generated_Source\PSoC5/USB.c **** *  current power source as part of the device status. You should call this
2377:Generated_Source\PSoC5/USB.c **** *  function any time your device changes from self powered to bus powered or
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 70


2378:Generated_Source\PSoC5/USB.c **** *  vice versa, and set the status appropriately.
2379:Generated_Source\PSoC5/USB.c **** *
2380:Generated_Source\PSoC5/USB.c **** *  \param powerStatus: Contains the desired power status, one for self powered
2381:Generated_Source\PSoC5/USB.c **** *        or zero for bus powered. Symbolic names and their associated values are
2382:Generated_Source\PSoC5/USB.c **** *        given here:
2383:Generated_Source\PSoC5/USB.c **** *  Power Status                                |Description
2384:Generated_Source\PSoC5/USB.c **** *  --------------------------------------------|---------------------------
2385:Generated_Source\PSoC5/USB.c **** *  USB_DEVICE_STATUS_BUS_POWERED  | Set the device to bus powered
2386:Generated_Source\PSoC5/USB.c **** *  USB_DEVICE_STATUS_SELF_POWERED | Set the device to self powered
2387:Generated_Source\PSoC5/USB.c **** *
2388:Generated_Source\PSoC5/USB.c **** * \globalvars
2389:Generated_Source\PSoC5/USB.c **** *
2390:Generated_Source\PSoC5/USB.c **** *  \ref USB_deviceStatus - set power status
2391:Generated_Source\PSoC5/USB.c **** *
2392:Generated_Source\PSoC5/USB.c **** * \reentrant
2393:Generated_Source\PSoC5/USB.c **** *  No.
2394:Generated_Source\PSoC5/USB.c **** *
2395:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2396:Generated_Source\PSoC5/USB.c **** void USB_SetPowerStatus(uint8 powerStatus) 
2397:Generated_Source\PSoC5/USB.c **** {
 1553              		.loc 1 2397 0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 8
 1556              		@ frame_needed = 1, uses_anonymous_args = 0
 1557              		@ link register save eliminated.
 1558 0000 80B4     		push	{r7}
 1559              		.cfi_def_cfa_offset 4
 1560              		.cfi_offset 7, -4
 1561 0002 83B0     		sub	sp, sp, #12
 1562              		.cfi_def_cfa_offset 16
 1563 0004 00AF     		add	r7, sp, #0
 1564              		.cfi_def_cfa_register 7
 1565 0006 0346     		mov	r3, r0
 1566 0008 FB71     		strb	r3, [r7, #7]
2398:Generated_Source\PSoC5/USB.c ****     if (powerStatus != USB_DEVICE_STATUS_BUS_POWERED)
 1567              		.loc 1 2398 0
 1568 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1569 000c 002B     		cmp	r3, #0
 1570 000e 08D0     		beq	.L88
2399:Generated_Source\PSoC5/USB.c ****     {
2400:Generated_Source\PSoC5/USB.c ****         USB_deviceStatus |= (uint8)  USB_DEVICE_STATUS_SELF_POWERED;
 1571              		.loc 1 2400 0
 1572 0010 0A4B     		ldr	r3, .L91
 1573 0012 1B78     		ldrb	r3, [r3]
 1574 0014 DBB2     		uxtb	r3, r3
 1575 0016 43F00103 		orr	r3, r3, #1
 1576 001a DAB2     		uxtb	r2, r3
 1577 001c 074B     		ldr	r3, .L91
 1578 001e 1A70     		strb	r2, [r3]
2401:Generated_Source\PSoC5/USB.c ****     }
2402:Generated_Source\PSoC5/USB.c ****     else
2403:Generated_Source\PSoC5/USB.c ****     {
2404:Generated_Source\PSoC5/USB.c ****         USB_deviceStatus &= (uint8) ~USB_DEVICE_STATUS_SELF_POWERED;
2405:Generated_Source\PSoC5/USB.c ****     }
2406:Generated_Source\PSoC5/USB.c **** }
 1579              		.loc 1 2406 0
 1580 0020 07E0     		b	.L90
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 71


 1581              	.L88:
2404:Generated_Source\PSoC5/USB.c ****     }
 1582              		.loc 1 2404 0
 1583 0022 064B     		ldr	r3, .L91
 1584 0024 1B78     		ldrb	r3, [r3]
 1585 0026 DBB2     		uxtb	r3, r3
 1586 0028 23F00103 		bic	r3, r3, #1
 1587 002c DAB2     		uxtb	r2, r3
 1588 002e 034B     		ldr	r3, .L91
 1589 0030 1A70     		strb	r2, [r3]
 1590              	.L90:
 1591              		.loc 1 2406 0
 1592 0032 00BF     		nop
 1593 0034 0C37     		adds	r7, r7, #12
 1594              		.cfi_def_cfa_offset 4
 1595 0036 BD46     		mov	sp, r7
 1596              		.cfi_def_cfa_register 13
 1597              		@ sp needed
 1598 0038 80BC     		pop	{r7}
 1599              		.cfi_restore 7
 1600              		.cfi_def_cfa_offset 0
 1601 003a 7047     		bx	lr
 1602              	.L92:
 1603              		.align	2
 1604              	.L91:
 1605 003c 00000000 		.word	USB_deviceStatus
 1606              		.cfi_endproc
 1607              	.LFE17:
 1608              		.size	USB_SetPowerStatus, .-USB_SetPowerStatus
 1609              		.section	.text.USB_VBusPresent,"ax",%progbits
 1610              		.align	2
 1611              		.global	USB_VBusPresent
 1612              		.thumb
 1613              		.thumb_func
 1614              		.type	USB_VBusPresent, %function
 1615              	USB_VBusPresent:
 1616              	.LFB18:
2407:Generated_Source\PSoC5/USB.c **** 
2408:Generated_Source\PSoC5/USB.c **** 
2409:Generated_Source\PSoC5/USB.c **** #if (USB_VBUS_MONITORING_ENABLE)
2410:Generated_Source\PSoC5/USB.c ****     /***************************************************************************
2411:Generated_Source\PSoC5/USB.c ****     * Function Name: USB_VBusPresent
2412:Generated_Source\PSoC5/USB.c ****     ************************************************************************//**
2413:Generated_Source\PSoC5/USB.c ****     *
2414:Generated_Source\PSoC5/USB.c ****     *  Determines VBUS presence for self-powered devices. This function is
2415:Generated_Source\PSoC5/USB.c ****     *  available when the VBUS Monitoring option is enabled in the Advanced tab.
2416:Generated_Source\PSoC5/USB.c ****     *
2417:Generated_Source\PSoC5/USB.c ****     * \return
2418:Generated_Source\PSoC5/USB.c ****     *  The return value can be the following:
2419:Generated_Source\PSoC5/USB.c ****     *  Return Value | Description
2420:Generated_Source\PSoC5/USB.c ****     *  -------------|-----------------
2421:Generated_Source\PSoC5/USB.c ****     *  1            | VBUS is present
2422:Generated_Source\PSoC5/USB.c ****     *  0            | VBUS is absent
2423:Generated_Source\PSoC5/USB.c ****     *
2424:Generated_Source\PSoC5/USB.c ****     *
2425:Generated_Source\PSoC5/USB.c ****     ***************************************************************************/
2426:Generated_Source\PSoC5/USB.c ****     uint8 USB_VBusPresent(void) 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 72


2427:Generated_Source\PSoC5/USB.c ****     {
 1617              		.loc 1 2427 0
 1618              		.cfi_startproc
 1619              		@ args = 0, pretend = 0, frame = 0
 1620              		@ frame_needed = 1, uses_anonymous_args = 0
 1621              		@ link register save eliminated.
 1622 0000 80B4     		push	{r7}
 1623              		.cfi_def_cfa_offset 4
 1624              		.cfi_offset 7, -4
 1625 0002 00AF     		add	r7, sp, #0
 1626              		.cfi_def_cfa_register 7
2428:Generated_Source\PSoC5/USB.c ****         return ((0u != (USB_VBUS_STATUS_REG & USB_VBUS_VALID)) ? (uint8) 1u : (uint8) 0u);
 1627              		.loc 1 2428 0
 1628 0004 064B     		ldr	r3, .L95
 1629 0006 1B78     		ldrb	r3, [r3]
 1630 0008 DBB2     		uxtb	r3, r3
 1631 000a 03F00103 		and	r3, r3, #1
 1632 000e 002B     		cmp	r3, #0
 1633 0010 14BF     		ite	ne
 1634 0012 0123     		movne	r3, #1
 1635 0014 0023     		moveq	r3, #0
 1636 0016 DBB2     		uxtb	r3, r3
2429:Generated_Source\PSoC5/USB.c ****     }
 1637              		.loc 1 2429 0
 1638 0018 1846     		mov	r0, r3
 1639 001a BD46     		mov	sp, r7
 1640              		.cfi_def_cfa_register 13
 1641              		@ sp needed
 1642 001c 80BC     		pop	{r7}
 1643              		.cfi_restore 7
 1644              		.cfi_def_cfa_offset 0
 1645 001e 7047     		bx	lr
 1646              	.L96:
 1647              		.align	2
 1648              	.L95:
 1649 0020 63640040 		.word	1073767523
 1650              		.cfi_endproc
 1651              	.LFE18:
 1652              		.size	USB_VBusPresent, .-USB_VBusPresent
 1653              		.section	.text.USB_RWUEnabled,"ax",%progbits
 1654              		.align	2
 1655              		.global	USB_RWUEnabled
 1656              		.thumb
 1657              		.thumb_func
 1658              		.type	USB_RWUEnabled, %function
 1659              	USB_RWUEnabled:
 1660              	.LFB19:
2430:Generated_Source\PSoC5/USB.c **** #endif /* (USB_VBUS_MONITORING_ENABLE) */
2431:Generated_Source\PSoC5/USB.c **** 
2432:Generated_Source\PSoC5/USB.c **** 
2433:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2434:Generated_Source\PSoC5/USB.c **** * Function Name: USB_RWUEnabled
2435:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2436:Generated_Source\PSoC5/USB.c **** *
2437:Generated_Source\PSoC5/USB.c **** *  This function returns the current remote wakeup status.
2438:Generated_Source\PSoC5/USB.c **** *  If the device supports remote wakeup, the application should use this
2439:Generated_Source\PSoC5/USB.c **** *  function to determine if remote wakeup was enabled by the host. When the
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 73


2440:Generated_Source\PSoC5/USB.c **** *  device is suspended and it determines the conditions to initiate a remote
2441:Generated_Source\PSoC5/USB.c **** *  wakeup are met, the application should use the USBFS_Force() function to
2442:Generated_Source\PSoC5/USB.c **** *  force the appropriate J and K states onto the USB bus, signaling a remote
2443:Generated_Source\PSoC5/USB.c **** *  wakeup.
2444:Generated_Source\PSoC5/USB.c **** *
2445:Generated_Source\PSoC5/USB.c **** *
2446:Generated_Source\PSoC5/USB.c **** * \return
2447:Generated_Source\PSoC5/USB.c **** *  Returns non-zero value if remote wakeup is enabled and zero otherwise.
2448:Generated_Source\PSoC5/USB.c **** *
2449:Generated_Source\PSoC5/USB.c **** * \globalvars
2450:Generated_Source\PSoC5/USB.c **** *  USB_deviceStatus - checked to determine remote status
2451:Generated_Source\PSoC5/USB.c **** *
2452:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2453:Generated_Source\PSoC5/USB.c **** uint8 USB_RWUEnabled(void) 
2454:Generated_Source\PSoC5/USB.c **** {
 1661              		.loc 1 2454 0
 1662              		.cfi_startproc
 1663              		@ args = 0, pretend = 0, frame = 8
 1664              		@ frame_needed = 1, uses_anonymous_args = 0
 1665              		@ link register save eliminated.
 1666 0000 80B4     		push	{r7}
 1667              		.cfi_def_cfa_offset 4
 1668              		.cfi_offset 7, -4
 1669 0002 83B0     		sub	sp, sp, #12
 1670              		.cfi_def_cfa_offset 16
 1671 0004 00AF     		add	r7, sp, #0
 1672              		.cfi_def_cfa_register 7
2455:Generated_Source\PSoC5/USB.c ****     uint8 result = USB_FALSE;
 1673              		.loc 1 2455 0
 1674 0006 0023     		movs	r3, #0
 1675 0008 FB71     		strb	r3, [r7, #7]
2456:Generated_Source\PSoC5/USB.c **** 
2457:Generated_Source\PSoC5/USB.c ****     if (0u != (USB_deviceStatus & USB_DEVICE_STATUS_REMOTE_WAKEUP))
 1676              		.loc 1 2457 0
 1677 000a 074B     		ldr	r3, .L100
 1678 000c 1B78     		ldrb	r3, [r3]
 1679 000e DBB2     		uxtb	r3, r3
 1680 0010 03F00203 		and	r3, r3, #2
 1681 0014 002B     		cmp	r3, #0
 1682 0016 01D0     		beq	.L98
2458:Generated_Source\PSoC5/USB.c ****     {
2459:Generated_Source\PSoC5/USB.c ****         result = USB_TRUE;
 1683              		.loc 1 2459 0
 1684 0018 0123     		movs	r3, #1
 1685 001a FB71     		strb	r3, [r7, #7]
 1686              	.L98:
2460:Generated_Source\PSoC5/USB.c ****     }
2461:Generated_Source\PSoC5/USB.c **** 
2462:Generated_Source\PSoC5/USB.c ****     return (result);
 1687              		.loc 1 2462 0
 1688 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
2463:Generated_Source\PSoC5/USB.c **** }
 1689              		.loc 1 2463 0
 1690 001e 1846     		mov	r0, r3
 1691 0020 0C37     		adds	r7, r7, #12
 1692              		.cfi_def_cfa_offset 4
 1693 0022 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 74


 1694              		.cfi_def_cfa_register 13
 1695              		@ sp needed
 1696 0024 80BC     		pop	{r7}
 1697              		.cfi_restore 7
 1698              		.cfi_def_cfa_offset 0
 1699 0026 7047     		bx	lr
 1700              	.L101:
 1701              		.align	2
 1702              	.L100:
 1703 0028 00000000 		.word	USB_deviceStatus
 1704              		.cfi_endproc
 1705              	.LFE19:
 1706              		.size	USB_RWUEnabled, .-USB_RWUEnabled
 1707              		.section	.text.USB_GetDeviceAddress,"ax",%progbits
 1708              		.align	2
 1709              		.global	USB_GetDeviceAddress
 1710              		.thumb
 1711              		.thumb_func
 1712              		.type	USB_GetDeviceAddress, %function
 1713              	USB_GetDeviceAddress:
 1714              	.LFB20:
2464:Generated_Source\PSoC5/USB.c **** 
2465:Generated_Source\PSoC5/USB.c **** 
2466:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2467:Generated_Source\PSoC5/USB.c **** * Function Name: USB_GetDeviceAddress
2468:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2469:Generated_Source\PSoC5/USB.c **** *
2470:Generated_Source\PSoC5/USB.c **** *  This function returns the currently assigned address for the USB device.
2471:Generated_Source\PSoC5/USB.c **** *
2472:Generated_Source\PSoC5/USB.c **** * \return
2473:Generated_Source\PSoC5/USB.c **** *  Returns the currently assigned address.
2474:Generated_Source\PSoC5/USB.c **** *  Returns 0 if the device has not yet been assigned an address.
2475:Generated_Source\PSoC5/USB.c **** *
2476:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2477:Generated_Source\PSoC5/USB.c **** uint8 USB_GetDeviceAddress(void) 
2478:Generated_Source\PSoC5/USB.c **** {
 1715              		.loc 1 2478 0
 1716              		.cfi_startproc
 1717              		@ args = 0, pretend = 0, frame = 0
 1718              		@ frame_needed = 1, uses_anonymous_args = 0
 1719              		@ link register save eliminated.
 1720 0000 80B4     		push	{r7}
 1721              		.cfi_def_cfa_offset 4
 1722              		.cfi_offset 7, -4
 1723 0002 00AF     		add	r7, sp, #0
 1724              		.cfi_def_cfa_register 7
2479:Generated_Source\PSoC5/USB.c ****     return (uint8)(USB_CR0_REG & USB_CR0_DEVICE_ADDRESS_MASK);
 1725              		.loc 1 2479 0
 1726 0004 044B     		ldr	r3, .L104
 1727 0006 1B78     		ldrb	r3, [r3]
 1728 0008 DBB2     		uxtb	r3, r3
 1729 000a 03F07F03 		and	r3, r3, #127
 1730 000e DBB2     		uxtb	r3, r3
2480:Generated_Source\PSoC5/USB.c **** }
 1731              		.loc 1 2480 0
 1732 0010 1846     		mov	r0, r3
 1733 0012 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 75


 1734              		.cfi_def_cfa_register 13
 1735              		@ sp needed
 1736 0014 80BC     		pop	{r7}
 1737              		.cfi_restore 7
 1738              		.cfi_def_cfa_offset 0
 1739 0016 7047     		bx	lr
 1740              	.L105:
 1741              		.align	2
 1742              	.L104:
 1743 0018 08600040 		.word	1073766408
 1744              		.cfi_endproc
 1745              	.LFE20:
 1746              		.size	USB_GetDeviceAddress, .-USB_GetDeviceAddress
 1747              		.section	.text.USB_EnableSofInt,"ax",%progbits
 1748              		.align	2
 1749              		.global	USB_EnableSofInt
 1750              		.thumb
 1751              		.thumb_func
 1752              		.type	USB_EnableSofInt, %function
 1753              	USB_EnableSofInt:
 1754              	.LFB21:
2481:Generated_Source\PSoC5/USB.c **** 
2482:Generated_Source\PSoC5/USB.c **** 
2483:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2484:Generated_Source\PSoC5/USB.c **** * Function Name: USB_EnableSofInt
2485:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2486:Generated_Source\PSoC5/USB.c **** *
2487:Generated_Source\PSoC5/USB.c **** *  This function enables interrupt generation when a Start-of-Frame (SOF)
2488:Generated_Source\PSoC5/USB.c **** *  packet is received from the host.
2489:Generated_Source\PSoC5/USB.c **** *
2490:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2491:Generated_Source\PSoC5/USB.c **** void USB_EnableSofInt(void) 
2492:Generated_Source\PSoC5/USB.c **** {
 1755              		.loc 1 2492 0
 1756              		.cfi_startproc
 1757              		@ args = 0, pretend = 0, frame = 0
 1758              		@ frame_needed = 1, uses_anonymous_args = 0
 1759              		@ link register save eliminated.
 1760 0000 80B4     		push	{r7}
 1761              		.cfi_def_cfa_offset 4
 1762              		.cfi_offset 7, -4
 1763 0002 00AF     		add	r7, sp, #0
 1764              		.cfi_def_cfa_register 7
2493:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
2494:Generated_Source\PSoC5/USB.c ****     /* Enable SOF interrupt interrupt source. */
2495:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG |= (uint32) USB_INTR_SIE_SOF_INTR;
2496:Generated_Source\PSoC5/USB.c **** #else
2497:Generated_Source\PSoC5/USB.c ****     /* Enable SOF interrupt if it is present. */
2498:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
2499:Generated_Source\PSoC5/USB.c ****         CyIntEnable(USB_SOF_VECT_NUM);
2500:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
2501:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
2502:Generated_Source\PSoC5/USB.c **** }
 1765              		.loc 1 2502 0
 1766 0004 00BF     		nop
 1767 0006 BD46     		mov	sp, r7
 1768              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 76


 1769              		@ sp needed
 1770 0008 80BC     		pop	{r7}
 1771              		.cfi_restore 7
 1772              		.cfi_def_cfa_offset 0
 1773 000a 7047     		bx	lr
 1774              		.cfi_endproc
 1775              	.LFE21:
 1776              		.size	USB_EnableSofInt, .-USB_EnableSofInt
 1777              		.section	.text.USB_DisableSofInt,"ax",%progbits
 1778              		.align	2
 1779              		.global	USB_DisableSofInt
 1780              		.thumb
 1781              		.thumb_func
 1782              		.type	USB_DisableSofInt, %function
 1783              	USB_DisableSofInt:
 1784              	.LFB22:
2503:Generated_Source\PSoC5/USB.c **** 
2504:Generated_Source\PSoC5/USB.c **** 
2505:Generated_Source\PSoC5/USB.c **** /*******************************************************************************
2506:Generated_Source\PSoC5/USB.c **** * Function Name: USB_DisableSofInt
2507:Generated_Source\PSoC5/USB.c **** ****************************************************************************//**
2508:Generated_Source\PSoC5/USB.c **** *
2509:Generated_Source\PSoC5/USB.c **** *  This function disables interrupt generation when a Start-of-Frame (SOF)
2510:Generated_Source\PSoC5/USB.c **** *  packet is received from the host.
2511:Generated_Source\PSoC5/USB.c **** *
2512:Generated_Source\PSoC5/USB.c **** *******************************************************************************/
2513:Generated_Source\PSoC5/USB.c **** void USB_DisableSofInt(void) 
2514:Generated_Source\PSoC5/USB.c **** {
 1785              		.loc 1 2514 0
 1786              		.cfi_startproc
 1787              		@ args = 0, pretend = 0, frame = 0
 1788              		@ frame_needed = 1, uses_anonymous_args = 0
 1789              		@ link register save eliminated.
 1790 0000 80B4     		push	{r7}
 1791              		.cfi_def_cfa_offset 4
 1792              		.cfi_offset 7, -4
 1793 0002 00AF     		add	r7, sp, #0
 1794              		.cfi_def_cfa_register 7
2515:Generated_Source\PSoC5/USB.c **** #if (CY_PSOC4)
2516:Generated_Source\PSoC5/USB.c ****     /* Disable SOF interrupt interrupt source. */
2517:Generated_Source\PSoC5/USB.c ****     USB_INTR_SIE_MASK_REG &= (uint32) ~USB_INTR_SIE_SOF_INTR;
2518:Generated_Source\PSoC5/USB.c **** #else
2519:Generated_Source\PSoC5/USB.c ****     /* Disable SOF interrupt if it is present. */
2520:Generated_Source\PSoC5/USB.c ****     #if (USB_SOF_ISR_ACTIVE)
2521:Generated_Source\PSoC5/USB.c ****         CyIntDisable(USB_SOF_VECT_NUM);
2522:Generated_Source\PSoC5/USB.c ****     #endif /* (USB_SOF_ISR_ACTIVE) */
2523:Generated_Source\PSoC5/USB.c **** #endif /* (CY_PSOC4) */
2524:Generated_Source\PSoC5/USB.c **** }
 1795              		.loc 1 2524 0
 1796 0004 00BF     		nop
 1797 0006 BD46     		mov	sp, r7
 1798              		.cfi_def_cfa_register 13
 1799              		@ sp needed
 1800 0008 80BC     		pop	{r7}
 1801              		.cfi_restore 7
 1802              		.cfi_def_cfa_offset 0
 1803 000a 7047     		bx	lr
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 77


 1804              		.cfi_endproc
 1805              	.LFE22:
 1806              		.size	USB_DisableSofInt, .-USB_DisableSofInt
 1807              		.text
 1808              	.Letext0:
 1809              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1810              		.file 3 "Generated_Source\\PSoC5\\USB.h"
 1811              		.file 4 "Generated_Source\\PSoC5\\USB_pvt.h"
 1812              		.section	.debug_info,"",%progbits
 1813              	.Ldebug_info0:
 1814 0000 29070000 		.4byte	0x729
 1815 0004 0400     		.2byte	0x4
 1816 0006 00000000 		.4byte	.Ldebug_abbrev0
 1817 000a 04       		.byte	0x4
 1818 000b 01       		.uleb128 0x1
 1819 000c 4F000000 		.4byte	.LASF93
 1820 0010 0C       		.byte	0xc
 1821 0011 BF010000 		.4byte	.LASF94
 1822 0015 2F020000 		.4byte	.LASF95
 1823 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1824 001d 00000000 		.4byte	0
 1825 0021 00000000 		.4byte	.Ldebug_line0
 1826 0025 02       		.uleb128 0x2
 1827 0026 01       		.byte	0x1
 1828 0027 06       		.byte	0x6
 1829 0028 71010000 		.4byte	.LASF0
 1830 002c 02       		.uleb128 0x2
 1831 002d 01       		.byte	0x1
 1832 002e 08       		.byte	0x8
 1833 002f 4F040000 		.4byte	.LASF1
 1834 0033 02       		.uleb128 0x2
 1835 0034 02       		.byte	0x2
 1836 0035 05       		.byte	0x5
 1837 0036 75040000 		.4byte	.LASF2
 1838 003a 02       		.uleb128 0x2
 1839 003b 02       		.byte	0x2
 1840 003c 07       		.byte	0x7
 1841 003d 00030000 		.4byte	.LASF3
 1842 0041 02       		.uleb128 0x2
 1843 0042 04       		.byte	0x4
 1844 0043 05       		.byte	0x5
 1845 0044 A1010000 		.4byte	.LASF4
 1846 0048 02       		.uleb128 0x2
 1847 0049 04       		.byte	0x4
 1848 004a 07       		.byte	0x7
 1849 004b DC020000 		.4byte	.LASF5
 1850 004f 02       		.uleb128 0x2
 1851 0050 08       		.byte	0x8
 1852 0051 05       		.byte	0x5
 1853 0052 63010000 		.4byte	.LASF6
 1854 0056 02       		.uleb128 0x2
 1855 0057 08       		.byte	0x8
 1856 0058 07       		.byte	0x7
 1857 0059 EF000000 		.4byte	.LASF7
 1858 005d 03       		.uleb128 0x3
 1859 005e 04       		.byte	0x4
 1860 005f 05       		.byte	0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 78


 1861 0060 696E7400 		.ascii	"int\000"
 1862 0064 02       		.uleb128 0x2
 1863 0065 04       		.byte	0x4
 1864 0066 07       		.byte	0x7
 1865 0067 CF020000 		.4byte	.LASF8
 1866 006b 04       		.uleb128 0x4
 1867 006c DC010000 		.4byte	.LASF9
 1868 0070 02       		.byte	0x2
 1869 0071 E901     		.2byte	0x1e9
 1870 0073 2C000000 		.4byte	0x2c
 1871 0077 04       		.uleb128 0x4
 1872 0078 00000000 		.4byte	.LASF10
 1873 007c 02       		.byte	0x2
 1874 007d EA01     		.2byte	0x1ea
 1875 007f 3A000000 		.4byte	0x3a
 1876 0083 04       		.uleb128 0x4
 1877 0084 08020000 		.4byte	.LASF11
 1878 0088 02       		.byte	0x2
 1879 0089 EB01     		.2byte	0x1eb
 1880 008b 48000000 		.4byte	0x48
 1881 008f 02       		.uleb128 0x2
 1882 0090 04       		.byte	0x4
 1883 0091 04       		.byte	0x4
 1884 0092 EE030000 		.4byte	.LASF12
 1885 0096 02       		.uleb128 0x2
 1886 0097 08       		.byte	0x8
 1887 0098 04       		.byte	0x4
 1888 0099 F0010000 		.4byte	.LASF13
 1889 009d 02       		.uleb128 0x2
 1890 009e 01       		.byte	0x1
 1891 009f 08       		.byte	0x8
 1892 00a0 ED040000 		.4byte	.LASF14
 1893 00a4 04       		.uleb128 0x4
 1894 00a5 38040000 		.4byte	.LASF15
 1895 00a9 02       		.byte	0x2
 1896 00aa 9302     		.2byte	0x293
 1897 00ac B0000000 		.4byte	0xb0
 1898 00b0 05       		.uleb128 0x5
 1899 00b1 6B000000 		.4byte	0x6b
 1900 00b5 04       		.uleb128 0x4
 1901 00b6 34030000 		.4byte	.LASF16
 1902 00ba 02       		.byte	0x2
 1903 00bb 9502     		.2byte	0x295
 1904 00bd C1000000 		.4byte	0xc1
 1905 00c1 05       		.uleb128 0x5
 1906 00c2 83000000 		.4byte	0x83
 1907 00c6 02       		.uleb128 0x2
 1908 00c7 08       		.byte	0x8
 1909 00c8 04       		.byte	0x4
 1910 00c9 84030000 		.4byte	.LASF17
 1911 00cd 02       		.uleb128 0x2
 1912 00ce 04       		.byte	0x4
 1913 00cf 07       		.byte	0x7
 1914 00d0 7B030000 		.4byte	.LASF18
 1915 00d4 06       		.uleb128 0x6
 1916 00d5 0C       		.byte	0xc
 1917 00d6 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 79


 1918 00d7 8D       		.byte	0x8d
 1919 00d8 49010000 		.4byte	0x149
 1920 00dc 07       		.uleb128 0x7
 1921 00dd 90030000 		.4byte	.LASF19
 1922 00e1 03       		.byte	0x3
 1923 00e2 8F       		.byte	0x8f
 1924 00e3 6B000000 		.4byte	0x6b
 1925 00e7 00       		.byte	0
 1926 00e8 07       		.uleb128 0x7
 1927 00e9 F4030000 		.4byte	.LASF20
 1928 00ed 03       		.byte	0x3
 1929 00ee 90       		.byte	0x90
 1930 00ef 6B000000 		.4byte	0x6b
 1931 00f3 01       		.byte	0x1
 1932 00f4 07       		.uleb128 0x7
 1933 00f5 71030000 		.4byte	.LASF21
 1934 00f9 03       		.byte	0x3
 1935 00fa 91       		.byte	0x91
 1936 00fb 6B000000 		.4byte	0x6b
 1937 00ff 02       		.byte	0x2
 1938 0100 07       		.uleb128 0x7
 1939 0101 E2010000 		.4byte	.LASF22
 1940 0105 03       		.byte	0x3
 1941 0106 92       		.byte	0x92
 1942 0107 6B000000 		.4byte	0x6b
 1943 010b 03       		.byte	0x3
 1944 010c 07       		.uleb128 0x7
 1945 010d 06010000 		.4byte	.LASF23
 1946 0111 03       		.byte	0x3
 1947 0112 93       		.byte	0x93
 1948 0113 6B000000 		.4byte	0x6b
 1949 0117 04       		.byte	0x4
 1950 0118 07       		.uleb128 0x7
 1951 0119 AD020000 		.4byte	.LASF24
 1952 011d 03       		.byte	0x3
 1953 011e 94       		.byte	0x94
 1954 011f 6B000000 		.4byte	0x6b
 1955 0123 05       		.byte	0x5
 1956 0124 07       		.uleb128 0x7
 1957 0125 12050000 		.4byte	.LASF25
 1958 0129 03       		.byte	0x3
 1959 012a 95       		.byte	0x95
 1960 012b 77000000 		.4byte	0x77
 1961 012f 06       		.byte	0x6
 1962 0130 07       		.uleb128 0x7
 1963 0131 F7040000 		.4byte	.LASF26
 1964 0135 03       		.byte	0x3
 1965 0136 96       		.byte	0x96
 1966 0137 77000000 		.4byte	0x77
 1967 013b 08       		.byte	0x8
 1968 013c 07       		.uleb128 0x7
 1969 013d 23030000 		.4byte	.LASF27
 1970 0141 03       		.byte	0x3
 1971 0142 97       		.byte	0x97
 1972 0143 6B000000 		.4byte	0x6b
 1973 0147 0A       		.byte	0xa
 1974 0148 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 80


 1975 0149 08       		.uleb128 0x8
 1976 014a 26010000 		.4byte	.LASF28
 1977 014e 03       		.byte	0x3
 1978 014f 98       		.byte	0x98
 1979 0150 D4000000 		.4byte	0xd4
 1980 0154 06       		.uleb128 0x6
 1981 0155 10       		.byte	0x10
 1982 0156 03       		.byte	0x3
 1983 0157 D4       		.byte	0xd4
 1984 0158 8D010000 		.4byte	0x18d
 1985 015c 07       		.uleb128 0x7
 1986 015d D3030000 		.4byte	.LASF29
 1987 0161 03       		.byte	0x3
 1988 0162 D6       		.byte	0xd6
 1989 0163 6B000000 		.4byte	0x6b
 1990 0167 00       		.byte	0
 1991 0168 07       		.uleb128 0x7
 1992 0169 DA030000 		.4byte	.LASF30
 1993 016d 03       		.byte	0x3
 1994 016e D7       		.byte	0xd7
 1995 016f 6B000000 		.4byte	0x6b
 1996 0173 01       		.byte	0x1
 1997 0174 07       		.uleb128 0x7
 1998 0175 E8030000 		.4byte	.LASF31
 1999 0179 03       		.byte	0x3
 2000 017a D8       		.byte	0xd8
 2001 017b 6B000000 		.4byte	0x6b
 2002 017f 02       		.byte	0x2
 2003 0180 09       		.uleb128 0x9
 2004 0181 67617000 		.ascii	"gap\000"
 2005 0185 03       		.byte	0x3
 2006 0186 D9       		.byte	0xd9
 2007 0187 8D010000 		.4byte	0x18d
 2008 018b 03       		.byte	0x3
 2009 018c 00       		.byte	0
 2010 018d 0A       		.uleb128 0xa
 2011 018e 6B000000 		.4byte	0x6b
 2012 0192 9D010000 		.4byte	0x19d
 2013 0196 0B       		.uleb128 0xb
 2014 0197 CD000000 		.4byte	0xcd
 2015 019b 0C       		.byte	0xc
 2016 019c 00       		.byte	0
 2017 019d 08       		.uleb128 0x8
 2018 019e 3C050000 		.4byte	.LASF32
 2019 01a2 03       		.byte	0x3
 2020 01a3 DA       		.byte	0xda
 2021 01a4 54010000 		.4byte	0x154
 2022 01a8 06       		.uleb128 0x6
 2023 01a9 10       		.byte	0x10
 2024 01aa 03       		.byte	0x3
 2025 01ab E6       		.byte	0xe6
 2026 01ac 29020000 		.4byte	0x229
 2027 01b0 07       		.uleb128 0x7
 2028 01b1 0B010000 		.4byte	.LASF33
 2029 01b5 03       		.byte	0x3
 2030 01b6 E8       		.byte	0xe8
 2031 01b7 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 81


 2032 01bb 00       		.byte	0
 2033 01bc 07       		.uleb128 0x7
 2034 01bd 64050000 		.4byte	.LASF34
 2035 01c1 03       		.byte	0x3
 2036 01c2 E9       		.byte	0xe9
 2037 01c3 6B000000 		.4byte	0x6b
 2038 01c7 01       		.byte	0x1
 2039 01c8 07       		.uleb128 0x7
 2040 01c9 03020000 		.4byte	.LASF35
 2041 01cd 03       		.byte	0x3
 2042 01ce EA       		.byte	0xea
 2043 01cf 6B000000 		.4byte	0x6b
 2044 01d3 02       		.byte	0x2
 2045 01d4 07       		.uleb128 0x7
 2046 01d5 B4020000 		.4byte	.LASF36
 2047 01d9 03       		.byte	0x3
 2048 01da EB       		.byte	0xeb
 2049 01db 6B000000 		.4byte	0x6b
 2050 01df 03       		.byte	0x3
 2051 01e0 07       		.uleb128 0x7
 2052 01e1 EB010000 		.4byte	.LASF37
 2053 01e5 03       		.byte	0x3
 2054 01e6 EC       		.byte	0xec
 2055 01e7 6B000000 		.4byte	0x6b
 2056 01eb 04       		.byte	0x4
 2057 01ec 07       		.uleb128 0x7
 2058 01ed B2040000 		.4byte	.LASF38
 2059 01f1 03       		.byte	0x3
 2060 01f2 ED       		.byte	0xed
 2061 01f3 6B000000 		.4byte	0x6b
 2062 01f7 05       		.byte	0x5
 2063 01f8 07       		.uleb128 0x7
 2064 01f9 AD040000 		.4byte	.LASF39
 2065 01fd 03       		.byte	0x3
 2066 01fe EE       		.byte	0xee
 2067 01ff 6B000000 		.4byte	0x6b
 2068 0203 06       		.byte	0x6
 2069 0204 07       		.uleb128 0x7
 2070 0205 BE030000 		.4byte	.LASF40
 2071 0209 03       		.byte	0x3
 2072 020a EF       		.byte	0xef
 2073 020b 6B000000 		.4byte	0x6b
 2074 020f 07       		.byte	0x7
 2075 0210 07       		.uleb128 0x7
 2076 0211 5F050000 		.4byte	.LASF41
 2077 0215 03       		.byte	0x3
 2078 0216 F0       		.byte	0xf0
 2079 0217 6B000000 		.4byte	0x6b
 2080 021b 08       		.byte	0x8
 2081 021c 09       		.uleb128 0x9
 2082 021d 67617000 		.ascii	"gap\000"
 2083 0221 03       		.byte	0x3
 2084 0222 F1       		.byte	0xf1
 2085 0223 29020000 		.4byte	0x229
 2086 0227 09       		.byte	0x9
 2087 0228 00       		.byte	0
 2088 0229 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 82


 2089 022a 6B000000 		.4byte	0x6b
 2090 022e 39020000 		.4byte	0x239
 2091 0232 0B       		.uleb128 0xb
 2092 0233 CD000000 		.4byte	0xcd
 2093 0237 06       		.byte	0x6
 2094 0238 00       		.byte	0
 2095 0239 08       		.uleb128 0x8
 2096 023a 26040000 		.4byte	.LASF42
 2097 023e 03       		.byte	0x3
 2098 023f F2       		.byte	0xf2
 2099 0240 A8010000 		.4byte	0x1a8
 2100 0244 0C       		.uleb128 0xc
 2101 0245 90       		.byte	0x90
 2102 0246 03       		.byte	0x3
 2103 0247 0E01     		.2byte	0x10e
 2104 0249 5B020000 		.4byte	0x25b
 2105 024d 0D       		.uleb128 0xd
 2106 024e 29020000 		.4byte	.LASF43
 2107 0252 03       		.byte	0x3
 2108 0253 1001     		.2byte	0x110
 2109 0255 5B020000 		.4byte	0x25b
 2110 0259 00       		.byte	0
 2111 025a 00       		.byte	0
 2112 025b 0A       		.uleb128 0xa
 2113 025c 9D010000 		.4byte	0x19d
 2114 0260 6B020000 		.4byte	0x26b
 2115 0264 0B       		.uleb128 0xb
 2116 0265 CD000000 		.4byte	0xcd
 2117 0269 08       		.byte	0x8
 2118 026a 00       		.byte	0
 2119 026b 04       		.uleb128 0x4
 2120 026c 4B030000 		.4byte	.LASF44
 2121 0270 03       		.byte	0x3
 2122 0271 1101     		.2byte	0x111
 2123 0273 44020000 		.4byte	0x244
 2124 0277 0C       		.uleb128 0xc
 2125 0278 90       		.byte	0x90
 2126 0279 03       		.byte	0x3
 2127 027a 1401     		.2byte	0x114
 2128 027c 8E020000 		.4byte	0x28e
 2129 0280 0D       		.uleb128 0xd
 2130 0281 1D030000 		.4byte	.LASF45
 2131 0285 03       		.byte	0x3
 2132 0286 1601     		.2byte	0x116
 2133 0288 8E020000 		.4byte	0x28e
 2134 028c 00       		.byte	0
 2135 028d 00       		.byte	0
 2136 028e 0A       		.uleb128 0xa
 2137 028f 39020000 		.4byte	0x239
 2138 0293 9E020000 		.4byte	0x29e
 2139 0297 0B       		.uleb128 0xb
 2140 0298 CD000000 		.4byte	0xcd
 2141 029c 08       		.byte	0x8
 2142 029d 00       		.byte	0
 2143 029e 04       		.uleb128 0x4
 2144 029f 5E030000 		.4byte	.LASF46
 2145 02a3 03       		.byte	0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 83


 2146 02a4 1701     		.2byte	0x117
 2147 02a6 77020000 		.4byte	0x277
 2148 02aa 0E       		.uleb128 0xe
 2149 02ab 13030000 		.4byte	.LASF49
 2150 02af 01       		.byte	0x1
 2151 02b0 BA       		.byte	0xba
 2152 02b1 00000000 		.4byte	.LFB0
 2153 02b5 3C000000 		.4byte	.LFE0-.LFB0
 2154 02b9 01       		.uleb128 0x1
 2155 02ba 9C       		.byte	0x9c
 2156 02bb DC020000 		.4byte	0x2dc
 2157 02bf 0F       		.uleb128 0xf
 2158 02c0 5C010000 		.4byte	.LASF47
 2159 02c4 01       		.byte	0x1
 2160 02c5 BA       		.byte	0xba
 2161 02c6 6B000000 		.4byte	0x6b
 2162 02ca 02       		.uleb128 0x2
 2163 02cb 91       		.byte	0x91
 2164 02cc 77       		.sleb128 -9
 2165 02cd 0F       		.uleb128 0xf
 2166 02ce F2040000 		.4byte	.LASF48
 2167 02d2 01       		.byte	0x1
 2168 02d3 BA       		.byte	0xba
 2169 02d4 6B000000 		.4byte	0x6b
 2170 02d8 02       		.uleb128 0x2
 2171 02d9 91       		.byte	0x91
 2172 02da 76       		.sleb128 -10
 2173 02db 00       		.byte	0
 2174 02dc 0E       		.uleb128 0xe
 2175 02dd 97030000 		.4byte	.LASF50
 2176 02e1 01       		.byte	0x1
 2177 02e2 D3       		.byte	0xd3
 2178 02e3 00000000 		.4byte	.LFB1
 2179 02e7 7C010000 		.4byte	.LFE1-.LFB1
 2180 02eb 01       		.uleb128 0x1
 2181 02ec 9C       		.byte	0x9c
 2182 02ed 00030000 		.4byte	0x300
 2183 02f1 10       		.uleb128 0x10
 2184 02f2 4E050000 		.4byte	.LASF53
 2185 02f6 01       		.byte	0x1
 2186 02f7 FA       		.byte	0xfa
 2187 02f8 6B000000 		.4byte	0x6b
 2188 02fc 02       		.uleb128 0x2
 2189 02fd 91       		.byte	0x91
 2190 02fe 77       		.sleb128 -9
 2191 02ff 00       		.byte	0
 2192 0300 11       		.uleb128 0x11
 2193 0301 07000000 		.4byte	.LASF51
 2194 0305 01       		.byte	0x1
 2195 0306 CC01     		.2byte	0x1cc
 2196 0308 00000000 		.4byte	.LFB2
 2197 030c F4000000 		.4byte	.LFE2-.LFB2
 2198 0310 01       		.uleb128 0x1
 2199 0311 9C       		.byte	0x9c
 2200 0312 35030000 		.4byte	0x335
 2201 0316 12       		.uleb128 0x12
 2202 0317 5C010000 		.4byte	.LASF47
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 84


 2203 031b 01       		.byte	0x1
 2204 031c CC01     		.2byte	0x1cc
 2205 031e 6B000000 		.4byte	0x6b
 2206 0322 02       		.uleb128 0x2
 2207 0323 91       		.byte	0x91
 2208 0324 77       		.sleb128 -9
 2209 0325 12       		.uleb128 0x12
 2210 0326 F2040000 		.4byte	.LASF48
 2211 032a 01       		.byte	0x1
 2212 032b CC01     		.2byte	0x1cc
 2213 032d 6B000000 		.4byte	0x6b
 2214 0331 02       		.uleb128 0x2
 2215 0332 91       		.byte	0x91
 2216 0333 76       		.sleb128 -10
 2217 0334 00       		.byte	0
 2218 0335 13       		.uleb128 0x13
 2219 0336 7F040000 		.4byte	.LASF79
 2220 033a 01       		.byte	0x1
 2221 033b 9F02     		.2byte	0x29f
 2222 033d 00000000 		.4byte	.LFB3
 2223 0341 68000000 		.4byte	.LFE3-.LFB3
 2224 0345 01       		.uleb128 0x1
 2225 0346 9C       		.byte	0x9c
 2226 0347 11       		.uleb128 0x11
 2227 0348 53010000 		.4byte	.LASF52
 2228 034c 01       		.byte	0x1
 2229 034d D902     		.2byte	0x2d9
 2230 034f 00000000 		.4byte	.LFB4
 2231 0353 00010000 		.4byte	.LFE4-.LFB4
 2232 0357 01       		.uleb128 0x1
 2233 0358 9C       		.byte	0x9c
 2234 0359 6D030000 		.4byte	0x36d
 2235 035d 14       		.uleb128 0x14
 2236 035e 4E050000 		.4byte	.LASF53
 2237 0362 01       		.byte	0x1
 2238 0363 DB02     		.2byte	0x2db
 2239 0365 6B000000 		.4byte	0x6b
 2240 0369 02       		.uleb128 0x2
 2241 036a 91       		.byte	0x91
 2242 036b 77       		.sleb128 -9
 2243 036c 00       		.byte	0
 2244 036d 15       		.uleb128 0x15
 2245 036e 3D040000 		.4byte	.LASF55
 2246 0372 01       		.byte	0x1
 2247 0373 5103     		.2byte	0x351
 2248 0375 6B000000 		.4byte	0x6b
 2249 0379 00000000 		.4byte	.LFB5
 2250 037d 38000000 		.4byte	.LFE5-.LFB5
 2251 0381 01       		.uleb128 0x1
 2252 0382 9C       		.byte	0x9c
 2253 0383 97030000 		.4byte	0x397
 2254 0387 14       		.uleb128 0x14
 2255 0388 2D030000 		.4byte	.LASF54
 2256 038c 01       		.byte	0x1
 2257 038d 5303     		.2byte	0x353
 2258 038f 6B000000 		.4byte	0x6b
 2259 0393 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 85


 2260 0394 91       		.byte	0x91
 2261 0395 77       		.sleb128 -9
 2262 0396 00       		.byte	0
 2263 0397 16       		.uleb128 0x16
 2264 0398 11040000 		.4byte	.LASF74
 2265 039c 01       		.byte	0x1
 2266 039d 6803     		.2byte	0x368
 2267 039f 6B000000 		.4byte	0x6b
 2268 03a3 00000000 		.4byte	.LFB6
 2269 03a7 18000000 		.4byte	.LFE6-.LFB6
 2270 03ab 01       		.uleb128 0x1
 2271 03ac 9C       		.byte	0x9c
 2272 03ad 15       		.uleb128 0x15
 2273 03ae BA040000 		.4byte	.LASF56
 2274 03b2 01       		.byte	0x1
 2275 03b3 8203     		.2byte	0x382
 2276 03b5 6B000000 		.4byte	0x6b
 2277 03b9 00000000 		.4byte	.LFB7
 2278 03bd 30000000 		.4byte	.LFE7-.LFB7
 2279 03c1 01       		.uleb128 0x1
 2280 03c2 9C       		.byte	0x9c
 2281 03c3 D7030000 		.4byte	0x3d7
 2282 03c7 17       		.uleb128 0x17
 2283 03c8 72657300 		.ascii	"res\000"
 2284 03cc 01       		.byte	0x1
 2285 03cd 8403     		.2byte	0x384
 2286 03cf 6B000000 		.4byte	0x6b
 2287 03d3 02       		.uleb128 0x2
 2288 03d4 91       		.byte	0x91
 2289 03d5 77       		.sleb128 -9
 2290 03d6 00       		.byte	0
 2291 03d7 15       		.uleb128 0x15
 2292 03d8 5D040000 		.4byte	.LASF57
 2293 03dc 01       		.byte	0x1
 2294 03dd 9F03     		.2byte	0x39f
 2295 03df 6B000000 		.4byte	0x6b
 2296 03e3 00000000 		.4byte	.LFB8
 2297 03e7 20000000 		.4byte	.LFE8-.LFB8
 2298 03eb 01       		.uleb128 0x1
 2299 03ec 9C       		.byte	0x9c
 2300 03ed 01040000 		.4byte	0x401
 2301 03f1 12       		.uleb128 0x12
 2302 03f2 1D050000 		.4byte	.LASF58
 2303 03f6 01       		.byte	0x1
 2304 03f7 9F03     		.2byte	0x39f
 2305 03f9 6B000000 		.4byte	0x6b
 2306 03fd 02       		.uleb128 0x2
 2307 03fe 91       		.byte	0x91
 2308 03ff 77       		.sleb128 -9
 2309 0400 00       		.byte	0
 2310 0401 15       		.uleb128 0x15
 2311 0402 2D050000 		.4byte	.LASF59
 2312 0406 01       		.byte	0x1
 2313 0407 BF03     		.2byte	0x3bf
 2314 0409 6B000000 		.4byte	0x6b
 2315 040d 00000000 		.4byte	.LFB9
 2316 0411 2C000000 		.4byte	.LFE9-.LFB9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 86


 2317 0415 01       		.uleb128 0x1
 2318 0416 9C       		.byte	0x9c
 2319 0417 2B040000 		.4byte	0x42b
 2320 041b 12       		.uleb128 0x12
 2321 041c 4A010000 		.4byte	.LASF60
 2322 0420 01       		.byte	0x1
 2323 0421 BF03     		.2byte	0x3bf
 2324 0423 6B000000 		.4byte	0x6b
 2325 0427 02       		.uleb128 0x2
 2326 0428 91       		.byte	0x91
 2327 0429 77       		.sleb128 -9
 2328 042a 00       		.byte	0
 2329 042b 15       		.uleb128 0x15
 2330 042c 6C050000 		.4byte	.LASF61
 2331 0430 01       		.byte	0x1
 2332 0431 D603     		.2byte	0x3d6
 2333 0433 77000000 		.4byte	0x77
 2334 0437 00000000 		.4byte	.LFB10
 2335 043b 60000000 		.4byte	.LFE10-.LFB10
 2336 043f 01       		.uleb128 0x1
 2337 0440 9C       		.byte	0x9c
 2338 0441 64040000 		.4byte	0x464
 2339 0445 12       		.uleb128 0x12
 2340 0446 4A010000 		.4byte	.LASF60
 2341 044a 01       		.byte	0x1
 2342 044b D603     		.2byte	0x3d6
 2343 044d 6B000000 		.4byte	0x6b
 2344 0451 02       		.uleb128 0x2
 2345 0452 91       		.byte	0x91
 2346 0453 6F       		.sleb128 -17
 2347 0454 14       		.uleb128 0x14
 2348 0455 9C010000 		.4byte	.LASF62
 2349 0459 01       		.byte	0x1
 2350 045a D803     		.2byte	0x3d8
 2351 045c 77000000 		.4byte	0x77
 2352 0460 02       		.uleb128 0x2
 2353 0461 91       		.byte	0x91
 2354 0462 76       		.sleb128 -10
 2355 0463 00       		.byte	0
 2356 0464 18       		.uleb128 0x18
 2357 0465 C6030000 		.4byte	.LASF63
 2358 0469 01       		.byte	0x1
 2359 046a 3E05     		.2byte	0x53e
 2360 046c 00000000 		.4byte	.LFB11
 2361 0470 08010000 		.4byte	.LFE11-.LFB11
 2362 0474 01       		.uleb128 0x1
 2363 0475 9C       		.byte	0x9c
 2364 0476 BF040000 		.4byte	0x4bf
 2365 047a 12       		.uleb128 0x12
 2366 047b 4A010000 		.4byte	.LASF60
 2367 047f 01       		.byte	0x1
 2368 0480 3E05     		.2byte	0x53e
 2369 0482 6B000000 		.4byte	0x6b
 2370 0486 02       		.uleb128 0x2
 2371 0487 91       		.byte	0x91
 2372 0488 67       		.sleb128 -25
 2373 0489 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 87


 2374 048a 23020000 		.4byte	.LASF64
 2375 048e 01       		.byte	0x1
 2376 048f 3E05     		.2byte	0x53e
 2377 0491 BF040000 		.4byte	0x4bf
 2378 0495 02       		.uleb128 0x2
 2379 0496 91       		.byte	0x91
 2380 0497 60       		.sleb128 -32
 2381 0498 12       		.uleb128 0x12
 2382 0499 E6040000 		.4byte	.LASF65
 2383 049d 01       		.byte	0x1
 2384 049e 3E05     		.2byte	0x53e
 2385 04a0 77000000 		.4byte	0x77
 2386 04a4 02       		.uleb128 0x2
 2387 04a5 91       		.byte	0x91
 2388 04a6 64       		.sleb128 -28
 2389 04a7 19       		.uleb128 0x19
 2390 04a8 96000000 		.4byte	.LBB2
 2391 04ac 28000000 		.4byte	.LBE2-.LBB2
 2392 04b0 17       		.uleb128 0x17
 2393 04b1 6900     		.ascii	"i\000"
 2394 04b3 01       		.byte	0x1
 2395 04b4 5305     		.2byte	0x553
 2396 04b6 77000000 		.4byte	0x77
 2397 04ba 02       		.uleb128 0x2
 2398 04bb 91       		.byte	0x91
 2399 04bc 6E       		.sleb128 -18
 2400 04bd 00       		.byte	0
 2401 04be 00       		.byte	0
 2402 04bf 1A       		.uleb128 0x1a
 2403 04c0 04       		.byte	0x4
 2404 04c1 C5040000 		.4byte	0x4c5
 2405 04c5 1B       		.uleb128 0x1b
 2406 04c6 6B000000 		.4byte	0x6b
 2407 04ca 1C       		.uleb128 0x1c
 2408 04cb 9F040000 		.4byte	.LASF66
 2409 04cf 01       		.byte	0x1
 2410 04d0 7506     		.2byte	0x675
 2411 04d2 77000000 		.4byte	0x77
 2412 04d6 00000000 		.4byte	.LFB12
 2413 04da 8C000000 		.4byte	.LFE12-.LFB12
 2414 04de 01       		.uleb128 0x1
 2415 04df 9C       		.byte	0x9c
 2416 04e0 29050000 		.4byte	0x529
 2417 04e4 12       		.uleb128 0x12
 2418 04e5 4A010000 		.4byte	.LASF60
 2419 04e9 01       		.byte	0x1
 2420 04ea 7506     		.2byte	0x675
 2421 04ec 6B000000 		.4byte	0x6b
 2422 04f0 02       		.uleb128 0x2
 2423 04f1 91       		.byte	0x91
 2424 04f2 6F       		.sleb128 -17
 2425 04f3 12       		.uleb128 0x12
 2426 04f4 23020000 		.4byte	.LASF64
 2427 04f8 01       		.byte	0x1
 2428 04f9 7506     		.2byte	0x675
 2429 04fb 29050000 		.4byte	0x529
 2430 04ff 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 88


 2431 0500 91       		.byte	0x91
 2432 0501 68       		.sleb128 -24
 2433 0502 12       		.uleb128 0x12
 2434 0503 E6040000 		.4byte	.LASF65
 2435 0507 01       		.byte	0x1
 2436 0508 7506     		.2byte	0x675
 2437 050a 77000000 		.4byte	0x77
 2438 050e 02       		.uleb128 0x2
 2439 050f 91       		.byte	0x91
 2440 0510 6C       		.sleb128 -20
 2441 0511 19       		.uleb128 0x19
 2442 0512 44000000 		.4byte	.LBB3
 2443 0516 2A000000 		.4byte	.LBE3-.LBB3
 2444 051a 17       		.uleb128 0x17
 2445 051b 6900     		.ascii	"i\000"
 2446 051d 01       		.byte	0x1
 2447 051e 8206     		.2byte	0x682
 2448 0520 77000000 		.4byte	0x77
 2449 0524 02       		.uleb128 0x2
 2450 0525 91       		.byte	0x91
 2451 0526 76       		.sleb128 -10
 2452 0527 00       		.byte	0
 2453 0528 00       		.byte	0
 2454 0529 1A       		.uleb128 0x1a
 2455 052a 04       		.byte	0x4
 2456 052b 6B000000 		.4byte	0x6b
 2457 052f 18       		.uleb128 0x18
 2458 0530 7D010000 		.4byte	.LASF67
 2459 0534 01       		.byte	0x1
 2460 0535 E408     		.2byte	0x8e4
 2461 0537 00000000 		.4byte	.LFB13
 2462 053b 5C000000 		.4byte	.LFE13-.LFB13
 2463 053f 01       		.uleb128 0x1
 2464 0540 9C       		.byte	0x9c
 2465 0541 55050000 		.4byte	0x555
 2466 0545 12       		.uleb128 0x12
 2467 0546 4A010000 		.4byte	.LASF60
 2468 054a 01       		.byte	0x1
 2469 054b E408     		.2byte	0x8e4
 2470 054d 6B000000 		.4byte	0x6b
 2471 0551 02       		.uleb128 0x2
 2472 0552 91       		.byte	0x91
 2473 0553 77       		.sleb128 -9
 2474 0554 00       		.byte	0
 2475 0555 18       		.uleb128 0x18
 2476 0556 19000000 		.4byte	.LASF68
 2477 055a 01       		.byte	0x1
 2478 055b FC08     		.2byte	0x8fc
 2479 055d 00000000 		.4byte	.LFB14
 2480 0561 34000000 		.4byte	.LFE14-.LFB14
 2481 0565 01       		.uleb128 0x1
 2482 0566 9C       		.byte	0x9c
 2483 0567 7B050000 		.4byte	0x57b
 2484 056b 12       		.uleb128 0x12
 2485 056c 4A010000 		.4byte	.LASF60
 2486 0570 01       		.byte	0x1
 2487 0571 FC08     		.2byte	0x8fc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 89


 2488 0573 6B000000 		.4byte	0x6b
 2489 0577 02       		.uleb128 0x2
 2490 0578 91       		.byte	0x91
 2491 0579 77       		.sleb128 -9
 2492 057a 00       		.byte	0
 2493 057b 18       		.uleb128 0x18
 2494 057c D5040000 		.4byte	.LASF69
 2495 0580 01       		.byte	0x1
 2496 0581 1A09     		.2byte	0x91a
 2497 0583 00000000 		.4byte	.LFB15
 2498 0587 20000000 		.4byte	.LFE15-.LFB15
 2499 058b 01       		.uleb128 0x1
 2500 058c 9C       		.byte	0x9c
 2501 058d A1050000 		.4byte	0x5a1
 2502 0591 12       		.uleb128 0x12
 2503 0592 DF040000 		.4byte	.LASF70
 2504 0596 01       		.byte	0x1
 2505 0597 1A09     		.2byte	0x91a
 2506 0599 6B000000 		.4byte	0x6b
 2507 059d 02       		.uleb128 0x2
 2508 059e 91       		.byte	0x91
 2509 059f 77       		.sleb128 -9
 2510 05a0 00       		.byte	0
 2511 05a1 15       		.uleb128 0x15
 2512 05a2 BD020000 		.4byte	.LASF71
 2513 05a6 01       		.byte	0x1
 2514 05a7 3309     		.2byte	0x933
 2515 05a9 6B000000 		.4byte	0x6b
 2516 05ad 00000000 		.4byte	.LFB16
 2517 05b1 40000000 		.4byte	.LFE16-.LFB16
 2518 05b5 01       		.uleb128 0x1
 2519 05b6 9C       		.byte	0x9c
 2520 05b7 D9050000 		.4byte	0x5d9
 2521 05bb 12       		.uleb128 0x12
 2522 05bc 4A010000 		.4byte	.LASF60
 2523 05c0 01       		.byte	0x1
 2524 05c1 3309     		.2byte	0x933
 2525 05c3 6B000000 		.4byte	0x6b
 2526 05c7 02       		.uleb128 0x2
 2527 05c8 91       		.byte	0x91
 2528 05c9 6F       		.sleb128 -17
 2529 05ca 17       		.uleb128 0x17
 2530 05cb 637200   		.ascii	"cr\000"
 2531 05ce 01       		.byte	0x1
 2532 05cf 3509     		.2byte	0x935
 2533 05d1 6B000000 		.4byte	0x6b
 2534 05d5 02       		.uleb128 0x2
 2535 05d6 91       		.byte	0x91
 2536 05d7 77       		.sleb128 -9
 2537 05d8 00       		.byte	0
 2538 05d9 18       		.uleb128 0x18
 2539 05da A0030000 		.4byte	.LASF72
 2540 05de 01       		.byte	0x1
 2541 05df 5C09     		.2byte	0x95c
 2542 05e1 00000000 		.4byte	.LFB17
 2543 05e5 40000000 		.4byte	.LFE17-.LFB17
 2544 05e9 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 90


 2545 05ea 9C       		.byte	0x9c
 2546 05eb FF050000 		.4byte	0x5ff
 2547 05ef 12       		.uleb128 0x12
 2548 05f0 F7010000 		.4byte	.LASF73
 2549 05f4 01       		.byte	0x1
 2550 05f5 5C09     		.2byte	0x95c
 2551 05f7 6B000000 		.4byte	0x6b
 2552 05fb 02       		.uleb128 0x2
 2553 05fc 91       		.byte	0x91
 2554 05fd 77       		.sleb128 -9
 2555 05fe 00       		.byte	0
 2556 05ff 16       		.uleb128 0x16
 2557 0600 02050000 		.4byte	.LASF75
 2558 0604 01       		.byte	0x1
 2559 0605 7A09     		.2byte	0x97a
 2560 0607 6B000000 		.4byte	0x6b
 2561 060b 00000000 		.4byte	.LFB18
 2562 060f 24000000 		.4byte	.LFE18-.LFB18
 2563 0613 01       		.uleb128 0x1
 2564 0614 9C       		.byte	0x9c
 2565 0615 15       		.uleb128 0x15
 2566 0616 8D010000 		.4byte	.LASF76
 2567 061a 01       		.byte	0x1
 2568 061b 9509     		.2byte	0x995
 2569 061d 6B000000 		.4byte	0x6b
 2570 0621 00000000 		.4byte	.LFB19
 2571 0625 2C000000 		.4byte	.LFE19-.LFB19
 2572 0629 01       		.uleb128 0x1
 2573 062a 9C       		.byte	0x9c
 2574 062b 3F060000 		.4byte	0x63f
 2575 062f 14       		.uleb128 0x14
 2576 0630 94050000 		.4byte	.LASF77
 2577 0634 01       		.byte	0x1
 2578 0635 9709     		.2byte	0x997
 2579 0637 6B000000 		.4byte	0x6b
 2580 063b 02       		.uleb128 0x2
 2581 063c 91       		.byte	0x91
 2582 063d 77       		.sleb128 -9
 2583 063e 00       		.byte	0
 2584 063f 16       		.uleb128 0x16
 2585 0640 AA010000 		.4byte	.LASF78
 2586 0644 01       		.byte	0x1
 2587 0645 AD09     		.2byte	0x9ad
 2588 0647 6B000000 		.4byte	0x6b
 2589 064b 00000000 		.4byte	.LFB20
 2590 064f 1C000000 		.4byte	.LFE20-.LFB20
 2591 0653 01       		.uleb128 0x1
 2592 0654 9C       		.byte	0x9c
 2593 0655 13       		.uleb128 0x13
 2594 0656 39010000 		.4byte	.LASF80
 2595 065a 01       		.byte	0x1
 2596 065b BB09     		.2byte	0x9bb
 2597 065d 00000000 		.4byte	.LFB21
 2598 0661 0C000000 		.4byte	.LFE21-.LFB21
 2599 0665 01       		.uleb128 0x1
 2600 0666 9C       		.byte	0x9c
 2601 0667 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 91


 2602 0668 EE020000 		.4byte	.LASF81
 2603 066c 01       		.byte	0x1
 2604 066d D109     		.2byte	0x9d1
 2605 066f 00000000 		.4byte	.LFB22
 2606 0673 0C000000 		.4byte	.LFE22-.LFB22
 2607 0677 01       		.uleb128 0x1
 2608 0678 9C       		.byte	0x9c
 2609 0679 1D       		.uleb128 0x1d
 2610 067a 93040000 		.4byte	.LASF82
 2611 067e 01       		.byte	0x1
 2612 067f 28       		.byte	0x28
 2613 0680 6B000000 		.4byte	0x6b
 2614 0684 05       		.uleb128 0x5
 2615 0685 03       		.byte	0x3
 2616 0686 00000000 		.4byte	USB_initVar
 2617 068a 1E       		.uleb128 0x1e
 2618 068b B3030000 		.4byte	.LASF83
 2619 068f 03       		.byte	0x3
 2620 0690 D202     		.2byte	0x2d2
 2621 0692 B0000000 		.4byte	0xb0
 2622 0696 1E       		.uleb128 0x1e
 2623 0697 DD000000 		.4byte	.LASF84
 2624 069b 03       		.byte	0x3
 2625 069c D302     		.2byte	0x2d3
 2626 069e B0000000 		.4byte	0xb0
 2627 06a2 1E       		.uleb128 0x1e
 2628 06a3 2A000000 		.4byte	.LASF85
 2629 06a7 03       		.byte	0x3
 2630 06a8 D402     		.2byte	0x2d4
 2631 06aa B0000000 		.4byte	0xb0
 2632 06ae 1E       		.uleb128 0x1e
 2633 06af 7B050000 		.4byte	.LASF86
 2634 06b3 03       		.byte	0x3
 2635 06b4 D502     		.2byte	0x2d5
 2636 06b6 B0000000 		.4byte	0xb0
 2637 06ba 1E       		.uleb128 0x1e
 2638 06bb 3A030000 		.4byte	.LASF87
 2639 06bf 03       		.byte	0x3
 2640 06c0 D602     		.2byte	0x2d6
 2641 06c2 B0000000 		.4byte	0xb0
 2642 06c6 1F       		.uleb128 0x1f
 2643 06c7 0F020000 		.4byte	.LASF88
 2644 06cb 04       		.byte	0x4
 2645 06cc 72       		.byte	0x72
 2646 06cd B0000000 		.4byte	0xb0
 2647 06d1 0A       		.uleb128 0xa
 2648 06d2 B0000000 		.4byte	0xb0
 2649 06d6 E1060000 		.4byte	0x6e1
 2650 06da 0B       		.uleb128 0xb
 2651 06db CD000000 		.4byte	0xcd
 2652 06df 01       		.byte	0x1
 2653 06e0 00       		.byte	0
 2654 06e1 1F       		.uleb128 0x1f
 2655 06e2 11010000 		.4byte	.LASF89
 2656 06e6 04       		.byte	0x4
 2657 06e7 73       		.byte	0x73
 2658 06e8 EC060000 		.4byte	0x6ec
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 92


 2659 06ec 05       		.uleb128 0x5
 2660 06ed D1060000 		.4byte	0x6d1
 2661 06f1 1F       		.uleb128 0x1f
 2662 06f2 FF030000 		.4byte	.LASF90
 2663 06f6 04       		.byte	0x4
 2664 06f7 75       		.byte	0x75
 2665 06f8 B0000000 		.4byte	0xb0
 2666 06fc 0A       		.uleb128 0xa
 2667 06fd 0C070000 		.4byte	0x70c
 2668 0701 0C070000 		.4byte	0x70c
 2669 0705 0B       		.uleb128 0xb
 2670 0706 CD000000 		.4byte	0xcd
 2671 070a 08       		.byte	0x8
 2672 070b 00       		.byte	0
 2673 070c 05       		.uleb128 0x5
 2674 070d 49010000 		.4byte	0x149
 2675 0711 1F       		.uleb128 0x1f
 2676 0712 E1030000 		.4byte	.LASF91
 2677 0716 04       		.byte	0x4
 2678 0717 79       		.byte	0x79
 2679 0718 1C070000 		.4byte	0x71c
 2680 071c 05       		.uleb128 0x5
 2681 071d FC060000 		.4byte	0x6fc
 2682 0721 1F       		.uleb128 0x1f
 2683 0722 3C000000 		.4byte	.LASF92
 2684 0726 04       		.byte	0x4
 2685 0727 9B       		.byte	0x9b
 2686 0728 B0000000 		.4byte	0xb0
 2687 072c 00       		.byte	0
 2688              		.section	.debug_abbrev,"",%progbits
 2689              	.Ldebug_abbrev0:
 2690 0000 01       		.uleb128 0x1
 2691 0001 11       		.uleb128 0x11
 2692 0002 01       		.byte	0x1
 2693 0003 25       		.uleb128 0x25
 2694 0004 0E       		.uleb128 0xe
 2695 0005 13       		.uleb128 0x13
 2696 0006 0B       		.uleb128 0xb
 2697 0007 03       		.uleb128 0x3
 2698 0008 0E       		.uleb128 0xe
 2699 0009 1B       		.uleb128 0x1b
 2700 000a 0E       		.uleb128 0xe
 2701 000b 55       		.uleb128 0x55
 2702 000c 17       		.uleb128 0x17
 2703 000d 11       		.uleb128 0x11
 2704 000e 01       		.uleb128 0x1
 2705 000f 10       		.uleb128 0x10
 2706 0010 17       		.uleb128 0x17
 2707 0011 00       		.byte	0
 2708 0012 00       		.byte	0
 2709 0013 02       		.uleb128 0x2
 2710 0014 24       		.uleb128 0x24
 2711 0015 00       		.byte	0
 2712 0016 0B       		.uleb128 0xb
 2713 0017 0B       		.uleb128 0xb
 2714 0018 3E       		.uleb128 0x3e
 2715 0019 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 93


 2716 001a 03       		.uleb128 0x3
 2717 001b 0E       		.uleb128 0xe
 2718 001c 00       		.byte	0
 2719 001d 00       		.byte	0
 2720 001e 03       		.uleb128 0x3
 2721 001f 24       		.uleb128 0x24
 2722 0020 00       		.byte	0
 2723 0021 0B       		.uleb128 0xb
 2724 0022 0B       		.uleb128 0xb
 2725 0023 3E       		.uleb128 0x3e
 2726 0024 0B       		.uleb128 0xb
 2727 0025 03       		.uleb128 0x3
 2728 0026 08       		.uleb128 0x8
 2729 0027 00       		.byte	0
 2730 0028 00       		.byte	0
 2731 0029 04       		.uleb128 0x4
 2732 002a 16       		.uleb128 0x16
 2733 002b 00       		.byte	0
 2734 002c 03       		.uleb128 0x3
 2735 002d 0E       		.uleb128 0xe
 2736 002e 3A       		.uleb128 0x3a
 2737 002f 0B       		.uleb128 0xb
 2738 0030 3B       		.uleb128 0x3b
 2739 0031 05       		.uleb128 0x5
 2740 0032 49       		.uleb128 0x49
 2741 0033 13       		.uleb128 0x13
 2742 0034 00       		.byte	0
 2743 0035 00       		.byte	0
 2744 0036 05       		.uleb128 0x5
 2745 0037 35       		.uleb128 0x35
 2746 0038 00       		.byte	0
 2747 0039 49       		.uleb128 0x49
 2748 003a 13       		.uleb128 0x13
 2749 003b 00       		.byte	0
 2750 003c 00       		.byte	0
 2751 003d 06       		.uleb128 0x6
 2752 003e 13       		.uleb128 0x13
 2753 003f 01       		.byte	0x1
 2754 0040 0B       		.uleb128 0xb
 2755 0041 0B       		.uleb128 0xb
 2756 0042 3A       		.uleb128 0x3a
 2757 0043 0B       		.uleb128 0xb
 2758 0044 3B       		.uleb128 0x3b
 2759 0045 0B       		.uleb128 0xb
 2760 0046 01       		.uleb128 0x1
 2761 0047 13       		.uleb128 0x13
 2762 0048 00       		.byte	0
 2763 0049 00       		.byte	0
 2764 004a 07       		.uleb128 0x7
 2765 004b 0D       		.uleb128 0xd
 2766 004c 00       		.byte	0
 2767 004d 03       		.uleb128 0x3
 2768 004e 0E       		.uleb128 0xe
 2769 004f 3A       		.uleb128 0x3a
 2770 0050 0B       		.uleb128 0xb
 2771 0051 3B       		.uleb128 0x3b
 2772 0052 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 94


 2773 0053 49       		.uleb128 0x49
 2774 0054 13       		.uleb128 0x13
 2775 0055 38       		.uleb128 0x38
 2776 0056 0B       		.uleb128 0xb
 2777 0057 00       		.byte	0
 2778 0058 00       		.byte	0
 2779 0059 08       		.uleb128 0x8
 2780 005a 16       		.uleb128 0x16
 2781 005b 00       		.byte	0
 2782 005c 03       		.uleb128 0x3
 2783 005d 0E       		.uleb128 0xe
 2784 005e 3A       		.uleb128 0x3a
 2785 005f 0B       		.uleb128 0xb
 2786 0060 3B       		.uleb128 0x3b
 2787 0061 0B       		.uleb128 0xb
 2788 0062 49       		.uleb128 0x49
 2789 0063 13       		.uleb128 0x13
 2790 0064 00       		.byte	0
 2791 0065 00       		.byte	0
 2792 0066 09       		.uleb128 0x9
 2793 0067 0D       		.uleb128 0xd
 2794 0068 00       		.byte	0
 2795 0069 03       		.uleb128 0x3
 2796 006a 08       		.uleb128 0x8
 2797 006b 3A       		.uleb128 0x3a
 2798 006c 0B       		.uleb128 0xb
 2799 006d 3B       		.uleb128 0x3b
 2800 006e 0B       		.uleb128 0xb
 2801 006f 49       		.uleb128 0x49
 2802 0070 13       		.uleb128 0x13
 2803 0071 38       		.uleb128 0x38
 2804 0072 0B       		.uleb128 0xb
 2805 0073 00       		.byte	0
 2806 0074 00       		.byte	0
 2807 0075 0A       		.uleb128 0xa
 2808 0076 01       		.uleb128 0x1
 2809 0077 01       		.byte	0x1
 2810 0078 49       		.uleb128 0x49
 2811 0079 13       		.uleb128 0x13
 2812 007a 01       		.uleb128 0x1
 2813 007b 13       		.uleb128 0x13
 2814 007c 00       		.byte	0
 2815 007d 00       		.byte	0
 2816 007e 0B       		.uleb128 0xb
 2817 007f 21       		.uleb128 0x21
 2818 0080 00       		.byte	0
 2819 0081 49       		.uleb128 0x49
 2820 0082 13       		.uleb128 0x13
 2821 0083 2F       		.uleb128 0x2f
 2822 0084 0B       		.uleb128 0xb
 2823 0085 00       		.byte	0
 2824 0086 00       		.byte	0
 2825 0087 0C       		.uleb128 0xc
 2826 0088 13       		.uleb128 0x13
 2827 0089 01       		.byte	0x1
 2828 008a 0B       		.uleb128 0xb
 2829 008b 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 95


 2830 008c 3A       		.uleb128 0x3a
 2831 008d 0B       		.uleb128 0xb
 2832 008e 3B       		.uleb128 0x3b
 2833 008f 05       		.uleb128 0x5
 2834 0090 01       		.uleb128 0x1
 2835 0091 13       		.uleb128 0x13
 2836 0092 00       		.byte	0
 2837 0093 00       		.byte	0
 2838 0094 0D       		.uleb128 0xd
 2839 0095 0D       		.uleb128 0xd
 2840 0096 00       		.byte	0
 2841 0097 03       		.uleb128 0x3
 2842 0098 0E       		.uleb128 0xe
 2843 0099 3A       		.uleb128 0x3a
 2844 009a 0B       		.uleb128 0xb
 2845 009b 3B       		.uleb128 0x3b
 2846 009c 05       		.uleb128 0x5
 2847 009d 49       		.uleb128 0x49
 2848 009e 13       		.uleb128 0x13
 2849 009f 38       		.uleb128 0x38
 2850 00a0 0B       		.uleb128 0xb
 2851 00a1 00       		.byte	0
 2852 00a2 00       		.byte	0
 2853 00a3 0E       		.uleb128 0xe
 2854 00a4 2E       		.uleb128 0x2e
 2855 00a5 01       		.byte	0x1
 2856 00a6 3F       		.uleb128 0x3f
 2857 00a7 19       		.uleb128 0x19
 2858 00a8 03       		.uleb128 0x3
 2859 00a9 0E       		.uleb128 0xe
 2860 00aa 3A       		.uleb128 0x3a
 2861 00ab 0B       		.uleb128 0xb
 2862 00ac 3B       		.uleb128 0x3b
 2863 00ad 0B       		.uleb128 0xb
 2864 00ae 27       		.uleb128 0x27
 2865 00af 19       		.uleb128 0x19
 2866 00b0 11       		.uleb128 0x11
 2867 00b1 01       		.uleb128 0x1
 2868 00b2 12       		.uleb128 0x12
 2869 00b3 06       		.uleb128 0x6
 2870 00b4 40       		.uleb128 0x40
 2871 00b5 18       		.uleb128 0x18
 2872 00b6 9642     		.uleb128 0x2116
 2873 00b8 19       		.uleb128 0x19
 2874 00b9 01       		.uleb128 0x1
 2875 00ba 13       		.uleb128 0x13
 2876 00bb 00       		.byte	0
 2877 00bc 00       		.byte	0
 2878 00bd 0F       		.uleb128 0xf
 2879 00be 05       		.uleb128 0x5
 2880 00bf 00       		.byte	0
 2881 00c0 03       		.uleb128 0x3
 2882 00c1 0E       		.uleb128 0xe
 2883 00c2 3A       		.uleb128 0x3a
 2884 00c3 0B       		.uleb128 0xb
 2885 00c4 3B       		.uleb128 0x3b
 2886 00c5 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 96


 2887 00c6 49       		.uleb128 0x49
 2888 00c7 13       		.uleb128 0x13
 2889 00c8 02       		.uleb128 0x2
 2890 00c9 18       		.uleb128 0x18
 2891 00ca 00       		.byte	0
 2892 00cb 00       		.byte	0
 2893 00cc 10       		.uleb128 0x10
 2894 00cd 34       		.uleb128 0x34
 2895 00ce 00       		.byte	0
 2896 00cf 03       		.uleb128 0x3
 2897 00d0 0E       		.uleb128 0xe
 2898 00d1 3A       		.uleb128 0x3a
 2899 00d2 0B       		.uleb128 0xb
 2900 00d3 3B       		.uleb128 0x3b
 2901 00d4 0B       		.uleb128 0xb
 2902 00d5 49       		.uleb128 0x49
 2903 00d6 13       		.uleb128 0x13
 2904 00d7 02       		.uleb128 0x2
 2905 00d8 18       		.uleb128 0x18
 2906 00d9 00       		.byte	0
 2907 00da 00       		.byte	0
 2908 00db 11       		.uleb128 0x11
 2909 00dc 2E       		.uleb128 0x2e
 2910 00dd 01       		.byte	0x1
 2911 00de 3F       		.uleb128 0x3f
 2912 00df 19       		.uleb128 0x19
 2913 00e0 03       		.uleb128 0x3
 2914 00e1 0E       		.uleb128 0xe
 2915 00e2 3A       		.uleb128 0x3a
 2916 00e3 0B       		.uleb128 0xb
 2917 00e4 3B       		.uleb128 0x3b
 2918 00e5 05       		.uleb128 0x5
 2919 00e6 27       		.uleb128 0x27
 2920 00e7 19       		.uleb128 0x19
 2921 00e8 11       		.uleb128 0x11
 2922 00e9 01       		.uleb128 0x1
 2923 00ea 12       		.uleb128 0x12
 2924 00eb 06       		.uleb128 0x6
 2925 00ec 40       		.uleb128 0x40
 2926 00ed 18       		.uleb128 0x18
 2927 00ee 9642     		.uleb128 0x2116
 2928 00f0 19       		.uleb128 0x19
 2929 00f1 01       		.uleb128 0x1
 2930 00f2 13       		.uleb128 0x13
 2931 00f3 00       		.byte	0
 2932 00f4 00       		.byte	0
 2933 00f5 12       		.uleb128 0x12
 2934 00f6 05       		.uleb128 0x5
 2935 00f7 00       		.byte	0
 2936 00f8 03       		.uleb128 0x3
 2937 00f9 0E       		.uleb128 0xe
 2938 00fa 3A       		.uleb128 0x3a
 2939 00fb 0B       		.uleb128 0xb
 2940 00fc 3B       		.uleb128 0x3b
 2941 00fd 05       		.uleb128 0x5
 2942 00fe 49       		.uleb128 0x49
 2943 00ff 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 97


 2944 0100 02       		.uleb128 0x2
 2945 0101 18       		.uleb128 0x18
 2946 0102 00       		.byte	0
 2947 0103 00       		.byte	0
 2948 0104 13       		.uleb128 0x13
 2949 0105 2E       		.uleb128 0x2e
 2950 0106 00       		.byte	0
 2951 0107 3F       		.uleb128 0x3f
 2952 0108 19       		.uleb128 0x19
 2953 0109 03       		.uleb128 0x3
 2954 010a 0E       		.uleb128 0xe
 2955 010b 3A       		.uleb128 0x3a
 2956 010c 0B       		.uleb128 0xb
 2957 010d 3B       		.uleb128 0x3b
 2958 010e 05       		.uleb128 0x5
 2959 010f 27       		.uleb128 0x27
 2960 0110 19       		.uleb128 0x19
 2961 0111 11       		.uleb128 0x11
 2962 0112 01       		.uleb128 0x1
 2963 0113 12       		.uleb128 0x12
 2964 0114 06       		.uleb128 0x6
 2965 0115 40       		.uleb128 0x40
 2966 0116 18       		.uleb128 0x18
 2967 0117 9742     		.uleb128 0x2117
 2968 0119 19       		.uleb128 0x19
 2969 011a 00       		.byte	0
 2970 011b 00       		.byte	0
 2971 011c 14       		.uleb128 0x14
 2972 011d 34       		.uleb128 0x34
 2973 011e 00       		.byte	0
 2974 011f 03       		.uleb128 0x3
 2975 0120 0E       		.uleb128 0xe
 2976 0121 3A       		.uleb128 0x3a
 2977 0122 0B       		.uleb128 0xb
 2978 0123 3B       		.uleb128 0x3b
 2979 0124 05       		.uleb128 0x5
 2980 0125 49       		.uleb128 0x49
 2981 0126 13       		.uleb128 0x13
 2982 0127 02       		.uleb128 0x2
 2983 0128 18       		.uleb128 0x18
 2984 0129 00       		.byte	0
 2985 012a 00       		.byte	0
 2986 012b 15       		.uleb128 0x15
 2987 012c 2E       		.uleb128 0x2e
 2988 012d 01       		.byte	0x1
 2989 012e 3F       		.uleb128 0x3f
 2990 012f 19       		.uleb128 0x19
 2991 0130 03       		.uleb128 0x3
 2992 0131 0E       		.uleb128 0xe
 2993 0132 3A       		.uleb128 0x3a
 2994 0133 0B       		.uleb128 0xb
 2995 0134 3B       		.uleb128 0x3b
 2996 0135 05       		.uleb128 0x5
 2997 0136 27       		.uleb128 0x27
 2998 0137 19       		.uleb128 0x19
 2999 0138 49       		.uleb128 0x49
 3000 0139 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 98


 3001 013a 11       		.uleb128 0x11
 3002 013b 01       		.uleb128 0x1
 3003 013c 12       		.uleb128 0x12
 3004 013d 06       		.uleb128 0x6
 3005 013e 40       		.uleb128 0x40
 3006 013f 18       		.uleb128 0x18
 3007 0140 9742     		.uleb128 0x2117
 3008 0142 19       		.uleb128 0x19
 3009 0143 01       		.uleb128 0x1
 3010 0144 13       		.uleb128 0x13
 3011 0145 00       		.byte	0
 3012 0146 00       		.byte	0
 3013 0147 16       		.uleb128 0x16
 3014 0148 2E       		.uleb128 0x2e
 3015 0149 00       		.byte	0
 3016 014a 3F       		.uleb128 0x3f
 3017 014b 19       		.uleb128 0x19
 3018 014c 03       		.uleb128 0x3
 3019 014d 0E       		.uleb128 0xe
 3020 014e 3A       		.uleb128 0x3a
 3021 014f 0B       		.uleb128 0xb
 3022 0150 3B       		.uleb128 0x3b
 3023 0151 05       		.uleb128 0x5
 3024 0152 27       		.uleb128 0x27
 3025 0153 19       		.uleb128 0x19
 3026 0154 49       		.uleb128 0x49
 3027 0155 13       		.uleb128 0x13
 3028 0156 11       		.uleb128 0x11
 3029 0157 01       		.uleb128 0x1
 3030 0158 12       		.uleb128 0x12
 3031 0159 06       		.uleb128 0x6
 3032 015a 40       		.uleb128 0x40
 3033 015b 18       		.uleb128 0x18
 3034 015c 9742     		.uleb128 0x2117
 3035 015e 19       		.uleb128 0x19
 3036 015f 00       		.byte	0
 3037 0160 00       		.byte	0
 3038 0161 17       		.uleb128 0x17
 3039 0162 34       		.uleb128 0x34
 3040 0163 00       		.byte	0
 3041 0164 03       		.uleb128 0x3
 3042 0165 08       		.uleb128 0x8
 3043 0166 3A       		.uleb128 0x3a
 3044 0167 0B       		.uleb128 0xb
 3045 0168 3B       		.uleb128 0x3b
 3046 0169 05       		.uleb128 0x5
 3047 016a 49       		.uleb128 0x49
 3048 016b 13       		.uleb128 0x13
 3049 016c 02       		.uleb128 0x2
 3050 016d 18       		.uleb128 0x18
 3051 016e 00       		.byte	0
 3052 016f 00       		.byte	0
 3053 0170 18       		.uleb128 0x18
 3054 0171 2E       		.uleb128 0x2e
 3055 0172 01       		.byte	0x1
 3056 0173 3F       		.uleb128 0x3f
 3057 0174 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 99


 3058 0175 03       		.uleb128 0x3
 3059 0176 0E       		.uleb128 0xe
 3060 0177 3A       		.uleb128 0x3a
 3061 0178 0B       		.uleb128 0xb
 3062 0179 3B       		.uleb128 0x3b
 3063 017a 05       		.uleb128 0x5
 3064 017b 27       		.uleb128 0x27
 3065 017c 19       		.uleb128 0x19
 3066 017d 11       		.uleb128 0x11
 3067 017e 01       		.uleb128 0x1
 3068 017f 12       		.uleb128 0x12
 3069 0180 06       		.uleb128 0x6
 3070 0181 40       		.uleb128 0x40
 3071 0182 18       		.uleb128 0x18
 3072 0183 9742     		.uleb128 0x2117
 3073 0185 19       		.uleb128 0x19
 3074 0186 01       		.uleb128 0x1
 3075 0187 13       		.uleb128 0x13
 3076 0188 00       		.byte	0
 3077 0189 00       		.byte	0
 3078 018a 19       		.uleb128 0x19
 3079 018b 0B       		.uleb128 0xb
 3080 018c 01       		.byte	0x1
 3081 018d 11       		.uleb128 0x11
 3082 018e 01       		.uleb128 0x1
 3083 018f 12       		.uleb128 0x12
 3084 0190 06       		.uleb128 0x6
 3085 0191 00       		.byte	0
 3086 0192 00       		.byte	0
 3087 0193 1A       		.uleb128 0x1a
 3088 0194 0F       		.uleb128 0xf
 3089 0195 00       		.byte	0
 3090 0196 0B       		.uleb128 0xb
 3091 0197 0B       		.uleb128 0xb
 3092 0198 49       		.uleb128 0x49
 3093 0199 13       		.uleb128 0x13
 3094 019a 00       		.byte	0
 3095 019b 00       		.byte	0
 3096 019c 1B       		.uleb128 0x1b
 3097 019d 26       		.uleb128 0x26
 3098 019e 00       		.byte	0
 3099 019f 49       		.uleb128 0x49
 3100 01a0 13       		.uleb128 0x13
 3101 01a1 00       		.byte	0
 3102 01a2 00       		.byte	0
 3103 01a3 1C       		.uleb128 0x1c
 3104 01a4 2E       		.uleb128 0x2e
 3105 01a5 01       		.byte	0x1
 3106 01a6 3F       		.uleb128 0x3f
 3107 01a7 19       		.uleb128 0x19
 3108 01a8 03       		.uleb128 0x3
 3109 01a9 0E       		.uleb128 0xe
 3110 01aa 3A       		.uleb128 0x3a
 3111 01ab 0B       		.uleb128 0xb
 3112 01ac 3B       		.uleb128 0x3b
 3113 01ad 05       		.uleb128 0x5
 3114 01ae 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 100


 3115 01af 19       		.uleb128 0x19
 3116 01b0 49       		.uleb128 0x49
 3117 01b1 13       		.uleb128 0x13
 3118 01b2 11       		.uleb128 0x11
 3119 01b3 01       		.uleb128 0x1
 3120 01b4 12       		.uleb128 0x12
 3121 01b5 06       		.uleb128 0x6
 3122 01b6 40       		.uleb128 0x40
 3123 01b7 18       		.uleb128 0x18
 3124 01b8 9642     		.uleb128 0x2116
 3125 01ba 19       		.uleb128 0x19
 3126 01bb 01       		.uleb128 0x1
 3127 01bc 13       		.uleb128 0x13
 3128 01bd 00       		.byte	0
 3129 01be 00       		.byte	0
 3130 01bf 1D       		.uleb128 0x1d
 3131 01c0 34       		.uleb128 0x34
 3132 01c1 00       		.byte	0
 3133 01c2 03       		.uleb128 0x3
 3134 01c3 0E       		.uleb128 0xe
 3135 01c4 3A       		.uleb128 0x3a
 3136 01c5 0B       		.uleb128 0xb
 3137 01c6 3B       		.uleb128 0x3b
 3138 01c7 0B       		.uleb128 0xb
 3139 01c8 49       		.uleb128 0x49
 3140 01c9 13       		.uleb128 0x13
 3141 01ca 3F       		.uleb128 0x3f
 3142 01cb 19       		.uleb128 0x19
 3143 01cc 02       		.uleb128 0x2
 3144 01cd 18       		.uleb128 0x18
 3145 01ce 00       		.byte	0
 3146 01cf 00       		.byte	0
 3147 01d0 1E       		.uleb128 0x1e
 3148 01d1 34       		.uleb128 0x34
 3149 01d2 00       		.byte	0
 3150 01d3 03       		.uleb128 0x3
 3151 01d4 0E       		.uleb128 0xe
 3152 01d5 3A       		.uleb128 0x3a
 3153 01d6 0B       		.uleb128 0xb
 3154 01d7 3B       		.uleb128 0x3b
 3155 01d8 05       		.uleb128 0x5
 3156 01d9 49       		.uleb128 0x49
 3157 01da 13       		.uleb128 0x13
 3158 01db 3F       		.uleb128 0x3f
 3159 01dc 19       		.uleb128 0x19
 3160 01dd 3C       		.uleb128 0x3c
 3161 01de 19       		.uleb128 0x19
 3162 01df 00       		.byte	0
 3163 01e0 00       		.byte	0
 3164 01e1 1F       		.uleb128 0x1f
 3165 01e2 34       		.uleb128 0x34
 3166 01e3 00       		.byte	0
 3167 01e4 03       		.uleb128 0x3
 3168 01e5 0E       		.uleb128 0xe
 3169 01e6 3A       		.uleb128 0x3a
 3170 01e7 0B       		.uleb128 0xb
 3171 01e8 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 101


 3172 01e9 0B       		.uleb128 0xb
 3173 01ea 49       		.uleb128 0x49
 3174 01eb 13       		.uleb128 0x13
 3175 01ec 3F       		.uleb128 0x3f
 3176 01ed 19       		.uleb128 0x19
 3177 01ee 3C       		.uleb128 0x3c
 3178 01ef 19       		.uleb128 0x19
 3179 01f0 00       		.byte	0
 3180 01f1 00       		.byte	0
 3181 01f2 00       		.byte	0
 3182              		.section	.debug_aranges,"",%progbits
 3183 0000 CC000000 		.4byte	0xcc
 3184 0004 0200     		.2byte	0x2
 3185 0006 00000000 		.4byte	.Ldebug_info0
 3186 000a 04       		.byte	0x4
 3187 000b 00       		.byte	0
 3188 000c 0000     		.2byte	0
 3189 000e 0000     		.2byte	0
 3190 0010 00000000 		.4byte	.LFB0
 3191 0014 3C000000 		.4byte	.LFE0-.LFB0
 3192 0018 00000000 		.4byte	.LFB1
 3193 001c 7C010000 		.4byte	.LFE1-.LFB1
 3194 0020 00000000 		.4byte	.LFB2
 3195 0024 F4000000 		.4byte	.LFE2-.LFB2
 3196 0028 00000000 		.4byte	.LFB3
 3197 002c 68000000 		.4byte	.LFE3-.LFB3
 3198 0030 00000000 		.4byte	.LFB4
 3199 0034 00010000 		.4byte	.LFE4-.LFB4
 3200 0038 00000000 		.4byte	.LFB5
 3201 003c 38000000 		.4byte	.LFE5-.LFB5
 3202 0040 00000000 		.4byte	.LFB6
 3203 0044 18000000 		.4byte	.LFE6-.LFB6
 3204 0048 00000000 		.4byte	.LFB7
 3205 004c 30000000 		.4byte	.LFE7-.LFB7
 3206 0050 00000000 		.4byte	.LFB8
 3207 0054 20000000 		.4byte	.LFE8-.LFB8
 3208 0058 00000000 		.4byte	.LFB9
 3209 005c 2C000000 		.4byte	.LFE9-.LFB9
 3210 0060 00000000 		.4byte	.LFB10
 3211 0064 60000000 		.4byte	.LFE10-.LFB10
 3212 0068 00000000 		.4byte	.LFB11
 3213 006c 08010000 		.4byte	.LFE11-.LFB11
 3214 0070 00000000 		.4byte	.LFB12
 3215 0074 8C000000 		.4byte	.LFE12-.LFB12
 3216 0078 00000000 		.4byte	.LFB13
 3217 007c 5C000000 		.4byte	.LFE13-.LFB13
 3218 0080 00000000 		.4byte	.LFB14
 3219 0084 34000000 		.4byte	.LFE14-.LFB14
 3220 0088 00000000 		.4byte	.LFB15
 3221 008c 20000000 		.4byte	.LFE15-.LFB15
 3222 0090 00000000 		.4byte	.LFB16
 3223 0094 40000000 		.4byte	.LFE16-.LFB16
 3224 0098 00000000 		.4byte	.LFB17
 3225 009c 40000000 		.4byte	.LFE17-.LFB17
 3226 00a0 00000000 		.4byte	.LFB18
 3227 00a4 24000000 		.4byte	.LFE18-.LFB18
 3228 00a8 00000000 		.4byte	.LFB19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 102


 3229 00ac 2C000000 		.4byte	.LFE19-.LFB19
 3230 00b0 00000000 		.4byte	.LFB20
 3231 00b4 1C000000 		.4byte	.LFE20-.LFB20
 3232 00b8 00000000 		.4byte	.LFB21
 3233 00bc 0C000000 		.4byte	.LFE21-.LFB21
 3234 00c0 00000000 		.4byte	.LFB22
 3235 00c4 0C000000 		.4byte	.LFE22-.LFB22
 3236 00c8 00000000 		.4byte	0
 3237 00cc 00000000 		.4byte	0
 3238              		.section	.debug_ranges,"",%progbits
 3239              	.Ldebug_ranges0:
 3240 0000 00000000 		.4byte	.LFB0
 3241 0004 3C000000 		.4byte	.LFE0
 3242 0008 00000000 		.4byte	.LFB1
 3243 000c 7C010000 		.4byte	.LFE1
 3244 0010 00000000 		.4byte	.LFB2
 3245 0014 F4000000 		.4byte	.LFE2
 3246 0018 00000000 		.4byte	.LFB3
 3247 001c 68000000 		.4byte	.LFE3
 3248 0020 00000000 		.4byte	.LFB4
 3249 0024 00010000 		.4byte	.LFE4
 3250 0028 00000000 		.4byte	.LFB5
 3251 002c 38000000 		.4byte	.LFE5
 3252 0030 00000000 		.4byte	.LFB6
 3253 0034 18000000 		.4byte	.LFE6
 3254 0038 00000000 		.4byte	.LFB7
 3255 003c 30000000 		.4byte	.LFE7
 3256 0040 00000000 		.4byte	.LFB8
 3257 0044 20000000 		.4byte	.LFE8
 3258 0048 00000000 		.4byte	.LFB9
 3259 004c 2C000000 		.4byte	.LFE9
 3260 0050 00000000 		.4byte	.LFB10
 3261 0054 60000000 		.4byte	.LFE10
 3262 0058 00000000 		.4byte	.LFB11
 3263 005c 08010000 		.4byte	.LFE11
 3264 0060 00000000 		.4byte	.LFB12
 3265 0064 8C000000 		.4byte	.LFE12
 3266 0068 00000000 		.4byte	.LFB13
 3267 006c 5C000000 		.4byte	.LFE13
 3268 0070 00000000 		.4byte	.LFB14
 3269 0074 34000000 		.4byte	.LFE14
 3270 0078 00000000 		.4byte	.LFB15
 3271 007c 20000000 		.4byte	.LFE15
 3272 0080 00000000 		.4byte	.LFB16
 3273 0084 40000000 		.4byte	.LFE16
 3274 0088 00000000 		.4byte	.LFB17
 3275 008c 40000000 		.4byte	.LFE17
 3276 0090 00000000 		.4byte	.LFB18
 3277 0094 24000000 		.4byte	.LFE18
 3278 0098 00000000 		.4byte	.LFB19
 3279 009c 2C000000 		.4byte	.LFE19
 3280 00a0 00000000 		.4byte	.LFB20
 3281 00a4 1C000000 		.4byte	.LFE20
 3282 00a8 00000000 		.4byte	.LFB21
 3283 00ac 0C000000 		.4byte	.LFE21
 3284 00b0 00000000 		.4byte	.LFB22
 3285 00b4 0C000000 		.4byte	.LFE22
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 103


 3286 00b8 00000000 		.4byte	0
 3287 00bc 00000000 		.4byte	0
 3288              		.section	.debug_line,"",%progbits
 3289              	.Ldebug_line0:
 3290 0000 05030000 		.section	.debug_str,"MS",%progbits,1
 3290      02005600 
 3290      00000201 
 3290      FB0E0D00 
 3290      01010101 
 3291              	.LASF10:
 3292 0000 75696E74 		.ascii	"uint16\000"
 3292      313600
 3293              	.LASF51:
 3294 0007 5553425F 		.ascii	"USB_InitComponent\000"
 3294      496E6974 
 3294      436F6D70 
 3294      6F6E656E 
 3294      7400
 3295              	.LASF68:
 3296 0019 5553425F 		.ascii	"USB_DisableOutEP\000"
 3296      44697361 
 3296      626C654F 
 3296      75744550 
 3296      00
 3297              	.LASF85:
 3298 002a 5553425F 		.ascii	"USB_configuration\000"
 3298      636F6E66 
 3298      69677572 
 3298      6174696F 
 3298      6E00
 3299              	.LASF92:
 3300 003c 5553425F 		.ascii	"USB_lastPacketSize\000"
 3300      6C617374 
 3300      5061636B 
 3300      65745369 
 3300      7A6500
 3301              	.LASF93:
 3302 004f 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3302      43313120 
 3302      352E342E 
 3302      31203230 
 3302      31363036 
 3303 0082 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3303      20726576 
 3303      6973696F 
 3303      6E203233 
 3303      37373135 
 3304 00b5 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3304      66756E63 
 3304      74696F6E 
 3304      2D736563 
 3304      74696F6E 
 3305              	.LASF84:
 3306 00dd 5553425F 		.ascii	"USB_transferState\000"
 3306      7472616E 
 3306      73666572 
 3306      53746174 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 104


 3306      6500
 3307              	.LASF7:
 3308 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 3308      206C6F6E 
 3308      6720756E 
 3308      7369676E 
 3308      65642069 
 3309              	.LASF23:
 3310 0106 61646472 		.ascii	"addr\000"
 3310      00
 3311              	.LASF33:
 3312 010b 65704366 		.ascii	"epCfg\000"
 3312      6700
 3313              	.LASF89:
 3314 0111 5553425F 		.ascii	"USB_interfaceSetting\000"
 3314      696E7465 
 3314      72666163 
 3314      65536574 
 3314      74696E67 
 3315              	.LASF28:
 3316 0126 545F5553 		.ascii	"T_USB_EP_CTL_BLOCK\000"
 3316      425F4550 
 3316      5F43544C 
 3316      5F424C4F 
 3316      434B00
 3317              	.LASF80:
 3318 0139 5553425F 		.ascii	"USB_EnableSofInt\000"
 3318      456E6162 
 3318      6C65536F 
 3318      66496E74 
 3318      00
 3319              	.LASF60:
 3320 014a 65704E75 		.ascii	"epNumber\000"
 3320      6D626572 
 3320      00
 3321              	.LASF52:
 3322 0153 5553425F 		.ascii	"USB_Stop\000"
 3322      53746F70 
 3322      00
 3323              	.LASF47:
 3324 015c 64657669 		.ascii	"device\000"
 3324      636500
 3325              	.LASF6:
 3326 0163 6C6F6E67 		.ascii	"long long int\000"
 3326      206C6F6E 
 3326      6720696E 
 3326      7400
 3327              	.LASF0:
 3328 0171 7369676E 		.ascii	"signed char\000"
 3328      65642063 
 3328      68617200 
 3329              	.LASF67:
 3330 017d 5553425F 		.ascii	"USB_EnableOutEP\000"
 3330      456E6162 
 3330      6C654F75 
 3330      74455000 
 3331              	.LASF76:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 105


 3332 018d 5553425F 		.ascii	"USB_RWUEnabled\000"
 3332      52575545 
 3332      6E61626C 
 3332      656400
 3333              	.LASF62:
 3334 019c 636E7472 		.ascii	"cntr\000"
 3334      00
 3335              	.LASF4:
 3336 01a1 6C6F6E67 		.ascii	"long int\000"
 3336      20696E74 
 3336      00
 3337              	.LASF78:
 3338 01aa 5553425F 		.ascii	"USB_GetDeviceAddress\000"
 3338      47657444 
 3338      65766963 
 3338      65416464 
 3338      72657373 
 3339              	.LASF94:
 3340 01bf 47656E65 		.ascii	"Generated_Source\\PSoC5\\USB.c\000"
 3340      72617465 
 3340      645F536F 
 3340      75726365 
 3340      5C50536F 
 3341              	.LASF9:
 3342 01dc 75696E74 		.ascii	"uint8\000"
 3342      3800
 3343              	.LASF22:
 3344 01e2 6570546F 		.ascii	"epToggle\000"
 3344      67676C65 
 3344      00
 3345              	.LASF37:
 3346 01eb 72775761 		.ascii	"rwWa\000"
 3346      00
 3347              	.LASF13:
 3348 01f0 646F7562 		.ascii	"double\000"
 3348      6C6500
 3349              	.LASF73:
 3350 01f7 706F7765 		.ascii	"powerStatus\000"
 3350      72537461 
 3350      74757300 
 3351              	.LASF35:
 3352 0203 65705372 		.ascii	"epSr\000"
 3352      00
 3353              	.LASF11:
 3354 0208 75696E74 		.ascii	"uint32\000"
 3354      333200
 3355              	.LASF88:
 3356 020f 5553425F 		.ascii	"USB_interfaceNumber\000"
 3356      696E7465 
 3356      72666163 
 3356      654E756D 
 3356      62657200 
 3357              	.LASF64:
 3358 0223 70446174 		.ascii	"pData\000"
 3358      6100
 3359              	.LASF43:
 3360 0229 73696545 		.ascii	"sieEp\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 106


 3360      7000
 3361              	.LASF95:
 3362 022f 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\dev\\Electrosteel_embedded\\"
 3362      73657273 
 3362      5C4A6566 
 3362      66536E79 
 3362      6465725C 
 3363 025d 50534F43 		.ascii	"PSOC5_electrosteel_stringsensors_newpcb_brain\\CE21"
 3363      355F656C 
 3363      65637472 
 3363      6F737465 
 3363      656C5F73 
 3364 028f 30353134 		.ascii	"0514_PSOC3_5_Thermistor.cydsn\000"
 3364      5F50534F 
 3364      43335F35 
 3364      5F546865 
 3364      726D6973 
 3365              	.LASF24:
 3366 02ad 65704D6F 		.ascii	"epMode\000"
 3366      646500
 3367              	.LASF36:
 3368 02b4 72657365 		.ascii	"reserved\000"
 3368      72766564 
 3368      00
 3369              	.LASF71:
 3370 02bd 5553425F 		.ascii	"USB_GetEPAckState\000"
 3370      47657445 
 3370      5041636B 
 3370      53746174 
 3370      6500
 3371              	.LASF8:
 3372 02cf 756E7369 		.ascii	"unsigned int\000"
 3372      676E6564 
 3372      20696E74 
 3372      00
 3373              	.LASF5:
 3374 02dc 6C6F6E67 		.ascii	"long unsigned int\000"
 3374      20756E73 
 3374      69676E65 
 3374      6420696E 
 3374      7400
 3375              	.LASF81:
 3376 02ee 5553425F 		.ascii	"USB_DisableSofInt\000"
 3376      44697361 
 3376      626C6553 
 3376      6F66496E 
 3376      7400
 3377              	.LASF3:
 3378 0300 73686F72 		.ascii	"short unsigned int\000"
 3378      7420756E 
 3378      7369676E 
 3378      65642069 
 3378      6E7400
 3379              	.LASF49:
 3380 0313 5553425F 		.ascii	"USB_Start\000"
 3380      53746172 
 3380      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 107


 3381              	.LASF45:
 3382 031d 61726245 		.ascii	"arbEp\000"
 3382      7000
 3383              	.LASF27:
 3384 0323 696E7465 		.ascii	"interface\000"
 3384      72666163 
 3384      6500
 3385              	.LASF54:
 3386 032d 63723152 		.ascii	"cr1Reg\000"
 3386      656700
 3387              	.LASF16:
 3388 0334 72656733 		.ascii	"reg32\000"
 3388      3200
 3389              	.LASF87:
 3390 033a 5553425F 		.ascii	"USB_deviceStatus\000"
 3390      64657669 
 3390      63655374 
 3390      61747573 
 3390      00
 3391              	.LASF44:
 3392 034b 5553425F 		.ascii	"USB_sie_eps_struct\000"
 3392      7369655F 
 3392      6570735F 
 3392      73747275 
 3392      637400
 3393              	.LASF46:
 3394 035e 5553425F 		.ascii	"USB_arb_eps_struct\000"
 3394      6172625F 
 3394      6570735F 
 3394      73747275 
 3394      637400
 3395              	.LASF21:
 3396 0371 68774570 		.ascii	"hwEpState\000"
 3396      53746174 
 3396      6500
 3397              	.LASF18:
 3398 037b 73697A65 		.ascii	"sizetype\000"
 3398      74797065 
 3398      00
 3399              	.LASF17:
 3400 0384 6C6F6E67 		.ascii	"long double\000"
 3400      20646F75 
 3400      626C6500 
 3401              	.LASF19:
 3402 0390 61747472 		.ascii	"attrib\000"
 3402      696200
 3403              	.LASF50:
 3404 0397 5553425F 		.ascii	"USB_Init\000"
 3404      496E6974 
 3404      00
 3405              	.LASF72:
 3406 03a0 5553425F 		.ascii	"USB_SetPowerStatus\000"
 3406      53657450 
 3406      6F776572 
 3406      53746174 
 3406      757300
 3407              	.LASF83:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 108


 3408 03b3 5553425F 		.ascii	"USB_device\000"
 3408      64657669 
 3408      636500
 3409              	.LASF40:
 3410 03be 72775261 		.ascii	"rwRaMsb\000"
 3410      4D736200 
 3411              	.LASF63:
 3412 03c6 5553425F 		.ascii	"USB_LoadInEP\000"
 3412      4C6F6164 
 3412      496E4550 
 3412      00
 3413              	.LASF29:
 3414 03d3 6570436E 		.ascii	"epCnt0\000"
 3414      743000
 3415              	.LASF30:
 3416 03da 6570436E 		.ascii	"epCnt1\000"
 3416      743100
 3417              	.LASF91:
 3418 03e1 5553425F 		.ascii	"USB_EP\000"
 3418      455000
 3419              	.LASF31:
 3420 03e8 65704372 		.ascii	"epCr0\000"
 3420      3000
 3421              	.LASF12:
 3422 03ee 666C6F61 		.ascii	"float\000"
 3422      7400
 3423              	.LASF20:
 3424 03f4 61706945 		.ascii	"apiEpState\000"
 3424      70537461 
 3424      746500
 3425              	.LASF90:
 3426 03ff 5553425F 		.ascii	"USB_deviceAddress\000"
 3426      64657669 
 3426      63654164 
 3426      64726573 
 3426      7300
 3427              	.LASF74:
 3428 0411 5553425F 		.ascii	"USB_GetConfiguration\000"
 3428      47657443 
 3428      6F6E6669 
 3428      67757261 
 3428      74696F6E 
 3429              	.LASF42:
 3430 0426 5553425F 		.ascii	"USB_arb_ep_struct\000"
 3430      6172625F 
 3430      65705F73 
 3430      74727563 
 3430      7400
 3431              	.LASF15:
 3432 0438 72656738 		.ascii	"reg8\000"
 3432      00
 3433              	.LASF55:
 3434 043d 5553425F 		.ascii	"USB_CheckActivity\000"
 3434      43686563 
 3434      6B416374 
 3434      69766974 
 3434      7900
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 109


 3435              	.LASF1:
 3436 044f 756E7369 		.ascii	"unsigned char\000"
 3436      676E6564 
 3436      20636861 
 3436      7200
 3437              	.LASF57:
 3438 045d 5553425F 		.ascii	"USB_GetInterfaceSetting\000"
 3438      47657449 
 3438      6E746572 
 3438      66616365 
 3438      53657474 
 3439              	.LASF2:
 3440 0475 73686F72 		.ascii	"short int\000"
 3440      7420696E 
 3440      7400
 3441              	.LASF79:
 3442 047f 5553425F 		.ascii	"USB_ReInitComponent\000"
 3442      5265496E 
 3442      6974436F 
 3442      6D706F6E 
 3442      656E7400 
 3443              	.LASF82:
 3444 0493 5553425F 		.ascii	"USB_initVar\000"
 3444      696E6974 
 3444      56617200 
 3445              	.LASF66:
 3446 049f 5553425F 		.ascii	"USB_ReadOutEP\000"
 3446      52656164 
 3446      4F757445 
 3446      5000
 3447              	.LASF39:
 3448 04ad 72775261 		.ascii	"rwRa\000"
 3448      00
 3449              	.LASF38:
 3450 04b2 72775761 		.ascii	"rwWaMsb\000"
 3450      4D736200 
 3451              	.LASF56:
 3452 04ba 5553425F 		.ascii	"USB_IsConfigurationChanged\000"
 3452      4973436F 
 3452      6E666967 
 3452      75726174 
 3452      696F6E43 
 3453              	.LASF69:
 3454 04d5 5553425F 		.ascii	"USB_Force\000"
 3454      466F7263 
 3454      6500
 3455              	.LASF70:
 3456 04df 62537461 		.ascii	"bState\000"
 3456      746500
 3457              	.LASF65:
 3458 04e6 6C656E67 		.ascii	"length\000"
 3458      746800
 3459              	.LASF14:
 3460 04ed 63686172 		.ascii	"char\000"
 3460      00
 3461              	.LASF48:
 3462 04f2 6D6F6465 		.ascii	"mode\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 110


 3462      00
 3463              	.LASF26:
 3464 04f7 62756666 		.ascii	"bufferSize\000"
 3464      65725369 
 3464      7A6500
 3465              	.LASF75:
 3466 0502 5553425F 		.ascii	"USB_VBusPresent\000"
 3466      56427573 
 3466      50726573 
 3466      656E7400 
 3467              	.LASF25:
 3468 0512 62756666 		.ascii	"buffOffset\000"
 3468      4F666673 
 3468      657400
 3469              	.LASF58:
 3470 051d 696E7465 		.ascii	"interfaceNumber\000"
 3470      72666163 
 3470      654E756D 
 3470      62657200 
 3471              	.LASF59:
 3472 052d 5553425F 		.ascii	"USB_GetEPState\000"
 3472      47657445 
 3472      50537461 
 3472      746500
 3473              	.LASF32:
 3474 053c 5553425F 		.ascii	"USB_sie_ep_struct\000"
 3474      7369655F 
 3474      65705F73 
 3474      74727563 
 3474      7400
 3475              	.LASF53:
 3476 054e 656E6162 		.ascii	"enableInterrupts\000"
 3476      6C65496E 
 3476      74657272 
 3476      75707473 
 3476      00
 3477              	.LASF41:
 3478 055f 72774472 		.ascii	"rwDr\000"
 3478      00
 3479              	.LASF34:
 3480 0564 6570496E 		.ascii	"epIntEn\000"
 3480      74456E00 
 3481              	.LASF61:
 3482 056c 5553425F 		.ascii	"USB_GetEPCount\000"
 3482      47657445 
 3482      50436F75 
 3482      6E7400
 3483              	.LASF86:
 3484 057b 5553425F 		.ascii	"USB_configurationChanged\000"
 3484      636F6E66 
 3484      69677572 
 3484      6174696F 
 3484      6E436861 
 3485              	.LASF77:
 3486 0594 72657375 		.ascii	"result\000"
 3486      6C7400
 3487              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccoOcwj5.s 			page 111


