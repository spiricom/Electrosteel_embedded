ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_CSHL.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.comm	CapSense_sensorBaseline,20,4
  20              		.comm	CapSense_sensorBaselineLow,10,4
  21              		.comm	CapSense_sensorSignal,20,4
  22              		.comm	CapSense_sensorOnMask,2,4
  23              		.comm	CapSense_lowBaselineResetCnt,10,4
  24              		.global	CapSense_fingerThreshold
  25              		.data
  26              		.align	2
  27              		.type	CapSense_fingerThreshold, %object
  28              		.size	CapSense_fingerThreshold, 20
  29              	CapSense_fingerThreshold:
  30 0000 1E00     		.short	30
  31 0002 1E00     		.short	30
  32 0004 1E00     		.short	30
  33 0006 1E00     		.short	30
  34 0008 1E00     		.short	30
  35 000a 1E00     		.short	30
  36 000c 1E00     		.short	30
  37 000e 1E00     		.short	30
  38 0010 1E00     		.short	30
  39 0012 1E00     		.short	30
  40              		.global	CapSense_noiseThreshold
  41              		.align	2
  42              		.type	CapSense_noiseThreshold, %object
  43              		.size	CapSense_noiseThreshold, 20
  44              	CapSense_noiseThreshold:
  45 0014 0A00     		.short	10
  46 0016 0A00     		.short	10
  47 0018 0A00     		.short	10
  48 001a 0A00     		.short	10
  49 001c 0A00     		.short	10
  50 001e 0A00     		.short	10
  51 0020 0A00     		.short	10
  52 0022 0A00     		.short	10
  53 0024 0A00     		.short	10
  54 0026 0A00     		.short	10
  55              		.global	CapSense_hysteresis
  56              		.align	2
  57              		.type	CapSense_hysteresis, %object
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 2


  58              		.size	CapSense_hysteresis, 20
  59              	CapSense_hysteresis:
  60 0028 0C00     		.short	12
  61 002a 0C00     		.short	12
  62 002c 0C00     		.short	12
  63 002e 0C00     		.short	12
  64 0030 0C00     		.short	12
  65 0032 0C00     		.short	12
  66 0034 0C00     		.short	12
  67 0036 0C00     		.short	12
  68 0038 0C00     		.short	12
  69 003a 0C00     		.short	12
  70              		.global	CapSense_debounce
  71              		.align	2
  72              		.type	CapSense_debounce, %object
  73              		.size	CapSense_debounce, 10
  74              	CapSense_debounce:
  75 003c 01       		.byte	1
  76 003d 01       		.byte	1
  77 003e 01       		.byte	1
  78 003f 01       		.byte	1
  79 0040 01       		.byte	1
  80 0041 01       		.byte	1
  81 0042 01       		.byte	1
  82 0043 01       		.byte	1
  83 0044 01       		.byte	1
  84 0045 01       		.byte	1
  85              		.global	CapSense_debounceCounter
  86              		.bss
  87              		.align	2
  88              		.type	CapSense_debounceCounter, %object
  89              		.size	CapSense_debounceCounter, 11
  90              	CapSense_debounceCounter:
  91 0000 00000000 		.space	11
  91      00000000 
  91      000000
  92              		.global	CapSense_rawDataIndex
  93              		.section	.rodata
  94              		.align	2
  95              		.type	CapSense_rawDataIndex, %object
  96              		.size	CapSense_rawDataIndex, 10
  97              	CapSense_rawDataIndex:
  98 0000 00       		.byte	0
  99 0001 01       		.byte	1
 100 0002 02       		.byte	2
 101 0003 03       		.byte	3
 102 0004 04       		.byte	4
 103 0005 05       		.byte	5
 104 0006 06       		.byte	6
 105 0007 07       		.byte	7
 106 0008 08       		.byte	8
 107 0009 09       		.byte	9
 108              		.global	CapSense_numberOfSensors
 109 000a 0000     		.align	2
 110              		.type	CapSense_numberOfSensors, %object
 111              		.size	CapSense_numberOfSensors, 10
 112              	CapSense_numberOfSensors:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 3


 113 000c 01       		.byte	1
 114 000d 01       		.byte	1
 115 000e 01       		.byte	1
 116 000f 01       		.byte	1
 117 0010 01       		.byte	1
 118 0011 01       		.byte	1
 119 0012 01       		.byte	1
 120 0013 01       		.byte	1
 121 0014 01       		.byte	1
 122 0015 01       		.byte	1
 123              		.section	.text.CapSense_BaseInit,"ax",%progbits
 124              		.align	2
 125              		.global	CapSense_BaseInit
 126              		.thumb
 127              		.thumb_func
 128              		.type	CapSense_BaseInit, %function
 129              	CapSense_BaseInit:
 130              	.LFB0:
 131              		.file 1 "Generated_Source\\PSoC5\\CapSense_CSHL.c"
   1:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense_CSHL.c **** * File Name: CapSense_CSHL.c
   3:Generated_Source\PSoC5/CapSense_CSHL.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   5:Generated_Source\PSoC5/CapSense_CSHL.c **** * Description:
   6:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This file provides the source code to the High Level APIs for the CapSesne
   7:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CSD component.
   8:Generated_Source\PSoC5/CapSense_CSHL.c **** *
   9:Generated_Source\PSoC5/CapSense_CSHL.c **** * Note:
  10:Generated_Source\PSoC5/CapSense_CSHL.c **** *
  11:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense_CSHL.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense_CSHL.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense_CSHL.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/CapSense_CSHL.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  18:Generated_Source\PSoC5/CapSense_CSHL.c **** #include "CapSense_CSHL.h"
  19:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  20:Generated_Source\PSoC5/CapSense_CSHL.c **** /* Storage of filters data */
  21:Generated_Source\PSoC5/CapSense_CSHL.c **** #if ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
  22:Generated_Source\PSoC5/CapSense_CSHL.c ****       (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
  23:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  24:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  25:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData2[CapSense_TOTAL_SENSOR_COUNT];
  26:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  27:Generated_Source\PSoC5/CapSense_CSHL.c **** #elif ( (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)   | \
  28:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)   | \
  29:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) | \
  30:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)   | \
  31:Generated_Source\PSoC5/CapSense_CSHL.c ****         (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER) )
  32:Generated_Source\PSoC5/CapSense_CSHL.c ****         
  33:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 CapSense_rawFilterData1[CapSense_TOTAL_SENSOR_COUNT];
  34:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  35:Generated_Source\PSoC5/CapSense_CSHL.c **** #else
  36:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* No Raw filters */
  37:Generated_Source\PSoC5/CapSense_CSHL.c **** #endif  /* ( (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) || \
  38:Generated_Source\PSoC5/CapSense_CSHL.c ****         *    (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER) )
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 4


  39:Generated_Source\PSoC5/CapSense_CSHL.c ****         */
  40:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  41:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorBaseline[CapSense_TOTAL_SENSOR_COUNT];
  42:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorBaselineLow[CapSense_TOTAL_SENSOR_COUNT];
  43:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_sensorSignal[CapSense_TOTAL_SENSOR_COUNT];
  44:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_sensorOnMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)];
  45:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  46:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_lowBaselineResetCnt[CapSense_TOTAL_SENSOR_COUNT];
  47:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  48:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_fingerThreshold[] = {
  49:Generated_Source\PSoC5/CapSense_CSHL.c ****     30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 30u, 
  50:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  51:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  52:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_noiseThreshold[] = {
  53:Generated_Source\PSoC5/CapSense_CSHL.c ****     10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 10u, 
  54:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  55:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  56:Generated_Source\PSoC5/CapSense_CSHL.c **** uint16 CapSense_hysteresis[] = {
  57:Generated_Source\PSoC5/CapSense_CSHL.c ****     12u, 12u, 12u, 12u, 12u, 12u, 12u, 12u, 12u, 12u, 
  58:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  59:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  60:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounce[] = {
  61:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 1u, 
  62:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  63:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  64:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_debounceCounter[] = {
  65:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 0u, 
  66:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  67:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  68:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_rawDataIndex[] = {
  69:Generated_Source\PSoC5/CapSense_CSHL.c ****     0u, /* Button0__BTN */
  70:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  71:Generated_Source\PSoC5/CapSense_CSHL.c ****     2u, /* Button2__BTN */
  72:Generated_Source\PSoC5/CapSense_CSHL.c ****     3u, /* Button3__BTN */
  73:Generated_Source\PSoC5/CapSense_CSHL.c ****     4u, /* Button4__BTN */
  74:Generated_Source\PSoC5/CapSense_CSHL.c ****     5u, /* Button5__BTN */
  75:Generated_Source\PSoC5/CapSense_CSHL.c ****     6u, /* Button6__BTN */
  76:Generated_Source\PSoC5/CapSense_CSHL.c ****     7u, /* Button7__BTN */
  77:Generated_Source\PSoC5/CapSense_CSHL.c ****     8u, /* Button8__BTN */
  78:Generated_Source\PSoC5/CapSense_CSHL.c ****     9u, /* Button9__BTN */
  79:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  80:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  81:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  82:Generated_Source\PSoC5/CapSense_CSHL.c **** const uint8 CYCODE CapSense_numberOfSensors[] = {
  83:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button0__BTN */
  84:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button1__BTN */
  85:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button2__BTN */
  86:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button3__BTN */
  87:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button4__BTN */
  88:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button5__BTN */
  89:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button6__BTN */
  90:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button7__BTN */
  91:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button8__BTN */
  92:Generated_Source\PSoC5/CapSense_CSHL.c ****     1u, /* Button9__BTN */
  93:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  94:Generated_Source\PSoC5/CapSense_CSHL.c **** };
  95:Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 5


  96:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  97:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  98:Generated_Source\PSoC5/CapSense_CSHL.c **** 
  99:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 100:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_BaseInit
 101:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 102:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 103:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 104:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 105:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal to raw count value. 
 106:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Resets to zero CapSense_sensorBaselineLow[sensor] and 
 107:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[sensor] array element.
 108:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads CapSense_debounceCounter[sensor] array element with initial 
 109:Generated_Source\PSoC5/CapSense_CSHL.c **** *  value equal CapSense_debounce[].
 110:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_rawFilterData2[sensor] and 
 111:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[sensor] array element with an 
 112:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value which is equal raw count value if raw data filter is enabled.
 113:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 114:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 115:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 116:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 117:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 118:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 119:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 120:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 121:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 122:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 123:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 124:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 125:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 126:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 127:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 128:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 129:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 130:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 131:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 132:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 133:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 134:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 135:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 136:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 137:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 138:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 139:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_BaseInit(uint8 sensor) 
 140:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 132              		.loc 1 140 0
 133              		.cfi_startproc
 134              		@ args = 0, pretend = 0, frame = 16
 135              		@ frame_needed = 1, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137 0000 80B4     		push	{r7}
 138              		.cfi_def_cfa_offset 4
 139              		.cfi_offset 7, -4
 140 0002 85B0     		sub	sp, sp, #20
 141              		.cfi_def_cfa_offset 24
 142 0004 00AF     		add	r7, sp, #0
 143              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 6


 144 0006 0346     		mov	r3, r0
 145 0008 FB71     		strb	r3, [r7, #7]
 141:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_TOTAL_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || \
 142:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_TOTAL_GENERICS_COUNT))
 143:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 widget = CapSense_widgetNumber[sensor];
 146              		.loc 1 143 0
 147 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 148 000c 0F4A     		ldr	r2, .L2
 149 000e D35C     		ldrb	r3, [r2, r3]
 150 0010 FB73     		strb	r3, [r7, #15]
 144:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* ((CapSense_TOTAL_MATRIX_BUTTONS_COUNT) || (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)) */
 145:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 146:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_MATRIX_BUTTONS_COUNT)
 147:Generated_Source\PSoC5/CapSense_CSHL.c ****         uint8 debounceIndex;
 148:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_TOTAL_MATRIX_BUTTONS_COUNT) */
 149:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 150:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 151:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 152:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
 153:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 154:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 155:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 156:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Initialize Baseline */
 157:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaseline[sensor] = CapSense_sensorRaw[sensor];
 151              		.loc 1 157 0
 152 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 153 0014 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 154 0016 0E49     		ldr	r1, .L2+4
 155 0018 31F81210 		ldrh	r1, [r1, r2, lsl #1]
 156 001c 0D4A     		ldr	r2, .L2+8
 157 001e 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 158:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorBaselineLow[sensor] = 0u;
 158              		.loc 1 158 0
 159 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 160 0024 0C4A     		ldr	r2, .L2+12
 161 0026 0021     		movs	r1, #0
 162 0028 D154     		strb	r1, [r2, r3]
 159:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_sensorSignal[sensor] = 0u;
 163              		.loc 1 159 0
 164 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 165 002c 0B4A     		ldr	r2, .L2+16
 166 002e 0021     		movs	r1, #0
 167 0030 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 160:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 161:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_debounceCounter[widget] =  CapSense_debounce[widget];
 168              		.loc 1 161 0
 169 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 170 0036 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 171 0038 0949     		ldr	r1, .L2+20
 172 003a 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 173 003c 094A     		ldr	r2, .L2+24
 174 003e D154     		strb	r1, [r2, r3]
 162:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 163:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 164:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) |\
 165:Generated_Source\PSoC5/CapSense_CSHL.c ****          (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 166:Generated_Source\PSoC5/CapSense_CSHL.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 7


 167:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 168:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_sensorRaw[sensor];
 169:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 170:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif ((CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER) |\
 171:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER) |\
 172:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER) |\
 173:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER) |\
 174:Generated_Source\PSoC5/CapSense_CSHL.c ****            (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER))
 175:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 176:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = CapSense_sensorRaw[sensor];
 177:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 178:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 179:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 180:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* ((CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) | \
 181:Generated_Source\PSoC5/CapSense_CSHL.c ****             *   (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER))
 182:Generated_Source\PSoC5/CapSense_CSHL.c ****             */
 183:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 184:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 185:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 186:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 187:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 188:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 175              		.loc 1 188 0
 176 0040 00BF     		nop
 177 0042 1437     		adds	r7, r7, #20
 178              		.cfi_def_cfa_offset 4
 179 0044 BD46     		mov	sp, r7
 180              		.cfi_def_cfa_register 13
 181              		@ sp needed
 182 0046 80BC     		pop	{r7}
 183              		.cfi_restore 7
 184              		.cfi_def_cfa_offset 0
 185 0048 7047     		bx	lr
 186              	.L3:
 187 004a 00BF     		.align	2
 188              	.L2:
 189 004c 00000000 		.word	CapSense_widgetNumber
 190 0050 00000000 		.word	CapSense_sensorRaw
 191 0054 00000000 		.word	CapSense_sensorBaseline
 192 0058 00000000 		.word	CapSense_sensorBaselineLow
 193 005c 00000000 		.word	CapSense_sensorSignal
 194 0060 00000000 		.word	CapSense_debounce
 195 0064 00000000 		.word	CapSense_debounceCounter
 196              		.cfi_endproc
 197              	.LFE0:
 198              		.size	CapSense_BaseInit, .-CapSense_BaseInit
 199              		.section	.text.CapSense_InitializeSensorBaseline,"ax",%progbits
 200              		.align	2
 201              		.global	CapSense_InitializeSensorBaseline
 202              		.thumb
 203              		.thumb_func
 204              		.type	CapSense_InitializeSensorBaseline, %function
 205              	CapSense_InitializeSensorBaseline:
 206              	.LFB1:
 189:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 190:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 191:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 8


 192:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeSensorBaseline
 193:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 194:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 195:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 196:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Loads the CapSense_sensorBaseline[sensor] array element with an 
 197:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initial value by scanning the selected sensor (one channel design) or pair 
 198:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of sensors (two channels designs). The raw count value is copied into the 
 199:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for each sensor. The raw data filters are initialized if 
 200:Generated_Source\PSoC5/CapSense_CSHL.c **** *  enabled.
 201:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 202:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 203:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 204:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 205:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 206:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 207:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 208:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 209:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 210:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 211:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 212:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeSensorBaseline(uint8 sensor)
 213:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 214:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 207              		.loc 1 214 0
 208              		.cfi_startproc
 209              		@ args = 0, pretend = 0, frame = 8
 210              		@ frame_needed = 1, uses_anonymous_args = 0
 211 0000 80B5     		push	{r7, lr}
 212              		.cfi_def_cfa_offset 8
 213              		.cfi_offset 7, -8
 214              		.cfi_offset 14, -4
 215 0002 82B0     		sub	sp, sp, #8
 216              		.cfi_def_cfa_offset 16
 217 0004 00AF     		add	r7, sp, #0
 218              		.cfi_def_cfa_register 7
 219 0006 0346     		mov	r3, r0
 220 0008 FB71     		strb	r3, [r7, #7]
 215:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Scan sensor */
 216:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanSensor(sensor);
 221              		.loc 1 216 0
 222 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 223 000c 1846     		mov	r0, r3
 224 000e FFF7FEFF 		bl	CapSense_ScanSensor
 217:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
 225              		.loc 1 217 0
 226 0012 00BF     		nop
 227              	.L5:
 228              		.loc 1 217 0 is_stmt 0 discriminator 1
 229 0014 FFF7FEFF 		bl	CapSense_IsBusy
 230 0018 0346     		mov	r3, r0
 231 001a 002B     		cmp	r3, #0
 232 001c FAD1     		bne	.L5
 218:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 219:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 220:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 221:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 222:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 9


 223:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize Baseline, Signal and debounce counters */       
 224:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(sensor);
 233              		.loc 1 224 0 is_stmt 1
 234 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 235 0020 1846     		mov	r0, r3
 236 0022 FFF7FEFF 		bl	CapSense_BaseInit
 225:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 226:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 227:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 228:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 229:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 230:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */ 
 231:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 232:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 233:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 234:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 235:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 236:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Initialize Baseline, Signal and debounce counters */
 237:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor + CapSense_TOTAL_SENSOR_COUNT__CH0);
 238:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 239:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 240:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
 241:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 237              		.loc 1 241 0
 238 0026 00BF     		nop
 239 0028 0837     		adds	r7, r7, #8
 240              		.cfi_def_cfa_offset 8
 241 002a BD46     		mov	sp, r7
 242              		.cfi_def_cfa_register 13
 243              		@ sp needed
 244 002c 80BD     		pop	{r7, pc}
 245              		.cfi_endproc
 246              	.LFE1:
 247              		.size	CapSense_InitializeSensorBaseline, .-CapSense_InitializeSensorBaseline
 248 002e 00BF     		.section	.text.CapSense_InitializeAllBaselines,"ax",%progbits
 249              		.align	2
 250              		.global	CapSense_InitializeAllBaselines
 251              		.thumb
 252              		.thumb_func
 253              		.type	CapSense_InitializeAllBaselines, %function
 254              	CapSense_InitializeAllBaselines:
 255              	.LFB2:
 242:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 243:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 244:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 245:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeAllBaselines
 246:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 247:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 248:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 249:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Uses the CapSense_InitializeSensorBaseline function to loads the 
 250:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[] array with an initial values by scanning 
 251:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw count values are copied into the baseline array for 
 252:Generated_Source\PSoC5/CapSense_CSHL.c **** *  all sensors. The raw data filters are initialized if enabled.
 253:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 254:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 255:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 256:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 10


 257:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 258:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 259:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 260:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 261:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 262:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 263:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 264:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeAllBaselines(void)
 265:Generated_Source\PSoC5/CapSense_CSHL.c ****                           
 266:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 256              		.loc 1 266 0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 8
 259              		@ frame_needed = 1, uses_anonymous_args = 0
 260 0000 80B5     		push	{r7, lr}
 261              		.cfi_def_cfa_offset 8
 262              		.cfi_offset 7, -8
 263              		.cfi_offset 14, -4
 264 0002 82B0     		sub	sp, sp, #8
 265              		.cfi_def_cfa_offset 16
 266 0004 00AF     		add	r7, sp, #0
 267              		.cfi_def_cfa_register 7
 267:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 268:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 269:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* The baseline initialize by sensor of sensor pair */
 270:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SCANSLOT_COUNT; i++)
 268              		.loc 1 270 0
 269 0006 0023     		movs	r3, #0
 270 0008 FB71     		strb	r3, [r7, #7]
 271 000a 06E0     		b	.L7
 272              	.L8:
 271:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 272:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_InitializeSensorBaseline(i);
 273              		.loc 1 272 0 discriminator 3
 274 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 275 000e 1846     		mov	r0, r3
 276 0010 FFF7FEFF 		bl	CapSense_InitializeSensorBaseline
 270:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 277              		.loc 1 270 0 discriminator 3
 278 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 279 0016 0133     		adds	r3, r3, #1
 280 0018 FB71     		strb	r3, [r7, #7]
 281              	.L7:
 270:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 282              		.loc 1 270 0 is_stmt 0 discriminator 1
 283 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 284 001c 092B     		cmp	r3, #9
 285 001e F5D9     		bls	.L8
 273:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 274:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 286              		.loc 1 274 0 is_stmt 1
 287 0020 00BF     		nop
 288 0022 0837     		adds	r7, r7, #8
 289              		.cfi_def_cfa_offset 8
 290 0024 BD46     		mov	sp, r7
 291              		.cfi_def_cfa_register 13
 292              		@ sp needed
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 11


 293 0026 80BD     		pop	{r7, pc}
 294              		.cfi_endproc
 295              	.LFE2:
 296              		.size	CapSense_InitializeAllBaselines, .-CapSense_InitializeAllBaselines
 297              		.section	.text.CapSense_InitializeEnabledBaselines,"ax",%progbits
 298              		.align	2
 299              		.global	CapSense_InitializeEnabledBaselines
 300              		.thumb
 301              		.thumb_func
 302              		.type	CapSense_InitializeEnabledBaselines, %function
 303              	CapSense_InitializeEnabledBaselines:
 304              	.LFB3:
 275:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 276:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 277:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 278:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_InitializeEnabledBaselines
 279:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 280:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 281:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 282:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Scans all enabled widgets and the raw count values are copied into the 
 283:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline array for all sensors enabled in scanning process. Baselines 
 284:Generated_Source\PSoC5/CapSense_CSHL.c **** *  initialize with zero values for sensors disabled from scanning process. 
 285:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The raw data filters are initialized if enabled.
 286:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 287:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 288:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 289:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 290:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 291:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 292:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 293:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 294:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 295:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 296:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 297:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_InitializeEnabledBaselines(void)
 298:Generated_Source\PSoC5/CapSense_CSHL.c ****                              
 299:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 305              		.loc 1 299 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 8
 308              		@ frame_needed = 1, uses_anonymous_args = 0
 309 0000 80B5     		push	{r7, lr}
 310              		.cfi_def_cfa_offset 8
 311              		.cfi_offset 7, -8
 312              		.cfi_offset 14, -4
 313 0002 82B0     		sub	sp, sp, #8
 314              		.cfi_def_cfa_offset 16
 315 0004 00AF     		add	r7, sp, #0
 316              		.cfi_def_cfa_register 7
 300:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 301:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 302:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 303:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 304:Generated_Source\PSoC5/CapSense_CSHL.c ****     CapSense_ScanEnabledWidgets();
 317              		.loc 1 304 0
 318 0006 FFF7FEFF 		bl	CapSense_ScanEnabledWidgets
 305:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(CapSense_IsBusy() != 0u)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 12


 319              		.loc 1 305 0
 320 000a 00BF     		nop
 321              	.L10:
 322              		.loc 1 305 0 is_stmt 0 discriminator 1
 323 000c FFF7FEFF 		bl	CapSense_IsBusy
 324 0010 0346     		mov	r3, r0
 325 0012 002B     		cmp	r3, #0
 326 0014 FAD1     		bne	.L10
 306:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 307:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Wait while busy */
 308:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 309:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 327              		.loc 1 310 0 is_stmt 1
 328 0016 0023     		movs	r3, #0
 329 0018 FB71     		strb	r3, [r7, #7]
 330 001a 1DE0     		b	.L11
 331              	.L13:
 311:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 312:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 332              		.loc 1 312 0
 333 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 334 001e DB08     		lsrs	r3, r3, #3
 335 0020 BB71     		strb	r3, [r7, #6]
 313:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (i & 0x07u);
 336              		.loc 1 313 0
 337 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 338 0024 03F00703 		and	r3, r3, #7
 339 0028 0122     		movs	r2, #1
 340 002a 02FA03F3 		lsl	r3, r2, r3
 341 002e 7B71     		strb	r3, [r7, #5]
 314:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 315:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Clear raw data if sensor is disabled from scanning process */
 316:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) == 0u)
 342              		.loc 1 316 0
 343 0030 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 344 0032 0D4A     		ldr	r2, .L14
 345 0034 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 346 0036 7B79     		ldrb	r3, [r7, #5]
 347 0038 1340     		ands	r3, r3, r2
 348 003a DBB2     		uxtb	r3, r3
 349 003c 002B     		cmp	r3, #0
 350 003e 04D1     		bne	.L12
 317:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 318:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorRaw[i] = 0u;
 351              		.loc 1 318 0
 352 0040 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 353 0042 0A4A     		ldr	r2, .L14+4
 354 0044 0021     		movs	r1, #0
 355 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 356              	.L12:
 319:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 320:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 321:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Initialize baselines */
 322:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_BaseInit(i);
 357              		.loc 1 322 0 discriminator 2
 358 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 13


 359 004c 1846     		mov	r0, r3
 360 004e FFF7FEFF 		bl	CapSense_BaseInit
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 361              		.loc 1 310 0 discriminator 2
 362 0052 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 363 0054 0133     		adds	r3, r3, #1
 364 0056 FB71     		strb	r3, [r7, #7]
 365              	.L11:
 310:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 366              		.loc 1 310 0 is_stmt 0 discriminator 1
 367 0058 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 368 005a 092B     		cmp	r3, #9
 369 005c DED9     		bls	.L13
 323:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 324:Generated_Source\PSoC5/CapSense_CSHL.c **** }  
 370              		.loc 1 324 0 is_stmt 1
 371 005e 00BF     		nop
 372 0060 0837     		adds	r7, r7, #8
 373              		.cfi_def_cfa_offset 8
 374 0062 BD46     		mov	sp, r7
 375              		.cfi_def_cfa_register 13
 376              		@ sp needed
 377 0064 80BD     		pop	{r7, pc}
 378              	.L15:
 379 0066 00BF     		.align	2
 380              	.L14:
 381 0068 00000000 		.word	CapSense_sensorEnableMask
 382 006c 00000000 		.word	CapSense_sensorRaw
 383              		.cfi_endproc
 384              	.LFE3:
 385              		.size	CapSense_InitializeEnabledBaselines, .-CapSense_InitializeEnabledBaselines
 386              		.section	.text.CapSense_UpdateSensorBaseline,"ax",%progbits
 387              		.align	2
 388              		.global	CapSense_UpdateSensorBaseline
 389              		.thumb
 390              		.thumb_func
 391              		.type	CapSense_UpdateSensorBaseline, %function
 392              	CapSense_UpdateSensorBaseline:
 393              	.LFB4:
 325:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 326:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 327:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 328:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateSensorBaseline
 329:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 330:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 331:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 332:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Updates the CapSense_sensorBaseline[sensor] array element using the 
 333:Generated_Source\PSoC5/CapSense_CSHL.c **** *  LP filter with k = 256. The signal calculates the difference of count by 
 334:Generated_Source\PSoC5/CapSense_CSHL.c **** *  subtracting the previous baseline from the current raw count value and stores
 335:Generated_Source\PSoC5/CapSense_CSHL.c **** *  it in CapSense_SensorSignal[sensor]. 
 336:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is enabled the baseline updated regards noise threshold. 
 337:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If auto reset option is disabled the baseline stops updating if signal is 
 338:Generated_Source\PSoC5/CapSense_CSHL.c **** *  greater that zero and baseline loads with raw count value if signal is less 
 339:Generated_Source\PSoC5/CapSense_CSHL.c **** *  that noise threshold.
 340:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Raw data filters are applied to the values if enabled before baseline 
 341:Generated_Source\PSoC5/CapSense_CSHL.c **** *  calculation.
 342:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 14


 343:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 344:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
 345:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 346:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 347:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 348:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 349:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 350:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaseline[]    - used to store baseline value.
 351:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorBaselineLow[] - used to store fraction byte of 
 352:Generated_Source\PSoC5/CapSense_CSHL.c **** *  baseline value.
 353:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 354:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 355:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData1[]    - used to store previous sample of 
 356:Generated_Source\PSoC5/CapSense_CSHL.c **** *  any enabled raw data filter.
 357:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_rawFilterData2[]    - used to store before previous sample
 358:Generated_Source\PSoC5/CapSense_CSHL.c **** *  of enabled raw data filter. Only required for median or average filters.
 359:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 360:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 361:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 362:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 363:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 364:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateSensorBaseline(uint8 sensor)
 365:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 366:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 394              		.loc 1 366 0
 395              		.cfi_startproc
 396              		@ args = 0, pretend = 0, frame = 24
 397              		@ frame_needed = 1, uses_anonymous_args = 0
 398 0000 80B5     		push	{r7, lr}
 399              		.cfi_def_cfa_offset 8
 400              		.cfi_offset 7, -8
 401              		.cfi_offset 14, -4
 402 0002 86B0     		sub	sp, sp, #24
 403              		.cfi_def_cfa_offset 32
 404 0004 00AF     		add	r7, sp, #0
 405              		.cfi_def_cfa_register 7
 406 0006 0346     		mov	r3, r0
 407 0008 FB71     		strb	r3, [r7, #7]
 367:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint32 calc;
 368:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 tempRaw;
 369:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 filteredRawData;
 370:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 408              		.loc 1 370 0
 409 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 410 000c 454A     		ldr	r2, .L26
 411 000e D35C     		ldrb	r3, [r2, r3]
 412 0010 7B75     		strb	r3, [r7, #21]
 371:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 noiseThreshold = CapSense_noiseThreshold[widget];
 413              		.loc 1 371 0
 414 0012 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 415 0014 444A     		ldr	r2, .L26+4
 416 0016 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 417 001a 7B82     		strh	r3, [r7, #18]	@ movhi
 372:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 373:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 374:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 375:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(widget < CapSense_END_OF_WIDGETS_INDEX)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 15


 376:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 377:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
 378:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 379:Generated_Source\PSoC5/CapSense_CSHL.c ****     filteredRawData = CapSense_sensorRaw[sensor];
 418              		.loc 1 379 0
 419 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 420 001e 434A     		ldr	r2, .L26+8
 421 0020 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 422 0024 3B82     		strh	r3, [r7, #16]	@ movhi
 380:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 381:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER)
 382:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 383:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_MedianFilter(filteredRawData, CapSense_rawFilterData1[sensor], 
 384:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                         CapSense_rawFilterData2[sensor]);
 385:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 386:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 387:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 388:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_AVERAGING_FILTER)
 389:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData;
 390:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_AveragingFilter(filteredRawData, CapSense_rawFilterData1[sensor]
 391:Generated_Source\PSoC5/CapSense_CSHL.c ****                                                            CapSense_rawFilterData2[sensor]);
 392:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData2[sensor] = CapSense_rawFilterData1[sensor];
 393:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = tempRaw;
 394:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 395:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR2_FILTER)
 396:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR2Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 397:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 398:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 399:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR4_FILTER)
 400:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR4Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 401:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 402:Generated_Source\PSoC5/CapSense_CSHL.c ****             
 403:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_JITTER_FILTER)
 404:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_JitterFilter(filteredRawData, CapSense_rawFilterData1[sensor]);
 405:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 406:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 407:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR8_FILTER)
 408:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR8Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 409:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 410:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 411:Generated_Source\PSoC5/CapSense_CSHL.c ****     #elif (CapSense_RAW_FILTER_MASK & CapSense_IIR16_FILTER)
 412:Generated_Source\PSoC5/CapSense_CSHL.c ****         filteredRawData = CapSense_IIR16Filter(filteredRawData, CapSense_rawFilterData1[sensor]);
 413:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_rawFilterData1[sensor] = filteredRawData;
 414:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 415:Generated_Source\PSoC5/CapSense_CSHL.c ****     #else
 416:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* No Raw filters */
 417:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* (CapSense_RAW_FILTER_MASK & CapSense_MEDIAN_FILTER) */
 418:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 419:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 420:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_CalculateThresholds(sensor);
 421:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 422:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 423:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 424:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Baseline calculation */
 425:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate difference RawData[cur] - Baseline[prev] */
 426:Generated_Source\PSoC5/CapSense_CSHL.c ****     if(filteredRawData >= CapSense_sensorBaseline[sensor])
 423              		.loc 1 426 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 16


 424 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 425 0028 414A     		ldr	r2, .L26+12
 426 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 427 002e 3A8A     		ldrh	r2, [r7, #16]
 428 0030 9A42     		cmp	r2, r3
 429 0032 09D3     		bcc	.L17
 427:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 428:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = filteredRawData - CapSense_sensorBaseline[sensor];
 430              		.loc 1 428 0
 431 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 432 0036 3E4A     		ldr	r2, .L26+12
 433 0038 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 434 003c 3A8A     		ldrh	r2, [r7, #16]	@ movhi
 435 003e D31A     		subs	r3, r2, r3
 436 0040 FB82     		strh	r3, [r7, #22]	@ movhi
 429:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 1u;    /* Positive difference - Calculate the Signal */
 437              		.loc 1 429 0
 438 0042 0123     		movs	r3, #1
 439 0044 7B75     		strb	r3, [r7, #21]
 440 0046 08E0     		b	.L18
 441              	.L17:
 430:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 431:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 432:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 433:Generated_Source\PSoC5/CapSense_CSHL.c ****         tempRaw = CapSense_sensorBaseline[sensor] - filteredRawData;
 442              		.loc 1 433 0
 443 0048 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 444 004a 394A     		ldr	r2, .L26+12
 445 004c 32F81320 		ldrh	r2, [r2, r3, lsl #1]
 446 0050 3B8A     		ldrh	r3, [r7, #16]	@ movhi
 447 0052 D31A     		subs	r3, r2, r3
 448 0054 FB82     		strh	r3, [r7, #22]	@ movhi
 434:Generated_Source\PSoC5/CapSense_CSHL.c ****         widget = 0u;    /* Negative difference - Do NOT calculate the Signal */
 449              		.loc 1 434 0
 450 0056 0023     		movs	r3, #0
 451 0058 7B75     		strb	r3, [r7, #21]
 452              	.L18:
 435:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 436:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 437:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((widget == 0u) && (tempRaw > (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD))
 453              		.loc 1 437 0
 454 005a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 455 005c 002B     		cmp	r3, #0
 456 005e 18D1     		bne	.L19
 457              		.loc 1 437 0 is_stmt 0 discriminator 1
 458 0060 FB8A     		ldrh	r3, [r7, #22]
 459 0062 142B     		cmp	r3, #20
 460 0064 15D9     		bls	.L19
 438:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_lowBaselineResetCnt[sensor] >= CapSense_LOW_BASELINE_RESET)
 461              		.loc 1 439 0 is_stmt 1
 462 0066 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 463 0068 324A     		ldr	r2, .L26+16
 464 006a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 465 006c 1D2B     		cmp	r3, #29
 466 006e 08D9     		bls	.L20
 440:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 17


 441:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_BaseInit(sensor);
 467              		.loc 1 441 0
 468 0070 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 469 0072 1846     		mov	r0, r3
 470 0074 FFF7FEFF 		bl	CapSense_BaseInit
 442:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor] = 0u;
 471              		.loc 1 442 0
 472 0078 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 473 007a 2E4A     		ldr	r2, .L26+16
 474 007c 0021     		movs	r1, #0
 475 007e D154     		strb	r1, [r2, r3]
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 476              		.loc 1 439 0
 477 0080 3AE0     		b	.L22
 478              	.L20:
 443:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 444:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 445:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 446:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_lowBaselineResetCnt[sensor]++;
 479              		.loc 1 446 0
 480 0082 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 481 0084 2B4A     		ldr	r2, .L26+16
 482 0086 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 483 0088 0132     		adds	r2, r2, #1
 484 008a D1B2     		uxtb	r1, r2
 485 008c 294A     		ldr	r2, .L26+16
 486 008e D154     		strb	r1, [r2, r3]
 439:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 487              		.loc 1 439 0
 488 0090 32E0     		b	.L22
 489              	.L19:
 447:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 448:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 449:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 450:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 451:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 452:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Update Baseline if lower that noiseThreshold */
 453:Generated_Source\PSoC5/CapSense_CSHL.c ****             if ( (tempRaw <= (uint16) noiseThreshold) || 
 490              		.loc 1 453 0
 491 0092 FA8A     		ldrh	r2, [r7, #22]
 492 0094 7B8A     		ldrh	r3, [r7, #18]
 493 0096 9A42     		cmp	r2, r3
 494 0098 05D9     		bls	.L23
 495              		.loc 1 453 0 is_stmt 0 discriminator 1
 496 009a FB8A     		ldrh	r3, [r7, #22]
 497 009c 132B     		cmp	r3, #19
 498 009e 2BD8     		bhi	.L22
 454:Generated_Source\PSoC5/CapSense_CSHL.c ****                  ((tempRaw < (uint16) CapSense_NEGATIVE_NOISE_THRESHOLD)
 455:Generated_Source\PSoC5/CapSense_CSHL.c ****                    && (widget == 0u)))
 499              		.loc 1 455 0 is_stmt 1
 500 00a0 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 501 00a2 002B     		cmp	r3, #0
 502 00a4 28D1     		bne	.L22
 503              	.L23:
 456:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 457:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 458:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Make full Baseline 23 bits */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 18


 459:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc = (uint32) CapSense_sensorBaseline[sensor] << 8u;
 504              		.loc 1 459 0
 505 00a6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 506 00a8 214A     		ldr	r2, .L26+12
 507 00aa 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 508 00ae 1B02     		lsls	r3, r3, #8
 509 00b0 FB60     		str	r3, [r7, #12]
 460:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc |= (uint32) CapSense_sensorBaselineLow[sensor];
 510              		.loc 1 460 0
 511 00b2 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 512 00b4 204A     		ldr	r2, .L26+20
 513 00b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 514 00b8 1A46     		mov	r2, r3
 515 00ba FB68     		ldr	r3, [r7, #12]
 516 00bc 1343     		orrs	r3, r3, r2
 517 00be FB60     		str	r3, [r7, #12]
 461:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 462:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Add Raw Data to Baseline */
 463:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc += filteredRawData;
 518              		.loc 1 463 0
 519 00c0 3B8A     		ldrh	r3, [r7, #16]
 520 00c2 FA68     		ldr	r2, [r7, #12]
 521 00c4 1344     		add	r3, r3, r2
 522 00c6 FB60     		str	r3, [r7, #12]
 464:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 465:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Sub the high Baseline */
 466:Generated_Source\PSoC5/CapSense_CSHL.c ****                 calc -= CapSense_sensorBaseline[sensor];
 523              		.loc 1 466 0
 524 00c8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 525 00ca 194A     		ldr	r2, .L26+12
 526 00cc 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 527 00d0 1A46     		mov	r2, r3
 528 00d2 FB68     		ldr	r3, [r7, #12]
 529 00d4 9B1A     		subs	r3, r3, r2
 530 00d6 FB60     		str	r3, [r7, #12]
 467:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 468:Generated_Source\PSoC5/CapSense_CSHL.c ****                 /* Put Baseline and BaselineLow */
 469:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaseline[sensor] = ((uint16) (calc >> 8u));
 531              		.loc 1 469 0
 532 00d8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 533 00da FA68     		ldr	r2, [r7, #12]
 534 00dc 120A     		lsrs	r2, r2, #8
 535 00de 91B2     		uxth	r1, r2
 536 00e0 134A     		ldr	r2, .L26+12
 537 00e2 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 470:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorBaselineLow[sensor] = ((uint8) calc);
 538              		.loc 1 470 0
 539 00e6 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 540 00e8 FA68     		ldr	r2, [r7, #12]
 541 00ea D1B2     		uxtb	r1, r2
 542 00ec 124A     		ldr	r2, .L26+20
 543 00ee D154     		strb	r1, [r2, r3]
 471:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 472:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_lowBaselineResetCnt[sensor] = 0u;
 544              		.loc 1 472 0
 545 00f0 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 546 00f2 104A     		ldr	r2, .L26+16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 19


 547 00f4 0021     		movs	r1, #0
 548 00f6 D154     		strb	r1, [r2, r3]
 549              	.L22:
 473:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE)
 474:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 475:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif /* (CapSense_AUTO_RESET == CapSense_AUTO_RESET_DISABLE) */
 476:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 477:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 478:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Calculate Signal if possitive difference > noiseThreshold */
 479:Generated_Source\PSoC5/CapSense_CSHL.c ****     if((tempRaw > (uint16) noiseThreshold) && (widget != 0u))
 550              		.loc 1 479 0
 551 00f8 FA8A     		ldrh	r2, [r7, #22]
 552 00fa 7B8A     		ldrh	r3, [r7, #18]
 553 00fc 9A42     		cmp	r2, r3
 554 00fe 08D9     		bls	.L24
 555              		.loc 1 479 0 is_stmt 0 discriminator 1
 556 0100 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 557 0102 002B     		cmp	r3, #0
 558 0104 05D0     		beq	.L24
 480:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 481:Generated_Source\PSoC5/CapSense_CSHL.c ****         #if (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8)
 482:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Over flow defence for uint8 */
 483:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (tempRaw > 0xFFu)
 484:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 485:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = 0xFFu;
 486:Generated_Source\PSoC5/CapSense_CSHL.c ****             }    
 487:Generated_Source\PSoC5/CapSense_CSHL.c ****             else 
 488:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 489:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorSignal[sensor] = ((uint8) tempRaw);
 490:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
 491:Generated_Source\PSoC5/CapSense_CSHL.c ****         #else
 492:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorSignal[sensor] = ((uint16) tempRaw);
 559              		.loc 1 492 0 is_stmt 1
 560 0106 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 561 0108 0C49     		ldr	r1, .L26+24
 562 010a FA8A     		ldrh	r2, [r7, #22]	@ movhi
 563 010c 21F81320 		strh	r2, [r1, r3, lsl #1]	@ movhi
 564 0110 04E0     		b	.L25
 565              	.L24:
 493:Generated_Source\PSoC5/CapSense_CSHL.c ****         #endif  /* (CapSense_SIGNAL_SIZE == CapSense_SIGNAL_SIZE_UINT8) */
 494:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 495:Generated_Source\PSoC5/CapSense_CSHL.c ****     else
 496:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 497:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Signal is zero */
 498:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorSignal[sensor] = 0u;
 566              		.loc 1 498 0
 567 0112 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 568 0114 094A     		ldr	r2, .L26+24
 569 0116 0021     		movs	r1, #0
 570 0118 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
 571              	.L25:
 499:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 500:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 501:Generated_Source\PSoC5/CapSense_CSHL.c ****     #if (CapSense_TOTAL_GENERICS_COUNT)
 502:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Exclude generic widget */
 503:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 504:Generated_Source\PSoC5/CapSense_CSHL.c ****     #endif  /* CapSense_TOTAL_GENERICS_COUNT */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 20


 505:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 572              		.loc 1 505 0
 573 011c 00BF     		nop
 574 011e 1837     		adds	r7, r7, #24
 575              		.cfi_def_cfa_offset 8
 576 0120 BD46     		mov	sp, r7
 577              		.cfi_def_cfa_register 13
 578              		@ sp needed
 579 0122 80BD     		pop	{r7, pc}
 580              	.L27:
 581              		.align	2
 582              	.L26:
 583 0124 00000000 		.word	CapSense_widgetNumber
 584 0128 00000000 		.word	CapSense_noiseThreshold
 585 012c 00000000 		.word	CapSense_sensorRaw
 586 0130 00000000 		.word	CapSense_sensorBaseline
 587 0134 00000000 		.word	CapSense_lowBaselineResetCnt
 588 0138 00000000 		.word	CapSense_sensorBaselineLow
 589 013c 00000000 		.word	CapSense_sensorSignal
 590              		.cfi_endproc
 591              	.LFE4:
 592              		.size	CapSense_UpdateSensorBaseline, .-CapSense_UpdateSensorBaseline
 593              		.section	.text.CapSense_UpdateEnabledBaselines,"ax",%progbits
 594              		.align	2
 595              		.global	CapSense_UpdateEnabledBaselines
 596              		.thumb
 597              		.thumb_func
 598              		.type	CapSense_UpdateEnabledBaselines, %function
 599              	CapSense_UpdateEnabledBaselines:
 600              	.LFB5:
 506:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 507:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 508:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 509:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_UpdateEnabledBaselines
 510:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 511:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 512:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 513:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Checks CapSense_sensorEnableMask[] array and calls the 
 514:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_UpdateSensorBaseline function to update the baselines 
 515:Generated_Source\PSoC5/CapSense_CSHL.c **** *  for enabled sensors.
 516:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 517:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 518:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 519:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 520:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 521:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 522:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 523:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 524:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 525:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 526:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 527:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 528:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 529:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 530:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 531:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 532:Generated_Source\PSoC5/CapSense_CSHL.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 21


 533:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 534:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 535:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 536:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 537:Generated_Source\PSoC5/CapSense_CSHL.c ****  void CapSense_UpdateEnabledBaselines(void)
 538:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 539:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 601              		.loc 1 539 0
 602              		.cfi_startproc
 603              		@ args = 0, pretend = 0, frame = 8
 604              		@ frame_needed = 1, uses_anonymous_args = 0
 605 0000 80B5     		push	{r7, lr}
 606              		.cfi_def_cfa_offset 8
 607              		.cfi_offset 7, -8
 608              		.cfi_offset 14, -4
 609 0002 82B0     		sub	sp, sp, #8
 610              		.cfi_def_cfa_offset 16
 611 0004 00AF     		add	r7, sp, #0
 612              		.cfi_def_cfa_register 7
 540:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 541:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 542:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 543:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 544:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 613              		.loc 1 544 0
 614 0006 0023     		movs	r3, #0
 615 0008 FB71     		strb	r3, [r7, #7]
 616 000a 18E0     		b	.L29
 617              	.L31:
 545:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 546:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (i >> 3u);
 618              		.loc 1 546 0
 619 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 620 000e DB08     		lsrs	r3, r3, #3
 621 0010 BB71     		strb	r3, [r7, #6]
 547:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = (uint8)(0x01u << (i & 0x07u));
 622              		.loc 1 547 0
 623 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 624 0014 03F00703 		and	r3, r3, #7
 625 0018 0122     		movs	r2, #1
 626 001a 02FA03F3 		lsl	r3, r2, r3
 627 001e 7B71     		strb	r3, [r7, #5]
 548:Generated_Source\PSoC5/CapSense_CSHL.c ****         if((CapSense_sensorEnableMask[pos] & enMask) != 0u)
 628              		.loc 1 548 0
 629 0020 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 630 0022 0A4A     		ldr	r2, .L32
 631 0024 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 632 0026 7B79     		ldrb	r3, [r7, #5]
 633 0028 1340     		ands	r3, r3, r2
 634 002a DBB2     		uxtb	r3, r3
 635 002c 002B     		cmp	r3, #0
 636 002e 03D0     		beq	.L30
 549:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 550:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_UpdateSensorBaseline(i);
 637              		.loc 1 550 0
 638 0030 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 639 0032 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 22


 640 0034 FFF7FEFF 		bl	CapSense_UpdateSensorBaseline
 641              	.L30:
 544:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 642              		.loc 1 544 0 discriminator 2
 643 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 644 003a 0133     		adds	r3, r3, #1
 645 003c FB71     		strb	r3, [r7, #7]
 646              	.L29:
 544:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 647              		.loc 1 544 0 is_stmt 0 discriminator 1
 648 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 649 0040 092B     		cmp	r3, #9
 650 0042 E3D9     		bls	.L31
 551:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 552:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 553:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 651              		.loc 1 553 0 is_stmt 1
 652 0044 00BF     		nop
 653 0046 0837     		adds	r7, r7, #8
 654              		.cfi_def_cfa_offset 8
 655 0048 BD46     		mov	sp, r7
 656              		.cfi_def_cfa_register 13
 657              		@ sp needed
 658 004a 80BD     		pop	{r7, pc}
 659              	.L33:
 660              		.align	2
 661              	.L32:
 662 004c 00000000 		.word	CapSense_sensorEnableMask
 663              		.cfi_endproc
 664              	.LFE5:
 665              		.size	CapSense_UpdateEnabledBaselines, .-CapSense_UpdateEnabledBaselines
 666              		.section	.text.CapSense_CheckIsSensorActive,"ax",%progbits
 667              		.align	2
 668              		.global	CapSense_CheckIsSensorActive
 669              		.thumb
 670              		.thumb_func
 671              		.type	CapSense_CheckIsSensorActive, %function
 672              	CapSense_CheckIsSensorActive:
 673              	.LFB6:
 554:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 555:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 556:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 557:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsSensorActive
 558:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 559:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 560:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 561:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares the CapSense_SensorSignal[sensor] array element to finger
 562:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold of widget it belongs to. The hysteresis and debounce are taken into 
 563:Generated_Source\PSoC5/CapSense_CSHL.c **** *  account. The hysteresis is added or subtracted from the finger threshold 
 564:Generated_Source\PSoC5/CapSense_CSHL.c **** *  based on whether the sensor is currently active. 
 565:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is active, the threshold is lowered by the hysteresis amount.
 566:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If the sensor is inactive, the threshold is raised by the hysteresis amount.
 567:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The debounce counter added to the sensor active transition.
 568:Generated_Source\PSoC5/CapSense_CSHL.c **** *  This function updates CapSense_SensorOnMask[] array element.
 569:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 570:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 571:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensor:  Sensor number.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 23


 572:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 573:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 574:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns sensor state 1 if active, 0 if not active.
 575:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 576:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 577:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorSignal[]      - used to store diffence between 
 578:Generated_Source\PSoC5/CapSense_CSHL.c **** *  current value of raw data and previous value of baseline.
 579:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_debounceCounter[]   - used to store current debounce 
 580:Generated_Source\PSoC5/CapSense_CSHL.c **** *  counter of sensor. Widget which has this parameter are buttons, matrix 
 581:Generated_Source\PSoC5/CapSense_CSHL.c **** *  buttons, proximity, guard. All other widgets haven't debounce parameter
 582:Generated_Source\PSoC5/CapSense_CSHL.c **** *  and use the last element of this array with value 0 (it means no debounce).
 583:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] - used to store sensors on/off state.
 584:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[0] contains the masked bits for sensors 
 585:Generated_Source\PSoC5/CapSense_CSHL.c **** *   0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 586:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 587:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 588:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor is inactive.
 589:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor is active.
 590:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 591:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 592:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 593:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 594:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 595:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsSensorActive(uint8 sensor)
 596:Generated_Source\PSoC5/CapSense_CSHL.c ****                                   
 597:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 674              		.loc 1 597 0
 675              		.cfi_startproc
 676              		@ args = 0, pretend = 0, frame = 24
 677              		@ frame_needed = 1, uses_anonymous_args = 0
 678              		@ link register save eliminated.
 679 0000 80B4     		push	{r7}
 680              		.cfi_def_cfa_offset 4
 681              		.cfi_offset 7, -4
 682 0002 87B0     		sub	sp, sp, #28
 683              		.cfi_def_cfa_offset 32
 684 0004 00AF     		add	r7, sp, #0
 685              		.cfi_def_cfa_register 7
 686 0006 0346     		mov	r3, r0
 687 0008 FB71     		strb	r3, [r7, #7]
 598:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounceIndex;
 599:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Get On/Off mask */
 600:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos = (sensor >> 3u);
 688              		.loc 1 600 0
 689 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 690 000c DB08     		lsrs	r3, r3, #3
 691 000e FB75     		strb	r3, [r7, #23]
 601:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 onMask = 0x01u << (sensor & 0x07u);
 692              		.loc 1 601 0
 693 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 694 0012 03F00703 		and	r3, r3, #7
 695 0016 0122     		movs	r2, #1
 696 0018 02FA03F3 		lsl	r3, r2, r3
 697 001c BB75     		strb	r3, [r7, #22]
 602:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Prepare to find debounce counter index */
 603:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 widget = CapSense_widgetNumber[sensor];
 698              		.loc 1 603 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 24


 699 001e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 700 0020 344A     		ldr	r2, .L43
 701 0022 D35C     		ldrb	r3, [r2, r3]
 702 0024 7B75     		strb	r3, [r7, #21]
 604:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 fingerThreshold = CapSense_fingerThreshold[widget];
 703              		.loc 1 604 0
 704 0026 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 705 0028 334A     		ldr	r2, .L43+4
 706 002a 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 707 002e 7B82     		strh	r3, [r7, #18]	@ movhi
 605:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint16 hysteresis = CapSense_hysteresis[widget];
 708              		.loc 1 605 0
 709 0030 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 710 0032 324A     		ldr	r2, .L43+8
 711 0034 32F81330 		ldrh	r3, [r2, r3, lsl #1]	@ movhi
 712 0038 3B82     		strh	r3, [r7, #16]	@ movhi
 606:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 debounce = CapSense_debounce[widget];
 713              		.loc 1 606 0
 714 003a 7B7D     		ldrb	r3, [r7, #21]	@ zero_extendqisi2
 715 003c 304A     		ldr	r2, .L43+12
 716 003e D35C     		ldrb	r3, [r2, r3]
 717 0040 FB73     		strb	r3, [r7, #15]
 607:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 608:Generated_Source\PSoC5/CapSense_CSHL.c ****     debounceIndex = widget;
 718              		.loc 1 608 0
 719 0042 7B7D     		ldrb	r3, [r7, #21]
 720 0044 BB73     		strb	r3, [r7, #14]
 609:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 610:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 611:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Was on */
 612:Generated_Source\PSoC5/CapSense_CSHL.c ****     if (0u != (CapSense_sensorOnMask[pos] & onMask))
 721              		.loc 1 612 0
 722 0046 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 723 0048 2E4A     		ldr	r2, .L43+16
 724 004a D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 725 004c BB7D     		ldrb	r3, [r7, #22]
 726 004e 1340     		ands	r3, r3, r2
 727 0050 DBB2     		uxtb	r3, r3
 728 0052 002B     		cmp	r3, #0
 729 0054 19D0     		beq	.L35
 613:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 614:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis minus */
 615:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] < (fingerThreshold - hysteresis))
 730              		.loc 1 615 0
 731 0056 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 732 0058 2B4A     		ldr	r2, .L43+20
 733 005a 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 734 005e 1946     		mov	r1, r3
 735 0060 7A8A     		ldrh	r2, [r7, #18]
 736 0062 3B8A     		ldrh	r3, [r7, #16]
 737 0064 D31A     		subs	r3, r2, r3
 738 0066 9942     		cmp	r1, r3
 739 0068 33DA     		bge	.L37
 616:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 617:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_sensorOnMask[pos] &= (uint8)~onMask;
 740              		.loc 1 617 0
 741 006a FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 25


 742 006c FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 743 006e 2549     		ldr	r1, .L43+16
 744 0070 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 745 0072 BA7D     		ldrb	r2, [r7, #22]
 746 0074 D243     		mvns	r2, r2
 747 0076 D2B2     		uxtb	r2, r2
 748 0078 0A40     		ands	r2, r2, r1
 749 007a D1B2     		uxtb	r1, r2
 750 007c 214A     		ldr	r2, .L43+16
 751 007e D154     		strb	r1, [r2, r3]
 618:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce; 
 752              		.loc 1 618 0
 753 0080 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 754 0082 2249     		ldr	r1, .L43+24
 755 0084 FA7B     		ldrb	r2, [r7, #15]
 756 0086 CA54     		strb	r2, [r1, r3]
 757 0088 23E0     		b	.L37
 758              	.L35:
 619:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 620:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 621:Generated_Source\PSoC5/CapSense_CSHL.c ****     else    /* Was off */
 622:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 623:Generated_Source\PSoC5/CapSense_CSHL.c ****         /* Hysteresis plus */
 624:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_sensorSignal[sensor] > (fingerThreshold + hysteresis))
 759              		.loc 1 624 0
 760 008a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 761 008c 1E4A     		ldr	r2, .L43+20
 762 008e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
 763 0092 1946     		mov	r1, r3
 764 0094 7A8A     		ldrh	r2, [r7, #18]
 765 0096 3B8A     		ldrh	r3, [r7, #16]
 766 0098 1344     		add	r3, r3, r2
 767 009a 9942     		cmp	r1, r3
 768 009c 15DD     		ble	.L38
 625:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 626:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor active, decrement debounce counter */
 627:Generated_Source\PSoC5/CapSense_CSHL.c ****             if (CapSense_debounceCounter[debounceIndex] <= 1u)
 769              		.loc 1 627 0
 770 009e BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 771 00a0 1A4A     		ldr	r2, .L43+24
 772 00a2 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 773 00a4 012B     		cmp	r3, #1
 774 00a6 08D8     		bhi	.L39
 628:Generated_Source\PSoC5/CapSense_CSHL.c ****             {
 629:Generated_Source\PSoC5/CapSense_CSHL.c ****                 CapSense_sensorOnMask[pos] |= onMask; 
 775              		.loc 1 629 0
 776 00a8 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 777 00aa FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 778 00ac 1549     		ldr	r1, .L43+16
 779 00ae 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 780 00b0 BA7D     		ldrb	r2, [r7, #22]
 781 00b2 0A43     		orrs	r2, r2, r1
 782 00b4 D1B2     		uxtb	r1, r2
 783 00b6 134A     		ldr	r2, .L43+16
 784 00b8 D154     		strb	r1, [r2, r3]
 785              	.L39:
 630:Generated_Source\PSoC5/CapSense_CSHL.c ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 26


 631:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex]--;
 786              		.loc 1 631 0
 787 00ba BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 788 00bc 134A     		ldr	r2, .L43+24
 789 00be D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 790 00c0 013A     		subs	r2, r2, #1
 791 00c2 D1B2     		uxtb	r1, r2
 792 00c4 114A     		ldr	r2, .L43+24
 793 00c6 D154     		strb	r1, [r2, r3]
 794 00c8 03E0     		b	.L37
 795              	.L38:
 632:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 633:Generated_Source\PSoC5/CapSense_CSHL.c ****         else
 634:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 635:Generated_Source\PSoC5/CapSense_CSHL.c ****             /* Sensor inactive - reset Debounce counter */
 636:Generated_Source\PSoC5/CapSense_CSHL.c ****             CapSense_debounceCounter[debounceIndex] = debounce;
 796              		.loc 1 636 0
 797 00ca BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 798 00cc 0F49     		ldr	r1, .L43+24
 799 00ce FA7B     		ldrb	r2, [r7, #15]
 800 00d0 CA54     		strb	r2, [r1, r3]
 801              	.L37:
 637:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 638:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 639:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 640:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (((CapSense_sensorOnMask[pos] & onMask) != 0u) ? 1u : 0u);
 802              		.loc 1 640 0
 803 00d2 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 804 00d4 0B4A     		ldr	r2, .L43+16
 805 00d6 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 806 00d8 BB7D     		ldrb	r3, [r7, #22]
 807 00da 1340     		ands	r3, r3, r2
 808 00dc DBB2     		uxtb	r3, r3
 809 00de 002B     		cmp	r3, #0
 810 00e0 01D0     		beq	.L40
 811              		.loc 1 640 0 is_stmt 0 discriminator 1
 812 00e2 0123     		movs	r3, #1
 813 00e4 00E0     		b	.L41
 814              	.L40:
 815              		.loc 1 640 0 discriminator 2
 816 00e6 0023     		movs	r3, #0
 817              	.L41:
 641:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 818              		.loc 1 641 0 is_stmt 1 discriminator 4
 819 00e8 1846     		mov	r0, r3
 820 00ea 1C37     		adds	r7, r7, #28
 821              		.cfi_def_cfa_offset 4
 822 00ec BD46     		mov	sp, r7
 823              		.cfi_def_cfa_register 13
 824              		@ sp needed
 825 00ee 80BC     		pop	{r7}
 826              		.cfi_restore 7
 827              		.cfi_def_cfa_offset 0
 828 00f0 7047     		bx	lr
 829              	.L44:
 830 00f2 00BF     		.align	2
 831              	.L43:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 27


 832 00f4 00000000 		.word	CapSense_widgetNumber
 833 00f8 00000000 		.word	CapSense_fingerThreshold
 834 00fc 00000000 		.word	CapSense_hysteresis
 835 0100 00000000 		.word	CapSense_debounce
 836 0104 00000000 		.word	CapSense_sensorOnMask
 837 0108 00000000 		.word	CapSense_sensorSignal
 838 010c 00000000 		.word	CapSense_debounceCounter
 839              		.cfi_endproc
 840              	.LFE6:
 841              		.size	CapSense_CheckIsSensorActive, .-CapSense_CheckIsSensorActive
 842              		.section	.text.CapSense_CheckIsWidgetActive,"ax",%progbits
 843              		.align	2
 844              		.global	CapSense_CheckIsWidgetActive
 845              		.thumb
 846              		.thumb_func
 847              		.type	CapSense_CheckIsWidgetActive, %function
 848              	CapSense_CheckIsWidgetActive:
 849              	.LFB7:
 642:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 643:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 644:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 645:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsWidgetActive
 646:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 647:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 648:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 649:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Use function CapSense_CheckIsSensorActive() to update 
 650:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorOnMask[] for all sensors within the widget.
 651:Generated_Source\PSoC5/CapSense_CSHL.c **** *  If one of sensors within widget is active the function return that widget is 
 652:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active.
 653:Generated_Source\PSoC5/CapSense_CSHL.c **** *  The touch pad and matrix buttons widgets need to have active sensor within 
 654:Generated_Source\PSoC5/CapSense_CSHL.c **** *  col and row to return widget active status.
 655:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 656:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 657:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 658:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 659:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 660:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns widget sensor state 1 if one or more sensors within widget is/are 
 661:Generated_Source\PSoC5/CapSense_CSHL.c **** *  active, 0 if all sensors within widget are inactive.
 662:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 663:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 664:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 665:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 666:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 667:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsWidgetActive(uint8 widget)
 668:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 669:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 850              		.loc 1 669 0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 16
 853              		@ frame_needed = 1, uses_anonymous_args = 0
 854 0000 80B5     		push	{r7, lr}
 855              		.cfi_def_cfa_offset 8
 856              		.cfi_offset 7, -8
 857              		.cfi_offset 14, -4
 858 0002 84B0     		sub	sp, sp, #16
 859              		.cfi_def_cfa_offset 24
 860 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 28


 861              		.cfi_def_cfa_register 7
 862 0006 0346     		mov	r3, r0
 863 0008 FB71     		strb	r3, [r7, #7]
 670:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 864              		.loc 1 670 0
 865 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 866 000c 0F4A     		ldr	r2, .L49
 867 000e D35C     		ldrb	r3, [r2, r3]
 868 0010 FB73     		strb	r3, [r7, #15]
 671:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 869              		.loc 1 671 0
 870 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 871 0014 0E4A     		ldr	r2, .L49+4
 872 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 873 0018 FB7B     		ldrb	r3, [r7, #15]
 874 001a 1344     		add	r3, r3, r2
 875 001c 7B73     		strb	r3, [r7, #13]
 672:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 876              		.loc 1 672 0
 877 001e 0023     		movs	r3, #0
 878 0020 BB73     		strb	r3, [r7, #14]
 879              	.L47:
 673:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 674:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Check all sensors of the widget */
 675:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 676:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 677:Generated_Source\PSoC5/CapSense_CSHL.c ****         if(CapSense_CheckIsSensorActive(rawIndex) != 0u)
 880              		.loc 1 677 0
 881 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 882 0024 1846     		mov	r0, r3
 883 0026 FFF7FEFF 		bl	CapSense_CheckIsSensorActive
 884 002a 0346     		mov	r3, r0
 885 002c 002B     		cmp	r3, #0
 886 002e 01D0     		beq	.L46
 678:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 679:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_SENSOR_1_IS_ACTIVE;
 887              		.loc 1 679 0
 888 0030 0123     		movs	r3, #1
 889 0032 BB73     		strb	r3, [r7, #14]
 890              	.L46:
 680:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 681:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 891              		.loc 1 681 0
 892 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 893 0036 0133     		adds	r3, r3, #1
 894 0038 FB73     		strb	r3, [r7, #15]
 682:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 683:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 895              		.loc 1 683 0
 896 003a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 897 003c 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 898 003e 9A42     		cmp	r2, r3
 899 0040 EFD3     		bcc	.L47
 684:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 685:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 686:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 687:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 29


 900              		.loc 1 687 0
 901 0042 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 688:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 902              		.loc 1 688 0
 903 0044 1846     		mov	r0, r3
 904 0046 1037     		adds	r7, r7, #16
 905              		.cfi_def_cfa_offset 8
 906 0048 BD46     		mov	sp, r7
 907              		.cfi_def_cfa_register 13
 908              		@ sp needed
 909 004a 80BD     		pop	{r7, pc}
 910              	.L50:
 911              		.align	2
 912              	.L49:
 913 004c 00000000 		.word	CapSense_rawDataIndex
 914 0050 00000000 		.word	CapSense_numberOfSensors
 915              		.cfi_endproc
 916              	.LFE7:
 917              		.size	CapSense_CheckIsWidgetActive, .-CapSense_CheckIsWidgetActive
 918              		.section	.text.CapSense_CheckIsAnyWidgetActive,"ax",%progbits
 919              		.align	2
 920              		.global	CapSense_CheckIsAnyWidgetActive
 921              		.thumb
 922              		.thumb_func
 923              		.type	CapSense_CheckIsAnyWidgetActive, %function
 924              	CapSense_CheckIsAnyWidgetActive:
 925              	.LFB8:
 689:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 690:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 691:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 692:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_CheckIsAnyWidgetActive
 693:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 694:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 695:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 696:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Compares all sensors of the CapSense_signal[] array to their finger 
 697:Generated_Source\PSoC5/CapSense_CSHL.c **** *  threshold. Calls CapSense_CheckIsWidgetActive() for each widget so 
 698:Generated_Source\PSoC5/CapSense_CSHL.c **** *  the CapSense_SensorOnMask[] array is up to date after calling this 
 699:Generated_Source\PSoC5/CapSense_CSHL.c **** *  function.
 700:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 701:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 702:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 703:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 704:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 705:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Returns 1 if any widget is active, 0 none of widgets are active.
 706:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 707:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 708:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 709:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 710:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 711:Generated_Source\PSoC5/CapSense_CSHL.c **** uint8 CapSense_CheckIsAnyWidgetActive(void)
 712:Generated_Source\PSoC5/CapSense_CSHL.c ****                                  
 713:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 926              		.loc 1 713 0
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 8
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 30


 931              		.cfi_def_cfa_offset 8
 932              		.cfi_offset 7, -8
 933              		.cfi_offset 14, -4
 934 0002 82B0     		sub	sp, sp, #8
 935              		.cfi_def_cfa_offset 16
 936 0004 00AF     		add	r7, sp, #0
 937              		.cfi_def_cfa_register 7
 714:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 i;
 715:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 state = 0u;
 938              		.loc 1 715 0
 939 0006 0023     		movs	r3, #0
 940 0008 BB71     		strb	r3, [r7, #6]
 716:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 717:Generated_Source\PSoC5/CapSense_CSHL.c ****     for(i = 0u; i < CapSense_TOTAL_WIDGET_COUNT; i++)
 941              		.loc 1 717 0
 942 000a 0023     		movs	r3, #0
 943 000c FB71     		strb	r3, [r7, #7]
 944 000e 0BE0     		b	.L52
 945              	.L54:
 718:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 719:Generated_Source\PSoC5/CapSense_CSHL.c ****         if (CapSense_CheckIsWidgetActive(i) != 0u)
 946              		.loc 1 719 0
 947 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 948 0012 1846     		mov	r0, r3
 949 0014 FFF7FEFF 		bl	CapSense_CheckIsWidgetActive
 950 0018 0346     		mov	r3, r0
 951 001a 002B     		cmp	r3, #0
 952 001c 01D0     		beq	.L53
 720:Generated_Source\PSoC5/CapSense_CSHL.c ****         {
 721:Generated_Source\PSoC5/CapSense_CSHL.c ****             state = CapSense_WIDGET_IS_ACTIVE;
 953              		.loc 1 721 0
 954 001e 0123     		movs	r3, #1
 955 0020 BB71     		strb	r3, [r7, #6]
 956              	.L53:
 717:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 957              		.loc 1 717 0 discriminator 2
 958 0022 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 959 0024 0133     		adds	r3, r3, #1
 960 0026 FB71     		strb	r3, [r7, #7]
 961              	.L52:
 717:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 962              		.loc 1 717 0 is_stmt 0 discriminator 1
 963 0028 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 964 002a 092B     		cmp	r3, #9
 965 002c F0D9     		bls	.L54
 722:Generated_Source\PSoC5/CapSense_CSHL.c ****         }
 723:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 724:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 725:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 726:Generated_Source\PSoC5/CapSense_CSHL.c ****     return (state);
 966              		.loc 1 726 0 is_stmt 1
 967 002e BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 727:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 968              		.loc 1 727 0
 969 0030 1846     		mov	r0, r3
 970 0032 0837     		adds	r7, r7, #8
 971              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 31


 972 0034 BD46     		mov	sp, r7
 973              		.cfi_def_cfa_register 13
 974              		@ sp needed
 975 0036 80BD     		pop	{r7, pc}
 976              		.cfi_endproc
 977              	.LFE8:
 978              		.size	CapSense_CheckIsAnyWidgetActive, .-CapSense_CheckIsAnyWidgetActive
 979              		.section	.text.CapSense_EnableWidget,"ax",%progbits
 980              		.align	2
 981              		.global	CapSense_EnableWidget
 982              		.thumb
 983              		.thumb_func
 984              		.type	CapSense_EnableWidget, %function
 985              	CapSense_EnableWidget:
 986              	.LFB9:
 728:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 729:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 730:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 731:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_EnableWidget
 732:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 733:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 734:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 735:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Enable all widget elements (sensors) to scanning process.
 736:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 737:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 738:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 739:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 740:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 741:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 742:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 743:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 744:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 745:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 746:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 747:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 748:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 749:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
 750:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 751:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 752:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 753:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 754:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 755:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 756:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 757:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_EnableWidget(uint8 widget)
 758:Generated_Source\PSoC5/CapSense_CSHL.c ****                                    
 759:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 987              		.loc 1 759 0
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 16
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 80B4     		push	{r7}
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 7, -4
 995 0002 85B0     		sub	sp, sp, #20
 996              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 32


 997 0004 00AF     		add	r7, sp, #0
 998              		.cfi_def_cfa_register 7
 999 0006 0346     		mov	r3, r0
 1000 0008 FB71     		strb	r3, [r7, #7]
 760:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 761:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 762:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1001              		.loc 1 762 0
 1002 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1003 000c 134A     		ldr	r2, .L58
 1004 000e D35C     		ldrb	r3, [r2, r3]
 1005 0010 FB73     		strb	r3, [r7, #15]
 763:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1006              		.loc 1 763 0
 1007 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1008 0014 124A     		ldr	r2, .L58+4
 1009 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1010 0018 FB7B     		ldrb	r3, [r7, #15]
 1011 001a 1344     		add	r3, r3, r2
 1012 001c BB73     		strb	r3, [r7, #14]
 1013              	.L57:
 764:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 765:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Enable all sensors of the widget */
 766:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 767:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 768:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1014              		.loc 1 768 0 discriminator 1
 1015 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1016 0020 DB08     		lsrs	r3, r3, #3
 1017 0022 7B73     		strb	r3, [r7, #13]
 769:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1018              		.loc 1 769 0 discriminator 1
 1019 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1020 0026 03F00703 		and	r3, r3, #7
 1021 002a 0122     		movs	r2, #1
 1022 002c 02FA03F3 		lsl	r3, r2, r3
 1023 0030 3B73     		strb	r3, [r7, #12]
 770:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 771:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] |= enMask;
 1024              		.loc 1 771 0 discriminator 1
 1025 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1026 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1027 0036 0B49     		ldr	r1, .L58+8
 1028 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1029 003a 3A7B     		ldrb	r2, [r7, #12]
 1030 003c 0A43     		orrs	r2, r2, r1
 1031 003e D1B2     		uxtb	r1, r2
 1032 0040 084A     		ldr	r2, .L58+8
 1033 0042 D154     		strb	r1, [r2, r3]
 772:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1034              		.loc 1 772 0 discriminator 1
 1035 0044 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1036 0046 0133     		adds	r3, r3, #1
 1037 0048 FB73     		strb	r3, [r7, #15]
 773:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 774:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1038              		.loc 1 774 0 discriminator 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 33


 1039 004a FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1040 004c BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1041 004e 9A42     		cmp	r2, r3
 1042 0050 E5D3     		bcc	.L57
 775:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 776:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 777:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1043              		.loc 1 777 0
 1044 0052 00BF     		nop
 1045 0054 1437     		adds	r7, r7, #20
 1046              		.cfi_def_cfa_offset 4
 1047 0056 BD46     		mov	sp, r7
 1048              		.cfi_def_cfa_register 13
 1049              		@ sp needed
 1050 0058 80BC     		pop	{r7}
 1051              		.cfi_restore 7
 1052              		.cfi_def_cfa_offset 0
 1053 005a 7047     		bx	lr
 1054              	.L59:
 1055              		.align	2
 1056              	.L58:
 1057 005c 00000000 		.word	CapSense_rawDataIndex
 1058 0060 00000000 		.word	CapSense_numberOfSensors
 1059 0064 00000000 		.word	CapSense_sensorEnableMask
 1060              		.cfi_endproc
 1061              	.LFE9:
 1062              		.size	CapSense_EnableWidget, .-CapSense_EnableWidget
 1063              		.section	.text.CapSense_DisableWidget,"ax",%progbits
 1064              		.align	2
 1065              		.global	CapSense_DisableWidget
 1066              		.thumb
 1067              		.thumb_func
 1068              		.type	CapSense_DisableWidget, %function
 1069              	CapSense_DisableWidget:
 1070              	.LFB10:
 778:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 779:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 780:Generated_Source\PSoC5/CapSense_CSHL.c **** /*******************************************************************************
 781:Generated_Source\PSoC5/CapSense_CSHL.c **** * Function Name: CapSense_DisableWidget
 782:Generated_Source\PSoC5/CapSense_CSHL.c **** ********************************************************************************
 783:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 784:Generated_Source\PSoC5/CapSense_CSHL.c **** * Summary:
 785:Generated_Source\PSoC5/CapSense_CSHL.c **** *  Disable all widget elements (sensors) from scanning process.
 786:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 787:Generated_Source\PSoC5/CapSense_CSHL.c **** * Parameters:
 788:Generated_Source\PSoC5/CapSense_CSHL.c **** *  widget:  widget number.
 789:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 790:Generated_Source\PSoC5/CapSense_CSHL.c **** * Return:
 791:Generated_Source\PSoC5/CapSense_CSHL.c **** *  None
 792:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 793:Generated_Source\PSoC5/CapSense_CSHL.c **** * Global Variables:
 794:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[] - used to store the sensor scanning 
 795:Generated_Source\PSoC5/CapSense_CSHL.c **** *  state.
 796:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 
 797:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 798:Generated_Source\PSoC5/CapSense_CSHL.c **** *  CapSense_sensorEnableMask[1] contains the masked bits for 
 799:Generated_Source\PSoC5/CapSense_CSHL.c **** *  sensors 8 through 15 (if needed), and so on.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 34


 800:Generated_Source\PSoC5/CapSense_CSHL.c **** *  0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 801:Generated_Source\PSoC5/CapSense_CSHL.c **** *  1 - sensor scans by CapSense_ScanEnabledWidgets().
 802:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 803:Generated_Source\PSoC5/CapSense_CSHL.c **** * Reentrant:
 804:Generated_Source\PSoC5/CapSense_CSHL.c **** *  No
 805:Generated_Source\PSoC5/CapSense_CSHL.c **** *
 806:Generated_Source\PSoC5/CapSense_CSHL.c **** *******************************************************************************/
 807:Generated_Source\PSoC5/CapSense_CSHL.c **** void CapSense_DisableWidget(uint8 widget)
 808:Generated_Source\PSoC5/CapSense_CSHL.c ****                                     
 809:Generated_Source\PSoC5/CapSense_CSHL.c **** {
 1071              		.loc 1 809 0
 1072              		.cfi_startproc
 1073              		@ args = 0, pretend = 0, frame = 16
 1074              		@ frame_needed = 1, uses_anonymous_args = 0
 1075              		@ link register save eliminated.
 1076 0000 80B4     		push	{r7}
 1077              		.cfi_def_cfa_offset 4
 1078              		.cfi_offset 7, -4
 1079 0002 85B0     		sub	sp, sp, #20
 1080              		.cfi_def_cfa_offset 24
 1081 0004 00AF     		add	r7, sp, #0
 1082              		.cfi_def_cfa_register 7
 1083 0006 0346     		mov	r3, r0
 1084 0008 FB71     		strb	r3, [r7, #7]
 810:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 pos;
 811:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 enMask;
 812:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 rawIndex = CapSense_rawDataIndex[widget];
 1085              		.loc 1 812 0
 1086 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1087 000c 144A     		ldr	r2, .L62
 1088 000e D35C     		ldrb	r3, [r2, r3]
 1089 0010 FB73     		strb	r3, [r7, #15]
 813:Generated_Source\PSoC5/CapSense_CSHL.c ****     uint8 numberOfSensors = CapSense_numberOfSensors[widget] + rawIndex;
 1090              		.loc 1 813 0
 1091 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1092 0014 134A     		ldr	r2, .L62+4
 1093 0016 D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 1094 0018 FB7B     		ldrb	r3, [r7, #15]
 1095 001a 1344     		add	r3, r3, r2
 1096 001c BB73     		strb	r3, [r7, #14]
 1097              	.L61:
 814:Generated_Source\PSoC5/CapSense_CSHL.c ****    
 815:Generated_Source\PSoC5/CapSense_CSHL.c ****     /* Disable all sensors of the widget */
 816:Generated_Source\PSoC5/CapSense_CSHL.c ****     do
 817:Generated_Source\PSoC5/CapSense_CSHL.c ****     {
 818:Generated_Source\PSoC5/CapSense_CSHL.c ****         pos = (rawIndex >> 3u);
 1098              		.loc 1 818 0 discriminator 1
 1099 001e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1100 0020 DB08     		lsrs	r3, r3, #3
 1101 0022 7B73     		strb	r3, [r7, #13]
 819:Generated_Source\PSoC5/CapSense_CSHL.c ****         enMask = 0x01u << (rawIndex & 0x07u);
 1102              		.loc 1 819 0 discriminator 1
 1103 0024 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1104 0026 03F00703 		and	r3, r3, #7
 1105 002a 0122     		movs	r2, #1
 1106 002c 02FA03F3 		lsl	r3, r2, r3
 1107 0030 3B73     		strb	r3, [r7, #12]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 35


 820:Generated_Source\PSoC5/CapSense_CSHL.c ****         
 821:Generated_Source\PSoC5/CapSense_CSHL.c ****         CapSense_sensorEnableMask[pos] &= (uint8)~enMask;
 1108              		.loc 1 821 0 discriminator 1
 1109 0032 7B7B     		ldrb	r3, [r7, #13]	@ zero_extendqisi2
 1110 0034 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1111 0036 0C49     		ldr	r1, .L62+8
 1112 0038 895C     		ldrb	r1, [r1, r2]	@ zero_extendqisi2
 1113 003a 3A7B     		ldrb	r2, [r7, #12]
 1114 003c D243     		mvns	r2, r2
 1115 003e D2B2     		uxtb	r2, r2
 1116 0040 0A40     		ands	r2, r2, r1
 1117 0042 D1B2     		uxtb	r1, r2
 1118 0044 084A     		ldr	r2, .L62+8
 1119 0046 D154     		strb	r1, [r2, r3]
 822:Generated_Source\PSoC5/CapSense_CSHL.c ****         rawIndex++;
 1120              		.loc 1 822 0 discriminator 1
 1121 0048 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1122 004a 0133     		adds	r3, r3, #1
 1123 004c FB73     		strb	r3, [r7, #15]
 823:Generated_Source\PSoC5/CapSense_CSHL.c ****     }
 824:Generated_Source\PSoC5/CapSense_CSHL.c ****     while(rawIndex < numberOfSensors);
 1124              		.loc 1 824 0 discriminator 1
 1125 004e FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1126 0050 BB7B     		ldrb	r3, [r7, #14]	@ zero_extendqisi2
 1127 0052 9A42     		cmp	r2, r3
 1128 0054 E3D3     		bcc	.L61
 825:Generated_Source\PSoC5/CapSense_CSHL.c ****     
 826:Generated_Source\PSoC5/CapSense_CSHL.c **** 
 827:Generated_Source\PSoC5/CapSense_CSHL.c **** }
 1129              		.loc 1 827 0
 1130 0056 00BF     		nop
 1131 0058 1437     		adds	r7, r7, #20
 1132              		.cfi_def_cfa_offset 4
 1133 005a BD46     		mov	sp, r7
 1134              		.cfi_def_cfa_register 13
 1135              		@ sp needed
 1136 005c 80BC     		pop	{r7}
 1137              		.cfi_restore 7
 1138              		.cfi_def_cfa_offset 0
 1139 005e 7047     		bx	lr
 1140              	.L63:
 1141              		.align	2
 1142              	.L62:
 1143 0060 00000000 		.word	CapSense_rawDataIndex
 1144 0064 00000000 		.word	CapSense_numberOfSensors
 1145 0068 00000000 		.word	CapSense_sensorEnableMask
 1146              		.cfi_endproc
 1147              	.LFE10:
 1148              		.size	CapSense_DisableWidget, .-CapSense_DisableWidget
 1149              		.text
 1150              	.Letext0:
 1151              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1152              		.file 3 "Generated_Source\\PSoC5\\CapSense.h"
 1153              		.file 4 "Generated_Source\\PSoC5\\CapSense_CSHL.h"
 1154              		.section	.debug_info,"",%progbits
 1155              	.Ldebug_info0:
 1156 0000 57050000 		.4byte	0x557
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 36


 1157 0004 0400     		.2byte	0x4
 1158 0006 00000000 		.4byte	.Ldebug_abbrev0
 1159 000a 04       		.byte	0x4
 1160 000b 01       		.uleb128 0x1
 1161 000c 51000000 		.4byte	.LASF58
 1162 0010 0C       		.byte	0xc
 1163 0011 93040000 		.4byte	.LASF59
 1164 0015 4E020000 		.4byte	.LASF60
 1165 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1166 001d 00000000 		.4byte	0
 1167 0021 00000000 		.4byte	.Ldebug_line0
 1168 0025 02       		.uleb128 0x2
 1169 0026 01       		.byte	0x1
 1170 0027 06       		.byte	0x6
 1171 0028 5E010000 		.4byte	.LASF0
 1172 002c 02       		.uleb128 0x2
 1173 002d 01       		.byte	0x1
 1174 002e 08       		.byte	0x8
 1175 002f D2030000 		.4byte	.LASF1
 1176 0033 02       		.uleb128 0x2
 1177 0034 02       		.byte	0x2
 1178 0035 05       		.byte	0x5
 1179 0036 0F040000 		.4byte	.LASF2
 1180 003a 02       		.uleb128 0x2
 1181 003b 02       		.byte	0x2
 1182 003c 07       		.byte	0x7
 1183 003d AD020000 		.4byte	.LASF3
 1184 0041 02       		.uleb128 0x2
 1185 0042 04       		.byte	0x4
 1186 0043 05       		.byte	0x5
 1187 0044 A0010000 		.4byte	.LASF4
 1188 0048 02       		.uleb128 0x2
 1189 0049 04       		.byte	0x4
 1190 004a 07       		.byte	0x7
 1191 004b 0B020000 		.4byte	.LASF5
 1192 004f 02       		.uleb128 0x2
 1193 0050 08       		.byte	0x8
 1194 0051 05       		.byte	0x5
 1195 0052 50010000 		.4byte	.LASF6
 1196 0056 02       		.uleb128 0x2
 1197 0057 08       		.byte	0x8
 1198 0058 07       		.byte	0x7
 1199 0059 DF000000 		.4byte	.LASF7
 1200 005d 03       		.uleb128 0x3
 1201 005e 04       		.byte	0x4
 1202 005f 05       		.byte	0x5
 1203 0060 696E7400 		.ascii	"int\000"
 1204 0064 02       		.uleb128 0x2
 1205 0065 04       		.byte	0x4
 1206 0066 07       		.byte	0x7
 1207 0067 FE010000 		.4byte	.LASF8
 1208 006b 04       		.uleb128 0x4
 1209 006c C9010000 		.4byte	.LASF9
 1210 0070 02       		.byte	0x2
 1211 0071 E401     		.2byte	0x1e4
 1212 0073 2C000000 		.4byte	0x2c
 1213 0077 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 37


 1214 0078 00000000 		.4byte	.LASF10
 1215 007c 02       		.byte	0x2
 1216 007d E501     		.2byte	0x1e5
 1217 007f 3A000000 		.4byte	0x3a
 1218 0083 04       		.uleb128 0x4
 1219 0084 EC010000 		.4byte	.LASF11
 1220 0088 02       		.byte	0x2
 1221 0089 E601     		.2byte	0x1e6
 1222 008b 48000000 		.4byte	0x48
 1223 008f 02       		.uleb128 0x2
 1224 0090 04       		.byte	0x4
 1225 0091 04       		.byte	0x4
 1226 0092 AF030000 		.4byte	.LASF12
 1227 0096 02       		.uleb128 0x2
 1228 0097 08       		.byte	0x8
 1229 0098 04       		.byte	0x4
 1230 0099 CF010000 		.4byte	.LASF13
 1231 009d 02       		.uleb128 0x2
 1232 009e 01       		.byte	0x1
 1233 009f 08       		.byte	0x8
 1234 00a0 80040000 		.4byte	.LASF14
 1235 00a4 02       		.uleb128 0x2
 1236 00a5 08       		.byte	0x8
 1237 00a6 04       		.byte	0x4
 1238 00a7 2C030000 		.4byte	.LASF15
 1239 00ab 02       		.uleb128 0x2
 1240 00ac 04       		.byte	0x4
 1241 00ad 07       		.byte	0x7
 1242 00ae 0D030000 		.4byte	.LASF16
 1243 00b2 05       		.uleb128 0x5
 1244 00b3 27040000 		.4byte	.LASF17
 1245 00b7 01       		.byte	0x1
 1246 00b8 8B       		.byte	0x8b
 1247 00b9 00000000 		.4byte	.LFB0
 1248 00bd 68000000 		.4byte	.LFE0-.LFB0
 1249 00c1 01       		.uleb128 0x1
 1250 00c2 9C       		.byte	0x9c
 1251 00c3 E4000000 		.4byte	0xe4
 1252 00c7 06       		.uleb128 0x6
 1253 00c8 C0020000 		.4byte	.LASF19
 1254 00cc 01       		.byte	0x1
 1255 00cd 8B       		.byte	0x8b
 1256 00ce 6B000000 		.4byte	0x6b
 1257 00d2 02       		.uleb128 0x2
 1258 00d3 91       		.byte	0x91
 1259 00d4 6F       		.sleb128 -17
 1260 00d5 07       		.uleb128 0x7
 1261 00d6 19040000 		.4byte	.LASF21
 1262 00da 01       		.byte	0x1
 1263 00db 8F       		.byte	0x8f
 1264 00dc 6B000000 		.4byte	0x6b
 1265 00e0 02       		.uleb128 0x2
 1266 00e1 91       		.byte	0x91
 1267 00e2 77       		.sleb128 -9
 1268 00e3 00       		.byte	0
 1269 00e4 08       		.uleb128 0x8
 1270 00e5 38030000 		.4byte	.LASF18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 38


 1271 00e9 01       		.byte	0x1
 1272 00ea D4       		.byte	0xd4
 1273 00eb 00000000 		.4byte	.LFB1
 1274 00ef 2E000000 		.4byte	.LFE1-.LFB1
 1275 00f3 01       		.uleb128 0x1
 1276 00f4 9C       		.byte	0x9c
 1277 00f5 08010000 		.4byte	0x108
 1278 00f9 06       		.uleb128 0x6
 1279 00fa C0020000 		.4byte	.LASF19
 1280 00fe 01       		.byte	0x1
 1281 00ff D4       		.byte	0xd4
 1282 0100 6B000000 		.4byte	0x6b
 1283 0104 02       		.uleb128 0x2
 1284 0105 91       		.byte	0x91
 1285 0106 77       		.sleb128 -9
 1286 0107 00       		.byte	0
 1287 0108 09       		.uleb128 0x9
 1288 0109 E0030000 		.4byte	.LASF20
 1289 010d 01       		.byte	0x1
 1290 010e 0801     		.2byte	0x108
 1291 0110 00000000 		.4byte	.LFB2
 1292 0114 28000000 		.4byte	.LFE2-.LFB2
 1293 0118 01       		.uleb128 0x1
 1294 0119 9C       		.byte	0x9c
 1295 011a 2C010000 		.4byte	0x12c
 1296 011e 0A       		.uleb128 0xa
 1297 011f 6900     		.ascii	"i\000"
 1298 0121 01       		.byte	0x1
 1299 0122 0B01     		.2byte	0x10b
 1300 0124 6B000000 		.4byte	0x6b
 1301 0128 02       		.uleb128 0x2
 1302 0129 91       		.byte	0x91
 1303 012a 77       		.sleb128 -9
 1304 012b 00       		.byte	0
 1305 012c 09       		.uleb128 0x9
 1306 012d 0C010000 		.4byte	.LASF22
 1307 0131 01       		.byte	0x1
 1308 0132 2901     		.2byte	0x129
 1309 0134 00000000 		.4byte	.LFB3
 1310 0138 70000000 		.4byte	.LFE3-.LFB3
 1311 013c 01       		.uleb128 0x1
 1312 013d 9C       		.byte	0x9c
 1313 013e 6E010000 		.4byte	0x16e
 1314 0142 0A       		.uleb128 0xa
 1315 0143 6900     		.ascii	"i\000"
 1316 0145 01       		.byte	0x1
 1317 0146 2C01     		.2byte	0x12c
 1318 0148 6B000000 		.4byte	0x6b
 1319 014c 02       		.uleb128 0x2
 1320 014d 91       		.byte	0x91
 1321 014e 77       		.sleb128 -9
 1322 014f 0A       		.uleb128 0xa
 1323 0150 706F7300 		.ascii	"pos\000"
 1324 0154 01       		.byte	0x1
 1325 0155 2D01     		.2byte	0x12d
 1326 0157 6B000000 		.4byte	0x6b
 1327 015b 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 39


 1328 015c 91       		.byte	0x91
 1329 015d 76       		.sleb128 -10
 1330 015e 0B       		.uleb128 0xb
 1331 015f 77030000 		.4byte	.LASF23
 1332 0163 01       		.byte	0x1
 1333 0164 2E01     		.2byte	0x12e
 1334 0166 6B000000 		.4byte	0x6b
 1335 016a 02       		.uleb128 0x2
 1336 016b 91       		.byte	0x91
 1337 016c 75       		.sleb128 -11
 1338 016d 00       		.byte	0
 1339 016e 09       		.uleb128 0x9
 1340 016f E1020000 		.4byte	.LASF24
 1341 0173 01       		.byte	0x1
 1342 0174 6C01     		.2byte	0x16c
 1343 0176 00000000 		.4byte	.LFB4
 1344 017a 40010000 		.4byte	.LFE4-.LFB4
 1345 017e 01       		.uleb128 0x1
 1346 017f 9C       		.byte	0x9c
 1347 0180 DF010000 		.4byte	0x1df
 1348 0184 0C       		.uleb128 0xc
 1349 0185 C0020000 		.4byte	.LASF19
 1350 0189 01       		.byte	0x1
 1351 018a 6C01     		.2byte	0x16c
 1352 018c 6B000000 		.4byte	0x6b
 1353 0190 02       		.uleb128 0x2
 1354 0191 91       		.byte	0x91
 1355 0192 67       		.sleb128 -25
 1356 0193 0B       		.uleb128 0xb
 1357 0194 FF020000 		.4byte	.LASF25
 1358 0198 01       		.byte	0x1
 1359 0199 6F01     		.2byte	0x16f
 1360 019b 83000000 		.4byte	0x83
 1361 019f 02       		.uleb128 0x2
 1362 01a0 91       		.byte	0x91
 1363 01a1 6C       		.sleb128 -20
 1364 01a2 0B       		.uleb128 0xb
 1365 01a3 E6040000 		.4byte	.LASF26
 1366 01a7 01       		.byte	0x1
 1367 01a8 7001     		.2byte	0x170
 1368 01aa 77000000 		.4byte	0x77
 1369 01ae 02       		.uleb128 0x2
 1370 01af 91       		.byte	0x91
 1371 01b0 76       		.sleb128 -10
 1372 01b1 0B       		.uleb128 0xb
 1373 01b2 07000000 		.4byte	.LASF27
 1374 01b6 01       		.byte	0x1
 1375 01b7 7101     		.2byte	0x171
 1376 01b9 77000000 		.4byte	0x77
 1377 01bd 02       		.uleb128 0x2
 1378 01be 91       		.byte	0x91
 1379 01bf 70       		.sleb128 -16
 1380 01c0 0B       		.uleb128 0xb
 1381 01c1 19040000 		.4byte	.LASF21
 1382 01c5 01       		.byte	0x1
 1383 01c6 7201     		.2byte	0x172
 1384 01c8 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 40


 1385 01cc 02       		.uleb128 0x2
 1386 01cd 91       		.byte	0x91
 1387 01ce 75       		.sleb128 -11
 1388 01cf 0B       		.uleb128 0xb
 1389 01d0 00040000 		.4byte	.LASF28
 1390 01d4 01       		.byte	0x1
 1391 01d5 7301     		.2byte	0x173
 1392 01d7 77000000 		.4byte	0x77
 1393 01db 02       		.uleb128 0x2
 1394 01dc 91       		.byte	0x91
 1395 01dd 72       		.sleb128 -14
 1396 01de 00       		.byte	0
 1397 01df 09       		.uleb128 0x9
 1398 01e0 30010000 		.4byte	.LASF29
 1399 01e4 01       		.byte	0x1
 1400 01e5 1902     		.2byte	0x219
 1401 01e7 00000000 		.4byte	.LFB5
 1402 01eb 50000000 		.4byte	.LFE5-.LFB5
 1403 01ef 01       		.uleb128 0x1
 1404 01f0 9C       		.byte	0x9c
 1405 01f1 21020000 		.4byte	0x221
 1406 01f5 0A       		.uleb128 0xa
 1407 01f6 6900     		.ascii	"i\000"
 1408 01f8 01       		.byte	0x1
 1409 01f9 1C02     		.2byte	0x21c
 1410 01fb 6B000000 		.4byte	0x6b
 1411 01ff 02       		.uleb128 0x2
 1412 0200 91       		.byte	0x91
 1413 0201 77       		.sleb128 -9
 1414 0202 0A       		.uleb128 0xa
 1415 0203 706F7300 		.ascii	"pos\000"
 1416 0207 01       		.byte	0x1
 1417 0208 1D02     		.2byte	0x21d
 1418 020a 6B000000 		.4byte	0x6b
 1419 020e 02       		.uleb128 0x2
 1420 020f 91       		.byte	0x91
 1421 0210 76       		.sleb128 -10
 1422 0211 0B       		.uleb128 0xb
 1423 0212 77030000 		.4byte	.LASF23
 1424 0216 01       		.byte	0x1
 1425 0217 1E02     		.2byte	0x21e
 1426 0219 6B000000 		.4byte	0x6b
 1427 021d 02       		.uleb128 0x2
 1428 021e 91       		.byte	0x91
 1429 021f 75       		.sleb128 -11
 1430 0220 00       		.byte	0
 1431 0221 0D       		.uleb128 0xd
 1432 0222 5A030000 		.4byte	.LASF35
 1433 0226 01       		.byte	0x1
 1434 0227 5302     		.2byte	0x253
 1435 0229 6B000000 		.4byte	0x6b
 1436 022d 00000000 		.4byte	.LFB6
 1437 0231 10010000 		.4byte	.LFE6-.LFB6
 1438 0235 01       		.uleb128 0x1
 1439 0236 9C       		.byte	0x9c
 1440 0237 B4020000 		.4byte	0x2b4
 1441 023b 0C       		.uleb128 0xc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 41


 1442 023c C0020000 		.4byte	.LASF19
 1443 0240 01       		.byte	0x1
 1444 0241 5302     		.2byte	0x253
 1445 0243 6B000000 		.4byte	0x6b
 1446 0247 02       		.uleb128 0x2
 1447 0248 91       		.byte	0x91
 1448 0249 67       		.sleb128 -25
 1449 024a 0B       		.uleb128 0xb
 1450 024b 85040000 		.4byte	.LASF30
 1451 024f 01       		.byte	0x1
 1452 0250 5602     		.2byte	0x256
 1453 0252 6B000000 		.4byte	0x6b
 1454 0256 02       		.uleb128 0x2
 1455 0257 91       		.byte	0x91
 1456 0258 6E       		.sleb128 -18
 1457 0259 0A       		.uleb128 0xa
 1458 025a 706F7300 		.ascii	"pos\000"
 1459 025e 01       		.byte	0x1
 1460 025f 5802     		.2byte	0x258
 1461 0261 6B000000 		.4byte	0x6b
 1462 0265 02       		.uleb128 0x2
 1463 0266 91       		.byte	0x91
 1464 0267 77       		.sleb128 -9
 1465 0268 0B       		.uleb128 0xb
 1466 0269 20040000 		.4byte	.LASF31
 1467 026d 01       		.byte	0x1
 1468 026e 5902     		.2byte	0x259
 1469 0270 6B000000 		.4byte	0x6b
 1470 0274 02       		.uleb128 0x2
 1471 0275 91       		.byte	0x91
 1472 0276 76       		.sleb128 -10
 1473 0277 0B       		.uleb128 0xb
 1474 0278 19040000 		.4byte	.LASF21
 1475 027c 01       		.byte	0x1
 1476 027d 5B02     		.2byte	0x25b
 1477 027f 6B000000 		.4byte	0x6b
 1478 0283 02       		.uleb128 0x2
 1479 0284 91       		.byte	0x91
 1480 0285 75       		.sleb128 -11
 1481 0286 0B       		.uleb128 0xb
 1482 0287 41000000 		.4byte	.LASF32
 1483 028b 01       		.byte	0x1
 1484 028c 5C02     		.2byte	0x25c
 1485 028e 77000000 		.4byte	0x77
 1486 0292 02       		.uleb128 0x2
 1487 0293 91       		.byte	0x91
 1488 0294 72       		.sleb128 -14
 1489 0295 0B       		.uleb128 0xb
 1490 0296 F3010000 		.4byte	.LASF33
 1491 029a 01       		.byte	0x1
 1492 029b 5D02     		.2byte	0x25d
 1493 029d 77000000 		.4byte	0x77
 1494 02a1 02       		.uleb128 0x2
 1495 02a2 91       		.byte	0x91
 1496 02a3 70       		.sleb128 -16
 1497 02a4 0B       		.uleb128 0xb
 1498 02a5 04030000 		.4byte	.LASF34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 42


 1499 02a9 01       		.byte	0x1
 1500 02aa 5E02     		.2byte	0x25e
 1501 02ac 6B000000 		.4byte	0x6b
 1502 02b0 02       		.uleb128 0x2
 1503 02b1 91       		.byte	0x91
 1504 02b2 6F       		.sleb128 -17
 1505 02b3 00       		.byte	0
 1506 02b4 0E       		.uleb128 0xe
 1507 02b5 B5030000 		.4byte	.LASF36
 1508 02b9 01       		.byte	0x1
 1509 02ba 9B02     		.2byte	0x29b
 1510 02bc 6B000000 		.4byte	0x6b
 1511 02c0 00000000 		.4byte	.LFB7
 1512 02c4 54000000 		.4byte	.LFE7-.LFB7
 1513 02c8 01       		.uleb128 0x1
 1514 02c9 9C       		.byte	0x9c
 1515 02ca 0B030000 		.4byte	0x30b
 1516 02ce 0C       		.uleb128 0xc
 1517 02cf 19040000 		.4byte	.LASF21
 1518 02d3 01       		.byte	0x1
 1519 02d4 9B02     		.2byte	0x29b
 1520 02d6 6B000000 		.4byte	0x6b
 1521 02da 02       		.uleb128 0x2
 1522 02db 91       		.byte	0x91
 1523 02dc 6F       		.sleb128 -17
 1524 02dd 0B       		.uleb128 0xb
 1525 02de 81010000 		.4byte	.LASF37
 1526 02e2 01       		.byte	0x1
 1527 02e3 9E02     		.2byte	0x29e
 1528 02e5 6B000000 		.4byte	0x6b
 1529 02e9 02       		.uleb128 0x2
 1530 02ea 91       		.byte	0x91
 1531 02eb 77       		.sleb128 -9
 1532 02ec 0B       		.uleb128 0xb
 1533 02ed 8A010000 		.4byte	.LASF38
 1534 02f1 01       		.byte	0x1
 1535 02f2 9F02     		.2byte	0x29f
 1536 02f4 6B000000 		.4byte	0x6b
 1537 02f8 02       		.uleb128 0x2
 1538 02f9 91       		.byte	0x91
 1539 02fa 75       		.sleb128 -11
 1540 02fb 0B       		.uleb128 0xb
 1541 02fc 9A010000 		.4byte	.LASF39
 1542 0300 01       		.byte	0x1
 1543 0301 A002     		.2byte	0x2a0
 1544 0303 6B000000 		.4byte	0x6b
 1545 0307 02       		.uleb128 0x2
 1546 0308 91       		.byte	0x91
 1547 0309 76       		.sleb128 -10
 1548 030a 00       		.byte	0
 1549 030b 0E       		.uleb128 0xe
 1550 030c A9010000 		.4byte	.LASF40
 1551 0310 01       		.byte	0x1
 1552 0311 C702     		.2byte	0x2c7
 1553 0313 6B000000 		.4byte	0x6b
 1554 0317 00000000 		.4byte	.LFB8
 1555 031b 38000000 		.4byte	.LFE8-.LFB8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 43


 1556 031f 01       		.uleb128 0x1
 1557 0320 9C       		.byte	0x9c
 1558 0321 42030000 		.4byte	0x342
 1559 0325 0A       		.uleb128 0xa
 1560 0326 6900     		.ascii	"i\000"
 1561 0328 01       		.byte	0x1
 1562 0329 CA02     		.2byte	0x2ca
 1563 032b 6B000000 		.4byte	0x6b
 1564 032f 02       		.uleb128 0x2
 1565 0330 91       		.byte	0x91
 1566 0331 77       		.sleb128 -9
 1567 0332 0B       		.uleb128 0xb
 1568 0333 9A010000 		.4byte	.LASF39
 1569 0337 01       		.byte	0x1
 1570 0338 CB02     		.2byte	0x2cb
 1571 033a 6B000000 		.4byte	0x6b
 1572 033e 02       		.uleb128 0x2
 1573 033f 91       		.byte	0x91
 1574 0340 76       		.sleb128 -10
 1575 0341 00       		.byte	0
 1576 0342 0F       		.uleb128 0xf
 1577 0343 16030000 		.4byte	.LASF41
 1578 0347 01       		.byte	0x1
 1579 0348 F502     		.2byte	0x2f5
 1580 034a 00000000 		.4byte	.LFB9
 1581 034e 68000000 		.4byte	.LFE9-.LFB9
 1582 0352 01       		.uleb128 0x1
 1583 0353 9C       		.byte	0x9c
 1584 0354 A4030000 		.4byte	0x3a4
 1585 0358 0C       		.uleb128 0xc
 1586 0359 19040000 		.4byte	.LASF21
 1587 035d 01       		.byte	0x1
 1588 035e F502     		.2byte	0x2f5
 1589 0360 6B000000 		.4byte	0x6b
 1590 0364 02       		.uleb128 0x2
 1591 0365 91       		.byte	0x91
 1592 0366 6F       		.sleb128 -17
 1593 0367 0A       		.uleb128 0xa
 1594 0368 706F7300 		.ascii	"pos\000"
 1595 036c 01       		.byte	0x1
 1596 036d F802     		.2byte	0x2f8
 1597 036f 6B000000 		.4byte	0x6b
 1598 0373 02       		.uleb128 0x2
 1599 0374 91       		.byte	0x91
 1600 0375 75       		.sleb128 -11
 1601 0376 0B       		.uleb128 0xb
 1602 0377 77030000 		.4byte	.LASF23
 1603 037b 01       		.byte	0x1
 1604 037c F902     		.2byte	0x2f9
 1605 037e 6B000000 		.4byte	0x6b
 1606 0382 02       		.uleb128 0x2
 1607 0383 91       		.byte	0x91
 1608 0384 74       		.sleb128 -12
 1609 0385 0B       		.uleb128 0xb
 1610 0386 81010000 		.4byte	.LASF37
 1611 038a 01       		.byte	0x1
 1612 038b FA02     		.2byte	0x2fa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 44


 1613 038d 6B000000 		.4byte	0x6b
 1614 0391 02       		.uleb128 0x2
 1615 0392 91       		.byte	0x91
 1616 0393 77       		.sleb128 -9
 1617 0394 0B       		.uleb128 0xb
 1618 0395 8A010000 		.4byte	.LASF38
 1619 0399 01       		.byte	0x1
 1620 039a FB02     		.2byte	0x2fb
 1621 039c 6B000000 		.4byte	0x6b
 1622 03a0 02       		.uleb128 0x2
 1623 03a1 91       		.byte	0x91
 1624 03a2 76       		.sleb128 -10
 1625 03a3 00       		.byte	0
 1626 03a4 0F       		.uleb128 0xf
 1627 03a5 6A010000 		.4byte	.LASF42
 1628 03a9 01       		.byte	0x1
 1629 03aa 2703     		.2byte	0x327
 1630 03ac 00000000 		.4byte	.LFB10
 1631 03b0 6C000000 		.4byte	.LFE10-.LFB10
 1632 03b4 01       		.uleb128 0x1
 1633 03b5 9C       		.byte	0x9c
 1634 03b6 06040000 		.4byte	0x406
 1635 03ba 0C       		.uleb128 0xc
 1636 03bb 19040000 		.4byte	.LASF21
 1637 03bf 01       		.byte	0x1
 1638 03c0 2703     		.2byte	0x327
 1639 03c2 6B000000 		.4byte	0x6b
 1640 03c6 02       		.uleb128 0x2
 1641 03c7 91       		.byte	0x91
 1642 03c8 6F       		.sleb128 -17
 1643 03c9 0A       		.uleb128 0xa
 1644 03ca 706F7300 		.ascii	"pos\000"
 1645 03ce 01       		.byte	0x1
 1646 03cf 2A03     		.2byte	0x32a
 1647 03d1 6B000000 		.4byte	0x6b
 1648 03d5 02       		.uleb128 0x2
 1649 03d6 91       		.byte	0x91
 1650 03d7 75       		.sleb128 -11
 1651 03d8 0B       		.uleb128 0xb
 1652 03d9 77030000 		.4byte	.LASF23
 1653 03dd 01       		.byte	0x1
 1654 03de 2B03     		.2byte	0x32b
 1655 03e0 6B000000 		.4byte	0x6b
 1656 03e4 02       		.uleb128 0x2
 1657 03e5 91       		.byte	0x91
 1658 03e6 74       		.sleb128 -12
 1659 03e7 0B       		.uleb128 0xb
 1660 03e8 81010000 		.4byte	.LASF37
 1661 03ec 01       		.byte	0x1
 1662 03ed 2C03     		.2byte	0x32c
 1663 03ef 6B000000 		.4byte	0x6b
 1664 03f3 02       		.uleb128 0x2
 1665 03f4 91       		.byte	0x91
 1666 03f5 77       		.sleb128 -9
 1667 03f6 0B       		.uleb128 0xb
 1668 03f7 8A010000 		.4byte	.LASF38
 1669 03fb 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 45


 1670 03fc 2D03     		.2byte	0x32d
 1671 03fe 6B000000 		.4byte	0x6b
 1672 0402 02       		.uleb128 0x2
 1673 0403 91       		.byte	0x91
 1674 0404 76       		.sleb128 -10
 1675 0405 00       		.byte	0
 1676 0406 10       		.uleb128 0x10
 1677 0407 77000000 		.4byte	0x77
 1678 040b 16040000 		.4byte	0x416
 1679 040f 11       		.uleb128 0x11
 1680 0410 AB000000 		.4byte	0xab
 1681 0414 09       		.byte	0x9
 1682 0415 00       		.byte	0
 1683 0416 12       		.uleb128 0x12
 1684 0417 BA040000 		.4byte	.LASF43
 1685 041b 03       		.byte	0x3
 1686 041c C202     		.2byte	0x2c2
 1687 041e 06040000 		.4byte	0x406
 1688 0422 10       		.uleb128 0x10
 1689 0423 6B000000 		.4byte	0x6b
 1690 0427 32040000 		.4byte	0x432
 1691 042b 11       		.uleb128 0x11
 1692 042c AB000000 		.4byte	0xab
 1693 0430 01       		.byte	0x1
 1694 0431 00       		.byte	0
 1695 0432 12       		.uleb128 0x12
 1696 0433 C7020000 		.4byte	.LASF44
 1697 0437 04       		.byte	0x4
 1698 0438 0C01     		.2byte	0x10c
 1699 043a 22040000 		.4byte	0x422
 1700 043e 10       		.uleb128 0x10
 1701 043f 4E040000 		.4byte	0x44e
 1702 0443 4E040000 		.4byte	0x44e
 1703 0447 11       		.uleb128 0x11
 1704 0448 AB000000 		.4byte	0xab
 1705 044c 09       		.byte	0x9
 1706 044d 00       		.byte	0
 1707 044e 13       		.uleb128 0x13
 1708 044f 6B000000 		.4byte	0x6b
 1709 0453 12       		.uleb128 0x12
 1710 0454 D6010000 		.4byte	.LASF45
 1711 0458 04       		.byte	0x4
 1712 0459 0D01     		.2byte	0x10d
 1713 045b 5F040000 		.4byte	0x45f
 1714 045f 13       		.uleb128 0x13
 1715 0460 3E040000 		.4byte	0x43e
 1716 0464 14       		.uleb128 0x14
 1717 0465 68040000 		.4byte	.LASF46
 1718 0469 01       		.byte	0x1
 1719 046a 29       		.byte	0x29
 1720 046b 06040000 		.4byte	0x406
 1721 046f 05       		.uleb128 0x5
 1722 0470 03       		.byte	0x3
 1723 0471 00000000 		.4byte	CapSense_sensorBaseline
 1724 0475 10       		.uleb128 0x10
 1725 0476 6B000000 		.4byte	0x6b
 1726 047a 85040000 		.4byte	0x485
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 46


 1727 047e 11       		.uleb128 0x11
 1728 047f AB000000 		.4byte	0xab
 1729 0483 09       		.byte	0x9
 1730 0484 00       		.byte	0
 1731 0485 14       		.uleb128 0x14
 1732 0486 1D020000 		.4byte	.LASF47
 1733 048a 01       		.byte	0x1
 1734 048b 2A       		.byte	0x2a
 1735 048c 75040000 		.4byte	0x475
 1736 0490 05       		.uleb128 0x5
 1737 0491 03       		.byte	0x3
 1738 0492 00000000 		.4byte	CapSense_sensorBaselineLow
 1739 0496 14       		.uleb128 0x14
 1740 0497 F6000000 		.4byte	.LASF48
 1741 049b 01       		.byte	0x1
 1742 049c 2B       		.byte	0x2b
 1743 049d 06040000 		.4byte	0x406
 1744 04a1 05       		.uleb128 0x5
 1745 04a2 03       		.byte	0x3
 1746 04a3 00000000 		.4byte	CapSense_sensorSignal
 1747 04a7 14       		.uleb128 0x14
 1748 04a8 2B000000 		.4byte	.LASF49
 1749 04ac 01       		.byte	0x1
 1750 04ad 2C       		.byte	0x2c
 1751 04ae 22040000 		.4byte	0x422
 1752 04b2 05       		.uleb128 0x5
 1753 04b3 03       		.byte	0x3
 1754 04b4 00000000 		.4byte	CapSense_sensorOnMask
 1755 04b8 14       		.uleb128 0x14
 1756 04b9 39040000 		.4byte	.LASF50
 1757 04bd 01       		.byte	0x1
 1758 04be 2E       		.byte	0x2e
 1759 04bf 75040000 		.4byte	0x475
 1760 04c3 05       		.uleb128 0x5
 1761 04c4 03       		.byte	0x3
 1762 04c5 00000000 		.4byte	CapSense_lowBaselineResetCnt
 1763 04c9 14       		.uleb128 0x14
 1764 04ca 96030000 		.4byte	.LASF51
 1765 04ce 01       		.byte	0x1
 1766 04cf 30       		.byte	0x30
 1767 04d0 06040000 		.4byte	0x406
 1768 04d4 05       		.uleb128 0x5
 1769 04d5 03       		.byte	0x3
 1770 04d6 00000000 		.4byte	CapSense_fingerThreshold
 1771 04da 14       		.uleb128 0x14
 1772 04db 7E030000 		.4byte	.LASF52
 1773 04df 01       		.byte	0x1
 1774 04e0 34       		.byte	0x34
 1775 04e1 06040000 		.4byte	0x406
 1776 04e5 05       		.uleb128 0x5
 1777 04e6 03       		.byte	0x3
 1778 04e7 00000000 		.4byte	CapSense_noiseThreshold
 1779 04eb 14       		.uleb128 0x14
 1780 04ec 17000000 		.4byte	.LASF53
 1781 04f0 01       		.byte	0x1
 1782 04f1 38       		.byte	0x38
 1783 04f2 06040000 		.4byte	0x406
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 47


 1784 04f6 05       		.uleb128 0x5
 1785 04f7 03       		.byte	0x3
 1786 04f8 00000000 		.4byte	CapSense_hysteresis
 1787 04fc 14       		.uleb128 0x14
 1788 04fd 56040000 		.4byte	.LASF54
 1789 0501 01       		.byte	0x1
 1790 0502 3C       		.byte	0x3c
 1791 0503 75040000 		.4byte	0x475
 1792 0507 05       		.uleb128 0x5
 1793 0508 03       		.byte	0x3
 1794 0509 00000000 		.4byte	CapSense_debounce
 1795 050d 10       		.uleb128 0x10
 1796 050e 6B000000 		.4byte	0x6b
 1797 0512 1D050000 		.4byte	0x51d
 1798 0516 11       		.uleb128 0x11
 1799 0517 AB000000 		.4byte	0xab
 1800 051b 0A       		.byte	0xa
 1801 051c 00       		.byte	0
 1802 051d 14       		.uleb128 0x14
 1803 051e CD040000 		.4byte	.LASF55
 1804 0522 01       		.byte	0x1
 1805 0523 40       		.byte	0x40
 1806 0524 0D050000 		.4byte	0x50d
 1807 0528 05       		.uleb128 0x5
 1808 0529 03       		.byte	0x3
 1809 052a 00000000 		.4byte	CapSense_debounceCounter
 1810 052e 14       		.uleb128 0x14
 1811 052f 38020000 		.4byte	.LASF56
 1812 0533 01       		.byte	0x1
 1813 0534 44       		.byte	0x44
 1814 0535 3F050000 		.4byte	0x53f
 1815 0539 05       		.uleb128 0x5
 1816 053a 03       		.byte	0x3
 1817 053b 00000000 		.4byte	CapSense_rawDataIndex
 1818 053f 13       		.uleb128 0x13
 1819 0540 3E040000 		.4byte	0x43e
 1820 0544 14       		.uleb128 0x14
 1821 0545 EE040000 		.4byte	.LASF57
 1822 0549 01       		.byte	0x1
 1823 054a 52       		.byte	0x52
 1824 054b 55050000 		.4byte	0x555
 1825 054f 05       		.uleb128 0x5
 1826 0550 03       		.byte	0x3
 1827 0551 00000000 		.4byte	CapSense_numberOfSensors
 1828 0555 13       		.uleb128 0x13
 1829 0556 3E040000 		.4byte	0x43e
 1830 055a 00       		.byte	0
 1831              		.section	.debug_abbrev,"",%progbits
 1832              	.Ldebug_abbrev0:
 1833 0000 01       		.uleb128 0x1
 1834 0001 11       		.uleb128 0x11
 1835 0002 01       		.byte	0x1
 1836 0003 25       		.uleb128 0x25
 1837 0004 0E       		.uleb128 0xe
 1838 0005 13       		.uleb128 0x13
 1839 0006 0B       		.uleb128 0xb
 1840 0007 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 48


 1841 0008 0E       		.uleb128 0xe
 1842 0009 1B       		.uleb128 0x1b
 1843 000a 0E       		.uleb128 0xe
 1844 000b 55       		.uleb128 0x55
 1845 000c 17       		.uleb128 0x17
 1846 000d 11       		.uleb128 0x11
 1847 000e 01       		.uleb128 0x1
 1848 000f 10       		.uleb128 0x10
 1849 0010 17       		.uleb128 0x17
 1850 0011 00       		.byte	0
 1851 0012 00       		.byte	0
 1852 0013 02       		.uleb128 0x2
 1853 0014 24       		.uleb128 0x24
 1854 0015 00       		.byte	0
 1855 0016 0B       		.uleb128 0xb
 1856 0017 0B       		.uleb128 0xb
 1857 0018 3E       		.uleb128 0x3e
 1858 0019 0B       		.uleb128 0xb
 1859 001a 03       		.uleb128 0x3
 1860 001b 0E       		.uleb128 0xe
 1861 001c 00       		.byte	0
 1862 001d 00       		.byte	0
 1863 001e 03       		.uleb128 0x3
 1864 001f 24       		.uleb128 0x24
 1865 0020 00       		.byte	0
 1866 0021 0B       		.uleb128 0xb
 1867 0022 0B       		.uleb128 0xb
 1868 0023 3E       		.uleb128 0x3e
 1869 0024 0B       		.uleb128 0xb
 1870 0025 03       		.uleb128 0x3
 1871 0026 08       		.uleb128 0x8
 1872 0027 00       		.byte	0
 1873 0028 00       		.byte	0
 1874 0029 04       		.uleb128 0x4
 1875 002a 16       		.uleb128 0x16
 1876 002b 00       		.byte	0
 1877 002c 03       		.uleb128 0x3
 1878 002d 0E       		.uleb128 0xe
 1879 002e 3A       		.uleb128 0x3a
 1880 002f 0B       		.uleb128 0xb
 1881 0030 3B       		.uleb128 0x3b
 1882 0031 05       		.uleb128 0x5
 1883 0032 49       		.uleb128 0x49
 1884 0033 13       		.uleb128 0x13
 1885 0034 00       		.byte	0
 1886 0035 00       		.byte	0
 1887 0036 05       		.uleb128 0x5
 1888 0037 2E       		.uleb128 0x2e
 1889 0038 01       		.byte	0x1
 1890 0039 3F       		.uleb128 0x3f
 1891 003a 19       		.uleb128 0x19
 1892 003b 03       		.uleb128 0x3
 1893 003c 0E       		.uleb128 0xe
 1894 003d 3A       		.uleb128 0x3a
 1895 003e 0B       		.uleb128 0xb
 1896 003f 3B       		.uleb128 0x3b
 1897 0040 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 49


 1898 0041 27       		.uleb128 0x27
 1899 0042 19       		.uleb128 0x19
 1900 0043 11       		.uleb128 0x11
 1901 0044 01       		.uleb128 0x1
 1902 0045 12       		.uleb128 0x12
 1903 0046 06       		.uleb128 0x6
 1904 0047 40       		.uleb128 0x40
 1905 0048 18       		.uleb128 0x18
 1906 0049 9742     		.uleb128 0x2117
 1907 004b 19       		.uleb128 0x19
 1908 004c 01       		.uleb128 0x1
 1909 004d 13       		.uleb128 0x13
 1910 004e 00       		.byte	0
 1911 004f 00       		.byte	0
 1912 0050 06       		.uleb128 0x6
 1913 0051 05       		.uleb128 0x5
 1914 0052 00       		.byte	0
 1915 0053 03       		.uleb128 0x3
 1916 0054 0E       		.uleb128 0xe
 1917 0055 3A       		.uleb128 0x3a
 1918 0056 0B       		.uleb128 0xb
 1919 0057 3B       		.uleb128 0x3b
 1920 0058 0B       		.uleb128 0xb
 1921 0059 49       		.uleb128 0x49
 1922 005a 13       		.uleb128 0x13
 1923 005b 02       		.uleb128 0x2
 1924 005c 18       		.uleb128 0x18
 1925 005d 00       		.byte	0
 1926 005e 00       		.byte	0
 1927 005f 07       		.uleb128 0x7
 1928 0060 34       		.uleb128 0x34
 1929 0061 00       		.byte	0
 1930 0062 03       		.uleb128 0x3
 1931 0063 0E       		.uleb128 0xe
 1932 0064 3A       		.uleb128 0x3a
 1933 0065 0B       		.uleb128 0xb
 1934 0066 3B       		.uleb128 0x3b
 1935 0067 0B       		.uleb128 0xb
 1936 0068 49       		.uleb128 0x49
 1937 0069 13       		.uleb128 0x13
 1938 006a 02       		.uleb128 0x2
 1939 006b 18       		.uleb128 0x18
 1940 006c 00       		.byte	0
 1941 006d 00       		.byte	0
 1942 006e 08       		.uleb128 0x8
 1943 006f 2E       		.uleb128 0x2e
 1944 0070 01       		.byte	0x1
 1945 0071 3F       		.uleb128 0x3f
 1946 0072 19       		.uleb128 0x19
 1947 0073 03       		.uleb128 0x3
 1948 0074 0E       		.uleb128 0xe
 1949 0075 3A       		.uleb128 0x3a
 1950 0076 0B       		.uleb128 0xb
 1951 0077 3B       		.uleb128 0x3b
 1952 0078 0B       		.uleb128 0xb
 1953 0079 27       		.uleb128 0x27
 1954 007a 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 50


 1955 007b 11       		.uleb128 0x11
 1956 007c 01       		.uleb128 0x1
 1957 007d 12       		.uleb128 0x12
 1958 007e 06       		.uleb128 0x6
 1959 007f 40       		.uleb128 0x40
 1960 0080 18       		.uleb128 0x18
 1961 0081 9642     		.uleb128 0x2116
 1962 0083 19       		.uleb128 0x19
 1963 0084 01       		.uleb128 0x1
 1964 0085 13       		.uleb128 0x13
 1965 0086 00       		.byte	0
 1966 0087 00       		.byte	0
 1967 0088 09       		.uleb128 0x9
 1968 0089 2E       		.uleb128 0x2e
 1969 008a 01       		.byte	0x1
 1970 008b 3F       		.uleb128 0x3f
 1971 008c 19       		.uleb128 0x19
 1972 008d 03       		.uleb128 0x3
 1973 008e 0E       		.uleb128 0xe
 1974 008f 3A       		.uleb128 0x3a
 1975 0090 0B       		.uleb128 0xb
 1976 0091 3B       		.uleb128 0x3b
 1977 0092 05       		.uleb128 0x5
 1978 0093 27       		.uleb128 0x27
 1979 0094 19       		.uleb128 0x19
 1980 0095 11       		.uleb128 0x11
 1981 0096 01       		.uleb128 0x1
 1982 0097 12       		.uleb128 0x12
 1983 0098 06       		.uleb128 0x6
 1984 0099 40       		.uleb128 0x40
 1985 009a 18       		.uleb128 0x18
 1986 009b 9642     		.uleb128 0x2116
 1987 009d 19       		.uleb128 0x19
 1988 009e 01       		.uleb128 0x1
 1989 009f 13       		.uleb128 0x13
 1990 00a0 00       		.byte	0
 1991 00a1 00       		.byte	0
 1992 00a2 0A       		.uleb128 0xa
 1993 00a3 34       		.uleb128 0x34
 1994 00a4 00       		.byte	0
 1995 00a5 03       		.uleb128 0x3
 1996 00a6 08       		.uleb128 0x8
 1997 00a7 3A       		.uleb128 0x3a
 1998 00a8 0B       		.uleb128 0xb
 1999 00a9 3B       		.uleb128 0x3b
 2000 00aa 05       		.uleb128 0x5
 2001 00ab 49       		.uleb128 0x49
 2002 00ac 13       		.uleb128 0x13
 2003 00ad 02       		.uleb128 0x2
 2004 00ae 18       		.uleb128 0x18
 2005 00af 00       		.byte	0
 2006 00b0 00       		.byte	0
 2007 00b1 0B       		.uleb128 0xb
 2008 00b2 34       		.uleb128 0x34
 2009 00b3 00       		.byte	0
 2010 00b4 03       		.uleb128 0x3
 2011 00b5 0E       		.uleb128 0xe
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 51


 2012 00b6 3A       		.uleb128 0x3a
 2013 00b7 0B       		.uleb128 0xb
 2014 00b8 3B       		.uleb128 0x3b
 2015 00b9 05       		.uleb128 0x5
 2016 00ba 49       		.uleb128 0x49
 2017 00bb 13       		.uleb128 0x13
 2018 00bc 02       		.uleb128 0x2
 2019 00bd 18       		.uleb128 0x18
 2020 00be 00       		.byte	0
 2021 00bf 00       		.byte	0
 2022 00c0 0C       		.uleb128 0xc
 2023 00c1 05       		.uleb128 0x5
 2024 00c2 00       		.byte	0
 2025 00c3 03       		.uleb128 0x3
 2026 00c4 0E       		.uleb128 0xe
 2027 00c5 3A       		.uleb128 0x3a
 2028 00c6 0B       		.uleb128 0xb
 2029 00c7 3B       		.uleb128 0x3b
 2030 00c8 05       		.uleb128 0x5
 2031 00c9 49       		.uleb128 0x49
 2032 00ca 13       		.uleb128 0x13
 2033 00cb 02       		.uleb128 0x2
 2034 00cc 18       		.uleb128 0x18
 2035 00cd 00       		.byte	0
 2036 00ce 00       		.byte	0
 2037 00cf 0D       		.uleb128 0xd
 2038 00d0 2E       		.uleb128 0x2e
 2039 00d1 01       		.byte	0x1
 2040 00d2 3F       		.uleb128 0x3f
 2041 00d3 19       		.uleb128 0x19
 2042 00d4 03       		.uleb128 0x3
 2043 00d5 0E       		.uleb128 0xe
 2044 00d6 3A       		.uleb128 0x3a
 2045 00d7 0B       		.uleb128 0xb
 2046 00d8 3B       		.uleb128 0x3b
 2047 00d9 05       		.uleb128 0x5
 2048 00da 27       		.uleb128 0x27
 2049 00db 19       		.uleb128 0x19
 2050 00dc 49       		.uleb128 0x49
 2051 00dd 13       		.uleb128 0x13
 2052 00de 11       		.uleb128 0x11
 2053 00df 01       		.uleb128 0x1
 2054 00e0 12       		.uleb128 0x12
 2055 00e1 06       		.uleb128 0x6
 2056 00e2 40       		.uleb128 0x40
 2057 00e3 18       		.uleb128 0x18
 2058 00e4 9742     		.uleb128 0x2117
 2059 00e6 19       		.uleb128 0x19
 2060 00e7 01       		.uleb128 0x1
 2061 00e8 13       		.uleb128 0x13
 2062 00e9 00       		.byte	0
 2063 00ea 00       		.byte	0
 2064 00eb 0E       		.uleb128 0xe
 2065 00ec 2E       		.uleb128 0x2e
 2066 00ed 01       		.byte	0x1
 2067 00ee 3F       		.uleb128 0x3f
 2068 00ef 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 52


 2069 00f0 03       		.uleb128 0x3
 2070 00f1 0E       		.uleb128 0xe
 2071 00f2 3A       		.uleb128 0x3a
 2072 00f3 0B       		.uleb128 0xb
 2073 00f4 3B       		.uleb128 0x3b
 2074 00f5 05       		.uleb128 0x5
 2075 00f6 27       		.uleb128 0x27
 2076 00f7 19       		.uleb128 0x19
 2077 00f8 49       		.uleb128 0x49
 2078 00f9 13       		.uleb128 0x13
 2079 00fa 11       		.uleb128 0x11
 2080 00fb 01       		.uleb128 0x1
 2081 00fc 12       		.uleb128 0x12
 2082 00fd 06       		.uleb128 0x6
 2083 00fe 40       		.uleb128 0x40
 2084 00ff 18       		.uleb128 0x18
 2085 0100 9642     		.uleb128 0x2116
 2086 0102 19       		.uleb128 0x19
 2087 0103 01       		.uleb128 0x1
 2088 0104 13       		.uleb128 0x13
 2089 0105 00       		.byte	0
 2090 0106 00       		.byte	0
 2091 0107 0F       		.uleb128 0xf
 2092 0108 2E       		.uleb128 0x2e
 2093 0109 01       		.byte	0x1
 2094 010a 3F       		.uleb128 0x3f
 2095 010b 19       		.uleb128 0x19
 2096 010c 03       		.uleb128 0x3
 2097 010d 0E       		.uleb128 0xe
 2098 010e 3A       		.uleb128 0x3a
 2099 010f 0B       		.uleb128 0xb
 2100 0110 3B       		.uleb128 0x3b
 2101 0111 05       		.uleb128 0x5
 2102 0112 27       		.uleb128 0x27
 2103 0113 19       		.uleb128 0x19
 2104 0114 11       		.uleb128 0x11
 2105 0115 01       		.uleb128 0x1
 2106 0116 12       		.uleb128 0x12
 2107 0117 06       		.uleb128 0x6
 2108 0118 40       		.uleb128 0x40
 2109 0119 18       		.uleb128 0x18
 2110 011a 9742     		.uleb128 0x2117
 2111 011c 19       		.uleb128 0x19
 2112 011d 01       		.uleb128 0x1
 2113 011e 13       		.uleb128 0x13
 2114 011f 00       		.byte	0
 2115 0120 00       		.byte	0
 2116 0121 10       		.uleb128 0x10
 2117 0122 01       		.uleb128 0x1
 2118 0123 01       		.byte	0x1
 2119 0124 49       		.uleb128 0x49
 2120 0125 13       		.uleb128 0x13
 2121 0126 01       		.uleb128 0x1
 2122 0127 13       		.uleb128 0x13
 2123 0128 00       		.byte	0
 2124 0129 00       		.byte	0
 2125 012a 11       		.uleb128 0x11
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 53


 2126 012b 21       		.uleb128 0x21
 2127 012c 00       		.byte	0
 2128 012d 49       		.uleb128 0x49
 2129 012e 13       		.uleb128 0x13
 2130 012f 2F       		.uleb128 0x2f
 2131 0130 0B       		.uleb128 0xb
 2132 0131 00       		.byte	0
 2133 0132 00       		.byte	0
 2134 0133 12       		.uleb128 0x12
 2135 0134 34       		.uleb128 0x34
 2136 0135 00       		.byte	0
 2137 0136 03       		.uleb128 0x3
 2138 0137 0E       		.uleb128 0xe
 2139 0138 3A       		.uleb128 0x3a
 2140 0139 0B       		.uleb128 0xb
 2141 013a 3B       		.uleb128 0x3b
 2142 013b 05       		.uleb128 0x5
 2143 013c 49       		.uleb128 0x49
 2144 013d 13       		.uleb128 0x13
 2145 013e 3F       		.uleb128 0x3f
 2146 013f 19       		.uleb128 0x19
 2147 0140 3C       		.uleb128 0x3c
 2148 0141 19       		.uleb128 0x19
 2149 0142 00       		.byte	0
 2150 0143 00       		.byte	0
 2151 0144 13       		.uleb128 0x13
 2152 0145 26       		.uleb128 0x26
 2153 0146 00       		.byte	0
 2154 0147 49       		.uleb128 0x49
 2155 0148 13       		.uleb128 0x13
 2156 0149 00       		.byte	0
 2157 014a 00       		.byte	0
 2158 014b 14       		.uleb128 0x14
 2159 014c 34       		.uleb128 0x34
 2160 014d 00       		.byte	0
 2161 014e 03       		.uleb128 0x3
 2162 014f 0E       		.uleb128 0xe
 2163 0150 3A       		.uleb128 0x3a
 2164 0151 0B       		.uleb128 0xb
 2165 0152 3B       		.uleb128 0x3b
 2166 0153 0B       		.uleb128 0xb
 2167 0154 49       		.uleb128 0x49
 2168 0155 13       		.uleb128 0x13
 2169 0156 3F       		.uleb128 0x3f
 2170 0157 19       		.uleb128 0x19
 2171 0158 02       		.uleb128 0x2
 2172 0159 18       		.uleb128 0x18
 2173 015a 00       		.byte	0
 2174 015b 00       		.byte	0
 2175 015c 00       		.byte	0
 2176              		.section	.debug_aranges,"",%progbits
 2177 0000 6C000000 		.4byte	0x6c
 2178 0004 0200     		.2byte	0x2
 2179 0006 00000000 		.4byte	.Ldebug_info0
 2180 000a 04       		.byte	0x4
 2181 000b 00       		.byte	0
 2182 000c 0000     		.2byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 54


 2183 000e 0000     		.2byte	0
 2184 0010 00000000 		.4byte	.LFB0
 2185 0014 68000000 		.4byte	.LFE0-.LFB0
 2186 0018 00000000 		.4byte	.LFB1
 2187 001c 2E000000 		.4byte	.LFE1-.LFB1
 2188 0020 00000000 		.4byte	.LFB2
 2189 0024 28000000 		.4byte	.LFE2-.LFB2
 2190 0028 00000000 		.4byte	.LFB3
 2191 002c 70000000 		.4byte	.LFE3-.LFB3
 2192 0030 00000000 		.4byte	.LFB4
 2193 0034 40010000 		.4byte	.LFE4-.LFB4
 2194 0038 00000000 		.4byte	.LFB5
 2195 003c 50000000 		.4byte	.LFE5-.LFB5
 2196 0040 00000000 		.4byte	.LFB6
 2197 0044 10010000 		.4byte	.LFE6-.LFB6
 2198 0048 00000000 		.4byte	.LFB7
 2199 004c 54000000 		.4byte	.LFE7-.LFB7
 2200 0050 00000000 		.4byte	.LFB8
 2201 0054 38000000 		.4byte	.LFE8-.LFB8
 2202 0058 00000000 		.4byte	.LFB9
 2203 005c 68000000 		.4byte	.LFE9-.LFB9
 2204 0060 00000000 		.4byte	.LFB10
 2205 0064 6C000000 		.4byte	.LFE10-.LFB10
 2206 0068 00000000 		.4byte	0
 2207 006c 00000000 		.4byte	0
 2208              		.section	.debug_ranges,"",%progbits
 2209              	.Ldebug_ranges0:
 2210 0000 00000000 		.4byte	.LFB0
 2211 0004 68000000 		.4byte	.LFE0
 2212 0008 00000000 		.4byte	.LFB1
 2213 000c 2E000000 		.4byte	.LFE1
 2214 0010 00000000 		.4byte	.LFB2
 2215 0014 28000000 		.4byte	.LFE2
 2216 0018 00000000 		.4byte	.LFB3
 2217 001c 70000000 		.4byte	.LFE3
 2218 0020 00000000 		.4byte	.LFB4
 2219 0024 40010000 		.4byte	.LFE4
 2220 0028 00000000 		.4byte	.LFB5
 2221 002c 50000000 		.4byte	.LFE5
 2222 0030 00000000 		.4byte	.LFB6
 2223 0034 10010000 		.4byte	.LFE6
 2224 0038 00000000 		.4byte	.LFB7
 2225 003c 54000000 		.4byte	.LFE7
 2226 0040 00000000 		.4byte	.LFB8
 2227 0044 38000000 		.4byte	.LFE8
 2228 0048 00000000 		.4byte	.LFB9
 2229 004c 68000000 		.4byte	.LFE9
 2230 0050 00000000 		.4byte	.LFB10
 2231 0054 6C000000 		.4byte	.LFE10
 2232 0058 00000000 		.4byte	0
 2233 005c 00000000 		.4byte	0
 2234              		.section	.debug_line,"",%progbits
 2235              	.Ldebug_line0:
 2236 0000 35020000 		.section	.debug_str,"MS",%progbits,1
 2236      02006B00 
 2236      00000201 
 2236      FB0E0D00 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 55


 2236      01010101 
 2237              	.LASF10:
 2238 0000 75696E74 		.ascii	"uint16\000"
 2238      313600
 2239              	.LASF27:
 2240 0007 66696C74 		.ascii	"filteredRawData\000"
 2240      65726564 
 2240      52617744 
 2240      61746100 
 2241              	.LASF53:
 2242 0017 43617053 		.ascii	"CapSense_hysteresis\000"
 2242      656E7365 
 2242      5F687973 
 2242      74657265 
 2242      73697300 
 2243              	.LASF49:
 2244 002b 43617053 		.ascii	"CapSense_sensorOnMask\000"
 2244      656E7365 
 2244      5F73656E 
 2244      736F724F 
 2244      6E4D6173 
 2245              	.LASF32:
 2246 0041 66696E67 		.ascii	"fingerThreshold\000"
 2246      65725468 
 2246      72657368 
 2246      6F6C6400 
 2247              	.LASF58:
 2248 0051 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2248      43313120 
 2248      352E342E 
 2248      31203230 
 2248      31363036 
 2249 0084 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2249      20726576 
 2249      6973696F 
 2249      6E203233 
 2249      37373135 
 2250 00b7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2250      66756E63 
 2250      74696F6E 
 2250      2D736563 
 2250      74696F6E 
 2251              	.LASF7:
 2252 00df 6C6F6E67 		.ascii	"long long unsigned int\000"
 2252      206C6F6E 
 2252      6720756E 
 2252      7369676E 
 2252      65642069 
 2253              	.LASF48:
 2254 00f6 43617053 		.ascii	"CapSense_sensorSignal\000"
 2254      656E7365 
 2254      5F73656E 
 2254      736F7253 
 2254      69676E61 
 2255              	.LASF22:
 2256 010c 43617053 		.ascii	"CapSense_InitializeEnabledBaselines\000"
 2256      656E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 56


 2256      5F496E69 
 2256      7469616C 
 2256      697A6545 
 2257              	.LASF29:
 2258 0130 43617053 		.ascii	"CapSense_UpdateEnabledBaselines\000"
 2258      656E7365 
 2258      5F557064 
 2258      61746545 
 2258      6E61626C 
 2259              	.LASF6:
 2260 0150 6C6F6E67 		.ascii	"long long int\000"
 2260      206C6F6E 
 2260      6720696E 
 2260      7400
 2261              	.LASF0:
 2262 015e 7369676E 		.ascii	"signed char\000"
 2262      65642063 
 2262      68617200 
 2263              	.LASF42:
 2264 016a 43617053 		.ascii	"CapSense_DisableWidget\000"
 2264      656E7365 
 2264      5F446973 
 2264      61626C65 
 2264      57696467 
 2265              	.LASF37:
 2266 0181 72617749 		.ascii	"rawIndex\000"
 2266      6E646578 
 2266      00
 2267              	.LASF38:
 2268 018a 6E756D62 		.ascii	"numberOfSensors\000"
 2268      65724F66 
 2268      53656E73 
 2268      6F727300 
 2269              	.LASF39:
 2270 019a 73746174 		.ascii	"state\000"
 2270      6500
 2271              	.LASF4:
 2272 01a0 6C6F6E67 		.ascii	"long int\000"
 2272      20696E74 
 2272      00
 2273              	.LASF40:
 2274 01a9 43617053 		.ascii	"CapSense_CheckIsAnyWidgetActive\000"
 2274      656E7365 
 2274      5F436865 
 2274      636B4973 
 2274      416E7957 
 2275              	.LASF9:
 2276 01c9 75696E74 		.ascii	"uint8\000"
 2276      3800
 2277              	.LASF13:
 2278 01cf 646F7562 		.ascii	"double\000"
 2278      6C6500
 2279              	.LASF45:
 2280 01d6 43617053 		.ascii	"CapSense_widgetNumber\000"
 2280      656E7365 
 2280      5F776964 
 2280      6765744E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 57


 2280      756D6265 
 2281              	.LASF11:
 2282 01ec 75696E74 		.ascii	"uint32\000"
 2282      333200
 2283              	.LASF33:
 2284 01f3 68797374 		.ascii	"hysteresis\000"
 2284      65726573 
 2284      697300
 2285              	.LASF8:
 2286 01fe 756E7369 		.ascii	"unsigned int\000"
 2286      676E6564 
 2286      20696E74 
 2286      00
 2287              	.LASF5:
 2288 020b 6C6F6E67 		.ascii	"long unsigned int\000"
 2288      20756E73 
 2288      69676E65 
 2288      6420696E 
 2288      7400
 2289              	.LASF47:
 2290 021d 43617053 		.ascii	"CapSense_sensorBaselineLow\000"
 2290      656E7365 
 2290      5F73656E 
 2290      736F7242 
 2290      6173656C 
 2291              	.LASF56:
 2292 0238 43617053 		.ascii	"CapSense_rawDataIndex\000"
 2292      656E7365 
 2292      5F726177 
 2292      44617461 
 2292      496E6465 
 2293              	.LASF60:
 2294 024e 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Desktop\\PSOC5_electrosteel_"
 2294      73657273 
 2294      5C4A6566 
 2294      66536E79 
 2294      6465725C 
 2295 027d 73747269 		.ascii	"stringsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 2295      6E677365 
 2295      6E736F72 
 2295      735C4345 
 2295      32313035 
 2296              	.LASF3:
 2297 02ad 73686F72 		.ascii	"short unsigned int\000"
 2297      7420756E 
 2297      7369676E 
 2297      65642069 
 2297      6E7400
 2298              	.LASF19:
 2299 02c0 73656E73 		.ascii	"sensor\000"
 2299      6F7200
 2300              	.LASF44:
 2301 02c7 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2301      656E7365 
 2301      5F73656E 
 2301      736F7245 
 2301      6E61626C 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 58


 2302              	.LASF24:
 2303 02e1 43617053 		.ascii	"CapSense_UpdateSensorBaseline\000"
 2303      656E7365 
 2303      5F557064 
 2303      61746553 
 2303      656E736F 
 2304              	.LASF25:
 2305 02ff 63616C63 		.ascii	"calc\000"
 2305      00
 2306              	.LASF34:
 2307 0304 6465626F 		.ascii	"debounce\000"
 2307      756E6365 
 2307      00
 2308              	.LASF16:
 2309 030d 73697A65 		.ascii	"sizetype\000"
 2309      74797065 
 2309      00
 2310              	.LASF41:
 2311 0316 43617053 		.ascii	"CapSense_EnableWidget\000"
 2311      656E7365 
 2311      5F456E61 
 2311      626C6557 
 2311      69646765 
 2312              	.LASF15:
 2313 032c 6C6F6E67 		.ascii	"long double\000"
 2313      20646F75 
 2313      626C6500 
 2314              	.LASF18:
 2315 0338 43617053 		.ascii	"CapSense_InitializeSensorBaseline\000"
 2315      656E7365 
 2315      5F496E69 
 2315      7469616C 
 2315      697A6553 
 2316              	.LASF35:
 2317 035a 43617053 		.ascii	"CapSense_CheckIsSensorActive\000"
 2317      656E7365 
 2317      5F436865 
 2317      636B4973 
 2317      53656E73 
 2318              	.LASF23:
 2319 0377 656E4D61 		.ascii	"enMask\000"
 2319      736B00
 2320              	.LASF52:
 2321 037e 43617053 		.ascii	"CapSense_noiseThreshold\000"
 2321      656E7365 
 2321      5F6E6F69 
 2321      73655468 
 2321      72657368 
 2322              	.LASF51:
 2323 0396 43617053 		.ascii	"CapSense_fingerThreshold\000"
 2323      656E7365 
 2323      5F66696E 
 2323      67657254 
 2323      68726573 
 2324              	.LASF12:
 2325 03af 666C6F61 		.ascii	"float\000"
 2325      7400
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 59


 2326              	.LASF36:
 2327 03b5 43617053 		.ascii	"CapSense_CheckIsWidgetActive\000"
 2327      656E7365 
 2327      5F436865 
 2327      636B4973 
 2327      57696467 
 2328              	.LASF1:
 2329 03d2 756E7369 		.ascii	"unsigned char\000"
 2329      676E6564 
 2329      20636861 
 2329      7200
 2330              	.LASF20:
 2331 03e0 43617053 		.ascii	"CapSense_InitializeAllBaselines\000"
 2331      656E7365 
 2331      5F496E69 
 2331      7469616C 
 2331      697A6541 
 2332              	.LASF28:
 2333 0400 6E6F6973 		.ascii	"noiseThreshold\000"
 2333      65546872 
 2333      6573686F 
 2333      6C6400
 2334              	.LASF2:
 2335 040f 73686F72 		.ascii	"short int\000"
 2335      7420696E 
 2335      7400
 2336              	.LASF21:
 2337 0419 77696467 		.ascii	"widget\000"
 2337      657400
 2338              	.LASF31:
 2339 0420 6F6E4D61 		.ascii	"onMask\000"
 2339      736B00
 2340              	.LASF17:
 2341 0427 43617053 		.ascii	"CapSense_BaseInit\000"
 2341      656E7365 
 2341      5F426173 
 2341      65496E69 
 2341      7400
 2342              	.LASF50:
 2343 0439 43617053 		.ascii	"CapSense_lowBaselineResetCnt\000"
 2343      656E7365 
 2343      5F6C6F77 
 2343      42617365 
 2343      6C696E65 
 2344              	.LASF54:
 2345 0456 43617053 		.ascii	"CapSense_debounce\000"
 2345      656E7365 
 2345      5F646562 
 2345      6F756E63 
 2345      6500
 2346              	.LASF46:
 2347 0468 43617053 		.ascii	"CapSense_sensorBaseline\000"
 2347      656E7365 
 2347      5F73656E 
 2347      736F7242 
 2347      6173656C 
 2348              	.LASF14:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc71XJs3.s 			page 60


 2349 0480 63686172 		.ascii	"char\000"
 2349      00
 2350              	.LASF30:
 2351 0485 6465626F 		.ascii	"debounceIndex\000"
 2351      756E6365 
 2351      496E6465 
 2351      7800
 2352              	.LASF59:
 2353 0493 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense_CSHL.c\000"
 2353      72617465 
 2353      645F536F 
 2353      75726365 
 2353      5C50536F 
 2354              	.LASF43:
 2355 04ba 43617053 		.ascii	"CapSense_sensorRaw\000"
 2355      656E7365 
 2355      5F73656E 
 2355      736F7252 
 2355      617700
 2356              	.LASF55:
 2357 04cd 43617053 		.ascii	"CapSense_debounceCounter\000"
 2357      656E7365 
 2357      5F646562 
 2357      6F756E63 
 2357      65436F75 
 2358              	.LASF26:
 2359 04e6 74656D70 		.ascii	"tempRaw\000"
 2359      52617700 
 2360              	.LASF57:
 2361 04ee 43617053 		.ascii	"CapSense_numberOfSensors\000"
 2361      656E7365 
 2361      5F6E756D 
 2361      6265724F 
 2361      6653656E 
 2362              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
