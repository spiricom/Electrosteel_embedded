ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_1_convDone
  20              		.bss
  21              		.type	ADC_1_convDone, %object
  22              		.size	ADC_1_convDone, 1
  23              	ADC_1_convDone:
  24 0000 00       		.space	1
  25              		.global	ADC_1_stopConversion
  26              		.type	ADC_1_stopConversion, %object
  27              		.size	ADC_1_stopConversion, 1
  28              	ADC_1_stopConversion:
  29 0001 00       		.space	1
  30              		.global	ADC_1_initVar
  31              		.type	ADC_1_initVar, %object
  32              		.size	ADC_1_initVar, 1
  33              	ADC_1_initVar:
  34 0002 00       		.space	1
  35              		.global	ADC_1_started
  36              		.type	ADC_1_started, %object
  37              		.size	ADC_1_started, 1
  38              	ADC_1_started:
  39 0003 00       		.space	1
  40              		.global	ADC_1_Config
  41              		.data
  42              		.type	ADC_1_Config, %object
  43              		.size	ADC_1_Config, 1
  44              	ADC_1_Config:
  45 0000 01       		.byte	1
  46              		.global	ADC_1_Offset
  47              		.bss
  48              		.align	2
  49              		.type	ADC_1_Offset, %object
  50              		.size	ADC_1_Offset, 4
  51              	ADC_1_Offset:
  52 0004 00000000 		.space	4
  53              		.comm	ADC_1_CountsPerVolt,4,4
  54              		.align	2
  55              	ADC_1_gcor:
  56 0008 00000000 		.space	4
  57              		.section	.text.ADC_1_Init,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 2


  58              		.align	2
  59              		.global	ADC_1_Init
  60              		.thumb
  61              		.thumb_func
  62              		.type	ADC_1_Init, %function
  63              	ADC_1_Init:
  64              	.LFB0:
  65              		.file 1 "Generated_Source\\PSoC5\\ADC_1.c"
   1:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_1.c **** * File Name: ADC_1.c
   3:Generated_Source\PSoC5/ADC_1.c **** * Version 3.30
   4:Generated_Source\PSoC5/ADC_1.c **** *
   5:Generated_Source\PSoC5/ADC_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_1.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC_1.c **** *  Component.
   8:Generated_Source\PSoC5/ADC_1.c **** *
   9:Generated_Source\PSoC5/ADC_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_1.c **** *
  11:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_1.c **** 
  18:Generated_Source\PSoC5/ADC_1.c **** #include "ADC_1.h"
  19:Generated_Source\PSoC5/ADC_1.c **** 
  20:Generated_Source\PSoC5/ADC_1.c **** #if(ADC_1_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC_1.c ****     #include "ADC_1_theACLK.h"
  22:Generated_Source\PSoC5/ADC_1.c **** #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC_1.c **** 
  24:Generated_Source\PSoC5/ADC_1.c **** #include "ADC_1_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC_1.c **** 
  26:Generated_Source\PSoC5/ADC_1.c **** #if(ADC_1_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC_1.c ****     #include "ADC_1_AMux.h"
  28:Generated_Source\PSoC5/ADC_1.c **** #endif /* ADC_1_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC_1.c **** 
  30:Generated_Source\PSoC5/ADC_1.c **** 
  31:Generated_Source\PSoC5/ADC_1.c **** /***************************************
  32:Generated_Source\PSoC5/ADC_1.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC_1.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC_1.c **** 
  35:Generated_Source\PSoC5/ADC_1.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC_1.c **** volatile uint8 ADC_1_convDone = 0u;
  37:Generated_Source\PSoC5/ADC_1.c **** 
  38:Generated_Source\PSoC5/ADC_1.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC_1.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC_1.c **** */
  41:Generated_Source\PSoC5/ADC_1.c **** volatile uint8 ADC_1_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC_1.c **** 
  43:Generated_Source\PSoC5/ADC_1.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC_1.c **** uint8 ADC_1_initVar = 0u;
  45:Generated_Source\PSoC5/ADC_1.c **** 
  46:Generated_Source\PSoC5/ADC_1.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ADC_1.c **** volatile uint8 ADC_1_started = 0u;
  48:Generated_Source\PSoC5/ADC_1.c **** 
  49:Generated_Source\PSoC5/ADC_1.c **** /* Flag to hold ADC config number. By default active config is 1. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 3


  50:Generated_Source\PSoC5/ADC_1.c **** volatile uint8 ADC_1_Config = 1u;
  51:Generated_Source\PSoC5/ADC_1.c **** 
  52:Generated_Source\PSoC5/ADC_1.c **** volatile int32 ADC_1_Offset = 0;
  53:Generated_Source\PSoC5/ADC_1.c **** volatile int32 ADC_1_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC_1.c **** 
  55:Generated_Source\PSoC5/ADC_1.c **** 
  56:Generated_Source\PSoC5/ADC_1.c **** /***************************************
  57:Generated_Source\PSoC5/ADC_1.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC_1.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC_1.c **** 
  60:Generated_Source\PSoC5/ADC_1.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC_1.c **** static ADC_1_GCOR_STRUCT ADC_1_gcor[ADC_1_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC_1.c **** 
  63:Generated_Source\PSoC5/ADC_1.c **** 
  64:Generated_Source\PSoC5/ADC_1.c **** 
  65:Generated_Source\PSoC5/ADC_1.c **** /***************************************
  66:Generated_Source\PSoC5/ADC_1.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC_1.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC_1.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC_1.c **** 
  73:Generated_Source\PSoC5/ADC_1.c **** 
  74:Generated_Source\PSoC5/ADC_1.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Init
  76:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC_1.c **** *
  78:Generated_Source\PSoC5/ADC_1.c **** * Summary:
  79:Generated_Source\PSoC5/ADC_1.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC_1.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC_1.c **** * ADC_1_Start().
  82:Generated_Source\PSoC5/ADC_1.c **** *
  83:Generated_Source\PSoC5/ADC_1.c **** *
  84:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC_1.c **** *  None
  86:Generated_Source\PSoC5/ADC_1.c **** *
  87:Generated_Source\PSoC5/ADC_1.c **** * Return:
  88:Generated_Source\PSoC5/ADC_1.c **** *  None
  89:Generated_Source\PSoC5/ADC_1.c **** *
  90:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_Init(void) 
  92:Generated_Source\PSoC5/ADC_1.c **** {
  66              		.loc 1 92 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 02AF     		add	r7, sp, #8
  77              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ADC_1.c **** 
  94:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_Config = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 4


  78              		.loc 1 94 0
  79 0006 324B     		ldr	r3, .L2
  80 0008 0122     		movs	r2, #1
  81 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_convDone = 0u;
  82              		.loc 1 95 0
  83 000c 314B     		ldr	r3, .L2+4
  84 000e 0022     		movs	r2, #0
  85 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ADC_1.c **** 
  97:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  86              		.loc 1 97 0
  87 0012 1020     		movs	r0, #16
  88 0014 FFF7FEFF 		bl	ADC_1_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ADC_1.c **** 
  99:Generated_Source\PSoC5/ADC_1.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_theACLK_SetMode(CYCLK_DUTY);
  89              		.loc 1 101 0
  90 0018 1020     		movs	r0, #16
  91 001a FFF7FEFF 		bl	ADC_1_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC_1.c **** 
 104:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC_1.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC_1.c ****         CyIntSetPriority(ADC_1_INTC_NUMBER, ADC_1_INTC_PRIOR_NUMBER);
  92              		.loc 1 106 0
  93 001e 0721     		movs	r1, #7
  94 0020 1D20     		movs	r0, #29
  95 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ADC_1.c ****     #endif   /* End ADC_1_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC_1.c **** 
 109:Generated_Source\PSoC5/ADC_1.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_DEM0_REG    = ADC_1_CFG1_DSM_DEM0;
  96              		.loc 1 110 0
  97 0026 2C4B     		ldr	r3, .L2+8
  98 0028 0422     		movs	r2, #4
  99 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_DEM1_REG    = ADC_1_CFG1_DSM_DEM1;
 100              		.loc 1 111 0
 101 002c 2B4B     		ldr	r3, .L2+12
 102 002e 0022     		movs	r2, #0
 103 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_MISC_REG    = ADC_1_CFG1_DSM_MISC;
 104              		.loc 1 112 0
 105 0032 2B4B     		ldr	r3, .L2+16
 106 0034 0022     		movs	r2, #0
 107 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CLK_REG    |= ADC_1_CFG1_DSM_CLK;
 108              		.loc 1 113 0
 109 0038 2A4A     		ldr	r2, .L2+20
 110 003a 2A4B     		ldr	r3, .L2+20
 111 003c 1B78     		ldrb	r3, [r3]
 112 003e DBB2     		uxtb	r3, r3
 113 0040 43F01803 		orr	r3, r3, #24
 114 0044 DBB2     		uxtb	r3, r3
 115 0046 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 5


 114:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_REF1_REG    = ADC_1_CFG1_DSM_REF1;
 116              		.loc 1 114 0
 117 0048 274B     		ldr	r3, .L2+24
 118 004a 0022     		movs	r2, #0
 119 004c 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/ADC_1.c **** 
 116:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_OUT0_REG    = ADC_1_CFG1_DSM_OUT0;
 120              		.loc 1 116 0
 121 004e 274B     		ldr	r3, .L2+28
 122 0050 0022     		movs	r2, #0
 123 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_OUT1_REG    = ADC_1_CFG1_DSM_OUT1;
 124              		.loc 1 117 0
 125 0054 264B     		ldr	r3, .L2+32
 126 0056 0022     		movs	r2, #0
 127 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ADC_1.c **** 
 119:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR0_REG     = ADC_1_CFG1_DSM_CR0;
 128              		.loc 1 119 0
 129 005a 264B     		ldr	r3, .L2+36
 130 005c 0A22     		movs	r2, #10
 131 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR1_REG     = ADC_1_CFG1_DSM_CR1;
 132              		.loc 1 120 0
 133 0060 254B     		ldr	r3, .L2+40
 134 0062 0022     		movs	r2, #0
 135 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ADC_1.c **** #if(ADC_1_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR3_REG     |= ADC_1_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC_1.c **** #else
 124:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR3_REG     = ADC_1_CFG1_DSM_CR3;
 136              		.loc 1 124 0
 137 0066 254B     		ldr	r3, .L2+44
 138 0068 0022     		movs	r2, #0
 139 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ADC_1.c **** #endif /* ADC_1_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR8_REG     = ADC_1_CFG1_DSM_CR8;
 140              		.loc 1 126 0
 141 006c 244B     		ldr	r3, .L2+48
 142 006e 5B22     		movs	r2, #91
 143 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR9_REG     = ADC_1_CFG1_DSM_CR9;
 144              		.loc 1 127 0
 145 0072 244B     		ldr	r3, .L2+52
 146 0074 5E22     		movs	r2, #94
 147 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR13_REG    = ADC_1_CFG1_DSM_CR13;
 148              		.loc 1 128 0
 149 0078 234B     		ldr	r3, .L2+56
 150 007a 0022     		movs	r2, #0
 151 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ADC_1.c **** 
 130:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_SR_REG      = ADC_1_CFG1_DEC_SR;
 152              		.loc 1 130 0
 153 007e 234B     		ldr	r3, .L2+60
 154 0080 1422     		movs	r2, #20
 155 0082 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 6


 131:Generated_Source\PSoC5/ADC_1.c **** 
 132:Generated_Source\PSoC5/ADC_1.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_GainCompensation(ADC_1_CFG1_INPUT_RANGE,
 156              		.loc 1 133 0
 157 0084 0123     		movs	r3, #1
 158 0086 0093     		str	r3, [sp]
 159 0088 1323     		movs	r3, #19
 160 008a 4FF40042 		mov	r2, #32768
 161 008e 49F25B11 		movw	r1, #37211
 162 0092 0520     		movs	r0, #5
 163 0094 FFF7FEFF 		bl	ADC_1_GainCompensation
 134:Generated_Source\PSoC5/ADC_1.c ****                                       ADC_1_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC_1.c ****                                       ADC_1_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC_1.c ****                                       ADC_1_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC_1.c ****                                       ADC_1_CFG1);
 138:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_GainCompensation(ADC_1_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG2);
 144:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_GainCompensation(ADC_1_CFG3_INPUT_RANGE,
 147:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG3);
 151:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_GainCompensation(ADC_1_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC_1.c ****                                           ADC_1_CFG4);
 158:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC_1.c **** 
 160:Generated_Source\PSoC5/ADC_1.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_GVAL_REG = ADC_1_gcor[ADC_1_Config - 1u].gval;
 164              		.loc 1 161 0
 165 0098 1D4A     		ldr	r2, .L2+64
 166 009a 0D4B     		ldr	r3, .L2
 167 009c 1B78     		ldrb	r3, [r3]
 168 009e DBB2     		uxtb	r3, r3
 169 00a0 013B     		subs	r3, r3, #1
 170 00a2 1C49     		ldr	r1, .L2+68
 171 00a4 9B00     		lsls	r3, r3, #2
 172 00a6 0B44     		add	r3, r3, r1
 173 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 174 00aa 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC_1.c ****     CY_SET_REG16(ADC_1_DEC_GCOR_16B_PTR, ADC_1_gcor[ADC_1_Config - 1u].gcor);
 175              		.loc 1 162 0
 176 00ac 1A4A     		ldr	r2, .L2+72
 177 00ae 084B     		ldr	r3, .L2
 178 00b0 1B78     		ldrb	r3, [r3]
 179 00b2 DBB2     		uxtb	r3, r3
 180 00b4 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 7


 181 00b6 1749     		ldr	r1, .L2+68
 182 00b8 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 183 00bc 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ADC_1.c **** 
 164:Generated_Source\PSoC5/ADC_1.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_InitConfig(ADC_1_Config);
 184              		.loc 1 165 0
 185 00be 044B     		ldr	r3, .L2
 186 00c0 1B78     		ldrb	r3, [r3]
 187 00c2 DBB2     		uxtb	r3, r3
 188 00c4 1846     		mov	r0, r3
 189 00c6 FFF7FEFF 		bl	ADC_1_InitConfig
 166:Generated_Source\PSoC5/ADC_1.c **** }
 190              		.loc 1 166 0
 191 00ca 00BF     		nop
 192 00cc BD46     		mov	sp, r7
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 00ce 80BD     		pop	{r7, pc}
 196              	.L3:
 197              		.align	2
 198              	.L2:
 199 00d0 00000000 		.word	ADC_1_Config
 200 00d4 00000000 		.word	ADC_1_convDone
 201 00d8 96580040 		.word	1073764502
 202 00dc 97580040 		.word	1073764503
 203 00e0 9E580040 		.word	1073764510
 204 00e4 075B0040 		.word	1073765127
 205 00e8 93580040 		.word	1073764499
 206 00ec 885B0040 		.word	1073765256
 207 00f0 895B0040 		.word	1073765257
 208 00f4 80580040 		.word	1073764480
 209 00f8 81580040 		.word	1073764481
 210 00fc 83580040 		.word	1073764483
 211 0100 88580040 		.word	1073764488
 212 0104 89580040 		.word	1073764489
 213 0108 8D580040 		.word	1073764493
 214 010c 014E0040 		.word	1073761793
 215 0110 0E4E0040 		.word	1073761806
 216 0114 08000000 		.word	ADC_1_gcor
 217 0118 0C4E0040 		.word	1073761804
 218              		.cfi_endproc
 219              	.LFE0:
 220              		.size	ADC_1_Init, .-ADC_1_Init
 221              		.section	.text.ADC_1_Enable,"ax",%progbits
 222              		.align	2
 223              		.global	ADC_1_Enable
 224              		.thumb
 225              		.thumb_func
 226              		.type	ADC_1_Enable, %function
 227              	ADC_1_Enable:
 228              	.LFB1:
 167:Generated_Source\PSoC5/ADC_1.c **** 
 168:Generated_Source\PSoC5/ADC_1.c **** 
 169:Generated_Source\PSoC5/ADC_1.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Enable
 171:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 8


 172:Generated_Source\PSoC5/ADC_1.c **** *
 173:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 174:Generated_Source\PSoC5/ADC_1.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC_1.c **** *
 176:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 177:Generated_Source\PSoC5/ADC_1.c **** *  None
 178:Generated_Source\PSoC5/ADC_1.c **** *
 179:Generated_Source\PSoC5/ADC_1.c **** * Return:
 180:Generated_Source\PSoC5/ADC_1.c **** *  None
 181:Generated_Source\PSoC5/ADC_1.c **** *
 182:Generated_Source\PSoC5/ADC_1.c **** * Side Effects: 
 183:Generated_Source\PSoC5/ADC_1.c **** *  Enables internal interrupt.
 184:Generated_Source\PSoC5/ADC_1.c **** *
 185:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_Enable(void) 
 187:Generated_Source\PSoC5/ADC_1.c **** {
 229              		.loc 1 187 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 188:Generated_Source\PSoC5/ADC_1.c **** 	uint8 config;
 189:Generated_Source\PSoC5/ADC_1.c ****     uint8 enableInterrupts;
 190:Generated_Source\PSoC5/ADC_1.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 190 0
 242 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 243 000a 0346     		mov	r3, r0
 244 000c FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/ADC_1.c **** 
 192:Generated_Source\PSoC5/ADC_1.c ****     /* Read volatile variable to the local variable */
 193:Generated_Source\PSoC5/ADC_1.c ****     config = ADC_1_Config;
 245              		.loc 1 193 0
 246 000e 444B     		ldr	r3, .L5
 247 0010 1B78     		ldrb	r3, [r3]
 248 0012 BB71     		strb	r3, [r7, #6]
 194:Generated_Source\PSoC5/ADC_1.c ****     
 195:Generated_Source\PSoC5/ADC_1.c ****     /* Enable active mode power for ADC */
 196:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_DEC_REG |= ADC_1_ACT_PWR_DEC_EN;
 249              		.loc 1 196 0
 250 0014 434A     		ldr	r2, .L5+4
 251 0016 434B     		ldr	r3, .L5+4
 252 0018 1B78     		ldrb	r3, [r3]
 253 001a DBB2     		uxtb	r3, r3
 254 001c 43F00103 		orr	r3, r3, #1
 255 0020 DBB2     		uxtb	r3, r3
 256 0022 1370     		strb	r3, [r2]
 197:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_DSM_REG |= ADC_1_ACT_PWR_DSM_EN;
 257              		.loc 1 197 0
 258 0024 3F4A     		ldr	r2, .L5+4
 259 0026 3F4B     		ldr	r3, .L5+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 9


 260 0028 1B78     		ldrb	r3, [r3]
 261 002a DBB2     		uxtb	r3, r3
 262 002c 43F01003 		orr	r3, r3, #16
 263 0030 DBB2     		uxtb	r3, r3
 264 0032 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/ADC_1.c **** 
 199:Generated_Source\PSoC5/ADC_1.c ****      /* Enable alternative active mode power for ADC */
 200:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_DEC_REG |= ADC_1_STBY_PWR_DEC_EN;
 265              		.loc 1 200 0
 266 0034 3C4A     		ldr	r2, .L5+8
 267 0036 3C4B     		ldr	r3, .L5+8
 268 0038 1B78     		ldrb	r3, [r3]
 269 003a DBB2     		uxtb	r3, r3
 270 003c 43F00103 		orr	r3, r3, #1
 271 0040 DBB2     		uxtb	r3, r3
 272 0042 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_DSM_REG |= ADC_1_STBY_PWR_DSM_EN;
 273              		.loc 1 201 0
 274 0044 384A     		ldr	r2, .L5+8
 275 0046 384B     		ldr	r3, .L5+8
 276 0048 1B78     		ldrb	r3, [r3]
 277 004a DBB2     		uxtb	r3, r3
 278 004c 43F01003 		orr	r3, r3, #16
 279 0050 DBB2     		uxtb	r3, r3
 280 0052 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/ADC_1.c **** 
 203:Generated_Source\PSoC5/ADC_1.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 204:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG |= ADC_1_IGNORE_PRESA1;
 281              		.loc 1 204 0
 282 0054 354A     		ldr	r2, .L5+12
 283 0056 354B     		ldr	r3, .L5+12
 284 0058 1B78     		ldrb	r3, [r3]
 285 005a DBB2     		uxtb	r3, r3
 286 005c 43F00203 		orr	r3, r3, #2
 287 0060 DBB2     		uxtb	r3, r3
 288 0062 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG |= ADC_1_IGNORE_PRESA2;
 289              		.loc 1 205 0
 290 0064 324A     		ldr	r2, .L5+16
 291 0066 324B     		ldr	r3, .L5+16
 292 0068 1B78     		ldrb	r3, [r3]
 293 006a DBB2     		uxtb	r3, r3
 294 006c 43F00203 		orr	r3, r3, #2
 295 0070 DBB2     		uxtb	r3, r3
 296 0072 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ADC_1.c **** 
 207:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR17_REG |= (ADC_1_DSM_EN_BUF_VREF | ADC_1_DSM_EN_BUF_VCM);
 297              		.loc 1 207 0
 298 0074 2F4A     		ldr	r2, .L5+20
 299 0076 2F4B     		ldr	r3, .L5+20
 300 0078 1B78     		ldrb	r3, [r3]
 301 007a DBB2     		uxtb	r3, r3
 302 007c 43F00303 		orr	r3, r3, #3
 303 0080 DBB2     		uxtb	r3, r3
 304 0082 1370     		strb	r3, [r2]
 208:Generated_Source\PSoC5/ADC_1.c **** 
 209:Generated_Source\PSoC5/ADC_1.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 10


 210:Generated_Source\PSoC5/ADC_1.c ****     #if (((ADC_1_CFG1_REFERENCE == ADC_1_EXT_REF_ON_P03) || \
 211:Generated_Source\PSoC5/ADC_1.c ****           (ADC_1_CFG1_REFERENCE == ADC_1_EXT_REF_ON_P32)) || \
 212:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 1) && \
 213:Generated_Source\PSoC5/ADC_1.c ****           ((ADC_1_CFG2_REFERENCE == ADC_1_EXT_REF_ON_P03) ||  \
 214:Generated_Source\PSoC5/ADC_1.c ****            (ADC_1_CFG2_REFERENCE == ADC_1_EXT_REF_ON_P32))) || \
 215:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 2) && \
 216:Generated_Source\PSoC5/ADC_1.c ****           ((ADC_1_CFG3_REFERENCE == ADC_1_EXT_REF_ON_P03) ||  \
 217:Generated_Source\PSoC5/ADC_1.c ****            (ADC_1_CFG3_REFERENCE == ADC_1_EXT_REF_ON_P32))) || \
 218:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 3) && \
 219:Generated_Source\PSoC5/ADC_1.c ****           ((ADC_1_CFG4_REFERENCE == ADC_1_EXT_REF_ON_P03) || \
 220:Generated_Source\PSoC5/ADC_1.c ****            (ADC_1_CFG4_REFERENCE == ADC_1_EXT_REF_ON_P32))))
 221:Generated_Source\PSoC5/ADC_1.c ****         if (((config == 1u) &&
 222:Generated_Source\PSoC5/ADC_1.c ****             ((ADC_1_CFG1_REFERENCE == ADC_1_EXT_REF_ON_P03) ||
 223:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG1_REFERENCE == ADC_1_EXT_REF_ON_P32))) ||
 224:Generated_Source\PSoC5/ADC_1.c ****             ((config == 2u) &&
 225:Generated_Source\PSoC5/ADC_1.c ****             ((ADC_1_CFG2_REFERENCE == ADC_1_EXT_REF_ON_P03) ||
 226:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_REFERENCE == ADC_1_EXT_REF_ON_P32))) ||
 227:Generated_Source\PSoC5/ADC_1.c ****             ((config == 3u) &&
 228:Generated_Source\PSoC5/ADC_1.c ****             ((ADC_1_CFG3_REFERENCE == ADC_1_EXT_REF_ON_P03) ||
 229:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_REFERENCE == ADC_1_EXT_REF_ON_P32))) ||
 230:Generated_Source\PSoC5/ADC_1.c ****             ((config == 4u) &&
 231:Generated_Source\PSoC5/ADC_1.c ****             ((ADC_1_CFG4_REFERENCE == ADC_1_EXT_REF_ON_P03) ||
 232:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_REFERENCE == ADC_1_EXT_REF_ON_P32))))
 233:Generated_Source\PSoC5/ADC_1.c ****         {
 234:Generated_Source\PSoC5/ADC_1.c ****             /* Disable the REFBUF0 */
 235:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR17_REG &= (uint8)~ADC_1_DSM_EN_BUF_VREF;
 236:Generated_Source\PSoC5/ADC_1.c ****         }
 237:Generated_Source\PSoC5/ADC_1.c ****     #endif /* External ref */
 238:Generated_Source\PSoC5/ADC_1.c **** 
 239:Generated_Source\PSoC5/ADC_1.c ****     #if (((ADC_1_CFG1_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF) || \
 240:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 1) && \
 241:Generated_Source\PSoC5/ADC_1.c ****           (ADC_1_CFG2_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 2) && \
 243:Generated_Source\PSoC5/ADC_1.c ****           (ADC_1_CFG3_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)) || \
 244:Generated_Source\PSoC5/ADC_1.c ****          ((ADC_1_DEFAULT_NUM_CONFIGS > 3) && \
 245:Generated_Source\PSoC5/ADC_1.c ****           (ADC_1_CFG4_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF))))
 246:Generated_Source\PSoC5/ADC_1.c ****         if(((config == 1u) &&
 247:Generated_Source\PSoC5/ADC_1.c ****             (ADC_1_CFG1_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF) &&
 248:Generated_Source\PSoC5/ADC_1.c ****             ((ADC_1_CFG1_REFERENCE != ADC_1_EXT_REF_ON_P03) &&
 249:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG1_REFERENCE != ADC_1_EXT_REF_ON_P32))) ||
 250:Generated_Source\PSoC5/ADC_1.c ****              ((config == 2u) &&
 251:Generated_Source\PSoC5/ADC_1.c ****               (ADC_1_CFG2_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF) &&
 252:Generated_Source\PSoC5/ADC_1.c ****              ((ADC_1_CFG2_REFERENCE != ADC_1_EXT_REF_ON_P03) &&
 253:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_REFERENCE != ADC_1_EXT_REF_ON_P32))) ||
 254:Generated_Source\PSoC5/ADC_1.c ****              ((config == 3u) &&
 255:Generated_Source\PSoC5/ADC_1.c ****               (ADC_1_CFG3_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF) &&
 256:Generated_Source\PSoC5/ADC_1.c ****              ((ADC_1_CFG3_REFERENCE != ADC_1_EXT_REF_ON_P03) &&
 257:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_REFERENCE != ADC_1_EXT_REF_ON_P32))) ||
 258:Generated_Source\PSoC5/ADC_1.c ****              ((config == 4u) &&
 259:Generated_Source\PSoC5/ADC_1.c ****               (ADC_1_CFG4_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF) &&
 260:Generated_Source\PSoC5/ADC_1.c ****              ((ADC_1_CFG4_REFERENCE != ADC_1_EXT_REF_ON_P03) &&
 261:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_REFERENCE != ADC_1_EXT_REF_ON_P32))))
 262:Generated_Source\PSoC5/ADC_1.c ****         {
 263:Generated_Source\PSoC5/ADC_1.c ****             /* Enable the REFBUF1 */
 264:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF0_REG |= ADC_1_DSM_EN_BUF_VREF_INN;
 265:Generated_Source\PSoC5/ADC_1.c ****         }
 266:Generated_Source\PSoC5/ADC_1.c ****     #endif /* VSSA_TO_2VREF */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 11


 267:Generated_Source\PSoC5/ADC_1.c ****     if(config != 0u)
 268:Generated_Source\PSoC5/ADC_1.c ****     {
 269:Generated_Source\PSoC5/ADC_1.c ****         /* Suppress compiler warning */
 270:Generated_Source\PSoC5/ADC_1.c ****     }
 271:Generated_Source\PSoC5/ADC_1.c **** 
 272:Generated_Source\PSoC5/ADC_1.c ****     /* Wait for 3 microseconds */
 273:Generated_Source\PSoC5/ADC_1.c ****     CyDelayUs(ADC_1_PRES_DELAY_TIME);
 305              		.loc 1 273 0
 306 0084 0320     		movs	r0, #3
 307 0086 FFF7FEFF 		bl	CyDelayUs
 274:Generated_Source\PSoC5/ADC_1.c **** 
 275:Generated_Source\PSoC5/ADC_1.c ****     /* Enable the press circuit */
 276:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG &= (uint8)~ADC_1_IGNORE_PRESA1;
 308              		.loc 1 276 0
 309 008a 284A     		ldr	r2, .L5+12
 310 008c 274B     		ldr	r3, .L5+12
 311 008e 1B78     		ldrb	r3, [r3]
 312 0090 DBB2     		uxtb	r3, r3
 313 0092 23F00203 		bic	r3, r3, #2
 314 0096 DBB2     		uxtb	r3, r3
 315 0098 1370     		strb	r3, [r2]
 277:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG &= (uint8)~ADC_1_IGNORE_PRESA2;
 316              		.loc 1 277 0
 317 009a 254A     		ldr	r2, .L5+16
 318 009c 244B     		ldr	r3, .L5+16
 319 009e 1B78     		ldrb	r3, [r3]
 320 00a0 DBB2     		uxtb	r3, r3
 321 00a2 23F00203 		bic	r3, r3, #2
 322 00a6 DBB2     		uxtb	r3, r3
 323 00a8 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/ADC_1.c **** 
 279:Generated_Source\PSoC5/ADC_1.c ****     /* Enable negative pumps for DSM  */
 280:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PUMP_CR1_REG  |= ( ADC_1_PUMP_CR1_CLKSEL | ADC_1_PUMP_CR1_FORCE );
 324              		.loc 1 280 0
 325 00aa 234A     		ldr	r2, .L5+24
 326 00ac 224B     		ldr	r3, .L5+24
 327 00ae 1B78     		ldrb	r3, [r3]
 328 00b0 DBB2     		uxtb	r3, r3
 329 00b2 43F00603 		orr	r3, r3, #6
 330 00b6 DBB2     		uxtb	r3, r3
 331 00b8 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/ADC_1.c **** 
 282:Generated_Source\PSoC5/ADC_1.c ****     /* Enable Modulator Chopping if required */
 283:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR2_REG = ADC_1_CFG1_DSM_CR2;
 332              		.loc 1 283 0
 333 00ba 204B     		ldr	r3, .L5+28
 334 00bc 7A22     		movs	r2, #122
 335 00be 1A70     		strb	r2, [r3]
 284:Generated_Source\PSoC5/ADC_1.c **** 
 285:Generated_Source\PSoC5/ADC_1.c ****     /* This is only valid if there is an internal clock */
 286:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_INTERNAL_CLK)
 287:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_PWRMGR_CLK_REG |= ADC_1_ACT_PWR_CLK_EN;
 336              		.loc 1 287 0
 337 00c0 1F4A     		ldr	r2, .L5+32
 338 00c2 1F4B     		ldr	r3, .L5+32
 339 00c4 1B78     		ldrb	r3, [r3]
 340 00c6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 12


 341 00c8 43F00103 		orr	r3, r3, #1
 342 00cc DBB2     		uxtb	r3, r3
 343 00ce 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_STBY_PWRMGR_CLK_REG |= ADC_1_STBY_PWR_CLK_EN;
 344              		.loc 1 288 0
 345 00d0 1C4A     		ldr	r2, .L5+36
 346 00d2 1C4B     		ldr	r3, .L5+36
 347 00d4 1B78     		ldrb	r3, [r3]
 348 00d6 DBB2     		uxtb	r3, r3
 349 00d8 43F00103 		orr	r3, r3, #1
 350 00dc DBB2     		uxtb	r3, r3
 351 00de 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
 290:Generated_Source\PSoC5/ADC_1.c **** 
 291:Generated_Source\PSoC5/ADC_1.c ****     /* Enable the active and alternate active power for charge pump clock */
 292:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_1_ACT_PWR_CHARGE_PUMP_CLK_EN;
 352              		.loc 1 292 0
 353 00e0 194A     		ldr	r2, .L5+40
 354 00e2 194B     		ldr	r3, .L5+40
 355 00e4 1B78     		ldrb	r3, [r3]
 356 00e6 DBB2     		uxtb	r3, r3
 357 00e8 43F00103 		orr	r3, r3, #1
 358 00ec DBB2     		uxtb	r3, r3
 359 00ee 1370     		strb	r3, [r2]
 293:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_1_STBY_PWR_CHARGE_PUMP_CLK_EN;
 360              		.loc 1 293 0
 361 00f0 164A     		ldr	r2, .L5+44
 362 00f2 164B     		ldr	r3, .L5+44
 363 00f4 1B78     		ldrb	r3, [r3]
 364 00f6 DBB2     		uxtb	r3, r3
 365 00f8 43F00103 		orr	r3, r3, #1
 366 00fc DBB2     		uxtb	r3, r3
 367 00fe 1370     		strb	r3, [r2]
 294:Generated_Source\PSoC5/ADC_1.c **** 
 295:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_IRQ_REMOVE == 0u)
 296:Generated_Source\PSoC5/ADC_1.c ****         /* Clear a pending interrupt */
 297:Generated_Source\PSoC5/ADC_1.c ****         CyIntClearPending(ADC_1_INTC_NUMBER);
 368              		.loc 1 297 0
 369 0100 134B     		ldr	r3, .L5+48
 370 0102 4FF00052 		mov	r2, #536870912
 371 0106 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ADC_1.c ****         /* Enable interrupt */
 299:Generated_Source\PSoC5/ADC_1.c ****         CyIntEnable(ADC_1_INTC_NUMBER);
 372              		.loc 1 299 0
 373 0108 124B     		ldr	r3, .L5+52
 374 010a 4FF00052 		mov	r2, #536870912
 375 010e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC5/ADC_1.c ****     #endif   /* End ADC_1_IRQ_REMOVE */
 301:Generated_Source\PSoC5/ADC_1.c **** 
 302:Generated_Source\PSoC5/ADC_1.c ****     CyExitCriticalSection(enableInterrupts);
 376              		.loc 1 302 0
 377 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 0112 1846     		mov	r0, r3
 379 0114 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC5/ADC_1.c **** 
 304:Generated_Source\PSoC5/ADC_1.c **** }
 380              		.loc 1 304 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 13


 381 0118 00BF     		nop
 382 011a 0837     		adds	r7, r7, #8
 383              		.cfi_def_cfa_offset 8
 384 011c BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 011e 80BD     		pop	{r7, pc}
 388              	.L6:
 389              		.align	2
 390              	.L5:
 391 0120 00000000 		.word	ADC_1_Config
 392 0124 AA430040 		.word	1073759146
 393 0128 BA430040 		.word	1073759162
 394 012c F8460040 		.word	1073759992
 395 0130 F9460040 		.word	1073759993
 396 0134 91580040 		.word	1073764497
 397 0138 77580040 		.word	1073764471
 398 013c 82580040 		.word	1073764482
 399 0140 A1430040 		.word	1073759137
 400 0144 B1430040 		.word	1073759153
 401 0148 A2430040 		.word	1073759138
 402 014c B2430040 		.word	1073759154
 403 0150 80E200E0 		.word	-536812928
 404 0154 00E100E0 		.word	-536813312
 405              		.cfi_endproc
 406              	.LFE1:
 407              		.size	ADC_1_Enable, .-ADC_1_Enable
 408              		.section	.text.ADC_1_Start,"ax",%progbits
 409              		.align	2
 410              		.global	ADC_1_Start
 411              		.thumb
 412              		.thumb_func
 413              		.type	ADC_1_Start, %function
 414              	ADC_1_Start:
 415              	.LFB2:
 305:Generated_Source\PSoC5/ADC_1.c **** 
 306:Generated_Source\PSoC5/ADC_1.c **** 
 307:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 308:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Start
 309:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 310:Generated_Source\PSoC5/ADC_1.c **** *
 311:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 312:Generated_Source\PSoC5/ADC_1.c **** *  Performs all required initialization for this component and enables
 313:Generated_Source\PSoC5/ADC_1.c **** *  the power. It configure all the register the first time it is called.
 314:Generated_Source\PSoC5/ADC_1.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 315:Generated_Source\PSoC5/ADC_1.c **** *  on the power. If multiple configurations are selected, it will
 316:Generated_Source\PSoC5/ADC_1.c **** *  configure the ADC for configuration 1 by default, unless the
 317:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_SelectConfiguration( ) function has been called to change
 318:Generated_Source\PSoC5/ADC_1.c **** *  the default setting.
 319:Generated_Source\PSoC5/ADC_1.c **** *
 320:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 321:Generated_Source\PSoC5/ADC_1.c **** *  None
 322:Generated_Source\PSoC5/ADC_1.c **** *
 323:Generated_Source\PSoC5/ADC_1.c **** * Return:
 324:Generated_Source\PSoC5/ADC_1.c **** *  None
 325:Generated_Source\PSoC5/ADC_1.c **** *
 326:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 14


 327:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_initVar:  Used to check the initial configuration,
 328:Generated_Source\PSoC5/ADC_1.c **** *  modified when this function is called for the first time.
 329:Generated_Source\PSoC5/ADC_1.c **** *
 330:Generated_Source\PSoC5/ADC_1.c **** * Side Effects: 
 331:Generated_Source\PSoC5/ADC_1.c **** *  Enables internal interrupt.
 332:Generated_Source\PSoC5/ADC_1.c **** *
 333:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 334:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_Start(void) 
 335:Generated_Source\PSoC5/ADC_1.c **** {
 416              		.loc 1 335 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 336:Generated_Source\PSoC5/ADC_1.c ****     if(ADC_1_initVar == 0u)
 426              		.loc 1 336 0
 427 0004 084B     		ldr	r3, .L10
 428 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0008 002B     		cmp	r3, #0
 430 000a 09D1     		bne	.L8
 337:Generated_Source\PSoC5/ADC_1.c ****     {
 338:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_started == 0u)
 431              		.loc 1 338 0
 432 000c 074B     		ldr	r3, .L10+4
 433 000e 1B78     		ldrb	r3, [r3]
 434 0010 DBB2     		uxtb	r3, r3
 435 0012 002B     		cmp	r3, #0
 436 0014 01D1     		bne	.L9
 339:Generated_Source\PSoC5/ADC_1.c ****         {
 340:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_Init();
 437              		.loc 1 340 0
 438 0016 FFF7FEFF 		bl	ADC_1_Init
 439              	.L9:
 341:Generated_Source\PSoC5/ADC_1.c ****         }
 342:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_initVar = 1u;
 440              		.loc 1 342 0
 441 001a 034B     		ldr	r3, .L10
 442 001c 0122     		movs	r2, #1
 443 001e 1A70     		strb	r2, [r3]
 444              	.L8:
 343:Generated_Source\PSoC5/ADC_1.c ****     }
 344:Generated_Source\PSoC5/ADC_1.c **** 
 345:Generated_Source\PSoC5/ADC_1.c ****     /* Enable the ADC */
 346:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_Enable();
 445              		.loc 1 346 0
 446 0020 FFF7FEFF 		bl	ADC_1_Enable
 347:Generated_Source\PSoC5/ADC_1.c **** }
 447              		.loc 1 347 0
 448 0024 00BF     		nop
 449 0026 80BD     		pop	{r7, pc}
 450              	.L11:
 451              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 15


 452              	.L10:
 453 0028 00000000 		.word	ADC_1_initVar
 454 002c 00000000 		.word	ADC_1_started
 455              		.cfi_endproc
 456              	.LFE2:
 457              		.size	ADC_1_Start, .-ADC_1_Start
 458              		.section	.text.ADC_1_Stop,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_1_Stop
 461              		.thumb
 462              		.thumb_func
 463              		.type	ADC_1_Stop, %function
 464              	ADC_1_Stop:
 465              	.LFB3:
 348:Generated_Source\PSoC5/ADC_1.c **** 
 349:Generated_Source\PSoC5/ADC_1.c **** 
 350:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 351:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Stop
 352:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 353:Generated_Source\PSoC5/ADC_1.c **** *
 354:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 355:Generated_Source\PSoC5/ADC_1.c **** *  This function stops and powers down the ADC component and the internal
 356:Generated_Source\PSoC5/ADC_1.c **** *  clock if the external clock is not selected. If an external clock is
 357:Generated_Source\PSoC5/ADC_1.c **** *  used, it is up to the designer to power down the external clock it
 358:Generated_Source\PSoC5/ADC_1.c **** *  required.
 359:Generated_Source\PSoC5/ADC_1.c **** *
 360:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 361:Generated_Source\PSoC5/ADC_1.c **** *  None
 362:Generated_Source\PSoC5/ADC_1.c **** *
 363:Generated_Source\PSoC5/ADC_1.c **** * Return:
 364:Generated_Source\PSoC5/ADC_1.c **** *  None
 365:Generated_Source\PSoC5/ADC_1.c **** *
 366:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_Stop(void) 
 368:Generated_Source\PSoC5/ADC_1.c **** {
 466              		.loc 1 368 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 369:Generated_Source\PSoC5/ADC_1.c ****     uint8 enableInterrupts;
 370:Generated_Source\PSoC5/ADC_1.c ****     enableInterrupts = CyEnterCriticalSection();
 478              		.loc 1 370 0
 479 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 480 000a 0346     		mov	r3, r0
 481 000c FB71     		strb	r3, [r7, #7]
 371:Generated_Source\PSoC5/ADC_1.c **** 
 372:Generated_Source\PSoC5/ADC_1.c ****     /* Stop conversions */
 373:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_CR_REG &= (uint8)~ADC_1_DEC_START_CONV;
 482              		.loc 1 373 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 16


 483 000e 4D4A     		ldr	r2, .L13
 484 0010 4C4B     		ldr	r3, .L13
 485 0012 1B78     		ldrb	r3, [r3]
 486 0014 DBB2     		uxtb	r3, r3
 487 0016 23F00103 		bic	r3, r3, #1
 488 001a DBB2     		uxtb	r3, r3
 489 001c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_SR_REG |=  ADC_1_DEC_INTR_CLEAR;
 490              		.loc 1 374 0
 491 001e 4A4A     		ldr	r2, .L13+4
 492 0020 494B     		ldr	r3, .L13+4
 493 0022 1B78     		ldrb	r3, [r3]
 494 0024 DBB2     		uxtb	r3, r3
 495 0026 43F00403 		orr	r3, r3, #4
 496 002a DBB2     		uxtb	r3, r3
 497 002c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ADC_1.c **** 
 376:Generated_Source\PSoC5/ADC_1.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 377:Generated_Source\PSoC5/ADC_1.c ****        enable PRES */
 378:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG |= ADC_1_IGNORE_PRESA1;
 498              		.loc 1 378 0
 499 002e 474A     		ldr	r2, .L13+8
 500 0030 464B     		ldr	r3, .L13+8
 501 0032 1B78     		ldrb	r3, [r3]
 502 0034 DBB2     		uxtb	r3, r3
 503 0036 43F00203 		orr	r3, r3, #2
 504 003a DBB2     		uxtb	r3, r3
 505 003c 1370     		strb	r3, [r2]
 379:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG |= ADC_1_IGNORE_PRESA2;
 506              		.loc 1 379 0
 507 003e 444A     		ldr	r2, .L13+12
 508 0040 434B     		ldr	r3, .L13+12
 509 0042 1B78     		ldrb	r3, [r3]
 510 0044 DBB2     		uxtb	r3, r3
 511 0046 43F00203 		orr	r3, r3, #2
 512 004a DBB2     		uxtb	r3, r3
 513 004c 1370     		strb	r3, [r2]
 380:Generated_Source\PSoC5/ADC_1.c **** 
 381:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR17_REG &= (uint8)~(ADC_1_DSM_EN_BUF_VREF | ADC_1_DSM_EN_BUF_VCM);
 514              		.loc 1 381 0
 515 004e 414A     		ldr	r2, .L13+16
 516 0050 404B     		ldr	r3, .L13+16
 517 0052 1B78     		ldrb	r3, [r3]
 518 0054 DBB2     		uxtb	r3, r3
 519 0056 23F00303 		bic	r3, r3, #3
 520 005a DBB2     		uxtb	r3, r3
 521 005c 1370     		strb	r3, [r2]
 382:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_REF0_REG &= (uint8)~ADC_1_DSM_EN_BUF_VREF_INN;
 522              		.loc 1 382 0
 523 005e 3E4A     		ldr	r2, .L13+20
 524 0060 3D4B     		ldr	r3, .L13+20
 525 0062 1B78     		ldrb	r3, [r3]
 526 0064 DBB2     		uxtb	r3, r3
 527 0066 23F00803 		bic	r3, r3, #8
 528 006a DBB2     		uxtb	r3, r3
 529 006c 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/ADC_1.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 17


 384:Generated_Source\PSoC5/ADC_1.c ****     /* Wait for 3 microseconds. */
 385:Generated_Source\PSoC5/ADC_1.c ****     CyDelayUs(ADC_1_PRES_DELAY_TIME);
 530              		.loc 1 385 0
 531 006e 0320     		movs	r0, #3
 532 0070 FFF7FEFF 		bl	CyDelayUs
 386:Generated_Source\PSoC5/ADC_1.c **** 
 387:Generated_Source\PSoC5/ADC_1.c ****     /* Enable the press circuit */
 388:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG &= (uint8)~ADC_1_IGNORE_PRESA1;
 533              		.loc 1 388 0
 534 0074 354A     		ldr	r2, .L13+8
 535 0076 354B     		ldr	r3, .L13+8
 536 0078 1B78     		ldrb	r3, [r3]
 537 007a DBB2     		uxtb	r3, r3
 538 007c 23F00203 		bic	r3, r3, #2
 539 0080 DBB2     		uxtb	r3, r3
 540 0082 1370     		strb	r3, [r2]
 389:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG &= (uint8)~ADC_1_IGNORE_PRESA2;
 541              		.loc 1 389 0
 542 0084 324A     		ldr	r2, .L13+12
 543 0086 324B     		ldr	r3, .L13+12
 544 0088 1B78     		ldrb	r3, [r3]
 545 008a DBB2     		uxtb	r3, r3
 546 008c 23F00203 		bic	r3, r3, #2
 547 0090 DBB2     		uxtb	r3, r3
 548 0092 1370     		strb	r3, [r2]
 390:Generated_Source\PSoC5/ADC_1.c **** 
 391:Generated_Source\PSoC5/ADC_1.c ****     /* Disable power to the ADC */
 392:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_DSM_REG &= (uint8)~ADC_1_ACT_PWR_DSM_EN;
 549              		.loc 1 392 0
 550 0094 314A     		ldr	r2, .L13+24
 551 0096 314B     		ldr	r3, .L13+24
 552 0098 1B78     		ldrb	r3, [r3]
 553 009a DBB2     		uxtb	r3, r3
 554 009c 23F01003 		bic	r3, r3, #16
 555 00a0 DBB2     		uxtb	r3, r3
 556 00a2 1370     		strb	r3, [r2]
 393:Generated_Source\PSoC5/ADC_1.c **** 
 394:Generated_Source\PSoC5/ADC_1.c ****     /* Disable power to Decimator block */
 395:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_DEC_REG &= (uint8)~ADC_1_ACT_PWR_DEC_EN;
 557              		.loc 1 395 0
 558 00a4 2D4A     		ldr	r2, .L13+24
 559 00a6 2D4B     		ldr	r3, .L13+24
 560 00a8 1B78     		ldrb	r3, [r3]
 561 00aa DBB2     		uxtb	r3, r3
 562 00ac 23F00103 		bic	r3, r3, #1
 563 00b0 DBB2     		uxtb	r3, r3
 564 00b2 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC5/ADC_1.c **** 
 397:Generated_Source\PSoC5/ADC_1.c ****     /* Disable alternative active power to the ADC */
 398:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_1_STBY_PWR_DEC_EN;
 565              		.loc 1 398 0
 566 00b4 2A4A     		ldr	r2, .L13+28
 567 00b6 2A4B     		ldr	r3, .L13+28
 568 00b8 1B78     		ldrb	r3, [r3]
 569 00ba DBB2     		uxtb	r3, r3
 570 00bc 23F00103 		bic	r3, r3, #1
 571 00c0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 18


 572 00c2 1370     		strb	r3, [r2]
 399:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_1_STBY_PWR_DSM_EN;
 573              		.loc 1 399 0
 574 00c4 264A     		ldr	r2, .L13+28
 575 00c6 264B     		ldr	r3, .L13+28
 576 00c8 1B78     		ldrb	r3, [r3]
 577 00ca DBB2     		uxtb	r3, r3
 578 00cc 23F01003 		bic	r3, r3, #16
 579 00d0 DBB2     		uxtb	r3, r3
 580 00d2 1370     		strb	r3, [r2]
 400:Generated_Source\PSoC5/ADC_1.c **** 
 401:Generated_Source\PSoC5/ADC_1.c ****    /* Disable negative pumps for DSM  */
 402:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PUMP_CR1_REG &= (uint8)~(ADC_1_PUMP_CR1_CLKSEL | ADC_1_PUMP_CR1_FORCE );
 581              		.loc 1 402 0
 582 00d4 234A     		ldr	r2, .L13+32
 583 00d6 234B     		ldr	r3, .L13+32
 584 00d8 1B78     		ldrb	r3, [r3]
 585 00da DBB2     		uxtb	r3, r3
 586 00dc 23F00603 		bic	r3, r3, #6
 587 00e0 DBB2     		uxtb	r3, r3
 588 00e2 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ADC_1.c **** 
 404:Generated_Source\PSoC5/ADC_1.c ****     /* This is only valid if there is an internal clock */
 405:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_INTERNAL_CLK)
 406:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_PWRMGR_CLK_REG &= (uint8)~ADC_1_ACT_PWR_CLK_EN;
 589              		.loc 1 406 0
 590 00e4 204A     		ldr	r2, .L13+36
 591 00e6 204B     		ldr	r3, .L13+36
 592 00e8 1B78     		ldrb	r3, [r3]
 593 00ea DBB2     		uxtb	r3, r3
 594 00ec 23F00103 		bic	r3, r3, #1
 595 00f0 DBB2     		uxtb	r3, r3
 596 00f2 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_1_STBY_PWR_CLK_EN;
 597              		.loc 1 407 0
 598 00f4 1D4A     		ldr	r2, .L13+40
 599 00f6 1D4B     		ldr	r3, .L13+40
 600 00f8 1B78     		ldrb	r3, [r3]
 601 00fa DBB2     		uxtb	r3, r3
 602 00fc 23F00103 		bic	r3, r3, #1
 603 0100 DBB2     		uxtb	r3, r3
 604 0102 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
 409:Generated_Source\PSoC5/ADC_1.c **** 
 410:Generated_Source\PSoC5/ADC_1.c ****     /* Disable Modulator Chopping */
 411:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_CR2_REG &= (uint8)~ADC_1_DSM_MOD_CHOP_EN;
 605              		.loc 1 411 0
 606 0104 1A4A     		ldr	r2, .L13+44
 607 0106 1A4B     		ldr	r3, .L13+44
 608 0108 1B78     		ldrb	r3, [r3]
 609 010a DBB2     		uxtb	r3, r3
 610 010c 23F00803 		bic	r3, r3, #8
 611 0110 DBB2     		uxtb	r3, r3
 612 0112 1370     		strb	r3, [r2]
 412:Generated_Source\PSoC5/ADC_1.c ****     /* Disable power to charge pump clock */
 413:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_1_ACT_PWR_CHARGE_PUMP_CLK_EN;
 613              		.loc 1 413 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 19


 614 0114 174A     		ldr	r2, .L13+48
 615 0116 174B     		ldr	r3, .L13+48
 616 0118 1B78     		ldrb	r3, [r3]
 617 011a DBB2     		uxtb	r3, r3
 618 011c 23F00103 		bic	r3, r3, #1
 619 0120 DBB2     		uxtb	r3, r3
 620 0122 1370     		strb	r3, [r2]
 414:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_1_STBY_PWR_CHARGE_PUMP_CLK_EN;
 621              		.loc 1 414 0
 622 0124 144A     		ldr	r2, .L13+52
 623 0126 144B     		ldr	r3, .L13+52
 624 0128 1B78     		ldrb	r3, [r3]
 625 012a DBB2     		uxtb	r3, r3
 626 012c 23F00103 		bic	r3, r3, #1
 627 0130 DBB2     		uxtb	r3, r3
 628 0132 1370     		strb	r3, [r2]
 415:Generated_Source\PSoC5/ADC_1.c ****     
 416:Generated_Source\PSoC5/ADC_1.c ****     CyExitCriticalSection(enableInterrupts);
 629              		.loc 1 416 0
 630 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 631 0136 1846     		mov	r0, r3
 632 0138 FFF7FEFF 		bl	CyExitCriticalSection
 417:Generated_Source\PSoC5/ADC_1.c **** }
 633              		.loc 1 417 0
 634 013c 00BF     		nop
 635 013e 0837     		adds	r7, r7, #8
 636              		.cfi_def_cfa_offset 8
 637 0140 BD46     		mov	sp, r7
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0142 80BD     		pop	{r7, pc}
 641              	.L14:
 642              		.align	2
 643              	.L13:
 644 0144 004E0040 		.word	1073761792
 645 0148 014E0040 		.word	1073761793
 646 014c F8460040 		.word	1073759992
 647 0150 F9460040 		.word	1073759993
 648 0154 91580040 		.word	1073764497
 649 0158 92580040 		.word	1073764498
 650 015c AA430040 		.word	1073759146
 651 0160 BA430040 		.word	1073759162
 652 0164 77580040 		.word	1073764471
 653 0168 A1430040 		.word	1073759137
 654 016c B1430040 		.word	1073759153
 655 0170 82580040 		.word	1073764482
 656 0174 A2430040 		.word	1073759138
 657 0178 B2430040 		.word	1073759154
 658              		.cfi_endproc
 659              	.LFE3:
 660              		.size	ADC_1_Stop, .-ADC_1_Stop
 661              		.section	.text.ADC_1_SetBufferGain,"ax",%progbits
 662              		.align	2
 663              		.global	ADC_1_SetBufferGain
 664              		.thumb
 665              		.thumb_func
 666              		.type	ADC_1_SetBufferGain, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 20


 667              	ADC_1_SetBufferGain:
 668              	.LFB4:
 418:Generated_Source\PSoC5/ADC_1.c **** 
 419:Generated_Source\PSoC5/ADC_1.c **** 
 420:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 421:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetBufferGain
 422:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 423:Generated_Source\PSoC5/ADC_1.c **** *
 424:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 425:Generated_Source\PSoC5/ADC_1.c **** *  Sets input buffer gain.
 426:Generated_Source\PSoC5/ADC_1.c **** *
 427:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 428:Generated_Source\PSoC5/ADC_1.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 429:Generated_Source\PSoC5/ADC_1.c **** *
 430:Generated_Source\PSoC5/ADC_1.c **** * Return:
 431:Generated_Source\PSoC5/ADC_1.c **** *  None
 432:Generated_Source\PSoC5/ADC_1.c **** *
 433:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 434:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_SetBufferGain(uint8 gain) 
 435:Generated_Source\PSoC5/ADC_1.c **** {
 669              		.loc 1 435 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 16
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 85B0     		sub	sp, sp, #20
 678              		.cfi_def_cfa_offset 24
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 0006 0346     		mov	r3, r0
 682 0008 FB71     		strb	r3, [r7, #7]
 436:Generated_Source\PSoC5/ADC_1.c ****     uint8 tmpReg;
 437:Generated_Source\PSoC5/ADC_1.c ****     tmpReg = ADC_1_DSM_BUF1_REG & (uint8)~ADC_1_DSM_GAIN_MASK;
 683              		.loc 1 437 0
 684 000a 0B4B     		ldr	r3, .L16
 685 000c 1B78     		ldrb	r3, [r3]
 686 000e DBB2     		uxtb	r3, r3
 687 0010 23F00C03 		bic	r3, r3, #12
 688 0014 FB73     		strb	r3, [r7, #15]
 438:Generated_Source\PSoC5/ADC_1.c ****     tmpReg |= (uint8)(gain << ADC_1_DSM_GAIN_SHIFT) & ADC_1_DSM_GAIN_MASK;
 689              		.loc 1 438 0
 690 0016 FB79     		ldrb	r3, [r7, #7]
 691 0018 9B00     		lsls	r3, r3, #2
 692 001a DBB2     		uxtb	r3, r3
 693 001c 03F00C03 		and	r3, r3, #12
 694 0020 DAB2     		uxtb	r2, r3
 695 0022 FB7B     		ldrb	r3, [r7, #15]
 696 0024 1343     		orrs	r3, r3, r2
 697 0026 FB73     		strb	r3, [r7, #15]
 439:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_BUF1_REG = tmpReg;
 698              		.loc 1 439 0
 699 0028 034A     		ldr	r2, .L16
 700 002a FB7B     		ldrb	r3, [r7, #15]
 701 002c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 21


 440:Generated_Source\PSoC5/ADC_1.c **** }
 702              		.loc 1 440 0
 703 002e 00BF     		nop
 704 0030 1437     		adds	r7, r7, #20
 705              		.cfi_def_cfa_offset 4
 706 0032 BD46     		mov	sp, r7
 707              		.cfi_def_cfa_register 13
 708              		@ sp needed
 709 0034 80BC     		pop	{r7}
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 0036 7047     		bx	lr
 713              	.L17:
 714              		.align	2
 715              	.L16:
 716 0038 9B580040 		.word	1073764507
 717              		.cfi_endproc
 718              	.LFE4:
 719              		.size	ADC_1_SetBufferGain, .-ADC_1_SetBufferGain
 720              		.section	.text.ADC_1_SetCoherency,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_1_SetCoherency
 723              		.thumb
 724              		.thumb_func
 725              		.type	ADC_1_SetCoherency, %function
 726              	ADC_1_SetCoherency:
 727              	.LFB5:
 441:Generated_Source\PSoC5/ADC_1.c **** 
 442:Generated_Source\PSoC5/ADC_1.c **** 
 443:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetCoherency
 445:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 446:Generated_Source\PSoC5/ADC_1.c **** *
 447:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 448:Generated_Source\PSoC5/ADC_1.c **** *  This function allows the user to change which of the ADC's 3 word
 449:Generated_Source\PSoC5/ADC_1.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 450:Generated_Source\PSoC5/ADC_1.c **** *  updated until the set byte is read either by the ADC or DMA. 
 451:Generated_Source\PSoC5/ADC_1.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 452:Generated_Source\PSoC5/ADC_1.c **** *  The middle or high byte is set automatically depend on left alignment 
 453:Generated_Source\PSoC5/ADC_1.c **** *  configuration for DMA data transfer.
 454:Generated_Source\PSoC5/ADC_1.c **** *  If DMA or if a custom API requires different byte to be read the last,
 455:Generated_Source\PSoC5/ADC_1.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 456:Generated_Source\PSoC5/ADC_1.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 457:Generated_Source\PSoC5/ADC_1.c **** *  coherency can be set to any byte in the last word read.
 458:Generated_Source\PSoC5/ADC_1.c **** *
 459:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_1.c **** *  coherency:  Two bit value to set the coherency bit.
 461:Generated_Source\PSoC5/ADC_1.c **** *           00-Coherency checking off
 462:Generated_Source\PSoC5/ADC_1.c **** *           01-low byte is key byte
 463:Generated_Source\PSoC5/ADC_1.c **** *           02-middle byte is the key byte
 464:Generated_Source\PSoC5/ADC_1.c **** *           03-high byte is the key byte
 465:Generated_Source\PSoC5/ADC_1.c **** *
 466:Generated_Source\PSoC5/ADC_1.c **** * Return:
 467:Generated_Source\PSoC5/ADC_1.c **** *  None
 468:Generated_Source\PSoC5/ADC_1.c **** *
 469:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 470:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_SetCoherency(uint8 coherency) 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 22


 471:Generated_Source\PSoC5/ADC_1.c **** {
 728              		.loc 1 471 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 16
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 7, -4
 736 0002 85B0     		sub	sp, sp, #20
 737              		.cfi_def_cfa_offset 24
 738 0004 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 0006 0346     		mov	r3, r0
 741 0008 FB71     		strb	r3, [r7, #7]
 472:Generated_Source\PSoC5/ADC_1.c ****     uint8 tmpReg;
 473:Generated_Source\PSoC5/ADC_1.c **** 
 474:Generated_Source\PSoC5/ADC_1.c ****     tmpReg = ADC_1_DEC_COHER_REG & (uint8)~ADC_1_DEC_SAMP_KEY_MASK;
 742              		.loc 1 474 0
 743 000a 0A4B     		ldr	r3, .L19
 744 000c 1B78     		ldrb	r3, [r3]
 745 000e DBB2     		uxtb	r3, r3
 746 0010 23F00303 		bic	r3, r3, #3
 747 0014 FB73     		strb	r3, [r7, #15]
 475:Generated_Source\PSoC5/ADC_1.c ****     tmpReg |= coherency & ADC_1_DEC_SAMP_KEY_MASK;
 748              		.loc 1 475 0
 749 0016 FB79     		ldrb	r3, [r7, #7]
 750 0018 03F00303 		and	r3, r3, #3
 751 001c DAB2     		uxtb	r2, r3
 752 001e FB7B     		ldrb	r3, [r7, #15]
 753 0020 1343     		orrs	r3, r3, r2
 754 0022 FB73     		strb	r3, [r7, #15]
 476:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_COHER_REG = tmpReg;
 755              		.loc 1 476 0
 756 0024 034A     		ldr	r2, .L19
 757 0026 FB7B     		ldrb	r3, [r7, #15]
 758 0028 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/ADC_1.c **** }
 759              		.loc 1 477 0
 760 002a 00BF     		nop
 761 002c 1437     		adds	r7, r7, #20
 762              		.cfi_def_cfa_offset 4
 763 002e BD46     		mov	sp, r7
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 0030 80BC     		pop	{r7}
 767              		.cfi_restore 7
 768              		.cfi_def_cfa_offset 0
 769 0032 7047     		bx	lr
 770              	.L20:
 771              		.align	2
 772              	.L19:
 773 0034 144E0040 		.word	1073761812
 774              		.cfi_endproc
 775              	.LFE5:
 776              		.size	ADC_1_SetCoherency, .-ADC_1_SetCoherency
 777              		.global	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 23


 778              		.global	__aeabi_fdiv
 779              		.global	__aeabi_fmul
 780              		.global	__aeabi_f2d
 781              		.global	__aeabi_dcmpgt
 782              		.global	__aeabi_f2uiz
 783              		.section	.text.ADC_1_SetGCOR,"ax",%progbits
 784              		.align	2
 785              		.global	ADC_1_SetGCOR
 786              		.thumb
 787              		.thumb_func
 788              		.type	ADC_1_SetGCOR, %function
 789              	ADC_1_SetGCOR:
 790              	.LFB6:
 478:Generated_Source\PSoC5/ADC_1.c **** 
 479:Generated_Source\PSoC5/ADC_1.c **** 
 480:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 481:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetGCOR
 482:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 483:Generated_Source\PSoC5/ADC_1.c **** *
 484:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 485:Generated_Source\PSoC5/ADC_1.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 486:Generated_Source\PSoC5/ADC_1.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 487:Generated_Source\PSoC5/ADC_1.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 488:Generated_Source\PSoC5/ADC_1.c **** *  output registers. The numerical format for the GCOR value is:
 489:Generated_Source\PSoC5/ADC_1.c **** *  0x0000 -> 0.000
 490:Generated_Source\PSoC5/ADC_1.c **** *  0x8000 -> 1.000
 491:Generated_Source\PSoC5/ADC_1.c **** *  0xFFFF -> 1.99997
 492:Generated_Source\PSoC5/ADC_1.c **** *  When executing the function, the old GCOR value is multiplied by
 493:Generated_Source\PSoC5/ADC_1.c **** *  gainAdjust and reloaded into the GCOR register.
 494:Generated_Source\PSoC5/ADC_1.c **** *
 495:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 496:Generated_Source\PSoC5/ADC_1.c **** *  gainAdjust:  floating point value to set GCOR registers.
 497:Generated_Source\PSoC5/ADC_1.c **** *
 498:Generated_Source\PSoC5/ADC_1.c **** * Return:
 499:Generated_Source\PSoC5/ADC_1.c **** *  uint8: 0 - if GCOR value is within the expected range.
 500:Generated_Source\PSoC5/ADC_1.c **** *         1 - the correction value is outside GCOR value range of
 501:Generated_Source\PSoC5/ADC_1.c **** *             0.00 to 1.9999.
 502:Generated_Source\PSoC5/ADC_1.c **** *
 503:Generated_Source\PSoC5/ADC_1.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 504:Generated_Source\PSoC5/ADC_1.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 505:Generated_Source\PSoC5/ADC_1.c **** *                of the GCOR registers will be valid. If for example GVAL is
 506:Generated_Source\PSoC5/ADC_1.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 507:Generated_Source\PSoC5/ADC_1.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 508:Generated_Source\PSoC5/ADC_1.c **** *
 509:Generated_Source\PSoC5/ADC_1.c **** ******************************************************************************/
 510:Generated_Source\PSoC5/ADC_1.c **** uint8 ADC_1_SetGCOR(float32 gainAdjust) 
 511:Generated_Source\PSoC5/ADC_1.c **** {
 791              		.loc 1 511 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 84B0     		sub	sp, sp, #16
 800              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 24


 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]	@ float
 512:Generated_Source\PSoC5/ADC_1.c ****     uint16 tmpReg;
 513:Generated_Source\PSoC5/ADC_1.c ****     uint8 status;
 514:Generated_Source\PSoC5/ADC_1.c ****     float32 tmpValue;
 515:Generated_Source\PSoC5/ADC_1.c **** 
 516:Generated_Source\PSoC5/ADC_1.c ****     tmpReg = ADC_1_gcor[ADC_1_Config - 1u].gcor;
 804              		.loc 1 516 0
 805 0008 254B     		ldr	r3, .L28+8
 806 000a 1B78     		ldrb	r3, [r3]
 807 000c DBB2     		uxtb	r3, r3
 808 000e 013B     		subs	r3, r3, #1
 809 0010 244A     		ldr	r2, .L28+12
 810 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 811 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 517:Generated_Source\PSoC5/ADC_1.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_1_IDEAL_GAIN_CONST);
 812              		.loc 1 517 0
 813 0018 BB89     		ldrh	r3, [r7, #12]
 814 001a 1846     		mov	r0, r3
 815 001c FFF7FEFF 		bl	__aeabi_ui2f
 816 0020 0346     		mov	r3, r0
 817 0022 4FF08E41 		mov	r1, #1191182336
 818 0026 1846     		mov	r0, r3
 819 0028 FFF7FEFF 		bl	__aeabi_fdiv
 820 002c 0346     		mov	r3, r0
 821 002e BB60     		str	r3, [r7, #8]	@ float
 518:Generated_Source\PSoC5/ADC_1.c ****     tmpValue = tmpValue * gainAdjust;
 822              		.loc 1 518 0
 823 0030 7968     		ldr	r1, [r7, #4]	@ float
 824 0032 B868     		ldr	r0, [r7, #8]	@ float
 825 0034 FFF7FEFF 		bl	__aeabi_fmul
 826 0038 0346     		mov	r3, r0
 827 003a BB60     		str	r3, [r7, #8]	@ float
 519:Generated_Source\PSoC5/ADC_1.c **** 
 520:Generated_Source\PSoC5/ADC_1.c ****     if (tmpValue > 1.9999)
 828              		.loc 1 520 0
 829 003c B868     		ldr	r0, [r7, #8]	@ float
 830 003e FFF7FEFF 		bl	__aeabi_f2d
 831 0042 15A3     		adr	r3, .L28
 832 0044 D3E90023 		ldrd	r2, [r3]
 833 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 834 004c 0346     		mov	r3, r0
 835 004e 002B     		cmp	r3, #0
 836 0050 02D0     		beq	.L27
 521:Generated_Source\PSoC5/ADC_1.c ****     {
 522:Generated_Source\PSoC5/ADC_1.c ****         status = 1u;
 837              		.loc 1 522 0
 838 0052 0123     		movs	r3, #1
 839 0054 FB73     		strb	r3, [r7, #15]
 840 0056 18E0     		b	.L24
 841              	.L27:
 523:Generated_Source\PSoC5/ADC_1.c ****     }
 524:Generated_Source\PSoC5/ADC_1.c ****     else
 525:Generated_Source\PSoC5/ADC_1.c ****     {
 526:Generated_Source\PSoC5/ADC_1.c ****         tmpValue *= (float32)ADC_1_IDEAL_GAIN_CONST;
 842              		.loc 1 526 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 25


 843 0058 4FF08E41 		mov	r1, #1191182336
 844 005c B868     		ldr	r0, [r7, #8]	@ float
 845 005e FFF7FEFF 		bl	__aeabi_fmul
 846 0062 0346     		mov	r3, r0
 847 0064 BB60     		str	r3, [r7, #8]	@ float
 527:Generated_Source\PSoC5/ADC_1.c **** 		tmpReg = (uint16)tmpValue;
 848              		.loc 1 527 0
 849 0066 B868     		ldr	r0, [r7, #8]	@ float
 850 0068 FFF7FEFF 		bl	__aeabi_f2uiz
 851 006c 0346     		mov	r3, r0
 852 006e BB81     		strh	r3, [r7, #12]	@ movhi
 528:Generated_Source\PSoC5/ADC_1.c ****         CY_SET_REG16(ADC_1_DEC_GCOR_16B_PTR, tmpReg);
 853              		.loc 1 528 0
 854 0070 0D4A     		ldr	r2, .L28+16
 855 0072 BB89     		ldrh	r3, [r7, #12]	@ movhi
 856 0074 1380     		strh	r3, [r2]	@ movhi
 529:Generated_Source\PSoC5/ADC_1.c ****         /* Update gain array to be used by SelectConfiguration() API */
 530:Generated_Source\PSoC5/ADC_1.c ****        ADC_1_gcor[ADC_1_Config - 1u].gcor = tmpReg;
 857              		.loc 1 530 0
 858 0076 0A4B     		ldr	r3, .L28+8
 859 0078 1B78     		ldrb	r3, [r3]
 860 007a DBB2     		uxtb	r3, r3
 861 007c 013B     		subs	r3, r3, #1
 862 007e 0949     		ldr	r1, .L28+12
 863 0080 BA89     		ldrh	r2, [r7, #12]	@ movhi
 864 0082 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 531:Generated_Source\PSoC5/ADC_1.c **** 
 532:Generated_Source\PSoC5/ADC_1.c ****         status = 0u;
 865              		.loc 1 532 0
 866 0086 0023     		movs	r3, #0
 867 0088 FB73     		strb	r3, [r7, #15]
 868              	.L24:
 533:Generated_Source\PSoC5/ADC_1.c **** 
 534:Generated_Source\PSoC5/ADC_1.c ****     }
 535:Generated_Source\PSoC5/ADC_1.c ****     return(status);
 869              		.loc 1 535 0
 870 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 536:Generated_Source\PSoC5/ADC_1.c **** }
 871              		.loc 1 536 0
 872 008c 1846     		mov	r0, r3
 873 008e 1037     		adds	r7, r7, #16
 874              		.cfi_def_cfa_offset 8
 875 0090 BD46     		mov	sp, r7
 876              		.cfi_def_cfa_register 13
 877              		@ sp needed
 878 0092 80BD     		pop	{r7, pc}
 879              	.L29:
 880 0094 AFF30080 		.align	3
 881              	.L28:
 882 0098 8F537424 		.word	611603343
 883 009c 97FFFF3F 		.word	1073741719
 884 00a0 00000000 		.word	ADC_1_Config
 885 00a4 08000000 		.word	ADC_1_gcor
 886 00a8 0C4E0040 		.word	1073761804
 887              		.cfi_endproc
 888              	.LFE6:
 889              		.size	ADC_1_SetGCOR, .-ADC_1_SetGCOR
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 26


 890              		.section	.text.ADC_1_ReadGCOR,"ax",%progbits
 891              		.align	2
 892              		.global	ADC_1_ReadGCOR
 893              		.thumb
 894              		.thumb_func
 895              		.type	ADC_1_ReadGCOR, %function
 896              	ADC_1_ReadGCOR:
 897              	.LFB7:
 537:Generated_Source\PSoC5/ADC_1.c **** 
 538:Generated_Source\PSoC5/ADC_1.c **** 
 539:Generated_Source\PSoC5/ADC_1.c **** /******************************************************************************
 540:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_ReadGCOR
 541:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************
 542:Generated_Source\PSoC5/ADC_1.c **** *
 543:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 544:Generated_Source\PSoC5/ADC_1.c **** *  This API returns the current GCOR register value, normalized based on the
 545:Generated_Source\PSoC5/ADC_1.c **** *  GVAL register settings.
 546:Generated_Source\PSoC5/ADC_1.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 547:Generated_Source\PSoC5/ADC_1.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 548:Generated_Source\PSoC5/ADC_1.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 549:Generated_Source\PSoC5/ADC_1.c **** *
 550:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 551:Generated_Source\PSoC5/ADC_1.c **** *  None
 552:Generated_Source\PSoC5/ADC_1.c **** *
 553:Generated_Source\PSoC5/ADC_1.c **** * Return:
 554:Generated_Source\PSoC5/ADC_1.c **** *  uint16:  Normalized GCOR value.
 555:Generated_Source\PSoC5/ADC_1.c **** *
 556:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 557:Generated_Source\PSoC5/ADC_1.c **** uint16 ADC_1_ReadGCOR(void) 
 558:Generated_Source\PSoC5/ADC_1.c **** {
 898              		.loc 1 558 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 559:Generated_Source\PSoC5/ADC_1.c ****     uint8 gValue;
 560:Generated_Source\PSoC5/ADC_1.c ****     uint16 gcorValue;
 561:Generated_Source\PSoC5/ADC_1.c **** 
 562:Generated_Source\PSoC5/ADC_1.c ****     gValue = ADC_1_DEC_GVAL_REG;
 910              		.loc 1 562 0
 911 0006 0B4B     		ldr	r3, .L33
 912 0008 1B78     		ldrb	r3, [r3]
 913 000a 7B71     		strb	r3, [r7, #5]
 563:Generated_Source\PSoC5/ADC_1.c ****     gcorValue = CY_GET_REG16(ADC_1_DEC_GCOR_16B_PTR);
 914              		.loc 1 563 0
 915 000c 0A4B     		ldr	r3, .L33+4
 916 000e 1B88     		ldrh	r3, [r3]	@ movhi
 917 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 564:Generated_Source\PSoC5/ADC_1.c **** 
 565:Generated_Source\PSoC5/ADC_1.c ****     if (gValue < ADC_1_MAX_GVAL)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 27


 918              		.loc 1 565 0
 919 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 920 0014 0E2B     		cmp	r3, #14
 921 0016 06D8     		bhi	.L31
 566:Generated_Source\PSoC5/ADC_1.c ****     {
 567:Generated_Source\PSoC5/ADC_1.c ****         gcorValue <<= ADC_1_MAX_GVAL - gValue;
 922              		.loc 1 567 0
 923 0018 FA88     		ldrh	r2, [r7, #6]
 924 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 925 001c C3F10F03 		rsb	r3, r3, #15
 926 0020 02FA03F3 		lsl	r3, r2, r3
 927 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 928              	.L31:
 568:Generated_Source\PSoC5/ADC_1.c ****     }
 569:Generated_Source\PSoC5/ADC_1.c **** 
 570:Generated_Source\PSoC5/ADC_1.c ****     return gcorValue;
 929              		.loc 1 570 0
 930 0026 FB88     		ldrh	r3, [r7, #6]
 571:Generated_Source\PSoC5/ADC_1.c **** }
 931              		.loc 1 571 0
 932 0028 1846     		mov	r0, r3
 933 002a 0C37     		adds	r7, r7, #12
 934              		.cfi_def_cfa_offset 4
 935 002c BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 002e 80BC     		pop	{r7}
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0030 7047     		bx	lr
 942              	.L34:
 943 0032 00BF     		.align	2
 944              	.L33:
 945 0034 0E4E0040 		.word	1073761806
 946 0038 0C4E0040 		.word	1073761804
 947              		.cfi_endproc
 948              	.LFE7:
 949              		.size	ADC_1_ReadGCOR, .-ADC_1_ReadGCOR
 950              		.section	.text.ADC_1_StartConvert,"ax",%progbits
 951              		.align	2
 952              		.global	ADC_1_StartConvert
 953              		.thumb
 954              		.thumb_func
 955              		.type	ADC_1_StartConvert, %function
 956              	ADC_1_StartConvert:
 957              	.LFB8:
 572:Generated_Source\PSoC5/ADC_1.c **** 
 573:Generated_Source\PSoC5/ADC_1.c **** 
 574:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 575:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_StartConvert
 576:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 577:Generated_Source\PSoC5/ADC_1.c **** *
 578:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 579:Generated_Source\PSoC5/ADC_1.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 580:Generated_Source\PSoC5/ADC_1.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 581:Generated_Source\PSoC5/ADC_1.c **** *  one of the other three conversion modes, the ADC will run
 582:Generated_Source\PSoC5/ADC_1.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 28


 583:Generated_Source\PSoC5/ADC_1.c **** *
 584:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 585:Generated_Source\PSoC5/ADC_1.c **** *  None
 586:Generated_Source\PSoC5/ADC_1.c **** *
 587:Generated_Source\PSoC5/ADC_1.c **** * Return:
 588:Generated_Source\PSoC5/ADC_1.c **** *  None
 589:Generated_Source\PSoC5/ADC_1.c **** *
 590:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 591:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_StartConvert(void) 
 592:Generated_Source\PSoC5/ADC_1.c **** {
 958              		.loc 1 592 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              		.cfi_def_cfa_offset 4
 965              		.cfi_offset 7, -4
 966 0002 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 593:Generated_Source\PSoC5/ADC_1.c ****     /* Start the conversion */
 594:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_CR_REG |= ADC_1_DEC_START_CONV;
 968              		.loc 1 594 0
 969 0004 054A     		ldr	r2, .L36
 970 0006 054B     		ldr	r3, .L36
 971 0008 1B78     		ldrb	r3, [r3]
 972 000a DBB2     		uxtb	r3, r3
 973 000c 43F00103 		orr	r3, r3, #1
 974 0010 DBB2     		uxtb	r3, r3
 975 0012 1370     		strb	r3, [r2]
 595:Generated_Source\PSoC5/ADC_1.c **** }
 976              		.loc 1 595 0
 977 0014 00BF     		nop
 978 0016 BD46     		mov	sp, r7
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 0018 80BC     		pop	{r7}
 982              		.cfi_restore 7
 983              		.cfi_def_cfa_offset 0
 984 001a 7047     		bx	lr
 985              	.L37:
 986              		.align	2
 987              	.L36:
 988 001c 004E0040 		.word	1073761792
 989              		.cfi_endproc
 990              	.LFE8:
 991              		.size	ADC_1_StartConvert, .-ADC_1_StartConvert
 992              		.section	.text.ADC_1_StopConvert,"ax",%progbits
 993              		.align	2
 994              		.global	ADC_1_StopConvert
 995              		.thumb
 996              		.thumb_func
 997              		.type	ADC_1_StopConvert, %function
 998              	ADC_1_StopConvert:
 999              	.LFB9:
 596:Generated_Source\PSoC5/ADC_1.c **** 
 597:Generated_Source\PSoC5/ADC_1.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 29


 598:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 599:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_StopConvert
 600:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 601:Generated_Source\PSoC5/ADC_1.c **** *
 602:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 603:Generated_Source\PSoC5/ADC_1.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 604:Generated_Source\PSoC5/ADC_1.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 605:Generated_Source\PSoC5/ADC_1.c **** *  conversion.
 606:Generated_Source\PSoC5/ADC_1.c **** *
 607:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 608:Generated_Source\PSoC5/ADC_1.c **** *  None
 609:Generated_Source\PSoC5/ADC_1.c **** *
 610:Generated_Source\PSoC5/ADC_1.c **** * Return:
 611:Generated_Source\PSoC5/ADC_1.c **** *  None
 612:Generated_Source\PSoC5/ADC_1.c **** *
 613:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 614:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_StopConvert(void) 
 615:Generated_Source\PSoC5/ADC_1.c **** {
 1000              		.loc 1 615 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005 0000 80B4     		push	{r7}
 1006              		.cfi_def_cfa_offset 4
 1007              		.cfi_offset 7, -4
 1008 0002 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 616:Generated_Source\PSoC5/ADC_1.c ****     /* Stop all conversions */
 617:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_CR_REG &= (uint8)~ADC_1_DEC_START_CONV;
 1010              		.loc 1 617 0
 1011 0004 054A     		ldr	r2, .L39
 1012 0006 054B     		ldr	r3, .L39
 1013 0008 1B78     		ldrb	r3, [r3]
 1014 000a DBB2     		uxtb	r3, r3
 1015 000c 23F00103 		bic	r3, r3, #1
 1016 0010 DBB2     		uxtb	r3, r3
 1017 0012 1370     		strb	r3, [r2]
 618:Generated_Source\PSoC5/ADC_1.c **** }
 1018              		.loc 1 618 0
 1019 0014 00BF     		nop
 1020 0016 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0018 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 001a 7047     		bx	lr
 1027              	.L40:
 1028              		.align	2
 1029              	.L39:
 1030 001c 004E0040 		.word	1073761792
 1031              		.cfi_endproc
 1032              	.LFE9:
 1033              		.size	ADC_1_StopConvert, .-ADC_1_StopConvert
 1034              		.section	.text.ADC_1_IsEndConversion,"ax",%progbits
 1035              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 30


 1036              		.global	ADC_1_IsEndConversion
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	ADC_1_IsEndConversion, %function
 1040              	ADC_1_IsEndConversion:
 1041              	.LFB10:
 619:Generated_Source\PSoC5/ADC_1.c **** 
 620:Generated_Source\PSoC5/ADC_1.c **** 
 621:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 622:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_IsEndConversion
 623:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 624:Generated_Source\PSoC5/ADC_1.c **** *
 625:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 626:Generated_Source\PSoC5/ADC_1.c **** *  Checks the status that the most recently started conversion has completed.
 627:Generated_Source\PSoC5/ADC_1.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 628:Generated_Source\PSoC5/ADC_1.c **** *  ADC_GetResult32() API.
 629:Generated_Source\PSoC5/ADC_1.c **** *  This function provides the programmer with two options. In one mode this 
 630:Generated_Source\PSoC5/ADC_1.c **** *  function immediately returns with the conversion status. In the other mode,
 631:Generated_Source\PSoC5/ADC_1.c **** *  the function does not return (blocking) until the conversion has completed.
 632:Generated_Source\PSoC5/ADC_1.c **** *
 633:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 634:Generated_Source\PSoC5/ADC_1.c **** *  retMode: Check conversion return mode. See the following table for options.
 635:Generated_Source\PSoC5/ADC_1.c **** *   ADC_1_RETURN_STATUS -   Immediately returns conversion result
 636:Generated_Source\PSoC5/ADC_1.c **** *                                      status.
 637:Generated_Source\PSoC5/ADC_1.c **** *   ADC_1_WAIT_FOR_RESULT - Does not return until ADC conversion
 638:Generated_Source\PSoC5/ADC_1.c **** *                                      is complete.
 639:Generated_Source\PSoC5/ADC_1.c **** *
 640:Generated_Source\PSoC5/ADC_1.c **** * Return:
 641:Generated_Source\PSoC5/ADC_1.c **** *  If a nonzero value is returned, the last conversion has completed.
 642:Generated_Source\PSoC5/ADC_1.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 643:Generated_Source\PSoC5/ADC_1.c **** *
 644:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 645:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_convDone:  Used to check whether conversion is complete
 646:Generated_Source\PSoC5/ADC_1.c **** *  or not for single sample mode with resolution is above 16
 647:Generated_Source\PSoC5/ADC_1.c **** *
 648:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 649:Generated_Source\PSoC5/ADC_1.c **** uint8 ADC_1_IsEndConversion(uint8 retMode) 
 650:Generated_Source\PSoC5/ADC_1.c **** {
 1042              		.loc 1 650 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 16
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              		.cfi_def_cfa_offset 4
 1049              		.cfi_offset 7, -4
 1050 0002 85B0     		sub	sp, sp, #20
 1051              		.cfi_def_cfa_offset 24
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 0346     		mov	r3, r0
 1055 0008 FB71     		strb	r3, [r7, #7]
 1056              	.L45:
 651:Generated_Source\PSoC5/ADC_1.c ****     uint8 status;
 652:Generated_Source\PSoC5/ADC_1.c **** 
 653:Generated_Source\PSoC5/ADC_1.c ****     do
 654:Generated_Source\PSoC5/ADC_1.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 31


 655:Generated_Source\PSoC5/ADC_1.c ****         /* Check for stop convert if conversion mode is Single Sample with
 656:Generated_Source\PSoC5/ADC_1.c ****         *   resolution above 16 bit
 657:Generated_Source\PSoC5/ADC_1.c ****         */
 658:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_stopConversion != 0u)
 1057              		.loc 1 658 0
 1058 000a 0D4B     		ldr	r3, .L47
 1059 000c 1B78     		ldrb	r3, [r3]
 1060 000e DBB2     		uxtb	r3, r3
 1061 0010 002B     		cmp	r3, #0
 1062 0012 03D0     		beq	.L42
 659:Generated_Source\PSoC5/ADC_1.c ****         {
 660:Generated_Source\PSoC5/ADC_1.c ****             status = ADC_1_convDone;
 1063              		.loc 1 660 0
 1064 0014 0B4B     		ldr	r3, .L47+4
 1065 0016 1B78     		ldrb	r3, [r3]
 1066 0018 FB73     		strb	r3, [r7, #15]
 1067 001a 05E0     		b	.L43
 1068              	.L42:
 661:Generated_Source\PSoC5/ADC_1.c ****         }
 662:Generated_Source\PSoC5/ADC_1.c ****         else
 663:Generated_Source\PSoC5/ADC_1.c ****         {
 664:Generated_Source\PSoC5/ADC_1.c ****             status = ADC_1_DEC_SR_REG & ADC_1_DEC_CONV_DONE;
 1069              		.loc 1 664 0
 1070 001c 0A4B     		ldr	r3, .L47+8
 1071 001e 1B78     		ldrb	r3, [r3]
 1072 0020 DBB2     		uxtb	r3, r3
 1073 0022 03F00103 		and	r3, r3, #1
 1074 0026 FB73     		strb	r3, [r7, #15]
 1075              	.L43:
 665:Generated_Source\PSoC5/ADC_1.c ****         }
 666:Generated_Source\PSoC5/ADC_1.c ****     }while((status != ADC_1_DEC_CONV_DONE) && (retMode == ADC_1_WAIT_FOR_RESULT));
 1076              		.loc 1 666 0
 1077 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1078 002a 012B     		cmp	r3, #1
 1079 002c 02D0     		beq	.L44
 1080              		.loc 1 666 0 is_stmt 0 discriminator 1
 1081 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1082 0030 002B     		cmp	r3, #0
 1083 0032 EAD0     		beq	.L45
 1084              	.L44:
 667:Generated_Source\PSoC5/ADC_1.c **** 
 668:Generated_Source\PSoC5/ADC_1.c ****     return(status);
 1085              		.loc 1 668 0 is_stmt 1
 1086 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 669:Generated_Source\PSoC5/ADC_1.c **** }
 1087              		.loc 1 669 0
 1088 0036 1846     		mov	r0, r3
 1089 0038 1437     		adds	r7, r7, #20
 1090              		.cfi_def_cfa_offset 4
 1091 003a BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 003c 80BC     		pop	{r7}
 1095              		.cfi_restore 7
 1096              		.cfi_def_cfa_offset 0
 1097 003e 7047     		bx	lr
 1098              	.L48:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 32


 1099              		.align	2
 1100              	.L47:
 1101 0040 00000000 		.word	ADC_1_stopConversion
 1102 0044 00000000 		.word	ADC_1_convDone
 1103 0048 014E0040 		.word	1073761793
 1104              		.cfi_endproc
 1105              	.LFE10:
 1106              		.size	ADC_1_IsEndConversion, .-ADC_1_IsEndConversion
 1107              		.section	.text.ADC_1_GetResult8,"ax",%progbits
 1108              		.align	2
 1109              		.global	ADC_1_GetResult8
 1110              		.thumb
 1111              		.thumb_func
 1112              		.type	ADC_1_GetResult8, %function
 1113              	ADC_1_GetResult8:
 1114              	.LFB11:
 670:Generated_Source\PSoC5/ADC_1.c **** 
 671:Generated_Source\PSoC5/ADC_1.c **** 
 672:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 673:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_GetResult8
 674:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 675:Generated_Source\PSoC5/ADC_1.c **** *
 676:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 677:Generated_Source\PSoC5/ADC_1.c **** *  This function returns the result of an 8-bit conversion. If the
 678:Generated_Source\PSoC5/ADC_1.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 679:Generated_Source\PSoC5/ADC_1.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 680:Generated_Source\PSoC5/ADC_1.c **** *  the ADC_GetResult16() function should be used instead. This
 681:Generated_Source\PSoC5/ADC_1.c **** *  function returns only signed 8-bit values. The maximum positive
 682:Generated_Source\PSoC5/ADC_1.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 683:Generated_Source\PSoC5/ADC_1.c **** *  maximum positive value is 255.
 684:Generated_Source\PSoC5/ADC_1.c **** *
 685:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 686:Generated_Source\PSoC5/ADC_1.c **** *  None
 687:Generated_Source\PSoC5/ADC_1.c **** *
 688:Generated_Source\PSoC5/ADC_1.c **** * Return:
 689:Generated_Source\PSoC5/ADC_1.c **** *  int8: The LSB of the last ADC conversion.
 690:Generated_Source\PSoC5/ADC_1.c **** *
 691:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 692:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_convDone:  Cleared in single sample mode with resolution
 693:Generated_Source\PSoC5/ADC_1.c **** *                              above 16 bits
 694:Generated_Source\PSoC5/ADC_1.c **** *
 695:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 696:Generated_Source\PSoC5/ADC_1.c **** int8 ADC_1_GetResult8( void ) 
 697:Generated_Source\PSoC5/ADC_1.c **** {
 1115              		.loc 1 697 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 8
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120 0000 80B4     		push	{r7}
 1121              		.cfi_def_cfa_offset 4
 1122              		.cfi_offset 7, -4
 1123 0002 83B0     		sub	sp, sp, #12
 1124              		.cfi_def_cfa_offset 16
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 698:Generated_Source\PSoC5/ADC_1.c ****     int8 result;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 33


 699:Generated_Source\PSoC5/ADC_1.c ****     uint8 coherency;
 700:Generated_Source\PSoC5/ADC_1.c **** 
 701:Generated_Source\PSoC5/ADC_1.c ****     /* Read active coherency configuration */
 702:Generated_Source\PSoC5/ADC_1.c ****     coherency = ADC_1_DEC_COHER_REG & ADC_1_DEC_SAMP_KEY_MASK;
 1127              		.loc 1 702 0
 1128 0006 124B     		ldr	r3, .L54
 1129 0008 1B78     		ldrb	r3, [r3]
 1130 000a DBB2     		uxtb	r3, r3
 1131 000c 03F00303 		and	r3, r3, #3
 1132 0010 FB71     		strb	r3, [r7, #7]
 703:Generated_Source\PSoC5/ADC_1.c **** 
 704:Generated_Source\PSoC5/ADC_1.c ****     result = (int8)ADC_1_DEC_SAMP_REG;
 1133              		.loc 1 704 0
 1134 0012 104B     		ldr	r3, .L54+4
 1135 0014 1B78     		ldrb	r3, [r3]
 1136 0016 DBB2     		uxtb	r3, r3
 1137 0018 BB71     		strb	r3, [r7, #6]
 705:Generated_Source\PSoC5/ADC_1.c **** 
 706:Generated_Source\PSoC5/ADC_1.c ****     if(coherency == ADC_1_DEC_SAMP_KEY_MID)
 1138              		.loc 1 706 0
 1139 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1140 001c 022B     		cmp	r3, #2
 1141 001e 02D1     		bne	.L50
 707:Generated_Source\PSoC5/ADC_1.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 708:Generated_Source\PSoC5/ADC_1.c ****         (void)ADC_1_DEC_SAMPM_REG;
 1142              		.loc 1 708 0
 1143 0020 0D4B     		ldr	r3, .L54+8
 1144 0022 1B78     		ldrb	r3, [r3]
 1145 0024 04E0     		b	.L51
 1146              	.L50:
 709:Generated_Source\PSoC5/ADC_1.c ****     }
 710:Generated_Source\PSoC5/ADC_1.c ****     else  if(coherency == ADC_1_DEC_SAMP_KEY_HIGH)
 1147              		.loc 1 710 0
 1148 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1149 0028 032B     		cmp	r3, #3
 1150 002a 01D1     		bne	.L51
 711:Generated_Source\PSoC5/ADC_1.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 712:Generated_Source\PSoC5/ADC_1.c ****         (void)ADC_1_DEC_SAMPH_REG;
 1151              		.loc 1 712 0
 1152 002c 0B4B     		ldr	r3, .L54+12
 1153 002e 1B78     		ldrb	r3, [r3]
 1154              	.L51:
 713:Generated_Source\PSoC5/ADC_1.c ****     }
 714:Generated_Source\PSoC5/ADC_1.c ****     else /*No action required for other coherency */
 715:Generated_Source\PSoC5/ADC_1.c ****     {
 716:Generated_Source\PSoC5/ADC_1.c ****     }
 717:Generated_Source\PSoC5/ADC_1.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 718:Generated_Source\PSoC5/ADC_1.c ****     if(ADC_1_stopConversion != 0u)
 1155              		.loc 1 718 0
 1156 0030 0B4B     		ldr	r3, .L54+16
 1157 0032 1B78     		ldrb	r3, [r3]
 1158 0034 DBB2     		uxtb	r3, r3
 1159 0036 002B     		cmp	r3, #0
 1160 0038 02D0     		beq	.L52
 719:Generated_Source\PSoC5/ADC_1.c ****     {
 720:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_convDone = 0u;
 1161              		.loc 1 720 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 34


 1162 003a 0A4B     		ldr	r3, .L54+20
 1163 003c 0022     		movs	r2, #0
 1164 003e 1A70     		strb	r2, [r3]
 1165              	.L52:
 721:Generated_Source\PSoC5/ADC_1.c ****     }
 722:Generated_Source\PSoC5/ADC_1.c ****     return (result);
 1166              		.loc 1 722 0
 1167 0040 97F90630 		ldrsb	r3, [r7, #6]
 723:Generated_Source\PSoC5/ADC_1.c **** }
 1168              		.loc 1 723 0
 1169 0044 1846     		mov	r0, r3
 1170 0046 0C37     		adds	r7, r7, #12
 1171              		.cfi_def_cfa_offset 4
 1172 0048 BD46     		mov	sp, r7
 1173              		.cfi_def_cfa_register 13
 1174              		@ sp needed
 1175 004a 80BC     		pop	{r7}
 1176              		.cfi_restore 7
 1177              		.cfi_def_cfa_offset 0
 1178 004c 7047     		bx	lr
 1179              	.L55:
 1180 004e 00BF     		.align	2
 1181              	.L54:
 1182 0050 144E0040 		.word	1073761812
 1183 0054 104E0040 		.word	1073761808
 1184 0058 114E0040 		.word	1073761809
 1185 005c 124E0040 		.word	1073761810
 1186 0060 00000000 		.word	ADC_1_stopConversion
 1187 0064 00000000 		.word	ADC_1_convDone
 1188              		.cfi_endproc
 1189              	.LFE11:
 1190              		.size	ADC_1_GetResult8, .-ADC_1_GetResult8
 1191              		.section	.text.ADC_1_GetResult16,"ax",%progbits
 1192              		.align	2
 1193              		.global	ADC_1_GetResult16
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	ADC_1_GetResult16, %function
 1197              	ADC_1_GetResult16:
 1198              	.LFB12:
 724:Generated_Source\PSoC5/ADC_1.c **** 
 725:Generated_Source\PSoC5/ADC_1.c **** 
 726:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 727:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_GetResult16
 728:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 729:Generated_Source\PSoC5/ADC_1.c **** *
 730:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 731:Generated_Source\PSoC5/ADC_1.c **** *  Returns a 16-bit result for a conversion with a result that has a
 732:Generated_Source\PSoC5/ADC_1.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 733:Generated_Source\PSoC5/ADC_1.c **** *  it will return the 16 least significant bits of the result. When the ADC
 734:Generated_Source\PSoC5/ADC_1.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 735:Generated_Source\PSoC5/ADC_1.c **** *  function should be used instead. This function returns only signed
 736:Generated_Source\PSoC5/ADC_1.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 737:Generated_Source\PSoC5/ADC_1.c **** *  This function supports different coherency settings.
 738:Generated_Source\PSoC5/ADC_1.c **** *
 739:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 740:Generated_Source\PSoC5/ADC_1.c **** *   void
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 35


 741:Generated_Source\PSoC5/ADC_1.c **** *
 742:Generated_Source\PSoC5/ADC_1.c **** * Return:
 743:Generated_Source\PSoC5/ADC_1.c **** *  int16:  ADC result.
 744:Generated_Source\PSoC5/ADC_1.c **** *
 745:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 746:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_convDone:  Cleared in single sample mode with resolution
 747:Generated_Source\PSoC5/ADC_1.c **** *                              above 16 bits
 748:Generated_Source\PSoC5/ADC_1.c **** *
 749:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 750:Generated_Source\PSoC5/ADC_1.c **** int16 ADC_1_GetResult16(void) 
 751:Generated_Source\PSoC5/ADC_1.c **** {
 1199              		.loc 1 751 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 8
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203              		@ link register save eliminated.
 1204 0000 80B4     		push	{r7}
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 7, -4
 1207 0002 83B0     		sub	sp, sp, #12
 1208              		.cfi_def_cfa_offset 16
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 752:Generated_Source\PSoC5/ADC_1.c ****     uint16 result;
 753:Generated_Source\PSoC5/ADC_1.c ****     uint8 coherency;
 754:Generated_Source\PSoC5/ADC_1.c **** 
 755:Generated_Source\PSoC5/ADC_1.c ****     /* Read active coherency configuration */
 756:Generated_Source\PSoC5/ADC_1.c ****     coherency = ADC_1_DEC_COHER_REG & ADC_1_DEC_SAMP_KEY_MASK;
 1211              		.loc 1 756 0
 1212 0006 174B     		ldr	r3, .L61
 1213 0008 1B78     		ldrb	r3, [r3]
 1214 000a DBB2     		uxtb	r3, r3
 1215 000c 03F00303 		and	r3, r3, #3
 1216 0010 7B71     		strb	r3, [r7, #5]
 757:Generated_Source\PSoC5/ADC_1.c **** 
 758:Generated_Source\PSoC5/ADC_1.c ****     if(coherency <= ADC_1_DEC_SAMP_KEY_LOW)
 1217              		.loc 1 758 0
 1218 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1219 0014 012B     		cmp	r3, #1
 1220 0016 03D8     		bhi	.L57
 759:Generated_Source\PSoC5/ADC_1.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 760:Generated_Source\PSoC5/ADC_1.c ****         #if (CY_PSOC3)
 761:Generated_Source\PSoC5/ADC_1.c ****             result = ADC_1_DEC_SAMPM_REG;
 762:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 8u) | ADC_1_DEC_SAMP_REG;
 763:Generated_Source\PSoC5/ADC_1.c ****         #else
 764:Generated_Source\PSoC5/ADC_1.c ****             result = (CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR));
 1221              		.loc 1 764 0
 1222 0018 134B     		ldr	r3, .L61+4
 1223 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1224 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1225 001e 11E0     		b	.L58
 1226              	.L57:
 765:Generated_Source\PSoC5/ADC_1.c ****         #endif /* CY_PSOC3 */
 766:Generated_Source\PSoC5/ADC_1.c ****     }
 767:Generated_Source\PSoC5/ADC_1.c ****     else /* MID or HIGH */
 768:Generated_Source\PSoC5/ADC_1.c ****     {   /* Read middle byte at the end */
 769:Generated_Source\PSoC5/ADC_1.c ****         #if (CY_PSOC3)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 36


 770:Generated_Source\PSoC5/ADC_1.c ****             result = (CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR));
 771:Generated_Source\PSoC5/ADC_1.c ****         #else
 772:Generated_Source\PSoC5/ADC_1.c ****             result = ADC_1_DEC_SAMP_REG;
 1227              		.loc 1 772 0
 1228 0020 114B     		ldr	r3, .L61+4
 1229 0022 1B78     		ldrb	r3, [r3]
 1230 0024 DBB2     		uxtb	r3, r3
 1231 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 773:Generated_Source\PSoC5/ADC_1.c ****             result |=  (uint16)((uint16)ADC_1_DEC_SAMPM_REG << 8u);
 1232              		.loc 1 773 0
 1233 0028 104B     		ldr	r3, .L61+8
 1234 002a 1B78     		ldrb	r3, [r3]
 1235 002c DBB2     		uxtb	r3, r3
 1236 002e 9BB2     		uxth	r3, r3
 1237 0030 1B02     		lsls	r3, r3, #8
 1238 0032 9AB2     		uxth	r2, r3
 1239 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1240 0036 1343     		orrs	r3, r3, r2
 1241 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 774:Generated_Source\PSoC5/ADC_1.c ****         #endif /* CY_PSOC3 */
 775:Generated_Source\PSoC5/ADC_1.c ****         if(coherency == ADC_1_DEC_SAMP_KEY_HIGH)
 1242              		.loc 1 775 0
 1243 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1244 003c 032B     		cmp	r3, #3
 1245 003e 01D1     		bne	.L58
 776:Generated_Source\PSoC5/ADC_1.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 777:Generated_Source\PSoC5/ADC_1.c ****             (void)ADC_1_DEC_SAMPH_REG;
 1246              		.loc 1 777 0
 1247 0040 0B4B     		ldr	r3, .L61+12
 1248 0042 1B78     		ldrb	r3, [r3]
 1249              	.L58:
 778:Generated_Source\PSoC5/ADC_1.c ****         }
 779:Generated_Source\PSoC5/ADC_1.c ****     }
 780:Generated_Source\PSoC5/ADC_1.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 781:Generated_Source\PSoC5/ADC_1.c ****     if(ADC_1_stopConversion != 0u)
 1250              		.loc 1 781 0
 1251 0044 0B4B     		ldr	r3, .L61+16
 1252 0046 1B78     		ldrb	r3, [r3]
 1253 0048 DBB2     		uxtb	r3, r3
 1254 004a 002B     		cmp	r3, #0
 1255 004c 02D0     		beq	.L59
 782:Generated_Source\PSoC5/ADC_1.c ****     {
 783:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_convDone = 0u;
 1256              		.loc 1 783 0
 1257 004e 0A4B     		ldr	r3, .L61+20
 1258 0050 0022     		movs	r2, #0
 1259 0052 1A70     		strb	r2, [r3]
 1260              	.L59:
 784:Generated_Source\PSoC5/ADC_1.c ****     }
 785:Generated_Source\PSoC5/ADC_1.c **** 
 786:Generated_Source\PSoC5/ADC_1.c ****     return ((int16)result);
 1261              		.loc 1 786 0
 1262 0054 B7F90630 		ldrsh	r3, [r7, #6]
 787:Generated_Source\PSoC5/ADC_1.c **** }
 1263              		.loc 1 787 0
 1264 0058 1846     		mov	r0, r3
 1265 005a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 37


 1266              		.cfi_def_cfa_offset 4
 1267 005c BD46     		mov	sp, r7
 1268              		.cfi_def_cfa_register 13
 1269              		@ sp needed
 1270 005e 80BC     		pop	{r7}
 1271              		.cfi_restore 7
 1272              		.cfi_def_cfa_offset 0
 1273 0060 7047     		bx	lr
 1274              	.L62:
 1275 0062 00BF     		.align	2
 1276              	.L61:
 1277 0064 144E0040 		.word	1073761812
 1278 0068 104E0040 		.word	1073761808
 1279 006c 114E0040 		.word	1073761809
 1280 0070 124E0040 		.word	1073761810
 1281 0074 00000000 		.word	ADC_1_stopConversion
 1282 0078 00000000 		.word	ADC_1_convDone
 1283              		.cfi_endproc
 1284              	.LFE12:
 1285              		.size	ADC_1_GetResult16, .-ADC_1_GetResult16
 1286              		.section	.text.ADC_1_GetResult32,"ax",%progbits
 1287              		.align	2
 1288              		.global	ADC_1_GetResult32
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	ADC_1_GetResult32, %function
 1292              	ADC_1_GetResult32:
 1293              	.LFB13:
 788:Generated_Source\PSoC5/ADC_1.c **** 
 789:Generated_Source\PSoC5/ADC_1.c **** 
 790:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 791:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_GetResult32
 792:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 793:Generated_Source\PSoC5/ADC_1.c **** *
 794:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 795:Generated_Source\PSoC5/ADC_1.c **** *  Returns a 32-bit result for a conversion with a result that has a
 796:Generated_Source\PSoC5/ADC_1.c **** *  resolution of 8 to 20 bits.
 797:Generated_Source\PSoC5/ADC_1.c **** *  This function supports different coherency settings.
 798:Generated_Source\PSoC5/ADC_1.c **** *
 799:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 800:Generated_Source\PSoC5/ADC_1.c **** *  None
 801:Generated_Source\PSoC5/ADC_1.c **** *
 802:Generated_Source\PSoC5/ADC_1.c **** * Return:
 803:Generated_Source\PSoC5/ADC_1.c **** *  int32: Result of the last ADC conversion.
 804:Generated_Source\PSoC5/ADC_1.c **** *
 805:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 806:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_convDone:  Cleared in single sample mode with resolution
 807:Generated_Source\PSoC5/ADC_1.c **** *                              above 16 bits
 808:Generated_Source\PSoC5/ADC_1.c **** *
 809:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 810:Generated_Source\PSoC5/ADC_1.c **** int32 ADC_1_GetResult32(void) 
 811:Generated_Source\PSoC5/ADC_1.c **** {
 1294              		.loc 1 811 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 38


 1299 0000 80B4     		push	{r7}
 1300              		.cfi_def_cfa_offset 4
 1301              		.cfi_offset 7, -4
 1302 0002 83B0     		sub	sp, sp, #12
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 812:Generated_Source\PSoC5/ADC_1.c ****     uint32 result;
 813:Generated_Source\PSoC5/ADC_1.c ****     uint8 coherency;
 814:Generated_Source\PSoC5/ADC_1.c ****     #if (CY_PSOC3)
 815:Generated_Source\PSoC5/ADC_1.c **** 	    uint16 tmp;
 816:Generated_Source\PSoC5/ADC_1.c ****     #endif /* CY_PSOC3 */
 817:Generated_Source\PSoC5/ADC_1.c **** 
 818:Generated_Source\PSoC5/ADC_1.c ****     /* Read active coherency configuration */
 819:Generated_Source\PSoC5/ADC_1.c ****     coherency = ADC_1_DEC_COHER_REG & ADC_1_DEC_SAMP_KEY_MASK;
 1306              		.loc 1 819 0
 1307 0006 224B     		ldr	r3, .L69
 1308 0008 1B78     		ldrb	r3, [r3]
 1309 000a DBB2     		uxtb	r3, r3
 1310 000c 03F00303 		and	r3, r3, #3
 1311 0010 FB70     		strb	r3, [r7, #3]
 820:Generated_Source\PSoC5/ADC_1.c **** 
 821:Generated_Source\PSoC5/ADC_1.c ****     if(coherency <= ADC_1_DEC_SAMP_KEY_LOW)
 1312              		.loc 1 821 0
 1313 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1314 0014 012B     		cmp	r3, #1
 1315 0016 0BD8     		bhi	.L64
 822:Generated_Source\PSoC5/ADC_1.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 823:Generated_Source\PSoC5/ADC_1.c ****         #if (CY_PSOC3)
 824:Generated_Source\PSoC5/ADC_1.c ****             result = ADC_1_DEC_SAMPH_REG;
 825:Generated_Source\PSoC5/ADC_1.c ****             if((result & 0x80u) != 0u)
 826:Generated_Source\PSoC5/ADC_1.c ****             {   /* Sign extend */
 827:Generated_Source\PSoC5/ADC_1.c ****                 result |= 0xFF00u;
 828:Generated_Source\PSoC5/ADC_1.c ****             }
 829:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 8u) | ADC_1_DEC_SAMPM_REG;
 830:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 8u) | ADC_1_DEC_SAMP_REG;
 831:Generated_Source\PSoC5/ADC_1.c ****         #else
 832:Generated_Source\PSoC5/ADC_1.c ****             result = CY_GET_REG16(ADC_1_DEC_SAMPH_16B_PTR);
 1316              		.loc 1 832 0
 1317 0018 1E4B     		ldr	r3, .L69+4
 1318 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1319 001c 9BB2     		uxth	r3, r3
 1320 001e 7B60     		str	r3, [r7, #4]
 833:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR));
 1321              		.loc 1 833 0
 1322 0020 7B68     		ldr	r3, [r7, #4]
 1323 0022 1B04     		lsls	r3, r3, #16
 1324 0024 1C4A     		ldr	r2, .L69+8
 1325 0026 1288     		ldrh	r2, [r2]	@ movhi
 1326 0028 92B2     		uxth	r2, r2
 1327 002a 1343     		orrs	r3, r3, r2
 1328 002c 7B60     		str	r3, [r7, #4]
 1329 002e 20E0     		b	.L65
 1330              	.L64:
 834:Generated_Source\PSoC5/ADC_1.c ****         #endif /* CY_PSOC3 */
 835:Generated_Source\PSoC5/ADC_1.c ****     }
 836:Generated_Source\PSoC5/ADC_1.c ****     else if(coherency == ADC_1_DEC_SAMP_KEY_MID)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 39


 1331              		.loc 1 836 0
 1332 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1333 0032 022B     		cmp	r3, #2
 1334 0034 12D1     		bne	.L66
 837:Generated_Source\PSoC5/ADC_1.c ****     {   /* Read middle byte at the end */
 838:Generated_Source\PSoC5/ADC_1.c ****         #if (CY_PSOC3)
 839:Generated_Source\PSoC5/ADC_1.c ****             result = ADC_1_DEC_SAMPH_REG;
 840:Generated_Source\PSoC5/ADC_1.c ****             if((result & 0x80u) != 0u)
 841:Generated_Source\PSoC5/ADC_1.c ****             {   /* Sign extend */
 842:Generated_Source\PSoC5/ADC_1.c ****                 result |= 0xFF00u;
 843:Generated_Source\PSoC5/ADC_1.c ****             }
 844:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR));
 845:Generated_Source\PSoC5/ADC_1.c ****         #else
 846:Generated_Source\PSoC5/ADC_1.c ****             result = CY_GET_REG16(ADC_1_DEC_SAMPH_16B_PTR);
 1335              		.loc 1 846 0
 1336 0036 174B     		ldr	r3, .L69+4
 1337 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1338 003a 9BB2     		uxth	r3, r3
 1339 003c 7B60     		str	r3, [r7, #4]
 847:Generated_Source\PSoC5/ADC_1.c ****             result = (result << 16u) | ADC_1_DEC_SAMP_REG;
 1340              		.loc 1 847 0
 1341 003e 7B68     		ldr	r3, [r7, #4]
 1342 0040 1B04     		lsls	r3, r3, #16
 1343 0042 154A     		ldr	r2, .L69+8
 1344 0044 1278     		ldrb	r2, [r2]
 1345 0046 D2B2     		uxtb	r2, r2
 1346 0048 1343     		orrs	r3, r3, r2
 1347 004a 7B60     		str	r3, [r7, #4]
 848:Generated_Source\PSoC5/ADC_1.c ****             result |=  (uint32)((uint32)ADC_1_DEC_SAMPM_REG << 8u);
 1348              		.loc 1 848 0
 1349 004c 134B     		ldr	r3, .L69+12
 1350 004e 1B78     		ldrb	r3, [r3]
 1351 0050 DBB2     		uxtb	r3, r3
 1352 0052 1B02     		lsls	r3, r3, #8
 1353 0054 7A68     		ldr	r2, [r7, #4]
 1354 0056 1343     		orrs	r3, r3, r2
 1355 0058 7B60     		str	r3, [r7, #4]
 1356 005a 0AE0     		b	.L65
 1357              	.L66:
 849:Generated_Source\PSoC5/ADC_1.c ****         #endif /* CY_PSOC3 */
 850:Generated_Source\PSoC5/ADC_1.c ****     }
 851:Generated_Source\PSoC5/ADC_1.c ****     else /*ADC_1_DEC_SAMP_KEY_HIGH */
 852:Generated_Source\PSoC5/ADC_1.c ****     {
 853:Generated_Source\PSoC5/ADC_1.c ****         /* Read MSB byte at the end */
 854:Generated_Source\PSoC5/ADC_1.c ****         #if (CY_PSOC3)
 855:Generated_Source\PSoC5/ADC_1.c ****             result = CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR);
 856:Generated_Source\PSoC5/ADC_1.c **** 			tmp = ADC_1_DEC_SAMPH_REG;
 857:Generated_Source\PSoC5/ADC_1.c ****             if((tmp & 0x80u) != 0u)
 858:Generated_Source\PSoC5/ADC_1.c ****             {   /* Sign extend */
 859:Generated_Source\PSoC5/ADC_1.c ****                 tmp |= 0xFF00u;
 860:Generated_Source\PSoC5/ADC_1.c ****             }
 861:Generated_Source\PSoC5/ADC_1.c ****             result |= (uint32)tmp << 16u;
 862:Generated_Source\PSoC5/ADC_1.c ****         #else
 863:Generated_Source\PSoC5/ADC_1.c ****             result = CY_GET_REG16(ADC_1_DEC_SAMP_16B_PTR);
 1358              		.loc 1 863 0
 1359 005c 0E4B     		ldr	r3, .L69+8
 1360 005e 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 40


 1361 0060 9BB2     		uxth	r3, r3
 1362 0062 7B60     		str	r3, [r7, #4]
 864:Generated_Source\PSoC5/ADC_1.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_1_DEC_SAMPH_16B_PTR) << 16u);
 1363              		.loc 1 864 0
 1364 0064 0B4B     		ldr	r3, .L69+4
 1365 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1366 0068 9BB2     		uxth	r3, r3
 1367 006a 1B04     		lsls	r3, r3, #16
 1368 006c 7A68     		ldr	r2, [r7, #4]
 1369 006e 1343     		orrs	r3, r3, r2
 1370 0070 7B60     		str	r3, [r7, #4]
 1371              	.L65:
 865:Generated_Source\PSoC5/ADC_1.c ****         #endif /* CY_PSOC3 */
 866:Generated_Source\PSoC5/ADC_1.c ****     }
 867:Generated_Source\PSoC5/ADC_1.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 868:Generated_Source\PSoC5/ADC_1.c ****     if(ADC_1_stopConversion != 0u)
 1372              		.loc 1 868 0
 1373 0072 0B4B     		ldr	r3, .L69+16
 1374 0074 1B78     		ldrb	r3, [r3]
 1375 0076 DBB2     		uxtb	r3, r3
 1376 0078 002B     		cmp	r3, #0
 1377 007a 02D0     		beq	.L67
 869:Generated_Source\PSoC5/ADC_1.c ****     {
 870:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_convDone = 0u;
 1378              		.loc 1 870 0
 1379 007c 094B     		ldr	r3, .L69+20
 1380 007e 0022     		movs	r2, #0
 1381 0080 1A70     		strb	r2, [r3]
 1382              	.L67:
 871:Generated_Source\PSoC5/ADC_1.c ****     }
 872:Generated_Source\PSoC5/ADC_1.c **** 
 873:Generated_Source\PSoC5/ADC_1.c ****     return ((int32)result);
 1383              		.loc 1 873 0
 1384 0082 7B68     		ldr	r3, [r7, #4]
 874:Generated_Source\PSoC5/ADC_1.c **** }
 1385              		.loc 1 874 0
 1386 0084 1846     		mov	r0, r3
 1387 0086 0C37     		adds	r7, r7, #12
 1388              		.cfi_def_cfa_offset 4
 1389 0088 BD46     		mov	sp, r7
 1390              		.cfi_def_cfa_register 13
 1391              		@ sp needed
 1392 008a 80BC     		pop	{r7}
 1393              		.cfi_restore 7
 1394              		.cfi_def_cfa_offset 0
 1395 008c 7047     		bx	lr
 1396              	.L70:
 1397 008e 00BF     		.align	2
 1398              	.L69:
 1399 0090 144E0040 		.word	1073761812
 1400 0094 124E0040 		.word	1073761810
 1401 0098 104E0040 		.word	1073761808
 1402 009c 114E0040 		.word	1073761809
 1403 00a0 00000000 		.word	ADC_1_stopConversion
 1404 00a4 00000000 		.word	ADC_1_convDone
 1405              		.cfi_endproc
 1406              	.LFE13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 41


 1407              		.size	ADC_1_GetResult32, .-ADC_1_GetResult32
 1408              		.section	.text.ADC_1_SetOffset,"ax",%progbits
 1409              		.align	2
 1410              		.global	ADC_1_SetOffset
 1411              		.thumb
 1412              		.thumb_func
 1413              		.type	ADC_1_SetOffset, %function
 1414              	ADC_1_SetOffset:
 1415              	.LFB14:
 875:Generated_Source\PSoC5/ADC_1.c **** 
 876:Generated_Source\PSoC5/ADC_1.c **** 
 877:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 878:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetOffset
 879:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 880:Generated_Source\PSoC5/ADC_1.c **** *
 881:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 882:Generated_Source\PSoC5/ADC_1.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 883:Generated_Source\PSoC5/ADC_1.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 884:Generated_Source\PSoC5/ADC_1.c **** *  given reading before calculating the voltage conversion.
 885:Generated_Source\PSoC5/ADC_1.c **** *
 886:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 887:Generated_Source\PSoC5/ADC_1.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 888:Generated_Source\PSoC5/ADC_1.c **** *          connected to the same input voltage.
 889:Generated_Source\PSoC5/ADC_1.c **** *
 890:Generated_Source\PSoC5/ADC_1.c **** * Return:
 891:Generated_Source\PSoC5/ADC_1.c **** *  None
 892:Generated_Source\PSoC5/ADC_1.c **** *
 893:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 894:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_Offset:  Modified to set the user provided offset. This
 895:Generated_Source\PSoC5/ADC_1.c **** *  variable is used for offset calibration purpose.
 896:Generated_Source\PSoC5/ADC_1.c **** *
 897:Generated_Source\PSoC5/ADC_1.c **** * Side Effects:
 898:Generated_Source\PSoC5/ADC_1.c **** *  Affects the ADC_1_CountsTo_Volts,
 899:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsTo_mVolts, ADC_1_CountsTo_uVolts functions
 900:Generated_Source\PSoC5/ADC_1.c **** *  by subtracting the given offset.
 901:Generated_Source\PSoC5/ADC_1.c **** *
 902:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 903:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_SetOffset(int32 offset) 
 904:Generated_Source\PSoC5/ADC_1.c **** {
 1416              		.loc 1 904 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420              		@ link register save eliminated.
 1421 0000 80B4     		push	{r7}
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 7, -4
 1424 0002 83B0     		sub	sp, sp, #12
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 905:Generated_Source\PSoC5/ADC_1.c **** 
 906:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_Offset = offset;
 1429              		.loc 1 906 0
 1430 0008 034A     		ldr	r2, .L72
 1431 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 42


 1432 000c 1360     		str	r3, [r2]
 907:Generated_Source\PSoC5/ADC_1.c **** }
 1433              		.loc 1 907 0
 1434 000e 00BF     		nop
 1435 0010 0C37     		adds	r7, r7, #12
 1436              		.cfi_def_cfa_offset 4
 1437 0012 BD46     		mov	sp, r7
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0014 80BC     		pop	{r7}
 1441              		.cfi_restore 7
 1442              		.cfi_def_cfa_offset 0
 1443 0016 7047     		bx	lr
 1444              	.L73:
 1445              		.align	2
 1446              	.L72:
 1447 0018 00000000 		.word	ADC_1_Offset
 1448              		.cfi_endproc
 1449              	.LFE14:
 1450              		.size	ADC_1_SetOffset, .-ADC_1_SetOffset
 1451              		.section	.text.ADC_1_SetGain,"ax",%progbits
 1452              		.align	2
 1453              		.global	ADC_1_SetGain
 1454              		.thumb
 1455              		.thumb_func
 1456              		.type	ADC_1_SetGain, %function
 1457              	ADC_1_SetGain:
 1458              	.LFB15:
 908:Generated_Source\PSoC5/ADC_1.c **** 
 909:Generated_Source\PSoC5/ADC_1.c **** 
 910:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetGain
 912:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 913:Generated_Source\PSoC5/ADC_1.c **** *
 914:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 915:Generated_Source\PSoC5/ADC_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 916:Generated_Source\PSoC5/ADC_1.c **** *  functions below. This value is set by default by the reference and
 917:Generated_Source\PSoC5/ADC_1.c **** *  input range settings. It should only be used to further calibrate the
 918:Generated_Source\PSoC5/ADC_1.c **** *  ADC with a known input or if an external reference is used. This
 919:Generated_Source\PSoC5/ADC_1.c **** *  function may also be used to calibrate an entire signal chain, not
 920:Generated_Source\PSoC5/ADC_1.c **** *  just the ADC.
 921:Generated_Source\PSoC5/ADC_1.c **** *
 922:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 923:Generated_Source\PSoC5/ADC_1.c **** *  int32: ADC gain in counts per volt.
 924:Generated_Source\PSoC5/ADC_1.c **** *
 925:Generated_Source\PSoC5/ADC_1.c **** * Return:
 926:Generated_Source\PSoC5/ADC_1.c **** *  None
 927:Generated_Source\PSoC5/ADC_1.c **** *
 928:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 929:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsPerVolt:  modified to set the ADC gain in counts
 930:Generated_Source\PSoC5/ADC_1.c **** *   per volt.
 931:Generated_Source\PSoC5/ADC_1.c **** *
 932:Generated_Source\PSoC5/ADC_1.c **** * Side Effects:
 933:Generated_Source\PSoC5/ADC_1.c **** *  Affects the ADC_1_CountsTo_Volts,
 934:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsTo_mVolts, ADC_1_CountsTo_uVolts functions
 935:Generated_Source\PSoC5/ADC_1.c **** *  supplying the correct conversion between ADC counts and voltage.
 936:Generated_Source\PSoC5/ADC_1.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 43


 937:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 938:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_SetGain(int32 adcGain) 
 939:Generated_Source\PSoC5/ADC_1.c **** {
 1459              		.loc 1 939 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463              		@ link register save eliminated.
 1464 0000 80B4     		push	{r7}
 1465              		.cfi_def_cfa_offset 4
 1466              		.cfi_offset 7, -4
 1467 0002 83B0     		sub	sp, sp, #12
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 7860     		str	r0, [r7, #4]
 940:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_CountsPerVolt = adcGain;
 1472              		.loc 1 940 0
 1473 0008 034A     		ldr	r2, .L75
 1474 000a 7B68     		ldr	r3, [r7, #4]
 1475 000c 1360     		str	r3, [r2]
 941:Generated_Source\PSoC5/ADC_1.c **** }
 1476              		.loc 1 941 0
 1477 000e 00BF     		nop
 1478 0010 0C37     		adds	r7, r7, #12
 1479              		.cfi_def_cfa_offset 4
 1480 0012 BD46     		mov	sp, r7
 1481              		.cfi_def_cfa_register 13
 1482              		@ sp needed
 1483 0014 80BC     		pop	{r7}
 1484              		.cfi_restore 7
 1485              		.cfi_def_cfa_offset 0
 1486 0016 7047     		bx	lr
 1487              	.L76:
 1488              		.align	2
 1489              	.L75:
 1490 0018 00000000 		.word	ADC_1_CountsPerVolt
 1491              		.cfi_endproc
 1492              	.LFE15:
 1493              		.size	ADC_1_SetGain, .-ADC_1_SetGain
 1494              		.section	.text.ADC_1_CountsTo_mVolts,"ax",%progbits
 1495              		.align	2
 1496              		.global	ADC_1_CountsTo_mVolts
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	ADC_1_CountsTo_mVolts, %function
 1500              	ADC_1_CountsTo_mVolts:
 1501              	.LFB16:
 942:Generated_Source\PSoC5/ADC_1.c **** 
 943:Generated_Source\PSoC5/ADC_1.c **** 
 944:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
 945:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_CountsTo_mVolts
 946:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
 947:Generated_Source\PSoC5/ADC_1.c **** *
 948:Generated_Source\PSoC5/ADC_1.c **** * Summary:
 949:Generated_Source\PSoC5/ADC_1.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 950:Generated_Source\PSoC5/ADC_1.c **** *  example, if the ADC measured 0.534 volts, the return value would
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 44


 951:Generated_Source\PSoC5/ADC_1.c **** *  be 534 mVolts.
 952:Generated_Source\PSoC5/ADC_1.c **** *
 953:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
 954:Generated_Source\PSoC5/ADC_1.c **** *  int32: adcCounts Result from the ADC conversion.
 955:Generated_Source\PSoC5/ADC_1.c **** *
 956:Generated_Source\PSoC5/ADC_1.c **** * Return:
 957:Generated_Source\PSoC5/ADC_1.c **** *  int16:  Result in mVolts
 958:Generated_Source\PSoC5/ADC_1.c **** *
 959:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
 960:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsPerVolt:  used to convert ADC counts to mVolts.
 961:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_Offset:  Used as the offset while converting ADC counts
 962:Generated_Source\PSoC5/ADC_1.c **** *   to mVolts.
 963:Generated_Source\PSoC5/ADC_1.c **** *
 964:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
 965:Generated_Source\PSoC5/ADC_1.c **** int16 ADC_1_CountsTo_mVolts(int32 adcCounts) 
 966:Generated_Source\PSoC5/ADC_1.c **** {
 1502              		.loc 1 966 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 16
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507 0000 80B4     		push	{r7}
 1508              		.cfi_def_cfa_offset 4
 1509              		.cfi_offset 7, -4
 1510 0002 85B0     		sub	sp, sp, #20
 1511              		.cfi_def_cfa_offset 24
 1512 0004 00AF     		add	r7, sp, #0
 1513              		.cfi_def_cfa_register 7
 1514 0006 7860     		str	r0, [r7, #4]
 967:Generated_Source\PSoC5/ADC_1.c **** 
 968:Generated_Source\PSoC5/ADC_1.c ****     int16 mVolts;
 969:Generated_Source\PSoC5/ADC_1.c **** 
 970:Generated_Source\PSoC5/ADC_1.c ****     /* Convert adcCounts to the right align if left option selected */
 971:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_CFG1_DEC_DIV != 0)
 972:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG1)
 973:Generated_Source\PSoC5/ADC_1.c ****         {
 974:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG1_DEC_DIV;
 975:Generated_Source\PSoC5/ADC_1.c ****         }
 976:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG1_DEC_DIV */
 977:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG2_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 1))
 978:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG2)
 979:Generated_Source\PSoC5/ADC_1.c ****         {
 980:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG2_DEC_DIV;
 981:Generated_Source\PSoC5/ADC_1.c ****         }
 982:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
 983:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG3_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 2))
 984:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG3)
 985:Generated_Source\PSoC5/ADC_1.c ****         {
 986:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG3_DEC_DIV;
 987:Generated_Source\PSoC5/ADC_1.c ****         }
 988:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
 989:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG4_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 3))
 990:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG4)
 991:Generated_Source\PSoC5/ADC_1.c ****         {
 992:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG4_DEC_DIV;
 993:Generated_Source\PSoC5/ADC_1.c ****         }
 994:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 45


 995:Generated_Source\PSoC5/ADC_1.c **** 
 996:Generated_Source\PSoC5/ADC_1.c ****     /* Subtract ADC offset */
 997:Generated_Source\PSoC5/ADC_1.c ****     adcCounts -= ADC_1_Offset;
 1515              		.loc 1 997 0
 1516 0008 0A4B     		ldr	r3, .L79
 1517 000a 1B68     		ldr	r3, [r3]
 1518 000c 7A68     		ldr	r2, [r7, #4]
 1519 000e D31A     		subs	r3, r2, r3
 1520 0010 7B60     		str	r3, [r7, #4]
 998:Generated_Source\PSoC5/ADC_1.c **** 
 999:Generated_Source\PSoC5/ADC_1.c ****     mVolts = (int16)(( adcCounts * ADC_1_1MV_COUNTS ) / ADC_1_CountsPerVolt) ;
 1521              		.loc 1 999 0
 1522 0012 7B68     		ldr	r3, [r7, #4]
 1523 0014 4FF47A72 		mov	r2, #1000
 1524 0018 02FB03F2 		mul	r2, r2, r3
 1525 001c 064B     		ldr	r3, .L79+4
 1526 001e 1B68     		ldr	r3, [r3]
 1527 0020 92FBF3F3 		sdiv	r3, r2, r3
 1528 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1000:Generated_Source\PSoC5/ADC_1.c **** 
1001:Generated_Source\PSoC5/ADC_1.c ****     return(mVolts);
 1529              		.loc 1 1001 0
 1530 0026 B7F90E30 		ldrsh	r3, [r7, #14]
1002:Generated_Source\PSoC5/ADC_1.c **** }
 1531              		.loc 1 1002 0
 1532 002a 1846     		mov	r0, r3
 1533 002c 1437     		adds	r7, r7, #20
 1534              		.cfi_def_cfa_offset 4
 1535 002e BD46     		mov	sp, r7
 1536              		.cfi_def_cfa_register 13
 1537              		@ sp needed
 1538 0030 80BC     		pop	{r7}
 1539              		.cfi_restore 7
 1540              		.cfi_def_cfa_offset 0
 1541 0032 7047     		bx	lr
 1542              	.L80:
 1543              		.align	2
 1544              	.L79:
 1545 0034 00000000 		.word	ADC_1_Offset
 1546 0038 00000000 		.word	ADC_1_CountsPerVolt
 1547              		.cfi_endproc
 1548              	.LFE16:
 1549              		.size	ADC_1_CountsTo_mVolts, .-ADC_1_CountsTo_mVolts
 1550              		.global	__aeabi_i2f
 1551              		.section	.text.ADC_1_CountsTo_Volts,"ax",%progbits
 1552              		.align	2
 1553              		.global	ADC_1_CountsTo_Volts
 1554              		.thumb
 1555              		.thumb_func
 1556              		.type	ADC_1_CountsTo_Volts, %function
 1557              	ADC_1_CountsTo_Volts:
 1558              	.LFB17:
1003:Generated_Source\PSoC5/ADC_1.c **** 
1004:Generated_Source\PSoC5/ADC_1.c **** 
1005:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1006:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_CountsTo_Volts
1007:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 46


1008:Generated_Source\PSoC5/ADC_1.c **** *
1009:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1010:Generated_Source\PSoC5/ADC_1.c **** *  Converts the ADC output to Volts as a floating point number. For
1011:Generated_Source\PSoC5/ADC_1.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1012:Generated_Source\PSoC5/ADC_1.c **** *  returned result would be +1.2345 Volts.
1013:Generated_Source\PSoC5/ADC_1.c **** *
1014:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1015:Generated_Source\PSoC5/ADC_1.c **** *  int32 adcCounts:  Result from the ADC conversion.
1016:Generated_Source\PSoC5/ADC_1.c **** *
1017:Generated_Source\PSoC5/ADC_1.c **** * Return:
1018:Generated_Source\PSoC5/ADC_1.c **** *  float32: Result in Volts
1019:Generated_Source\PSoC5/ADC_1.c **** *
1020:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
1021:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsPerVolt:  used to convert to Volts.
1022:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_Offset:  Used as the offset while converting ADC counts
1023:Generated_Source\PSoC5/ADC_1.c **** *   to Volts.
1024:Generated_Source\PSoC5/ADC_1.c **** *
1025:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1026:Generated_Source\PSoC5/ADC_1.c **** float32 ADC_1_CountsTo_Volts(int32 adcCounts) 
1027:Generated_Source\PSoC5/ADC_1.c **** {
 1559              		.loc 1 1027 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 16
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 90B5     		push	{r4, r7, lr}
 1564              		.cfi_def_cfa_offset 12
 1565              		.cfi_offset 4, -12
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 14, -4
 1568 0002 85B0     		sub	sp, sp, #20
 1569              		.cfi_def_cfa_offset 32
 1570 0004 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 1572 0006 7860     		str	r0, [r7, #4]
1028:Generated_Source\PSoC5/ADC_1.c **** 
1029:Generated_Source\PSoC5/ADC_1.c ****     float32 Volts;
1030:Generated_Source\PSoC5/ADC_1.c **** 
1031:Generated_Source\PSoC5/ADC_1.c ****     /* Convert adcCounts to the right align if left option selected */
1032:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_CFG1_DEC_DIV != 0)
1033:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG1)
1034:Generated_Source\PSoC5/ADC_1.c ****         {
1035:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG1_DEC_DIV;
1036:Generated_Source\PSoC5/ADC_1.c ****         }
1037:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG1_DEC_DIV */
1038:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG2_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 1))
1039:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG2)
1040:Generated_Source\PSoC5/ADC_1.c ****         {
1041:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG2_DEC_DIV;
1042:Generated_Source\PSoC5/ADC_1.c ****         }
1043:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
1044:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG3_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 2))
1045:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG3)
1046:Generated_Source\PSoC5/ADC_1.c ****         {
1047:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG3_DEC_DIV;
1048:Generated_Source\PSoC5/ADC_1.c ****         }
1049:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
1050:Generated_Source\PSoC5/ADC_1.c ****     #if((ADC_1_CFG4_DEC_DIV != 0) && (ADC_1_DEFAULT_NUM_CONFIGS > 3))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 47


1051:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_Config == ADC_1_CFG4)
1052:Generated_Source\PSoC5/ADC_1.c ****         {
1053:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG4_DEC_DIV;
1054:Generated_Source\PSoC5/ADC_1.c ****         }
1055:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_CFG2_DEC_DIV */
1056:Generated_Source\PSoC5/ADC_1.c **** 
1057:Generated_Source\PSoC5/ADC_1.c ****     /* Subtract ADC offset */
1058:Generated_Source\PSoC5/ADC_1.c ****     adcCounts -= ADC_1_Offset;
 1573              		.loc 1 1058 0
 1574 0008 0C4B     		ldr	r3, .L83
 1575 000a 1B68     		ldr	r3, [r3]
 1576 000c 7A68     		ldr	r2, [r7, #4]
 1577 000e D31A     		subs	r3, r2, r3
 1578 0010 7B60     		str	r3, [r7, #4]
1059:Generated_Source\PSoC5/ADC_1.c **** 
1060:Generated_Source\PSoC5/ADC_1.c ****     Volts = (float32)adcCounts / (float32)ADC_1_CountsPerVolt;
 1579              		.loc 1 1060 0
 1580 0012 7868     		ldr	r0, [r7, #4]
 1581 0014 FFF7FEFF 		bl	__aeabi_i2f
 1582 0018 0446     		mov	r4, r0
 1583 001a 094B     		ldr	r3, .L83+4
 1584 001c 1B68     		ldr	r3, [r3]
 1585 001e 1846     		mov	r0, r3
 1586 0020 FFF7FEFF 		bl	__aeabi_i2f
 1587 0024 0346     		mov	r3, r0
 1588 0026 1946     		mov	r1, r3
 1589 0028 2046     		mov	r0, r4
 1590 002a FFF7FEFF 		bl	__aeabi_fdiv
 1591 002e 0346     		mov	r3, r0
 1592 0030 FB60     		str	r3, [r7, #12]	@ float
1061:Generated_Source\PSoC5/ADC_1.c **** 
1062:Generated_Source\PSoC5/ADC_1.c ****     return( Volts );
 1593              		.loc 1 1062 0
 1594 0032 FB68     		ldr	r3, [r7, #12]	@ float
1063:Generated_Source\PSoC5/ADC_1.c **** }
 1595              		.loc 1 1063 0
 1596 0034 1846     		mov	r0, r3
 1597 0036 1437     		adds	r7, r7, #20
 1598              		.cfi_def_cfa_offset 12
 1599 0038 BD46     		mov	sp, r7
 1600              		.cfi_def_cfa_register 13
 1601              		@ sp needed
 1602 003a 90BD     		pop	{r4, r7, pc}
 1603              	.L84:
 1604              		.align	2
 1605              	.L83:
 1606 003c 00000000 		.word	ADC_1_Offset
 1607 0040 00000000 		.word	ADC_1_CountsPerVolt
 1608              		.cfi_endproc
 1609              	.LFE17:
 1610              		.size	ADC_1_CountsTo_Volts, .-ADC_1_CountsTo_Volts
 1611              		.section	.text.ADC_1_CountsTo_uVolts,"ax",%progbits
 1612              		.align	2
 1613              		.global	ADC_1_CountsTo_uVolts
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	ADC_1_CountsTo_uVolts, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 48


 1617              	ADC_1_CountsTo_uVolts:
 1618              	.LFB18:
1064:Generated_Source\PSoC5/ADC_1.c **** 
1065:Generated_Source\PSoC5/ADC_1.c **** 
1066:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_CountsTo_uVolts
1068:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1069:Generated_Source\PSoC5/ADC_1.c **** *
1070:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1071:Generated_Source\PSoC5/ADC_1.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1072:Generated_Source\PSoC5/ADC_1.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1073:Generated_Source\PSoC5/ADC_1.c **** *
1074:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1075:Generated_Source\PSoC5/ADC_1.c **** *  int32 adcCounts: Result from the ADC conversion.
1076:Generated_Source\PSoC5/ADC_1.c **** *
1077:Generated_Source\PSoC5/ADC_1.c **** * Return:
1078:Generated_Source\PSoC5/ADC_1.c **** *  int32:  Result in uVolts
1079:Generated_Source\PSoC5/ADC_1.c **** *
1080:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
1081:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsPerVolt:  used to convert ADC counts to mVolts.
1082:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_Offset:  Used as the offset while converting ADC counts
1083:Generated_Source\PSoC5/ADC_1.c **** *   to mVolts.
1084:Generated_Source\PSoC5/ADC_1.c **** *
1085:Generated_Source\PSoC5/ADC_1.c **** * Theory:
1086:Generated_Source\PSoC5/ADC_1.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1087:Generated_Source\PSoC5/ADC_1.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1088:Generated_Source\PSoC5/ADC_1.c **** *
1089:Generated_Source\PSoC5/ADC_1.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_1_CountsPerVolt / B));
1090:Generated_Source\PSoC5/ADC_1.c **** *
1091:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1092:Generated_Source\PSoC5/ADC_1.c **** int32 ADC_1_CountsTo_uVolts(int32 adcCounts) 
1093:Generated_Source\PSoC5/ADC_1.c **** {
 1619              		.loc 1 1093 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 24
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623              		@ link register save eliminated.
 1624 0000 80B4     		push	{r7}
 1625              		.cfi_def_cfa_offset 4
 1626              		.cfi_offset 7, -4
 1627 0002 87B0     		sub	sp, sp, #28
 1628              		.cfi_def_cfa_offset 32
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
1094:Generated_Source\PSoC5/ADC_1.c **** 
1095:Generated_Source\PSoC5/ADC_1.c ****     int32 uVolts;
1096:Generated_Source\PSoC5/ADC_1.c ****     int32 coefA;
1097:Generated_Source\PSoC5/ADC_1.c ****     int32 coefB;
1098:Generated_Source\PSoC5/ADC_1.c ****     uint8 resolution;
1099:Generated_Source\PSoC5/ADC_1.c **** 
1100:Generated_Source\PSoC5/ADC_1.c ****     /* Set the resolution based on the configuration */
1101:Generated_Source\PSoC5/ADC_1.c ****     /* Convert adcCounts to the right align if left option selected */
1102:Generated_Source\PSoC5/ADC_1.c ****     if (ADC_1_Config == ADC_1_CFG1)
 1632              		.loc 1 1102 0
 1633 0008 264B     		ldr	r3, .L96
 1634 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 49


 1635 000c DBB2     		uxtb	r3, r3
 1636 000e 012B     		cmp	r3, #1
 1637 0010 02D1     		bne	.L86
1103:Generated_Source\PSoC5/ADC_1.c ****     {
1104:Generated_Source\PSoC5/ADC_1.c ****         resolution = ADC_1_CFG1_RESOLUTION;
 1638              		.loc 1 1104 0
 1639 0012 1323     		movs	r3, #19
 1640 0014 FB73     		strb	r3, [r7, #15]
 1641 0016 11E0     		b	.L87
 1642              	.L86:
1105:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_CFG1_DEC_DIV != 0)
1106:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG1_DEC_DIV;
1107:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_CFG1_DEC_DIV */
1108:Generated_Source\PSoC5/ADC_1.c ****     }
1109:Generated_Source\PSoC5/ADC_1.c ****     else if (ADC_1_Config == ADC_1_CFG2)
 1643              		.loc 1 1109 0
 1644 0018 224B     		ldr	r3, .L96
 1645 001a 1B78     		ldrb	r3, [r3]
 1646 001c DBB2     		uxtb	r3, r3
 1647 001e 022B     		cmp	r3, #2
 1648 0020 02D1     		bne	.L88
1110:Generated_Source\PSoC5/ADC_1.c ****     {
1111:Generated_Source\PSoC5/ADC_1.c ****         resolution = ADC_1_CFG2_RESOLUTION;
 1649              		.loc 1 1111 0
 1650 0022 1023     		movs	r3, #16
 1651 0024 FB73     		strb	r3, [r7, #15]
 1652 0026 09E0     		b	.L87
 1653              	.L88:
1112:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_CFG2_DEC_DIV != 0)
1113:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG2_DEC_DIV;
1114:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_CFG2_DEC_DIV */
1115:Generated_Source\PSoC5/ADC_1.c ****     }
1116:Generated_Source\PSoC5/ADC_1.c ****     else if (ADC_1_Config == ADC_1_CFG3)
 1654              		.loc 1 1116 0
 1655 0028 1E4B     		ldr	r3, .L96
 1656 002a 1B78     		ldrb	r3, [r3]
 1657 002c DBB2     		uxtb	r3, r3
 1658 002e 032B     		cmp	r3, #3
 1659 0030 02D1     		bne	.L89
1117:Generated_Source\PSoC5/ADC_1.c ****     {
1118:Generated_Source\PSoC5/ADC_1.c ****         resolution = ADC_1_CFG3_RESOLUTION;
 1660              		.loc 1 1118 0
 1661 0032 1023     		movs	r3, #16
 1662 0034 FB73     		strb	r3, [r7, #15]
 1663 0036 01E0     		b	.L87
 1664              	.L89:
1119:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_CFG3_DEC_DIV != 0)
1120:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG3_DEC_DIV;
1121:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_CFG3_DEC_DIV */
1122:Generated_Source\PSoC5/ADC_1.c ****     }
1123:Generated_Source\PSoC5/ADC_1.c ****     else
1124:Generated_Source\PSoC5/ADC_1.c ****     {
1125:Generated_Source\PSoC5/ADC_1.c ****         resolution = ADC_1_CFG4_RESOLUTION;
 1665              		.loc 1 1125 0
 1666 0038 1023     		movs	r3, #16
 1667 003a FB73     		strb	r3, [r7, #15]
 1668              	.L87:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 50


1126:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_CFG4_DEC_DIV != 0)
1127:Generated_Source\PSoC5/ADC_1.c ****             adcCounts /= ADC_1_CFG4_DEC_DIV;
1128:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_CFG4_DEC_DIV */
1129:Generated_Source\PSoC5/ADC_1.c ****     }
1130:Generated_Source\PSoC5/ADC_1.c **** 
1131:Generated_Source\PSoC5/ADC_1.c ****     switch (resolution)
 1669              		.loc 1 1131 0
 1670 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1671 003e 102B     		cmp	r3, #16
 1672 0040 02D0     		beq	.L91
 1673 0042 132B     		cmp	r3, #19
 1674 0044 06D0     		beq	.L92
 1675 0046 0BE0     		b	.L95
 1676              	.L91:
1132:Generated_Source\PSoC5/ADC_1.c ****     {
1133:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_12) || \
1134:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_12) || \
1135:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_12) || \
1136:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_12) )
1137:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_12:
1138:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_2;
1139:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_2;
1140:Generated_Source\PSoC5/ADC_1.c ****                 break;
1141:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_12 */    
1142:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_13) || \
1143:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_13) || \
1144:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_13) || \
1145:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_13) )
1146:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_13:
1147:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_4;
1148:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_4;
1149:Generated_Source\PSoC5/ADC_1.c ****                 break;
1150:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_13 */    
1151:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_14) || \
1152:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_14) || \
1153:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_14) || \
1154:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_14) )
1155:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_14:
1156:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_8;
1157:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_8;
1158:Generated_Source\PSoC5/ADC_1.c ****                 break;
1159:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_14 */    
1160:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_15) || \
1161:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_15) || \
1162:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_15) || \
1163:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_15) )
1164:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_15:
1165:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_16;
1166:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_16;
1167:Generated_Source\PSoC5/ADC_1.c ****                 break;
1168:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_15 */    
1169:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_16) || \
1170:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_16) || \
1171:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_16) || \
1172:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_16) )
1173:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_16:
1174:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_32;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 51


 1677              		.loc 1 1174 0
 1678 0048 47F61223 		movw	r3, #31250
 1679 004c 7B61     		str	r3, [r7, #20]
1175:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_32;
 1680              		.loc 1 1175 0
 1681 004e 2023     		movs	r3, #32
 1682 0050 3B61     		str	r3, [r7, #16]
1176:Generated_Source\PSoC5/ADC_1.c ****                 break;
 1683              		.loc 1 1176 0
 1684 0052 0AE0     		b	.L93
 1685              	.L92:
1177:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_16 */    
1178:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_17) || \
1179:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_17) || \
1180:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_17) || \
1181:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_17) )
1182:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_17:
1183:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_64;
1184:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_64;
1185:Generated_Source\PSoC5/ADC_1.c ****                 break;
1186:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_17 */    
1187:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_18) || \
1188:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_18) || \
1189:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_18) || \
1190:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_18) )
1191:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_18:
1192:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_125;
1193:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_125;
1194:Generated_Source\PSoC5/ADC_1.c ****                 break;
1195:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_18 */    
1196:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_19) || \
1197:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_19) || \
1198:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_19) || \
1199:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_19) )
1200:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_19:
1201:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_250;
 1686              		.loc 1 1201 0
 1687 0054 4FF47A63 		mov	r3, #4000
 1688 0058 7B61     		str	r3, [r7, #20]
1202:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_250;
 1689              		.loc 1 1202 0
 1690 005a FA23     		movs	r3, #250
 1691 005c 3B61     		str	r3, [r7, #16]
1203:Generated_Source\PSoC5/ADC_1.c ****                 break;
 1692              		.loc 1 1203 0
 1693 005e 04E0     		b	.L93
 1694              	.L95:
1204:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_19 */    
1205:Generated_Source\PSoC5/ADC_1.c ****         #if( (ADC_1_CFG1_RESOLUTION == ADC_1__BITS_20) || \
1206:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG2_RESOLUTION == ADC_1__BITS_20) || \
1207:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG3_RESOLUTION == ADC_1__BITS_20) || \
1208:Generated_Source\PSoC5/ADC_1.c ****              (ADC_1_CFG4_RESOLUTION == ADC_1__BITS_20) )
1209:Generated_Source\PSoC5/ADC_1.c ****             case (uint8)ADC_1__BITS_20:
1210:Generated_Source\PSoC5/ADC_1.c ****                 coefA = ADC_1_1UV_COUNTS / ADC_1_DIVISOR_500;
1211:Generated_Source\PSoC5/ADC_1.c ****                 coefB = ADC_1_DIVISOR_500;
1212:Generated_Source\PSoC5/ADC_1.c ****                 break;
1213:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1__BITS_20 */    
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 52


1214:Generated_Source\PSoC5/ADC_1.c ****         default:    /* resolution < 12 */
1215:Generated_Source\PSoC5/ADC_1.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1216:Generated_Source\PSoC5/ADC_1.c ****             coefA = ADC_1_1UV_COUNTS;
 1695              		.loc 1 1216 0
 1696 0060 114B     		ldr	r3, .L96+4
 1697 0062 7B61     		str	r3, [r7, #20]
1217:Generated_Source\PSoC5/ADC_1.c ****             coefB = ADC_1_DIVISOR_1;
 1698              		.loc 1 1217 0
 1699 0064 0123     		movs	r3, #1
 1700 0066 3B61     		str	r3, [r7, #16]
1218:Generated_Source\PSoC5/ADC_1.c ****             break;
 1701              		.loc 1 1218 0
 1702 0068 00BF     		nop
 1703              	.L93:
1219:Generated_Source\PSoC5/ADC_1.c ****     }
1220:Generated_Source\PSoC5/ADC_1.c ****     coefB = ADC_1_CountsPerVolt / coefB;
 1704              		.loc 1 1220 0
 1705 006a 104B     		ldr	r3, .L96+8
 1706 006c 1A68     		ldr	r2, [r3]
 1707 006e 3B69     		ldr	r3, [r7, #16]
 1708 0070 92FBF3F3 		sdiv	r3, r2, r3
 1709 0074 3B61     		str	r3, [r7, #16]
1221:Generated_Source\PSoC5/ADC_1.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_1_Offset) / coefB);
 1710              		.loc 1 1221 0
 1711 0076 7B69     		ldr	r3, [r7, #20]
 1712 0078 7A68     		ldr	r2, [r7, #4]
 1713 007a 02FB03F2 		mul	r2, r2, r3
 1714 007e 3B69     		ldr	r3, [r7, #16]
 1715 0080 92FBF3F2 		sdiv	r2, r2, r3
 1716 0084 0A4B     		ldr	r3, .L96+12
 1717 0086 1B68     		ldr	r3, [r3]
 1718 0088 7969     		ldr	r1, [r7, #20]
 1719 008a 01FB03F1 		mul	r1, r1, r3
 1720 008e 3B69     		ldr	r3, [r7, #16]
 1721 0090 91FBF3F3 		sdiv	r3, r1, r3
 1722 0094 D31A     		subs	r3, r2, r3
 1723 0096 BB60     		str	r3, [r7, #8]
1222:Generated_Source\PSoC5/ADC_1.c **** 
1223:Generated_Source\PSoC5/ADC_1.c ****     return( uVolts );
 1724              		.loc 1 1223 0
 1725 0098 BB68     		ldr	r3, [r7, #8]
1224:Generated_Source\PSoC5/ADC_1.c **** }
 1726              		.loc 1 1224 0
 1727 009a 1846     		mov	r0, r3
 1728 009c 1C37     		adds	r7, r7, #28
 1729              		.cfi_def_cfa_offset 4
 1730 009e BD46     		mov	sp, r7
 1731              		.cfi_def_cfa_register 13
 1732              		@ sp needed
 1733 00a0 80BC     		pop	{r7}
 1734              		.cfi_restore 7
 1735              		.cfi_def_cfa_offset 0
 1736 00a2 7047     		bx	lr
 1737              	.L97:
 1738              		.align	2
 1739              	.L96:
 1740 00a4 00000000 		.word	ADC_1_Config
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 53


 1741 00a8 40420F00 		.word	1000000
 1742 00ac 00000000 		.word	ADC_1_CountsPerVolt
 1743 00b0 00000000 		.word	ADC_1_Offset
 1744              		.cfi_endproc
 1745              	.LFE18:
 1746              		.size	ADC_1_CountsTo_uVolts, .-ADC_1_CountsTo_uVolts
 1747              		.section	.text.ADC_1_InitConfig,"ax",%progbits
 1748              		.align	2
 1749              		.thumb
 1750              		.thumb_func
 1751              		.type	ADC_1_InitConfig, %function
 1752              	ADC_1_InitConfig:
 1753              	.LFB19:
1225:Generated_Source\PSoC5/ADC_1.c **** 
1226:Generated_Source\PSoC5/ADC_1.c **** 
1227:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1228:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_InitConfig(uint8 config)
1229:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1230:Generated_Source\PSoC5/ADC_1.c **** *
1231:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1232:Generated_Source\PSoC5/ADC_1.c **** *  Initializes all registers based on customizer settings
1233:Generated_Source\PSoC5/ADC_1.c **** *
1234:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1235:Generated_Source\PSoC5/ADC_1.c **** *   void
1236:Generated_Source\PSoC5/ADC_1.c **** *
1237:Generated_Source\PSoC5/ADC_1.c **** * Return:
1238:Generated_Source\PSoC5/ADC_1.c **** *  None
1239:Generated_Source\PSoC5/ADC_1.c **** *
1240:Generated_Source\PSoC5/ADC_1.c **** * Global variables:
1241:Generated_Source\PSoC5/ADC_1.c **** *  ADC_1_CountsPerVolt:  Used to set the default counts per volt.
1242:Generated_Source\PSoC5/ADC_1.c **** *
1243:Generated_Source\PSoC5/ADC_1.c **** * Side Effects: Rewrites the coherency set by ADC_1_SetCoherency()
1244:Generated_Source\PSoC5/ADC_1.c **** *   API to the default value.
1245:Generated_Source\PSoC5/ADC_1.c **** *
1246:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1247:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_InitConfig(uint8 config) 
1248:Generated_Source\PSoC5/ADC_1.c **** {
 1754              		.loc 1 1248 0
 1755              		.cfi_startproc
 1756              		@ args = 0, pretend = 0, frame = 8
 1757              		@ frame_needed = 1, uses_anonymous_args = 0
 1758 0000 80B5     		push	{r7, lr}
 1759              		.cfi_def_cfa_offset 8
 1760              		.cfi_offset 7, -8
 1761              		.cfi_offset 14, -4
 1762 0002 82B0     		sub	sp, sp, #8
 1763              		.cfi_def_cfa_offset 16
 1764 0004 00AF     		add	r7, sp, #0
 1765              		.cfi_def_cfa_register 7
 1766 0006 0346     		mov	r3, r0
 1767 0008 FB71     		strb	r3, [r7, #7]
1249:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_stopConversion = 0u;
 1768              		.loc 1 1249 0
 1769 000a 384B     		ldr	r3, .L101
 1770 000c 0022     		movs	r2, #0
 1771 000e 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ADC_1.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 54


1251:Generated_Source\PSoC5/ADC_1.c ****     if (config == 1u)
 1772              		.loc 1 1251 0
 1773 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1774 0012 012B     		cmp	r3, #1
 1775 0014 66D1     		bne	.L100
1252:Generated_Source\PSoC5/ADC_1.c ****     {
1253:Generated_Source\PSoC5/ADC_1.c ****         /* Default Config */
1254:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_CR_REG      = ADC_1_CFG1_DEC_CR;
 1776              		.loc 1 1254 0
 1777 0016 364B     		ldr	r3, .L101+4
 1778 0018 7C22     		movs	r2, #124
 1779 001a 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_SHIFT1_REG  = ADC_1_CFG1_DEC_SHIFT1;
 1780              		.loc 1 1255 0
 1781 001c 354B     		ldr	r3, .L101+8
 1782 001e 0022     		movs	r2, #0
 1783 0020 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_SHIFT2_REG  = ADC_1_CFG1_DEC_SHIFT2;
 1784              		.loc 1 1256 0
 1785 0022 354B     		ldr	r3, .L101+12
 1786 0024 0A22     		movs	r2, #10
 1787 0026 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_DR2_REG     = ADC_1_CFG1_DEC_DR2;
 1788              		.loc 1 1257 0
 1789 0028 344B     		ldr	r3, .L101+16
 1790 002a 3F22     		movs	r2, #63
 1791 002c 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_DR2H_REG    = ADC_1_CFG1_DEC_DR2H;
 1792              		.loc 1 1258 0
 1793 002e 344B     		ldr	r3, .L101+20
 1794 0030 0022     		movs	r2, #0
 1795 0032 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_DR1_REG     = ADC_1_CFG1_DEC_DR1;
 1796              		.loc 1 1259 0
 1797 0034 334B     		ldr	r3, .L101+24
 1798 0036 7F22     		movs	r2, #127
 1799 0038 1A70     		strb	r2, [r3]
1260:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_OCOR_REG    = ADC_1_CFG1_DEC_OCOR;
 1800              		.loc 1 1260 0
 1801 003a 334B     		ldr	r3, .L101+28
 1802 003c 0022     		movs	r2, #0
 1803 003e 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_OCORM_REG   = ADC_1_CFG1_DEC_OCORM;
 1804              		.loc 1 1261 0
 1805 0040 324B     		ldr	r3, .L101+32
 1806 0042 0022     		movs	r2, #0
 1807 0044 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_OCORH_REG   = ADC_1_CFG1_DEC_OCORH;
 1808              		.loc 1 1262 0
 1809 0046 324B     		ldr	r3, .L101+36
 1810 0048 0022     		movs	r2, #0
 1811 004a 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_COHER_REG   = ADC_1_CFG1_DEC_COHER;
 1812              		.loc 1 1263 0
 1813 004c 314B     		ldr	r3, .L101+40
 1814 004e 0122     		movs	r2, #1
 1815 0050 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 55


1264:Generated_Source\PSoC5/ADC_1.c **** 
1265:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR4_REG     = ADC_1_CFG1_DSM_CR4;
 1816              		.loc 1 1265 0
 1817 0052 314B     		ldr	r3, .L101+44
 1818 0054 5022     		movs	r2, #80
 1819 0056 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR5_REG     = ADC_1_CFG1_DSM_CR5;
 1820              		.loc 1 1266 0
 1821 0058 304B     		ldr	r3, .L101+48
 1822 005a 1322     		movs	r2, #19
 1823 005c 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR6_REG     = ADC_1_CFG1_DSM_CR6;
 1824              		.loc 1 1267 0
 1825 005e 304B     		ldr	r3, .L101+52
 1826 0060 2B22     		movs	r2, #43
 1827 0062 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR7_REG     = ADC_1_CFG1_DSM_CR7;
 1828              		.loc 1 1268 0
 1829 0064 2F4B     		ldr	r3, .L101+56
 1830 0066 0022     		movs	r2, #0
 1831 0068 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR10_REG    = ADC_1_CFG1_DSM_CR10;
 1832              		.loc 1 1269 0
 1833 006a 2F4B     		ldr	r3, .L101+60
 1834 006c 4422     		movs	r2, #68
 1835 006e 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR11_REG    = ADC_1_CFG1_DSM_CR11;
 1836              		.loc 1 1270 0
 1837 0070 2E4B     		ldr	r3, .L101+64
 1838 0072 4822     		movs	r2, #72
 1839 0074 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR12_REG    = ADC_1_CFG1_DSM_CR12;
 1840              		.loc 1 1271 0
 1841 0076 2E4B     		ldr	r3, .L101+68
 1842 0078 0222     		movs	r2, #2
 1843 007a 1A70     		strb	r2, [r3]
1272:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR14_REG    = ADC_1_CFG1_DSM_CR14;
 1844              		.loc 1 1272 0
 1845 007c 2D4B     		ldr	r3, .L101+72
 1846 007e 0222     		movs	r2, #2
 1847 0080 1A70     		strb	r2, [r3]
1273:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR15_REG    = ADC_1_CFG1_DSM_CR15;
 1848              		.loc 1 1273 0
 1849 0082 2D4B     		ldr	r3, .L101+76
 1850 0084 1222     		movs	r2, #18
 1851 0086 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR16_REG    = ADC_1_CFG1_DSM_CR16;
 1852              		.loc 1 1274 0
 1853 0088 2C4B     		ldr	r3, .L101+80
 1854 008a 2822     		movs	r2, #40
 1855 008c 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_CR17_REG    = ADC_1_CFG1_DSM_CR17;
 1856              		.loc 1 1275 0
 1857 008e 2C4B     		ldr	r3, .L101+84
 1858 0090 EB22     		movs	r2, #235
 1859 0092 1A70     		strb	r2, [r3]
1276:Generated_Source\PSoC5/ADC_1.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 56


1277:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_SetDSMRef0Reg(ADC_1_CFG1_DSM_REF0);
 1860              		.loc 1 1277 0
 1861 0094 4420     		movs	r0, #68
 1862 0096 FFF7FEFF 		bl	ADC_1_SetDSMRef0Reg
1278:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_REF2_REG    = ADC_1_CFG1_DSM_REF2;
 1863              		.loc 1 1278 0
 1864 009a 2A4B     		ldr	r3, .L101+88
 1865 009c 4722     		movs	r2, #71
 1866 009e 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_REF3_REG    = ADC_1_CFG1_DSM_REF3;
 1867              		.loc 1 1279 0
 1868 00a0 294B     		ldr	r3, .L101+92
 1869 00a2 0022     		movs	r2, #0
 1870 00a4 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ADC_1.c **** 
1281:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_BUF0_REG    = ADC_1_CFG1_DSM_BUF0;
 1871              		.loc 1 1281 0
 1872 00a6 294B     		ldr	r3, .L101+96
 1873 00a8 0122     		movs	r2, #1
 1874 00aa 1A70     		strb	r2, [r3]
1282:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_BUF1_REG    = ADC_1_CFG1_DSM_BUF1;
 1875              		.loc 1 1282 0
 1876 00ac 284B     		ldr	r3, .L101+100
 1877 00ae 0122     		movs	r2, #1
 1878 00b0 1A70     		strb	r2, [r3]
1283:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_BUF2_REG    = ADC_1_CFG1_DSM_BUF2;
 1879              		.loc 1 1283 0
 1880 00b2 284B     		ldr	r3, .L101+104
 1881 00b4 0022     		movs	r2, #0
 1882 00b6 1A70     		strb	r2, [r3]
1284:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DSM_BUF3_REG    = ADC_1_CFG1_DSM_BUF3;
 1883              		.loc 1 1284 0
 1884 00b8 274B     		ldr	r3, .L101+108
 1885 00ba 0A22     		movs	r2, #10
 1886 00bc 1A70     		strb	r2, [r3]
1285:Generated_Source\PSoC5/ADC_1.c **** 
1286:Generated_Source\PSoC5/ADC_1.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1287:Generated_Source\PSoC5/ADC_1.c ****         *  the input  range selected.
1288:Generated_Source\PSoC5/ADC_1.c ****         */
1289:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_DEFAULT_INPUT_MODE)
1290:Generated_Source\PSoC5/ADC_1.c ****             #if (ADC_1_CFG1_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)
1291:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_AMux_Select(1u);
1292:Generated_Source\PSoC5/ADC_1.c ****             #else
1293:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_AMux_Select(0u);
1294:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_IR_VSSA_TO_2VREF) */
1295:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_DEFAULT_INPUT_MODE */
1296:Generated_Source\PSoC5/ADC_1.c **** 
1297:Generated_Source\PSoC5/ADC_1.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1298:Generated_Source\PSoC5/ADC_1.c ****         *   mode is Single sample
1299:Generated_Source\PSoC5/ADC_1.c ****         */
1300:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_CFG1_RESOLUTION > 16 && \
1301:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_CFG1_CONV_MODE == ADC_1_MODE_SINGLE_SAMPLE)
1302:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_stopConversion = 1u;
 1887              		.loc 1 1302 0
 1888 00be 0B4B     		ldr	r3, .L101
 1889 00c0 0122     		movs	r2, #1
 1890 00c2 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 57


1303:Generated_Source\PSoC5/ADC_1.c ****         #endif /* Single sample with resolution above 16 bits. */
1304:Generated_Source\PSoC5/ADC_1.c **** 
1305:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_CountsPerVolt = (int32)ADC_1_CFG1_COUNTS_PER_VOLT;
 1891              		.loc 1 1305 0
 1892 00c4 254B     		ldr	r3, .L101+112
 1893 00c6 4FF4FA32 		mov	r2, #128000
 1894 00ca 1A60     		str	r2, [r3]
1306:Generated_Source\PSoC5/ADC_1.c **** 
1307:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_Ext_CP_Clk_SetDividerRegister(ADC_1_CFG1_CP_CLK_DIVIDER, 1u);
 1895              		.loc 1 1307 0
 1896 00cc 0121     		movs	r1, #1
 1897 00ce 0620     		movs	r0, #6
 1898 00d0 FFF7FEFF 		bl	ADC_1_Ext_CP_Clk_SetDividerRegister
1308:Generated_Source\PSoC5/ADC_1.c **** 
1309:Generated_Source\PSoC5/ADC_1.c ****         /* This is only valid if there is an internal clock */
1310:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_DEFAULT_INTERNAL_CLK)
1311:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_theACLK_SetDividerRegister(ADC_1_CFG1_ADC_CLK_DIVIDER, 1u);
 1899              		.loc 1 1311 0
 1900 00d4 0121     		movs	r1, #1
 1901 00d6 1920     		movs	r0, #25
 1902 00d8 FFF7FEFF 		bl	ADC_1_theACLK_SetDividerRegister
1312:Generated_Source\PSoC5/ADC_1.c ****         #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
1313:Generated_Source\PSoC5/ADC_1.c **** 
1314:Generated_Source\PSoC5/ADC_1.c ****         #if(ADC_1_IRQ_REMOVE == 0u)
1315:Generated_Source\PSoC5/ADC_1.c ****             /* Set interrupt vector */
1316:Generated_Source\PSoC5/ADC_1.c ****             (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR1);
 1903              		.loc 1 1316 0
 1904 00dc 2049     		ldr	r1, .L101+116
 1905 00de 1D20     		movs	r0, #29
 1906 00e0 FFF7FEFF 		bl	CyIntSetVector
 1907              	.L100:
1317:Generated_Source\PSoC5/ADC_1.c ****         #endif   /* End ADC_1_IRQ_REMOVE */
1318:Generated_Source\PSoC5/ADC_1.c ****     }
1319:Generated_Source\PSoC5/ADC_1.c **** 
1320:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 1)
1321:Generated_Source\PSoC5/ADC_1.c ****         if(config == 2u)
1322:Generated_Source\PSoC5/ADC_1.c ****         {
1323:Generated_Source\PSoC5/ADC_1.c ****             /* Second Config */
1324:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_CR_REG      = ADC_1_CFG2_DEC_CR;
1325:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT1_REG  = ADC_1_CFG2_DEC_SHIFT1;
1326:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT2_REG  = ADC_1_CFG2_DEC_SHIFT2;
1327:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2_REG     = ADC_1_CFG2_DEC_DR2;
1328:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2H_REG    = ADC_1_CFG2_DEC_DR2H;
1329:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR1_REG     = ADC_1_CFG2_DEC_DR1;
1330:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCOR_REG    = ADC_1_CFG2_DEC_OCOR;
1331:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORM_REG   = ADC_1_CFG2_DEC_OCORM;
1332:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORH_REG   = ADC_1_CFG2_DEC_OCORH;
1333:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_COHER_REG   = ADC_1_CFG2_DEC_COHER;
1334:Generated_Source\PSoC5/ADC_1.c **** 
1335:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR4_REG     = ADC_1_CFG2_DSM_CR4;
1336:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR5_REG     = ADC_1_CFG2_DSM_CR5;
1337:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR6_REG     = ADC_1_CFG2_DSM_CR6;
1338:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR7_REG     = ADC_1_CFG2_DSM_CR7;
1339:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR10_REG    = ADC_1_CFG2_DSM_CR10;
1340:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR11_REG    = ADC_1_CFG2_DSM_CR11;
1341:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR12_REG    = ADC_1_CFG2_DSM_CR12;
1342:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR14_REG    = ADC_1_CFG2_DSM_CR14;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 58


1343:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR15_REG    = ADC_1_CFG2_DSM_CR15;
1344:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR16_REG    = ADC_1_CFG2_DSM_CR16;
1345:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR17_REG    = ADC_1_CFG2_DSM_CR17;
1346:Generated_Source\PSoC5/ADC_1.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1347:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_SetDSMRef0Reg(ADC_1_CFG2_DSM_REF0);
1348:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF2_REG    = ADC_1_CFG2_DSM_REF2;
1349:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF3_REG    = ADC_1_CFG2_DSM_REF3;
1350:Generated_Source\PSoC5/ADC_1.c **** 
1351:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF0_REG    = ADC_1_CFG2_DSM_BUF0;
1352:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF1_REG    = ADC_1_CFG2_DSM_BUF1;
1353:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF2_REG    = ADC_1_CFG2_DSM_BUF2;
1354:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF3_REG    = ADC_1_CFG2_DSM_BUF3;
1355:Generated_Source\PSoC5/ADC_1.c **** 
1356:Generated_Source\PSoC5/ADC_1.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1357:Generated_Source\PSoC5/ADC_1.c ****             *  the input range selected.
1358:Generated_Source\PSoC5/ADC_1.c ****             */
1359:Generated_Source\PSoC5/ADC_1.c **** 
1360:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INPUT_MODE)
1361:Generated_Source\PSoC5/ADC_1.c ****                 #if (ADC_1_CFG2_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)
1362:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(1u);
1363:Generated_Source\PSoC5/ADC_1.c ****                 #else
1364:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(0u);
1365:Generated_Source\PSoC5/ADC_1.c ****                 #endif /* ADC_1_IR_VSSA_TO_2VREF) */
1366:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INPUT_MODE */
1367:Generated_Source\PSoC5/ADC_1.c **** 
1368:Generated_Source\PSoC5/ADC_1.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1369:Generated_Source\PSoC5/ADC_1.c ****             *   conversion mode is Single sample
1370:Generated_Source\PSoC5/ADC_1.c ****             */
1371:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_CFG2_RESOLUTION > 16 && \
1372:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_CFG2_CONV_MODE == ADC_1_MODE_SINGLE_SAMPLE)
1373:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_stopConversion = 1u;
1374:Generated_Source\PSoC5/ADC_1.c ****             #endif /* Single sample with resolution above 16 bits. */
1375:Generated_Source\PSoC5/ADC_1.c **** 
1376:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_CountsPerVolt = (int32)ADC_1_CFG2_COUNTS_PER_VOLT;
1377:Generated_Source\PSoC5/ADC_1.c **** 
1378:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_Ext_CP_Clk_SetDividerRegister(ADC_1_CFG2_CP_CLK_DIVIDER, 1u);
1379:Generated_Source\PSoC5/ADC_1.c **** 
1380:Generated_Source\PSoC5/ADC_1.c ****             /* This is only valid if there is an internal clock */
1381:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INTERNAL_CLK)
1382:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_theACLK_SetDividerRegister(ADC_1_CFG2_ADC_CLK_DIVIDER, 1u);
1383:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
1384:Generated_Source\PSoC5/ADC_1.c **** 
1385:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_IRQ_REMOVE == 0u)
1386:Generated_Source\PSoC5/ADC_1.c ****                 /* Set interrupt vector */
1387:Generated_Source\PSoC5/ADC_1.c ****                 (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR2);
1388:Generated_Source\PSoC5/ADC_1.c ****             #endif   /* End ADC_1_IRQ_REMOVE */
1389:Generated_Source\PSoC5/ADC_1.c ****         }
1390:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 1 */
1391:Generated_Source\PSoC5/ADC_1.c **** 
1392:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 2)
1393:Generated_Source\PSoC5/ADC_1.c ****         if(config == 3u)
1394:Generated_Source\PSoC5/ADC_1.c ****         {
1395:Generated_Source\PSoC5/ADC_1.c ****             /* Third Config */
1396:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_CR_REG      = ADC_1_CFG3_DEC_CR;
1397:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT1_REG  = ADC_1_CFG3_DEC_SHIFT1;
1398:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT2_REG  = ADC_1_CFG3_DEC_SHIFT2;
1399:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2_REG     = ADC_1_CFG3_DEC_DR2;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 59


1400:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2H_REG    = ADC_1_CFG3_DEC_DR2H;
1401:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR1_REG     = ADC_1_CFG3_DEC_DR1;
1402:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCOR_REG    = ADC_1_CFG3_DEC_OCOR;
1403:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORM_REG   = ADC_1_CFG3_DEC_OCORM;
1404:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORH_REG   = ADC_1_CFG3_DEC_OCORH;
1405:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_COHER_REG   = ADC_1_CFG3_DEC_COHER;
1406:Generated_Source\PSoC5/ADC_1.c **** 
1407:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR4_REG     = ADC_1_CFG3_DSM_CR4;
1408:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR5_REG     = ADC_1_CFG3_DSM_CR5;
1409:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR6_REG     = ADC_1_CFG3_DSM_CR6;
1410:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR7_REG     = ADC_1_CFG3_DSM_CR7;
1411:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR10_REG    = ADC_1_CFG3_DSM_CR10;
1412:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR11_REG    = ADC_1_CFG3_DSM_CR11;
1413:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR12_REG    = ADC_1_CFG3_DSM_CR12;
1414:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR14_REG    = ADC_1_CFG3_DSM_CR14;
1415:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR15_REG    = ADC_1_CFG3_DSM_CR15;
1416:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR16_REG    = ADC_1_CFG3_DSM_CR16;
1417:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR17_REG    = ADC_1_CFG3_DSM_CR17;
1418:Generated_Source\PSoC5/ADC_1.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1419:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_SetDSMRef0Reg(ADC_1_CFG3_DSM_REF0);
1420:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF2_REG    = ADC_1_CFG3_DSM_REF2;
1421:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF3_REG    = ADC_1_CFG3_DSM_REF3;
1422:Generated_Source\PSoC5/ADC_1.c **** 
1423:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF0_REG    = ADC_1_CFG3_DSM_BUF0;
1424:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF1_REG    = ADC_1_CFG3_DSM_BUF1;
1425:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF2_REG    = ADC_1_CFG3_DSM_BUF2;
1426:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF3_REG    = ADC_1_CFG3_DSM_BUF3;
1427:Generated_Source\PSoC5/ADC_1.c **** 
1428:Generated_Source\PSoC5/ADC_1.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1429:Generated_Source\PSoC5/ADC_1.c ****             *  the input range selected.
1430:Generated_Source\PSoC5/ADC_1.c ****             */
1431:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INPUT_MODE)
1432:Generated_Source\PSoC5/ADC_1.c ****                 #if (ADC_1_CFG3_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)
1433:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(1u);
1434:Generated_Source\PSoC5/ADC_1.c ****                 #else
1435:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(0u);
1436:Generated_Source\PSoC5/ADC_1.c ****                 #endif /* ADC_1_IR_VSSA_TO_2VREF) */
1437:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INPUT_MODE */
1438:Generated_Source\PSoC5/ADC_1.c **** 
1439:Generated_Source\PSoC5/ADC_1.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1440:Generated_Source\PSoC5/ADC_1.c ****                conversion  mode is Single sample */
1441:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_CFG3_RESOLUTION > 16 && \
1442:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_CFG3_CONV_MODE == ADC_1_MODE_SINGLE_SAMPLE)
1443:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_stopConversion = 1u;
1444:Generated_Source\PSoC5/ADC_1.c ****             #endif /* Single sample with resolution above 16 bits */
1445:Generated_Source\PSoC5/ADC_1.c **** 
1446:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_CountsPerVolt = (int32)ADC_1_CFG3_COUNTS_PER_VOLT;
1447:Generated_Source\PSoC5/ADC_1.c **** 
1448:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_Ext_CP_Clk_SetDividerRegister(ADC_1_CFG3_CP_CLK_DIVIDER, 1u);
1449:Generated_Source\PSoC5/ADC_1.c **** 
1450:Generated_Source\PSoC5/ADC_1.c ****             /* This is only valid if there is an internal clock */
1451:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INTERNAL_CLK)
1452:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_theACLK_SetDividerRegister(ADC_1_CFG3_ADC_CLK_DIVIDER, 1u);
1453:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
1454:Generated_Source\PSoC5/ADC_1.c **** 
1455:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_IRQ_REMOVE == 0u)
1456:Generated_Source\PSoC5/ADC_1.c ****                 /* Set interrupt vector */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 60


1457:Generated_Source\PSoC5/ADC_1.c ****                 (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR3);
1458:Generated_Source\PSoC5/ADC_1.c ****             #endif   /* End ADC_1_IRQ_REMOVE */
1459:Generated_Source\PSoC5/ADC_1.c ****         }
1460:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 2 */
1461:Generated_Source\PSoC5/ADC_1.c **** 
1462:Generated_Source\PSoC5/ADC_1.c ****     #if(ADC_1_DEFAULT_NUM_CONFIGS > 3)
1463:Generated_Source\PSoC5/ADC_1.c ****         if (config == 4u)
1464:Generated_Source\PSoC5/ADC_1.c ****         {
1465:Generated_Source\PSoC5/ADC_1.c ****             /* Fourth Config */
1466:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_CR_REG      = ADC_1_CFG4_DEC_CR;
1467:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT1_REG  = ADC_1_CFG4_DEC_SHIFT1;
1468:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_SHIFT2_REG  = ADC_1_CFG4_DEC_SHIFT2;
1469:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2_REG     = ADC_1_CFG4_DEC_DR2;
1470:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR2H_REG    = ADC_1_CFG4_DEC_DR2H;
1471:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_DR1_REG     = ADC_1_CFG4_DEC_DR1;
1472:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCOR_REG    = ADC_1_CFG4_DEC_OCOR;
1473:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORM_REG   = ADC_1_CFG4_DEC_OCORM;
1474:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_OCORH_REG   = ADC_1_CFG4_DEC_OCORH;
1475:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DEC_COHER_REG   = ADC_1_CFG4_DEC_COHER;
1476:Generated_Source\PSoC5/ADC_1.c **** 
1477:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR4_REG     = ADC_1_CFG4_DSM_CR4;
1478:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR5_REG     = ADC_1_CFG4_DSM_CR5;
1479:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR6_REG     = ADC_1_CFG4_DSM_CR6;
1480:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR7_REG     = ADC_1_CFG4_DSM_CR7;
1481:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR10_REG    = ADC_1_CFG4_DSM_CR10;
1482:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR11_REG    = ADC_1_CFG4_DSM_CR11;
1483:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR12_REG    = ADC_1_CFG4_DSM_CR12;
1484:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR14_REG    = ADC_1_CFG4_DSM_CR14;
1485:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR15_REG    = ADC_1_CFG4_DSM_CR15;
1486:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR16_REG    = ADC_1_CFG4_DSM_CR16;
1487:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_CR17_REG    = ADC_1_CFG4_DSM_CR17;
1488:Generated_Source\PSoC5/ADC_1.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1489:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_SetDSMRef0Reg(ADC_1_CFG4_DSM_REF0);
1490:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF2_REG    = ADC_1_CFG4_DSM_REF2;
1491:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_REF3_REG    = ADC_1_CFG4_DSM_REF3;
1492:Generated_Source\PSoC5/ADC_1.c **** 
1493:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF0_REG    = ADC_1_CFG4_DSM_BUF0;
1494:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF1_REG    = ADC_1_CFG4_DSM_BUF1;
1495:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF2_REG    = ADC_1_CFG4_DSM_BUF2;
1496:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_DSM_BUF3_REG    = ADC_1_CFG4_DSM_BUF3;
1497:Generated_Source\PSoC5/ADC_1.c **** 
1498:Generated_Source\PSoC5/ADC_1.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1499:Generated_Source\PSoC5/ADC_1.c ****             *  the input range selected.
1500:Generated_Source\PSoC5/ADC_1.c ****             */
1501:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INPUT_MODE)
1502:Generated_Source\PSoC5/ADC_1.c ****                 #if (ADC_1_CFG4_INPUT_RANGE == ADC_1_IR_VSSA_TO_2VREF)
1503:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(1u);
1504:Generated_Source\PSoC5/ADC_1.c ****                 #else
1505:Generated_Source\PSoC5/ADC_1.c ****                     ADC_1_AMux_Select(0u);
1506:Generated_Source\PSoC5/ADC_1.c ****                 #endif /* ADC_1_IR_VSSA_TO_2VREF) */
1507:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INPUT_MODE */
1508:Generated_Source\PSoC5/ADC_1.c **** 
1509:Generated_Source\PSoC5/ADC_1.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1510:Generated_Source\PSoC5/ADC_1.c ****                conversion mode is Single sample */
1511:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_CFG4_RESOLUTION > 16 && \
1512:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_CFG4_CONV_MODE == ADC_1_MODE_SINGLE_SAMPLE)
1513:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_stopConversion = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 61


1514:Generated_Source\PSoC5/ADC_1.c ****             #endif /* Single sample with resolution above 16 bits */
1515:Generated_Source\PSoC5/ADC_1.c **** 
1516:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_CountsPerVolt = (int32)ADC_1_CFG4_COUNTS_PER_VOLT;
1517:Generated_Source\PSoC5/ADC_1.c **** 
1518:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_Ext_CP_Clk_SetDividerRegister(ADC_1_CFG4_CP_CLK_DIVIDER, 1u);
1519:Generated_Source\PSoC5/ADC_1.c **** 
1520:Generated_Source\PSoC5/ADC_1.c ****             /* This is only valid if there is an internal clock */
1521:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_DEFAULT_INTERNAL_CLK)
1522:Generated_Source\PSoC5/ADC_1.c ****                 ADC_1_theACLK_SetDividerRegister(ADC_1_CFG4_ADC_CLK_DIVIDER, 1u);
1523:Generated_Source\PSoC5/ADC_1.c ****             #endif /* ADC_1_DEFAULT_INTERNAL_CLK */
1524:Generated_Source\PSoC5/ADC_1.c **** 
1525:Generated_Source\PSoC5/ADC_1.c ****             #if(ADC_1_IRQ_REMOVE == 0u)
1526:Generated_Source\PSoC5/ADC_1.c ****                 /* Set interrupt vector */
1527:Generated_Source\PSoC5/ADC_1.c ****                 (void)CyIntSetVector(ADC_1_INTC_NUMBER, &ADC_1_ISR4);
1528:Generated_Source\PSoC5/ADC_1.c ****             #endif   /* End ADC_1_IRQ_REMOVE */
1529:Generated_Source\PSoC5/ADC_1.c ****         }
1530:Generated_Source\PSoC5/ADC_1.c ****     #endif /* ADC_1_DEFAULT_NUM_CONFIGS > 3 */
1531:Generated_Source\PSoC5/ADC_1.c **** }
 1908              		.loc 1 1531 0
 1909 00e4 00BF     		nop
 1910 00e6 0837     		adds	r7, r7, #8
 1911              		.cfi_def_cfa_offset 8
 1912 00e8 BD46     		mov	sp, r7
 1913              		.cfi_def_cfa_register 13
 1914              		@ sp needed
 1915 00ea 80BD     		pop	{r7, pc}
 1916              	.L102:
 1917              		.align	2
 1918              	.L101:
 1919 00ec 00000000 		.word	ADC_1_stopConversion
 1920 00f0 004E0040 		.word	1073761792
 1921 00f4 024E0040 		.word	1073761794
 1922 00f8 034E0040 		.word	1073761795
 1923 00fc 044E0040 		.word	1073761796
 1924 0100 054E0040 		.word	1073761797
 1925 0104 064E0040 		.word	1073761798
 1926 0108 084E0040 		.word	1073761800
 1927 010c 094E0040 		.word	1073761801
 1928 0110 0A4E0040 		.word	1073761802
 1929 0114 144E0040 		.word	1073761812
 1930 0118 84580040 		.word	1073764484
 1931 011c 85580040 		.word	1073764485
 1932 0120 86580040 		.word	1073764486
 1933 0124 87580040 		.word	1073764487
 1934 0128 8A580040 		.word	1073764490
 1935 012c 8B580040 		.word	1073764491
 1936 0130 8C580040 		.word	1073764492
 1937 0134 8E580040 		.word	1073764494
 1938 0138 8F580040 		.word	1073764495
 1939 013c 90580040 		.word	1073764496
 1940 0140 91580040 		.word	1073764497
 1941 0144 94580040 		.word	1073764500
 1942 0148 95580040 		.word	1073764501
 1943 014c 9A580040 		.word	1073764506
 1944 0150 9B580040 		.word	1073764507
 1945 0154 9C580040 		.word	1073764508
 1946 0158 9D580040 		.word	1073764509
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 62


 1947 015c 00000000 		.word	ADC_1_CountsPerVolt
 1948 0160 00000000 		.word	ADC_1_ISR1
 1949              		.cfi_endproc
 1950              	.LFE19:
 1951              		.size	ADC_1_InitConfig, .-ADC_1_InitConfig
 1952              		.section	.text.ADC_1_SelectConfiguration,"ax",%progbits
 1953              		.align	2
 1954              		.global	ADC_1_SelectConfiguration
 1955              		.thumb
 1956              		.thumb_func
 1957              		.type	ADC_1_SelectConfiguration, %function
 1958              	ADC_1_SelectConfiguration:
 1959              	.LFB20:
1532:Generated_Source\PSoC5/ADC_1.c **** 
1533:Generated_Source\PSoC5/ADC_1.c **** 
1534:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1535:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SelectCofiguration
1536:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1537:Generated_Source\PSoC5/ADC_1.c **** *
1538:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1539:Generated_Source\PSoC5/ADC_1.c **** *  Sets one of up to four ADC configurations. Before setting the new
1540:Generated_Source\PSoC5/ADC_1.c **** *  configuration, the ADC is stopped and powered down. After setting
1541:Generated_Source\PSoC5/ADC_1.c **** *  the new configuration, the ADC can be powered and conversion
1542:Generated_Source\PSoC5/ADC_1.c **** *  can be restarted depending up on the value of second parameter
1543:Generated_Source\PSoC5/ADC_1.c **** *  restart. If the value of this parameter is 1, then ADC will be
1544:Generated_Source\PSoC5/ADC_1.c **** *  restarted. If this value is zero, then user must call ADC_1_Start
1545:Generated_Source\PSoC5/ADC_1.c **** *  and ADC_1_StartConvert() to restart the conversion.
1546:Generated_Source\PSoC5/ADC_1.c **** *
1547:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1548:Generated_Source\PSoC5/ADC_1.c **** *  config:  configuration user wants to select.
1549:Generated_Source\PSoC5/ADC_1.c **** *           Valid range: 1..4
1550:Generated_Source\PSoC5/ADC_1.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1551:Generated_Source\PSoC5/ADC_1.c **** *                            0 means do not start the ADC and conversion.
1552:Generated_Source\PSoC5/ADC_1.c **** *
1553:Generated_Source\PSoC5/ADC_1.c **** * Return:
1554:Generated_Source\PSoC5/ADC_1.c **** *  None
1555:Generated_Source\PSoC5/ADC_1.c **** *
1556:Generated_Source\PSoC5/ADC_1.c **** * Side Effects: 
1557:Generated_Source\PSoC5/ADC_1.c **** *  Enables internal interrupt.
1558:Generated_Source\PSoC5/ADC_1.c **** *
1559:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/ADC_1.c **** void ADC_1_SelectConfiguration(uint8 config, uint8 restart)
1561:Generated_Source\PSoC5/ADC_1.c ****                                               
1562:Generated_Source\PSoC5/ADC_1.c **** {
 1960              		.loc 1 1562 0
 1961              		.cfi_startproc
 1962              		@ args = 0, pretend = 0, frame = 8
 1963              		@ frame_needed = 1, uses_anonymous_args = 0
 1964 0000 80B5     		push	{r7, lr}
 1965              		.cfi_def_cfa_offset 8
 1966              		.cfi_offset 7, -8
 1967              		.cfi_offset 14, -4
 1968 0002 82B0     		sub	sp, sp, #8
 1969              		.cfi_def_cfa_offset 16
 1970 0004 00AF     		add	r7, sp, #0
 1971              		.cfi_def_cfa_register 7
 1972 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 63


 1973 0008 0A46     		mov	r2, r1
 1974 000a FB71     		strb	r3, [r7, #7]
 1975 000c 1346     		mov	r3, r2
 1976 000e BB71     		strb	r3, [r7, #6]
1563:Generated_Source\PSoC5/ADC_1.c ****     /* Check whether the configuration number is valid or not */
1564:Generated_Source\PSoC5/ADC_1.c ****     if((config > 0u) && (config <= ADC_1_DEFAULT_NUM_CONFIGS))
 1977              		.loc 1 1564 0
 1978 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1979 0012 002B     		cmp	r3, #0
 1980 0014 29D0     		beq	.L104
 1981              		.loc 1 1564 0 is_stmt 0 discriminator 1
 1982 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1983 0018 012B     		cmp	r3, #1
 1984 001a 26D8     		bhi	.L104
1565:Generated_Source\PSoC5/ADC_1.c ****     {
1566:Generated_Source\PSoC5/ADC_1.c ****         /* Set the flag to ensure Start() API doesn't override the 
1567:Generated_Source\PSoC5/ADC_1.c **** 		*  selected configuration
1568:Generated_Source\PSoC5/ADC_1.c **** 		*/
1569:Generated_Source\PSoC5/ADC_1.c ****         if(ADC_1_initVar == 0u)
 1985              		.loc 1 1569 0 is_stmt 1
 1986 001c 164B     		ldr	r3, .L108
 1987 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1988 0020 002B     		cmp	r3, #0
 1989 0022 02D1     		bne	.L105
1570:Generated_Source\PSoC5/ADC_1.c ****         {
1571:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_started = 1u;
 1990              		.loc 1 1571 0
 1991 0024 154B     		ldr	r3, .L108+4
 1992 0026 0122     		movs	r2, #1
 1993 0028 1A70     		strb	r2, [r3]
 1994              	.L105:
1572:Generated_Source\PSoC5/ADC_1.c ****         }
1573:Generated_Source\PSoC5/ADC_1.c **** 
1574:Generated_Source\PSoC5/ADC_1.c ****         /* Update the config flag */
1575:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_Config = config;
 1995              		.loc 1 1575 0
 1996 002a 154A     		ldr	r2, .L108+8
 1997 002c FB79     		ldrb	r3, [r7, #7]
 1998 002e 1370     		strb	r3, [r2]
1576:Generated_Source\PSoC5/ADC_1.c **** 
1577:Generated_Source\PSoC5/ADC_1.c ****         /* Stop the ADC  */
1578:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_Stop();
 1999              		.loc 1 1578 0
 2000 0030 FFF7FEFF 		bl	ADC_1_Stop
1579:Generated_Source\PSoC5/ADC_1.c **** 
1580:Generated_Source\PSoC5/ADC_1.c ****         /* Set the  ADC registers based on the configuration */
1581:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_InitConfig(config);
 2001              		.loc 1 1581 0
 2002 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2003 0036 1846     		mov	r0, r3
 2004 0038 FFF7FEFF 		bl	ADC_1_InitConfig
1582:Generated_Source\PSoC5/ADC_1.c **** 
1583:Generated_Source\PSoC5/ADC_1.c ****         /* Compensate the gain */
1584:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_DEC_GVAL_REG = ADC_1_gcor[config - 1u].gval;
 2005              		.loc 1 1584 0
 2006 003c 114A     		ldr	r2, .L108+12
 2007 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 64


 2008 0040 013B     		subs	r3, r3, #1
 2009 0042 1149     		ldr	r1, .L108+16
 2010 0044 9B00     		lsls	r3, r3, #2
 2011 0046 0B44     		add	r3, r3, r1
 2012 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 2013 004a 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/ADC_1.c ****         CY_SET_REG16(ADC_1_DEC_GCOR_16B_PTR, ADC_1_gcor[config - 1u].gcor);
 2014              		.loc 1 1585 0
 2015 004c 0F4A     		ldr	r2, .L108+20
 2016 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2017 0050 013B     		subs	r3, r3, #1
 2018 0052 0D49     		ldr	r1, .L108+16
 2019 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2020 0058 1380     		strh	r3, [r2]	@ movhi
1586:Generated_Source\PSoC5/ADC_1.c **** 
1587:Generated_Source\PSoC5/ADC_1.c ****         if(restart == 1u)
 2021              		.loc 1 1587 0
 2022 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2023 005c 012B     		cmp	r3, #1
 2024 005e 07D1     		bne	.L107
1588:Generated_Source\PSoC5/ADC_1.c ****         {
1589:Generated_Source\PSoC5/ADC_1.c ****             /* Restart the ADC */
1590:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_Start();
 2025              		.loc 1 1590 0
 2026 0060 FFF7FEFF 		bl	ADC_1_Start
1591:Generated_Source\PSoC5/ADC_1.c **** 
1592:Generated_Source\PSoC5/ADC_1.c ****             /* Restart the ADC conversion */
1593:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_StartConvert();
 2027              		.loc 1 1593 0
 2028 0064 FFF7FEFF 		bl	ADC_1_StartConvert
1587:Generated_Source\PSoC5/ADC_1.c ****         {
 2029              		.loc 1 1587 0
 2030 0068 02E0     		b	.L107
 2031              	.L104:
1594:Generated_Source\PSoC5/ADC_1.c ****         }
1595:Generated_Source\PSoC5/ADC_1.c ****     }
1596:Generated_Source\PSoC5/ADC_1.c ****     else
1597:Generated_Source\PSoC5/ADC_1.c ****     {
1598:Generated_Source\PSoC5/ADC_1.c ****         /* Halt CPU in debug mode if config is out of valid range */
1599:Generated_Source\PSoC5/ADC_1.c ****         CYASSERT(0u != 0u);
 2032              		.loc 1 1599 0 discriminator 1
 2033 006a 0020     		movs	r0, #0
 2034 006c FFF7FEFF 		bl	CyHalt
 2035              	.L107:
1600:Generated_Source\PSoC5/ADC_1.c ****     }
1601:Generated_Source\PSoC5/ADC_1.c **** }
 2036              		.loc 1 1601 0
 2037 0070 00BF     		nop
 2038 0072 0837     		adds	r7, r7, #8
 2039              		.cfi_def_cfa_offset 8
 2040 0074 BD46     		mov	sp, r7
 2041              		.cfi_def_cfa_register 13
 2042              		@ sp needed
 2043 0076 80BD     		pop	{r7, pc}
 2044              	.L109:
 2045              		.align	2
 2046              	.L108:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 65


 2047 0078 00000000 		.word	ADC_1_initVar
 2048 007c 00000000 		.word	ADC_1_started
 2049 0080 00000000 		.word	ADC_1_Config
 2050 0084 0E4E0040 		.word	1073761806
 2051 0088 08000000 		.word	ADC_1_gcor
 2052 008c 0C4E0040 		.word	1073761804
 2053              		.cfi_endproc
 2054              	.LFE20:
 2055              		.size	ADC_1_SelectConfiguration, .-ADC_1_SelectConfiguration
 2056              		.section	.text.ADC_1_GainCompensation,"ax",%progbits
 2057              		.align	2
 2058              		.thumb
 2059              		.thumb_func
 2060              		.type	ADC_1_GainCompensation, %function
 2061              	ADC_1_GainCompensation:
 2062              	.LFB21:
1602:Generated_Source\PSoC5/ADC_1.c **** 
1603:Generated_Source\PSoC5/ADC_1.c **** 
1604:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1605:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_GainCompensation
1606:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1607:Generated_Source\PSoC5/ADC_1.c **** *
1608:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1609:Generated_Source\PSoC5/ADC_1.c **** *  This API calculates the trim value and then store this to gcor structure.
1610:Generated_Source\PSoC5/ADC_1.c **** *
1611:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1612:Generated_Source\PSoC5/ADC_1.c **** *  inputRange:  input range for which trim value is to be calculated.
1613:Generated_Source\PSoC5/ADC_1.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1614:Generated_Source\PSoC5/ADC_1.c **** *                 conversion  mode.
1615:Generated_Source\PSoC5/ADC_1.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1616:Generated_Source\PSoC5/ADC_1.c ****                      conversion mode.
1617:Generated_Source\PSoC5/ADC_1.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1618:Generated_Source\PSoC5/ADC_1.c **** *  config:      Specifies the configuration number
1619:Generated_Source\PSoC5/ADC_1.c **** *               Valid range: 1..4
1620:Generated_Source\PSoC5/ADC_1.c **** *
1621:Generated_Source\PSoC5/ADC_1.c **** * Return:
1622:Generated_Source\PSoC5/ADC_1.c **** *  None
1623:Generated_Source\PSoC5/ADC_1.c **** *
1624:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1625:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1626:Generated_Source\PSoC5/ADC_1.c ****                               uint8 resolution, uint8 config) 
1627:Generated_Source\PSoC5/ADC_1.c **** {
 2063              		.loc 1 1627 0
 2064              		.cfi_startproc
 2065              		@ args = 4, pretend = 0, frame = 24
 2066              		@ frame_needed = 1, uses_anonymous_args = 0
 2067 0000 90B5     		push	{r4, r7, lr}
 2068              		.cfi_def_cfa_offset 12
 2069              		.cfi_offset 4, -12
 2070              		.cfi_offset 7, -8
 2071              		.cfi_offset 14, -4
 2072 0002 87B0     		sub	sp, sp, #28
 2073              		.cfi_def_cfa_offset 40
 2074 0004 00AF     		add	r7, sp, #0
 2075              		.cfi_def_cfa_register 7
 2076 0006 0446     		mov	r4, r0
 2077 0008 0846     		mov	r0, r1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 66


 2078 000a 1146     		mov	r1, r2
 2079 000c 1A46     		mov	r2, r3
 2080 000e 2346     		mov	r3, r4
 2081 0010 FB71     		strb	r3, [r7, #7]
 2082 0012 0346     		mov	r3, r0	@ movhi
 2083 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2084 0016 0B46     		mov	r3, r1	@ movhi
 2085 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2086 001a 1346     		mov	r3, r2
 2087 001c BB71     		strb	r3, [r7, #6]
1628:Generated_Source\PSoC5/ADC_1.c ****     int8 flash;
1629:Generated_Source\PSoC5/ADC_1.c **** 	int32 normalised;
1630:Generated_Source\PSoC5/ADC_1.c **** 	uint16 gcorValue;
1631:Generated_Source\PSoC5/ADC_1.c ****     uint32 gcorTmp;
1632:Generated_Source\PSoC5/ADC_1.c **** 
1633:Generated_Source\PSoC5/ADC_1.c ****     if((config > 0u) && (config <= ADC_1_DEFAULT_NUM_CONFIGS))
 2088              		.loc 1 1633 0
 2089 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2090 0022 002B     		cmp	r3, #0
 2091 0024 00F08B80 		beq	.L111
 2092              		.loc 1 1633 0 is_stmt 0 discriminator 1
 2093 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2094 002c 012B     		cmp	r3, #1
 2095 002e 00F28680 		bhi	.L111
1634:Generated_Source\PSoC5/ADC_1.c ****     {
1635:Generated_Source\PSoC5/ADC_1.c ****         switch(inputRange)
 2096              		.loc 1 1635 0 is_stmt 1
 2097 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2098 0034 013B     		subs	r3, r3, #1
 2099 0036 092B     		cmp	r3, #9
 2100 0038 4AD8     		bhi	.L112
 2101 003a 01A2     		adr	r2, .L114
 2102 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2103              		.p2align 2
 2104              	.L114:
 2105 0040 69000000 		.word	.L113+1
 2106 0044 D1000000 		.word	.L112+1
 2107 0048 D1000000 		.word	.L112+1
 2108 004c 69000000 		.word	.L113+1
 2109 0050 D1000000 		.word	.L112+1
 2110 0054 D1000000 		.word	.L112+1
 2111 0058 83000000 		.word	.L115+1
 2112 005c 9D000000 		.word	.L116+1
 2113 0060 D1000000 		.word	.L112+1
 2114 0064 B7000000 		.word	.L117+1
 2115              		.p2align 1
 2116              	.L113:
1636:Generated_Source\PSoC5/ADC_1.c ****         {
1637:Generated_Source\PSoC5/ADC_1.c ****             case ADC_1_IR_VNEG_VREF_DIFF:
1638:Generated_Source\PSoC5/ADC_1.c ****             case ADC_1_IR_VSSA_TO_2VREF:
1639:Generated_Source\PSoC5/ADC_1.c ****                 /* Normalize the flash Value */
1640:Generated_Source\PSoC5/ADC_1.c ****                 if(resolution > 15u)
 2117              		.loc 1 1640 0
 2118 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2119 006a 0F2B     		cmp	r3, #15
 2120 006c 04D9     		bls	.L118
1641:Generated_Source\PSoC5/ADC_1.c ****                 {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 67


1642:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_DIFF_16_20;
 2121              		.loc 1 1642 0
 2122 006e 374B     		ldr	r3, .L130
 2123 0070 1B78     		ldrb	r3, [r3]
 2124 0072 DBB2     		uxtb	r3, r3
 2125 0074 FB75     		strb	r3, [r7, #23]
1643:Generated_Source\PSoC5/ADC_1.c ****                 }
1644:Generated_Source\PSoC5/ADC_1.c ****                 else
1645:Generated_Source\PSoC5/ADC_1.c ****                 {
1646:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_DIFF_8_15;
1647:Generated_Source\PSoC5/ADC_1.c ****                 }
1648:Generated_Source\PSoC5/ADC_1.c ****                 break;
 2126              		.loc 1 1648 0
 2127 0076 2EE0     		b	.L120
 2128              	.L118:
1646:Generated_Source\PSoC5/ADC_1.c ****                 }
 2129              		.loc 1 1646 0
 2130 0078 354B     		ldr	r3, .L130+4
 2131 007a 1B78     		ldrb	r3, [r3]
 2132 007c DBB2     		uxtb	r3, r3
 2133 007e FB75     		strb	r3, [r7, #23]
 2134              		.loc 1 1648 0
 2135 0080 29E0     		b	.L120
 2136              	.L115:
1649:Generated_Source\PSoC5/ADC_1.c **** 
1650:Generated_Source\PSoC5/ADC_1.c ****             case ADC_1_IR_VNEG_VREF_2_DIFF:
1651:Generated_Source\PSoC5/ADC_1.c ****                 /* Normalize the flash Value */
1652:Generated_Source\PSoC5/ADC_1.c ****                 if(resolution > 15u)
 2137              		.loc 1 1652 0
 2138 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2139 0084 0F2B     		cmp	r3, #15
 2140 0086 04D9     		bls	.L121
1653:Generated_Source\PSoC5/ADC_1.c ****                 {
1654:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_2_DIFF_16_20;
 2141              		.loc 1 1654 0
 2142 0088 324B     		ldr	r3, .L130+8
 2143 008a 1B78     		ldrb	r3, [r3]
 2144 008c DBB2     		uxtb	r3, r3
 2145 008e FB75     		strb	r3, [r7, #23]
1655:Generated_Source\PSoC5/ADC_1.c ****                 }
1656:Generated_Source\PSoC5/ADC_1.c ****                 else
1657:Generated_Source\PSoC5/ADC_1.c ****                 {
1658:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_2_DIFF_8_15;
1659:Generated_Source\PSoC5/ADC_1.c ****                 }
1660:Generated_Source\PSoC5/ADC_1.c ****                 break;
 2146              		.loc 1 1660 0
 2147 0090 21E0     		b	.L120
 2148              	.L121:
1658:Generated_Source\PSoC5/ADC_1.c ****                 }
 2149              		.loc 1 1658 0
 2150 0092 314B     		ldr	r3, .L130+12
 2151 0094 1B78     		ldrb	r3, [r3]
 2152 0096 DBB2     		uxtb	r3, r3
 2153 0098 FB75     		strb	r3, [r7, #23]
 2154              		.loc 1 1660 0
 2155 009a 1CE0     		b	.L120
 2156              	.L116:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 68


1661:Generated_Source\PSoC5/ADC_1.c **** 
1662:Generated_Source\PSoC5/ADC_1.c ****             case ADC_1_IR_VNEG_VREF_4_DIFF:
1663:Generated_Source\PSoC5/ADC_1.c ****                 /* Normalize the flash Value */
1664:Generated_Source\PSoC5/ADC_1.c ****                 if(resolution > 15u)
 2157              		.loc 1 1664 0
 2158 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2159 009e 0F2B     		cmp	r3, #15
 2160 00a0 04D9     		bls	.L123
1665:Generated_Source\PSoC5/ADC_1.c ****                 {
1666:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_4_DIFF_16_20;
 2161              		.loc 1 1666 0
 2162 00a2 2E4B     		ldr	r3, .L130+16
 2163 00a4 1B78     		ldrb	r3, [r3]
 2164 00a6 DBB2     		uxtb	r3, r3
 2165 00a8 FB75     		strb	r3, [r7, #23]
1667:Generated_Source\PSoC5/ADC_1.c ****                 }
1668:Generated_Source\PSoC5/ADC_1.c ****                 else
1669:Generated_Source\PSoC5/ADC_1.c ****                 {
1670:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_4_DIFF_8_15;
1671:Generated_Source\PSoC5/ADC_1.c ****                 }
1672:Generated_Source\PSoC5/ADC_1.c ****                 break;
 2166              		.loc 1 1672 0
 2167 00aa 14E0     		b	.L120
 2168              	.L123:
1670:Generated_Source\PSoC5/ADC_1.c ****                 }
 2169              		.loc 1 1670 0
 2170 00ac 2C4B     		ldr	r3, .L130+20
 2171 00ae 1B78     		ldrb	r3, [r3]
 2172 00b0 DBB2     		uxtb	r3, r3
 2173 00b2 FB75     		strb	r3, [r7, #23]
 2174              		.loc 1 1672 0
 2175 00b4 0FE0     		b	.L120
 2176              	.L117:
1673:Generated_Source\PSoC5/ADC_1.c **** 
1674:Generated_Source\PSoC5/ADC_1.c ****             case ADC_1_IR_VNEG_VREF_16_DIFF:
1675:Generated_Source\PSoC5/ADC_1.c ****                 /* Normalize the flash Value */
1676:Generated_Source\PSoC5/ADC_1.c ****                 if(resolution > 15u)
 2177              		.loc 1 1676 0
 2178 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2179 00b8 0F2B     		cmp	r3, #15
 2180 00ba 04D9     		bls	.L125
1677:Generated_Source\PSoC5/ADC_1.c ****                 {
1678:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_16_DIFF_16_20;
 2181              		.loc 1 1678 0
 2182 00bc 294B     		ldr	r3, .L130+24
 2183 00be 1B78     		ldrb	r3, [r3]
 2184 00c0 DBB2     		uxtb	r3, r3
 2185 00c2 FB75     		strb	r3, [r7, #23]
1679:Generated_Source\PSoC5/ADC_1.c ****                 }
1680:Generated_Source\PSoC5/ADC_1.c ****                 else
1681:Generated_Source\PSoC5/ADC_1.c ****                 {
1682:Generated_Source\PSoC5/ADC_1.c ****                     flash = ADC_1_DEC_TRIM_VREF_16_DIFF_8_15;
1683:Generated_Source\PSoC5/ADC_1.c ****                 }
1684:Generated_Source\PSoC5/ADC_1.c ****                 break;
 2186              		.loc 1 1684 0
 2187 00c4 07E0     		b	.L120
 2188              	.L125:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 69


1682:Generated_Source\PSoC5/ADC_1.c ****                 }
 2189              		.loc 1 1682 0
 2190 00c6 284B     		ldr	r3, .L130+28
 2191 00c8 1B78     		ldrb	r3, [r3]
 2192 00ca DBB2     		uxtb	r3, r3
 2193 00cc FB75     		strb	r3, [r7, #23]
 2194              		.loc 1 1684 0
 2195 00ce 02E0     		b	.L120
 2196              	.L112:
1685:Generated_Source\PSoC5/ADC_1.c **** 
1686:Generated_Source\PSoC5/ADC_1.c ****             default:
1687:Generated_Source\PSoC5/ADC_1.c ****                 flash = 0;
 2197              		.loc 1 1687 0
 2198 00d0 0023     		movs	r3, #0
 2199 00d2 FB75     		strb	r3, [r7, #23]
1688:Generated_Source\PSoC5/ADC_1.c ****                 break;
 2200              		.loc 1 1688 0
 2201 00d4 00BF     		nop
 2202              	.L120:
1689:Generated_Source\PSoC5/ADC_1.c ****         }
1690:Generated_Source\PSoC5/ADC_1.c **** 
1691:Generated_Source\PSoC5/ADC_1.c ****         /* Add two values */
1692:Generated_Source\PSoC5/ADC_1.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2203              		.loc 1 1692 0
 2204 00d6 BA88     		ldrh	r2, [r7, #4]
 2205 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2206 00dc 5B01     		lsls	r3, r3, #5
 2207 00de 1344     		add	r3, r3, r2
 2208 00e0 3B61     		str	r3, [r7, #16]
1693:Generated_Source\PSoC5/ADC_1.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2209              		.loc 1 1693 0
 2210 00e2 7B88     		ldrh	r3, [r7, #2]
 2211 00e4 3A69     		ldr	r2, [r7, #16]
 2212 00e6 02FB03F3 		mul	r3, r2, r3
 2213 00ea FB60     		str	r3, [r7, #12]
1694:Generated_Source\PSoC5/ADC_1.c ****         gcorValue = (uint16)(gcorTmp / ADC_1_IDEAL_GAIN_CONST);
 2214              		.loc 1 1694 0
 2215 00ec FB68     		ldr	r3, [r7, #12]
 2216 00ee DB0B     		lsrs	r3, r3, #15
 2217 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1695:Generated_Source\PSoC5/ADC_1.c **** 
1696:Generated_Source\PSoC5/ADC_1.c ****         if (resolution < (ADC_1_MAX_GVAL - 1u))
 2218              		.loc 1 1696 0
 2219 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2220 00f4 0D2B     		cmp	r3, #13
 2221 00f6 12D8     		bhi	.L127
1697:Generated_Source\PSoC5/ADC_1.c ****         {
1698:Generated_Source\PSoC5/ADC_1.c ****             gcorValue = (gcorValue >> (ADC_1_MAX_GVAL - (resolution + 1u)));
 2222              		.loc 1 1698 0
 2223 00f8 BA8A     		ldrh	r2, [r7, #20]
 2224 00fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2225 00fc C3F10E03 		rsb	r3, r3, #14
 2226 0100 42FA03F3 		asr	r3, r2, r3
 2227 0104 BB82     		strh	r3, [r7, #20]	@ movhi
1699:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_gcor[config - 1u].gval = (resolution + 1u);
 2228              		.loc 1 1699 0
 2229 0106 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 70


 2230 010a 013B     		subs	r3, r3, #1
 2231 010c BA79     		ldrb	r2, [r7, #6]
 2232 010e 0132     		adds	r2, r2, #1
 2233 0110 D1B2     		uxtb	r1, r2
 2234 0112 164A     		ldr	r2, .L130+32
 2235 0114 9B00     		lsls	r3, r3, #2
 2236 0116 1344     		add	r3, r3, r2
 2237 0118 0A46     		mov	r2, r1
 2238 011a 9A70     		strb	r2, [r3, #2]
 2239 011c 07E0     		b	.L128
 2240              	.L127:
1700:Generated_Source\PSoC5/ADC_1.c ****         }
1701:Generated_Source\PSoC5/ADC_1.c ****         else
1702:Generated_Source\PSoC5/ADC_1.c ****         {
1703:Generated_Source\PSoC5/ADC_1.c ****             /* Use all 16 bits */
1704:Generated_Source\PSoC5/ADC_1.c ****             ADC_1_gcor[config - 1u].gval = ADC_1_MAX_GVAL;
 2241              		.loc 1 1704 0
 2242 011e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2243 0122 013B     		subs	r3, r3, #1
 2244 0124 114A     		ldr	r2, .L130+32
 2245 0126 9B00     		lsls	r3, r3, #2
 2246 0128 1344     		add	r3, r3, r2
 2247 012a 0F22     		movs	r2, #15
 2248 012c 9A70     		strb	r2, [r3, #2]
 2249              	.L128:
1705:Generated_Source\PSoC5/ADC_1.c ****         }
1706:Generated_Source\PSoC5/ADC_1.c **** 
1707:Generated_Source\PSoC5/ADC_1.c ****         /* Save the gain correction register value */
1708:Generated_Source\PSoC5/ADC_1.c ****         ADC_1_gcor[config - 1u].gcor = gcorValue;
 2250              		.loc 1 1708 0
 2251 012e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2252 0132 013B     		subs	r3, r3, #1
 2253 0134 0D49     		ldr	r1, .L130+32
 2254 0136 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2255 0138 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2256 013c 02E0     		b	.L129
 2257              	.L111:
1709:Generated_Source\PSoC5/ADC_1.c ****     }
1710:Generated_Source\PSoC5/ADC_1.c ****     else
1711:Generated_Source\PSoC5/ADC_1.c ****     {
1712:Generated_Source\PSoC5/ADC_1.c ****         /* Halt CPU in debug mode if config is out of valid range */
1713:Generated_Source\PSoC5/ADC_1.c ****         CYASSERT(0u != 0u);
 2258              		.loc 1 1713 0 discriminator 1
 2259 013e 0020     		movs	r0, #0
 2260 0140 FFF7FEFF 		bl	CyHalt
 2261              	.L129:
1714:Generated_Source\PSoC5/ADC_1.c ****     }
1715:Generated_Source\PSoC5/ADC_1.c **** }
 2262              		.loc 1 1715 0
 2263 0144 00BF     		nop
 2264 0146 1C37     		adds	r7, r7, #28
 2265              		.cfi_def_cfa_offset 12
 2266 0148 BD46     		mov	sp, r7
 2267              		.cfi_def_cfa_register 13
 2268              		@ sp needed
 2269 014a 90BD     		pop	{r4, r7, pc}
 2270              	.L131:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 71


 2271              		.align	2
 2272              	.L130:
 2273 014c 18010049 		.word	1224737048
 2274 0150 1C010049 		.word	1224737052
 2275 0154 19010049 		.word	1224737049
 2276 0158 1D010049 		.word	1224737053
 2277 015c 1A010049 		.word	1224737050
 2278 0160 1E010049 		.word	1224737054
 2279 0164 1B010049 		.word	1224737051
 2280 0168 1F010049 		.word	1224737055
 2281 016c 08000000 		.word	ADC_1_gcor
 2282              		.cfi_endproc
 2283              	.LFE21:
 2284              		.size	ADC_1_GainCompensation, .-ADC_1_GainCompensation
 2285              		.section	.text.ADC_1_SetDSMRef0Reg,"ax",%progbits
 2286              		.align	2
 2287              		.thumb
 2288              		.thumb_func
 2289              		.type	ADC_1_SetDSMRef0Reg, %function
 2290              	ADC_1_SetDSMRef0Reg:
 2291              	.LFB22:
1716:Generated_Source\PSoC5/ADC_1.c **** 
1717:Generated_Source\PSoC5/ADC_1.c **** 
1718:Generated_Source\PSoC5/ADC_1.c **** /******************************************************************************
1719:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_SetDSMRef0Reg(uint8)
1720:Generated_Source\PSoC5/ADC_1.c **** ******************************************************************************
1721:Generated_Source\PSoC5/ADC_1.c **** *
1722:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1723:Generated_Source\PSoC5/ADC_1.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1724:Generated_Source\PSoC5/ADC_1.c **** *
1725:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1726:Generated_Source\PSoC5/ADC_1.c **** *  value:  Value to be written to DSM_REF0 register.
1727:Generated_Source\PSoC5/ADC_1.c **** *
1728:Generated_Source\PSoC5/ADC_1.c **** * Return:
1729:Generated_Source\PSoC5/ADC_1.c **** *  None
1730:Generated_Source\PSoC5/ADC_1.c **** *
1731:Generated_Source\PSoC5/ADC_1.c **** ******************************************************************************/
1732:Generated_Source\PSoC5/ADC_1.c **** static void ADC_1_SetDSMRef0Reg(uint8 value) 
1733:Generated_Source\PSoC5/ADC_1.c **** {
 2292              		.loc 1 1733 0
 2293              		.cfi_startproc
 2294              		@ args = 0, pretend = 0, frame = 16
 2295              		@ frame_needed = 1, uses_anonymous_args = 0
 2296 0000 80B5     		push	{r7, lr}
 2297              		.cfi_def_cfa_offset 8
 2298              		.cfi_offset 7, -8
 2299              		.cfi_offset 14, -4
 2300 0002 84B0     		sub	sp, sp, #16
 2301              		.cfi_def_cfa_offset 24
 2302 0004 00AF     		add	r7, sp, #0
 2303              		.cfi_def_cfa_register 7
 2304 0006 0346     		mov	r3, r0
 2305 0008 FB71     		strb	r3, [r7, #7]
1734:Generated_Source\PSoC5/ADC_1.c ****     uint8 enableInterrupts;
1735:Generated_Source\PSoC5/ADC_1.c ****     enableInterrupts = CyEnterCriticalSection();
 2306              		.loc 1 1735 0
 2307 000a FFF7FEFF 		bl	CyEnterCriticalSection
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 72


 2308 000e 0346     		mov	r3, r0
 2309 0010 FB73     		strb	r3, [r7, #15]
1736:Generated_Source\PSoC5/ADC_1.c **** 
1737:Generated_Source\PSoC5/ADC_1.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1738:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG |= (ADC_1_IGNORE_PRESA1 | ADC_1_IGNORE_PRESD1);
 2310              		.loc 1 1738 0
 2311 0012 174A     		ldr	r2, .L133
 2312 0014 164B     		ldr	r3, .L133
 2313 0016 1B78     		ldrb	r3, [r3]
 2314 0018 DBB2     		uxtb	r3, r3
 2315 001a 43F00303 		orr	r3, r3, #3
 2316 001e DBB2     		uxtb	r3, r3
 2317 0020 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG |= (ADC_1_IGNORE_PRESA2 | ADC_1_IGNORE_PRESD2);
 2318              		.loc 1 1739 0
 2319 0022 144A     		ldr	r2, .L133+4
 2320 0024 134B     		ldr	r3, .L133+4
 2321 0026 1B78     		ldrb	r3, [r3]
 2322 0028 DBB2     		uxtb	r3, r3
 2323 002a 43F00303 		orr	r3, r3, #3
 2324 002e DBB2     		uxtb	r3, r3
 2325 0030 1370     		strb	r3, [r2]
1740:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DSM_REF0_REG = value;
 2326              		.loc 1 1740 0
 2327 0032 114A     		ldr	r2, .L133+8
 2328 0034 FB79     		ldrb	r3, [r7, #7]
 2329 0036 1370     		strb	r3, [r2]
1741:Generated_Source\PSoC5/ADC_1.c **** 
1742:Generated_Source\PSoC5/ADC_1.c ****     /* Wait for 3 microseconds */
1743:Generated_Source\PSoC5/ADC_1.c ****     CyDelayUs(ADC_1_PRES_DELAY_TIME);
 2330              		.loc 1 1743 0
 2331 0038 0320     		movs	r0, #3
 2332 003a FFF7FEFF 		bl	CyDelayUs
1744:Generated_Source\PSoC5/ADC_1.c ****     /* Enable the press circuit */
1745:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR4_REG &= (uint8)~(ADC_1_IGNORE_PRESA1 | ADC_1_IGNORE_PRESD1);
 2333              		.loc 1 1745 0
 2334 003e 0C4A     		ldr	r2, .L133
 2335 0040 0B4B     		ldr	r3, .L133
 2336 0042 1B78     		ldrb	r3, [r3]
 2337 0044 DBB2     		uxtb	r3, r3
 2338 0046 23F00303 		bic	r3, r3, #3
 2339 004a DBB2     		uxtb	r3, r3
 2340 004c 1370     		strb	r3, [r2]
1746:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_RESET_CR5_REG &= (uint8)~(ADC_1_IGNORE_PRESA2 | ADC_1_IGNORE_PRESD2);
 2341              		.loc 1 1746 0
 2342 004e 094A     		ldr	r2, .L133+4
 2343 0050 084B     		ldr	r3, .L133+4
 2344 0052 1B78     		ldrb	r3, [r3]
 2345 0054 DBB2     		uxtb	r3, r3
 2346 0056 23F00303 		bic	r3, r3, #3
 2347 005a DBB2     		uxtb	r3, r3
 2348 005c 1370     		strb	r3, [r2]
1747:Generated_Source\PSoC5/ADC_1.c **** 
1748:Generated_Source\PSoC5/ADC_1.c ****     CyExitCriticalSection(enableInterrupts);
 2349              		.loc 1 1748 0
 2350 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2351 0060 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 73


 2352 0062 FFF7FEFF 		bl	CyExitCriticalSection
1749:Generated_Source\PSoC5/ADC_1.c **** }
 2353              		.loc 1 1749 0
 2354 0066 00BF     		nop
 2355 0068 1037     		adds	r7, r7, #16
 2356              		.cfi_def_cfa_offset 8
 2357 006a BD46     		mov	sp, r7
 2358              		.cfi_def_cfa_register 13
 2359              		@ sp needed
 2360 006c 80BD     		pop	{r7, pc}
 2361              	.L134:
 2362 006e 00BF     		.align	2
 2363              	.L133:
 2364 0070 F8460040 		.word	1073759992
 2365 0074 F9460040 		.word	1073759993
 2366 0078 92580040 		.word	1073764498
 2367              		.cfi_endproc
 2368              	.LFE22:
 2369              		.size	ADC_1_SetDSMRef0Reg, .-ADC_1_SetDSMRef0Reg
 2370              		.section	.text.ADC_1_Read8,"ax",%progbits
 2371              		.align	2
 2372              		.global	ADC_1_Read8
 2373              		.thumb
 2374              		.thumb_func
 2375              		.type	ADC_1_Read8, %function
 2376              	ADC_1_Read8:
 2377              	.LFB23:
1750:Generated_Source\PSoC5/ADC_1.c **** 
1751:Generated_Source\PSoC5/ADC_1.c **** 
1752:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1753:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Read8
1754:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1755:Generated_Source\PSoC5/ADC_1.c **** *
1756:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1757:Generated_Source\PSoC5/ADC_1.c **** *  This function simplifies getting results from the ADC when only a
1758:Generated_Source\PSoC5/ADC_1.c **** *  single reading is required. When called, it will start ADC
1759:Generated_Source\PSoC5/ADC_1.c **** *  conversions, wait for the conversion to be complete, stop ADC
1760:Generated_Source\PSoC5/ADC_1.c **** *  conversion and return the result. This is a blocking function and will
1761:Generated_Source\PSoC5/ADC_1.c **** *  not return until the result is ready.
1762:Generated_Source\PSoC5/ADC_1.c **** *
1763:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1764:Generated_Source\PSoC5/ADC_1.c **** *  None
1765:Generated_Source\PSoC5/ADC_1.c **** *
1766:Generated_Source\PSoC5/ADC_1.c **** * Return:
1767:Generated_Source\PSoC5/ADC_1.c **** *  int8:  ADC result.
1768:Generated_Source\PSoC5/ADC_1.c **** *
1769:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1770:Generated_Source\PSoC5/ADC_1.c **** int8 ADC_1_Read8(void) 
1771:Generated_Source\PSoC5/ADC_1.c **** {
 2378              		.loc 1 1771 0
 2379              		.cfi_startproc
 2380              		@ args = 0, pretend = 0, frame = 8
 2381              		@ frame_needed = 1, uses_anonymous_args = 0
 2382 0000 80B5     		push	{r7, lr}
 2383              		.cfi_def_cfa_offset 8
 2384              		.cfi_offset 7, -8
 2385              		.cfi_offset 14, -4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 74


 2386 0002 82B0     		sub	sp, sp, #8
 2387              		.cfi_def_cfa_offset 16
 2388 0004 00AF     		add	r7, sp, #0
 2389              		.cfi_def_cfa_register 7
1772:Generated_Source\PSoC5/ADC_1.c ****     int8 result;
1773:Generated_Source\PSoC5/ADC_1.c **** 
1774:Generated_Source\PSoC5/ADC_1.c ****     /* Clear pending conversion done status */
1775:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_SR_REG |= ADC_1_DEC_INTR_CLEAR;
 2390              		.loc 1 1775 0
 2391 0006 0C4A     		ldr	r2, .L137
 2392 0008 0B4B     		ldr	r3, .L137
 2393 000a 1B78     		ldrb	r3, [r3]
 2394 000c DBB2     		uxtb	r3, r3
 2395 000e 43F00403 		orr	r3, r3, #4
 2396 0012 DBB2     		uxtb	r3, r3
 2397 0014 1370     		strb	r3, [r2]
1776:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StartConvert();
 2398              		.loc 1 1776 0
 2399 0016 FFF7FEFF 		bl	ADC_1_StartConvert
1777:Generated_Source\PSoC5/ADC_1.c ****     (void)ADC_1_IsEndConversion(ADC_1_WAIT_FOR_RESULT);
 2400              		.loc 1 1777 0
 2401 001a 0020     		movs	r0, #0
 2402 001c FFF7FEFF 		bl	ADC_1_IsEndConversion
1778:Generated_Source\PSoC5/ADC_1.c ****      result = ADC_1_GetResult8();
 2403              		.loc 1 1778 0
 2404 0020 FFF7FEFF 		bl	ADC_1_GetResult8
 2405 0024 0346     		mov	r3, r0
 2406 0026 FB71     		strb	r3, [r7, #7]
1779:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StopConvert();
 2407              		.loc 1 1779 0
 2408 0028 FFF7FEFF 		bl	ADC_1_StopConvert
1780:Generated_Source\PSoC5/ADC_1.c ****     
1781:Generated_Source\PSoC5/ADC_1.c ****      return(result);
 2409              		.loc 1 1781 0
 2410 002c 97F90730 		ldrsb	r3, [r7, #7]
1782:Generated_Source\PSoC5/ADC_1.c **** }
 2411              		.loc 1 1782 0
 2412 0030 1846     		mov	r0, r3
 2413 0032 0837     		adds	r7, r7, #8
 2414              		.cfi_def_cfa_offset 8
 2415 0034 BD46     		mov	sp, r7
 2416              		.cfi_def_cfa_register 13
 2417              		@ sp needed
 2418 0036 80BD     		pop	{r7, pc}
 2419              	.L138:
 2420              		.align	2
 2421              	.L137:
 2422 0038 014E0040 		.word	1073761793
 2423              		.cfi_endproc
 2424              	.LFE23:
 2425              		.size	ADC_1_Read8, .-ADC_1_Read8
 2426              		.section	.text.ADC_1_Read16,"ax",%progbits
 2427              		.align	2
 2428              		.global	ADC_1_Read16
 2429              		.thumb
 2430              		.thumb_func
 2431              		.type	ADC_1_Read16, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 75


 2432              	ADC_1_Read16:
 2433              	.LFB24:
1783:Generated_Source\PSoC5/ADC_1.c **** 
1784:Generated_Source\PSoC5/ADC_1.c **** 
1785:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1786:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Read16
1787:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1788:Generated_Source\PSoC5/ADC_1.c **** *
1789:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1790:Generated_Source\PSoC5/ADC_1.c **** *  This function simplifies getting results from the ADC when only a
1791:Generated_Source\PSoC5/ADC_1.c **** *  single reading is required. When called, it will start ADC
1792:Generated_Source\PSoC5/ADC_1.c **** *  conversions, wait for the conversion to be complete, stop ADC
1793:Generated_Source\PSoC5/ADC_1.c **** *  conversion and return the result. This is a blocking function and will
1794:Generated_Source\PSoC5/ADC_1.c **** *  not return until the result is ready.
1795:Generated_Source\PSoC5/ADC_1.c **** *
1796:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1797:Generated_Source\PSoC5/ADC_1.c **** *   void
1798:Generated_Source\PSoC5/ADC_1.c **** *
1799:Generated_Source\PSoC5/ADC_1.c **** * Return:
1800:Generated_Source\PSoC5/ADC_1.c **** *  int16:  ADC result.
1801:Generated_Source\PSoC5/ADC_1.c **** *
1802:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1803:Generated_Source\PSoC5/ADC_1.c **** int16 ADC_1_Read16(void) 
1804:Generated_Source\PSoC5/ADC_1.c **** {
 2434              		.loc 1 1804 0
 2435              		.cfi_startproc
 2436              		@ args = 0, pretend = 0, frame = 8
 2437              		@ frame_needed = 1, uses_anonymous_args = 0
 2438 0000 80B5     		push	{r7, lr}
 2439              		.cfi_def_cfa_offset 8
 2440              		.cfi_offset 7, -8
 2441              		.cfi_offset 14, -4
 2442 0002 82B0     		sub	sp, sp, #8
 2443              		.cfi_def_cfa_offset 16
 2444 0004 00AF     		add	r7, sp, #0
 2445              		.cfi_def_cfa_register 7
1805:Generated_Source\PSoC5/ADC_1.c ****     int16 result;
1806:Generated_Source\PSoC5/ADC_1.c **** 
1807:Generated_Source\PSoC5/ADC_1.c ****     /* Clear pending conversion done status */
1808:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_SR_REG |= ADC_1_DEC_INTR_CLEAR;
 2446              		.loc 1 1808 0
 2447 0006 0C4A     		ldr	r2, .L141
 2448 0008 0B4B     		ldr	r3, .L141
 2449 000a 1B78     		ldrb	r3, [r3]
 2450 000c DBB2     		uxtb	r3, r3
 2451 000e 43F00403 		orr	r3, r3, #4
 2452 0012 DBB2     		uxtb	r3, r3
 2453 0014 1370     		strb	r3, [r2]
1809:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StartConvert();
 2454              		.loc 1 1809 0
 2455 0016 FFF7FEFF 		bl	ADC_1_StartConvert
1810:Generated_Source\PSoC5/ADC_1.c ****     (void)ADC_1_IsEndConversion(ADC_1_WAIT_FOR_RESULT);
 2456              		.loc 1 1810 0
 2457 001a 0020     		movs	r0, #0
 2458 001c FFF7FEFF 		bl	ADC_1_IsEndConversion
1811:Generated_Source\PSoC5/ADC_1.c ****      result = ADC_1_GetResult16();
 2459              		.loc 1 1811 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 76


 2460 0020 FFF7FEFF 		bl	ADC_1_GetResult16
 2461 0024 0346     		mov	r3, r0
 2462 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1812:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StopConvert();
 2463              		.loc 1 1812 0
 2464 0028 FFF7FEFF 		bl	ADC_1_StopConvert
1813:Generated_Source\PSoC5/ADC_1.c ****     
1814:Generated_Source\PSoC5/ADC_1.c ****      return(result);
 2465              		.loc 1 1814 0
 2466 002c B7F90630 		ldrsh	r3, [r7, #6]
1815:Generated_Source\PSoC5/ADC_1.c **** }
 2467              		.loc 1 1815 0
 2468 0030 1846     		mov	r0, r3
 2469 0032 0837     		adds	r7, r7, #8
 2470              		.cfi_def_cfa_offset 8
 2471 0034 BD46     		mov	sp, r7
 2472              		.cfi_def_cfa_register 13
 2473              		@ sp needed
 2474 0036 80BD     		pop	{r7, pc}
 2475              	.L142:
 2476              		.align	2
 2477              	.L141:
 2478 0038 014E0040 		.word	1073761793
 2479              		.cfi_endproc
 2480              	.LFE24:
 2481              		.size	ADC_1_Read16, .-ADC_1_Read16
 2482              		.section	.text.ADC_1_Read32,"ax",%progbits
 2483              		.align	2
 2484              		.global	ADC_1_Read32
 2485              		.thumb
 2486              		.thumb_func
 2487              		.type	ADC_1_Read32, %function
 2488              	ADC_1_Read32:
 2489              	.LFB25:
1816:Generated_Source\PSoC5/ADC_1.c **** 
1817:Generated_Source\PSoC5/ADC_1.c **** 
1818:Generated_Source\PSoC5/ADC_1.c **** /*******************************************************************************
1819:Generated_Source\PSoC5/ADC_1.c **** * Function Name: ADC_1_Read32
1820:Generated_Source\PSoC5/ADC_1.c **** ********************************************************************************
1821:Generated_Source\PSoC5/ADC_1.c **** *
1822:Generated_Source\PSoC5/ADC_1.c **** * Summary:
1823:Generated_Source\PSoC5/ADC_1.c **** *  This function simplifies getting results from the ADC when only a
1824:Generated_Source\PSoC5/ADC_1.c **** *  single reading is required. When called, it will start ADC
1825:Generated_Source\PSoC5/ADC_1.c **** *  conversions, wait for the conversion to be complete, stop ADC
1826:Generated_Source\PSoC5/ADC_1.c **** *  conversion and return the result. This is a blocking function and will
1827:Generated_Source\PSoC5/ADC_1.c **** *  not return until the result is ready.
1828:Generated_Source\PSoC5/ADC_1.c **** *
1829:Generated_Source\PSoC5/ADC_1.c **** * Parameters:
1830:Generated_Source\PSoC5/ADC_1.c **** *  None
1831:Generated_Source\PSoC5/ADC_1.c **** *
1832:Generated_Source\PSoC5/ADC_1.c **** * Return:
1833:Generated_Source\PSoC5/ADC_1.c **** *  int32: ADC result.
1834:Generated_Source\PSoC5/ADC_1.c **** *
1835:Generated_Source\PSoC5/ADC_1.c **** *******************************************************************************/
1836:Generated_Source\PSoC5/ADC_1.c **** int32 ADC_1_Read32(void) 
1837:Generated_Source\PSoC5/ADC_1.c **** {
 2490              		.loc 1 1837 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 77


 2491              		.cfi_startproc
 2492              		@ args = 0, pretend = 0, frame = 8
 2493              		@ frame_needed = 1, uses_anonymous_args = 0
 2494 0000 80B5     		push	{r7, lr}
 2495              		.cfi_def_cfa_offset 8
 2496              		.cfi_offset 7, -8
 2497              		.cfi_offset 14, -4
 2498 0002 82B0     		sub	sp, sp, #8
 2499              		.cfi_def_cfa_offset 16
 2500 0004 00AF     		add	r7, sp, #0
 2501              		.cfi_def_cfa_register 7
1838:Generated_Source\PSoC5/ADC_1.c ****     int32 result;
1839:Generated_Source\PSoC5/ADC_1.c ****     
1840:Generated_Source\PSoC5/ADC_1.c ****     /* Clear pending conversion done status */
1841:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_DEC_SR_REG |= ADC_1_DEC_INTR_CLEAR;
 2502              		.loc 1 1841 0
 2503 0006 0B4A     		ldr	r2, .L145
 2504 0008 0A4B     		ldr	r3, .L145
 2505 000a 1B78     		ldrb	r3, [r3]
 2506 000c DBB2     		uxtb	r3, r3
 2507 000e 43F00403 		orr	r3, r3, #4
 2508 0012 DBB2     		uxtb	r3, r3
 2509 0014 1370     		strb	r3, [r2]
1842:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StartConvert();
 2510              		.loc 1 1842 0
 2511 0016 FFF7FEFF 		bl	ADC_1_StartConvert
1843:Generated_Source\PSoC5/ADC_1.c ****     (void)ADC_1_IsEndConversion(ADC_1_WAIT_FOR_RESULT);
 2512              		.loc 1 1843 0
 2513 001a 0020     		movs	r0, #0
 2514 001c FFF7FEFF 		bl	ADC_1_IsEndConversion
1844:Generated_Source\PSoC5/ADC_1.c ****      result = ADC_1_GetResult32();
 2515              		.loc 1 1844 0
 2516 0020 FFF7FEFF 		bl	ADC_1_GetResult32
 2517 0024 7860     		str	r0, [r7, #4]
1845:Generated_Source\PSoC5/ADC_1.c ****     ADC_1_StopConvert();
 2518              		.loc 1 1845 0
 2519 0026 FFF7FEFF 		bl	ADC_1_StopConvert
1846:Generated_Source\PSoC5/ADC_1.c ****     
1847:Generated_Source\PSoC5/ADC_1.c ****      return(result);
 2520              		.loc 1 1847 0
 2521 002a 7B68     		ldr	r3, [r7, #4]
1848:Generated_Source\PSoC5/ADC_1.c **** }
 2522              		.loc 1 1848 0
 2523 002c 1846     		mov	r0, r3
 2524 002e 0837     		adds	r7, r7, #8
 2525              		.cfi_def_cfa_offset 8
 2526 0030 BD46     		mov	sp, r7
 2527              		.cfi_def_cfa_register 13
 2528              		@ sp needed
 2529 0032 80BD     		pop	{r7, pc}
 2530              	.L146:
 2531              		.align	2
 2532              	.L145:
 2533 0034 014E0040 		.word	1073761793
 2534              		.cfi_endproc
 2535              	.LFE25:
 2536              		.size	ADC_1_Read32, .-ADC_1_Read32
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 78


 2537              		.text
 2538              	.Letext0:
 2539              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2540              		.file 3 "Generated_Source\\PSoC5\\ADC_1.h"
 2541              		.section	.debug_info,"",%progbits
 2542              	.Ldebug_info0:
 2543 0000 28070000 		.4byte	0x728
 2544 0004 0400     		.2byte	0x4
 2545 0006 00000000 		.4byte	.Ldebug_abbrev0
 2546 000a 04       		.byte	0x4
 2547 000b 01       		.uleb128 0x1
 2548 000c 49000000 		.4byte	.LASF90
 2549 0010 0C       		.byte	0xc
 2550 0011 FA030000 		.4byte	.LASF91
 2551 0015 A7040000 		.4byte	.LASF92
 2552 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2553 001d 00000000 		.4byte	0
 2554 0021 00000000 		.4byte	.Ldebug_line0
 2555 0025 02       		.uleb128 0x2
 2556 0026 01       		.byte	0x1
 2557 0027 06       		.byte	0x6
 2558 0028 19010000 		.4byte	.LASF0
 2559 002c 02       		.uleb128 0x2
 2560 002d 01       		.byte	0x1
 2561 002e 08       		.byte	0x8
 2562 002f 52030000 		.4byte	.LASF1
 2563 0033 02       		.uleb128 0x2
 2564 0034 02       		.byte	0x2
 2565 0035 05       		.byte	0x5
 2566 0036 7F030000 		.4byte	.LASF2
 2567 003a 02       		.uleb128 0x2
 2568 003b 02       		.byte	0x2
 2569 003c 07       		.byte	0x7
 2570 003d 23020000 		.4byte	.LASF3
 2571 0041 02       		.uleb128 0x2
 2572 0042 04       		.byte	0x4
 2573 0043 05       		.byte	0x5
 2574 0044 58010000 		.4byte	.LASF4
 2575 0048 02       		.uleb128 0x2
 2576 0049 04       		.byte	0x4
 2577 004a 07       		.byte	0x7
 2578 004b 11020000 		.4byte	.LASF5
 2579 004f 02       		.uleb128 0x2
 2580 0050 08       		.byte	0x8
 2581 0051 05       		.byte	0x5
 2582 0052 0B010000 		.4byte	.LASF6
 2583 0056 02       		.uleb128 0x2
 2584 0057 08       		.byte	0x8
 2585 0058 07       		.byte	0x7
 2586 0059 D7000000 		.4byte	.LASF7
 2587 005d 03       		.uleb128 0x3
 2588 005e 04       		.byte	0x4
 2589 005f 05       		.byte	0x5
 2590 0060 696E7400 		.ascii	"int\000"
 2591 0064 02       		.uleb128 0x2
 2592 0065 04       		.byte	0x4
 2593 0066 07       		.byte	0x7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 79


 2594 0067 EA010000 		.4byte	.LASF8
 2595 006b 04       		.uleb128 0x4
 2596 006c 77010000 		.4byte	.LASF9
 2597 0070 02       		.byte	0x2
 2598 0071 E401     		.2byte	0x1e4
 2599 0073 2C000000 		.4byte	0x2c
 2600 0077 04       		.uleb128 0x4
 2601 0078 00000000 		.4byte	.LASF10
 2602 007c 02       		.byte	0x2
 2603 007d E501     		.2byte	0x1e5
 2604 007f 3A000000 		.4byte	0x3a
 2605 0083 04       		.uleb128 0x4
 2606 0084 98010000 		.4byte	.LASF11
 2607 0088 02       		.byte	0x2
 2608 0089 E601     		.2byte	0x1e6
 2609 008b 48000000 		.4byte	0x48
 2610 008f 04       		.uleb128 0x4
 2611 0090 49020000 		.4byte	.LASF12
 2612 0094 02       		.byte	0x2
 2613 0095 E701     		.2byte	0x1e7
 2614 0097 25000000 		.4byte	0x25
 2615 009b 04       		.uleb128 0x4
 2616 009c 0D050000 		.4byte	.LASF13
 2617 00a0 02       		.byte	0x2
 2618 00a1 E801     		.2byte	0x1e8
 2619 00a3 33000000 		.4byte	0x33
 2620 00a7 04       		.uleb128 0x4
 2621 00a8 30010000 		.4byte	.LASF14
 2622 00ac 02       		.byte	0x2
 2623 00ad E901     		.2byte	0x1e9
 2624 00af 41000000 		.4byte	0x41
 2625 00b3 04       		.uleb128 0x4
 2626 00b4 C0020000 		.4byte	.LASF15
 2627 00b8 02       		.byte	0x2
 2628 00b9 EA01     		.2byte	0x1ea
 2629 00bb BF000000 		.4byte	0xbf
 2630 00bf 02       		.uleb128 0x2
 2631 00c0 04       		.byte	0x4
 2632 00c1 04       		.byte	0x4
 2633 00c2 05030000 		.4byte	.LASF16
 2634 00c6 02       		.uleb128 0x2
 2635 00c7 08       		.byte	0x8
 2636 00c8 04       		.byte	0x4
 2637 00c9 7D010000 		.4byte	.LASF17
 2638 00cd 02       		.uleb128 0x2
 2639 00ce 01       		.byte	0x1
 2640 00cf 08       		.byte	0x8
 2641 00d0 D3030000 		.4byte	.LASF18
 2642 00d4 04       		.uleb128 0x4
 2643 00d5 35030000 		.4byte	.LASF19
 2644 00d9 02       		.byte	0x2
 2645 00da 8E02     		.2byte	0x28e
 2646 00dc E0000000 		.4byte	0xe0
 2647 00e0 05       		.uleb128 0x5
 2648 00e1 6B000000 		.4byte	0x6b
 2649 00e5 04       		.uleb128 0x4
 2650 00e6 71010000 		.4byte	.LASF20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 80


 2651 00ea 02       		.byte	0x2
 2652 00eb 8F02     		.2byte	0x28f
 2653 00ed F1000000 		.4byte	0xf1
 2654 00f1 05       		.uleb128 0x5
 2655 00f2 77000000 		.4byte	0x77
 2656 00f6 04       		.uleb128 0x4
 2657 00f7 AC020000 		.4byte	.LASF21
 2658 00fb 02       		.byte	0x2
 2659 00fc 9002     		.2byte	0x290
 2660 00fe 02010000 		.4byte	0x102
 2661 0102 05       		.uleb128 0x5
 2662 0103 83000000 		.4byte	0x83
 2663 0107 02       		.uleb128 0x2
 2664 0108 08       		.byte	0x8
 2665 0109 04       		.byte	0x4
 2666 010a D1020000 		.4byte	.LASF22
 2667 010e 02       		.uleb128 0x2
 2668 010f 04       		.byte	0x4
 2669 0110 07       		.byte	0x7
 2670 0111 C8020000 		.4byte	.LASF23
 2671 0115 06       		.uleb128 0x6
 2672 0116 04       		.byte	0x4
 2673 0117 03       		.byte	0x3
 2674 0118 2F       		.byte	0x2f
 2675 0119 36010000 		.4byte	0x136
 2676 011d 07       		.uleb128 0x7
 2677 011e 32000000 		.4byte	.LASF24
 2678 0122 03       		.byte	0x3
 2679 0123 31       		.byte	0x31
 2680 0124 77000000 		.4byte	0x77
 2681 0128 00       		.byte	0
 2682 0129 07       		.uleb128 0x7
 2683 012a F5030000 		.4byte	.LASF25
 2684 012e 03       		.byte	0x3
 2685 012f 32       		.byte	0x32
 2686 0130 6B000000 		.4byte	0x6b
 2687 0134 02       		.byte	0x2
 2688 0135 00       		.byte	0
 2689 0136 08       		.uleb128 0x8
 2690 0137 B5030000 		.4byte	.LASF26
 2691 013b 03       		.byte	0x3
 2692 013c 33       		.byte	0x33
 2693 013d 15010000 		.4byte	0x115
 2694 0141 09       		.uleb128 0x9
 2695 0142 EB020000 		.4byte	.LASF29
 2696 0146 01       		.byte	0x1
 2697 0147 5B       		.byte	0x5b
 2698 0148 00000000 		.4byte	.LFB0
 2699 014c 1C010000 		.4byte	.LFE0-.LFB0
 2700 0150 01       		.uleb128 0x1
 2701 0151 9C       		.byte	0x9c
 2702 0152 0A       		.uleb128 0xa
 2703 0153 EE000000 		.4byte	.LASF31
 2704 0157 01       		.byte	0x1
 2705 0158 BA       		.byte	0xba
 2706 0159 00000000 		.4byte	.LFB1
 2707 015d 58010000 		.4byte	.LFE1-.LFB1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 81


 2708 0161 01       		.uleb128 0x1
 2709 0162 9C       		.byte	0x9c
 2710 0163 84010000 		.4byte	0x184
 2711 0167 0B       		.uleb128 0xb
 2712 0168 EE030000 		.4byte	.LASF27
 2713 016c 01       		.byte	0x1
 2714 016d BC       		.byte	0xbc
 2715 016e 6B000000 		.4byte	0x6b
 2716 0172 02       		.uleb128 0x2
 2717 0173 91       		.byte	0x91
 2718 0174 76       		.sleb128 -10
 2719 0175 0B       		.uleb128 0xb
 2720 0176 64040000 		.4byte	.LASF28
 2721 017a 01       		.byte	0x1
 2722 017b BD       		.byte	0xbd
 2723 017c 6B000000 		.4byte	0x6b
 2724 0180 02       		.uleb128 0x2
 2725 0181 91       		.byte	0x91
 2726 0182 77       		.sleb128 -9
 2727 0183 00       		.byte	0
 2728 0184 0C       		.uleb128 0xc
 2729 0185 D0010000 		.4byte	.LASF30
 2730 0189 01       		.byte	0x1
 2731 018a 4E01     		.2byte	0x14e
 2732 018c 00000000 		.4byte	.LFB2
 2733 0190 30000000 		.4byte	.LFE2-.LFB2
 2734 0194 01       		.uleb128 0x1
 2735 0195 9C       		.byte	0x9c
 2736 0196 0D       		.uleb128 0xd
 2737 0197 25010000 		.4byte	.LASF32
 2738 019b 01       		.byte	0x1
 2739 019c 6F01     		.2byte	0x16f
 2740 019e 00000000 		.4byte	.LFB3
 2741 01a2 7C010000 		.4byte	.LFE3-.LFB3
 2742 01a6 01       		.uleb128 0x1
 2743 01a7 9C       		.byte	0x9c
 2744 01a8 BC010000 		.4byte	0x1bc
 2745 01ac 0E       		.uleb128 0xe
 2746 01ad 64040000 		.4byte	.LASF28
 2747 01b1 01       		.byte	0x1
 2748 01b2 7101     		.2byte	0x171
 2749 01b4 6B000000 		.4byte	0x6b
 2750 01b8 02       		.uleb128 0x2
 2751 01b9 91       		.byte	0x91
 2752 01ba 77       		.sleb128 -9
 2753 01bb 00       		.byte	0
 2754 01bc 0F       		.uleb128 0xf
 2755 01bd 3F040000 		.4byte	.LASF33
 2756 01c1 01       		.byte	0x1
 2757 01c2 B201     		.2byte	0x1b2
 2758 01c4 00000000 		.4byte	.LFB4
 2759 01c8 3C000000 		.4byte	.LFE4-.LFB4
 2760 01cc 01       		.uleb128 0x1
 2761 01cd 9C       		.byte	0x9c
 2762 01ce F1010000 		.4byte	0x1f1
 2763 01d2 10       		.uleb128 0x10
 2764 01d3 00030000 		.4byte	.LASF36
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 82


 2765 01d7 01       		.byte	0x1
 2766 01d8 B201     		.2byte	0x1b2
 2767 01da 6B000000 		.4byte	0x6b
 2768 01de 02       		.uleb128 0x2
 2769 01df 91       		.byte	0x91
 2770 01e0 6F       		.sleb128 -17
 2771 01e1 0E       		.uleb128 0xe
 2772 01e2 27050000 		.4byte	.LASF34
 2773 01e6 01       		.byte	0x1
 2774 01e7 B401     		.2byte	0x1b4
 2775 01e9 6B000000 		.4byte	0x6b
 2776 01ed 02       		.uleb128 0x2
 2777 01ee 91       		.byte	0x91
 2778 01ef 77       		.sleb128 -9
 2779 01f0 00       		.byte	0
 2780 01f1 0F       		.uleb128 0xf
 2781 01f2 36020000 		.4byte	.LASF35
 2782 01f6 01       		.byte	0x1
 2783 01f7 D601     		.2byte	0x1d6
 2784 01f9 00000000 		.4byte	.LFB5
 2785 01fd 38000000 		.4byte	.LFE5-.LFB5
 2786 0201 01       		.uleb128 0x1
 2787 0202 9C       		.byte	0x9c
 2788 0203 26020000 		.4byte	0x226
 2789 0207 10       		.uleb128 0x10
 2790 0208 F6020000 		.4byte	.LASF37
 2791 020c 01       		.byte	0x1
 2792 020d D601     		.2byte	0x1d6
 2793 020f 6B000000 		.4byte	0x6b
 2794 0213 02       		.uleb128 0x2
 2795 0214 91       		.byte	0x91
 2796 0215 6F       		.sleb128 -17
 2797 0216 0E       		.uleb128 0xe
 2798 0217 27050000 		.4byte	.LASF34
 2799 021b 01       		.byte	0x1
 2800 021c D801     		.2byte	0x1d8
 2801 021e 6B000000 		.4byte	0x6b
 2802 0222 02       		.uleb128 0x2
 2803 0223 91       		.byte	0x91
 2804 0224 77       		.sleb128 -9
 2805 0225 00       		.byte	0
 2806 0226 11       		.uleb128 0x11
 2807 0227 B2020000 		.4byte	.LASF41
 2808 022b 01       		.byte	0x1
 2809 022c FE01     		.2byte	0x1fe
 2810 022e 6B000000 		.4byte	0x6b
 2811 0232 00000000 		.4byte	.LFB6
 2812 0236 AC000000 		.4byte	.LFE6-.LFB6
 2813 023a 01       		.uleb128 0x1
 2814 023b 9C       		.byte	0x9c
 2815 023c 7D020000 		.4byte	0x27d
 2816 0240 10       		.uleb128 0x10
 2817 0241 8A040000 		.4byte	.LASF38
 2818 0245 01       		.byte	0x1
 2819 0246 FE01     		.2byte	0x1fe
 2820 0248 B3000000 		.4byte	0xb3
 2821 024c 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 83


 2822 024d 91       		.byte	0x91
 2823 024e 6C       		.sleb128 -20
 2824 024f 0E       		.uleb128 0xe
 2825 0250 27050000 		.4byte	.LASF34
 2826 0254 01       		.byte	0x1
 2827 0255 0002     		.2byte	0x200
 2828 0257 77000000 		.4byte	0x77
 2829 025b 02       		.uleb128 0x2
 2830 025c 91       		.byte	0x91
 2831 025d 74       		.sleb128 -12
 2832 025e 0E       		.uleb128 0xe
 2833 025f 83040000 		.4byte	.LASF39
 2834 0263 01       		.byte	0x1
 2835 0264 0102     		.2byte	0x201
 2836 0266 6B000000 		.4byte	0x6b
 2837 026a 02       		.uleb128 0x2
 2838 026b 91       		.byte	0x91
 2839 026c 77       		.sleb128 -9
 2840 026d 0E       		.uleb128 0xe
 2841 026e 36040000 		.4byte	.LASF40
 2842 0272 01       		.byte	0x1
 2843 0273 0202     		.2byte	0x202
 2844 0275 B3000000 		.4byte	0xb3
 2845 0279 02       		.uleb128 0x2
 2846 027a 91       		.byte	0x91
 2847 027b 70       		.sleb128 -16
 2848 027c 00       		.byte	0
 2849 027d 12       		.uleb128 0x12
 2850 027e DF030000 		.4byte	.LASF42
 2851 0282 01       		.byte	0x1
 2852 0283 2D02     		.2byte	0x22d
 2853 0285 77000000 		.4byte	0x77
 2854 0289 00000000 		.4byte	.LFB7
 2855 028d 3C000000 		.4byte	.LFE7-.LFB7
 2856 0291 01       		.uleb128 0x1
 2857 0292 9C       		.byte	0x9c
 2858 0293 B6020000 		.4byte	0x2b6
 2859 0297 0E       		.uleb128 0xe
 2860 0298 D8030000 		.4byte	.LASF43
 2861 029c 01       		.byte	0x1
 2862 029d 2F02     		.2byte	0x22f
 2863 029f 6B000000 		.4byte	0x6b
 2864 02a3 02       		.uleb128 0x2
 2865 02a4 91       		.byte	0x91
 2866 02a5 75       		.sleb128 -11
 2867 02a6 0E       		.uleb128 0xe
 2868 02a7 64020000 		.4byte	.LASF44
 2869 02ab 01       		.byte	0x1
 2870 02ac 3002     		.2byte	0x230
 2871 02ae 77000000 		.4byte	0x77
 2872 02b2 02       		.uleb128 0x2
 2873 02b3 91       		.byte	0x91
 2874 02b4 76       		.sleb128 -10
 2875 02b5 00       		.byte	0
 2876 02b6 13       		.uleb128 0x13
 2877 02b7 FE010000 		.4byte	.LASF45
 2878 02bb 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 84


 2879 02bc 4F02     		.2byte	0x24f
 2880 02be 00000000 		.4byte	.LFB8
 2881 02c2 20000000 		.4byte	.LFE8-.LFB8
 2882 02c6 01       		.uleb128 0x1
 2883 02c7 9C       		.byte	0x9c
 2884 02c8 13       		.uleb128 0x13
 2885 02c9 37000000 		.4byte	.LASF46
 2886 02cd 01       		.byte	0x1
 2887 02ce 6602     		.2byte	0x266
 2888 02d0 00000000 		.4byte	.LFB9
 2889 02d4 20000000 		.4byte	.LFE9-.LFB9
 2890 02d8 01       		.uleb128 0x1
 2891 02d9 9C       		.byte	0x9c
 2892 02da 12       		.uleb128 0x12
 2893 02db 1F030000 		.4byte	.LASF47
 2894 02df 01       		.byte	0x1
 2895 02e0 8902     		.2byte	0x289
 2896 02e2 6B000000 		.4byte	0x6b
 2897 02e6 00000000 		.4byte	.LFB10
 2898 02ea 4C000000 		.4byte	.LFE10-.LFB10
 2899 02ee 01       		.uleb128 0x1
 2900 02ef 9C       		.byte	0x9c
 2901 02f0 13030000 		.4byte	0x313
 2902 02f4 10       		.uleb128 0x10
 2903 02f5 E2010000 		.4byte	.LASF48
 2904 02f9 01       		.byte	0x1
 2905 02fa 8902     		.2byte	0x289
 2906 02fc 6B000000 		.4byte	0x6b
 2907 0300 02       		.uleb128 0x2
 2908 0301 91       		.byte	0x91
 2909 0302 6F       		.sleb128 -17
 2910 0303 0E       		.uleb128 0xe
 2911 0304 83040000 		.4byte	.LASF39
 2912 0308 01       		.byte	0x1
 2913 0309 8B02     		.2byte	0x28b
 2914 030b 6B000000 		.4byte	0x6b
 2915 030f 02       		.uleb128 0x2
 2916 0310 91       		.byte	0x91
 2917 0311 77       		.sleb128 -9
 2918 0312 00       		.byte	0
 2919 0313 12       		.uleb128 0x12
 2920 0314 47010000 		.4byte	.LASF49
 2921 0318 01       		.byte	0x1
 2922 0319 B802     		.2byte	0x2b8
 2923 031b 8F000000 		.4byte	0x8f
 2924 031f 00000000 		.4byte	.LFB11
 2925 0323 68000000 		.4byte	.LFE11-.LFB11
 2926 0327 01       		.uleb128 0x1
 2927 0328 9C       		.byte	0x9c
 2928 0329 4C030000 		.4byte	0x34c
 2929 032d 0E       		.uleb128 0xe
 2930 032e 2E050000 		.4byte	.LASF50
 2931 0332 01       		.byte	0x1
 2932 0333 BA02     		.2byte	0x2ba
 2933 0335 8F000000 		.4byte	0x8f
 2934 0339 02       		.uleb128 0x2
 2935 033a 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 85


 2936 033b 76       		.sleb128 -10
 2937 033c 0E       		.uleb128 0xe
 2938 033d F6020000 		.4byte	.LASF37
 2939 0341 01       		.byte	0x1
 2940 0342 BB02     		.2byte	0x2bb
 2941 0344 6B000000 		.4byte	0x6b
 2942 0348 02       		.uleb128 0x2
 2943 0349 91       		.byte	0x91
 2944 034a 77       		.sleb128 -9
 2945 034b 00       		.byte	0
 2946 034c 12       		.uleb128 0x12
 2947 034d 60030000 		.4byte	.LASF51
 2948 0351 01       		.byte	0x1
 2949 0352 EE02     		.2byte	0x2ee
 2950 0354 9B000000 		.4byte	0x9b
 2951 0358 00000000 		.4byte	.LFB12
 2952 035c 7C000000 		.4byte	.LFE12-.LFB12
 2953 0360 01       		.uleb128 0x1
 2954 0361 9C       		.byte	0x9c
 2955 0362 85030000 		.4byte	0x385
 2956 0366 0E       		.uleb128 0xe
 2957 0367 2E050000 		.4byte	.LASF50
 2958 036b 01       		.byte	0x1
 2959 036c F002     		.2byte	0x2f0
 2960 036e 77000000 		.4byte	0x77
 2961 0372 02       		.uleb128 0x2
 2962 0373 91       		.byte	0x91
 2963 0374 76       		.sleb128 -10
 2964 0375 0E       		.uleb128 0xe
 2965 0376 F6020000 		.4byte	.LASF37
 2966 037a 01       		.byte	0x1
 2967 037b F102     		.2byte	0x2f1
 2968 037d 6B000000 		.4byte	0x6b
 2969 0381 02       		.uleb128 0x2
 2970 0382 91       		.byte	0x91
 2971 0383 75       		.sleb128 -11
 2972 0384 00       		.byte	0
 2973 0385 12       		.uleb128 0x12
 2974 0386 95040000 		.4byte	.LASF52
 2975 038a 01       		.byte	0x1
 2976 038b 2A03     		.2byte	0x32a
 2977 038d A7000000 		.4byte	0xa7
 2978 0391 00000000 		.4byte	.LFB13
 2979 0395 A8000000 		.4byte	.LFE13-.LFB13
 2980 0399 01       		.uleb128 0x1
 2981 039a 9C       		.byte	0x9c
 2982 039b BE030000 		.4byte	0x3be
 2983 039f 0E       		.uleb128 0xe
 2984 03a0 2E050000 		.4byte	.LASF50
 2985 03a4 01       		.byte	0x1
 2986 03a5 2C03     		.2byte	0x32c
 2987 03a7 83000000 		.4byte	0x83
 2988 03ab 02       		.uleb128 0x2
 2989 03ac 91       		.byte	0x91
 2990 03ad 74       		.sleb128 -12
 2991 03ae 0E       		.uleb128 0xe
 2992 03af F6020000 		.4byte	.LASF37
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 86


 2993 03b3 01       		.byte	0x1
 2994 03b4 2D03     		.2byte	0x32d
 2995 03b6 6B000000 		.4byte	0x6b
 2996 03ba 02       		.uleb128 0x2
 2997 03bb 91       		.byte	0x91
 2998 03bc 73       		.sleb128 -13
 2999 03bd 00       		.byte	0
 3000 03be 0F       		.uleb128 0xf
 3001 03bf 61010000 		.4byte	.LASF53
 3002 03c3 01       		.byte	0x1
 3003 03c4 8703     		.2byte	0x387
 3004 03c6 00000000 		.4byte	.LFB14
 3005 03ca 1C000000 		.4byte	.LFE14-.LFB14
 3006 03ce 01       		.uleb128 0x1
 3007 03cf 9C       		.byte	0x9c
 3008 03d0 E4030000 		.4byte	0x3e4
 3009 03d4 10       		.uleb128 0x10
 3010 03d5 53040000 		.4byte	.LASF54
 3011 03d9 01       		.byte	0x1
 3012 03da 8703     		.2byte	0x387
 3013 03dc A7000000 		.4byte	0xa7
 3014 03e0 02       		.uleb128 0x2
 3015 03e1 91       		.byte	0x91
 3016 03e2 74       		.sleb128 -12
 3017 03e3 00       		.byte	0
 3018 03e4 0F       		.uleb128 0xf
 3019 03e5 DD020000 		.4byte	.LASF55
 3020 03e9 01       		.byte	0x1
 3021 03ea AA03     		.2byte	0x3aa
 3022 03ec 00000000 		.4byte	.LFB15
 3023 03f0 1C000000 		.4byte	.LFE15-.LFB15
 3024 03f4 01       		.uleb128 0x1
 3025 03f5 9C       		.byte	0x9c
 3026 03f6 0A040000 		.4byte	0x40a
 3027 03fa 10       		.uleb128 0x10
 3028 03fb 07000000 		.4byte	.LASF56
 3029 03ff 01       		.byte	0x1
 3030 0400 AA03     		.2byte	0x3aa
 3031 0402 A7000000 		.4byte	0xa7
 3032 0406 02       		.uleb128 0x2
 3033 0407 91       		.byte	0x91
 3034 0408 74       		.sleb128 -12
 3035 0409 00       		.byte	0
 3036 040a 12       		.uleb128 0x12
 3037 040b 4E020000 		.4byte	.LASF57
 3038 040f 01       		.byte	0x1
 3039 0410 C503     		.2byte	0x3c5
 3040 0412 9B000000 		.4byte	0x9b
 3041 0416 00000000 		.4byte	.LFB16
 3042 041a 3C000000 		.4byte	.LFE16-.LFB16
 3043 041e 01       		.uleb128 0x1
 3044 041f 9C       		.byte	0x9c
 3045 0420 43040000 		.4byte	0x443
 3046 0424 10       		.uleb128 0x10
 3047 0425 5A040000 		.4byte	.LASF58
 3048 0429 01       		.byte	0x1
 3049 042a C503     		.2byte	0x3c5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 87


 3050 042c A7000000 		.4byte	0xa7
 3051 0430 02       		.uleb128 0x2
 3052 0431 91       		.byte	0x91
 3053 0432 6C       		.sleb128 -20
 3054 0433 0E       		.uleb128 0xe
 3055 0434 9F020000 		.4byte	.LASF59
 3056 0438 01       		.byte	0x1
 3057 0439 C803     		.2byte	0x3c8
 3058 043b 9B000000 		.4byte	0x9b
 3059 043f 02       		.uleb128 0x2
 3060 0440 91       		.byte	0x91
 3061 0441 76       		.sleb128 -10
 3062 0442 00       		.byte	0
 3063 0443 11       		.uleb128 0x11
 3064 0444 19040000 		.4byte	.LASF60
 3065 0448 01       		.byte	0x1
 3066 0449 0204     		.2byte	0x402
 3067 044b B3000000 		.4byte	0xb3
 3068 044f 00000000 		.4byte	.LFB17
 3069 0453 44000000 		.4byte	.LFE17-.LFB17
 3070 0457 01       		.uleb128 0x1
 3071 0458 9C       		.byte	0x9c
 3072 0459 7C040000 		.4byte	0x47c
 3073 045d 10       		.uleb128 0x10
 3074 045e 5A040000 		.4byte	.LASF58
 3075 0462 01       		.byte	0x1
 3076 0463 0204     		.2byte	0x402
 3077 0465 A7000000 		.4byte	0xa7
 3078 0469 02       		.uleb128 0x2
 3079 046a 91       		.byte	0x91
 3080 046b 64       		.sleb128 -28
 3081 046c 0E       		.uleb128 0xe
 3082 046d 84010000 		.4byte	.LASF61
 3083 0471 01       		.byte	0x1
 3084 0472 0504     		.2byte	0x405
 3085 0474 B3000000 		.4byte	0xb3
 3086 0478 02       		.uleb128 0x2
 3087 0479 91       		.byte	0x91
 3088 047a 6C       		.sleb128 -20
 3089 047b 00       		.byte	0
 3090 047c 12       		.uleb128 0x12
 3091 047d 35050000 		.4byte	.LASF62
 3092 0481 01       		.byte	0x1
 3093 0482 4404     		.2byte	0x444
 3094 0484 A7000000 		.4byte	0xa7
 3095 0488 00000000 		.4byte	.LFB18
 3096 048c B4000000 		.4byte	.LFE18-.LFB18
 3097 0490 01       		.uleb128 0x1
 3098 0491 9C       		.byte	0x9c
 3099 0492 E2040000 		.4byte	0x4e2
 3100 0496 10       		.uleb128 0x10
 3101 0497 5A040000 		.4byte	.LASF58
 3102 049b 01       		.byte	0x1
 3103 049c 4404     		.2byte	0x444
 3104 049e A7000000 		.4byte	0xa7
 3105 04a2 02       		.uleb128 0x2
 3106 04a3 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 88


 3107 04a4 64       		.sleb128 -28
 3108 04a5 0E       		.uleb128 0xe
 3109 04a6 F7010000 		.4byte	.LASF63
 3110 04aa 01       		.byte	0x1
 3111 04ab 4704     		.2byte	0x447
 3112 04ad A7000000 		.4byte	0xa7
 3113 04b1 02       		.uleb128 0x2
 3114 04b2 91       		.byte	0x91
 3115 04b3 68       		.sleb128 -24
 3116 04b4 0E       		.uleb128 0xe
 3117 04b5 C7030000 		.4byte	.LASF64
 3118 04b9 01       		.byte	0x1
 3119 04ba 4804     		.2byte	0x448
 3120 04bc A7000000 		.4byte	0xa7
 3121 04c0 02       		.uleb128 0x2
 3122 04c1 91       		.byte	0x91
 3123 04c2 74       		.sleb128 -12
 3124 04c3 0E       		.uleb128 0xe
 3125 04c4 CD030000 		.4byte	.LASF65
 3126 04c8 01       		.byte	0x1
 3127 04c9 4904     		.2byte	0x449
 3128 04cb A7000000 		.4byte	0xa7
 3129 04cf 02       		.uleb128 0x2
 3130 04d0 91       		.byte	0x91
 3131 04d1 70       		.sleb128 -16
 3132 04d2 0E       		.uleb128 0xe
 3133 04d3 AA030000 		.4byte	.LASF66
 3134 04d7 01       		.byte	0x1
 3135 04d8 4A04     		.2byte	0x44a
 3136 04da 6B000000 		.4byte	0x6b
 3137 04de 02       		.uleb128 0x2
 3138 04df 91       		.byte	0x91
 3139 04e0 6F       		.sleb128 -17
 3140 04e1 00       		.byte	0
 3141 04e2 14       		.uleb128 0x14
 3142 04e3 36010000 		.4byte	.LASF69
 3143 04e7 01       		.byte	0x1
 3144 04e8 DF04     		.2byte	0x4df
 3145 04ea 00000000 		.4byte	.LFB19
 3146 04ee 64010000 		.4byte	.LFE19-.LFB19
 3147 04f2 01       		.uleb128 0x1
 3148 04f3 9C       		.byte	0x9c
 3149 04f4 08050000 		.4byte	0x508
 3150 04f8 10       		.uleb128 0x10
 3151 04f9 EE030000 		.4byte	.LASF27
 3152 04fd 01       		.byte	0x1
 3153 04fe DF04     		.2byte	0x4df
 3154 0500 6B000000 		.4byte	0x6b
 3155 0504 02       		.uleb128 0x2
 3156 0505 91       		.byte	0x91
 3157 0506 77       		.sleb128 -9
 3158 0507 00       		.byte	0
 3159 0508 0D       		.uleb128 0xd
 3160 0509 85020000 		.4byte	.LASF67
 3161 050d 01       		.byte	0x1
 3162 050e 1806     		.2byte	0x618
 3163 0510 00000000 		.4byte	.LFB20
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 89


 3164 0514 90000000 		.4byte	.LFE20-.LFB20
 3165 0518 01       		.uleb128 0x1
 3166 0519 9C       		.byte	0x9c
 3167 051a 3D050000 		.4byte	0x53d
 3168 051e 10       		.uleb128 0x10
 3169 051f EE030000 		.4byte	.LASF27
 3170 0523 01       		.byte	0x1
 3171 0524 1806     		.2byte	0x618
 3172 0526 6B000000 		.4byte	0x6b
 3173 052a 02       		.uleb128 0x2
 3174 052b 91       		.byte	0x91
 3175 052c 77       		.sleb128 -9
 3176 052d 10       		.uleb128 0x10
 3177 052e 2E040000 		.4byte	.LASF68
 3178 0532 01       		.byte	0x1
 3179 0533 1806     		.2byte	0x618
 3180 0535 6B000000 		.4byte	0x6b
 3181 0539 02       		.uleb128 0x2
 3182 053a 91       		.byte	0x91
 3183 053b 76       		.sleb128 -10
 3184 053c 00       		.byte	0
 3185 053d 14       		.uleb128 0x14
 3186 053e 6E020000 		.4byte	.LASF70
 3187 0542 01       		.byte	0x1
 3188 0543 5906     		.2byte	0x659
 3189 0545 00000000 		.4byte	.LFB21
 3190 0549 70010000 		.4byte	.LFE21-.LFB21
 3191 054d 01       		.uleb128 0x1
 3192 054e 9C       		.byte	0x9c
 3193 054f DB050000 		.4byte	0x5db
 3194 0553 10       		.uleb128 0x10
 3195 0554 0F000000 		.4byte	.LASF71
 3196 0558 01       		.byte	0x1
 3197 0559 5906     		.2byte	0x659
 3198 055b 6B000000 		.4byte	0x6b
 3199 055f 02       		.uleb128 0x2
 3200 0560 91       		.byte	0x91
 3201 0561 5F       		.sleb128 -33
 3202 0562 10       		.uleb128 0x10
 3203 0563 3A030000 		.4byte	.LASF72
 3204 0567 01       		.byte	0x1
 3205 0568 5906     		.2byte	0x659
 3206 056a 77000000 		.4byte	0x77
 3207 056e 02       		.uleb128 0x2
 3208 056f 91       		.byte	0x91
 3209 0570 5C       		.sleb128 -36
 3210 0571 10       		.uleb128 0x10
 3211 0572 FB000000 		.4byte	.LASF73
 3212 0576 01       		.byte	0x1
 3213 0577 5906     		.2byte	0x659
 3214 0579 77000000 		.4byte	0x77
 3215 057d 02       		.uleb128 0x2
 3216 057e 91       		.byte	0x91
 3217 057f 5A       		.sleb128 -38
 3218 0580 10       		.uleb128 0x10
 3219 0581 AA030000 		.4byte	.LASF66
 3220 0585 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 90


 3221 0586 5A06     		.2byte	0x65a
 3222 0588 6B000000 		.4byte	0x6b
 3223 058c 02       		.uleb128 0x2
 3224 058d 91       		.byte	0x91
 3225 058e 5E       		.sleb128 -34
 3226 058f 10       		.uleb128 0x10
 3227 0590 EE030000 		.4byte	.LASF27
 3228 0594 01       		.byte	0x1
 3229 0595 5A06     		.2byte	0x65a
 3230 0597 6B000000 		.4byte	0x6b
 3231 059b 02       		.uleb128 0x2
 3232 059c 91       		.byte	0x91
 3233 059d 00       		.sleb128 0
 3234 059e 0E       		.uleb128 0xe
 3235 059f A6020000 		.4byte	.LASF74
 3236 05a3 01       		.byte	0x1
 3237 05a4 5C06     		.2byte	0x65c
 3238 05a6 8F000000 		.4byte	0x8f
 3239 05aa 02       		.uleb128 0x2
 3240 05ab 91       		.byte	0x91
 3241 05ac 6F       		.sleb128 -17
 3242 05ad 0E       		.uleb128 0xe
 3243 05ae 47030000 		.4byte	.LASF75
 3244 05b2 01       		.byte	0x1
 3245 05b3 5D06     		.2byte	0x65d
 3246 05b5 A7000000 		.4byte	0xa7
 3247 05b9 02       		.uleb128 0x2
 3248 05ba 91       		.byte	0x91
 3249 05bb 68       		.sleb128 -24
 3250 05bc 0E       		.uleb128 0xe
 3251 05bd 64020000 		.4byte	.LASF44
 3252 05c1 01       		.byte	0x1
 3253 05c2 5E06     		.2byte	0x65e
 3254 05c4 77000000 		.4byte	0x77
 3255 05c8 02       		.uleb128 0x2
 3256 05c9 91       		.byte	0x91
 3257 05ca 6C       		.sleb128 -20
 3258 05cb 0E       		.uleb128 0xe
 3259 05cc 89030000 		.4byte	.LASF76
 3260 05d0 01       		.byte	0x1
 3261 05d1 5F06     		.2byte	0x65f
 3262 05d3 83000000 		.4byte	0x83
 3263 05d7 02       		.uleb128 0x2
 3264 05d8 91       		.byte	0x91
 3265 05d9 64       		.sleb128 -28
 3266 05da 00       		.byte	0
 3267 05db 14       		.uleb128 0x14
 3268 05dc 13050000 		.4byte	.LASF77
 3269 05e0 01       		.byte	0x1
 3270 05e1 C406     		.2byte	0x6c4
 3271 05e3 00000000 		.4byte	.LFB22
 3272 05e7 7C000000 		.4byte	.LFE22-.LFB22
 3273 05eb 01       		.uleb128 0x1
 3274 05ec 9C       		.byte	0x9c
 3275 05ed 10060000 		.4byte	0x610
 3276 05f1 10       		.uleb128 0x10
 3277 05f2 DC010000 		.4byte	.LASF78
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 91


 3278 05f6 01       		.byte	0x1
 3279 05f7 C406     		.2byte	0x6c4
 3280 05f9 6B000000 		.4byte	0x6b
 3281 05fd 02       		.uleb128 0x2
 3282 05fe 91       		.byte	0x91
 3283 05ff 6F       		.sleb128 -17
 3284 0600 0E       		.uleb128 0xe
 3285 0601 64040000 		.4byte	.LASF28
 3286 0605 01       		.byte	0x1
 3287 0606 C606     		.2byte	0x6c6
 3288 0608 6B000000 		.4byte	0x6b
 3289 060c 02       		.uleb128 0x2
 3290 060d 91       		.byte	0x91
 3291 060e 77       		.sleb128 -9
 3292 060f 00       		.byte	0
 3293 0610 11       		.uleb128 0x11
 3294 0611 9E030000 		.4byte	.LASF79
 3295 0615 01       		.byte	0x1
 3296 0616 EA06     		.2byte	0x6ea
 3297 0618 8F000000 		.4byte	0x8f
 3298 061c 00000000 		.4byte	.LFB23
 3299 0620 3C000000 		.4byte	.LFE23-.LFB23
 3300 0624 01       		.uleb128 0x1
 3301 0625 9C       		.byte	0x9c
 3302 0626 3A060000 		.4byte	0x63a
 3303 062a 0E       		.uleb128 0xe
 3304 062b 2E050000 		.4byte	.LASF50
 3305 062f 01       		.byte	0x1
 3306 0630 EC06     		.2byte	0x6ec
 3307 0632 8F000000 		.4byte	0x8f
 3308 0636 02       		.uleb128 0x2
 3309 0637 91       		.byte	0x91
 3310 0638 77       		.sleb128 -9
 3311 0639 00       		.byte	0
 3312 063a 11       		.uleb128 0x11
 3313 063b 1A000000 		.4byte	.LASF80
 3314 063f 01       		.byte	0x1
 3315 0640 0B07     		.2byte	0x70b
 3316 0642 9B000000 		.4byte	0x9b
 3317 0646 00000000 		.4byte	.LFB24
 3318 064a 3C000000 		.4byte	.LFE24-.LFB24
 3319 064e 01       		.uleb128 0x1
 3320 064f 9C       		.byte	0x9c
 3321 0650 64060000 		.4byte	0x664
 3322 0654 0E       		.uleb128 0xe
 3323 0655 2E050000 		.4byte	.LASF50
 3324 0659 01       		.byte	0x1
 3325 065a 0D07     		.2byte	0x70d
 3326 065c 9B000000 		.4byte	0x9b
 3327 0660 02       		.uleb128 0x2
 3328 0661 91       		.byte	0x91
 3329 0662 76       		.sleb128 -10
 3330 0663 00       		.byte	0
 3331 0664 11       		.uleb128 0x11
 3332 0665 AE010000 		.4byte	.LASF81
 3333 0669 01       		.byte	0x1
 3334 066a 2C07     		.2byte	0x72c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 92


 3335 066c A7000000 		.4byte	0xa7
 3336 0670 00000000 		.4byte	.LFB25
 3337 0674 38000000 		.4byte	.LFE25-.LFB25
 3338 0678 01       		.uleb128 0x1
 3339 0679 9C       		.byte	0x9c
 3340 067a 8E060000 		.4byte	0x68e
 3341 067e 0E       		.uleb128 0xe
 3342 067f 2E050000 		.4byte	.LASF50
 3343 0683 01       		.byte	0x1
 3344 0684 2E07     		.2byte	0x72e
 3345 0686 A7000000 		.4byte	0xa7
 3346 068a 02       		.uleb128 0x2
 3347 068b 91       		.byte	0x91
 3348 068c 74       		.sleb128 -12
 3349 068d 00       		.byte	0
 3350 068e 15       		.uleb128 0x15
 3351 068f 36010000 		.4byte	0x136
 3352 0693 9E060000 		.4byte	0x69e
 3353 0697 16       		.uleb128 0x16
 3354 0698 0E010000 		.4byte	0x10e
 3355 069c 00       		.byte	0
 3356 069d 00       		.byte	0
 3357 069e 0B       		.uleb128 0xb
 3358 069f 27000000 		.4byte	.LASF82
 3359 06a3 01       		.byte	0x1
 3360 06a4 3D       		.byte	0x3d
 3361 06a5 8E060000 		.4byte	0x68e
 3362 06a9 05       		.uleb128 0x5
 3363 06aa 03       		.byte	0x3
 3364 06ab 08000000 		.4byte	ADC_1_gcor
 3365 06af 17       		.uleb128 0x17
 3366 06b0 8A010000 		.4byte	.LASF83
 3367 06b4 01       		.byte	0x1
 3368 06b5 2C       		.byte	0x2c
 3369 06b6 6B000000 		.4byte	0x6b
 3370 06ba 05       		.uleb128 0x5
 3371 06bb 03       		.byte	0x3
 3372 06bc 00000000 		.4byte	ADC_1_initVar
 3373 06c0 17       		.uleb128 0x17
 3374 06c1 9F010000 		.4byte	.LASF84
 3375 06c5 01       		.byte	0x1
 3376 06c6 24       		.byte	0x24
 3377 06c7 E0000000 		.4byte	0xe0
 3378 06cb 05       		.uleb128 0x5
 3379 06cc 03       		.byte	0x3
 3380 06cd 00000000 		.4byte	ADC_1_convDone
 3381 06d1 17       		.uleb128 0x17
 3382 06d2 BB010000 		.4byte	.LASF85
 3383 06d6 01       		.byte	0x1
 3384 06d7 29       		.byte	0x29
 3385 06d8 E0000000 		.4byte	0xe0
 3386 06dc 05       		.uleb128 0x5
 3387 06dd 03       		.byte	0x3
 3388 06de 00000000 		.4byte	ADC_1_stopConversion
 3389 06e2 17       		.uleb128 0x17
 3390 06e3 75040000 		.4byte	.LASF86
 3391 06e7 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 93


 3392 06e8 2F       		.byte	0x2f
 3393 06e9 E0000000 		.4byte	0xe0
 3394 06ed 05       		.uleb128 0x5
 3395 06ee 03       		.byte	0x3
 3396 06ef 00000000 		.4byte	ADC_1_started
 3397 06f3 17       		.uleb128 0x17
 3398 06f4 72030000 		.4byte	.LASF87
 3399 06f8 01       		.byte	0x1
 3400 06f9 32       		.byte	0x32
 3401 06fa E0000000 		.4byte	0xe0
 3402 06fe 05       		.uleb128 0x5
 3403 06ff 03       		.byte	0x3
 3404 0700 00000000 		.4byte	ADC_1_Config
 3405 0704 17       		.uleb128 0x17
 3406 0705 91030000 		.4byte	.LASF88
 3407 0709 01       		.byte	0x1
 3408 070a 34       		.byte	0x34
 3409 070b 15070000 		.4byte	0x715
 3410 070f 05       		.uleb128 0x5
 3411 0710 03       		.byte	0x3
 3412 0711 00000000 		.4byte	ADC_1_Offset
 3413 0715 05       		.uleb128 0x5
 3414 0716 A7000000 		.4byte	0xa7
 3415 071a 17       		.uleb128 0x17
 3416 071b 0B030000 		.4byte	.LASF89
 3417 071f 01       		.byte	0x1
 3418 0720 35       		.byte	0x35
 3419 0721 15070000 		.4byte	0x715
 3420 0725 05       		.uleb128 0x5
 3421 0726 03       		.byte	0x3
 3422 0727 00000000 		.4byte	ADC_1_CountsPerVolt
 3423 072b 00       		.byte	0
 3424              		.section	.debug_abbrev,"",%progbits
 3425              	.Ldebug_abbrev0:
 3426 0000 01       		.uleb128 0x1
 3427 0001 11       		.uleb128 0x11
 3428 0002 01       		.byte	0x1
 3429 0003 25       		.uleb128 0x25
 3430 0004 0E       		.uleb128 0xe
 3431 0005 13       		.uleb128 0x13
 3432 0006 0B       		.uleb128 0xb
 3433 0007 03       		.uleb128 0x3
 3434 0008 0E       		.uleb128 0xe
 3435 0009 1B       		.uleb128 0x1b
 3436 000a 0E       		.uleb128 0xe
 3437 000b 55       		.uleb128 0x55
 3438 000c 17       		.uleb128 0x17
 3439 000d 11       		.uleb128 0x11
 3440 000e 01       		.uleb128 0x1
 3441 000f 10       		.uleb128 0x10
 3442 0010 17       		.uleb128 0x17
 3443 0011 00       		.byte	0
 3444 0012 00       		.byte	0
 3445 0013 02       		.uleb128 0x2
 3446 0014 24       		.uleb128 0x24
 3447 0015 00       		.byte	0
 3448 0016 0B       		.uleb128 0xb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 94


 3449 0017 0B       		.uleb128 0xb
 3450 0018 3E       		.uleb128 0x3e
 3451 0019 0B       		.uleb128 0xb
 3452 001a 03       		.uleb128 0x3
 3453 001b 0E       		.uleb128 0xe
 3454 001c 00       		.byte	0
 3455 001d 00       		.byte	0
 3456 001e 03       		.uleb128 0x3
 3457 001f 24       		.uleb128 0x24
 3458 0020 00       		.byte	0
 3459 0021 0B       		.uleb128 0xb
 3460 0022 0B       		.uleb128 0xb
 3461 0023 3E       		.uleb128 0x3e
 3462 0024 0B       		.uleb128 0xb
 3463 0025 03       		.uleb128 0x3
 3464 0026 08       		.uleb128 0x8
 3465 0027 00       		.byte	0
 3466 0028 00       		.byte	0
 3467 0029 04       		.uleb128 0x4
 3468 002a 16       		.uleb128 0x16
 3469 002b 00       		.byte	0
 3470 002c 03       		.uleb128 0x3
 3471 002d 0E       		.uleb128 0xe
 3472 002e 3A       		.uleb128 0x3a
 3473 002f 0B       		.uleb128 0xb
 3474 0030 3B       		.uleb128 0x3b
 3475 0031 05       		.uleb128 0x5
 3476 0032 49       		.uleb128 0x49
 3477 0033 13       		.uleb128 0x13
 3478 0034 00       		.byte	0
 3479 0035 00       		.byte	0
 3480 0036 05       		.uleb128 0x5
 3481 0037 35       		.uleb128 0x35
 3482 0038 00       		.byte	0
 3483 0039 49       		.uleb128 0x49
 3484 003a 13       		.uleb128 0x13
 3485 003b 00       		.byte	0
 3486 003c 00       		.byte	0
 3487 003d 06       		.uleb128 0x6
 3488 003e 13       		.uleb128 0x13
 3489 003f 01       		.byte	0x1
 3490 0040 0B       		.uleb128 0xb
 3491 0041 0B       		.uleb128 0xb
 3492 0042 3A       		.uleb128 0x3a
 3493 0043 0B       		.uleb128 0xb
 3494 0044 3B       		.uleb128 0x3b
 3495 0045 0B       		.uleb128 0xb
 3496 0046 01       		.uleb128 0x1
 3497 0047 13       		.uleb128 0x13
 3498 0048 00       		.byte	0
 3499 0049 00       		.byte	0
 3500 004a 07       		.uleb128 0x7
 3501 004b 0D       		.uleb128 0xd
 3502 004c 00       		.byte	0
 3503 004d 03       		.uleb128 0x3
 3504 004e 0E       		.uleb128 0xe
 3505 004f 3A       		.uleb128 0x3a
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 95


 3506 0050 0B       		.uleb128 0xb
 3507 0051 3B       		.uleb128 0x3b
 3508 0052 0B       		.uleb128 0xb
 3509 0053 49       		.uleb128 0x49
 3510 0054 13       		.uleb128 0x13
 3511 0055 38       		.uleb128 0x38
 3512 0056 0B       		.uleb128 0xb
 3513 0057 00       		.byte	0
 3514 0058 00       		.byte	0
 3515 0059 08       		.uleb128 0x8
 3516 005a 16       		.uleb128 0x16
 3517 005b 00       		.byte	0
 3518 005c 03       		.uleb128 0x3
 3519 005d 0E       		.uleb128 0xe
 3520 005e 3A       		.uleb128 0x3a
 3521 005f 0B       		.uleb128 0xb
 3522 0060 3B       		.uleb128 0x3b
 3523 0061 0B       		.uleb128 0xb
 3524 0062 49       		.uleb128 0x49
 3525 0063 13       		.uleb128 0x13
 3526 0064 00       		.byte	0
 3527 0065 00       		.byte	0
 3528 0066 09       		.uleb128 0x9
 3529 0067 2E       		.uleb128 0x2e
 3530 0068 00       		.byte	0
 3531 0069 3F       		.uleb128 0x3f
 3532 006a 19       		.uleb128 0x19
 3533 006b 03       		.uleb128 0x3
 3534 006c 0E       		.uleb128 0xe
 3535 006d 3A       		.uleb128 0x3a
 3536 006e 0B       		.uleb128 0xb
 3537 006f 3B       		.uleb128 0x3b
 3538 0070 0B       		.uleb128 0xb
 3539 0071 27       		.uleb128 0x27
 3540 0072 19       		.uleb128 0x19
 3541 0073 11       		.uleb128 0x11
 3542 0074 01       		.uleb128 0x1
 3543 0075 12       		.uleb128 0x12
 3544 0076 06       		.uleb128 0x6
 3545 0077 40       		.uleb128 0x40
 3546 0078 18       		.uleb128 0x18
 3547 0079 9642     		.uleb128 0x2116
 3548 007b 19       		.uleb128 0x19
 3549 007c 00       		.byte	0
 3550 007d 00       		.byte	0
 3551 007e 0A       		.uleb128 0xa
 3552 007f 2E       		.uleb128 0x2e
 3553 0080 01       		.byte	0x1
 3554 0081 3F       		.uleb128 0x3f
 3555 0082 19       		.uleb128 0x19
 3556 0083 03       		.uleb128 0x3
 3557 0084 0E       		.uleb128 0xe
 3558 0085 3A       		.uleb128 0x3a
 3559 0086 0B       		.uleb128 0xb
 3560 0087 3B       		.uleb128 0x3b
 3561 0088 0B       		.uleb128 0xb
 3562 0089 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 96


 3563 008a 19       		.uleb128 0x19
 3564 008b 11       		.uleb128 0x11
 3565 008c 01       		.uleb128 0x1
 3566 008d 12       		.uleb128 0x12
 3567 008e 06       		.uleb128 0x6
 3568 008f 40       		.uleb128 0x40
 3569 0090 18       		.uleb128 0x18
 3570 0091 9642     		.uleb128 0x2116
 3571 0093 19       		.uleb128 0x19
 3572 0094 01       		.uleb128 0x1
 3573 0095 13       		.uleb128 0x13
 3574 0096 00       		.byte	0
 3575 0097 00       		.byte	0
 3576 0098 0B       		.uleb128 0xb
 3577 0099 34       		.uleb128 0x34
 3578 009a 00       		.byte	0
 3579 009b 03       		.uleb128 0x3
 3580 009c 0E       		.uleb128 0xe
 3581 009d 3A       		.uleb128 0x3a
 3582 009e 0B       		.uleb128 0xb
 3583 009f 3B       		.uleb128 0x3b
 3584 00a0 0B       		.uleb128 0xb
 3585 00a1 49       		.uleb128 0x49
 3586 00a2 13       		.uleb128 0x13
 3587 00a3 02       		.uleb128 0x2
 3588 00a4 18       		.uleb128 0x18
 3589 00a5 00       		.byte	0
 3590 00a6 00       		.byte	0
 3591 00a7 0C       		.uleb128 0xc
 3592 00a8 2E       		.uleb128 0x2e
 3593 00a9 00       		.byte	0
 3594 00aa 3F       		.uleb128 0x3f
 3595 00ab 19       		.uleb128 0x19
 3596 00ac 03       		.uleb128 0x3
 3597 00ad 0E       		.uleb128 0xe
 3598 00ae 3A       		.uleb128 0x3a
 3599 00af 0B       		.uleb128 0xb
 3600 00b0 3B       		.uleb128 0x3b
 3601 00b1 05       		.uleb128 0x5
 3602 00b2 27       		.uleb128 0x27
 3603 00b3 19       		.uleb128 0x19
 3604 00b4 11       		.uleb128 0x11
 3605 00b5 01       		.uleb128 0x1
 3606 00b6 12       		.uleb128 0x12
 3607 00b7 06       		.uleb128 0x6
 3608 00b8 40       		.uleb128 0x40
 3609 00b9 18       		.uleb128 0x18
 3610 00ba 9642     		.uleb128 0x2116
 3611 00bc 19       		.uleb128 0x19
 3612 00bd 00       		.byte	0
 3613 00be 00       		.byte	0
 3614 00bf 0D       		.uleb128 0xd
 3615 00c0 2E       		.uleb128 0x2e
 3616 00c1 01       		.byte	0x1
 3617 00c2 3F       		.uleb128 0x3f
 3618 00c3 19       		.uleb128 0x19
 3619 00c4 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 97


 3620 00c5 0E       		.uleb128 0xe
 3621 00c6 3A       		.uleb128 0x3a
 3622 00c7 0B       		.uleb128 0xb
 3623 00c8 3B       		.uleb128 0x3b
 3624 00c9 05       		.uleb128 0x5
 3625 00ca 27       		.uleb128 0x27
 3626 00cb 19       		.uleb128 0x19
 3627 00cc 11       		.uleb128 0x11
 3628 00cd 01       		.uleb128 0x1
 3629 00ce 12       		.uleb128 0x12
 3630 00cf 06       		.uleb128 0x6
 3631 00d0 40       		.uleb128 0x40
 3632 00d1 18       		.uleb128 0x18
 3633 00d2 9642     		.uleb128 0x2116
 3634 00d4 19       		.uleb128 0x19
 3635 00d5 01       		.uleb128 0x1
 3636 00d6 13       		.uleb128 0x13
 3637 00d7 00       		.byte	0
 3638 00d8 00       		.byte	0
 3639 00d9 0E       		.uleb128 0xe
 3640 00da 34       		.uleb128 0x34
 3641 00db 00       		.byte	0
 3642 00dc 03       		.uleb128 0x3
 3643 00dd 0E       		.uleb128 0xe
 3644 00de 3A       		.uleb128 0x3a
 3645 00df 0B       		.uleb128 0xb
 3646 00e0 3B       		.uleb128 0x3b
 3647 00e1 05       		.uleb128 0x5
 3648 00e2 49       		.uleb128 0x49
 3649 00e3 13       		.uleb128 0x13
 3650 00e4 02       		.uleb128 0x2
 3651 00e5 18       		.uleb128 0x18
 3652 00e6 00       		.byte	0
 3653 00e7 00       		.byte	0
 3654 00e8 0F       		.uleb128 0xf
 3655 00e9 2E       		.uleb128 0x2e
 3656 00ea 01       		.byte	0x1
 3657 00eb 3F       		.uleb128 0x3f
 3658 00ec 19       		.uleb128 0x19
 3659 00ed 03       		.uleb128 0x3
 3660 00ee 0E       		.uleb128 0xe
 3661 00ef 3A       		.uleb128 0x3a
 3662 00f0 0B       		.uleb128 0xb
 3663 00f1 3B       		.uleb128 0x3b
 3664 00f2 05       		.uleb128 0x5
 3665 00f3 27       		.uleb128 0x27
 3666 00f4 19       		.uleb128 0x19
 3667 00f5 11       		.uleb128 0x11
 3668 00f6 01       		.uleb128 0x1
 3669 00f7 12       		.uleb128 0x12
 3670 00f8 06       		.uleb128 0x6
 3671 00f9 40       		.uleb128 0x40
 3672 00fa 18       		.uleb128 0x18
 3673 00fb 9742     		.uleb128 0x2117
 3674 00fd 19       		.uleb128 0x19
 3675 00fe 01       		.uleb128 0x1
 3676 00ff 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 98


 3677 0100 00       		.byte	0
 3678 0101 00       		.byte	0
 3679 0102 10       		.uleb128 0x10
 3680 0103 05       		.uleb128 0x5
 3681 0104 00       		.byte	0
 3682 0105 03       		.uleb128 0x3
 3683 0106 0E       		.uleb128 0xe
 3684 0107 3A       		.uleb128 0x3a
 3685 0108 0B       		.uleb128 0xb
 3686 0109 3B       		.uleb128 0x3b
 3687 010a 05       		.uleb128 0x5
 3688 010b 49       		.uleb128 0x49
 3689 010c 13       		.uleb128 0x13
 3690 010d 02       		.uleb128 0x2
 3691 010e 18       		.uleb128 0x18
 3692 010f 00       		.byte	0
 3693 0110 00       		.byte	0
 3694 0111 11       		.uleb128 0x11
 3695 0112 2E       		.uleb128 0x2e
 3696 0113 01       		.byte	0x1
 3697 0114 3F       		.uleb128 0x3f
 3698 0115 19       		.uleb128 0x19
 3699 0116 03       		.uleb128 0x3
 3700 0117 0E       		.uleb128 0xe
 3701 0118 3A       		.uleb128 0x3a
 3702 0119 0B       		.uleb128 0xb
 3703 011a 3B       		.uleb128 0x3b
 3704 011b 05       		.uleb128 0x5
 3705 011c 27       		.uleb128 0x27
 3706 011d 19       		.uleb128 0x19
 3707 011e 49       		.uleb128 0x49
 3708 011f 13       		.uleb128 0x13
 3709 0120 11       		.uleb128 0x11
 3710 0121 01       		.uleb128 0x1
 3711 0122 12       		.uleb128 0x12
 3712 0123 06       		.uleb128 0x6
 3713 0124 40       		.uleb128 0x40
 3714 0125 18       		.uleb128 0x18
 3715 0126 9642     		.uleb128 0x2116
 3716 0128 19       		.uleb128 0x19
 3717 0129 01       		.uleb128 0x1
 3718 012a 13       		.uleb128 0x13
 3719 012b 00       		.byte	0
 3720 012c 00       		.byte	0
 3721 012d 12       		.uleb128 0x12
 3722 012e 2E       		.uleb128 0x2e
 3723 012f 01       		.byte	0x1
 3724 0130 3F       		.uleb128 0x3f
 3725 0131 19       		.uleb128 0x19
 3726 0132 03       		.uleb128 0x3
 3727 0133 0E       		.uleb128 0xe
 3728 0134 3A       		.uleb128 0x3a
 3729 0135 0B       		.uleb128 0xb
 3730 0136 3B       		.uleb128 0x3b
 3731 0137 05       		.uleb128 0x5
 3732 0138 27       		.uleb128 0x27
 3733 0139 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 99


 3734 013a 49       		.uleb128 0x49
 3735 013b 13       		.uleb128 0x13
 3736 013c 11       		.uleb128 0x11
 3737 013d 01       		.uleb128 0x1
 3738 013e 12       		.uleb128 0x12
 3739 013f 06       		.uleb128 0x6
 3740 0140 40       		.uleb128 0x40
 3741 0141 18       		.uleb128 0x18
 3742 0142 9742     		.uleb128 0x2117
 3743 0144 19       		.uleb128 0x19
 3744 0145 01       		.uleb128 0x1
 3745 0146 13       		.uleb128 0x13
 3746 0147 00       		.byte	0
 3747 0148 00       		.byte	0
 3748 0149 13       		.uleb128 0x13
 3749 014a 2E       		.uleb128 0x2e
 3750 014b 00       		.byte	0
 3751 014c 3F       		.uleb128 0x3f
 3752 014d 19       		.uleb128 0x19
 3753 014e 03       		.uleb128 0x3
 3754 014f 0E       		.uleb128 0xe
 3755 0150 3A       		.uleb128 0x3a
 3756 0151 0B       		.uleb128 0xb
 3757 0152 3B       		.uleb128 0x3b
 3758 0153 05       		.uleb128 0x5
 3759 0154 27       		.uleb128 0x27
 3760 0155 19       		.uleb128 0x19
 3761 0156 11       		.uleb128 0x11
 3762 0157 01       		.uleb128 0x1
 3763 0158 12       		.uleb128 0x12
 3764 0159 06       		.uleb128 0x6
 3765 015a 40       		.uleb128 0x40
 3766 015b 18       		.uleb128 0x18
 3767 015c 9742     		.uleb128 0x2117
 3768 015e 19       		.uleb128 0x19
 3769 015f 00       		.byte	0
 3770 0160 00       		.byte	0
 3771 0161 14       		.uleb128 0x14
 3772 0162 2E       		.uleb128 0x2e
 3773 0163 01       		.byte	0x1
 3774 0164 03       		.uleb128 0x3
 3775 0165 0E       		.uleb128 0xe
 3776 0166 3A       		.uleb128 0x3a
 3777 0167 0B       		.uleb128 0xb
 3778 0168 3B       		.uleb128 0x3b
 3779 0169 05       		.uleb128 0x5
 3780 016a 27       		.uleb128 0x27
 3781 016b 19       		.uleb128 0x19
 3782 016c 11       		.uleb128 0x11
 3783 016d 01       		.uleb128 0x1
 3784 016e 12       		.uleb128 0x12
 3785 016f 06       		.uleb128 0x6
 3786 0170 40       		.uleb128 0x40
 3787 0171 18       		.uleb128 0x18
 3788 0172 9642     		.uleb128 0x2116
 3789 0174 19       		.uleb128 0x19
 3790 0175 01       		.uleb128 0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 100


 3791 0176 13       		.uleb128 0x13
 3792 0177 00       		.byte	0
 3793 0178 00       		.byte	0
 3794 0179 15       		.uleb128 0x15
 3795 017a 01       		.uleb128 0x1
 3796 017b 01       		.byte	0x1
 3797 017c 49       		.uleb128 0x49
 3798 017d 13       		.uleb128 0x13
 3799 017e 01       		.uleb128 0x1
 3800 017f 13       		.uleb128 0x13
 3801 0180 00       		.byte	0
 3802 0181 00       		.byte	0
 3803 0182 16       		.uleb128 0x16
 3804 0183 21       		.uleb128 0x21
 3805 0184 00       		.byte	0
 3806 0185 49       		.uleb128 0x49
 3807 0186 13       		.uleb128 0x13
 3808 0187 2F       		.uleb128 0x2f
 3809 0188 0B       		.uleb128 0xb
 3810 0189 00       		.byte	0
 3811 018a 00       		.byte	0
 3812 018b 17       		.uleb128 0x17
 3813 018c 34       		.uleb128 0x34
 3814 018d 00       		.byte	0
 3815 018e 03       		.uleb128 0x3
 3816 018f 0E       		.uleb128 0xe
 3817 0190 3A       		.uleb128 0x3a
 3818 0191 0B       		.uleb128 0xb
 3819 0192 3B       		.uleb128 0x3b
 3820 0193 0B       		.uleb128 0xb
 3821 0194 49       		.uleb128 0x49
 3822 0195 13       		.uleb128 0x13
 3823 0196 3F       		.uleb128 0x3f
 3824 0197 19       		.uleb128 0x19
 3825 0198 02       		.uleb128 0x2
 3826 0199 18       		.uleb128 0x18
 3827 019a 00       		.byte	0
 3828 019b 00       		.byte	0
 3829 019c 00       		.byte	0
 3830              		.section	.debug_aranges,"",%progbits
 3831 0000 E4000000 		.4byte	0xe4
 3832 0004 0200     		.2byte	0x2
 3833 0006 00000000 		.4byte	.Ldebug_info0
 3834 000a 04       		.byte	0x4
 3835 000b 00       		.byte	0
 3836 000c 0000     		.2byte	0
 3837 000e 0000     		.2byte	0
 3838 0010 00000000 		.4byte	.LFB0
 3839 0014 1C010000 		.4byte	.LFE0-.LFB0
 3840 0018 00000000 		.4byte	.LFB1
 3841 001c 58010000 		.4byte	.LFE1-.LFB1
 3842 0020 00000000 		.4byte	.LFB2
 3843 0024 30000000 		.4byte	.LFE2-.LFB2
 3844 0028 00000000 		.4byte	.LFB3
 3845 002c 7C010000 		.4byte	.LFE3-.LFB3
 3846 0030 00000000 		.4byte	.LFB4
 3847 0034 3C000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 101


 3848 0038 00000000 		.4byte	.LFB5
 3849 003c 38000000 		.4byte	.LFE5-.LFB5
 3850 0040 00000000 		.4byte	.LFB6
 3851 0044 AC000000 		.4byte	.LFE6-.LFB6
 3852 0048 00000000 		.4byte	.LFB7
 3853 004c 3C000000 		.4byte	.LFE7-.LFB7
 3854 0050 00000000 		.4byte	.LFB8
 3855 0054 20000000 		.4byte	.LFE8-.LFB8
 3856 0058 00000000 		.4byte	.LFB9
 3857 005c 20000000 		.4byte	.LFE9-.LFB9
 3858 0060 00000000 		.4byte	.LFB10
 3859 0064 4C000000 		.4byte	.LFE10-.LFB10
 3860 0068 00000000 		.4byte	.LFB11
 3861 006c 68000000 		.4byte	.LFE11-.LFB11
 3862 0070 00000000 		.4byte	.LFB12
 3863 0074 7C000000 		.4byte	.LFE12-.LFB12
 3864 0078 00000000 		.4byte	.LFB13
 3865 007c A8000000 		.4byte	.LFE13-.LFB13
 3866 0080 00000000 		.4byte	.LFB14
 3867 0084 1C000000 		.4byte	.LFE14-.LFB14
 3868 0088 00000000 		.4byte	.LFB15
 3869 008c 1C000000 		.4byte	.LFE15-.LFB15
 3870 0090 00000000 		.4byte	.LFB16
 3871 0094 3C000000 		.4byte	.LFE16-.LFB16
 3872 0098 00000000 		.4byte	.LFB17
 3873 009c 44000000 		.4byte	.LFE17-.LFB17
 3874 00a0 00000000 		.4byte	.LFB18
 3875 00a4 B4000000 		.4byte	.LFE18-.LFB18
 3876 00a8 00000000 		.4byte	.LFB19
 3877 00ac 64010000 		.4byte	.LFE19-.LFB19
 3878 00b0 00000000 		.4byte	.LFB20
 3879 00b4 90000000 		.4byte	.LFE20-.LFB20
 3880 00b8 00000000 		.4byte	.LFB21
 3881 00bc 70010000 		.4byte	.LFE21-.LFB21
 3882 00c0 00000000 		.4byte	.LFB22
 3883 00c4 7C000000 		.4byte	.LFE22-.LFB22
 3884 00c8 00000000 		.4byte	.LFB23
 3885 00cc 3C000000 		.4byte	.LFE23-.LFB23
 3886 00d0 00000000 		.4byte	.LFB24
 3887 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3888 00d8 00000000 		.4byte	.LFB25
 3889 00dc 38000000 		.4byte	.LFE25-.LFB25
 3890 00e0 00000000 		.4byte	0
 3891 00e4 00000000 		.4byte	0
 3892              		.section	.debug_ranges,"",%progbits
 3893              	.Ldebug_ranges0:
 3894 0000 00000000 		.4byte	.LFB0
 3895 0004 1C010000 		.4byte	.LFE0
 3896 0008 00000000 		.4byte	.LFB1
 3897 000c 58010000 		.4byte	.LFE1
 3898 0010 00000000 		.4byte	.LFB2
 3899 0014 30000000 		.4byte	.LFE2
 3900 0018 00000000 		.4byte	.LFB3
 3901 001c 7C010000 		.4byte	.LFE3
 3902 0020 00000000 		.4byte	.LFB4
 3903 0024 3C000000 		.4byte	.LFE4
 3904 0028 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 102


 3905 002c 38000000 		.4byte	.LFE5
 3906 0030 00000000 		.4byte	.LFB6
 3907 0034 AC000000 		.4byte	.LFE6
 3908 0038 00000000 		.4byte	.LFB7
 3909 003c 3C000000 		.4byte	.LFE7
 3910 0040 00000000 		.4byte	.LFB8
 3911 0044 20000000 		.4byte	.LFE8
 3912 0048 00000000 		.4byte	.LFB9
 3913 004c 20000000 		.4byte	.LFE9
 3914 0050 00000000 		.4byte	.LFB10
 3915 0054 4C000000 		.4byte	.LFE10
 3916 0058 00000000 		.4byte	.LFB11
 3917 005c 68000000 		.4byte	.LFE11
 3918 0060 00000000 		.4byte	.LFB12
 3919 0064 7C000000 		.4byte	.LFE12
 3920 0068 00000000 		.4byte	.LFB13
 3921 006c A8000000 		.4byte	.LFE13
 3922 0070 00000000 		.4byte	.LFB14
 3923 0074 1C000000 		.4byte	.LFE14
 3924 0078 00000000 		.4byte	.LFB15
 3925 007c 1C000000 		.4byte	.LFE15
 3926 0080 00000000 		.4byte	.LFB16
 3927 0084 3C000000 		.4byte	.LFE16
 3928 0088 00000000 		.4byte	.LFB17
 3929 008c 44000000 		.4byte	.LFE17
 3930 0090 00000000 		.4byte	.LFB18
 3931 0094 B4000000 		.4byte	.LFE18
 3932 0098 00000000 		.4byte	.LFB19
 3933 009c 64010000 		.4byte	.LFE19
 3934 00a0 00000000 		.4byte	.LFB20
 3935 00a4 90000000 		.4byte	.LFE20
 3936 00a8 00000000 		.4byte	.LFB21
 3937 00ac 70010000 		.4byte	.LFE21
 3938 00b0 00000000 		.4byte	.LFB22
 3939 00b4 7C000000 		.4byte	.LFE22
 3940 00b8 00000000 		.4byte	.LFB23
 3941 00bc 3C000000 		.4byte	.LFE23
 3942 00c0 00000000 		.4byte	.LFB24
 3943 00c4 3C000000 		.4byte	.LFE24
 3944 00c8 00000000 		.4byte	.LFB25
 3945 00cc 38000000 		.4byte	.LFE25
 3946 00d0 00000000 		.4byte	0
 3947 00d4 00000000 		.4byte	0
 3948              		.section	.debug_line,"",%progbits
 3949              	.Ldebug_line0:
 3950 0000 56030000 		.section	.debug_str,"MS",%progbits,1
 3950      02004D00 
 3950      00000201 
 3950      FB0E0D00 
 3950      01010101 
 3951              	.LASF10:
 3952 0000 75696E74 		.ascii	"uint16\000"
 3952      313600
 3953              	.LASF56:
 3954 0007 61646347 		.ascii	"adcGain\000"
 3954      61696E00 
 3955              	.LASF71:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 103


 3956 000f 696E7075 		.ascii	"inputRange\000"
 3956      7452616E 
 3956      676500
 3957              	.LASF80:
 3958 001a 4144435F 		.ascii	"ADC_1_Read16\000"
 3958      315F5265 
 3958      61643136 
 3958      00
 3959              	.LASF82:
 3960 0027 4144435F 		.ascii	"ADC_1_gcor\000"
 3960      315F6763 
 3960      6F7200
 3961              	.LASF24:
 3962 0032 67636F72 		.ascii	"gcor\000"
 3962      00
 3963              	.LASF46:
 3964 0037 4144435F 		.ascii	"ADC_1_StopConvert\000"
 3964      315F5374 
 3964      6F70436F 
 3964      6E766572 
 3964      7400
 3965              	.LASF90:
 3966 0049 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3966      43313120 
 3966      352E342E 
 3966      31203230 
 3966      31363036 
 3967 007c 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3967      20726576 
 3967      6973696F 
 3967      6E203233 
 3967      37373135 
 3968 00af 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3968      66756E63 
 3968      74696F6E 
 3968      2D736563 
 3968      74696F6E 
 3969              	.LASF7:
 3970 00d7 6C6F6E67 		.ascii	"long long unsigned int\000"
 3970      206C6F6E 
 3970      6720756E 
 3970      7369676E 
 3970      65642069 
 3971              	.LASF31:
 3972 00ee 4144435F 		.ascii	"ADC_1_Enable\000"
 3972      315F456E 
 3972      61626C65 
 3972      00
 3973              	.LASF73:
 3974 00fb 69646561 		.ascii	"idealOddDecGain\000"
 3974      6C4F6464 
 3974      44656347 
 3974      61696E00 
 3975              	.LASF6:
 3976 010b 6C6F6E67 		.ascii	"long long int\000"
 3976      206C6F6E 
 3976      6720696E 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 104


 3976      7400
 3977              	.LASF0:
 3978 0119 7369676E 		.ascii	"signed char\000"
 3978      65642063 
 3978      68617200 
 3979              	.LASF32:
 3980 0125 4144435F 		.ascii	"ADC_1_Stop\000"
 3980      315F5374 
 3980      6F7000
 3981              	.LASF14:
 3982 0130 696E7433 		.ascii	"int32\000"
 3982      3200
 3983              	.LASF69:
 3984 0136 4144435F 		.ascii	"ADC_1_InitConfig\000"
 3984      315F496E 
 3984      6974436F 
 3984      6E666967 
 3984      00
 3985              	.LASF49:
 3986 0147 4144435F 		.ascii	"ADC_1_GetResult8\000"
 3986      315F4765 
 3986      74526573 
 3986      756C7438 
 3986      00
 3987              	.LASF4:
 3988 0158 6C6F6E67 		.ascii	"long int\000"
 3988      20696E74 
 3988      00
 3989              	.LASF53:
 3990 0161 4144435F 		.ascii	"ADC_1_SetOffset\000"
 3990      315F5365 
 3990      744F6666 
 3990      73657400 
 3991              	.LASF20:
 3992 0171 72656731 		.ascii	"reg16\000"
 3992      3600
 3993              	.LASF9:
 3994 0177 75696E74 		.ascii	"uint8\000"
 3994      3800
 3995              	.LASF17:
 3996 017d 646F7562 		.ascii	"double\000"
 3996      6C6500
 3997              	.LASF61:
 3998 0184 566F6C74 		.ascii	"Volts\000"
 3998      7300
 3999              	.LASF83:
 4000 018a 4144435F 		.ascii	"ADC_1_initVar\000"
 4000      315F696E 
 4000      69745661 
 4000      7200
 4001              	.LASF11:
 4002 0198 75696E74 		.ascii	"uint32\000"
 4002      333200
 4003              	.LASF84:
 4004 019f 4144435F 		.ascii	"ADC_1_convDone\000"
 4004      315F636F 
 4004      6E76446F 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 105


 4004      6E6500
 4005              	.LASF81:
 4006 01ae 4144435F 		.ascii	"ADC_1_Read32\000"
 4006      315F5265 
 4006      61643332 
 4006      00
 4007              	.LASF85:
 4008 01bb 4144435F 		.ascii	"ADC_1_stopConversion\000"
 4008      315F7374 
 4008      6F70436F 
 4008      6E766572 
 4008      73696F6E 
 4009              	.LASF30:
 4010 01d0 4144435F 		.ascii	"ADC_1_Start\000"
 4010      315F5374 
 4010      61727400 
 4011              	.LASF78:
 4012 01dc 76616C75 		.ascii	"value\000"
 4012      6500
 4013              	.LASF48:
 4014 01e2 7265744D 		.ascii	"retMode\000"
 4014      6F646500 
 4015              	.LASF8:
 4016 01ea 756E7369 		.ascii	"unsigned int\000"
 4016      676E6564 
 4016      20696E74 
 4016      00
 4017              	.LASF63:
 4018 01f7 75566F6C 		.ascii	"uVolts\000"
 4018      747300
 4019              	.LASF45:
 4020 01fe 4144435F 		.ascii	"ADC_1_StartConvert\000"
 4020      315F5374 
 4020      61727443 
 4020      6F6E7665 
 4020      727400
 4021              	.LASF5:
 4022 0211 6C6F6E67 		.ascii	"long unsigned int\000"
 4022      20756E73 
 4022      69676E65 
 4022      6420696E 
 4022      7400
 4023              	.LASF3:
 4024 0223 73686F72 		.ascii	"short unsigned int\000"
 4024      7420756E 
 4024      7369676E 
 4024      65642069 
 4024      6E7400
 4025              	.LASF35:
 4026 0236 4144435F 		.ascii	"ADC_1_SetCoherency\000"
 4026      315F5365 
 4026      74436F68 
 4026      6572656E 
 4026      637900
 4027              	.LASF12:
 4028 0249 696E7438 		.ascii	"int8\000"
 4028      00
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 106


 4029              	.LASF57:
 4030 024e 4144435F 		.ascii	"ADC_1_CountsTo_mVolts\000"
 4030      315F436F 
 4030      756E7473 
 4030      546F5F6D 
 4030      566F6C74 
 4031              	.LASF44:
 4032 0264 67636F72 		.ascii	"gcorValue\000"
 4032      56616C75 
 4032      6500
 4033              	.LASF70:
 4034 026e 4144435F 		.ascii	"ADC_1_GainCompensation\000"
 4034      315F4761 
 4034      696E436F 
 4034      6D70656E 
 4034      73617469 
 4035              	.LASF67:
 4036 0285 4144435F 		.ascii	"ADC_1_SelectConfiguration\000"
 4036      315F5365 
 4036      6C656374 
 4036      436F6E66 
 4036      69677572 
 4037              	.LASF59:
 4038 029f 6D566F6C 		.ascii	"mVolts\000"
 4038      747300
 4039              	.LASF74:
 4040 02a6 666C6173 		.ascii	"flash\000"
 4040      6800
 4041              	.LASF21:
 4042 02ac 72656733 		.ascii	"reg32\000"
 4042      3200
 4043              	.LASF41:
 4044 02b2 4144435F 		.ascii	"ADC_1_SetGCOR\000"
 4044      315F5365 
 4044      7447434F 
 4044      5200
 4045              	.LASF15:
 4046 02c0 666C6F61 		.ascii	"float32\000"
 4046      74333200 
 4047              	.LASF23:
 4048 02c8 73697A65 		.ascii	"sizetype\000"
 4048      74797065 
 4048      00
 4049              	.LASF22:
 4050 02d1 6C6F6E67 		.ascii	"long double\000"
 4050      20646F75 
 4050      626C6500 
 4051              	.LASF55:
 4052 02dd 4144435F 		.ascii	"ADC_1_SetGain\000"
 4052      315F5365 
 4052      74476169 
 4052      6E00
 4053              	.LASF29:
 4054 02eb 4144435F 		.ascii	"ADC_1_Init\000"
 4054      315F496E 
 4054      697400
 4055              	.LASF37:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 107


 4056 02f6 636F6865 		.ascii	"coherency\000"
 4056      72656E63 
 4056      7900
 4057              	.LASF36:
 4058 0300 6761696E 		.ascii	"gain\000"
 4058      00
 4059              	.LASF16:
 4060 0305 666C6F61 		.ascii	"float\000"
 4060      7400
 4061              	.LASF89:
 4062 030b 4144435F 		.ascii	"ADC_1_CountsPerVolt\000"
 4062      315F436F 
 4062      756E7473 
 4062      50657256 
 4062      6F6C7400 
 4063              	.LASF47:
 4064 031f 4144435F 		.ascii	"ADC_1_IsEndConversion\000"
 4064      315F4973 
 4064      456E6443 
 4064      6F6E7665 
 4064      7273696F 
 4065              	.LASF19:
 4066 0335 72656738 		.ascii	"reg8\000"
 4066      00
 4067              	.LASF72:
 4068 033a 69646561 		.ascii	"idealDecGain\000"
 4068      6C446563 
 4068      4761696E 
 4068      00
 4069              	.LASF75:
 4070 0347 6E6F726D 		.ascii	"normalised\000"
 4070      616C6973 
 4070      656400
 4071              	.LASF1:
 4072 0352 756E7369 		.ascii	"unsigned char\000"
 4072      676E6564 
 4072      20636861 
 4072      7200
 4073              	.LASF51:
 4074 0360 4144435F 		.ascii	"ADC_1_GetResult16\000"
 4074      315F4765 
 4074      74526573 
 4074      756C7431 
 4074      3600
 4075              	.LASF87:
 4076 0372 4144435F 		.ascii	"ADC_1_Config\000"
 4076      315F436F 
 4076      6E666967 
 4076      00
 4077              	.LASF2:
 4078 037f 73686F72 		.ascii	"short int\000"
 4078      7420696E 
 4078      7400
 4079              	.LASF76:
 4080 0389 67636F72 		.ascii	"gcorTmp\000"
 4080      546D7000 
 4081              	.LASF88:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 108


 4082 0391 4144435F 		.ascii	"ADC_1_Offset\000"
 4082      315F4F66 
 4082      66736574 
 4082      00
 4083              	.LASF79:
 4084 039e 4144435F 		.ascii	"ADC_1_Read8\000"
 4084      315F5265 
 4084      61643800 
 4085              	.LASF66:
 4086 03aa 7265736F 		.ascii	"resolution\000"
 4086      6C757469 
 4086      6F6E00
 4087              	.LASF26:
 4088 03b5 4144435F 		.ascii	"ADC_1_GCOR_STRUCT\000"
 4088      315F4743 
 4088      4F525F53 
 4088      54525543 
 4088      5400
 4089              	.LASF64:
 4090 03c7 636F6566 		.ascii	"coefA\000"
 4090      4100
 4091              	.LASF65:
 4092 03cd 636F6566 		.ascii	"coefB\000"
 4092      4200
 4093              	.LASF18:
 4094 03d3 63686172 		.ascii	"char\000"
 4094      00
 4095              	.LASF43:
 4096 03d8 6756616C 		.ascii	"gValue\000"
 4096      756500
 4097              	.LASF42:
 4098 03df 4144435F 		.ascii	"ADC_1_ReadGCOR\000"
 4098      315F5265 
 4098      61644743 
 4098      4F5200
 4099              	.LASF27:
 4100 03ee 636F6E66 		.ascii	"config\000"
 4100      696700
 4101              	.LASF25:
 4102 03f5 6776616C 		.ascii	"gval\000"
 4102      00
 4103              	.LASF91:
 4104 03fa 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_1.c\000"
 4104      72617465 
 4104      645F536F 
 4104      75726365 
 4104      5C50536F 
 4105              	.LASF60:
 4106 0419 4144435F 		.ascii	"ADC_1_CountsTo_Volts\000"
 4106      315F436F 
 4106      756E7473 
 4106      546F5F56 
 4106      6F6C7473 
 4107              	.LASF68:
 4108 042e 72657374 		.ascii	"restart\000"
 4108      61727400 
 4109              	.LASF40:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 109


 4110 0436 746D7056 		.ascii	"tmpValue\000"
 4110      616C7565 
 4110      00
 4111              	.LASF33:
 4112 043f 4144435F 		.ascii	"ADC_1_SetBufferGain\000"
 4112      315F5365 
 4112      74427566 
 4112      66657247 
 4112      61696E00 
 4113              	.LASF54:
 4114 0453 6F666673 		.ascii	"offset\000"
 4114      657400
 4115              	.LASF58:
 4116 045a 61646343 		.ascii	"adcCounts\000"
 4116      6F756E74 
 4116      7300
 4117              	.LASF28:
 4118 0464 656E6162 		.ascii	"enableInterrupts\000"
 4118      6C65496E 
 4118      74657272 
 4118      75707473 
 4118      00
 4119              	.LASF86:
 4120 0475 4144435F 		.ascii	"ADC_1_started\000"
 4120      315F7374 
 4120      61727465 
 4120      6400
 4121              	.LASF39:
 4122 0483 73746174 		.ascii	"status\000"
 4122      757300
 4123              	.LASF38:
 4124 048a 6761696E 		.ascii	"gainAdjust\000"
 4124      41646A75 
 4124      737400
 4125              	.LASF52:
 4126 0495 4144435F 		.ascii	"ADC_1_GetResult32\000"
 4126      315F4765 
 4126      74526573 
 4126      756C7433 
 4126      3200
 4127              	.LASF92:
 4128 04a7 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Desktop\\PSOC5_electrosteel_"
 4128      73657273 
 4128      5C4A6566 
 4128      66536E79 
 4128      6465725C 
 4129 04d6 73747269 		.ascii	"stringsensors - Copy\\CE210514_PSOC3_5_Thermistor.c"
 4129      6E677365 
 4129      6E736F72 
 4129      73202D20 
 4129      436F7079 
 4130 0508 7964736E 		.ascii	"ydsn\000"
 4130      00
 4131              	.LASF13:
 4132 050d 696E7431 		.ascii	"int16\000"
 4132      3600
 4133              	.LASF77:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cclDnuMd.s 			page 110


 4134 0513 4144435F 		.ascii	"ADC_1_SetDSMRef0Reg\000"
 4134      315F5365 
 4134      7444534D 
 4134      52656630 
 4134      52656700 
 4135              	.LASF34:
 4136 0527 746D7052 		.ascii	"tmpReg\000"
 4136      656700
 4137              	.LASF50:
 4138 052e 72657375 		.ascii	"result\000"
 4138      6C7400
 4139              	.LASF62:
 4140 0535 4144435F 		.ascii	"ADC_1_CountsTo_uVolts\000"
 4140      315F436F 
 4140      756E7473 
 4140      546F5F75 
 4140      566F6C74 
 4141              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
