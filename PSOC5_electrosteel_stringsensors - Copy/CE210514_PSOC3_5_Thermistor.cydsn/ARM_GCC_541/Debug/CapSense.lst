ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.bss
  20              	CapSense_initVar:
  21 0000 00       		.space	1
  22              		.comm	CapSense_csv,1,1
  23              		.comm	CapSense_sensorIndex,1,1
  24              		.comm	CapSense_sensorRaw,24,4
  25              		.global	CapSense_sensorEnableMask
  26              		.data
  27              		.align	2
  28              		.type	CapSense_sensorEnableMask, %object
  29              		.size	CapSense_sensorEnableMask, 2
  30              	CapSense_sensorEnableMask:
  31 0000 FF       		.byte	-1
  32 0001 0F       		.byte	15
  33              		.global	CapSense_pcTable
  34              		.section	.rodata
  35              		.align	2
  36              		.type	CapSense_pcTable, %object
  37              		.size	CapSense_pcTable, 48
  38              	CapSense_pcTable:
  39 0000 17500040 		.word	1073762327
  40 0004 16500040 		.word	1073762326
  41 0008 15500040 		.word	1073762325
  42 000c 14500040 		.word	1073762324
  43 0010 13500040 		.word	1073762323
  44 0014 34500040 		.word	1073762356
  45 0018 35500040 		.word	1073762357
  46 001c 36500040 		.word	1073762358
  47 0020 37500040 		.word	1073762359
  48 0024 10500040 		.word	1073762320
  49 0028 12500040 		.word	1073762322
  50 002c 11500040 		.word	1073762321
  51              		.global	CapSense_portTable
  52              		.align	2
  53              		.type	CapSense_portTable, %object
  54              		.size	CapSense_portTable, 12
  55              	CapSense_portTable:
  56 0030 02       		.byte	2
  57 0031 02       		.byte	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 2


  58 0032 02       		.byte	2
  59 0033 02       		.byte	2
  60 0034 02       		.byte	2
  61 0035 06       		.byte	6
  62 0036 06       		.byte	6
  63 0037 06       		.byte	6
  64 0038 06       		.byte	6
  65 0039 02       		.byte	2
  66 003a 02       		.byte	2
  67 003b 02       		.byte	2
  68              		.global	CapSense_maskTable
  69              		.align	2
  70              		.type	CapSense_maskTable, %object
  71              		.size	CapSense_maskTable, 12
  72              	CapSense_maskTable:
  73 003c 80       		.byte	-128
  74 003d 40       		.byte	64
  75 003e 20       		.byte	32
  76 003f 10       		.byte	16
  77 0040 08       		.byte	8
  78 0041 10       		.byte	16
  79 0042 20       		.byte	32
  80 0043 40       		.byte	64
  81 0044 80       		.byte	-128
  82 0045 01       		.byte	1
  83 0046 04       		.byte	4
  84 0047 02       		.byte	2
  85              		.global	CapSense_csTable
  86              		.align	2
  87              		.type	CapSense_csTable, %object
  88              		.size	CapSense_csTable, 32
  89              	CapSense_csTable:
  90 0048 06520040 		.word	1073762822
  91 004c 0E520040 		.word	1073762830
  92 0050 16520040 		.word	1073762838
  93 0054 1E520040 		.word	1073762846
  94 0058 26520040 		.word	1073762854
  95 005c 2E520040 		.word	1073762862
  96 0060 36520040 		.word	1073762870
  97 0064 7E520040 		.word	1073762942
  98              		.global	CapSense_idacSettings
  99              		.data
 100 0002 0000     		.align	2
 101              		.type	CapSense_idacSettings, %object
 102              		.size	CapSense_idacSettings, 12
 103              	CapSense_idacSettings:
 104 0004 32       		.byte	50
 105 0005 32       		.byte	50
 106 0006 32       		.byte	50
 107 0007 32       		.byte	50
 108 0008 32       		.byte	50
 109 0009 32       		.byte	50
 110 000a 32       		.byte	50
 111 000b 32       		.byte	50
 112 000c 32       		.byte	50
 113 000d 32       		.byte	50
 114 000e C8       		.byte	-56
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 3


 115 000f C8       		.byte	-56
 116              		.global	CapSense_widgetResolution
 117              		.bss
 118 0001 000000   		.align	2
 119              		.type	CapSense_widgetResolution, %object
 120              		.size	CapSense_widgetResolution, 12
 121              	CapSense_widgetResolution:
 122 0004 00000000 		.space	12
 122      00000000 
 122      00000000 
 123              		.global	CapSense_analogSwitchDivider
 124              		.data
 125              		.type	CapSense_analogSwitchDivider, %object
 126              		.size	CapSense_analogSwitchDivider, 1
 127              	CapSense_analogSwitchDivider:
 128 0010 1E       		.byte	30
 129              		.global	CapSense_widgetNumber
 130              		.section	.rodata
 131              		.align	2
 132              		.type	CapSense_widgetNumber, %object
 133              		.size	CapSense_widgetNumber, 12
 134              	CapSense_widgetNumber:
 135 0068 00       		.byte	0
 136 0069 01       		.byte	1
 137 006a 02       		.byte	2
 138 006b 03       		.byte	3
 139 006c 04       		.byte	4
 140 006d 05       		.byte	5
 141 006e 06       		.byte	6
 142 006f 07       		.byte	7
 143 0070 08       		.byte	8
 144 0071 09       		.byte	9
 145 0072 0A       		.byte	10
 146 0073 0B       		.byte	11
 147              		.section	.text.CapSense_Init,"ax",%progbits
 148              		.align	2
 149              		.global	CapSense_Init
 150              		.thumb
 151              		.thumb_func
 152              		.type	CapSense_Init, %function
 153              	CapSense_Init:
 154              	.LFB0:
 155              		.file 1 "Generated_Source\\PSoC5\\CapSense.c"
   1:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/CapSense.c **** * File Name: CapSense.c
   3:Generated_Source\PSoC5/CapSense.c **** * Version 3.50
   4:Generated_Source\PSoC5/CapSense.c **** *
   5:Generated_Source\PSoC5/CapSense.c **** * Description:
   6:Generated_Source\PSoC5/CapSense.c **** *  This file provides the source code of scanning APIs for the CapSense CSD 
   7:Generated_Source\PSoC5/CapSense.c **** *  component.
   8:Generated_Source\PSoC5/CapSense.c **** *
   9:Generated_Source\PSoC5/CapSense.c **** * Note:
  10:Generated_Source\PSoC5/CapSense.c **** *
  11:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
  12:Generated_Source\PSoC5/CapSense.c **** * Copyright 2008-2013, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/CapSense.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/CapSense.c **** * disclaimers, and limitations in the end user license agreement accompanying
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 4


  15:Generated_Source\PSoC5/CapSense.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/CapSense.c **** 
  18:Generated_Source\PSoC5/CapSense.c **** #include "CapSense.h"
  19:Generated_Source\PSoC5/CapSense.c **** 
  20:Generated_Source\PSoC5/CapSense.c **** 
  21:Generated_Source\PSoC5/CapSense.c **** 
  22:Generated_Source\PSoC5/CapSense.c **** static uint8 CapSense_initVar = 0u;
  23:Generated_Source\PSoC5/CapSense.c ****             
  24:Generated_Source\PSoC5/CapSense.c **** /* Global software variables */
  25:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_csv;            /* CapSense CSD status, control variable */
  26:Generated_Source\PSoC5/CapSense.c **** volatile uint8 CapSense_sensorIndex;    /* Index of scannig sensor */
  27:Generated_Source\PSoC5/CapSense.c **** 
  28:Generated_Source\PSoC5/CapSense.c **** /* AutoTunning start */
  29:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
  30:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_lowLevelTuningDone = 1u;
  31:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
  32:Generated_Source\PSoC5/CapSense.c **** 
  33:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
  34:Generated_Source\PSoC5/CapSense.c ****     uint8  CapSense_extRbCh0Cur = CapSense_RBLEED1;
  35:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
  36:Generated_Source\PSoC5/CapSense.c ****         uint8  CapSense_extRbCh1Cur = (CapSense_RBLEED1 + CapSense_TOTAL_RB_NUMBER__CH0);
  37:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)*/ 
  38:Generated_Source\PSoC5/CapSense.c **** #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */ 
  39:Generated_Source\PSoC5/CapSense.c ****         
  40:Generated_Source\PSoC5/CapSense.c **** /* Global array of Raw Counts */
  41:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_sensorRaw[CapSense_TOTAL_SENSOR_COUNT]; 
  42:Generated_Source\PSoC5/CapSense.c **** 
  43:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_sensorEnableMask[(((CapSense_TOTAL_SENSOR_COUNT - 1u) / 8u) + 1u)] = {
  44:Generated_Source\PSoC5/CapSense.c **** 0xFFu, 0xFu, };
  45:Generated_Source\PSoC5/CapSense.c **** 
  46:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_pcTable[] = {
  47:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button0__BTN__PC, 
  48:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button1__BTN__PC, 
  49:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button2__BTN__PC, 
  50:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button3__BTN__PC, 
  51:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button4__BTN__PC, 
  52:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button5__BTN__PC, 
  53:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button6__BTN__PC, 
  54:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button7__BTN__PC, 
  55:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button8__BTN__PC, 
  56:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button9__BTN__PC, 
  57:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button10__BTN__PC, 
  58:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CapSense_PortCH0__Button11__BTN__PC, 
  59:Generated_Source\PSoC5/CapSense.c **** };
  60:Generated_Source\PSoC5/CapSense.c **** 
  61:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_portTable[] = {
  62:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__PORT, 
  63:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__PORT, 
  64:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__PORT, 
  65:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__PORT, 
  66:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__PORT, 
  67:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__PORT, 
  68:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__PORT, 
  69:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__PORT, 
  70:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__PORT, 
  71:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__PORT, 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 5


  72:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button10__BTN__PORT, 
  73:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button11__BTN__PORT, 
  74:Generated_Source\PSoC5/CapSense.c **** };
  75:Generated_Source\PSoC5/CapSense.c **** 
  76:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_maskTable[] = {
  77:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button0__BTN__MASK,
  78:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button1__BTN__MASK,
  79:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button2__BTN__MASK,
  80:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button3__BTN__MASK,
  81:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button4__BTN__MASK,
  82:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button5__BTN__MASK,
  83:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button6__BTN__MASK,
  84:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button7__BTN__MASK,
  85:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button8__BTN__MASK,
  86:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button9__BTN__MASK,
  87:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button10__BTN__MASK,
  88:Generated_Source\PSoC5/CapSense.c ****     CapSense_PortCH0__Button11__BTN__MASK,
  89:Generated_Source\PSoC5/CapSense.c **** };
  90:Generated_Source\PSoC5/CapSense.c **** 
  91:Generated_Source\PSoC5/CapSense.c **** uint8 CYXDATA * const CYCODE CapSense_csTable[] = {
  92:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT0_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT1_CAPS_SEL, (uint8 CYXDATA *)CY
  93:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT3_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT4_CAPS_SEL, (uint8 CYXDATA *)CY
  94:Generated_Source\PSoC5/CapSense.c ****     (uint8 CYXDATA *)CYREG_PRT6_CAPS_SEL, (uint8 CYXDATA *)CYREG_PRT15_CAPS_SEL,
  95:Generated_Source\PSoC5/CapSense.c **** };
  96:Generated_Source\PSoC5/CapSense.c **** 
  97:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_idacSettings[] = {
  98:Generated_Source\PSoC5/CapSense.c ****     50u,50u,50u,50u,50u,50u,50u,50u,50u,50u,200u,200u,
  99:Generated_Source\PSoC5/CapSense.c **** };
 100:Generated_Source\PSoC5/CapSense.c **** 
 101:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_widgetResolution[] = {
 102:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 103:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 104:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 105:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 106:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 107:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 108:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 109:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 110:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 111:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 112:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 113:Generated_Source\PSoC5/CapSense.c ****     CapSense_PWM_RESOLUTION_8_BITS,
 114:Generated_Source\PSoC5/CapSense.c **** };
 115:Generated_Source\PSoC5/CapSense.c **** 
 116:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_analogSwitchDivider = 30u;
 117:Generated_Source\PSoC5/CapSense.c **** 
 118:Generated_Source\PSoC5/CapSense.c **** const uint8 CYCODE CapSense_widgetNumber[] = {
 119:Generated_Source\PSoC5/CapSense.c ****     0u, /* Button0__BTN */
 120:Generated_Source\PSoC5/CapSense.c ****     1u, /* Button1__BTN */
 121:Generated_Source\PSoC5/CapSense.c ****     2u, /* Button2__BTN */
 122:Generated_Source\PSoC5/CapSense.c ****     3u, /* Button3__BTN */
 123:Generated_Source\PSoC5/CapSense.c ****     4u, /* Button4__BTN */
 124:Generated_Source\PSoC5/CapSense.c ****     5u, /* Button5__BTN */
 125:Generated_Source\PSoC5/CapSense.c ****     6u, /* Button6__BTN */
 126:Generated_Source\PSoC5/CapSense.c ****     7u, /* Button7__BTN */
 127:Generated_Source\PSoC5/CapSense.c ****     8u, /* Button8__BTN */
 128:Generated_Source\PSoC5/CapSense.c ****     9u, /* Button9__BTN */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 6


 129:Generated_Source\PSoC5/CapSense.c ****     10u, /* Button10__BTN */
 130:Generated_Source\PSoC5/CapSense.c ****     11u, /* Button11__BTN */
 131:Generated_Source\PSoC5/CapSense.c ****     
 132:Generated_Source\PSoC5/CapSense.c **** };
 133:Generated_Source\PSoC5/CapSense.c **** 
 134:Generated_Source\PSoC5/CapSense.c **** 
 135:Generated_Source\PSoC5/CapSense.c **** 
 136:Generated_Source\PSoC5/CapSense.c **** 
 137:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 138:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Init
 139:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 140:Generated_Source\PSoC5/CapSense.c **** *
 141:Generated_Source\PSoC5/CapSense.c **** * Summary:
 142:Generated_Source\PSoC5/CapSense.c **** *  Inits default CapSense configuration provided with customizer that defines 
 143:Generated_Source\PSoC5/CapSense.c **** *  mode of component operations and resets all sensors to an inactive state.
 144:Generated_Source\PSoC5/CapSense.c **** *
 145:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 146:Generated_Source\PSoC5/CapSense.c **** *  None
 147:Generated_Source\PSoC5/CapSense.c **** *
 148:Generated_Source\PSoC5/CapSense.c **** * Return:
 149:Generated_Source\PSoC5/CapSense.c **** *  None
 150:Generated_Source\PSoC5/CapSense.c **** *
 151:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 152:Generated_Source\PSoC5/CapSense.c **** void CapSense_Init(void) 
 153:Generated_Source\PSoC5/CapSense.c **** {
 156              		.loc 1 153 0
 157              		.cfi_startproc
 158              		@ args = 0, pretend = 0, frame = 8
 159              		@ frame_needed = 1, uses_anonymous_args = 0
 160 0000 80B5     		push	{r7, lr}
 161              		.cfi_def_cfa_offset 8
 162              		.cfi_offset 7, -8
 163              		.cfi_offset 14, -4
 164 0002 82B0     		sub	sp, sp, #8
 165              		.cfi_def_cfa_offset 16
 166 0004 00AF     		add	r7, sp, #0
 167              		.cfi_def_cfa_register 7
 154:Generated_Source\PSoC5/CapSense.c ****     #if ( (CapSense_PRS_OPTIONS) || \
 155:Generated_Source\PSoC5/CapSense.c ****           (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 156:Generated_Source\PSoC5/CapSense.c ****           ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 157:Generated_Source\PSoC5/CapSense.c ****             (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) )
 158:Generated_Source\PSoC5/CapSense.c ****         
 159:Generated_Source\PSoC5/CapSense.c ****         uint8 enableInterrupts;
 160:Generated_Source\PSoC5/CapSense.c ****     #endif /* ( (CapSense_PRS_OPTIONS) || \
 161:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_UDB) || \
 162:Generated_Source\PSoC5/CapSense.c ****            * ( (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
 163:Generated_Source\PSoC5/CapSense.c ****            * (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_UDB)) ) 
 164:Generated_Source\PSoC5/CapSense.c ****            */
 165:Generated_Source\PSoC5/CapSense.c ****     
 166:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 167:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 168              		.loc 1 167 0
 169 0006 FFF7FEFF 		bl	CapSense_ClearSensors
 168:Generated_Source\PSoC5/CapSense.c **** 
 169:Generated_Source\PSoC5/CapSense.c ****     /* Set Prescaler */
 170:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 171:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 7


 172:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 173:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL_REG   = (CapSense_PRESCALER_CTRL_ENABLE |
 174:Generated_Source\PSoC5/CapSense.c ****                                                     CapSense_PRESCALER_CTRL_MODE_CMP);
 175:Generated_Source\PSoC5/CapSense.c ****                                                
 176:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_CONTROL2_REG |= CapSense_PRESCALER_CTRL_CMP_LESS_EQ;
 177:Generated_Source\PSoC5/CapSense.c ****     #else
 178:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 179:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 180:Generated_Source\PSoC5/CapSense.c **** 
 181:Generated_Source\PSoC5/CapSense.c ****     /* Set PRS */
 182:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS)
 183:Generated_Source\PSoC5/CapSense.c ****         CapSense_SetAnalogSwitchesSource(CapSense_ANALOG_SWITCHES_SRC_PRS);
 170              		.loc 1 183 0
 171 000a 0220     		movs	r0, #2
 172 000c FFF7FEFF 		bl	CapSense_SetAnalogSwitchesSource
 184:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_PRS_OPTIONS) */
 185:Generated_Source\PSoC5/CapSense.c **** 
 186:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS)
 187:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 188:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 189:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 190:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 191:Generated_Source\PSoC5/CapSense.c ****         
 192:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 193:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_REG   = CapSense_PRS8_DEFAULT_POLYNOM;
 194:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 195:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 196:Generated_Source\PSoC5/CapSense.c ****         
 197:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS)
 198:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */ 
 199:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();  
 173              		.loc 1 199 0
 174 0010 FFF7FEFF 		bl	CyEnterCriticalSection
 175 0014 0346     		mov	r3, r0
 176 0016 FB71     		strb	r3, [r7, #7]
 200:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 177              		.loc 1 200 0
 178 0018 3B4A     		ldr	r2, .L2
 179 001a 3B4B     		ldr	r3, .L2
 180 001c 1B78     		ldrb	r3, [r3]
 181 001e DBB2     		uxtb	r3, r3
 182 0020 43F00303 		orr	r3, r3, #3
 183 0024 DBB2     		uxtb	r3, r3
 184 0026 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_B_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 185              		.loc 1 201 0
 186 0028 384A     		ldr	r2, .L2+4
 187 002a 384B     		ldr	r3, .L2+4
 188 002c 1B78     		ldrb	r3, [r3]
 189 002e DBB2     		uxtb	r3, r3
 190 0030 43F00303 		orr	r3, r3, #3
 191 0034 DBB2     		uxtb	r3, r3
 192 0036 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 193              		.loc 1 202 0
 194 0038 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 195 003a 1846     		mov	r0, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 8


 196 003c FFF7FEFF 		bl	CyExitCriticalSection
 203:Generated_Source\PSoC5/CapSense.c ****         
 204:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 205:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_POLYNOM_PTR, CapSense_PRS16_DEFAULT_POLYNOM);
 197              		.loc 1 205 0
 198 0040 334B     		ldr	r3, .L2+8
 199 0042 4FF43442 		mov	r2, #46080
 200 0046 1A80     		strh	r2, [r3]	@ movhi
 206:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 207:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_SEED_COPY_PTR, CapSense_MEASURE_FULL_RANGE);
 201              		.loc 1 207 0
 202 0048 324B     		ldr	r3, .L2+12
 203 004a 4FF6FF72 		movw	r2, #65535
 204 004e 1A80     		strh	r2, [r3]	@ movhi
 208:Generated_Source\PSoC5/CapSense.c ****                 
 209:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRS_OPTIONS == CapSense_PRS_16BITS_4X)
 210:Generated_Source\PSoC5/CapSense.c ****         /* Aux control set FIFO as REG */
 211:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 212:Generated_Source\PSoC5/CapSense.c ****         CapSense_AUX_CONTROL_A_REG  |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 213:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 214:Generated_Source\PSoC5/CapSense.c ****         
 215:Generated_Source\PSoC5/CapSense.c ****         /* Write polynomial */
 216:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D1_REG   = HI8(CapSense_PRS16_DEFAULT_POLYNOM);
 217:Generated_Source\PSoC5/CapSense.c ****         CapSense_POLYNOM_A__D0_REG   = LO8(CapSense_PRS16_DEFAULT_POLYNOM);
 218:Generated_Source\PSoC5/CapSense.c ****         /* Write FIFO with seed */
 219:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F1_REG = CapSense_MEASURE_FULL_RANGE_LOW;
 220:Generated_Source\PSoC5/CapSense.c ****         CapSense_SEED_COPY_A__F0_REG = CapSense_MEASURE_FULL_RANGE_LOW; 
 221:Generated_Source\PSoC5/CapSense.c ****         
 222:Generated_Source\PSoC5/CapSense.c ****     #else
 223:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without PRS */
 224:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRS_OPTIONS == CapSense_PRS_8BITS) */ 
 225:Generated_Source\PSoC5/CapSense.c ****     
 226:Generated_Source\PSoC5/CapSense.c ****     /* Set ScanSpeed */
 227:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = CapSense_SCANSPEED_VALUE;
 205              		.loc 1 227 0
 206 0050 314B     		ldr	r3, .L2+16
 207 0052 0122     		movs	r2, #1
 208 0054 1A70     		strb	r2, [r3]
 228:Generated_Source\PSoC5/CapSense.c ****     
 229:Generated_Source\PSoC5/CapSense.c ****     /* Set the Measure */
 230:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 231:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 232:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 233:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 234:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_PWM_CH0_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 235:Generated_Source\PSoC5/CapSense.c ****         
 236:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 237:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 238:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 239:Generated_Source\PSoC5/CapSense.c ****         CY_SET_REG16(CapSense_RAW_CH0_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 240:Generated_Source\PSoC5/CapSense.c ****     
 241:Generated_Source\PSoC5/CapSense.c ****     #else
 242:Generated_Source\PSoC5/CapSense.c ****         /*Window PWM and Raw Counter AUX set */
 243:Generated_Source\PSoC5/CapSense.c ****         enableInterrupts = CyEnterCriticalSection();
 209              		.loc 1 243 0
 210 0056 FFF7FEFF 		bl	CyEnterCriticalSection
 211 005a 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 9


 212 005c FB71     		strb	r3, [r7, #7]
 244:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 213              		.loc 1 244 0
 214 005e 2F4A     		ldr	r2, .L2+20
 215 0060 2E4B     		ldr	r3, .L2+20
 216 0062 1B78     		ldrb	r3, [r3]
 217 0064 DBB2     		uxtb	r3, r3
 218 0066 43F00303 		orr	r3, r3, #3
 219 006a DBB2     		uxtb	r3, r3
 220 006c 1370     		strb	r3, [r2]
 245:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 221              		.loc 1 245 0
 222 006e 2C4A     		ldr	r2, .L2+24
 223 0070 2B4B     		ldr	r3, .L2+24
 224 0072 1B78     		ldrb	r3, [r3]
 225 0074 DBB2     		uxtb	r3, r3
 226 0076 43F00303 		orr	r3, r3, #3
 227 007a DBB2     		uxtb	r3, r3
 228 007c 1370     		strb	r3, [r2]
 246:Generated_Source\PSoC5/CapSense.c ****         CyExitCriticalSection(enableInterrupts);
 229              		.loc 1 246 0
 230 007e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 231 0080 1846     		mov	r0, r3
 232 0082 FFF7FEFF 		bl	CyExitCriticalSection
 247:Generated_Source\PSoC5/CapSense.c ****         
 248:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 249:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 233              		.loc 1 249 0
 234 0086 274B     		ldr	r3, .L2+28
 235 0088 FF22     		movs	r2, #255
 236 008a 1A70     		strb	r2, [r3]
 250:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 237              		.loc 1 250 0
 238 008c 264B     		ldr	r3, .L2+32
 239 008e FF22     		movs	r2, #255
 240 0090 1A70     		strb	r2, [r3]
 251:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 241              		.loc 1 251 0
 242 0092 264B     		ldr	r3, .L2+36
 243 0094 FF22     		movs	r2, #255
 244 0096 1A70     		strb	r2, [r3]
 252:Generated_Source\PSoC5/CapSense.c ****         
 253:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 254:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 245              		.loc 1 254 0
 246 0098 254B     		ldr	r3, .L2+40
 247 009a FF22     		movs	r2, #255
 248 009c 1A70     		strb	r2, [r3]
 255:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 249              		.loc 1 255 0
 250 009e 254B     		ldr	r3, .L2+44
 251 00a0 FF22     		movs	r2, #255
 252 00a2 1A70     		strb	r2, [r3]
 256:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 253              		.loc 1 256 0
 254 00a4 244B     		ldr	r3, .L2+48
 255 00a6 FF22     		movs	r2, #255
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 10


 256 00a8 1A70     		strb	r2, [r3]
 257:Generated_Source\PSoC5/CapSense.c ****         
 258:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 259:Generated_Source\PSoC5/CapSense.c ****     
 260:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 261:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 262:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 263:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 264:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 265:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH1_COUNTER_PTR, CapSense_MEASURE_FULL_RANGE);
 266:Generated_Source\PSoC5/CapSense.c ****             
 267:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 268:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL_REG      = CapSense_MEASURE_CTRL_ENABLE;
 269:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_CONTROL2_REG    |= CapSense_MEASURE_CTRL_PULSEWIDTH;
 270:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_RAW_CH1_PERIOD_PTR, CapSense_MEASURE_FULL_RANGE);
 271:Generated_Source\PSoC5/CapSense.c ****            
 272:Generated_Source\PSoC5/CapSense.c ****         #else
 273:Generated_Source\PSoC5/CapSense.c ****             /*Window PWM and Raw Counter AUX set */
 274:Generated_Source\PSoC5/CapSense.c ****             enableInterrupts = CyEnterCriticalSection();
 275:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 276:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_AUX_CONTROL_REG |= CapSense_AUXCTRL_FIFO_SINGLE_REG;
 277:Generated_Source\PSoC5/CapSense.c ****             CyExitCriticalSection(enableInterrupts);
 278:Generated_Source\PSoC5/CapSense.c ****             
 279:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 280:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 281:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 282:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_COUNTER_LO_REG   = CapSense_MEASURE_FULL_RANGE_LOW;
 283:Generated_Source\PSoC5/CapSense.c ****             
 284:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 285:Generated_Source\PSoC5/CapSense.c ****             
 286:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ADD_VALUE_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 287:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_HI_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 288:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_PERIOD_LO_REG    = CapSense_MEASURE_FULL_RANGE_LOW;
 289:Generated_Source\PSoC5/CapSense.c ****             
 290:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 291:Generated_Source\PSoC5/CapSense.c ****     
 292:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN) */
 293:Generated_Source\PSoC5/CapSense.c ****     
 294:Generated_Source\PSoC5/CapSense.c ****     /* Setup ISR */
 295:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 257              		.loc 1 295 0
 258 00aa 244B     		ldr	r3, .L2+52
 259 00ac 0122     		movs	r2, #1
 260 00ae 1A60     		str	r2, [r3]
 296:Generated_Source\PSoC5/CapSense.c ****     (void)CyIntSetVector(CapSense_IsrCH0_ISR_NUMBER, &CapSense_IsrCH0_ISR);
 261              		.loc 1 296 0
 262 00b0 2349     		ldr	r1, .L2+56
 263 00b2 0020     		movs	r0, #0
 264 00b4 FFF7FEFF 		bl	CyIntSetVector
 297:Generated_Source\PSoC5/CapSense.c ****     CyIntSetPriority(CapSense_IsrCH0_ISR_NUMBER, CapSense_IsrCH0_ISR_PRIORITY);
 265              		.loc 1 297 0
 266 00b8 0721     		movs	r1, #7
 267 00ba 0020     		movs	r0, #0
 268 00bc FFF7FEFF 		bl	CyIntSetPriority
 298:Generated_Source\PSoC5/CapSense.c ****     
 299:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 300:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 11


 301:Generated_Source\PSoC5/CapSense.c ****         CyIntSetVector(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR);
 302:Generated_Source\PSoC5/CapSense.c ****         CyIntSetPriority(CapSense_IsrCH1_ISR_NUMBER, CapSense_IsrCH1_ISR_PRIORITY);
 303:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 304:Generated_Source\PSoC5/CapSense.c ****     
 305:Generated_Source\PSoC5/CapSense.c ****     /* Setup AMux Bus: Connect Cmod, Cmp, Idac */
 306:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Init();
 269              		.loc 1 306 0
 270 00c0 FFF7FEFF 		bl	CapSense_AMuxCH0_Init
 307:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMOD_CHANNEL);
 271              		.loc 1 307 0
 272 00c4 0C20     		movs	r0, #12
 273 00c6 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 308:Generated_Source\PSoC5/CapSense.c ****     CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_CMP_VP_CHANNEL);
 274              		.loc 1 308 0
 275 00ca 0D20     		movs	r0, #13
 276 00cc FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 309:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 310:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
 277              		.loc 1 310 0
 278 00d0 0E20     		movs	r0, #14
 279 00d2 FFF7FEFF 		bl	CapSense_AMuxCH0_Set
 311:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 312:Generated_Source\PSoC5/CapSense.c ****     
 313:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 314:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Init();
 315:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMOD_CHANNEL);
 316:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_CMP_VP_CHANNEL);
 317:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 318:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
 319:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 320:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 321:Generated_Source\PSoC5/CapSense.c ****     
 322:Generated_Source\PSoC5/CapSense.c ****     /* Int Rb */
 323:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
 324:Generated_Source\PSoC5/CapSense.c ****         CapSense_InitRb();
 325:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB) */
 326:Generated_Source\PSoC5/CapSense.c ****     
 327:Generated_Source\PSoC5/CapSense.c ****     /* Enable window generation */
 328:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 280              		.loc 1 328 0
 281 00d6 1B4A     		ldr	r2, .L2+60
 282 00d8 1A4B     		ldr	r3, .L2+60
 283 00da 1B78     		ldrb	r3, [r3]
 284 00dc DBB2     		uxtb	r3, r3
 285 00de 43F00403 		orr	r3, r3, #4
 286 00e2 DBB2     		uxtb	r3, r3
 287 00e4 1370     		strb	r3, [r2]
 329:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 330:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 331:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 332:Generated_Source\PSoC5/CapSense.c ****     
 333:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Cmp and Idac */
 334:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Init();
 288              		.loc 1 334 0
 289 00e6 FFF7FEFF 		bl	CapSense_CompCH0_Init
 335:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 336:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Init();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 12


 290              		.loc 1 336 0
 291 00ea FFF7FEFF 		bl	CapSense_IdacCH0_Init
 337:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetPolarity(CapSense_IdacCH0_IDIR);
 292              		.loc 1 337 0
 293 00ee 0020     		movs	r0, #0
 294 00f0 FFF7FEFF 		bl	CapSense_IdacCH0_SetPolarity
 338:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetRange(CapSense_IDAC_RANGE_VALUE);
 295              		.loc 1 338 0
 296 00f4 0420     		movs	r0, #4
 297 00f6 FFF7FEFF 		bl	CapSense_IdacCH0_SetRange
 339:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 298              		.loc 1 339 0
 299 00fa 0020     		movs	r0, #0
 300 00fc FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 340:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 341:Generated_Source\PSoC5/CapSense.c ****     
 342:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 343:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Init();
 344:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 345:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Init();
 346:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetPolarity(CapSense_IdacCH1_IDIR);
 347:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetRange(CapSense_IDAC_RANGE_VALUE);
 348:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
 349:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 350:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 351:Generated_Source\PSoC5/CapSense.c ****     
 352:Generated_Source\PSoC5/CapSense.c ****     /* Initialize Vref if as VDAC */
 353:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 354:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Init();
 355:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 356:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Init();
 357:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 358:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 359:Generated_Source\PSoC5/CapSense.c **** }
 301              		.loc 1 359 0
 302 0100 00BF     		nop
 303 0102 0837     		adds	r7, r7, #8
 304              		.cfi_def_cfa_offset 8
 305 0104 BD46     		mov	sp, r7
 306              		.cfi_def_cfa_register 13
 307              		@ sp needed
 308 0106 80BD     		pop	{r7, pc}
 309              	.L3:
 310              		.align	2
 311              	.L2:
 312 0108 9A640040 		.word	1073767578
 313 010c 9B640040 		.word	1073767579
 314 0110 2A640040 		.word	1073767466
 315 0114 4A640040 		.word	1073767498
 316 0118 89640040 		.word	1073767561
 317 011c 98640040 		.word	1073767576
 318 0120 98650040 		.word	1073767832
 319 0124 28640040 		.word	1073767464
 320 0128 48640040 		.word	1073767496
 321 012c 08640040 		.word	1073767432
 322 0130 28650040 		.word	1073767720
 323 0134 58650040 		.word	1073767768
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 13


 324 0138 48650040 		.word	1073767752
 325 013c 80E100E0 		.word	-536813184
 326 0140 00000000 		.word	CapSense_IsrCH0_ISR
 327 0144 7B640040 		.word	1073767547
 328              		.cfi_endproc
 329              	.LFE0:
 330              		.size	CapSense_Init, .-CapSense_Init
 331              		.section	.text.CapSense_Enable,"ax",%progbits
 332              		.align	2
 333              		.global	CapSense_Enable
 334              		.thumb
 335              		.thumb_func
 336              		.type	CapSense_Enable, %function
 337              	CapSense_Enable:
 338              	.LFB1:
 360:Generated_Source\PSoC5/CapSense.c **** 
 361:Generated_Source\PSoC5/CapSense.c **** 
 362:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 363:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Enable
 364:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 365:Generated_Source\PSoC5/CapSense.c **** *
 366:Generated_Source\PSoC5/CapSense.c **** * Summary:
 367:Generated_Source\PSoC5/CapSense.c **** *  Enables active mode power template bits for number of component used within 
 368:Generated_Source\PSoC5/CapSense.c **** *  CapSense.
 369:Generated_Source\PSoC5/CapSense.c **** *
 370:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 371:Generated_Source\PSoC5/CapSense.c **** *  None
 372:Generated_Source\PSoC5/CapSense.c **** *
 373:Generated_Source\PSoC5/CapSense.c **** * Return:
 374:Generated_Source\PSoC5/CapSense.c **** *  None
 375:Generated_Source\PSoC5/CapSense.c **** *
 376:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 377:Generated_Source\PSoC5/CapSense.c **** void CapSense_Enable(void) 
 378:Generated_Source\PSoC5/CapSense.c **** {
 339              		.loc 1 378 0
 340              		.cfi_startproc
 341              		@ args = 0, pretend = 0, frame = 8
 342              		@ frame_needed = 1, uses_anonymous_args = 0
 343 0000 80B5     		push	{r7, lr}
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 82B0     		sub	sp, sp, #8
 348              		.cfi_def_cfa_offset 16
 349 0004 00AF     		add	r7, sp, #0
 350              		.cfi_def_cfa_register 7
 379:Generated_Source\PSoC5/CapSense.c ****     uint8 enableInterrupts;
 380:Generated_Source\PSoC5/CapSense.c ****     
 381:Generated_Source\PSoC5/CapSense.c ****     enableInterrupts = CyEnterCriticalSection();
 351              		.loc 1 381 0
 352 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 353 000a 0346     		mov	r3, r0
 354 000c FB71     		strb	r3, [r7, #7]
 382:Generated_Source\PSoC5/CapSense.c ****     
 383:Generated_Source\PSoC5/CapSense.c ****     /* Enable Prescaler */
 384:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 385:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 14


 386:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
 387:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  |= CapSense_PRESCALER_ACT_PWR_EN;
 388:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG |= CapSense_PRESCALER_STBY_PWR_EN;
 389:Generated_Source\PSoC5/CapSense.c ****         
 390:Generated_Source\PSoC5/CapSense.c ****     #else
 391:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 392:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 393:Generated_Source\PSoC5/CapSense.c ****     
 394:Generated_Source\PSoC5/CapSense.c ****     /* Enable ScanSpeed */
 395:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG |= CapSense_SCANSPEED_CTRL_ENABLE;
 355              		.loc 1 395 0
 356 000e 1C4A     		ldr	r2, .L5
 357 0010 1B4B     		ldr	r3, .L5
 358 0012 1B78     		ldrb	r3, [r3]
 359 0014 DBB2     		uxtb	r3, r3
 360 0016 43F02003 		orr	r3, r3, #32
 361 001a DBB2     		uxtb	r3, r3
 362 001c 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC5/CapSense.c ****     
 397:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH0 */
 398:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 399:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 400:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  |= CapSense_PWM_CH0_ACT_PWR_EN;
 401:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG |= CapSense_PWM_CH0_STBY_PWR_EN;
 402:Generated_Source\PSoC5/CapSense.c ****         
 403:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 404:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  |= CapSense_RAW_CH0_ACT_PWR_EN;
 405:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG |= CapSense_RAW_CH0_STBY_PWR_EN;
 406:Generated_Source\PSoC5/CapSense.c ****         
 407:Generated_Source\PSoC5/CapSense.c ****     #else
 408:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 409:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 410:Generated_Source\PSoC5/CapSense.c ****         
 411:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 412:Generated_Source\PSoC5/CapSense.c ****     
 413:Generated_Source\PSoC5/CapSense.c ****     /* Enable Measure CH1*/
 414:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 415:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 416:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 417:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  |= CapSense_PWM_CH1_ACT_PWR_EN;
 418:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG |= CapSense_PWM_CH1_STBY_PWR_EN;
 419:Generated_Source\PSoC5/CapSense.c ****             
 420:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 421:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  |= CapSense_RAW_CH1_ACT_PWR_EN;
 422:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG |= CapSense_RAW_CH1_STBY_PWR_EN;
 423:Generated_Source\PSoC5/CapSense.c ****            
 424:Generated_Source\PSoC5/CapSense.c ****         #else
 425:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 426:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 427:Generated_Source\PSoC5/CapSense.c ****         
 428:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 429:Generated_Source\PSoC5/CapSense.c ****     
 430:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
 431:Generated_Source\PSoC5/CapSense.c ****     
 432:Generated_Source\PSoC5/CapSense.c ****     /* Enable the Clock */
 433:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 434:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Enable();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 15


 363              		.loc 1 434 0
 364 001e FFF7FEFF 		bl	CapSense_IntClock_Start
 435:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 436:Generated_Source\PSoC5/CapSense.c ****     
 437:Generated_Source\PSoC5/CapSense.c ****     /* Setup Cmp and Idac */
 438:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Enable();
 365              		.loc 1 438 0
 366 0022 FFF7FEFF 		bl	CapSense_CompCH0_Enable
 439:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 440:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Enable();
 367              		.loc 1 440 0
 368 0026 FFF7FEFF 		bl	CapSense_IdacCH0_Enable
 441:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 442:Generated_Source\PSoC5/CapSense.c ****     
 443:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 444:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Enable();
 445:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 446:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Enable();
 447:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 448:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 449:Generated_Source\PSoC5/CapSense.c ****     
 450:Generated_Source\PSoC5/CapSense.c ****     /* Enable Vref */
 451:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 452:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Enable();
 453:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_SetValue(CapSense_VdacRefCH0_DEFAULT_DATA);
 454:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 455:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Enable();
 456:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_SetValue(CapSense_VdacRefCH1_DEFAULT_DATA);
 457:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 458:Generated_Source\PSoC5/CapSense.c ****     #else
 459:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 460:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG |= CapSense_BufCH0_STBY_PWR_EN;
 369              		.loc 1 460 0
 370 002a 164A     		ldr	r2, .L5+4
 371 002c 154B     		ldr	r3, .L5+4
 372 002e 1B78     		ldrb	r3, [r3]
 373 0030 DBB2     		uxtb	r3, r3
 374 0032 43F01003 		orr	r3, r3, #16
 375 0036 DBB2     		uxtb	r3, r3
 376 0038 1370     		strb	r3, [r2]
 461:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG  |= CapSense_BufCH0_ACT_PWR_EN;
 377              		.loc 1 461 0
 378 003a 134A     		ldr	r2, .L5+8
 379 003c 124B     		ldr	r3, .L5+8
 380 003e 1B78     		ldrb	r3, [r3]
 381 0040 DBB2     		uxtb	r3, r3
 382 0042 43F01003 		orr	r3, r3, #16
 383 0046 DBB2     		uxtb	r3, r3
 384 0048 1370     		strb	r3, [r2]
 462:Generated_Source\PSoC5/CapSense.c ****         
 463:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 464:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG |= CapSense_BufCH1_STBY_PWR_EN;
 465:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG  |= CapSense_BufCH1_ACT_PWR_EN;
 466:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 467:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 468:Generated_Source\PSoC5/CapSense.c ****     
 469:Generated_Source\PSoC5/CapSense.c ****     /* Set reference on AMux Bus */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 16


 470:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 471:Generated_Source\PSoC5/CapSense.c ****         /* Connect Vdac to AMux Bus */
 472:Generated_Source\PSoC5/CapSense.c ****         CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
 473:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 474:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
 475:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 476:Generated_Source\PSoC5/CapSense.c ****         
 477:Generated_Source\PSoC5/CapSense.c ****     #else
 478:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 479:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 385              		.loc 1 479 0
 386 004a 104A     		ldr	r2, .L5+12
 387 004c 0F4B     		ldr	r3, .L5+12
 388 004e 1B78     		ldrb	r3, [r3]
 389 0050 DBB2     		uxtb	r3, r3
 390 0052 43F00103 		orr	r3, r3, #1
 391 0056 DBB2     		uxtb	r3, r3
 392 0058 1370     		strb	r3, [r2]
 480:Generated_Source\PSoC5/CapSense.c ****         
 481:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 482:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 483:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 484:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)*/
 485:Generated_Source\PSoC5/CapSense.c ****     
 486:Generated_Source\PSoC5/CapSense.c ****     CyExitCriticalSection(enableInterrupts);
 393              		.loc 1 486 0
 394 005a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 395 005c 1846     		mov	r0, r3
 396 005e FFF7FEFF 		bl	CyExitCriticalSection
 487:Generated_Source\PSoC5/CapSense.c ****     
 488:Generated_Source\PSoC5/CapSense.c ****     /* Enable interrupt */
 489:Generated_Source\PSoC5/CapSense.c ****     CyIntEnable(CapSense_IsrCH0_ISR_NUMBER);
 397              		.loc 1 489 0
 398 0062 0B4B     		ldr	r3, .L5+16
 399 0064 0122     		movs	r2, #1
 400 0066 1A60     		str	r2, [r3]
 490:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 491:Generated_Source\PSoC5/CapSense.c ****         CyIntEnable(CapSense_IsrCH1_ISR_NUMBER);
 492:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 493:Generated_Source\PSoC5/CapSense.c ****     
 494:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Enable state */
 495:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_CAPSENSE_EN;
 401              		.loc 1 495 0
 402 0068 0A4A     		ldr	r2, .L5+20
 403 006a 0A4B     		ldr	r3, .L5+20
 404 006c 1B78     		ldrb	r3, [r3]
 405 006e DBB2     		uxtb	r3, r3
 406 0070 63F07F03 		orn	r3, r3, #127
 407 0074 DBB2     		uxtb	r3, r3
 408 0076 1370     		strb	r3, [r2]
 496:Generated_Source\PSoC5/CapSense.c **** }
 409              		.loc 1 496 0
 410 0078 00BF     		nop
 411 007a 0837     		adds	r7, r7, #8
 412              		.cfi_def_cfa_offset 8
 413 007c BD46     		mov	sp, r7
 414              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 17


 415              		@ sp needed
 416 007e 80BD     		pop	{r7, pc}
 417              	.L6:
 418              		.align	2
 419              	.L5:
 420 0080 99640040 		.word	1073767577
 421 0084 BB430040 		.word	1073759163
 422 0088 AB430040 		.word	1073759147
 423 008c 70580040 		.word	1073764464
 424 0090 00E100E0 		.word	-536813312
 425 0094 7B640040 		.word	1073767547
 426              		.cfi_endproc
 427              	.LFE1:
 428              		.size	CapSense_Enable, .-CapSense_Enable
 429              		.section	.text.CapSense_Start,"ax",%progbits
 430              		.align	2
 431              		.global	CapSense_Start
 432              		.thumb
 433              		.thumb_func
 434              		.type	CapSense_Start, %function
 435              	CapSense_Start:
 436              	.LFB2:
 497:Generated_Source\PSoC5/CapSense.c **** 
 498:Generated_Source\PSoC5/CapSense.c **** 
 499:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 500:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Start
 501:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 502:Generated_Source\PSoC5/CapSense.c **** *
 503:Generated_Source\PSoC5/CapSense.c **** * Summary:
 504:Generated_Source\PSoC5/CapSense.c **** *  Initializes registers and starts the CSD method of CapSense component. Reset 
 505:Generated_Source\PSoC5/CapSense.c **** *  all sensors to an inactive state. Enables interrupts for sensors scanning.
 506:Generated_Source\PSoC5/CapSense.c **** *  When Auto Tuning (SmartSense) mode is selected the tuning procedure is 
 507:Generated_Source\PSoC5/CapSense.c **** *  applied for all sensors.
 508:Generated_Source\PSoC5/CapSense.c **** *
 509:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 510:Generated_Source\PSoC5/CapSense.c **** *  None
 511:Generated_Source\PSoC5/CapSense.c **** *
 512:Generated_Source\PSoC5/CapSense.c **** * Return:
 513:Generated_Source\PSoC5/CapSense.c **** *  None
 514:Generated_Source\PSoC5/CapSense.c **** *
 515:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 516:Generated_Source\PSoC5/CapSense.c **** *  CapSense_initVar - used to check initial configuration, modified on 
 517:Generated_Source\PSoC5/CapSense.c **** *  first function call.
 518:Generated_Source\PSoC5/CapSense.c **** *  CapSense_lowLevelTuningDone - used to notify the Tuner GUI that 
 519:Generated_Source\PSoC5/CapSense.c **** *  tuning of scanning parameters are done.
 520:Generated_Source\PSoC5/CapSense.c **** *
 521:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 522:Generated_Source\PSoC5/CapSense.c **** *  No
 523:Generated_Source\PSoC5/CapSense.c **** *
 524:Generated_Source\PSoC5/CapSense.c **** * Note:
 525:Generated_Source\PSoC5/CapSense.c **** *  All widgets are enabled by default except proximity widgets. Proximity widgets 
 526:Generated_Source\PSoC5/CapSense.c **** *  must be manually enabled as their long scan time is incompatible 
 527:Generated_Source\PSoC5/CapSense.c **** *  with the fast response required of other widget types. 
 528:Generated_Source\PSoC5/CapSense.c **** *
 529:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 530:Generated_Source\PSoC5/CapSense.c **** void CapSense_Start(void)  
 531:Generated_Source\PSoC5/CapSense.c **** {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 18


 437              		.loc 1 531 0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 1, uses_anonymous_args = 0
 441 0000 80B5     		push	{r7, lr}
 442              		.cfi_def_cfa_offset 8
 443              		.cfi_offset 7, -8
 444              		.cfi_offset 14, -4
 445 0002 00AF     		add	r7, sp, #0
 446              		.cfi_def_cfa_register 7
 532:Generated_Source\PSoC5/CapSense.c ****     if (CapSense_initVar == 0u)
 447              		.loc 1 532 0
 448 0004 064B     		ldr	r3, .L9
 449 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 450 0008 002B     		cmp	r3, #0
 451 000a 04D1     		bne	.L8
 533:Generated_Source\PSoC5/CapSense.c ****     {
 534:Generated_Source\PSoC5/CapSense.c ****         CapSense_Init();
 452              		.loc 1 534 0
 453 000c FFF7FEFF 		bl	CapSense_Init
 535:Generated_Source\PSoC5/CapSense.c ****         CapSense_initVar = 1u;
 454              		.loc 1 535 0
 455 0010 034B     		ldr	r3, .L9
 456 0012 0122     		movs	r2, #1
 457 0014 1A70     		strb	r2, [r3]
 458              	.L8:
 536:Generated_Source\PSoC5/CapSense.c ****     }
 537:Generated_Source\PSoC5/CapSense.c ****     CapSense_Enable();
 459              		.loc 1 537 0
 460 0016 FFF7FEFF 		bl	CapSense_Enable
 538:Generated_Source\PSoC5/CapSense.c ****     
 539:Generated_Source\PSoC5/CapSense.c ****     /* AutoTunning start */
 540:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING)
 541:Generated_Source\PSoC5/CapSense.c ****         /* AutoTune by sensor or pair of sensor basis */
 542:Generated_Source\PSoC5/CapSense.c ****         CapSense_AutoTune();
 543:Generated_Source\PSoC5/CapSense.c ****         CapSense_lowLevelTuningDone = 1u;
 544:Generated_Source\PSoC5/CapSense.c ****     #endif /* (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) */
 545:Generated_Source\PSoC5/CapSense.c **** }
 461              		.loc 1 545 0
 462 001a 00BF     		nop
 463 001c 80BD     		pop	{r7, pc}
 464              	.L10:
 465 001e 00BF     		.align	2
 466              	.L9:
 467 0020 00000000 		.word	CapSense_initVar
 468              		.cfi_endproc
 469              	.LFE2:
 470              		.size	CapSense_Start, .-CapSense_Start
 471              		.section	.text.CapSense_Stop,"ax",%progbits
 472              		.align	2
 473              		.global	CapSense_Stop
 474              		.thumb
 475              		.thumb_func
 476              		.type	CapSense_Stop, %function
 477              	CapSense_Stop:
 478              	.LFB3:
 546:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 19


 547:Generated_Source\PSoC5/CapSense.c **** 
 548:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 549:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_Stop
 550:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 551:Generated_Source\PSoC5/CapSense.c **** *
 552:Generated_Source\PSoC5/CapSense.c **** * Summary:
 553:Generated_Source\PSoC5/CapSense.c **** *  Stops the sensors scanner, disables internal interrupts, and resets all 
 554:Generated_Source\PSoC5/CapSense.c **** *  sensors to an inactive state. Disables Active mode power template bits for 
 555:Generated_Source\PSoC5/CapSense.c **** *  number of component used within CapSense.
 556:Generated_Source\PSoC5/CapSense.c **** *
 557:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 558:Generated_Source\PSoC5/CapSense.c **** *  None
 559:Generated_Source\PSoC5/CapSense.c **** *
 560:Generated_Source\PSoC5/CapSense.c **** * Return:
 561:Generated_Source\PSoC5/CapSense.c **** *  None
 562:Generated_Source\PSoC5/CapSense.c **** *
 563:Generated_Source\PSoC5/CapSense.c **** * Side Effects:
 564:Generated_Source\PSoC5/CapSense.c **** *  This function should be called after scans will be completed.
 565:Generated_Source\PSoC5/CapSense.c **** *
 566:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 567:Generated_Source\PSoC5/CapSense.c **** void CapSense_Stop(void) 
 568:Generated_Source\PSoC5/CapSense.c **** {
 479              		.loc 1 568 0
 480              		.cfi_startproc
 481              		@ args = 0, pretend = 0, frame = 0
 482              		@ frame_needed = 1, uses_anonymous_args = 0
 483 0000 80B5     		push	{r7, lr}
 484              		.cfi_def_cfa_offset 8
 485              		.cfi_offset 7, -8
 486              		.cfi_offset 14, -4
 487 0002 00AF     		add	r7, sp, #0
 488              		.cfi_def_cfa_register 7
 569:Generated_Source\PSoC5/CapSense.c ****     /* Stop Capsensing */
 570:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_START);
 489              		.loc 1 570 0
 490 0004 1E4A     		ldr	r2, .L12
 491 0006 1E4B     		ldr	r3, .L12
 492 0008 1B78     		ldrb	r3, [r3]
 493 000a DBB2     		uxtb	r3, r3
 494 000c 23F00203 		bic	r3, r3, #2
 495 0010 DBB2     		uxtb	r3, r3
 496 0012 1370     		strb	r3, [r2]
 571:Generated_Source\PSoC5/CapSense.c ****     
 572:Generated_Source\PSoC5/CapSense.c ****     /* Disable interrupt */
 573:Generated_Source\PSoC5/CapSense.c ****     CyIntDisable(CapSense_IsrCH0_ISR_NUMBER);
 497              		.loc 1 573 0
 498 0014 1B4B     		ldr	r3, .L12+4
 499 0016 0122     		movs	r2, #1
 500 0018 1A60     		str	r2, [r3]
 574:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 575:Generated_Source\PSoC5/CapSense.c ****         CyIntDisable(CapSense_IsrCH1_ISR_NUMBER);
 576:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 577:Generated_Source\PSoC5/CapSense.c ****     
 578:Generated_Source\PSoC5/CapSense.c ****     /* Clear all sensors */
 579:Generated_Source\PSoC5/CapSense.c ****     CapSense_ClearSensors();
 501              		.loc 1 579 0
 502 001a FFF7FEFF 		bl	CapSense_ClearSensors
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 20


 580:Generated_Source\PSoC5/CapSense.c ****     
 581:Generated_Source\PSoC5/CapSense.c ****     /* Disable Prescaler */
 582:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
 583:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing  for UDB */
 584:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)        
 585:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_ACT_PWRMGR_REG  &= ~CapSense_PRESCALER_ACT_PWR_EN;
 586:Generated_Source\PSoC5/CapSense.c ****         CapSense_PRESCALER_STBY_PWRMGR_REG &= ~CapSense_PRESCALER_STBY_PWR_EN;
 587:Generated_Source\PSoC5/CapSense.c ****         
 588:Generated_Source\PSoC5/CapSense.c ****     #else
 589:Generated_Source\PSoC5/CapSense.c ****         /* Do nothing = config without prescaler */
 590:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
 591:Generated_Source\PSoC5/CapSense.c ****     
 592:Generated_Source\PSoC5/CapSense.c ****     /* Disable ScanSpeed */
 593:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_AUX_CONTROL_REG &= (uint8)(~CapSense_SCANSPEED_CTRL_ENABLE);
 503              		.loc 1 593 0
 504 001e 1A4A     		ldr	r2, .L12+8
 505 0020 194B     		ldr	r3, .L12+8
 506 0022 1B78     		ldrb	r3, [r3]
 507 0024 DBB2     		uxtb	r3, r3
 508 0026 23F02003 		bic	r3, r3, #32
 509 002a DBB2     		uxtb	r3, r3
 510 002c 1370     		strb	r3, [r2]
 594:Generated_Source\PSoC5/CapSense.c ****     
 595:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH0 */
 596:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 597:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 598:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH0_ACT_PWR_EN;
 599:Generated_Source\PSoC5/CapSense.c ****         CapSense_PWM_CH0_STBY_PWRMGR_REG &= ~CapSense_PWM_CH0_STBY_PWR_EN;
 600:Generated_Source\PSoC5/CapSense.c **** 
 601:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter */
 602:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH0_ACT_PWR_EN;
 603:Generated_Source\PSoC5/CapSense.c ****         CapSense_RAW_CH0_STBY_PWRMGR_REG &= ~CapSense_RAW_CH0_STBY_PWR_EN;
 604:Generated_Source\PSoC5/CapSense.c **** 
 605:Generated_Source\PSoC5/CapSense.c ****     #else
 606:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 607:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 608:Generated_Source\PSoC5/CapSense.c ****         
 609:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 610:Generated_Source\PSoC5/CapSense.c ****     
 611:Generated_Source\PSoC5/CapSense.c ****     /* Disable Measure CH1 */
 612:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 613:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 614:Generated_Source\PSoC5/CapSense.c ****             /* Window PWM */
 615:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_ACT_PWRMGR_REG  &= ~CapSense_PWM_CH1_ACT_PWR_EN;
 616:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH1_STBY_PWRMGR_REG &= ~CapSense_PWM_CH1_STBY_PWR_EN;
 617:Generated_Source\PSoC5/CapSense.c ****     
 618:Generated_Source\PSoC5/CapSense.c ****             /* Raw Counter */
 619:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_ACT_PWRMGR_REG  &= ~CapSense_RAW_CH1_ACT_PWR_EN;
 620:Generated_Source\PSoC5/CapSense.c ****             CapSense_RAW_CH1_STBY_PWRMGR_REG &= ~CapSense_RAW_CH1_STBY_PWR_EN;
 621:Generated_Source\PSoC5/CapSense.c ****            
 622:Generated_Source\PSoC5/CapSense.c ****         #else
 623:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM -  Do nothing */
 624:Generated_Source\PSoC5/CapSense.c ****         /* Raw Counter - Do nothing */
 625:Generated_Source\PSoC5/CapSense.c ****         
 626:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF) */
 627:Generated_Source\PSoC5/CapSense.c ****     
 628:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == TWO_CHANNELS_DESIGN)*/
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 21


 629:Generated_Source\PSoC5/CapSense.c ****     
 630:Generated_Source\PSoC5/CapSense.c ****     /* Disable the Clock */
 631:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CLOCK_SOURCE == CapSense_INTERNAL_CLOCK)
 632:Generated_Source\PSoC5/CapSense.c ****        CapSense_IntClock_Stop();
 511              		.loc 1 632 0
 512 002e FFF7FEFF 		bl	CapSense_IntClock_Stop
 633:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CLOCK_SOURCE */
 634:Generated_Source\PSoC5/CapSense.c ****     
 635:Generated_Source\PSoC5/CapSense.c ****     /* Disable power from Cmp and Idac */
 636:Generated_Source\PSoC5/CapSense.c ****     CapSense_CompCH0_Stop();
 513              		.loc 1 636 0
 514 0032 FFF7FEFF 		bl	CapSense_CompCH0_Stop
 637:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CURRENT_SOURCE)
 638:Generated_Source\PSoC5/CapSense.c ****         CapSense_IdacCH0_Stop();
 515              		.loc 1 638 0
 516 0036 FFF7FEFF 		bl	CapSense_IdacCH0_Stop
 639:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_CURRENT_SOURCE */
 640:Generated_Source\PSoC5/CapSense.c ****     
 641:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) 
 642:Generated_Source\PSoC5/CapSense.c ****         CapSense_CompCH1_Stop();
 643:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 644:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_Stop();
 645:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 646:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */    
 647:Generated_Source\PSoC5/CapSense.c ****     
 648:Generated_Source\PSoC5/CapSense.c ****     /* Disable Vref if as VDAC */
 649:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
 650:Generated_Source\PSoC5/CapSense.c ****         CapSense_VdacRefCH0_Stop();
 651:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 652:Generated_Source\PSoC5/CapSense.c ****             CapSense_VdacRefCH1_Stop();
 653:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE */
 654:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_VREF_OPTIONS */
 655:Generated_Source\PSoC5/CapSense.c **** 
 656:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
 657:Generated_Source\PSoC5/CapSense.c ****         /* The Idac turn off before */
 658:Generated_Source\PSoC5/CapSense.c ****     #else
 659:Generated_Source\PSoC5/CapSense.c ****         /* Enable CapSense Buf */
 660:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 517              		.loc 1 660 0
 518 003a 144A     		ldr	r2, .L12+12
 519 003c 134B     		ldr	r3, .L12+12
 520 003e 1B78     		ldrb	r3, [r3]
 521 0040 DBB2     		uxtb	r3, r3
 522 0042 23F00103 		bic	r3, r3, #1
 523 0046 DBB2     		uxtb	r3, r3
 524 0048 1370     		strb	r3, [r2]
 661:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_ACT_PWR_EN);
 525              		.loc 1 661 0
 526 004a 114A     		ldr	r2, .L12+16
 527 004c 104B     		ldr	r3, .L12+16
 528 004e 1B78     		ldrb	r3, [r3]
 529 0050 DBB2     		uxtb	r3, r3
 530 0052 23F01003 		bic	r3, r3, #16
 531 0056 DBB2     		uxtb	r3, r3
 532 0058 1370     		strb	r3, [r2]
 662:Generated_Source\PSoC5/CapSense.c ****         CapSense_BufCH0_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH0_STBY_PWR_EN);
 533              		.loc 1 662 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 22


 534 005a 0E4A     		ldr	r2, .L12+20
 535 005c 0D4B     		ldr	r3, .L12+20
 536 005e 1B78     		ldrb	r3, [r3]
 537 0060 DBB2     		uxtb	r3, r3
 538 0062 23F01003 		bic	r3, r3, #16
 539 0066 DBB2     		uxtb	r3, r3
 540 0068 1370     		strb	r3, [r2]
 663:Generated_Source\PSoC5/CapSense.c ****         
 664:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 665:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG &= (uint8)(~CapSense_CSBUF_ENABLE);
 666:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_ACT_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_ACT_PWR_EN);
 667:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_STBY_PWRMGR_REG &= (uint8)(~CapSense_BufCH1_STBY_PWR_EN);
 668:Generated_Source\PSoC5/CapSense.c ****         #endif  /*(CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) */
 669:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
 670:Generated_Source\PSoC5/CapSense.c ****     
 671:Generated_Source\PSoC5/CapSense.c ****     /* Set CapSense Disable state */
 672:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG &= (uint8)(~CapSense_CTRL_CAPSENSE_EN);
 541              		.loc 1 672 0
 542 006a 054A     		ldr	r2, .L12
 543 006c 044B     		ldr	r3, .L12
 544 006e 1B78     		ldrb	r3, [r3]
 545 0070 DBB2     		uxtb	r3, r3
 546 0072 03F07F03 		and	r3, r3, #127
 547 0076 DBB2     		uxtb	r3, r3
 548 0078 1370     		strb	r3, [r2]
 673:Generated_Source\PSoC5/CapSense.c **** }
 549              		.loc 1 673 0
 550 007a 00BF     		nop
 551 007c 80BD     		pop	{r7, pc}
 552              	.L13:
 553 007e 00BF     		.align	2
 554              	.L12:
 555 0080 7B640040 		.word	1073767547
 556 0084 80E100E0 		.word	-536813184
 557 0088 99640040 		.word	1073767577
 558 008c 70580040 		.word	1073764464
 559 0090 AB430040 		.word	1073759147
 560 0094 BB430040 		.word	1073759163
 561              		.cfi_endproc
 562              	.LFE3:
 563              		.size	CapSense_Stop, .-CapSense_Stop
 564              		.section	.text.CapSense_FindNextSensor,"ax",%progbits
 565              		.align	2
 566              		.global	CapSense_FindNextSensor
 567              		.thumb
 568              		.thumb_func
 569              		.type	CapSense_FindNextSensor, %function
 570              	CapSense_FindNextSensor:
 571              	.LFB4:
 674:Generated_Source\PSoC5/CapSense.c **** 
 675:Generated_Source\PSoC5/CapSense.c **** 
 676:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 677:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 678:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextSensor
 679:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 680:Generated_Source\PSoC5/CapSense.c ****     *
 681:Generated_Source\PSoC5/CapSense.c ****     * Summary:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 23


 682:Generated_Source\PSoC5/CapSense.c ****     *  Finds next sensor to scan. 
 683:Generated_Source\PSoC5/CapSense.c ****     *
 684:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 685:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index of sensor.
 686:Generated_Source\PSoC5/CapSense.c ****     *
 687:Generated_Source\PSoC5/CapSense.c ****     * Return:
 688:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next sensor index to scan.
 689:Generated_Source\PSoC5/CapSense.c ****     *
 690:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 691:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 692:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 693:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 694:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 695:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 696:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 697:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 698:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 699:Generated_Source\PSoC5/CapSense.c ****     *
 700:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 701:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on current scanning scanning and should not
 702:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 703:Generated_Source\PSoC5/CapSense.c ****     *
 704:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 705:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextSensor(uint8 snsIndex) CYREENTRANT
 706:Generated_Source\PSoC5/CapSense.c ****     {
 572              		.loc 1 706 0
 573              		.cfi_startproc
 574              		@ args = 0, pretend = 0, frame = 16
 575              		@ frame_needed = 1, uses_anonymous_args = 0
 576              		@ link register save eliminated.
 577 0000 80B4     		push	{r7}
 578              		.cfi_def_cfa_offset 4
 579              		.cfi_offset 7, -4
 580 0002 85B0     		sub	sp, sp, #20
 581              		.cfi_def_cfa_offset 24
 582 0004 00AF     		add	r7, sp, #0
 583              		.cfi_def_cfa_register 7
 584 0006 0346     		mov	r3, r0
 585 0008 FB71     		strb	r3, [r7, #7]
 586              	.L17:
 707:Generated_Source\PSoC5/CapSense.c ****         uint8 pos;
 708:Generated_Source\PSoC5/CapSense.c ****         uint8 enMask;
 709:Generated_Source\PSoC5/CapSense.c ****         
 710:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor enabled */
 711:Generated_Source\PSoC5/CapSense.c ****         do
 712:Generated_Source\PSoC5/CapSense.c ****         {
 713:Generated_Source\PSoC5/CapSense.c ****             /* Proceed with the next sensor */
 714:Generated_Source\PSoC5/CapSense.c ****             snsIndex++;
 587              		.loc 1 714 0
 588 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 589 000c 0133     		adds	r3, r3, #1
 590 000e FB71     		strb	r3, [r7, #7]
 715:Generated_Source\PSoC5/CapSense.c ****             if(snsIndex == CapSense_TOTAL_SENSOR_COUNT)
 591              		.loc 1 715 0
 592 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 593 0012 0C2B     		cmp	r3, #12
 594 0014 12D0     		beq	.L19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 24


 716:Generated_Source\PSoC5/CapSense.c ****             {
 717:Generated_Source\PSoC5/CapSense.c ****                 break;
 718:Generated_Source\PSoC5/CapSense.c ****             }
 719:Generated_Source\PSoC5/CapSense.c ****             pos = (snsIndex >> 3u);
 595              		.loc 1 719 0
 596 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 597 0018 DB08     		lsrs	r3, r3, #3
 598 001a FB73     		strb	r3, [r7, #15]
 720:Generated_Source\PSoC5/CapSense.c ****             enMask = 0x01u << (snsIndex & 0x07u);
 599              		.loc 1 720 0
 600 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 601 001e 03F00703 		and	r3, r3, #7
 602 0022 0122     		movs	r2, #1
 603 0024 02FA03F3 		lsl	r3, r2, r3
 604 0028 BB73     		strb	r3, [r7, #14]
 721:Generated_Source\PSoC5/CapSense.c ****         }    
 722:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[pos] & enMask) == 0u);
 605              		.loc 1 722 0
 606 002a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 607 002c 074A     		ldr	r2, .L20
 608 002e D25C     		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 609 0030 BB7B     		ldrb	r3, [r7, #14]
 610 0032 1340     		ands	r3, r3, r2
 611 0034 DBB2     		uxtb	r3, r3
 612 0036 002B     		cmp	r3, #0
 613 0038 E7D0     		beq	.L17
 614 003a 00E0     		b	.L16
 615              	.L19:
 717:Generated_Source\PSoC5/CapSense.c ****             }
 616              		.loc 1 717 0
 617 003c 00BF     		nop
 618              	.L16:
 723:Generated_Source\PSoC5/CapSense.c ****         
 724:Generated_Source\PSoC5/CapSense.c ****         return snsIndex;
 619              		.loc 1 724 0
 620 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 725:Generated_Source\PSoC5/CapSense.c ****     }
 621              		.loc 1 725 0
 622 0040 1846     		mov	r0, r3
 623 0042 1437     		adds	r7, r7, #20
 624              		.cfi_def_cfa_offset 4
 625 0044 BD46     		mov	sp, r7
 626              		.cfi_def_cfa_register 13
 627              		@ sp needed
 628 0046 80BC     		pop	{r7}
 629              		.cfi_restore 7
 630              		.cfi_def_cfa_offset 0
 631 0048 7047     		bx	lr
 632              	.L21:
 633 004a 00BF     		.align	2
 634              	.L20:
 635 004c 00000000 		.word	CapSense_sensorEnableMask
 636              		.cfi_endproc
 637              	.LFE4:
 638              		.size	CapSense_FindNextSensor, .-CapSense_FindNextSensor
 639              		.section	.text.CapSense_SetScanSlotSettings,"ax",%progbits
 640              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 25


 641              		.global	CapSense_SetScanSlotSettings
 642              		.thumb
 643              		.thumb_func
 644              		.type	CapSense_SetScanSlotSettings, %function
 645              	CapSense_SetScanSlotSettings:
 646              	.LFB5:
 726:Generated_Source\PSoC5/CapSense.c ****  #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
 727:Generated_Source\PSoC5/CapSense.c ****  
 728:Generated_Source\PSoC5/CapSense.c ****  
 729:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN)
 730:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
 731:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_FindNextPair
 732:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
 733:Generated_Source\PSoC5/CapSense.c ****     *
 734:Generated_Source\PSoC5/CapSense.c ****     * Summary:
 735:Generated_Source\PSoC5/CapSense.c ****     *  Finds next pair or sensor to scan. Sets condition bits to skip scanning.
 736:Generated_Source\PSoC5/CapSense.c ****     *  
 737:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
 738:Generated_Source\PSoC5/CapSense.c ****     *  snsIndex:  Current index pair of sensors.
 739:Generated_Source\PSoC5/CapSense.c ****     *
 740:Generated_Source\PSoC5/CapSense.c ****     * Return:
 741:Generated_Source\PSoC5/CapSense.c ****     *  Returns the next pair of sensors index to scan.
 742:Generated_Source\PSoC5/CapSense.c ****     *
 743:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
 744:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[ ] - used to store bit masks of enabled 
 745:Generated_Source\PSoC5/CapSense.c ****     *  sensors.
 746:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[0] contains the masked bits for sensors 0
 747:Generated_Source\PSoC5/CapSense.c ****     *  through 7 (sensor 0 is bit 0, sensor 1 is bit 1).
 748:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorEnableMask[1] contains the masked bits for sensors 
 749:Generated_Source\PSoC5/CapSense.c ****     *  8 through 15 (if needed), and so on.
 750:Generated_Source\PSoC5/CapSense.c ****     *    0 - sensor doesn't scan by CapSense_ScanEnabledWidgets().
 751:Generated_Source\PSoC5/CapSense.c ****     *    1 - sensor scans by CapSense_ScanEnabledWidgets().
 752:Generated_Source\PSoC5/CapSense.c ****     *
 753:Generated_Source\PSoC5/CapSense.c ****     * Note: 
 754:Generated_Source\PSoC5/CapSense.c ****     *  This function has effect on control signals set for scanning and should not
 755:Generated_Source\PSoC5/CapSense.c ****     *  be used outisde of component.
 756:Generated_Source\PSoC5/CapSense.c ****     *
 757:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
 758:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_FindNextPair(uint8 snsIndex) CYREENTRANT
 759:Generated_Source\PSoC5/CapSense.c ****     {
 760:Generated_Source\PSoC5/CapSense.c ****         uint8 posCh;
 761:Generated_Source\PSoC5/CapSense.c ****         uint8 enMaskCh;
 762:Generated_Source\PSoC5/CapSense.c ****         uint8 newRegValue;
 763:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh0 = snsIndex;
 764:Generated_Source\PSoC5/CapSense.c ****         uint8 indexCh1 = snsIndex + CapSense_TOTAL_SENSOR_COUNT__CH0;
 765:Generated_Source\PSoC5/CapSense.c ****         
 766:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 0 */
 767:Generated_Source\PSoC5/CapSense.c ****         do
 768:Generated_Source\PSoC5/CapSense.c ****         {
 769:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 770:Generated_Source\PSoC5/CapSense.c ****             indexCh0++;
 771:Generated_Source\PSoC5/CapSense.c ****             if (indexCh0 >= CapSense_TOTAL_SENSOR_COUNT__CH0)
 772:Generated_Source\PSoC5/CapSense.c ****             {
 773:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH1 */
 774:Generated_Source\PSoC5/CapSense.c ****                 indexCh0 = CapSense_END_OF_SCAN__CH0;
 775:Generated_Source\PSoC5/CapSense.c ****                 break;
 776:Generated_Source\PSoC5/CapSense.c ****             }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 26


 777:Generated_Source\PSoC5/CapSense.c ****             
 778:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh0 >> 3u);
 779:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh0 & 0x07u);
 780:Generated_Source\PSoC5/CapSense.c ****         }
 781:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 782:Generated_Source\PSoC5/CapSense.c ****         
 783:Generated_Source\PSoC5/CapSense.c ****         /* Find enabled sensor on channel 1 */
 784:Generated_Source\PSoC5/CapSense.c ****         do
 785:Generated_Source\PSoC5/CapSense.c ****         {
 786:Generated_Source\PSoC5/CapSense.c ****             /* Procced the scanning */
 787:Generated_Source\PSoC5/CapSense.c ****             indexCh1++;        
 788:Generated_Source\PSoC5/CapSense.c ****             if (indexCh1 >= CapSense_TOTAL_SENSOR_COUNT)
 789:Generated_Source\PSoC5/CapSense.c ****             {
 790:Generated_Source\PSoC5/CapSense.c ****                 /* Lets hadle now all from CH0 */
 791:Generated_Source\PSoC5/CapSense.c ****                 indexCh1 = CapSense_END_OF_SCAN__CH1;
 792:Generated_Source\PSoC5/CapSense.c ****                 break;
 793:Generated_Source\PSoC5/CapSense.c ****             }
 794:Generated_Source\PSoC5/CapSense.c ****             
 795:Generated_Source\PSoC5/CapSense.c ****             posCh = (indexCh1 >> 3u);
 796:Generated_Source\PSoC5/CapSense.c ****             enMaskCh = 0x01u << (indexCh1 & 0x07u);
 797:Generated_Source\PSoC5/CapSense.c ****         } 
 798:Generated_Source\PSoC5/CapSense.c ****         while((CapSense_sensorEnableMask[posCh] & enMaskCh) == 0u);
 799:Generated_Source\PSoC5/CapSense.c ****         
 800:Generated_Source\PSoC5/CapSense.c ****         indexCh1 -= CapSense_TOTAL_SENSOR_COUNT__CH0;
 801:Generated_Source\PSoC5/CapSense.c ****         
 802:Generated_Source\PSoC5/CapSense.c ****         /* Find the pair to scan */
 803:Generated_Source\PSoC5/CapSense.c ****         if(indexCh0 == indexCh1)
 804:Generated_Source\PSoC5/CapSense.c ****         {
 805:Generated_Source\PSoC5/CapSense.c ****             /* Scans TWO Channels */
 806:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh0;
 807:Generated_Source\PSoC5/CapSense.c ****             
 808:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= (CapSense_CTRL_WINDOW_EN__CH0 | 
 809:Generated_Source\PSoC5/CapSense.c ****                                              CapSense_CTRL_WINDOW_EN__CH1);
 810:Generated_Source\PSoC5/CapSense.c ****         }
 811:Generated_Source\PSoC5/CapSense.c ****         else if(indexCh0 < indexCh1)
 812:Generated_Source\PSoC5/CapSense.c ****         {
 813:Generated_Source\PSoC5/CapSense.c ****            /* Scans Channel ONE only */
 814:Generated_Source\PSoC5/CapSense.c ****            snsIndex = indexCh0;
 815:Generated_Source\PSoC5/CapSense.c ****            
 816:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 817:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH0;
 818:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH1;
 819:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 820:Generated_Source\PSoC5/CapSense.c ****         }
 821:Generated_Source\PSoC5/CapSense.c ****         else
 822:Generated_Source\PSoC5/CapSense.c ****         {
 823:Generated_Source\PSoC5/CapSense.c ****             /* Scans Channel TWO only */
 824:Generated_Source\PSoC5/CapSense.c ****             snsIndex = indexCh1;
 825:Generated_Source\PSoC5/CapSense.c ****             
 826:Generated_Source\PSoC5/CapSense.c ****             newRegValue = CapSense_CONTROL_REG;
 827:Generated_Source\PSoC5/CapSense.c ****             newRegValue |= CapSense_CTRL_WINDOW_EN__CH1;
 828:Generated_Source\PSoC5/CapSense.c ****             newRegValue &= ~CapSense_CTRL_WINDOW_EN__CH0;
 829:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG = newRegValue;
 830:Generated_Source\PSoC5/CapSense.c ****         }
 831:Generated_Source\PSoC5/CapSense.c ****         
 832:Generated_Source\PSoC5/CapSense.c ****         return (snsIndex);
 833:Generated_Source\PSoC5/CapSense.c ****     }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 27


 834:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN */
 835:Generated_Source\PSoC5/CapSense.c **** 
 836:Generated_Source\PSoC5/CapSense.c **** 
 837:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
 838:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSlotSettings
 839:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 840:Generated_Source\PSoC5/CapSense.c **** *
 841:Generated_Source\PSoC5/CapSense.c **** * Summary:
 842:Generated_Source\PSoC5/CapSense.c **** *  Sets the scan settings of the selected scan slot (sensor or pair of sensors). 
 843:Generated_Source\PSoC5/CapSense.c **** *  The scan settings incorporate IDAC value (for IDAC configurations) for every 
 844:Generated_Source\PSoC5/CapSense.c **** *  sensor and resolution. The resolution is the same for all sensors within 
 845:Generated_Source\PSoC5/CapSense.c **** *  widget.
 846:Generated_Source\PSoC5/CapSense.c **** *
 847:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 848:Generated_Source\PSoC5/CapSense.c **** *  slot:  Scan slot number (sensor or pair of sensors).
 849:Generated_Source\PSoC5/CapSense.c **** *
 850:Generated_Source\PSoC5/CapSense.c **** * Return:
 851:Generated_Source\PSoC5/CapSense.c **** *  None
 852:Generated_Source\PSoC5/CapSense.c **** *
 853:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 854:Generated_Source\PSoC5/CapSense.c **** *  CapSense_idacSettings[] - used to store idac value for every sensor.
 855:Generated_Source\PSoC5/CapSense.c **** *  CapSense_widgetResolution[] - used to store scan resolution of every 
 856:Generated_Source\PSoC5/CapSense.c **** *  widget.
 857:Generated_Source\PSoC5/CapSense.c **** *
 858:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 859:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSlotSettings(uint8 slot) CYREENTRANT
 860:Generated_Source\PSoC5/CapSense.c **** {
 647              		.loc 1 860 0
 648              		.cfi_startproc
 649              		@ args = 0, pretend = 0, frame = 16
 650              		@ frame_needed = 1, uses_anonymous_args = 0
 651 0000 80B5     		push	{r7, lr}
 652              		.cfi_def_cfa_offset 8
 653              		.cfi_offset 7, -8
 654              		.cfi_offset 14, -4
 655 0002 84B0     		sub	sp, sp, #16
 656              		.cfi_def_cfa_offset 24
 657 0004 00AF     		add	r7, sp, #0
 658              		.cfi_def_cfa_register 7
 659 0006 0346     		mov	r3, r0
 660 0008 FB71     		strb	r3, [r7, #7]
 861:Generated_Source\PSoC5/CapSense.c ****     uint8 widget;
 862:Generated_Source\PSoC5/CapSense.c ****     
 863:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 864:Generated_Source\PSoC5/CapSense.c ****         /* Define widget sensor belongs to */
 865:Generated_Source\PSoC5/CapSense.c ****         widget = CapSense_widgetNumber[slot];
 661              		.loc 1 865 0
 662 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 663 000c 0B4A     		ldr	r2, .L23
 664 000e D35C     		ldrb	r3, [r2, r3]
 665 0010 FB73     		strb	r3, [r7, #15]
 866:Generated_Source\PSoC5/CapSense.c ****         
 867:Generated_Source\PSoC5/CapSense.c ****         /* Set Idac Value */
 868:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
 869:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 666              		.loc 1 869 0
 667 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 28


 668 0014 0A4A     		ldr	r2, .L23+4
 669 0016 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 670 0018 1846     		mov	r0, r3
 671 001a FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
 870:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_CURRENT_SOURCE */
 871:Generated_Source\PSoC5/CapSense.c ****         
 872:Generated_Source\PSoC5/CapSense.c ****         /* Window PWM */
 873:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 874:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 875:Generated_Source\PSoC5/CapSense.c ****                 ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_LO
 876:Generated_Source\PSoC5/CapSense.c ****         #else
 877:Generated_Source\PSoC5/CapSense.c ****             CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 672              		.loc 1 877 0
 673 001e 094A     		ldr	r2, .L23+8
 674 0020 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 675 0022 0949     		ldr	r1, .L23+12
 676 0024 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 677 0026 1370     		strb	r3, [r2]
 878:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF) */ 
 879:Generated_Source\PSoC5/CapSense.c **** 
 880:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 881:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 882:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 883:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 884:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 678              		.loc 1 884 0
 679 0028 084B     		ldr	r3, .L23+16
 680 002a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 681 002c 1846     		mov	r0, r3
 682 002e FFF7FEFF 		bl	CapSense_SetPrescaler
 885:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 886:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 887:Generated_Source\PSoC5/CapSense.c ****                */
 888:Generated_Source\PSoC5/CapSense.c **** 
 889:Generated_Source\PSoC5/CapSense.c ****     #else
 890:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH0)
 891:Generated_Source\PSoC5/CapSense.c ****         {
 892:Generated_Source\PSoC5/CapSense.c ****             /* Define widget sensor belongs to */
 893:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot];
 894:Generated_Source\PSoC5/CapSense.c ****             
 895:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 896:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 897:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH0_SetValue(CapSense_idacSettings[slot]);
 898:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 899:Generated_Source\PSoC5/CapSense.c ****             
 900:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 901:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
 902:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH0_PERIOD_PTR,
 903:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 904:Generated_Source\PSoC5/CapSense.c ****             #else
 905:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH0_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 906:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 907:Generated_Source\PSoC5/CapSense.c ****         }
 908:Generated_Source\PSoC5/CapSense.c ****         
 909:Generated_Source\PSoC5/CapSense.c ****         if(slot < CapSense_TOTAL_SENSOR_COUNT__CH1)
 910:Generated_Source\PSoC5/CapSense.c ****         {
 911:Generated_Source\PSoC5/CapSense.c ****             widget = CapSense_widgetNumber[slot+CapSense_TOTAL_SENSOR_COUNT__CH0];
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 29


 912:Generated_Source\PSoC5/CapSense.c ****         
 913:Generated_Source\PSoC5/CapSense.c ****             /* Set Idac Value */
 914:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE)
 915:Generated_Source\PSoC5/CapSense.c ****                 CapSense_IdacCH1_SetValue(CapSense_idacSettings[slot+
 916:Generated_Source\PSoC5/CapSense.c ****                                                                              CapSense_TOTAL_SENSOR_
 917:Generated_Source\PSoC5/CapSense.c ****             #endif  /* CapSense_CURRENT_SOURCE */
 918:Generated_Source\PSoC5/CapSense.c ****             
 919:Generated_Source\PSoC5/CapSense.c ****             /* Set Pwm Resolution */
 920:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
 921:Generated_Source\PSoC5/CapSense.c ****                 CY_SET_REG16(CapSense_PWM_CH1_PERIOD_PTR,
 922:Generated_Source\PSoC5/CapSense.c ****                   ((uint16) CapSense_widgetResolution[widget] << 8u) | CapSense_MEASURE_FULL_RANGE_
 923:Generated_Source\PSoC5/CapSense.c ****             #else
 924:Generated_Source\PSoC5/CapSense.c ****                 CapSense_PWM_CH1_PERIOD_HI_REG = CapSense_widgetResolution[widget];
 925:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/ 
 926:Generated_Source\PSoC5/CapSense.c ****         }
 927:Generated_Source\PSoC5/CapSense.c **** 
 928:Generated_Source\PSoC5/CapSense.c ****         #if ( (CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 929:Generated_Source\PSoC5/CapSense.c ****               (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING) )
 930:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider[slot]);
 931:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS)
 932:Generated_Source\PSoC5/CapSense.c ****             CapSense_SetPrescaler(CapSense_analogSwitchDivider);
 933:Generated_Source\PSoC5/CapSense.c ****         #endif /* ((CapSense_MULTIPLE_PRESCALER_ENABLED) || \
 934:Generated_Source\PSoC5/CapSense.c ****                *   (CapSense_TUNING_METHOD == CapSense_AUTO_TUNING))
 935:Generated_Source\PSoC5/CapSense.c ****                */
 936:Generated_Source\PSoC5/CapSense.c **** 
 937:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
 938:Generated_Source\PSoC5/CapSense.c **** }
 683              		.loc 1 938 0
 684 0032 00BF     		nop
 685 0034 1037     		adds	r7, r7, #16
 686              		.cfi_def_cfa_offset 8
 687 0036 BD46     		mov	sp, r7
 688              		.cfi_def_cfa_register 13
 689              		@ sp needed
 690 0038 80BD     		pop	{r7, pc}
 691              	.L24:
 692 003a 00BF     		.align	2
 693              	.L23:
 694 003c 00000000 		.word	CapSense_widgetNumber
 695 0040 00000000 		.word	CapSense_idacSettings
 696 0044 58640040 		.word	1073767512
 697 0048 00000000 		.word	CapSense_widgetResolution
 698 004c 00000000 		.word	CapSense_analogSwitchDivider
 699              		.cfi_endproc
 700              	.LFE5:
 701              		.size	CapSense_SetScanSlotSettings, .-CapSense_SetScanSlotSettings
 702              		.section	.text.CapSense_ScanSensor,"ax",%progbits
 703              		.align	2
 704              		.global	CapSense_ScanSensor
 705              		.thumb
 706              		.thumb_func
 707              		.type	CapSense_ScanSensor, %function
 708              	CapSense_ScanSensor:
 709              	.LFB6:
 939:Generated_Source\PSoC5/CapSense.c **** 
 940:Generated_Source\PSoC5/CapSense.c **** 
 941:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 30


 942:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanSensor
 943:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
 944:Generated_Source\PSoC5/CapSense.c **** *
 945:Generated_Source\PSoC5/CapSense.c **** * Summary:
 946:Generated_Source\PSoC5/CapSense.c **** *  Sets scan settings and starts scanning a sensor or pair of combined sensors
 947:Generated_Source\PSoC5/CapSense.c **** *  on each channel. If two channels are configured, two sensors may be scanned 
 948:Generated_Source\PSoC5/CapSense.c **** *  at the same time. After scanning is complete the isr copies the measured 
 949:Generated_Source\PSoC5/CapSense.c **** *  sensor raw data to the global array. Use of the isr ensures this function 
 950:Generated_Source\PSoC5/CapSense.c **** *  is non-blocking. Each sensor has a unique number within the sensor array. 
 951:Generated_Source\PSoC5/CapSense.c **** *  This number is assigned by the CapSense customizer in sequence.
 952:Generated_Source\PSoC5/CapSense.c **** *
 953:Generated_Source\PSoC5/CapSense.c **** * Parameters:
 954:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
 955:Generated_Source\PSoC5/CapSense.c **** *
 956:Generated_Source\PSoC5/CapSense.c **** * Return:
 957:Generated_Source\PSoC5/CapSense.c **** *  None
 958:Generated_Source\PSoC5/CapSense.c **** *
 959:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
 960:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
 961:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and mode of scan as single scan.
 962:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
 963:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one.
 964:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
 965:Generated_Source\PSoC5/CapSense.c **** *  Sets to provided sensor argument.
 966:Generated_Source\PSoC5/CapSense.c **** *
 967:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
 968:Generated_Source\PSoC5/CapSense.c **** *  No
 969:Generated_Source\PSoC5/CapSense.c **** *
 970:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
 971:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanSensor(uint8 sensor)  
 972:Generated_Source\PSoC5/CapSense.c **** {
 710              		.loc 1 972 0
 711              		.cfi_startproc
 712              		@ args = 0, pretend = 0, frame = 8
 713              		@ frame_needed = 1, uses_anonymous_args = 0
 714 0000 80B5     		push	{r7, lr}
 715              		.cfi_def_cfa_offset 8
 716              		.cfi_offset 7, -8
 717              		.cfi_offset 14, -4
 718 0002 82B0     		sub	sp, sp, #8
 719              		.cfi_def_cfa_offset 16
 720 0004 00AF     		add	r7, sp, #0
 721              		.cfi_def_cfa_register 7
 722 0006 0346     		mov	r3, r0
 723 0008 FB71     		strb	r3, [r7, #7]
 973:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
 974:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 724              		.loc 1 974 0
 725 000a 084B     		ldr	r3, .L26
 726 000c 0022     		movs	r2, #0
 727 000e 1A70     		strb	r2, [r3]
 975:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = sensor;
 728              		.loc 1 975 0
 729 0010 074A     		ldr	r2, .L26+4
 730 0012 FB79     		ldrb	r3, [r7, #7]
 731 0014 1370     		strb	r3, [r2]
 976:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 31


 977:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
 978:Generated_Source\PSoC5/CapSense.c ****         /* Start of sensor scan */
 979:Generated_Source\PSoC5/CapSense.c ****         CapSense_csv = (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
 732              		.loc 1 979 0
 733 0016 054B     		ldr	r3, .L26
 734 0018 8122     		movs	r2, #129
 735 001a 1A70     		strb	r2, [r3]
 980:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan(sensor);
 736              		.loc 1 980 0
 737 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 738 001e 1846     		mov	r0, r3
 739 0020 FFF7FEFF 		bl	CapSense_PreScan
 981:Generated_Source\PSoC5/CapSense.c ****         
 982:Generated_Source\PSoC5/CapSense.c ****     #else
 983:Generated_Source\PSoC5/CapSense.c ****         /* CH0: check end of scan conditions */
 984:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH0)
 985:Generated_Source\PSoC5/CapSense.c ****         {
 986:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH0;
 987:Generated_Source\PSoC5/CapSense.c ****         }
 988:Generated_Source\PSoC5/CapSense.c ****         else
 989:Generated_Source\PSoC5/CapSense.c ****         {
 990:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH0;
 991:Generated_Source\PSoC5/CapSense.c ****         }
 992:Generated_Source\PSoC5/CapSense.c ****         
 993:Generated_Source\PSoC5/CapSense.c ****         /* CH1: check end of scan conditions */
 994:Generated_Source\PSoC5/CapSense.c ****         if(sensor < CapSense_TOTAL_SENSOR_COUNT__CH1)
 995:Generated_Source\PSoC5/CapSense.c ****         {
 996:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= CapSense_CTRL_WINDOW_EN__CH1;
 997:Generated_Source\PSoC5/CapSense.c ****         }
 998:Generated_Source\PSoC5/CapSense.c ****         else
 999:Generated_Source\PSoC5/CapSense.c ****         {
1000:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~CapSense_CTRL_WINDOW_EN__CH1;
1001:Generated_Source\PSoC5/CapSense.c ****         }
1002:Generated_Source\PSoC5/CapSense.c ****         
1003:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1004:Generated_Source\PSoC5/CapSense.c ****         if( ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u) || 
1005:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u) )
1006:Generated_Source\PSoC5/CapSense.c ****         {
1007:Generated_Source\PSoC5/CapSense.c ****         
1008:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= (CapSense_SW_STS_BUSY | CapSense_SW_CTRL_SINGLE_SCAN);
1009:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(sensor);
1010:Generated_Source\PSoC5/CapSense.c ****         }
1011:Generated_Source\PSoC5/CapSense.c ****         
1012:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1013:Generated_Source\PSoC5/CapSense.c **** }
 740              		.loc 1 1013 0
 741 0024 00BF     		nop
 742 0026 0837     		adds	r7, r7, #8
 743              		.cfi_def_cfa_offset 8
 744 0028 BD46     		mov	sp, r7
 745              		.cfi_def_cfa_register 13
 746              		@ sp needed
 747 002a 80BD     		pop	{r7, pc}
 748              	.L27:
 749              		.align	2
 750              	.L26:
 751 002c 00000000 		.word	CapSense_csv
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 32


 752 0030 00000000 		.word	CapSense_sensorIndex
 753              		.cfi_endproc
 754              	.LFE6:
 755              		.size	CapSense_ScanSensor, .-CapSense_ScanSensor
 756              		.section	.text.CapSense_ScanEnabledWidgets,"ax",%progbits
 757              		.align	2
 758              		.global	CapSense_ScanEnabledWidgets
 759              		.thumb
 760              		.thumb_func
 761              		.type	CapSense_ScanEnabledWidgets, %function
 762              	CapSense_ScanEnabledWidgets:
 763              	.LFB7:
1014:Generated_Source\PSoC5/CapSense.c **** 
1015:Generated_Source\PSoC5/CapSense.c **** 
1016:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1017:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ScanEnableWidgets
1018:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1019:Generated_Source\PSoC5/CapSense.c **** *
1020:Generated_Source\PSoC5/CapSense.c **** * Summary:
1021:Generated_Source\PSoC5/CapSense.c **** *  Scans all of the enabled widgets. Starts scanning a sensor or pair of sensors 
1022:Generated_Source\PSoC5/CapSense.c **** *  within enabled widget. The isr proceeding scanning next sensor or pair till 
1023:Generated_Source\PSoC5/CapSense.c **** *  all enabled widgets will be scanned. Use of the isr ensures this function is 
1024:Generated_Source\PSoC5/CapSense.c **** *  non-blocking. All widgets are enabled by default except proximity widgets. 
1025:Generated_Source\PSoC5/CapSense.c **** *  Proximity widgets must be manually enabled as their long scan time is 
1026:Generated_Source\PSoC5/CapSense.c **** *  incompatible with fast response desired of other widget types.
1027:Generated_Source\PSoC5/CapSense.c **** *
1028:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1029:Generated_Source\PSoC5/CapSense.c **** *  None
1030:Generated_Source\PSoC5/CapSense.c **** *
1031:Generated_Source\PSoC5/CapSense.c **** * Return:
1032:Generated_Source\PSoC5/CapSense.c **** *  None
1033:Generated_Source\PSoC5/CapSense.c **** *
1034:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1035:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1036:Generated_Source\PSoC5/CapSense.c **** *  Sets busy status(scan in progress) and clears single scan mode.
1037:Generated_Source\PSoC5/CapSense.c **** *  For two channel design the additional bits are set to define if scan a 
1038:Generated_Source\PSoC5/CapSense.c **** *  pair of sensors or single one. 
1039:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorIndex - used to store sensor scanning sensor number.
1040:Generated_Source\PSoC5/CapSense.c **** *  Sets to 0xFF and provided to function CapSense_FindNextSensor or
1041:Generated_Source\PSoC5/CapSense.c **** *  CapSense_FindNextPair, these functions starts with sensor index
1042:Generated_Source\PSoC5/CapSense.c **** *  increment and overflow of uint8 gives desired index 0.
1043:Generated_Source\PSoC5/CapSense.c **** *
1044:Generated_Source\PSoC5/CapSense.c **** * Reentrant:
1045:Generated_Source\PSoC5/CapSense.c **** *  No
1046:Generated_Source\PSoC5/CapSense.c **** *
1047:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1048:Generated_Source\PSoC5/CapSense.c **** void CapSense_ScanEnabledWidgets(void) 
1049:Generated_Source\PSoC5/CapSense.c **** {
 764              		.loc 1 1049 0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 1, uses_anonymous_args = 0
 768 0000 80B5     		push	{r7, lr}
 769              		.cfi_def_cfa_offset 8
 770              		.cfi_offset 7, -8
 771              		.cfi_offset 14, -4
 772 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 33


 773              		.cfi_def_cfa_register 7
1050:Generated_Source\PSoC5/CapSense.c ****     /* Clears status/control variable and set sensorIndex */
1051:Generated_Source\PSoC5/CapSense.c ****     CapSense_csv = 0u;
 774              		.loc 1 1051 0
 775 0004 124B     		ldr	r3, .L31
 776 0006 0022     		movs	r2, #0
 777 0008 1A70     		strb	r2, [r3]
1052:Generated_Source\PSoC5/CapSense.c ****     CapSense_sensorIndex = 0xFFu;
 778              		.loc 1 1052 0
 779 000a 124B     		ldr	r3, .L31+4
 780 000c FF22     		movs	r2, #255
 781 000e 1A70     		strb	r2, [r3]
1053:Generated_Source\PSoC5/CapSense.c ****     
1054:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1055:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor */
1056:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextSensor(CapSense_sensorIndex);
 782              		.loc 1 1056 0
 783 0010 104B     		ldr	r3, .L31+4
 784 0012 1B78     		ldrb	r3, [r3]
 785 0014 DBB2     		uxtb	r3, r3
 786 0016 1846     		mov	r0, r3
 787 0018 FFF7FEFF 		bl	CapSense_FindNextSensor
 788 001c 0346     		mov	r3, r0
 789 001e 1A46     		mov	r2, r3
 790 0020 0C4B     		ldr	r3, .L31+4
 791 0022 1A70     		strb	r2, [r3]
1057:Generated_Source\PSoC5/CapSense.c **** 
1058:Generated_Source\PSoC5/CapSense.c ****         /* Check end of scan condition */
1059:Generated_Source\PSoC5/CapSense.c ****         if(CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT)
 792              		.loc 1 1059 0
 793 0024 0B4B     		ldr	r3, .L31+4
 794 0026 1B78     		ldrb	r3, [r3]
 795 0028 DBB2     		uxtb	r3, r3
 796 002a 0B2B     		cmp	r3, #11
 797 002c 0DD8     		bhi	.L30
1060:Generated_Source\PSoC5/CapSense.c ****         {
1061:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
 798              		.loc 1 1061 0
 799 002e 084B     		ldr	r3, .L31
 800 0030 1B78     		ldrb	r3, [r3]
 801 0032 DBB2     		uxtb	r3, r3
 802 0034 43F00103 		orr	r3, r3, #1
 803 0038 DAB2     		uxtb	r2, r3
 804 003a 054B     		ldr	r3, .L31
 805 003c 1A70     		strb	r2, [r3]
1062:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
 806              		.loc 1 1062 0
 807 003e 054B     		ldr	r3, .L31+4
 808 0040 1B78     		ldrb	r3, [r3]
 809 0042 DBB2     		uxtb	r3, r3
 810 0044 1846     		mov	r0, r3
 811 0046 FFF7FEFF 		bl	CapSense_PreScan
 812              	.L30:
1063:Generated_Source\PSoC5/CapSense.c ****         }
1064:Generated_Source\PSoC5/CapSense.c ****         
1065:Generated_Source\PSoC5/CapSense.c ****     #else
1066:Generated_Source\PSoC5/CapSense.c ****         /* Find next sensor and set proper control register */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 34


1067:Generated_Source\PSoC5/CapSense.c ****         CapSense_sensorIndex = CapSense_FindNextPair(CapSense_sensorIndex);
1068:Generated_Source\PSoC5/CapSense.c ****         
1069:Generated_Source\PSoC5/CapSense.c ****         /* Start sensor scan */
1070:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH0) || 
1071:Generated_Source\PSoC5/CapSense.c ****            (CapSense_sensorIndex < CapSense_TOTAL_SENSOR_COUNT__CH1))
1072:Generated_Source\PSoC5/CapSense.c ****         {
1073:Generated_Source\PSoC5/CapSense.c ****             CapSense_csv |= CapSense_SW_STS_BUSY;
1074:Generated_Source\PSoC5/CapSense.c ****             CapSense_PreScan(CapSense_sensorIndex);
1075:Generated_Source\PSoC5/CapSense.c ****         }
1076:Generated_Source\PSoC5/CapSense.c ****         
1077:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1078:Generated_Source\PSoC5/CapSense.c **** }
 813              		.loc 1 1078 0
 814 004a 00BF     		nop
 815 004c 80BD     		pop	{r7, pc}
 816              	.L32:
 817 004e 00BF     		.align	2
 818              	.L31:
 819 0050 00000000 		.word	CapSense_csv
 820 0054 00000000 		.word	CapSense_sensorIndex
 821              		.cfi_endproc
 822              	.LFE7:
 823              		.size	CapSense_ScanEnabledWidgets, .-CapSense_ScanEnabledWidgets
 824              		.section	.text.CapSense_IsBusy,"ax",%progbits
 825              		.align	2
 826              		.global	CapSense_IsBusy
 827              		.thumb
 828              		.thumb_func
 829              		.type	CapSense_IsBusy, %function
 830              	CapSense_IsBusy:
 831              	.LFB8:
1079:Generated_Source\PSoC5/CapSense.c **** 
1080:Generated_Source\PSoC5/CapSense.c **** 
1081:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1082:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_IsBusy
1083:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1084:Generated_Source\PSoC5/CapSense.c **** *
1085:Generated_Source\PSoC5/CapSense.c **** * Summary:
1086:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of CapSense component. The 1 means that scanning in 
1087:Generated_Source\PSoC5/CapSense.c **** *  progress and 0 means that scanning is complete.
1088:Generated_Source\PSoC5/CapSense.c **** *
1089:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1090:Generated_Source\PSoC5/CapSense.c **** *  None
1091:Generated_Source\PSoC5/CapSense.c **** *
1092:Generated_Source\PSoC5/CapSense.c **** * Return:
1093:Generated_Source\PSoC5/CapSense.c **** *  Returns the state of scanning. 1 - scanning in progress, 0 - scanning 
1094:Generated_Source\PSoC5/CapSense.c **** *  completed.
1095:Generated_Source\PSoC5/CapSense.c **** *
1096:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1097:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csv - used to provide status and mode of scanning process. 
1098:Generated_Source\PSoC5/CapSense.c **** *  Checks the busy status.
1099:Generated_Source\PSoC5/CapSense.c **** *
1100:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1101:Generated_Source\PSoC5/CapSense.c **** uint8 CapSense_IsBusy(void) 
1102:Generated_Source\PSoC5/CapSense.c **** {
 832              		.loc 1 1102 0
 833              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 35


 834              		@ args = 0, pretend = 0, frame = 0
 835              		@ frame_needed = 1, uses_anonymous_args = 0
 836              		@ link register save eliminated.
 837 0000 80B4     		push	{r7}
 838              		.cfi_def_cfa_offset 4
 839              		.cfi_offset 7, -4
 840 0002 00AF     		add	r7, sp, #0
 841              		.cfi_def_cfa_register 7
1103:Generated_Source\PSoC5/CapSense.c ****     return ((0u != (CapSense_csv & CapSense_SW_STS_BUSY)) ? 1u : 0u);
 842              		.loc 1 1103 0
 843 0004 044B     		ldr	r3, .L35
 844 0006 1B78     		ldrb	r3, [r3]
 845 0008 DBB2     		uxtb	r3, r3
 846 000a 03F00103 		and	r3, r3, #1
 847 000e DBB2     		uxtb	r3, r3
1104:Generated_Source\PSoC5/CapSense.c **** }
 848              		.loc 1 1104 0
 849 0010 1846     		mov	r0, r3
 850 0012 BD46     		mov	sp, r7
 851              		.cfi_def_cfa_register 13
 852              		@ sp needed
 853 0014 80BC     		pop	{r7}
 854              		.cfi_restore 7
 855              		.cfi_def_cfa_offset 0
 856 0016 7047     		bx	lr
 857              	.L36:
 858              		.align	2
 859              	.L35:
 860 0018 00000000 		.word	CapSense_csv
 861              		.cfi_endproc
 862              	.LFE8:
 863              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 864              		.section	.text.CapSense_ReadSensorRaw,"ax",%progbits
 865              		.align	2
 866              		.global	CapSense_ReadSensorRaw
 867              		.thumb
 868              		.thumb_func
 869              		.type	CapSense_ReadSensorRaw, %function
 870              	CapSense_ReadSensorRaw:
 871              	.LFB9:
1105:Generated_Source\PSoC5/CapSense.c **** 
1106:Generated_Source\PSoC5/CapSense.c **** 
1107:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1108:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ReadSensorRaw
1109:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1110:Generated_Source\PSoC5/CapSense.c **** *
1111:Generated_Source\PSoC5/CapSense.c **** * Summary:
1112:Generated_Source\PSoC5/CapSense.c **** *  Returns scan sensor raw data from the CapSense_sensorRaw[] array. 
1113:Generated_Source\PSoC5/CapSense.c **** *  Each scan sensor has a unique number within the sensor array. This number 
1114:Generated_Source\PSoC5/CapSense.c **** *  is assigned by the CapSense customizer in sequence.
1115:Generated_Source\PSoC5/CapSense.c **** *
1116:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1117:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1118:Generated_Source\PSoC5/CapSense.c **** *
1119:Generated_Source\PSoC5/CapSense.c **** * Return:
1120:Generated_Source\PSoC5/CapSense.c **** *  Returns current raw data value for defined sensor number.
1121:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 36


1122:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1123:Generated_Source\PSoC5/CapSense.c **** *  CapSense_sensorRaw[] - used to store sensors raw data.
1124:Generated_Source\PSoC5/CapSense.c **** *
1125:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1126:Generated_Source\PSoC5/CapSense.c **** uint16 CapSense_ReadSensorRaw(uint8 sensor) 
1127:Generated_Source\PSoC5/CapSense.c **** {
 872              		.loc 1 1127 0
 873              		.cfi_startproc
 874              		@ args = 0, pretend = 0, frame = 8
 875              		@ frame_needed = 1, uses_anonymous_args = 0
 876              		@ link register save eliminated.
 877 0000 80B4     		push	{r7}
 878              		.cfi_def_cfa_offset 4
 879              		.cfi_offset 7, -4
 880 0002 83B0     		sub	sp, sp, #12
 881              		.cfi_def_cfa_offset 16
 882 0004 00AF     		add	r7, sp, #0
 883              		.cfi_def_cfa_register 7
 884 0006 0346     		mov	r3, r0
 885 0008 FB71     		strb	r3, [r7, #7]
1128:Generated_Source\PSoC5/CapSense.c ****     return (CapSense_sensorRaw[sensor]);
 886              		.loc 1 1128 0
 887 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 888 000c 034A     		ldr	r2, .L39
 889 000e 32F81330 		ldrh	r3, [r2, r3, lsl #1]
1129:Generated_Source\PSoC5/CapSense.c **** }
 890              		.loc 1 1129 0
 891 0012 1846     		mov	r0, r3
 892 0014 0C37     		adds	r7, r7, #12
 893              		.cfi_def_cfa_offset 4
 894 0016 BD46     		mov	sp, r7
 895              		.cfi_def_cfa_register 13
 896              		@ sp needed
 897 0018 80BC     		pop	{r7}
 898              		.cfi_restore 7
 899              		.cfi_def_cfa_offset 0
 900 001a 7047     		bx	lr
 901              	.L40:
 902              		.align	2
 903              	.L39:
 904 001c 00000000 		.word	CapSense_sensorRaw
 905              		.cfi_endproc
 906              	.LFE9:
 907              		.size	CapSense_ReadSensorRaw, .-CapSense_ReadSensorRaw
 908              		.section	.text.CapSense_ClearSensors,"ax",%progbits
 909              		.align	2
 910              		.global	CapSense_ClearSensors
 911              		.thumb
 912              		.thumb_func
 913              		.type	CapSense_ClearSensors, %function
 914              	CapSense_ClearSensors:
 915              	.LFB10:
1130:Generated_Source\PSoC5/CapSense.c **** 
1131:Generated_Source\PSoC5/CapSense.c **** 
1132:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1133:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_ClearSensors
1134:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 37


1135:Generated_Source\PSoC5/CapSense.c **** *
1136:Generated_Source\PSoC5/CapSense.c **** * Summary:
1137:Generated_Source\PSoC5/CapSense.c **** *  Resets all sensors to the non-sampling state by sequentially disconnecting
1138:Generated_Source\PSoC5/CapSense.c **** *  all sensors from Analog MUX Bus and putting them to inactive state.
1139:Generated_Source\PSoC5/CapSense.c **** *
1140:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1141:Generated_Source\PSoC5/CapSense.c **** *  None
1142:Generated_Source\PSoC5/CapSense.c **** *
1143:Generated_Source\PSoC5/CapSense.c **** * Return:
1144:Generated_Source\PSoC5/CapSense.c **** *  None
1145:Generated_Source\PSoC5/CapSense.c **** *
1146:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1147:Generated_Source\PSoC5/CapSense.c **** void CapSense_ClearSensors(void) 
1148:Generated_Source\PSoC5/CapSense.c **** {
 916              		.loc 1 1148 0
 917              		.cfi_startproc
 918              		@ args = 0, pretend = 0, frame = 8
 919              		@ frame_needed = 1, uses_anonymous_args = 0
 920 0000 80B5     		push	{r7, lr}
 921              		.cfi_def_cfa_offset 8
 922              		.cfi_offset 7, -8
 923              		.cfi_offset 14, -4
 924 0002 82B0     		sub	sp, sp, #8
 925              		.cfi_def_cfa_offset 16
 926 0004 00AF     		add	r7, sp, #0
 927              		.cfi_def_cfa_register 7
1149:Generated_Source\PSoC5/CapSense.c ****     uint8 i;
1150:Generated_Source\PSoC5/CapSense.c ****    
1151:Generated_Source\PSoC5/CapSense.c ****     for (i = 0u; i < CapSense_TOTAL_SENSOR_COUNT; i++)
 928              		.loc 1 1151 0
 929 0006 0023     		movs	r3, #0
 930 0008 FB71     		strb	r3, [r7, #7]
 931 000a 06E0     		b	.L42
 932              	.L43:
1152:Generated_Source\PSoC5/CapSense.c ****     {
1153:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(i);
 933              		.loc 1 1153 0 discriminator 3
 934 000c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 935 000e 1846     		mov	r0, r3
 936 0010 FFF7FEFF 		bl	CapSense_DisableSensor
1151:Generated_Source\PSoC5/CapSense.c ****     {
 937              		.loc 1 1151 0 discriminator 3
 938 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 939 0016 0133     		adds	r3, r3, #1
 940 0018 FB71     		strb	r3, [r7, #7]
 941              	.L42:
1151:Generated_Source\PSoC5/CapSense.c ****     {
 942              		.loc 1 1151 0 is_stmt 0 discriminator 1
 943 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 944 001c 0B2B     		cmp	r3, #11
 945 001e F5D9     		bls	.L43
1154:Generated_Source\PSoC5/CapSense.c ****     }
1155:Generated_Source\PSoC5/CapSense.c **** }
 946              		.loc 1 1155 0 is_stmt 1
 947 0020 00BF     		nop
 948 0022 0837     		adds	r7, r7, #8
 949              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 38


 950 0024 BD46     		mov	sp, r7
 951              		.cfi_def_cfa_register 13
 952              		@ sp needed
 953 0026 80BD     		pop	{r7, pc}
 954              		.cfi_endproc
 955              	.LFE10:
 956              		.size	CapSense_ClearSensors, .-CapSense_ClearSensors
 957              		.section	.text.CapSense_EnableSensor,"ax",%progbits
 958              		.align	2
 959              		.global	CapSense_EnableSensor
 960              		.thumb
 961              		.thumb_func
 962              		.type	CapSense_EnableSensor, %function
 963              	CapSense_EnableSensor:
 964              	.LFB11:
1156:Generated_Source\PSoC5/CapSense.c **** 
1157:Generated_Source\PSoC5/CapSense.c **** 
1158:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_IS_COMPLEX_SCANSLOTS)
1159:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1160:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_EnableScanSlot
1161:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1162:Generated_Source\PSoC5/CapSense.c ****     *
1163:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1164:Generated_Source\PSoC5/CapSense.c ****     *  Configures the selected slot to measure during the next measurement 
1165:Generated_Source\PSoC5/CapSense.c ****     *  cycle. The corresponding pin/pins are set to Analog High-Z mode and 
1166:Generated_Source\PSoC5/CapSense.c ****     *  connected to the Analog Mux Bus. This also enables the comparator function.
1167:Generated_Source\PSoC5/CapSense.c ****     *
1168:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1169:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1170:Generated_Source\PSoC5/CapSense.c ****     *
1171:Generated_Source\PSoC5/CapSense.c ****     * Return:
1172:Generated_Source\PSoC5/CapSense.c ****     *  None
1173:Generated_Source\PSoC5/CapSense.c ****     *
1174:Generated_Source\PSoC5/CapSense.c ****     * Global Constants:
1175:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1176:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1177:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1178:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1179:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1180:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1181:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1182:Generated_Source\PSoC5/CapSense.c ****     *  The bit 7 (msb) is used to define the sensor type: single or complex.
1183:Generated_Source\PSoC5/CapSense.c ****     *
1184:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1185:Generated_Source\PSoC5/CapSense.c ****     void CapSense_EnableScanSlot(uint8 slot) CYREENTRANT
1186:Generated_Source\PSoC5/CapSense.c ****     {
1187:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1188:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1189:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1190:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1191:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1192:Generated_Source\PSoC5/CapSense.c ****         
1193:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1194:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1195:Generated_Source\PSoC5/CapSense.c ****         {
1196:Generated_Source\PSoC5/CapSense.c ****             /* Enable sensor (signle) */
1197:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableSensor(slot);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 39


1198:Generated_Source\PSoC5/CapSense.c ****         }
1199:Generated_Source\PSoC5/CapSense.c ****         else
1200:Generated_Source\PSoC5/CapSense.c ****         {
1201:Generated_Source\PSoC5/CapSense.c ****             /* Enable complex sensor */
1202:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1203:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1204:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1205:Generated_Source\PSoC5/CapSense.c ****                         
1206:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1207:Generated_Source\PSoC5/CapSense.c ****             {
1208:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableSensor(index[j]);
1209:Generated_Source\PSoC5/CapSense.c ****             }
1210:Generated_Source\PSoC5/CapSense.c ****         } 
1211:Generated_Source\PSoC5/CapSense.c ****     }
1212:Generated_Source\PSoC5/CapSense.c ****     
1213:Generated_Source\PSoC5/CapSense.c ****     
1214:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1215:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_DisableScanSlot
1216:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1217:Generated_Source\PSoC5/CapSense.c ****     *
1218:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1219:Generated_Source\PSoC5/CapSense.c ****     *  Disables the selected slot. The corresponding pin/pis is/are disconnected 
1220:Generated_Source\PSoC5/CapSense.c ****     *  from the Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1221:Generated_Source\PSoC5/CapSense.c ****     *
1222:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1223:Generated_Source\PSoC5/CapSense.c ****     *  slot:  Slot number.
1224:Generated_Source\PSoC5/CapSense.c ****     *
1225:Generated_Source\PSoC5/CapSense.c ****     * Return:
1226:Generated_Source\PSoC5/CapSense.c ****     *  None
1227:Generated_Source\PSoC5/CapSense.c ****     *
1228:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1229:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_portTable[]  - used to store the port number that pin 
1230:Generated_Source\PSoC5/CapSense.c ****     *  belongs to for every sensor.
1231:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_maskTable[]  - used to store the pin within the port for 
1232:Generated_Source\PSoC5/CapSense.c ****     *  every sensor.
1233:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_indexTable[] - used to store indexes of complex sensors.
1234:Generated_Source\PSoC5/CapSense.c ****     *  The offset and position in this array are stored in port and mask table for 
1235:Generated_Source\PSoC5/CapSense.c ****     *  complex sensors.
1236:Generated_Source\PSoC5/CapSense.c ****     *  The 7bit(msb) is used to define the sensor type: single or complex.
1237:Generated_Source\PSoC5/CapSense.c ****     *
1238:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1239:Generated_Source\PSoC5/CapSense.c ****     void CapSense_DisableScanSlot(uint8 slot) CYREENTRANT
1240:Generated_Source\PSoC5/CapSense.c ****     {
1241:Generated_Source\PSoC5/CapSense.c ****         uint8 j;
1242:Generated_Source\PSoC5/CapSense.c ****         uint8 snsNumber;
1243:Generated_Source\PSoC5/CapSense.c ****         const uint8 CYCODE *index;
1244:Generated_Source\PSoC5/CapSense.c ****         /* Read the sensor type: single or complex */
1245:Generated_Source\PSoC5/CapSense.c ****         uint8 snsType = CapSense_portTable[slot];
1246:Generated_Source\PSoC5/CapSense.c ****         
1247:Generated_Source\PSoC5/CapSense.c ****         /* Check if sensor is complex */
1248:Generated_Source\PSoC5/CapSense.c ****         if ((snsType & CapSense_COMPLEX_SS_FLAG) == 0u)
1249:Generated_Source\PSoC5/CapSense.c ****         {
1250:Generated_Source\PSoC5/CapSense.c ****             /* Disable sensor (signle) */
1251:Generated_Source\PSoC5/CapSense.c ****             CapSense_DisableSensor(slot);
1252:Generated_Source\PSoC5/CapSense.c ****         }
1253:Generated_Source\PSoC5/CapSense.c ****         else
1254:Generated_Source\PSoC5/CapSense.c ****         {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 40


1255:Generated_Source\PSoC5/CapSense.c ****             /* Disable complex sensor */
1256:Generated_Source\PSoC5/CapSense.c ****             snsType &= ~CapSense_COMPLEX_SS_FLAG;
1257:Generated_Source\PSoC5/CapSense.c ****             index = &CapSense_indexTable[snsType];
1258:Generated_Source\PSoC5/CapSense.c ****             snsNumber = CapSense_maskTable[slot];
1259:Generated_Source\PSoC5/CapSense.c ****                         
1260:Generated_Source\PSoC5/CapSense.c ****             for (j=0u; j < snsNumber; j++)
1261:Generated_Source\PSoC5/CapSense.c ****             {
1262:Generated_Source\PSoC5/CapSense.c ****                 CapSense_DisableSensor(index[j]);
1263:Generated_Source\PSoC5/CapSense.c ****             }
1264:Generated_Source\PSoC5/CapSense.c ****         } 
1265:Generated_Source\PSoC5/CapSense.c ****     }
1266:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1267:Generated_Source\PSoC5/CapSense.c **** 
1268:Generated_Source\PSoC5/CapSense.c **** 
1269:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1270:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_EnableSensor
1271:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1272:Generated_Source\PSoC5/CapSense.c **** *
1273:Generated_Source\PSoC5/CapSense.c **** * Summary:
1274:Generated_Source\PSoC5/CapSense.c **** *  Configures the selected sensor to measure during the next measurement cycle.
1275:Generated_Source\PSoC5/CapSense.c **** *  The corresponding pins are set to Analog High-Z mode and connected to the
1276:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus. This also enables the comparator function.
1277:Generated_Source\PSoC5/CapSense.c **** *
1278:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1279:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1280:Generated_Source\PSoC5/CapSense.c **** *
1281:Generated_Source\PSoC5/CapSense.c **** * Return:
1282:Generated_Source\PSoC5/CapSense.c **** *  None
1283:Generated_Source\PSoC5/CapSense.c **** *
1284:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1285:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1286:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1287:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1288:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1289:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1290:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1291:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1292:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1293:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1294:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1295:Generated_Source\PSoC5/CapSense.c **** *
1296:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1297:Generated_Source\PSoC5/CapSense.c **** void CapSense_EnableSensor(uint8 sensor) CYREENTRANT
1298:Generated_Source\PSoC5/CapSense.c **** {
 965              		.loc 1 1298 0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 16
 968              		@ frame_needed = 1, uses_anonymous_args = 0
 969 0000 80B5     		push	{r7, lr}
 970              		.cfi_def_cfa_offset 8
 971              		.cfi_offset 7, -8
 972              		.cfi_offset 14, -4
 973 0002 84B0     		sub	sp, sp, #16
 974              		.cfi_def_cfa_offset 24
 975 0004 00AF     		add	r7, sp, #0
 976              		.cfi_def_cfa_register 7
 977 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 41


 978 0008 FB71     		strb	r3, [r7, #7]
1299:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 979              		.loc 1 1299 0
 980 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 981 000c 134A     		ldr	r2, .L46
 982 000e D35C     		ldrb	r3, [r2, r3]
 983 0010 FB73     		strb	r3, [r7, #15]
1300:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 984              		.loc 1 1300 0
 985 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 986 0014 124A     		ldr	r2, .L46+4
 987 0016 D35C     		ldrb	r3, [r2, r3]
 988 0018 BB73     		strb	r3, [r7, #14]
1301:Generated_Source\PSoC5/CapSense.c ****     
1302:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1303:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1304:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1305:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1306:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1307:Generated_Source\PSoC5/CapSense.c ****             */
1308:Generated_Source\PSoC5/CapSense.c ****     
1309:Generated_Source\PSoC5/CapSense.c ****     /* Make sensor High-Z */
1310:Generated_Source\PSoC5/CapSense.c ****     *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 989              		.loc 1 1310 0
 990 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 991 001c 114A     		ldr	r2, .L46+8
 992 001e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 993 0022 0922     		movs	r2, #9
 994 0024 1A70     		strb	r2, [r3]
1311:Generated_Source\PSoC5/CapSense.c ****     
1312:Generated_Source\PSoC5/CapSense.c ****     /* Connect to DSI output */
1313:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 995              		.loc 1 1313 0
 996 0026 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 997 0028 0F2B     		cmp	r3, #15
 998 002a 01D1     		bne	.L45
1314:Generated_Source\PSoC5/CapSense.c **** 	{
1315:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 999              		.loc 1 1315 0
 1000 002c 0723     		movs	r3, #7
 1001 002e FB73     		strb	r3, [r7, #15]
 1002              	.L45:
1316:Generated_Source\PSoC5/CapSense.c **** 	}
1317:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] |= mask;
 1003              		.loc 1 1317 0
 1004 0030 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1005 0032 0D4A     		ldr	r2, .L46+12
 1006 0034 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1007 0038 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1008 003a 0B49     		ldr	r1, .L46+12
 1009 003c 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1010 0040 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1011 0042 BA7B     		ldrb	r2, [r7, #14]
 1012 0044 0A43     		orrs	r2, r2, r1
 1013 0046 D2B2     		uxtb	r2, r2
 1014 0048 1A70     		strb	r2, [r3]
1318:Generated_Source\PSoC5/CapSense.c ****     
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 42


1319:Generated_Source\PSoC5/CapSense.c ****     /* Connect to AMUX */
1320:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1321:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1322:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_amuxIndex[sensor]);
1323:Generated_Source\PSoC5/CapSense.c ****         #else
1324:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(sensor);
 1015              		.loc 1 1324 0
 1016 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1017 004c 1846     		mov	r0, r3
 1018 004e FFF7FEFF 		bl	CapSense_AMuxCH0_Set
1325:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1326:Generated_Source\PSoC5/CapSense.c ****                 
1327:Generated_Source\PSoC5/CapSense.c ****     #else
1328:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1329:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1330:Generated_Source\PSoC5/CapSense.c ****             {
1331:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(amuxCh);
1332:Generated_Source\PSoC5/CapSense.c ****             } 
1333:Generated_Source\PSoC5/CapSense.c ****             else
1334:Generated_Source\PSoC5/CapSense.c ****             {
1335:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1336:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(amuxCh);
1337:Generated_Source\PSoC5/CapSense.c ****             }
1338:Generated_Source\PSoC5/CapSense.c ****             
1339:Generated_Source\PSoC5/CapSense.c ****         #else
1340:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1341:Generated_Source\PSoC5/CapSense.c ****             {
1342:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(sensor);
1343:Generated_Source\PSoC5/CapSense.c ****             } 
1344:Generated_Source\PSoC5/CapSense.c ****             else
1345:Generated_Source\PSoC5/CapSense.c ****             {
1346:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1347:Generated_Source\PSoC5/CapSense.c ****             }
1348:Generated_Source\PSoC5/CapSense.c ****             
1349:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1350:Generated_Source\PSoC5/CapSense.c ****         
1351:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */
1352:Generated_Source\PSoC5/CapSense.c **** }
 1019              		.loc 1 1352 0
 1020 0052 00BF     		nop
 1021 0054 1037     		adds	r7, r7, #16
 1022              		.cfi_def_cfa_offset 8
 1023 0056 BD46     		mov	sp, r7
 1024              		.cfi_def_cfa_register 13
 1025              		@ sp needed
 1026 0058 80BD     		pop	{r7, pc}
 1027              	.L47:
 1028 005a 00BF     		.align	2
 1029              	.L46:
 1030 005c 00000000 		.word	CapSense_portTable
 1031 0060 00000000 		.word	CapSense_maskTable
 1032 0064 00000000 		.word	CapSense_pcTable
 1033 0068 00000000 		.word	CapSense_csTable
 1034              		.cfi_endproc
 1035              	.LFE11:
 1036              		.size	CapSense_EnableSensor, .-CapSense_EnableSensor
 1037              		.section	.text.CapSense_DisableSensor,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 43


 1038              		.align	2
 1039              		.global	CapSense_DisableSensor
 1040              		.thumb
 1041              		.thumb_func
 1042              		.type	CapSense_DisableSensor, %function
 1043              	CapSense_DisableSensor:
 1044              	.LFB12:
1353:Generated_Source\PSoC5/CapSense.c **** 
1354:Generated_Source\PSoC5/CapSense.c **** 
1355:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1356:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_DisableSensor
1357:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1358:Generated_Source\PSoC5/CapSense.c **** *
1359:Generated_Source\PSoC5/CapSense.c **** * Summary:
1360:Generated_Source\PSoC5/CapSense.c **** *  Disables the selected sensor. The corresponding pin is disconnected from the
1361:Generated_Source\PSoC5/CapSense.c **** *  Analog Mux Bus and connected to GND, High_Z or Shield electrode.
1362:Generated_Source\PSoC5/CapSense.c **** *
1363:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1364:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number
1365:Generated_Source\PSoC5/CapSense.c **** *
1366:Generated_Source\PSoC5/CapSense.c **** * Return:
1367:Generated_Source\PSoC5/CapSense.c **** *  None
1368:Generated_Source\PSoC5/CapSense.c **** *
1369:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1370:Generated_Source\PSoC5/CapSense.c **** *  CapSense_portTable[] - used to store the port number that pin 
1371:Generated_Source\PSoC5/CapSense.c **** *  belongs to for every sensor.
1372:Generated_Source\PSoC5/CapSense.c **** *  CapSense_maskTable[] - used to store the pin within the port for 
1373:Generated_Source\PSoC5/CapSense.c **** *  every sensor.
1374:Generated_Source\PSoC5/CapSense.c **** *  CapSense_csTable[]   - used to store the pointers to CAPS_SEL 
1375:Generated_Source\PSoC5/CapSense.c **** *  registers for every port.
1376:Generated_Source\PSoC5/CapSense.c **** *  CapSense_pcTable[]   - used to store the pointers to PC pin 
1377:Generated_Source\PSoC5/CapSense.c **** *  register for every sensor.
1378:Generated_Source\PSoC5/CapSense.c **** *  CapSense_amuxIndex[] - used to store corrected AMUX index when 
1379:Generated_Source\PSoC5/CapSense.c **** *  complex sensors are defeined.
1380:Generated_Source\PSoC5/CapSense.c **** *
1381:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1382:Generated_Source\PSoC5/CapSense.c **** void CapSense_DisableSensor(uint8 sensor) CYREENTRANT
1383:Generated_Source\PSoC5/CapSense.c **** {
 1045              		.loc 1 1383 0
 1046              		.cfi_startproc
 1047              		@ args = 0, pretend = 0, frame = 16
 1048              		@ frame_needed = 1, uses_anonymous_args = 0
 1049 0000 80B5     		push	{r7, lr}
 1050              		.cfi_def_cfa_offset 8
 1051              		.cfi_offset 7, -8
 1052              		.cfi_offset 14, -4
 1053 0002 84B0     		sub	sp, sp, #16
 1054              		.cfi_def_cfa_offset 24
 1055 0004 00AF     		add	r7, sp, #0
 1056              		.cfi_def_cfa_register 7
 1057 0006 0346     		mov	r3, r0
 1058 0008 FB71     		strb	r3, [r7, #7]
1384:Generated_Source\PSoC5/CapSense.c ****     uint8 port = CapSense_portTable[sensor];
 1059              		.loc 1 1384 0
 1060 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1061 000c 144A     		ldr	r2, .L50
 1062 000e D35C     		ldrb	r3, [r2, r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 44


 1063 0010 FB73     		strb	r3, [r7, #15]
1385:Generated_Source\PSoC5/CapSense.c ****     uint8 mask = CapSense_maskTable[sensor];
 1064              		.loc 1 1385 0
 1065 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1066 0014 134A     		ldr	r2, .L50+4
 1067 0016 D35C     		ldrb	r3, [r2, r3]
 1068 0018 BB73     		strb	r3, [r7, #14]
1386:Generated_Source\PSoC5/CapSense.c ****     
1387:Generated_Source\PSoC5/CapSense.c ****     #if ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1388:Generated_Source\PSoC5/CapSense.c ****          (CapSense_IS_COMPLEX_SCANSLOTS))
1389:Generated_Source\PSoC5/CapSense.c ****         uint8 amuxCh = CapSense_amuxIndex[sensor];
1390:Generated_Source\PSoC5/CapSense.c ****     #endif  /* ((CapSense_DESIGN_TYPE == CapSense_TWO_CHANNELS_DESIGN) && \
1391:Generated_Source\PSoC5/CapSense.c ****             *   (CapSense_IS_COMPLEX_SCANSLOTS))
1392:Generated_Source\PSoC5/CapSense.c ****             */
1393:Generated_Source\PSoC5/CapSense.c ****     
1394:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from AMUX */
1395:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1396:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1397:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(CapSense_amuxIndex[sensor]);
1398:Generated_Source\PSoC5/CapSense.c ****         #else
1399:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Disconnect(sensor);
 1069              		.loc 1 1399 0
 1070 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1071 001c 1846     		mov	r0, r3
 1072 001e FFF7FEFF 		bl	CapSense_AMuxCH0_Unset
1400:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1401:Generated_Source\PSoC5/CapSense.c ****                 
1402:Generated_Source\PSoC5/CapSense.c ****     #else
1403:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IS_COMPLEX_SCANSLOTS)
1404:Generated_Source\PSoC5/CapSense.c ****             if ((amuxCh & CapSense_CHANNEL1_FLAG) == 0u)
1405:Generated_Source\PSoC5/CapSense.c ****             {
1406:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(amuxCh);
1407:Generated_Source\PSoC5/CapSense.c ****             } 
1408:Generated_Source\PSoC5/CapSense.c ****             else
1409:Generated_Source\PSoC5/CapSense.c ****             {
1410:Generated_Source\PSoC5/CapSense.c ****                 amuxCh &= ~ CapSense_CHANNEL1_FLAG;
1411:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(amuxCh);
1412:Generated_Source\PSoC5/CapSense.c ****             }
1413:Generated_Source\PSoC5/CapSense.c ****             
1414:Generated_Source\PSoC5/CapSense.c ****         #else
1415:Generated_Source\PSoC5/CapSense.c ****             if (sensor < CapSense_TOTAL_SENSOR_COUNT__CH0) 
1416:Generated_Source\PSoC5/CapSense.c ****             {
1417:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(sensor);
1418:Generated_Source\PSoC5/CapSense.c ****             } 
1419:Generated_Source\PSoC5/CapSense.c ****             else
1420:Generated_Source\PSoC5/CapSense.c ****             {
1421:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(sensor - CapSense_TOTAL_SENSOR_COUNT__CH0);
1422:Generated_Source\PSoC5/CapSense.c ****             }
1423:Generated_Source\PSoC5/CapSense.c ****             
1424:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_IS_COMPLEX_SCANSLOTS */
1425:Generated_Source\PSoC5/CapSense.c ****         
1426:Generated_Source\PSoC5/CapSense.c ****     #endif  /* CapSense_DESIGN_TYPE */
1427:Generated_Source\PSoC5/CapSense.c ****     
1428:Generated_Source\PSoC5/CapSense.c ****     /* Disconnect from DSI output */
1429:Generated_Source\PSoC5/CapSense.c **** 	if(port == 15u)
 1073              		.loc 1 1429 0
 1074 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 45


 1075 0024 0F2B     		cmp	r3, #15
 1076 0026 01D1     		bne	.L49
1430:Generated_Source\PSoC5/CapSense.c **** 	{
1431:Generated_Source\PSoC5/CapSense.c **** 		port = 7u;
 1077              		.loc 1 1431 0
 1078 0028 0723     		movs	r3, #7
 1079 002a FB73     		strb	r3, [r7, #15]
 1080              	.L49:
1432:Generated_Source\PSoC5/CapSense.c **** 	}
1433:Generated_Source\PSoC5/CapSense.c ****     *CapSense_csTable[port] &= (uint8)~mask;
 1081              		.loc 1 1433 0
 1082 002c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1083 002e 0E4A     		ldr	r2, .L50+8
 1084 0030 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1085 0034 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1086 0036 0C49     		ldr	r1, .L50+8
 1087 0038 51F82220 		ldr	r2, [r1, r2, lsl #2]
 1088 003c 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 1089 003e BA7B     		ldrb	r2, [r7, #14]
 1090 0040 D243     		mvns	r2, r2
 1091 0042 D2B2     		uxtb	r2, r2
 1092 0044 0A40     		ands	r2, r2, r1
 1093 0046 D2B2     		uxtb	r2, r2
 1094 0048 1A70     		strb	r2, [r3]
1434:Generated_Source\PSoC5/CapSense.c ****     
1435:Generated_Source\PSoC5/CapSense.c ****     /* Set sensor to inactive state */
1436:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND)
1437:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_GND;
1438:Generated_Source\PSoC5/CapSense.c ****     #elif (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_HIGHZ)
1439:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_HIGHZ;
 1095              		.loc 1 1439 0
 1096 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1097 004c 074A     		ldr	r2, .L50+12
 1098 004e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1099 0052 0922     		movs	r2, #9
 1100 0054 1A70     		strb	r2, [r3]
1440:Generated_Source\PSoC5/CapSense.c ****     #else
1441:Generated_Source\PSoC5/CapSense.c ****         *CapSense_pcTable[sensor] = CapSense_PRT_PC_SHIELD;
1442:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_CONNECT_INACTIVE_SNS == CapSense_CIS_GND) */
1443:Generated_Source\PSoC5/CapSense.c **** }
 1101              		.loc 1 1443 0
 1102 0056 00BF     		nop
 1103 0058 1037     		adds	r7, r7, #16
 1104              		.cfi_def_cfa_offset 8
 1105 005a BD46     		mov	sp, r7
 1106              		.cfi_def_cfa_register 13
 1107              		@ sp needed
 1108 005c 80BD     		pop	{r7, pc}
 1109              	.L51:
 1110 005e 00BF     		.align	2
 1111              	.L50:
 1112 0060 00000000 		.word	CapSense_portTable
 1113 0064 00000000 		.word	CapSense_maskTable
 1114 0068 00000000 		.word	CapSense_csTable
 1115 006c 00000000 		.word	CapSense_pcTable
 1116              		.cfi_endproc
 1117              	.LFE12:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 46


 1118              		.size	CapSense_DisableSensor, .-CapSense_DisableSensor
 1119              		.section	.text.CapSense_PreScan,"ax",%progbits
 1120              		.align	2
 1121              		.global	CapSense_PreScan
 1122              		.thumb
 1123              		.thumb_func
 1124              		.type	CapSense_PreScan, %function
 1125              	CapSense_PreScan:
 1126              	.LFB13:
1444:Generated_Source\PSoC5/CapSense.c **** 
1445:Generated_Source\PSoC5/CapSense.c **** 
1446:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1447:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_PreScan
1448:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1449:Generated_Source\PSoC5/CapSense.c **** *
1450:Generated_Source\PSoC5/CapSense.c **** * Summary:
1451:Generated_Source\PSoC5/CapSense.c **** *  Set required settings, enable sensor, remove Vref from AMUX and start the 
1452:Generated_Source\PSoC5/CapSense.c **** *  scanning process of the sensor.
1453:Generated_Source\PSoC5/CapSense.c **** *
1454:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1455:Generated_Source\PSoC5/CapSense.c **** *  sensor:  Sensor number.
1456:Generated_Source\PSoC5/CapSense.c **** *
1457:Generated_Source\PSoC5/CapSense.c **** * Return:
1458:Generated_Source\PSoC5/CapSense.c **** *  None
1459:Generated_Source\PSoC5/CapSense.c **** *
1460:Generated_Source\PSoC5/CapSense.c **** * Global Variables:
1461:Generated_Source\PSoC5/CapSense.c **** *  CapSense_rbTable[] - used to store pointers to PC pin registers for 
1462:Generated_Source\PSoC5/CapSense.c **** *  every bleed resistor (Rb). Only available when Current Source is External 
1463:Generated_Source\PSoC5/CapSense.c **** *  resistor.
1464:Generated_Source\PSoC5/CapSense.c **** *
1465:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1466:Generated_Source\PSoC5/CapSense.c **** void CapSense_PreScan(uint8 sensor) CYREENTRANT
1467:Generated_Source\PSoC5/CapSense.c **** {
 1127              		.loc 1 1467 0
 1128              		.cfi_startproc
 1129              		@ args = 0, pretend = 0, frame = 8
 1130              		@ frame_needed = 1, uses_anonymous_args = 0
 1131 0000 80B5     		push	{r7, lr}
 1132              		.cfi_def_cfa_offset 8
 1133              		.cfi_offset 7, -8
 1134              		.cfi_offset 14, -4
 1135 0002 82B0     		sub	sp, sp, #8
 1136              		.cfi_def_cfa_offset 16
 1137 0004 00AF     		add	r7, sp, #0
 1138              		.cfi_def_cfa_register 7
 1139 0006 0346     		mov	r3, r0
 1140 0008 FB71     		strb	r3, [r7, #7]
1468:Generated_Source\PSoC5/CapSense.c ****     /* Set Sensor Settings */
1469:Generated_Source\PSoC5/CapSense.c ****     CapSense_SetScanSlotSettings(sensor);
 1141              		.loc 1 1469 0
 1142 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1143 000c 1846     		mov	r0, r3
 1144 000e FFF7FEFF 		bl	CapSense_SetScanSlotSettings
1470:Generated_Source\PSoC5/CapSense.c ****     
1471:Generated_Source\PSoC5/CapSense.c ****     /* Place disable interrupts here to eliminate influence on start of scanning */
1472:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_DisableInt` */
1473:Generated_Source\PSoC5/CapSense.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 47


1474:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1475:Generated_Source\PSoC5/CapSense.c ****     
1476:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_DISABLE_INT_CALLBACK
1477:Generated_Source\PSoC5/CapSense.c ****     CapSense_PreScan_DisableInt_Callback();
1478:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_DISABLE_INT_CALLBACK */
1479:Generated_Source\PSoC5/CapSense.c **** 
1480:Generated_Source\PSoC5/CapSense.c ****     /* Resets digital and pre-charge clocks */
1481:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_SYNC_EN;
 1145              		.loc 1 1481 0
 1146 0012 104A     		ldr	r2, .L53
 1147 0014 0F4B     		ldr	r3, .L53
 1148 0016 1B78     		ldrb	r3, [r3]
 1149 0018 DBB2     		uxtb	r3, r3
 1150 001a 43F00103 		orr	r3, r3, #1
 1151 001e DBB2     		uxtb	r3, r3
 1152 0020 1370     		strb	r3, [r2]
1482:Generated_Source\PSoC5/CapSense.c ****         
1483:Generated_Source\PSoC5/CapSense.c ****     #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1484:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1485:Generated_Source\PSoC5/CapSense.c ****             /* Disable Vref from AMux */
1486:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1487:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1488:Generated_Source\PSoC5/CapSense.c ****             #else
1489:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
 1153              		.loc 1 1489 0
 1154 0022 0D4A     		ldr	r2, .L53+4
 1155 0024 0C4B     		ldr	r3, .L53+4
 1156 0026 1B78     		ldrb	r3, [r3]
 1157 0028 DBB2     		uxtb	r3, r3
 1158 002a 23F00103 		bic	r3, r3, #1
 1159 002e DBB2     		uxtb	r3, r3
 1160 0030 1370     		strb	r3, [r2]
1490:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1491:Generated_Source\PSoC5/CapSense.c **** 
1492:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1493:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
 1161              		.loc 1 1493 0
 1162 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1163 0034 1846     		mov	r0, r3
 1164 0036 FFF7FEFF 		bl	CapSense_EnableSensor
1494:Generated_Source\PSoC5/CapSense.c ****             
1495:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1496:Generated_Source\PSoC5/CapSense.c ****             /* Connect IDAC */
1497:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1498:Generated_Source\PSoC5/CapSense.c ****             
1499:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1500:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
1501:Generated_Source\PSoC5/CapSense.c ****                 
1502:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1503:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= (uint8)~CapSense_CSBUF_ENABLE;
1504:Generated_Source\PSoC5/CapSense.c ****             
1505:Generated_Source\PSoC5/CapSense.c ****         #else
1506:Generated_Source\PSoC5/CapSense.c ****             /* Connect DSI output to Rb */
1507:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1508:Generated_Source\PSoC5/CapSense.c ****             
1509:Generated_Source\PSoC5/CapSense.c ****             /* Enable Sensor */
1510:Generated_Source\PSoC5/CapSense.c ****             CapSense_EnableScanSlot(sensor);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 48


1511:Generated_Source\PSoC5/CapSense.c ****              
1512:Generated_Source\PSoC5/CapSense.c ****             /* Disable CapSense Buffer */
1513:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1514:Generated_Source\PSoC5/CapSense.c ****         
1515:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1516:Generated_Source\PSoC5/CapSense.c ****         
1517:Generated_Source\PSoC5/CapSense.c ****     #else
1518:Generated_Source\PSoC5/CapSense.c **** 
1519:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) != 0u)
1520:Generated_Source\PSoC5/CapSense.c ****         {
1521:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1522:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1523:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1524:Generated_Source\PSoC5/CapSense.c ****                     CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_VREF_CHANNEL);
1525:Generated_Source\PSoC5/CapSense.c ****                 #else
1526:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1527:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC != CapSense_VREF_OPTIONS) */
1528:Generated_Source\PSoC5/CapSense.c ****                 
1529:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1530:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1531:Generated_Source\PSoC5/CapSense.c ****                 
1532:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1533:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1534:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_IDAC_CHANNEL);
1535:Generated_Source\PSoC5/CapSense.c ****                 
1536:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1537:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1538:Generated_Source\PSoC5/CapSense.c ****                     
1539:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1540:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1541:Generated_Source\PSoC5/CapSense.c ****                 
1542:Generated_Source\PSoC5/CapSense.c ****             #else
1543:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1544:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh0Cur] |= CapSense_BYP_MASK;
1545:Generated_Source\PSoC5/CapSense.c ****                 
1546:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1547:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1548:Generated_Source\PSoC5/CapSense.c ****                     
1549:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1550:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH0_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1551:Generated_Source\PSoC5/CapSense.c ****             
1552:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1553:Generated_Source\PSoC5/CapSense.c ****             
1554:Generated_Source\PSoC5/CapSense.c ****         }
1555:Generated_Source\PSoC5/CapSense.c ****         
1556:Generated_Source\PSoC5/CapSense.c ****         if((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) != 0u)
1557:Generated_Source\PSoC5/CapSense.c ****         {
1558:Generated_Source\PSoC5/CapSense.c ****             sensor += CapSense_TOTAL_SENSOR_COUNT__CH0;
1559:Generated_Source\PSoC5/CapSense.c ****             
1560:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE)
1561:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1562:Generated_Source\PSoC5/CapSense.c ****                 #if (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS)
1563:Generated_Source\PSoC5/CapSense.c ****                    CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_VREF_CHANNEL);
1564:Generated_Source\PSoC5/CapSense.c ****                 #else 
1565:Generated_Source\PSoC5/CapSense.c ****                     CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1566:Generated_Source\PSoC5/CapSense.c ****                 #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1567:Generated_Source\PSoC5/CapSense.c ****                 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 49


1568:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1569:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1570:Generated_Source\PSoC5/CapSense.c ****                 
1571:Generated_Source\PSoC5/CapSense.c ****             #elif (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1572:Generated_Source\PSoC5/CapSense.c ****                 /* Connect IDAC */
1573:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_IDAC_CHANNEL);
1574:Generated_Source\PSoC5/CapSense.c ****                 
1575:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1576:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1577:Generated_Source\PSoC5/CapSense.c ****                     
1578:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1579:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1580:Generated_Source\PSoC5/CapSense.c ****                 
1581:Generated_Source\PSoC5/CapSense.c ****             #else
1582:Generated_Source\PSoC5/CapSense.c ****                 /* Connect DSI output to Rb */
1583:Generated_Source\PSoC5/CapSense.c ****                 *CapSense_rbTable[CapSense_extRbCh1Cur] |= CapSense_BYP_MASK;
1584:Generated_Source\PSoC5/CapSense.c ****                 
1585:Generated_Source\PSoC5/CapSense.c ****                 /* Enable Sensor */
1586:Generated_Source\PSoC5/CapSense.c ****                 CapSense_EnableScanSlot(sensor);
1587:Generated_Source\PSoC5/CapSense.c ****                 
1588:Generated_Source\PSoC5/CapSense.c ****                 /* Disable Vref from AMux */
1589:Generated_Source\PSoC5/CapSense.c ****                 CapSense_BufCH1_CAPS_CFG0_REG &= ~CapSense_CSBUF_ENABLE;
1590:Generated_Source\PSoC5/CapSense.c ****             
1591:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SOURCE) */
1592:Generated_Source\PSoC5/CapSense.c ****         }
1593:Generated_Source\PSoC5/CapSense.c ****     
1594:Generated_Source\PSoC5/CapSense.c ****     #endif  /* (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN) */
1595:Generated_Source\PSoC5/CapSense.c ****     
1596:Generated_Source\PSoC5/CapSense.c ****     /* Start measurament, pre-charge clocks are running and PRS as well */
1597:Generated_Source\PSoC5/CapSense.c ****     CapSense_CONTROL_REG |= CapSense_CTRL_START;
 1165              		.loc 1 1597 0
 1166 003a 064A     		ldr	r2, .L53
 1167 003c 054B     		ldr	r3, .L53
 1168 003e 1B78     		ldrb	r3, [r3]
 1169 0040 DBB2     		uxtb	r3, r3
 1170 0042 43F00203 		orr	r3, r3, #2
 1171 0046 DBB2     		uxtb	r3, r3
 1172 0048 1370     		strb	r3, [r2]
1598:Generated_Source\PSoC5/CapSense.c ****     
1599:Generated_Source\PSoC5/CapSense.c ****     /* Place enable interrupts here to eliminate influence on start of scanning */
1600:Generated_Source\PSoC5/CapSense.c ****     /* `#START CapSense_PreScan_EnableInt` */
1601:Generated_Source\PSoC5/CapSense.c **** 
1602:Generated_Source\PSoC5/CapSense.c ****     /* `#END` */
1603:Generated_Source\PSoC5/CapSense.c **** 
1604:Generated_Source\PSoC5/CapSense.c ****     #ifdef CapSense_PRE_SCAN_ENABLE_INT_CALLBACK
1605:Generated_Source\PSoC5/CapSense.c ****         CapSense_PreScan_EnableInt_Callback();
1606:Generated_Source\PSoC5/CapSense.c ****     #endif /* CapSense_PRE_SCAN_ENABLE_INT_CALLBACK */
1607:Generated_Source\PSoC5/CapSense.c **** }
 1173              		.loc 1 1607 0
 1174 004a 00BF     		nop
 1175 004c 0837     		adds	r7, r7, #8
 1176              		.cfi_def_cfa_offset 8
 1177 004e BD46     		mov	sp, r7
 1178              		.cfi_def_cfa_register 13
 1179              		@ sp needed
 1180 0050 80BD     		pop	{r7, pc}
 1181              	.L54:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 50


 1182 0052 00BF     		.align	2
 1183              	.L53:
 1184 0054 7B640040 		.word	1073767547
 1185 0058 70580040 		.word	1073764464
 1186              		.cfi_endproc
 1187              	.LFE13:
 1188              		.size	CapSense_PreScan, .-CapSense_PreScan
 1189              		.section	.text.CapSense_PostScan,"ax",%progbits
 1190              		.align	2
 1191              		.global	CapSense_PostScan
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	CapSense_PostScan, %function
 1195              	CapSense_PostScan:
 1196              	.LFB14:
1608:Generated_Source\PSoC5/CapSense.c **** 
1609:Generated_Source\PSoC5/CapSense.c **** 
1610:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1611:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1612:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1613:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1614:Generated_Source\PSoC5/CapSense.c ****     *
1615:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1616:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1617:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1618:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1619:Generated_Source\PSoC5/CapSense.c ****     *  Only one channel designs.
1620:Generated_Source\PSoC5/CapSense.c ****     *
1621:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1622:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1623:Generated_Source\PSoC5/CapSense.c ****     *
1624:Generated_Source\PSoC5/CapSense.c ****     * Return:
1625:Generated_Source\PSoC5/CapSense.c ****     *  None
1626:Generated_Source\PSoC5/CapSense.c ****     *
1627:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1628:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1629:Generated_Source\PSoC5/CapSense.c ****     *
1630:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1631:Generated_Source\PSoC5/CapSense.c ****     *  No
1632:Generated_Source\PSoC5/CapSense.c ****     *
1633:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1634:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScan(uint8 sensor) CYREENTRANT
1635:Generated_Source\PSoC5/CapSense.c ****     {
 1197              		.loc 1 1635 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 8
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 80B5     		push	{r7, lr}
 1202              		.cfi_def_cfa_offset 8
 1203              		.cfi_offset 7, -8
 1204              		.cfi_offset 14, -4
 1205 0002 82B0     		sub	sp, sp, #8
 1206              		.cfi_def_cfa_offset 16
 1207 0004 00AF     		add	r7, sp, #0
 1208              		.cfi_def_cfa_register 7
 1209 0006 0346     		mov	r3, r0
 1210 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 51


1636:Generated_Source\PSoC5/CapSense.c ****         /* Stop Capsensing and rearm sync */
1637:Generated_Source\PSoC5/CapSense.c ****         CapSense_CONTROL_REG &= (uint8)~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
 1211              		.loc 1 1637 0
 1212 000a 1E4A     		ldr	r2, .L56
 1213 000c 1D4B     		ldr	r3, .L56
 1214 000e 1B78     		ldrb	r3, [r3]
 1215 0010 DBB2     		uxtb	r3, r3
 1216 0012 23F00303 		bic	r3, r3, #3
 1217 0016 DBB2     		uxtb	r3, r3
 1218 0018 1370     		strb	r3, [r2]
1638:Generated_Source\PSoC5/CapSense.c ****         
1639:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1640:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1641:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1642:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1643:Generated_Source\PSoC5/CapSense.c ****         #else
1644:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
 1219              		.loc 1 1644 0
 1220 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1221 001c 1A4A     		ldr	r2, .L56+4
 1222 001e 1278     		ldrb	r2, [r2]
 1223 0020 D2B2     		uxtb	r2, r2
 1224 0022 92B2     		uxth	r2, r2
 1225 0024 1202     		lsls	r2, r2, #8
 1226 0026 91B2     		uxth	r1, r2
 1227 0028 184A     		ldr	r2, .L56+8
 1228 002a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1645:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
 1229              		.loc 1 1645 0
 1230 002e 184B     		ldr	r3, .L56+12
 1231 0030 1B78     		ldrb	r3, [r3]
 1232 0032 DBB2     		uxtb	r3, r3
 1233 0034 9AB2     		uxth	r2, r3
 1234 0036 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1235 0038 F979     		ldrb	r1, [r7, #7]	@ zero_extendqisi2
 1236 003a 1448     		ldr	r0, .L56+8
 1237 003c 30F81110 		ldrh	r1, [r0, r1, lsl #1]
 1238 0040 0A43     		orrs	r2, r2, r1
 1239 0042 91B2     		uxth	r1, r2
 1240 0044 114A     		ldr	r2, .L56+8
 1241 0046 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1646:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1242              		.loc 1 1646 0
 1243 004a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1647:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
 1244              		.loc 1 1647 0
 1245 004c FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1246 004e 0F49     		ldr	r1, .L56+8
 1247 0050 31F81220 		ldrh	r2, [r1, r2, lsl #1]
1646:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE -
 1248              		.loc 1 1646 0
 1249 0054 D243     		mvns	r2, r2
 1250 0056 91B2     		uxth	r1, r2
 1251 0058 0C4A     		ldr	r2, .L56+8
 1252 005a 22F81310 		strh	r1, [r2, r3, lsl #1]	@ movhi
1648:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION == CapSense_MEASURE_IMPLEMENTATION_FF) */
1649:Generated_Source\PSoC5/CapSense.c ****         
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 52


1650:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1651:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
 1253              		.loc 1 1651 0
 1254 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1255 0060 1846     		mov	r0, r3
 1256 0062 FFF7FEFF 		bl	CapSense_DisableSensor
1652:Generated_Source\PSoC5/CapSense.c ****         
1653:Generated_Source\PSoC5/CapSense.c ****         #if(CapSense_CURRENT_SOURCE)
1654:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1655:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
 1257              		.loc 1 1655 0
 1258 0066 0020     		movs	r0, #0
 1259 0068 FFF7FEFF 		bl	CapSense_IdacCH0_SetValue
1656:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1657:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1658:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1659:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1660:Generated_Source\PSoC5/CapSense.c ****         #else
1661:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1662:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1663:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1664:Generated_Source\PSoC5/CapSense.c ****             
1665:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1666:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1667:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1668:Generated_Source\PSoC5/CapSense.c ****         #else
1669:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
 1260              		.loc 1 1669 0
 1261 006c 094A     		ldr	r2, .L56+16
 1262 006e 094B     		ldr	r3, .L56+16
 1263 0070 1B78     		ldrb	r3, [r3]
 1264 0072 DBB2     		uxtb	r3, r3
 1265 0074 43F00103 		orr	r3, r3, #1
 1266 0078 DBB2     		uxtb	r3, r3
 1267 007a 1370     		strb	r3, [r2]
1670:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1671:Generated_Source\PSoC5/CapSense.c ****     }
 1268              		.loc 1 1671 0
 1269 007c 00BF     		nop
 1270 007e 0837     		adds	r7, r7, #8
 1271              		.cfi_def_cfa_offset 8
 1272 0080 BD46     		mov	sp, r7
 1273              		.cfi_def_cfa_register 13
 1274              		@ sp needed
 1275 0082 80BD     		pop	{r7, pc}
 1276              	.L57:
 1277              		.align	2
 1278              	.L56:
 1279 0084 7B640040 		.word	1073767547
 1280 0088 18650040 		.word	1073767704
 1281 008c 00000000 		.word	CapSense_sensorRaw
 1282 0090 08650040 		.word	1073767688
 1283 0094 70580040 		.word	1073764464
 1284              		.cfi_endproc
 1285              	.LFE14:
 1286              		.size	CapSense_PostScan, .-CapSense_PostScan
 1287              		.section	.text.CapSense_SetPrescaler,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 53


 1288              		.align	2
 1289              		.global	CapSense_SetPrescaler
 1290              		.thumb
 1291              		.thumb_func
 1292              		.type	CapSense_SetPrescaler, %function
 1293              	CapSense_SetPrescaler:
 1294              	.LFB15:
1672:Generated_Source\PSoC5/CapSense.c ****     
1673:Generated_Source\PSoC5/CapSense.c **** #else
1674:Generated_Source\PSoC5/CapSense.c **** 
1675:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1676:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScan
1677:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1678:Generated_Source\PSoC5/CapSense.c ****     *
1679:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1680:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1681:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC),
1682:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1683:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 0 in two channes designs.
1684:Generated_Source\PSoC5/CapSense.c ****     *
1685:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1686:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1687:Generated_Source\PSoC5/CapSense.c ****     *
1688:Generated_Source\PSoC5/CapSense.c ****     * Return:
1689:Generated_Source\PSoC5/CapSense.c ****     *  None
1690:Generated_Source\PSoC5/CapSense.c ****     *
1691:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1692:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1693:Generated_Source\PSoC5/CapSense.c ****     *
1694:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1695:Generated_Source\PSoC5/CapSense.c ****     *  No
1696:Generated_Source\PSoC5/CapSense.c ****     *
1697:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1698:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh0(uint8 sensor) CYREENTRANT
1699:Generated_Source\PSoC5/CapSense.c ****     {
1700:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1701:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u)) 
1702:Generated_Source\PSoC5/CapSense.c ****         {
1703:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1704:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1705:Generated_Source\PSoC5/CapSense.c ****         }
1706:Generated_Source\PSoC5/CapSense.c ****         
1707:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1708:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)
1709:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1710:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH0_COUNTER_PTR);
1711:Generated_Source\PSoC5/CapSense.c ****         #else
1712:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH0_COUNTER_HI_REG << 8u);
1713:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH0_COUNTER_LO_REG;
1714:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1715:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1716:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH0 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1717:Generated_Source\PSoC5/CapSense.c ****         
1718:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1719:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1720:Generated_Source\PSoC5/CapSense.c ****         
1721:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 54


1722:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1723:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH0_SetValue(CapSense_TURN_OFF_IDAC);
1724:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1725:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1726:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH0_Disconnect(CapSense_AMuxCH0_IDAC_CHANNEL);
1727:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1728:Generated_Source\PSoC5/CapSense.c ****         #else
1729:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1730:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh0Cur] &= ~CapSense_BYP_MASK; 
1731:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1732:Generated_Source\PSoC5/CapSense.c ****         
1733:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1734:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1735:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH0_Connect(CapSense_AMuxCH0_VREF_CHANNEL);
1736:Generated_Source\PSoC5/CapSense.c ****         #else
1737:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH0_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1738:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1739:Generated_Source\PSoC5/CapSense.c ****     }
1740:Generated_Source\PSoC5/CapSense.c ****     
1741:Generated_Source\PSoC5/CapSense.c ****     
1742:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1743:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_PostScanCh1
1744:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1745:Generated_Source\PSoC5/CapSense.c ****     *
1746:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1747:Generated_Source\PSoC5/CapSense.c ****     *  Store results of measurament in CapSense_SensorResult[] array,
1748:Generated_Source\PSoC5/CapSense.c ****     *  sets scan sensor in none sampling state, turn off Idac(Current Source IDAC), 
1749:Generated_Source\PSoC5/CapSense.c ****     *  disconnect IDAC(Sink mode) or bleed resistor (Rb) and apply Vref on AMUX.
1750:Generated_Source\PSoC5/CapSense.c ****     *  Only used for channel 1 in two channes designs.
1751:Generated_Source\PSoC5/CapSense.c ****     *
1752:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1753:Generated_Source\PSoC5/CapSense.c ****     *  sensor:  Sensor number.
1754:Generated_Source\PSoC5/CapSense.c ****     *
1755:Generated_Source\PSoC5/CapSense.c ****     * Return:
1756:Generated_Source\PSoC5/CapSense.c ****     *  None
1757:Generated_Source\PSoC5/CapSense.c ****     *
1758:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1759:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_sensorRaw[] - used to store sensors raw data.
1760:Generated_Source\PSoC5/CapSense.c ****     *
1761:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1762:Generated_Source\PSoC5/CapSense.c ****     *  No
1763:Generated_Source\PSoC5/CapSense.c ****     *
1764:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1765:Generated_Source\PSoC5/CapSense.c ****     void CapSense_PostScanCh1(uint8 sensor) CYREENTRANT
1766:Generated_Source\PSoC5/CapSense.c ****     {
1767:Generated_Source\PSoC5/CapSense.c ****         if (((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH0) == 0u) && 
1768:Generated_Source\PSoC5/CapSense.c ****             ((CapSense_CONTROL_REG & CapSense_CTRL_WINDOW_EN__CH1) == 0u))
1769:Generated_Source\PSoC5/CapSense.c ****         {
1770:Generated_Source\PSoC5/CapSense.c ****             /* Stop Capsensing and rearm sync */
1771:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= ~(CapSense_CTRL_START | CapSense_CTRL_SYNC_EN);
1772:Generated_Source\PSoC5/CapSense.c ****         }
1773:Generated_Source\PSoC5/CapSense.c ****         
1774:Generated_Source\PSoC5/CapSense.c ****         /* Read SlotResult from Raw Counter */
1775:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)
1776:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1777:Generated_Source\PSoC5/CapSense.c ****                                                       CY_GET_REG16(CapSense_RAW_CH1_COUNTER_PTR);
1778:Generated_Source\PSoC5/CapSense.c ****         #else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 55


1779:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = ((uint16) CapSense_RAW_CH1_COUNTER_HI_REG << 8u);
1780:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor] |= (uint16) CapSense_RAW_CH1_COUNTER_LO_REG;
1781:Generated_Source\PSoC5/CapSense.c ****             CapSense_sensorRaw[sensor]  = CapSense_MEASURE_FULL_RANGE - 
1782:Generated_Source\PSoC5/CapSense.c ****                                                       CapSense_sensorRaw[sensor];
1783:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_IMPLEMENTATION_CH1 == CapSense_MEASURE_IMPLEMENTATION_FF)*/
1784:Generated_Source\PSoC5/CapSense.c ****         
1785:Generated_Source\PSoC5/CapSense.c ****         /* Disable Sensor */
1786:Generated_Source\PSoC5/CapSense.c ****         CapSense_DisableScanSlot(sensor);
1787:Generated_Source\PSoC5/CapSense.c ****         
1788:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_CURRENT_SOURCE)
1789:Generated_Source\PSoC5/CapSense.c ****             /* Turn off IDAC */
1790:Generated_Source\PSoC5/CapSense.c ****             CapSense_IdacCH1_SetValue(CapSense_TURN_OFF_IDAC);
1791:Generated_Source\PSoC5/CapSense.c ****             #if (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK)
1792:Generated_Source\PSoC5/CapSense.c ****                 /* Disconnect IDAC */
1793:Generated_Source\PSoC5/CapSense.c ****                 CapSense_AMuxCH1_Disconnect(CapSense_AMuxCH1_IDAC_CHANNEL);
1794:Generated_Source\PSoC5/CapSense.c ****             #endif  /* (CapSense_CURRENT_SOURCE == CapSense_IDAC_SINK) */
1795:Generated_Source\PSoC5/CapSense.c ****         #else
1796:Generated_Source\PSoC5/CapSense.c ****             /* Disconnect DSI output from Rb */
1797:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[CapSense_extRbCh1Cur] &= ~CapSense_BYP_MASK; 
1798:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_CURRENT_SOURCE)*/
1799:Generated_Source\PSoC5/CapSense.c **** 
1800:Generated_Source\PSoC5/CapSense.c ****         /* Enable Vref on AMUX */
1801:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_VREF_OPTIONS == CapSense_VREF_VDAC)
1802:Generated_Source\PSoC5/CapSense.c ****             CapSense_AMuxCH1_Connect(CapSense_AMuxCH1_VREF_CHANNEL);
1803:Generated_Source\PSoC5/CapSense.c ****         #else
1804:Generated_Source\PSoC5/CapSense.c ****             CapSense_BufCH1_CAPS_CFG0_REG |= CapSense_CSBUF_ENABLE;
1805:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_VREF_VDAC == CapSense_VREF_OPTIONS) */
1806:Generated_Source\PSoC5/CapSense.c ****     }
1807:Generated_Source\PSoC5/CapSense.c ****     
1808:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_DESIGN_TYPE */
1809:Generated_Source\PSoC5/CapSense.c **** 
1810:Generated_Source\PSoC5/CapSense.c **** 
1811:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB)
1812:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1813:Generated_Source\PSoC5/CapSense.c ****     * Function Name:  CapSense_InitRb
1814:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1815:Generated_Source\PSoC5/CapSense.c ****     *
1816:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1817:Generated_Source\PSoC5/CapSense.c ****     *  Sets all Rbleed resistor to High-Z mode. The first Rbleed resistor is active
1818:Generated_Source\PSoC5/CapSense.c ****     *  while next measure.
1819:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1820:Generated_Source\PSoC5/CapSense.c ****     *
1821:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1822:Generated_Source\PSoC5/CapSense.c ****     *  None
1823:Generated_Source\PSoC5/CapSense.c ****     *
1824:Generated_Source\PSoC5/CapSense.c ****     * Return:
1825:Generated_Source\PSoC5/CapSense.c ****     *  None
1826:Generated_Source\PSoC5/CapSense.c ****     *
1827:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************/
1828:Generated_Source\PSoC5/CapSense.c ****     void CapSense_InitRb(void) 
1829:Generated_Source\PSoC5/CapSense.c ****     {
1830:Generated_Source\PSoC5/CapSense.c ****         uint8 i;
1831:Generated_Source\PSoC5/CapSense.c ****         
1832:Generated_Source\PSoC5/CapSense.c ****         /* Disable all Rb */
1833:Generated_Source\PSoC5/CapSense.c ****         for(i = 0u; i < CapSense_TOTAL_RB_NUMBER; i++)
1834:Generated_Source\PSoC5/CapSense.c ****         {
1835:Generated_Source\PSoC5/CapSense.c ****             /* Make High-Z */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 56


1836:Generated_Source\PSoC5/CapSense.c ****             *CapSense_rbTable[i] = CapSense_PRT_PC_HIGHZ;
1837:Generated_Source\PSoC5/CapSense.c ****         }
1838:Generated_Source\PSoC5/CapSense.c ****     }
1839:Generated_Source\PSoC5/CapSense.c ****     
1840:Generated_Source\PSoC5/CapSense.c ****     
1841:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1842:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetRBleed
1843:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1844:Generated_Source\PSoC5/CapSense.c ****     *
1845:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1846:Generated_Source\PSoC5/CapSense.c ****     *  Sets the pin to use for the bleed resistor (Rb) connection. This function
1847:Generated_Source\PSoC5/CapSense.c ****     *  can be called at runtime to select the current Rb pin setting from those 
1848:Generated_Source\PSoC5/CapSense.c ****     *  defined customizer. The function overwrites the component parameter setting. 
1849:Generated_Source\PSoC5/CapSense.c ****     *  This function is available only if Current Source is External Resistor.
1850:Generated_Source\PSoC5/CapSense.c ****     * 
1851:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1852:Generated_Source\PSoC5/CapSense.c ****     *  rbleed:  Ordering number for bleed resistor terminal defined in CapSense
1853:Generated_Source\PSoC5/CapSense.c ****     *  customizer.
1854:Generated_Source\PSoC5/CapSense.c ****     *
1855:Generated_Source\PSoC5/CapSense.c ****     * Return:
1856:Generated_Source\PSoC5/CapSense.c ****     *  None
1857:Generated_Source\PSoC5/CapSense.c ****     *
1858:Generated_Source\PSoC5/CapSense.c ****     * Global Variables:
1859:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh0Cur - used to store current number of active 
1860:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 0.
1861:Generated_Source\PSoC5/CapSense.c ****     *  CapSense_extRbCh1Cur - used to store current number of active 
1862:Generated_Source\PSoC5/CapSense.c ****     *  bleed resistor (Rb) of channel 1.
1863:Generated_Source\PSoC5/CapSense.c ****     *  The active bleed resistor (Rb) pin will be used while next measurement  
1864:Generated_Source\PSoC5/CapSense.c ****     *  cycle.
1865:Generated_Source\PSoC5/CapSense.c ****     *
1866:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1867:Generated_Source\PSoC5/CapSense.c ****     *  No
1868:Generated_Source\PSoC5/CapSense.c ****     *
1869:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1870:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetRBleed(uint8 rbleed) 
1871:Generated_Source\PSoC5/CapSense.c ****     {
1872:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN)
1873:Generated_Source\PSoC5/CapSense.c ****             CapSense_extRbCh0Cur = rbleed;
1874:Generated_Source\PSoC5/CapSense.c ****             
1875:Generated_Source\PSoC5/CapSense.c ****         #else
1876:Generated_Source\PSoC5/CapSense.c ****             if(rbleed < CapSense_TOTAL_RB_NUMBER__CH0)
1877:Generated_Source\PSoC5/CapSense.c ****             {
1878:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh0Cur = rbleed;
1879:Generated_Source\PSoC5/CapSense.c ****             }
1880:Generated_Source\PSoC5/CapSense.c ****             else
1881:Generated_Source\PSoC5/CapSense.c ****             {
1882:Generated_Source\PSoC5/CapSense.c ****                 CapSense_extRbCh1Cur = (rbleed - CapSense_TOTAL_RB_NUMBER__CH0);   
1883:Generated_Source\PSoC5/CapSense.c ****             }
1884:Generated_Source\PSoC5/CapSense.c ****     
1885:Generated_Source\PSoC5/CapSense.c ****         #endif  /* CapSense_DESIGN_TYPE == CapSense_ONE_CHANNEL_DESIGN */ 
1886:Generated_Source\PSoC5/CapSense.c ****     }
1887:Generated_Source\PSoC5/CapSense.c **** #endif /* CapSense_CURRENT_SOURCE == CapSense_EXTERNAL_RB */ 
1888:Generated_Source\PSoC5/CapSense.c **** 
1889:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRESCALER_OPTIONS)
1890:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1891:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetPrescaler
1892:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 57


1893:Generated_Source\PSoC5/CapSense.c ****     *
1894:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1895:Generated_Source\PSoC5/CapSense.c ****     *  Sets analog switch divider.
1896:Generated_Source\PSoC5/CapSense.c ****     *
1897:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1898:Generated_Source\PSoC5/CapSense.c ****     *  prescaler:  Sets prescaler divider values.
1899:Generated_Source\PSoC5/CapSense.c ****     *
1900:Generated_Source\PSoC5/CapSense.c ****     * Return:
1901:Generated_Source\PSoC5/CapSense.c ****     *  None
1902:Generated_Source\PSoC5/CapSense.c ****     *
1903:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1904:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetPrescaler(uint8 prescaler) CYREENTRANT
1905:Generated_Source\PSoC5/CapSense.c ****     {
 1295              		.loc 1 1905 0
 1296              		.cfi_startproc
 1297              		@ args = 0, pretend = 0, frame = 8
 1298              		@ frame_needed = 1, uses_anonymous_args = 0
 1299              		@ link register save eliminated.
 1300 0000 80B4     		push	{r7}
 1301              		.cfi_def_cfa_offset 4
 1302              		.cfi_offset 7, -4
 1303 0002 83B0     		sub	sp, sp, #12
 1304              		.cfi_def_cfa_offset 16
 1305 0004 00AF     		add	r7, sp, #0
 1306              		.cfi_def_cfa_register 7
 1307 0006 0346     		mov	r3, r0
 1308 0008 FB71     		strb	r3, [r7, #7]
1906:Generated_Source\PSoC5/CapSense.c ****         /* Set Prescaler */
1907:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1908:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_PERIOD_REG = prescaler;
 1309              		.loc 1 1908 0
 1310 000a 064A     		ldr	r2, .L59
 1311 000c FB79     		ldrb	r3, [r7, #7]
 1312 000e 1370     		strb	r3, [r2]
1909:Generated_Source\PSoC5/CapSense.c ****             CapSense_PRESCALER_COMPARE_REG = (prescaler >> 1u);
 1313              		.loc 1 1909 0
 1314 0010 054A     		ldr	r2, .L59+4
 1315 0012 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1316 0014 5B08     		lsrs	r3, r3, #1
 1317 0016 DBB2     		uxtb	r3, r3
 1318 0018 1370     		strb	r3, [r2]
1910:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1911:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_PERIOD_PTR, (uint16) prescaler);
1912:Generated_Source\PSoC5/CapSense.c ****             CY_SET_REG16(CapSense_PRESCALER_COMPARE_PTR, (uint16) (prescaler >> 1u));
1913:Generated_Source\PSoC5/CapSense.c ****         #else
1914:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1915:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1916:Generated_Source\PSoC5/CapSense.c ****     }
 1319              		.loc 1 1916 0
 1320 001a 00BF     		nop
 1321 001c 0C37     		adds	r7, r7, #12
 1322              		.cfi_def_cfa_offset 4
 1323 001e BD46     		mov	sp, r7
 1324              		.cfi_def_cfa_register 13
 1325              		@ sp needed
 1326 0020 80BC     		pop	{r7}
 1327              		.cfi_restore 7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 58


 1328              		.cfi_def_cfa_offset 0
 1329 0022 7047     		bx	lr
 1330              	.L60:
 1331              		.align	2
 1332              	.L59:
 1333 0024 29650040 		.word	1073767721
 1334 0028 39650040 		.word	1073767737
 1335              		.cfi_endproc
 1336              	.LFE15:
 1337              		.size	CapSense_SetPrescaler, .-CapSense_SetPrescaler
 1338              		.section	.text.CapSense_GetPrescaler,"ax",%progbits
 1339              		.align	2
 1340              		.global	CapSense_GetPrescaler
 1341              		.thumb
 1342              		.thumb_func
 1343              		.type	CapSense_GetPrescaler, %function
 1344              	CapSense_GetPrescaler:
 1345              	.LFB16:
1917:Generated_Source\PSoC5/CapSense.c **** 
1918:Generated_Source\PSoC5/CapSense.c **** 
1919:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1920:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_GetPrescaler
1921:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1922:Generated_Source\PSoC5/CapSense.c ****     *
1923:Generated_Source\PSoC5/CapSense.c ****     * Summary:
1924:Generated_Source\PSoC5/CapSense.c ****     *  Gets analog switch divider.
1925:Generated_Source\PSoC5/CapSense.c ****     *
1926:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1927:Generated_Source\PSoC5/CapSense.c ****     *  None
1928:Generated_Source\PSoC5/CapSense.c ****     *
1929:Generated_Source\PSoC5/CapSense.c ****     * Return:
1930:Generated_Source\PSoC5/CapSense.c ****     *   Returns the prescaler divider value.
1931:Generated_Source\PSoC5/CapSense.c ****     *
1932:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1933:Generated_Source\PSoC5/CapSense.c ****     uint8 CapSense_GetPrescaler(void) 
1934:Generated_Source\PSoC5/CapSense.c ****     {
 1346              		.loc 1 1934 0
 1347              		.cfi_startproc
 1348              		@ args = 0, pretend = 0, frame = 8
 1349              		@ frame_needed = 1, uses_anonymous_args = 0
 1350              		@ link register save eliminated.
 1351 0000 80B4     		push	{r7}
 1352              		.cfi_def_cfa_offset 4
 1353              		.cfi_offset 7, -4
 1354 0002 83B0     		sub	sp, sp, #12
 1355              		.cfi_def_cfa_offset 16
 1356 0004 00AF     		add	r7, sp, #0
 1357              		.cfi_def_cfa_register 7
1935:Generated_Source\PSoC5/CapSense.c ****         uint8 prescaler = 0u;
 1358              		.loc 1 1935 0
 1359 0006 0023     		movs	r3, #0
 1360 0008 FB71     		strb	r3, [r7, #7]
1936:Generated_Source\PSoC5/CapSense.c **** 
1937:Generated_Source\PSoC5/CapSense.c ****         /* Get Prescaler */
1938:Generated_Source\PSoC5/CapSense.c ****         #if (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB)
1939:Generated_Source\PSoC5/CapSense.c ****             prescaler = CapSense_PRESCALER_PERIOD_REG;
 1361              		.loc 1 1939 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 59


 1362 000a 044B     		ldr	r3, .L63
 1363 000c 1B78     		ldrb	r3, [r3]
 1364 000e FB71     		strb	r3, [r7, #7]
1940:Generated_Source\PSoC5/CapSense.c ****             
1941:Generated_Source\PSoC5/CapSense.c ****         #elif (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_FF)
1942:Generated_Source\PSoC5/CapSense.c ****             prescaler = (uint8) CY_GET_REG16(CapSense_PRESCALER_PERIOD_PTR);
1943:Generated_Source\PSoC5/CapSense.c ****             
1944:Generated_Source\PSoC5/CapSense.c ****         #else
1945:Generated_Source\PSoC5/CapSense.c ****             /* Do nothing = config without prescaler */
1946:Generated_Source\PSoC5/CapSense.c ****         #endif  /* (CapSense_PRESCALER_OPTIONS == CapSense_PRESCALER_UDB) */
1947:Generated_Source\PSoC5/CapSense.c ****         
1948:Generated_Source\PSoC5/CapSense.c ****         return (prescaler);
 1365              		.loc 1 1948 0
 1366 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1949:Generated_Source\PSoC5/CapSense.c ****     }
 1367              		.loc 1 1949 0
 1368 0012 1846     		mov	r0, r3
 1369 0014 0C37     		adds	r7, r7, #12
 1370              		.cfi_def_cfa_offset 4
 1371 0016 BD46     		mov	sp, r7
 1372              		.cfi_def_cfa_register 13
 1373              		@ sp needed
 1374 0018 80BC     		pop	{r7}
 1375              		.cfi_restore 7
 1376              		.cfi_def_cfa_offset 0
 1377 001a 7047     		bx	lr
 1378              	.L64:
 1379              		.align	2
 1380              	.L63:
 1381 001c 29650040 		.word	1073767721
 1382              		.cfi_endproc
 1383              	.LFE16:
 1384              		.size	CapSense_GetPrescaler, .-CapSense_GetPrescaler
 1385              		.section	.text.CapSense_SetScanSpeed,"ax",%progbits
 1386              		.align	2
 1387              		.global	CapSense_SetScanSpeed
 1388              		.thumb
 1389              		.thumb_func
 1390              		.type	CapSense_SetScanSpeed, %function
 1391              	CapSense_SetScanSpeed:
 1392              	.LFB17:
1950:Generated_Source\PSoC5/CapSense.c **** #endif  /* CapSense_PRESCALER_OPTIONS */
1951:Generated_Source\PSoC5/CapSense.c **** 
1952:Generated_Source\PSoC5/CapSense.c **** 
1953:Generated_Source\PSoC5/CapSense.c **** /*******************************************************************************
1954:Generated_Source\PSoC5/CapSense.c **** * Function Name: CapSense_SetScanSpeed
1955:Generated_Source\PSoC5/CapSense.c **** ********************************************************************************
1956:Generated_Source\PSoC5/CapSense.c **** *
1957:Generated_Source\PSoC5/CapSense.c **** * Summary:
1958:Generated_Source\PSoC5/CapSense.c **** *  Sets ScanSpeed divider.
1959:Generated_Source\PSoC5/CapSense.c **** *
1960:Generated_Source\PSoC5/CapSense.c **** * Parameters:
1961:Generated_Source\PSoC5/CapSense.c **** *  scanspeed:  Sets ScanSpeed divider.
1962:Generated_Source\PSoC5/CapSense.c **** *
1963:Generated_Source\PSoC5/CapSense.c **** * Return:
1964:Generated_Source\PSoC5/CapSense.c **** *  None
1965:Generated_Source\PSoC5/CapSense.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 60


1966:Generated_Source\PSoC5/CapSense.c **** *******************************************************************************/
1967:Generated_Source\PSoC5/CapSense.c **** void CapSense_SetScanSpeed(uint8 scanSpeed) 
1968:Generated_Source\PSoC5/CapSense.c **** {
 1393              		.loc 1 1968 0
 1394              		.cfi_startproc
 1395              		@ args = 0, pretend = 0, frame = 8
 1396              		@ frame_needed = 1, uses_anonymous_args = 0
 1397              		@ link register save eliminated.
 1398 0000 80B4     		push	{r7}
 1399              		.cfi_def_cfa_offset 4
 1400              		.cfi_offset 7, -4
 1401 0002 83B0     		sub	sp, sp, #12
 1402              		.cfi_def_cfa_offset 16
 1403 0004 00AF     		add	r7, sp, #0
 1404              		.cfi_def_cfa_register 7
 1405 0006 0346     		mov	r3, r0
 1406 0008 FB71     		strb	r3, [r7, #7]
1969:Generated_Source\PSoC5/CapSense.c ****     CapSense_SCANSPEED_PERIOD_REG = scanSpeed; 
 1407              		.loc 1 1969 0
 1408 000a 044A     		ldr	r2, .L66
 1409 000c FB79     		ldrb	r3, [r7, #7]
 1410 000e 1370     		strb	r3, [r2]
1970:Generated_Source\PSoC5/CapSense.c **** }
 1411              		.loc 1 1970 0
 1412 0010 00BF     		nop
 1413 0012 0C37     		adds	r7, r7, #12
 1414              		.cfi_def_cfa_offset 4
 1415 0014 BD46     		mov	sp, r7
 1416              		.cfi_def_cfa_register 13
 1417              		@ sp needed
 1418 0016 80BC     		pop	{r7}
 1419              		.cfi_restore 7
 1420              		.cfi_def_cfa_offset 0
 1421 0018 7047     		bx	lr
 1422              	.L67:
 1423 001a 00BF     		.align	2
 1424              	.L66:
 1425 001c 89640040 		.word	1073767561
 1426              		.cfi_endproc
 1427              	.LFE17:
 1428              		.size	CapSense_SetScanSpeed, .-CapSense_SetScanSpeed
 1429              		.section	.text.CapSense_SetAnalogSwitchesSource,"ax",%progbits
 1430              		.align	2
 1431              		.global	CapSense_SetAnalogSwitchesSource
 1432              		.thumb
 1433              		.thumb_func
 1434              		.type	CapSense_SetAnalogSwitchesSource, %function
 1435              	CapSense_SetAnalogSwitchesSource:
 1436              	.LFB18:
1971:Generated_Source\PSoC5/CapSense.c **** 
1972:Generated_Source\PSoC5/CapSense.c **** 
1973:Generated_Source\PSoC5/CapSense.c **** #if (CapSense_PRS_OPTIONS)
1974:Generated_Source\PSoC5/CapSense.c ****     /*******************************************************************************
1975:Generated_Source\PSoC5/CapSense.c ****     * Function Name: CapSense_SetAnalogSwitchesSource
1976:Generated_Source\PSoC5/CapSense.c ****     ********************************************************************************
1977:Generated_Source\PSoC5/CapSense.c ****     *
1978:Generated_Source\PSoC5/CapSense.c ****     * Summary:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 61


1979:Generated_Source\PSoC5/CapSense.c ****     *  Selects the Analog switches source between PRS and prescaler. It is useful
1980:Generated_Source\PSoC5/CapSense.c ****     *  for sensor capacitance determination for sensors with low self-capacitance.
1981:Generated_Source\PSoC5/CapSense.c ****     *  This function is used in auto-tuning procedure.
1982:Generated_Source\PSoC5/CapSense.c ****     *
1983:Generated_Source\PSoC5/CapSense.c ****     * Parameters:
1984:Generated_Source\PSoC5/CapSense.c ****     *  src:  analog switches source:
1985:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRESCALER - selects prescaler
1986:Generated_Source\PSoC5/CapSense.c ****     *           CapSense_ANALOG_SWITCHES_SRC_PRS - selects PRS
1987:Generated_Source\PSoC5/CapSense.c ****     *
1988:Generated_Source\PSoC5/CapSense.c ****     * Return:
1989:Generated_Source\PSoC5/CapSense.c ****     *  None
1990:Generated_Source\PSoC5/CapSense.c ****     *
1991:Generated_Source\PSoC5/CapSense.c ****     * Reentrant:
1992:Generated_Source\PSoC5/CapSense.c ****     *  No
1993:Generated_Source\PSoC5/CapSense.c ****     *******************************************************************************/
1994:Generated_Source\PSoC5/CapSense.c ****     void CapSense_SetAnalogSwitchesSource(uint8 src)
1995:Generated_Source\PSoC5/CapSense.c ****                       
1996:Generated_Source\PSoC5/CapSense.c ****     {
 1437              		.loc 1 1996 0
 1438              		.cfi_startproc
 1439              		@ args = 0, pretend = 0, frame = 8
 1440              		@ frame_needed = 1, uses_anonymous_args = 0
 1441              		@ link register save eliminated.
 1442 0000 80B4     		push	{r7}
 1443              		.cfi_def_cfa_offset 4
 1444              		.cfi_offset 7, -4
 1445 0002 83B0     		sub	sp, sp, #12
 1446              		.cfi_def_cfa_offset 16
 1447 0004 00AF     		add	r7, sp, #0
 1448              		.cfi_def_cfa_register 7
 1449 0006 0346     		mov	r3, r0
 1450 0008 FB71     		strb	r3, [r7, #7]
1997:Generated_Source\PSoC5/CapSense.c ****         if(src == CapSense_ANALOG_SWITCHES_SRC_PRESCALER)
 1451              		.loc 1 1997 0
 1452 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1453 000c 012B     		cmp	r3, #1
 1454 000e 08D1     		bne	.L69
1998:Generated_Source\PSoC5/CapSense.c ****         {
1999:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG &= (uint8)~0x10u;
 1455              		.loc 1 1999 0
 1456 0010 0A4A     		ldr	r2, .L72
 1457 0012 0A4B     		ldr	r3, .L72
 1458 0014 1B78     		ldrb	r3, [r3]
 1459 0016 DBB2     		uxtb	r3, r3
 1460 0018 23F01003 		bic	r3, r3, #16
 1461 001c DBB2     		uxtb	r3, r3
 1462 001e 1370     		strb	r3, [r2]
2000:Generated_Source\PSoC5/CapSense.c ****         }
2001:Generated_Source\PSoC5/CapSense.c ****         else
2002:Generated_Source\PSoC5/CapSense.c ****         {
2003:Generated_Source\PSoC5/CapSense.c ****             CapSense_CONTROL_REG |= 0x10u;
2004:Generated_Source\PSoC5/CapSense.c ****         }
2005:Generated_Source\PSoC5/CapSense.c ****     }
 1463              		.loc 1 2005 0
 1464 0020 07E0     		b	.L71
 1465              	.L69:
2003:Generated_Source\PSoC5/CapSense.c ****         }
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 62


 1466              		.loc 1 2003 0
 1467 0022 064A     		ldr	r2, .L72
 1468 0024 054B     		ldr	r3, .L72
 1469 0026 1B78     		ldrb	r3, [r3]
 1470 0028 DBB2     		uxtb	r3, r3
 1471 002a 43F01003 		orr	r3, r3, #16
 1472 002e DBB2     		uxtb	r3, r3
 1473 0030 1370     		strb	r3, [r2]
 1474              	.L71:
 1475              		.loc 1 2005 0
 1476 0032 00BF     		nop
 1477 0034 0C37     		adds	r7, r7, #12
 1478              		.cfi_def_cfa_offset 4
 1479 0036 BD46     		mov	sp, r7
 1480              		.cfi_def_cfa_register 13
 1481              		@ sp needed
 1482 0038 80BC     		pop	{r7}
 1483              		.cfi_restore 7
 1484              		.cfi_def_cfa_offset 0
 1485 003a 7047     		bx	lr
 1486              	.L73:
 1487              		.align	2
 1488              	.L72:
 1489 003c 7B640040 		.word	1073767547
 1490              		.cfi_endproc
 1491              	.LFE18:
 1492              		.size	CapSense_SetAnalogSwitchesSource, .-CapSense_SetAnalogSwitchesSource
 1493              		.text
 1494              	.Letext0:
 1495              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1496              		.section	.debug_info,"",%progbits
 1497              	.Ldebug_info0:
 1498 0000 3F050000 		.4byte	0x53f
 1499 0004 0400     		.2byte	0x4
 1500 0006 00000000 		.4byte	.Ldebug_abbrev0
 1501 000a 04       		.byte	0x4
 1502 000b 01       		.uleb128 0x1
 1503 000c 61000000 		.4byte	.LASF61
 1504 0010 0C       		.byte	0xc
 1505 0011 14000000 		.4byte	.LASF62
 1506 0015 0F040000 		.4byte	.LASF63
 1507 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1508 001d 00000000 		.4byte	0
 1509 0021 00000000 		.4byte	.Ldebug_line0
 1510 0025 02       		.uleb128 0x2
 1511 0026 01       		.byte	0x1
 1512 0027 06       		.byte	0x6
 1513 0028 3A010000 		.4byte	.LASF0
 1514 002c 02       		.uleb128 0x2
 1515 002d 01       		.byte	0x1
 1516 002e 08       		.byte	0x8
 1517 002f 56030000 		.4byte	.LASF1
 1518 0033 02       		.uleb128 0x2
 1519 0034 02       		.byte	0x2
 1520 0035 05       		.byte	0x5
 1521 0036 7E030000 		.4byte	.LASF2
 1522 003a 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 63


 1523 003b 02       		.byte	0x2
 1524 003c 07       		.byte	0x7
 1525 003d 5B020000 		.4byte	.LASF3
 1526 0041 02       		.uleb128 0x2
 1527 0042 04       		.byte	0x4
 1528 0043 05       		.byte	0x5
 1529 0044 67010000 		.4byte	.LASF4
 1530 0048 02       		.uleb128 0x2
 1531 0049 04       		.byte	0x4
 1532 004a 07       		.byte	0x7
 1533 004b 23020000 		.4byte	.LASF5
 1534 004f 02       		.uleb128 0x2
 1535 0050 08       		.byte	0x8
 1536 0051 05       		.byte	0x5
 1537 0052 2C010000 		.4byte	.LASF6
 1538 0056 02       		.uleb128 0x2
 1539 0057 08       		.byte	0x8
 1540 0058 07       		.byte	0x7
 1541 0059 EF000000 		.4byte	.LASF7
 1542 005d 03       		.uleb128 0x3
 1543 005e 04       		.byte	0x4
 1544 005f 05       		.byte	0x5
 1545 0060 696E7400 		.ascii	"int\000"
 1546 0064 02       		.uleb128 0x2
 1547 0065 04       		.byte	0x4
 1548 0066 07       		.byte	0x7
 1549 0067 00020000 		.4byte	.LASF8
 1550 006b 04       		.uleb128 0x4
 1551 006c 76010000 		.4byte	.LASF9
 1552 0070 02       		.byte	0x2
 1553 0071 E401     		.2byte	0x1e4
 1554 0073 2C000000 		.4byte	0x2c
 1555 0077 04       		.uleb128 0x4
 1556 0078 00000000 		.4byte	.LASF10
 1557 007c 02       		.byte	0x2
 1558 007d E501     		.2byte	0x1e5
 1559 007f 3A000000 		.4byte	0x3a
 1560 0083 04       		.uleb128 0x4
 1561 0084 C6010000 		.4byte	.LASF11
 1562 0088 02       		.byte	0x2
 1563 0089 E601     		.2byte	0x1e6
 1564 008b 48000000 		.4byte	0x48
 1565 008f 02       		.uleb128 0x2
 1566 0090 04       		.byte	0x4
 1567 0091 04       		.byte	0x4
 1568 0092 12030000 		.4byte	.LASF12
 1569 0096 02       		.uleb128 0x2
 1570 0097 08       		.byte	0x8
 1571 0098 04       		.byte	0x4
 1572 0099 7C010000 		.4byte	.LASF13
 1573 009d 02       		.uleb128 0x2
 1574 009e 01       		.byte	0x1
 1575 009f 08       		.byte	0x8
 1576 00a0 A5030000 		.4byte	.LASF14
 1577 00a4 04       		.uleb128 0x4
 1578 00a5 22030000 		.4byte	.LASF15
 1579 00a9 02       		.byte	0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 64


 1580 00aa 8E02     		.2byte	0x28e
 1581 00ac B0000000 		.4byte	0xb0
 1582 00b0 05       		.uleb128 0x5
 1583 00b1 6B000000 		.4byte	0x6b
 1584 00b5 04       		.uleb128 0x4
 1585 00b6 70010000 		.4byte	.LASF16
 1586 00ba 02       		.byte	0x2
 1587 00bb 8F02     		.2byte	0x28f
 1588 00bd C1000000 		.4byte	0xc1
 1589 00c1 05       		.uleb128 0x5
 1590 00c2 77000000 		.4byte	0x77
 1591 00c6 04       		.uleb128 0x4
 1592 00c7 94020000 		.4byte	.LASF17
 1593 00cb 02       		.byte	0x2
 1594 00cc 9002     		.2byte	0x290
 1595 00ce D2000000 		.4byte	0xd2
 1596 00d2 05       		.uleb128 0x5
 1597 00d3 83000000 		.4byte	0x83
 1598 00d7 02       		.uleb128 0x2
 1599 00d8 08       		.byte	0x8
 1600 00d9 04       		.byte	0x4
 1601 00da D1020000 		.4byte	.LASF18
 1602 00de 02       		.uleb128 0x2
 1603 00df 04       		.byte	0x4
 1604 00e0 07       		.byte	0x7
 1605 00e1 B7020000 		.4byte	.LASF19
 1606 00e5 06       		.uleb128 0x6
 1607 00e6 86040000 		.4byte	.LASF20
 1608 00ea 01       		.byte	0x1
 1609 00eb 98       		.byte	0x98
 1610 00ec 00000000 		.4byte	.LFB0
 1611 00f0 48010000 		.4byte	.LFE0-.LFB0
 1612 00f4 01       		.uleb128 0x1
 1613 00f5 9C       		.byte	0x9c
 1614 00f6 09010000 		.4byte	0x109
 1615 00fa 07       		.uleb128 0x7
 1616 00fb E1030000 		.4byte	.LASF22
 1617 00ff 01       		.byte	0x1
 1618 0100 9F       		.byte	0x9f
 1619 0101 6B000000 		.4byte	0x6b
 1620 0105 02       		.uleb128 0x2
 1621 0106 91       		.byte	0x91
 1622 0107 77       		.sleb128 -9
 1623 0108 00       		.byte	0
 1624 0109 08       		.uleb128 0x8
 1625 010a 06010000 		.4byte	.LASF21
 1626 010e 01       		.byte	0x1
 1627 010f 7901     		.2byte	0x179
 1628 0111 00000000 		.4byte	.LFB1
 1629 0115 98000000 		.4byte	.LFE1-.LFB1
 1630 0119 01       		.uleb128 0x1
 1631 011a 9C       		.byte	0x9c
 1632 011b 2F010000 		.4byte	0x12f
 1633 011f 09       		.uleb128 0x9
 1634 0120 E1030000 		.4byte	.LASF22
 1635 0124 01       		.byte	0x1
 1636 0125 7B01     		.2byte	0x17b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 65


 1637 0127 6B000000 		.4byte	0x6b
 1638 012b 02       		.uleb128 0x2
 1639 012c 91       		.byte	0x91
 1640 012d 77       		.sleb128 -9
 1641 012e 00       		.byte	0
 1642 012f 0A       		.uleb128 0xa
 1643 0130 C0030000 		.4byte	.LASF23
 1644 0134 01       		.byte	0x1
 1645 0135 1202     		.2byte	0x212
 1646 0137 00000000 		.4byte	.LFB2
 1647 013b 24000000 		.4byte	.LFE2-.LFB2
 1648 013f 01       		.uleb128 0x1
 1649 0140 9C       		.byte	0x9c
 1650 0141 0A       		.uleb128 0xa
 1651 0142 DD020000 		.4byte	.LASF24
 1652 0146 01       		.byte	0x1
 1653 0147 3702     		.2byte	0x237
 1654 0149 00000000 		.4byte	.LFB3
 1655 014d 98000000 		.4byte	.LFE3-.LFB3
 1656 0151 01       		.uleb128 0x1
 1657 0152 9C       		.byte	0x9c
 1658 0153 0B       		.uleb128 0xb
 1659 0154 27030000 		.4byte	.LASF33
 1660 0158 01       		.byte	0x1
 1661 0159 C102     		.2byte	0x2c1
 1662 015b 6B000000 		.4byte	0x6b
 1663 015f 00000000 		.4byte	.LFB4
 1664 0163 50000000 		.4byte	.LFE4-.LFB4
 1665 0167 01       		.uleb128 0x1
 1666 0168 9C       		.byte	0x9c
 1667 0169 9B010000 		.4byte	0x19b
 1668 016d 0C       		.uleb128 0xc
 1669 016e 58000000 		.4byte	.LASF27
 1670 0172 01       		.byte	0x1
 1671 0173 C102     		.2byte	0x2c1
 1672 0175 6B000000 		.4byte	0x6b
 1673 0179 02       		.uleb128 0x2
 1674 017a 91       		.byte	0x91
 1675 017b 6F       		.sleb128 -17
 1676 017c 0D       		.uleb128 0xd
 1677 017d 706F7300 		.ascii	"pos\000"
 1678 0181 01       		.byte	0x1
 1679 0182 C302     		.2byte	0x2c3
 1680 0184 6B000000 		.4byte	0x6b
 1681 0188 02       		.uleb128 0x2
 1682 0189 91       		.byte	0x91
 1683 018a 77       		.sleb128 -9
 1684 018b 09       		.uleb128 0x9
 1685 018c F5020000 		.4byte	.LASF25
 1686 0190 01       		.byte	0x1
 1687 0191 C402     		.2byte	0x2c4
 1688 0193 6B000000 		.4byte	0x6b
 1689 0197 02       		.uleb128 0x2
 1690 0198 91       		.byte	0x91
 1691 0199 76       		.sleb128 -10
 1692 019a 00       		.byte	0
 1693 019b 08       		.uleb128 0x8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 66


 1694 019c F2030000 		.4byte	.LASF26
 1695 01a0 01       		.byte	0x1
 1696 01a1 5B03     		.2byte	0x35b
 1697 01a3 00000000 		.4byte	.LFB5
 1698 01a7 50000000 		.4byte	.LFE5-.LFB5
 1699 01ab 01       		.uleb128 0x1
 1700 01ac 9C       		.byte	0x9c
 1701 01ad D0010000 		.4byte	0x1d0
 1702 01b1 0C       		.uleb128 0xc
 1703 01b2 8F020000 		.4byte	.LASF28
 1704 01b6 01       		.byte	0x1
 1705 01b7 5B03     		.2byte	0x35b
 1706 01b9 6B000000 		.4byte	0x6b
 1707 01bd 02       		.uleb128 0x2
 1708 01be 91       		.byte	0x91
 1709 01bf 6F       		.sleb128 -17
 1710 01c0 09       		.uleb128 0x9
 1711 01c1 88030000 		.4byte	.LASF29
 1712 01c5 01       		.byte	0x1
 1713 01c6 5D03     		.2byte	0x35d
 1714 01c8 6B000000 		.4byte	0x6b
 1715 01cc 02       		.uleb128 0x2
 1716 01cd 91       		.byte	0x91
 1717 01ce 77       		.sleb128 -9
 1718 01cf 00       		.byte	0
 1719 01d0 08       		.uleb128 0x8
 1720 01d1 EC010000 		.4byte	.LASF30
 1721 01d5 01       		.byte	0x1
 1722 01d6 CB03     		.2byte	0x3cb
 1723 01d8 00000000 		.4byte	.LFB6
 1724 01dc 34000000 		.4byte	.LFE6-.LFB6
 1725 01e0 01       		.uleb128 0x1
 1726 01e1 9C       		.byte	0x9c
 1727 01e2 F6010000 		.4byte	0x1f6
 1728 01e6 0C       		.uleb128 0xc
 1729 01e7 6E020000 		.4byte	.LASF31
 1730 01eb 01       		.byte	0x1
 1731 01ec CB03     		.2byte	0x3cb
 1732 01ee 6B000000 		.4byte	0x6b
 1733 01f2 02       		.uleb128 0x2
 1734 01f3 91       		.byte	0x91
 1735 01f4 77       		.sleb128 -9
 1736 01f5 00       		.byte	0
 1737 01f6 0A       		.uleb128 0xa
 1738 01f7 A7040000 		.4byte	.LASF32
 1739 01fb 01       		.byte	0x1
 1740 01fc 1804     		.2byte	0x418
 1741 01fe 00000000 		.4byte	.LFB7
 1742 0202 58000000 		.4byte	.LFE7-.LFB7
 1743 0206 01       		.uleb128 0x1
 1744 0207 9C       		.byte	0x9c
 1745 0208 0E       		.uleb128 0xe
 1746 0209 C3040000 		.4byte	.LASF64
 1747 020d 01       		.byte	0x1
 1748 020e 4D04     		.2byte	0x44d
 1749 0210 6B000000 		.4byte	0x6b
 1750 0214 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 67


 1751 0218 1C000000 		.4byte	.LFE8-.LFB8
 1752 021c 01       		.uleb128 0x1
 1753 021d 9C       		.byte	0x9c
 1754 021e 0B       		.uleb128 0xb
 1755 021f AF010000 		.4byte	.LASF34
 1756 0223 01       		.byte	0x1
 1757 0224 6604     		.2byte	0x466
 1758 0226 77000000 		.4byte	0x77
 1759 022a 00000000 		.4byte	.LFB9
 1760 022e 20000000 		.4byte	.LFE9-.LFB9
 1761 0232 01       		.uleb128 0x1
 1762 0233 9C       		.byte	0x9c
 1763 0234 48020000 		.4byte	0x248
 1764 0238 0C       		.uleb128 0xc
 1765 0239 6E020000 		.4byte	.LASF31
 1766 023d 01       		.byte	0x1
 1767 023e 6604     		.2byte	0x466
 1768 0240 6B000000 		.4byte	0x6b
 1769 0244 02       		.uleb128 0x2
 1770 0245 91       		.byte	0x91
 1771 0246 77       		.sleb128 -9
 1772 0247 00       		.byte	0
 1773 0248 08       		.uleb128 0x8
 1774 0249 0D020000 		.4byte	.LASF35
 1775 024d 01       		.byte	0x1
 1776 024e 7B04     		.2byte	0x47b
 1777 0250 00000000 		.4byte	.LFB10
 1778 0254 28000000 		.4byte	.LFE10-.LFB10
 1779 0258 01       		.uleb128 0x1
 1780 0259 9C       		.byte	0x9c
 1781 025a 6C020000 		.4byte	0x26c
 1782 025e 0D       		.uleb128 0xd
 1783 025f 6900     		.ascii	"i\000"
 1784 0261 01       		.byte	0x1
 1785 0262 7D04     		.2byte	0x47d
 1786 0264 6B000000 		.4byte	0x6b
 1787 0268 02       		.uleb128 0x2
 1788 0269 91       		.byte	0x91
 1789 026a 77       		.sleb128 -9
 1790 026b 00       		.byte	0
 1791 026c 08       		.uleb128 0x8
 1792 026d 83010000 		.4byte	.LASF36
 1793 0271 01       		.byte	0x1
 1794 0272 1105     		.2byte	0x511
 1795 0274 00000000 		.4byte	.LFB11
 1796 0278 6C000000 		.4byte	.LFE11-.LFB11
 1797 027c 01       		.uleb128 0x1
 1798 027d 9C       		.byte	0x9c
 1799 027e B0020000 		.4byte	0x2b0
 1800 0282 0C       		.uleb128 0xc
 1801 0283 6E020000 		.4byte	.LASF31
 1802 0287 01       		.byte	0x1
 1803 0288 1105     		.2byte	0x511
 1804 028a 6B000000 		.4byte	0x6b
 1805 028e 02       		.uleb128 0x2
 1806 028f 91       		.byte	0x91
 1807 0290 6F       		.sleb128 -17
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 68


 1808 0291 09       		.uleb128 0x9
 1809 0292 D2010000 		.4byte	.LASF37
 1810 0296 01       		.byte	0x1
 1811 0297 1305     		.2byte	0x513
 1812 0299 6B000000 		.4byte	0x6b
 1813 029d 02       		.uleb128 0x2
 1814 029e 91       		.byte	0x91
 1815 029f 77       		.sleb128 -9
 1816 02a0 09       		.uleb128 0x9
 1817 02a1 CD010000 		.4byte	.LASF38
 1818 02a5 01       		.byte	0x1
 1819 02a6 1405     		.2byte	0x514
 1820 02a8 6B000000 		.4byte	0x6b
 1821 02ac 02       		.uleb128 0x2
 1822 02ad 91       		.byte	0x91
 1823 02ae 76       		.sleb128 -10
 1824 02af 00       		.byte	0
 1825 02b0 08       		.uleb128 0x8
 1826 02b1 3F030000 		.4byte	.LASF39
 1827 02b5 01       		.byte	0x1
 1828 02b6 6605     		.2byte	0x566
 1829 02b8 00000000 		.4byte	.LFB12
 1830 02bc 70000000 		.4byte	.LFE12-.LFB12
 1831 02c0 01       		.uleb128 0x1
 1832 02c1 9C       		.byte	0x9c
 1833 02c2 F4020000 		.4byte	0x2f4
 1834 02c6 0C       		.uleb128 0xc
 1835 02c7 6E020000 		.4byte	.LASF31
 1836 02cb 01       		.byte	0x1
 1837 02cc 6605     		.2byte	0x566
 1838 02ce 6B000000 		.4byte	0x6b
 1839 02d2 02       		.uleb128 0x2
 1840 02d3 91       		.byte	0x91
 1841 02d4 6F       		.sleb128 -17
 1842 02d5 09       		.uleb128 0x9
 1843 02d6 D2010000 		.4byte	.LASF37
 1844 02da 01       		.byte	0x1
 1845 02db 6805     		.2byte	0x568
 1846 02dd 6B000000 		.4byte	0x6b
 1847 02e1 02       		.uleb128 0x2
 1848 02e2 91       		.byte	0x91
 1849 02e3 77       		.sleb128 -9
 1850 02e4 09       		.uleb128 0x9
 1851 02e5 CD010000 		.4byte	.LASF38
 1852 02e9 01       		.byte	0x1
 1853 02ea 6905     		.2byte	0x569
 1854 02ec 6B000000 		.4byte	0x6b
 1855 02f0 02       		.uleb128 0x2
 1856 02f1 91       		.byte	0x91
 1857 02f2 76       		.sleb128 -10
 1858 02f3 00       		.byte	0
 1859 02f4 08       		.uleb128 0x8
 1860 02f5 75040000 		.4byte	.LASF40
 1861 02f9 01       		.byte	0x1
 1862 02fa BA05     		.2byte	0x5ba
 1863 02fc 00000000 		.4byte	.LFB13
 1864 0300 5C000000 		.4byte	.LFE13-.LFB13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 69


 1865 0304 01       		.uleb128 0x1
 1866 0305 9C       		.byte	0x9c
 1867 0306 1A030000 		.4byte	0x31a
 1868 030a 0C       		.uleb128 0xc
 1869 030b 6E020000 		.4byte	.LASF31
 1870 030f 01       		.byte	0x1
 1871 0310 BA05     		.2byte	0x5ba
 1872 0312 6B000000 		.4byte	0x6b
 1873 0316 02       		.uleb128 0x2
 1874 0317 91       		.byte	0x91
 1875 0318 77       		.sleb128 -9
 1876 0319 00       		.byte	0
 1877 031a 08       		.uleb128 0x8
 1878 031b CF030000 		.4byte	.LASF41
 1879 031f 01       		.byte	0x1
 1880 0320 6206     		.2byte	0x662
 1881 0322 00000000 		.4byte	.LFB14
 1882 0326 98000000 		.4byte	.LFE14-.LFB14
 1883 032a 01       		.uleb128 0x1
 1884 032b 9C       		.byte	0x9c
 1885 032c 40030000 		.4byte	0x340
 1886 0330 0C       		.uleb128 0xc
 1887 0331 6E020000 		.4byte	.LASF31
 1888 0335 01       		.byte	0x1
 1889 0336 6206     		.2byte	0x662
 1890 0338 6B000000 		.4byte	0x6b
 1891 033c 02       		.uleb128 0x2
 1892 033d 91       		.byte	0x91
 1893 033e 77       		.sleb128 -9
 1894 033f 00       		.byte	0
 1895 0340 0F       		.uleb128 0xf
 1896 0341 16010000 		.4byte	.LASF42
 1897 0345 01       		.byte	0x1
 1898 0346 7007     		.2byte	0x770
 1899 0348 00000000 		.4byte	.LFB15
 1900 034c 2C000000 		.4byte	.LFE15-.LFB15
 1901 0350 01       		.uleb128 0x1
 1902 0351 9C       		.byte	0x9c
 1903 0352 66030000 		.4byte	0x366
 1904 0356 0C       		.uleb128 0xc
 1905 0357 18030000 		.4byte	.LASF43
 1906 035b 01       		.byte	0x1
 1907 035c 7007     		.2byte	0x770
 1908 035e 6B000000 		.4byte	0x6b
 1909 0362 02       		.uleb128 0x2
 1910 0363 91       		.byte	0x91
 1911 0364 77       		.sleb128 -9
 1912 0365 00       		.byte	0
 1913 0366 0B       		.uleb128 0xb
 1914 0367 8F030000 		.4byte	.LASF44
 1915 036b 01       		.byte	0x1
 1916 036c 8D07     		.2byte	0x78d
 1917 036e 6B000000 		.4byte	0x6b
 1918 0372 00000000 		.4byte	.LFB16
 1919 0376 20000000 		.4byte	.LFE16-.LFB16
 1920 037a 01       		.uleb128 0x1
 1921 037b 9C       		.byte	0x9c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 70


 1922 037c 90030000 		.4byte	0x390
 1923 0380 09       		.uleb128 0x9
 1924 0381 18030000 		.4byte	.LASF43
 1925 0385 01       		.byte	0x1
 1926 0386 8F07     		.2byte	0x78f
 1927 0388 6B000000 		.4byte	0x6b
 1928 038c 02       		.uleb128 0x2
 1929 038d 91       		.byte	0x91
 1930 038e 77       		.sleb128 -9
 1931 038f 00       		.byte	0
 1932 0390 0F       		.uleb128 0xf
 1933 0391 AA030000 		.4byte	.LASF45
 1934 0395 01       		.byte	0x1
 1935 0396 AF07     		.2byte	0x7af
 1936 0398 00000000 		.4byte	.LFB17
 1937 039c 20000000 		.4byte	.LFE17-.LFB17
 1938 03a0 01       		.uleb128 0x1
 1939 03a1 9C       		.byte	0x9c
 1940 03a2 B6030000 		.4byte	0x3b6
 1941 03a6 0C       		.uleb128 0xc
 1942 03a7 EB020000 		.4byte	.LASF46
 1943 03ab 01       		.byte	0x1
 1944 03ac AF07     		.2byte	0x7af
 1945 03ae 6B000000 		.4byte	0x6b
 1946 03b2 02       		.uleb128 0x2
 1947 03b3 91       		.byte	0x91
 1948 03b4 77       		.sleb128 -9
 1949 03b5 00       		.byte	0
 1950 03b6 0F       		.uleb128 0xf
 1951 03b7 46010000 		.4byte	.LASF47
 1952 03bb 01       		.byte	0x1
 1953 03bc CA07     		.2byte	0x7ca
 1954 03be 00000000 		.4byte	.LFB18
 1955 03c2 40000000 		.4byte	.LFE18-.LFB18
 1956 03c6 01       		.uleb128 0x1
 1957 03c7 9C       		.byte	0x9c
 1958 03c8 DC030000 		.4byte	0x3dc
 1959 03cc 10       		.uleb128 0x10
 1960 03cd 73726300 		.ascii	"src\000"
 1961 03d1 01       		.byte	0x1
 1962 03d2 CA07     		.2byte	0x7ca
 1963 03d4 6B000000 		.4byte	0x6b
 1964 03d8 02       		.uleb128 0x2
 1965 03d9 91       		.byte	0x91
 1966 03da 77       		.sleb128 -9
 1967 03db 00       		.byte	0
 1968 03dc 07       		.uleb128 0x7
 1969 03dd 36000000 		.4byte	.LASF48
 1970 03e1 01       		.byte	0x1
 1971 03e2 16       		.byte	0x16
 1972 03e3 6B000000 		.4byte	0x6b
 1973 03e7 05       		.uleb128 0x5
 1974 03e8 03       		.byte	0x3
 1975 03e9 00000000 		.4byte	CapSense_initVar
 1976 03ed 11       		.uleb128 0x11
 1977 03ee 07000000 		.4byte	.LASF49
 1978 03f2 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 71


 1979 03f3 19       		.byte	0x19
 1980 03f4 B0000000 		.4byte	0xb0
 1981 03f8 05       		.uleb128 0x5
 1982 03f9 03       		.byte	0x3
 1983 03fa 00000000 		.4byte	CapSense_csv
 1984 03fe 11       		.uleb128 0x11
 1985 03ff D7010000 		.4byte	.LASF50
 1986 0403 01       		.byte	0x1
 1987 0404 1A       		.byte	0x1a
 1988 0405 B0000000 		.4byte	0xb0
 1989 0409 05       		.uleb128 0x5
 1990 040a 03       		.byte	0x3
 1991 040b 00000000 		.4byte	CapSense_sensorIndex
 1992 040f 12       		.uleb128 0x12
 1993 0410 77000000 		.4byte	0x77
 1994 0414 1F040000 		.4byte	0x41f
 1995 0418 13       		.uleb128 0x13
 1996 0419 DE000000 		.4byte	0xde
 1997 041d 0B       		.byte	0xb
 1998 041e 00       		.byte	0
 1999 041f 11       		.uleb128 0x11
 2000 0420 94040000 		.4byte	.LASF51
 2001 0424 01       		.byte	0x1
 2002 0425 29       		.byte	0x29
 2003 0426 0F040000 		.4byte	0x40f
 2004 042a 05       		.uleb128 0x5
 2005 042b 03       		.byte	0x3
 2006 042c 00000000 		.4byte	CapSense_sensorRaw
 2007 0430 12       		.uleb128 0x12
 2008 0431 6B000000 		.4byte	0x6b
 2009 0435 40040000 		.4byte	0x440
 2010 0439 13       		.uleb128 0x13
 2011 043a DE000000 		.4byte	0xde
 2012 043e 01       		.byte	0x1
 2013 043f 00       		.byte	0
 2014 0440 11       		.uleb128 0x11
 2015 0441 75020000 		.4byte	.LASF52
 2016 0445 01       		.byte	0x1
 2017 0446 2B       		.byte	0x2b
 2018 0447 30040000 		.4byte	0x430
 2019 044b 05       		.uleb128 0x5
 2020 044c 03       		.byte	0x3
 2021 044d 00000000 		.4byte	CapSense_sensorEnableMask
 2022 0451 12       		.uleb128 0x12
 2023 0452 67040000 		.4byte	0x467
 2024 0456 61040000 		.4byte	0x461
 2025 045a 13       		.uleb128 0x13
 2026 045b DE000000 		.4byte	0xde
 2027 045f 0B       		.byte	0xb
 2028 0460 00       		.byte	0
 2029 0461 14       		.uleb128 0x14
 2030 0462 04       		.byte	0x4
 2031 0463 6B000000 		.4byte	0x6b
 2032 0467 15       		.uleb128 0x15
 2033 0468 61040000 		.4byte	0x461
 2034 046c 11       		.uleb128 0x11
 2035 046d 47000000 		.4byte	.LASF53
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 72


 2036 0471 01       		.byte	0x1
 2037 0472 2E       		.byte	0x2e
 2038 0473 7D040000 		.4byte	0x47d
 2039 0477 05       		.uleb128 0x5
 2040 0478 03       		.byte	0x3
 2041 0479 00000000 		.4byte	CapSense_pcTable
 2042 047d 15       		.uleb128 0x15
 2043 047e 51040000 		.4byte	0x451
 2044 0482 12       		.uleb128 0x12
 2045 0483 92040000 		.4byte	0x492
 2046 0487 92040000 		.4byte	0x492
 2047 048b 13       		.uleb128 0x13
 2048 048c DE000000 		.4byte	0xde
 2049 0490 0B       		.byte	0xb
 2050 0491 00       		.byte	0
 2051 0492 15       		.uleb128 0x15
 2052 0493 6B000000 		.4byte	0x6b
 2053 0497 11       		.uleb128 0x11
 2054 0498 48020000 		.4byte	.LASF54
 2055 049c 01       		.byte	0x1
 2056 049d 3D       		.byte	0x3d
 2057 049e A8040000 		.4byte	0x4a8
 2058 04a2 05       		.uleb128 0x5
 2059 04a3 03       		.byte	0x3
 2060 04a4 00000000 		.4byte	CapSense_portTable
 2061 04a8 15       		.uleb128 0x15
 2062 04a9 82040000 		.4byte	0x482
 2063 04ad 11       		.uleb128 0x11
 2064 04ae 35020000 		.4byte	.LASF55
 2065 04b2 01       		.byte	0x1
 2066 04b3 4C       		.byte	0x4c
 2067 04b4 BE040000 		.4byte	0x4be
 2068 04b8 05       		.uleb128 0x5
 2069 04b9 03       		.byte	0x3
 2070 04ba 00000000 		.4byte	CapSense_maskTable
 2071 04be 15       		.uleb128 0x15
 2072 04bf 82040000 		.4byte	0x482
 2073 04c3 12       		.uleb128 0x12
 2074 04c4 67040000 		.4byte	0x467
 2075 04c8 D3040000 		.4byte	0x4d3
 2076 04cc 13       		.uleb128 0x13
 2077 04cd DE000000 		.4byte	0xde
 2078 04d1 07       		.byte	0x7
 2079 04d2 00       		.byte	0
 2080 04d3 11       		.uleb128 0x11
 2081 04d4 C0020000 		.4byte	.LASF56
 2082 04d8 01       		.byte	0x1
 2083 04d9 5B       		.byte	0x5b
 2084 04da E4040000 		.4byte	0x4e4
 2085 04de 05       		.uleb128 0x5
 2086 04df 03       		.byte	0x3
 2087 04e0 00000000 		.4byte	CapSense_csTable
 2088 04e4 15       		.uleb128 0x15
 2089 04e5 C3040000 		.4byte	0x4c3
 2090 04e9 12       		.uleb128 0x12
 2091 04ea 6B000000 		.4byte	0x6b
 2092 04ee F9040000 		.4byte	0x4f9
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 73


 2093 04f2 13       		.uleb128 0x13
 2094 04f3 DE000000 		.4byte	0xde
 2095 04f7 0B       		.byte	0xb
 2096 04f8 00       		.byte	0
 2097 04f9 11       		.uleb128 0x11
 2098 04fa FC020000 		.4byte	.LASF57
 2099 04fe 01       		.byte	0x1
 2100 04ff 61       		.byte	0x61
 2101 0500 E9040000 		.4byte	0x4e9
 2102 0504 05       		.uleb128 0x5
 2103 0505 03       		.byte	0x3
 2104 0506 00000000 		.4byte	CapSense_idacSettings
 2105 050a 11       		.uleb128 0x11
 2106 050b 64030000 		.4byte	.LASF58
 2107 050f 01       		.byte	0x1
 2108 0510 65       		.byte	0x65
 2109 0511 E9040000 		.4byte	0x4e9
 2110 0515 05       		.uleb128 0x5
 2111 0516 03       		.byte	0x3
 2112 0517 00000000 		.4byte	CapSense_widgetResolution
 2113 051b 11       		.uleb128 0x11
 2114 051c 9A020000 		.4byte	.LASF59
 2115 0520 01       		.byte	0x1
 2116 0521 74       		.byte	0x74
 2117 0522 6B000000 		.4byte	0x6b
 2118 0526 05       		.uleb128 0x5
 2119 0527 03       		.byte	0x3
 2120 0528 00000000 		.4byte	CapSense_analogSwitchDivider
 2121 052c 11       		.uleb128 0x11
 2122 052d 99010000 		.4byte	.LASF60
 2123 0531 01       		.byte	0x1
 2124 0532 76       		.byte	0x76
 2125 0533 3D050000 		.4byte	0x53d
 2126 0537 05       		.uleb128 0x5
 2127 0538 03       		.byte	0x3
 2128 0539 00000000 		.4byte	CapSense_widgetNumber
 2129 053d 15       		.uleb128 0x15
 2130 053e 82040000 		.4byte	0x482
 2131 0542 00       		.byte	0
 2132              		.section	.debug_abbrev,"",%progbits
 2133              	.Ldebug_abbrev0:
 2134 0000 01       		.uleb128 0x1
 2135 0001 11       		.uleb128 0x11
 2136 0002 01       		.byte	0x1
 2137 0003 25       		.uleb128 0x25
 2138 0004 0E       		.uleb128 0xe
 2139 0005 13       		.uleb128 0x13
 2140 0006 0B       		.uleb128 0xb
 2141 0007 03       		.uleb128 0x3
 2142 0008 0E       		.uleb128 0xe
 2143 0009 1B       		.uleb128 0x1b
 2144 000a 0E       		.uleb128 0xe
 2145 000b 55       		.uleb128 0x55
 2146 000c 17       		.uleb128 0x17
 2147 000d 11       		.uleb128 0x11
 2148 000e 01       		.uleb128 0x1
 2149 000f 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 74


 2150 0010 17       		.uleb128 0x17
 2151 0011 00       		.byte	0
 2152 0012 00       		.byte	0
 2153 0013 02       		.uleb128 0x2
 2154 0014 24       		.uleb128 0x24
 2155 0015 00       		.byte	0
 2156 0016 0B       		.uleb128 0xb
 2157 0017 0B       		.uleb128 0xb
 2158 0018 3E       		.uleb128 0x3e
 2159 0019 0B       		.uleb128 0xb
 2160 001a 03       		.uleb128 0x3
 2161 001b 0E       		.uleb128 0xe
 2162 001c 00       		.byte	0
 2163 001d 00       		.byte	0
 2164 001e 03       		.uleb128 0x3
 2165 001f 24       		.uleb128 0x24
 2166 0020 00       		.byte	0
 2167 0021 0B       		.uleb128 0xb
 2168 0022 0B       		.uleb128 0xb
 2169 0023 3E       		.uleb128 0x3e
 2170 0024 0B       		.uleb128 0xb
 2171 0025 03       		.uleb128 0x3
 2172 0026 08       		.uleb128 0x8
 2173 0027 00       		.byte	0
 2174 0028 00       		.byte	0
 2175 0029 04       		.uleb128 0x4
 2176 002a 16       		.uleb128 0x16
 2177 002b 00       		.byte	0
 2178 002c 03       		.uleb128 0x3
 2179 002d 0E       		.uleb128 0xe
 2180 002e 3A       		.uleb128 0x3a
 2181 002f 0B       		.uleb128 0xb
 2182 0030 3B       		.uleb128 0x3b
 2183 0031 05       		.uleb128 0x5
 2184 0032 49       		.uleb128 0x49
 2185 0033 13       		.uleb128 0x13
 2186 0034 00       		.byte	0
 2187 0035 00       		.byte	0
 2188 0036 05       		.uleb128 0x5
 2189 0037 35       		.uleb128 0x35
 2190 0038 00       		.byte	0
 2191 0039 49       		.uleb128 0x49
 2192 003a 13       		.uleb128 0x13
 2193 003b 00       		.byte	0
 2194 003c 00       		.byte	0
 2195 003d 06       		.uleb128 0x6
 2196 003e 2E       		.uleb128 0x2e
 2197 003f 01       		.byte	0x1
 2198 0040 3F       		.uleb128 0x3f
 2199 0041 19       		.uleb128 0x19
 2200 0042 03       		.uleb128 0x3
 2201 0043 0E       		.uleb128 0xe
 2202 0044 3A       		.uleb128 0x3a
 2203 0045 0B       		.uleb128 0xb
 2204 0046 3B       		.uleb128 0x3b
 2205 0047 0B       		.uleb128 0xb
 2206 0048 27       		.uleb128 0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 75


 2207 0049 19       		.uleb128 0x19
 2208 004a 11       		.uleb128 0x11
 2209 004b 01       		.uleb128 0x1
 2210 004c 12       		.uleb128 0x12
 2211 004d 06       		.uleb128 0x6
 2212 004e 40       		.uleb128 0x40
 2213 004f 18       		.uleb128 0x18
 2214 0050 9642     		.uleb128 0x2116
 2215 0052 19       		.uleb128 0x19
 2216 0053 01       		.uleb128 0x1
 2217 0054 13       		.uleb128 0x13
 2218 0055 00       		.byte	0
 2219 0056 00       		.byte	0
 2220 0057 07       		.uleb128 0x7
 2221 0058 34       		.uleb128 0x34
 2222 0059 00       		.byte	0
 2223 005a 03       		.uleb128 0x3
 2224 005b 0E       		.uleb128 0xe
 2225 005c 3A       		.uleb128 0x3a
 2226 005d 0B       		.uleb128 0xb
 2227 005e 3B       		.uleb128 0x3b
 2228 005f 0B       		.uleb128 0xb
 2229 0060 49       		.uleb128 0x49
 2230 0061 13       		.uleb128 0x13
 2231 0062 02       		.uleb128 0x2
 2232 0063 18       		.uleb128 0x18
 2233 0064 00       		.byte	0
 2234 0065 00       		.byte	0
 2235 0066 08       		.uleb128 0x8
 2236 0067 2E       		.uleb128 0x2e
 2237 0068 01       		.byte	0x1
 2238 0069 3F       		.uleb128 0x3f
 2239 006a 19       		.uleb128 0x19
 2240 006b 03       		.uleb128 0x3
 2241 006c 0E       		.uleb128 0xe
 2242 006d 3A       		.uleb128 0x3a
 2243 006e 0B       		.uleb128 0xb
 2244 006f 3B       		.uleb128 0x3b
 2245 0070 05       		.uleb128 0x5
 2246 0071 27       		.uleb128 0x27
 2247 0072 19       		.uleb128 0x19
 2248 0073 11       		.uleb128 0x11
 2249 0074 01       		.uleb128 0x1
 2250 0075 12       		.uleb128 0x12
 2251 0076 06       		.uleb128 0x6
 2252 0077 40       		.uleb128 0x40
 2253 0078 18       		.uleb128 0x18
 2254 0079 9642     		.uleb128 0x2116
 2255 007b 19       		.uleb128 0x19
 2256 007c 01       		.uleb128 0x1
 2257 007d 13       		.uleb128 0x13
 2258 007e 00       		.byte	0
 2259 007f 00       		.byte	0
 2260 0080 09       		.uleb128 0x9
 2261 0081 34       		.uleb128 0x34
 2262 0082 00       		.byte	0
 2263 0083 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 76


 2264 0084 0E       		.uleb128 0xe
 2265 0085 3A       		.uleb128 0x3a
 2266 0086 0B       		.uleb128 0xb
 2267 0087 3B       		.uleb128 0x3b
 2268 0088 05       		.uleb128 0x5
 2269 0089 49       		.uleb128 0x49
 2270 008a 13       		.uleb128 0x13
 2271 008b 02       		.uleb128 0x2
 2272 008c 18       		.uleb128 0x18
 2273 008d 00       		.byte	0
 2274 008e 00       		.byte	0
 2275 008f 0A       		.uleb128 0xa
 2276 0090 2E       		.uleb128 0x2e
 2277 0091 00       		.byte	0
 2278 0092 3F       		.uleb128 0x3f
 2279 0093 19       		.uleb128 0x19
 2280 0094 03       		.uleb128 0x3
 2281 0095 0E       		.uleb128 0xe
 2282 0096 3A       		.uleb128 0x3a
 2283 0097 0B       		.uleb128 0xb
 2284 0098 3B       		.uleb128 0x3b
 2285 0099 05       		.uleb128 0x5
 2286 009a 27       		.uleb128 0x27
 2287 009b 19       		.uleb128 0x19
 2288 009c 11       		.uleb128 0x11
 2289 009d 01       		.uleb128 0x1
 2290 009e 12       		.uleb128 0x12
 2291 009f 06       		.uleb128 0x6
 2292 00a0 40       		.uleb128 0x40
 2293 00a1 18       		.uleb128 0x18
 2294 00a2 9642     		.uleb128 0x2116
 2295 00a4 19       		.uleb128 0x19
 2296 00a5 00       		.byte	0
 2297 00a6 00       		.byte	0
 2298 00a7 0B       		.uleb128 0xb
 2299 00a8 2E       		.uleb128 0x2e
 2300 00a9 01       		.byte	0x1
 2301 00aa 3F       		.uleb128 0x3f
 2302 00ab 19       		.uleb128 0x19
 2303 00ac 03       		.uleb128 0x3
 2304 00ad 0E       		.uleb128 0xe
 2305 00ae 3A       		.uleb128 0x3a
 2306 00af 0B       		.uleb128 0xb
 2307 00b0 3B       		.uleb128 0x3b
 2308 00b1 05       		.uleb128 0x5
 2309 00b2 27       		.uleb128 0x27
 2310 00b3 19       		.uleb128 0x19
 2311 00b4 49       		.uleb128 0x49
 2312 00b5 13       		.uleb128 0x13
 2313 00b6 11       		.uleb128 0x11
 2314 00b7 01       		.uleb128 0x1
 2315 00b8 12       		.uleb128 0x12
 2316 00b9 06       		.uleb128 0x6
 2317 00ba 40       		.uleb128 0x40
 2318 00bb 18       		.uleb128 0x18
 2319 00bc 9742     		.uleb128 0x2117
 2320 00be 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 77


 2321 00bf 01       		.uleb128 0x1
 2322 00c0 13       		.uleb128 0x13
 2323 00c1 00       		.byte	0
 2324 00c2 00       		.byte	0
 2325 00c3 0C       		.uleb128 0xc
 2326 00c4 05       		.uleb128 0x5
 2327 00c5 00       		.byte	0
 2328 00c6 03       		.uleb128 0x3
 2329 00c7 0E       		.uleb128 0xe
 2330 00c8 3A       		.uleb128 0x3a
 2331 00c9 0B       		.uleb128 0xb
 2332 00ca 3B       		.uleb128 0x3b
 2333 00cb 05       		.uleb128 0x5
 2334 00cc 49       		.uleb128 0x49
 2335 00cd 13       		.uleb128 0x13
 2336 00ce 02       		.uleb128 0x2
 2337 00cf 18       		.uleb128 0x18
 2338 00d0 00       		.byte	0
 2339 00d1 00       		.byte	0
 2340 00d2 0D       		.uleb128 0xd
 2341 00d3 34       		.uleb128 0x34
 2342 00d4 00       		.byte	0
 2343 00d5 03       		.uleb128 0x3
 2344 00d6 08       		.uleb128 0x8
 2345 00d7 3A       		.uleb128 0x3a
 2346 00d8 0B       		.uleb128 0xb
 2347 00d9 3B       		.uleb128 0x3b
 2348 00da 05       		.uleb128 0x5
 2349 00db 49       		.uleb128 0x49
 2350 00dc 13       		.uleb128 0x13
 2351 00dd 02       		.uleb128 0x2
 2352 00de 18       		.uleb128 0x18
 2353 00df 00       		.byte	0
 2354 00e0 00       		.byte	0
 2355 00e1 0E       		.uleb128 0xe
 2356 00e2 2E       		.uleb128 0x2e
 2357 00e3 00       		.byte	0
 2358 00e4 3F       		.uleb128 0x3f
 2359 00e5 19       		.uleb128 0x19
 2360 00e6 03       		.uleb128 0x3
 2361 00e7 0E       		.uleb128 0xe
 2362 00e8 3A       		.uleb128 0x3a
 2363 00e9 0B       		.uleb128 0xb
 2364 00ea 3B       		.uleb128 0x3b
 2365 00eb 05       		.uleb128 0x5
 2366 00ec 27       		.uleb128 0x27
 2367 00ed 19       		.uleb128 0x19
 2368 00ee 49       		.uleb128 0x49
 2369 00ef 13       		.uleb128 0x13
 2370 00f0 11       		.uleb128 0x11
 2371 00f1 01       		.uleb128 0x1
 2372 00f2 12       		.uleb128 0x12
 2373 00f3 06       		.uleb128 0x6
 2374 00f4 40       		.uleb128 0x40
 2375 00f5 18       		.uleb128 0x18
 2376 00f6 9742     		.uleb128 0x2117
 2377 00f8 19       		.uleb128 0x19
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 78


 2378 00f9 00       		.byte	0
 2379 00fa 00       		.byte	0
 2380 00fb 0F       		.uleb128 0xf
 2381 00fc 2E       		.uleb128 0x2e
 2382 00fd 01       		.byte	0x1
 2383 00fe 3F       		.uleb128 0x3f
 2384 00ff 19       		.uleb128 0x19
 2385 0100 03       		.uleb128 0x3
 2386 0101 0E       		.uleb128 0xe
 2387 0102 3A       		.uleb128 0x3a
 2388 0103 0B       		.uleb128 0xb
 2389 0104 3B       		.uleb128 0x3b
 2390 0105 05       		.uleb128 0x5
 2391 0106 27       		.uleb128 0x27
 2392 0107 19       		.uleb128 0x19
 2393 0108 11       		.uleb128 0x11
 2394 0109 01       		.uleb128 0x1
 2395 010a 12       		.uleb128 0x12
 2396 010b 06       		.uleb128 0x6
 2397 010c 40       		.uleb128 0x40
 2398 010d 18       		.uleb128 0x18
 2399 010e 9742     		.uleb128 0x2117
 2400 0110 19       		.uleb128 0x19
 2401 0111 01       		.uleb128 0x1
 2402 0112 13       		.uleb128 0x13
 2403 0113 00       		.byte	0
 2404 0114 00       		.byte	0
 2405 0115 10       		.uleb128 0x10
 2406 0116 05       		.uleb128 0x5
 2407 0117 00       		.byte	0
 2408 0118 03       		.uleb128 0x3
 2409 0119 08       		.uleb128 0x8
 2410 011a 3A       		.uleb128 0x3a
 2411 011b 0B       		.uleb128 0xb
 2412 011c 3B       		.uleb128 0x3b
 2413 011d 05       		.uleb128 0x5
 2414 011e 49       		.uleb128 0x49
 2415 011f 13       		.uleb128 0x13
 2416 0120 02       		.uleb128 0x2
 2417 0121 18       		.uleb128 0x18
 2418 0122 00       		.byte	0
 2419 0123 00       		.byte	0
 2420 0124 11       		.uleb128 0x11
 2421 0125 34       		.uleb128 0x34
 2422 0126 00       		.byte	0
 2423 0127 03       		.uleb128 0x3
 2424 0128 0E       		.uleb128 0xe
 2425 0129 3A       		.uleb128 0x3a
 2426 012a 0B       		.uleb128 0xb
 2427 012b 3B       		.uleb128 0x3b
 2428 012c 0B       		.uleb128 0xb
 2429 012d 49       		.uleb128 0x49
 2430 012e 13       		.uleb128 0x13
 2431 012f 3F       		.uleb128 0x3f
 2432 0130 19       		.uleb128 0x19
 2433 0131 02       		.uleb128 0x2
 2434 0132 18       		.uleb128 0x18
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 79


 2435 0133 00       		.byte	0
 2436 0134 00       		.byte	0
 2437 0135 12       		.uleb128 0x12
 2438 0136 01       		.uleb128 0x1
 2439 0137 01       		.byte	0x1
 2440 0138 49       		.uleb128 0x49
 2441 0139 13       		.uleb128 0x13
 2442 013a 01       		.uleb128 0x1
 2443 013b 13       		.uleb128 0x13
 2444 013c 00       		.byte	0
 2445 013d 00       		.byte	0
 2446 013e 13       		.uleb128 0x13
 2447 013f 21       		.uleb128 0x21
 2448 0140 00       		.byte	0
 2449 0141 49       		.uleb128 0x49
 2450 0142 13       		.uleb128 0x13
 2451 0143 2F       		.uleb128 0x2f
 2452 0144 0B       		.uleb128 0xb
 2453 0145 00       		.byte	0
 2454 0146 00       		.byte	0
 2455 0147 14       		.uleb128 0x14
 2456 0148 0F       		.uleb128 0xf
 2457 0149 00       		.byte	0
 2458 014a 0B       		.uleb128 0xb
 2459 014b 0B       		.uleb128 0xb
 2460 014c 49       		.uleb128 0x49
 2461 014d 13       		.uleb128 0x13
 2462 014e 00       		.byte	0
 2463 014f 00       		.byte	0
 2464 0150 15       		.uleb128 0x15
 2465 0151 26       		.uleb128 0x26
 2466 0152 00       		.byte	0
 2467 0153 49       		.uleb128 0x49
 2468 0154 13       		.uleb128 0x13
 2469 0155 00       		.byte	0
 2470 0156 00       		.byte	0
 2471 0157 00       		.byte	0
 2472              		.section	.debug_aranges,"",%progbits
 2473 0000 AC000000 		.4byte	0xac
 2474 0004 0200     		.2byte	0x2
 2475 0006 00000000 		.4byte	.Ldebug_info0
 2476 000a 04       		.byte	0x4
 2477 000b 00       		.byte	0
 2478 000c 0000     		.2byte	0
 2479 000e 0000     		.2byte	0
 2480 0010 00000000 		.4byte	.LFB0
 2481 0014 48010000 		.4byte	.LFE0-.LFB0
 2482 0018 00000000 		.4byte	.LFB1
 2483 001c 98000000 		.4byte	.LFE1-.LFB1
 2484 0020 00000000 		.4byte	.LFB2
 2485 0024 24000000 		.4byte	.LFE2-.LFB2
 2486 0028 00000000 		.4byte	.LFB3
 2487 002c 98000000 		.4byte	.LFE3-.LFB3
 2488 0030 00000000 		.4byte	.LFB4
 2489 0034 50000000 		.4byte	.LFE4-.LFB4
 2490 0038 00000000 		.4byte	.LFB5
 2491 003c 50000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 80


 2492 0040 00000000 		.4byte	.LFB6
 2493 0044 34000000 		.4byte	.LFE6-.LFB6
 2494 0048 00000000 		.4byte	.LFB7
 2495 004c 58000000 		.4byte	.LFE7-.LFB7
 2496 0050 00000000 		.4byte	.LFB8
 2497 0054 1C000000 		.4byte	.LFE8-.LFB8
 2498 0058 00000000 		.4byte	.LFB9
 2499 005c 20000000 		.4byte	.LFE9-.LFB9
 2500 0060 00000000 		.4byte	.LFB10
 2501 0064 28000000 		.4byte	.LFE10-.LFB10
 2502 0068 00000000 		.4byte	.LFB11
 2503 006c 6C000000 		.4byte	.LFE11-.LFB11
 2504 0070 00000000 		.4byte	.LFB12
 2505 0074 70000000 		.4byte	.LFE12-.LFB12
 2506 0078 00000000 		.4byte	.LFB13
 2507 007c 5C000000 		.4byte	.LFE13-.LFB13
 2508 0080 00000000 		.4byte	.LFB14
 2509 0084 98000000 		.4byte	.LFE14-.LFB14
 2510 0088 00000000 		.4byte	.LFB15
 2511 008c 2C000000 		.4byte	.LFE15-.LFB15
 2512 0090 00000000 		.4byte	.LFB16
 2513 0094 20000000 		.4byte	.LFE16-.LFB16
 2514 0098 00000000 		.4byte	.LFB17
 2515 009c 20000000 		.4byte	.LFE17-.LFB17
 2516 00a0 00000000 		.4byte	.LFB18
 2517 00a4 40000000 		.4byte	.LFE18-.LFB18
 2518 00a8 00000000 		.4byte	0
 2519 00ac 00000000 		.4byte	0
 2520              		.section	.debug_ranges,"",%progbits
 2521              	.Ldebug_ranges0:
 2522 0000 00000000 		.4byte	.LFB0
 2523 0004 48010000 		.4byte	.LFE0
 2524 0008 00000000 		.4byte	.LFB1
 2525 000c 98000000 		.4byte	.LFE1
 2526 0010 00000000 		.4byte	.LFB2
 2527 0014 24000000 		.4byte	.LFE2
 2528 0018 00000000 		.4byte	.LFB3
 2529 001c 98000000 		.4byte	.LFE3
 2530 0020 00000000 		.4byte	.LFB4
 2531 0024 50000000 		.4byte	.LFE4
 2532 0028 00000000 		.4byte	.LFB5
 2533 002c 50000000 		.4byte	.LFE5
 2534 0030 00000000 		.4byte	.LFB6
 2535 0034 34000000 		.4byte	.LFE6
 2536 0038 00000000 		.4byte	.LFB7
 2537 003c 58000000 		.4byte	.LFE7
 2538 0040 00000000 		.4byte	.LFB8
 2539 0044 1C000000 		.4byte	.LFE8
 2540 0048 00000000 		.4byte	.LFB9
 2541 004c 20000000 		.4byte	.LFE9
 2542 0050 00000000 		.4byte	.LFB10
 2543 0054 28000000 		.4byte	.LFE10
 2544 0058 00000000 		.4byte	.LFB11
 2545 005c 6C000000 		.4byte	.LFE11
 2546 0060 00000000 		.4byte	.LFB12
 2547 0064 70000000 		.4byte	.LFE12
 2548 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 81


 2549 006c 5C000000 		.4byte	.LFE13
 2550 0070 00000000 		.4byte	.LFB14
 2551 0074 98000000 		.4byte	.LFE14
 2552 0078 00000000 		.4byte	.LFB15
 2553 007c 2C000000 		.4byte	.LFE15
 2554 0080 00000000 		.4byte	.LFB16
 2555 0084 20000000 		.4byte	.LFE16
 2556 0088 00000000 		.4byte	.LFB17
 2557 008c 20000000 		.4byte	.LFE17
 2558 0090 00000000 		.4byte	.LFB18
 2559 0094 40000000 		.4byte	.LFE18
 2560 0098 00000000 		.4byte	0
 2561 009c 00000000 		.4byte	0
 2562              		.section	.debug_line,"",%progbits
 2563              	.Ldebug_line0:
 2564 0000 52020000 		.section	.debug_str,"MS",%progbits,1
 2564      02004500 
 2564      00000201 
 2564      FB0E0D00 
 2564      01010101 
 2565              	.LASF10:
 2566 0000 75696E74 		.ascii	"uint16\000"
 2566      313600
 2567              	.LASF49:
 2568 0007 43617053 		.ascii	"CapSense_csv\000"
 2568      656E7365 
 2568      5F637376 
 2568      00
 2569              	.LASF62:
 2570 0014 47656E65 		.ascii	"Generated_Source\\PSoC5\\CapSense.c\000"
 2570      72617465 
 2570      645F536F 
 2570      75726365 
 2570      5C50536F 
 2571              	.LASF48:
 2572 0036 43617053 		.ascii	"CapSense_initVar\000"
 2572      656E7365 
 2572      5F696E69 
 2572      74566172 
 2572      00
 2573              	.LASF53:
 2574 0047 43617053 		.ascii	"CapSense_pcTable\000"
 2574      656E7365 
 2574      5F706354 
 2574      61626C65 
 2574      00
 2575              	.LASF27:
 2576 0058 736E7349 		.ascii	"snsIndex\000"
 2576      6E646578 
 2576      00
 2577              	.LASF61:
 2578 0061 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2578      43313120 
 2578      352E342E 
 2578      31203230 
 2578      31363036 
 2579 0094 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 82


 2579      20726576 
 2579      6973696F 
 2579      6E203233 
 2579      37373135 
 2580 00c7 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2580      66756E63 
 2580      74696F6E 
 2580      2D736563 
 2580      74696F6E 
 2581              	.LASF7:
 2582 00ef 6C6F6E67 		.ascii	"long long unsigned int\000"
 2582      206C6F6E 
 2582      6720756E 
 2582      7369676E 
 2582      65642069 
 2583              	.LASF21:
 2584 0106 43617053 		.ascii	"CapSense_Enable\000"
 2584      656E7365 
 2584      5F456E61 
 2584      626C6500 
 2585              	.LASF42:
 2586 0116 43617053 		.ascii	"CapSense_SetPrescaler\000"
 2586      656E7365 
 2586      5F536574 
 2586      50726573 
 2586      63616C65 
 2587              	.LASF6:
 2588 012c 6C6F6E67 		.ascii	"long long int\000"
 2588      206C6F6E 
 2588      6720696E 
 2588      7400
 2589              	.LASF0:
 2590 013a 7369676E 		.ascii	"signed char\000"
 2590      65642063 
 2590      68617200 
 2591              	.LASF47:
 2592 0146 43617053 		.ascii	"CapSense_SetAnalogSwitchesSource\000"
 2592      656E7365 
 2592      5F536574 
 2592      416E616C 
 2592      6F675377 
 2593              	.LASF4:
 2594 0167 6C6F6E67 		.ascii	"long int\000"
 2594      20696E74 
 2594      00
 2595              	.LASF16:
 2596 0170 72656731 		.ascii	"reg16\000"
 2596      3600
 2597              	.LASF9:
 2598 0176 75696E74 		.ascii	"uint8\000"
 2598      3800
 2599              	.LASF13:
 2600 017c 646F7562 		.ascii	"double\000"
 2600      6C6500
 2601              	.LASF36:
 2602 0183 43617053 		.ascii	"CapSense_EnableSensor\000"
 2602      656E7365 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 83


 2602      5F456E61 
 2602      626C6553 
 2602      656E736F 
 2603              	.LASF60:
 2604 0199 43617053 		.ascii	"CapSense_widgetNumber\000"
 2604      656E7365 
 2604      5F776964 
 2604      6765744E 
 2604      756D6265 
 2605              	.LASF34:
 2606 01af 43617053 		.ascii	"CapSense_ReadSensorRaw\000"
 2606      656E7365 
 2606      5F526561 
 2606      6453656E 
 2606      736F7252 
 2607              	.LASF11:
 2608 01c6 75696E74 		.ascii	"uint32\000"
 2608      333200
 2609              	.LASF38:
 2610 01cd 6D61736B 		.ascii	"mask\000"
 2610      00
 2611              	.LASF37:
 2612 01d2 706F7274 		.ascii	"port\000"
 2612      00
 2613              	.LASF50:
 2614 01d7 43617053 		.ascii	"CapSense_sensorIndex\000"
 2614      656E7365 
 2614      5F73656E 
 2614      736F7249 
 2614      6E646578 
 2615              	.LASF30:
 2616 01ec 43617053 		.ascii	"CapSense_ScanSensor\000"
 2616      656E7365 
 2616      5F536361 
 2616      6E53656E 
 2616      736F7200 
 2617              	.LASF8:
 2618 0200 756E7369 		.ascii	"unsigned int\000"
 2618      676E6564 
 2618      20696E74 
 2618      00
 2619              	.LASF35:
 2620 020d 43617053 		.ascii	"CapSense_ClearSensors\000"
 2620      656E7365 
 2620      5F436C65 
 2620      61725365 
 2620      6E736F72 
 2621              	.LASF5:
 2622 0223 6C6F6E67 		.ascii	"long unsigned int\000"
 2622      20756E73 
 2622      69676E65 
 2622      6420696E 
 2622      7400
 2623              	.LASF55:
 2624 0235 43617053 		.ascii	"CapSense_maskTable\000"
 2624      656E7365 
 2624      5F6D6173 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 84


 2624      6B546162 
 2624      6C6500
 2625              	.LASF54:
 2626 0248 43617053 		.ascii	"CapSense_portTable\000"
 2626      656E7365 
 2626      5F706F72 
 2626      74546162 
 2626      6C6500
 2627              	.LASF3:
 2628 025b 73686F72 		.ascii	"short unsigned int\000"
 2628      7420756E 
 2628      7369676E 
 2628      65642069 
 2628      6E7400
 2629              	.LASF31:
 2630 026e 73656E73 		.ascii	"sensor\000"
 2630      6F7200
 2631              	.LASF52:
 2632 0275 43617053 		.ascii	"CapSense_sensorEnableMask\000"
 2632      656E7365 
 2632      5F73656E 
 2632      736F7245 
 2632      6E61626C 
 2633              	.LASF28:
 2634 028f 736C6F74 		.ascii	"slot\000"
 2634      00
 2635              	.LASF17:
 2636 0294 72656733 		.ascii	"reg32\000"
 2636      3200
 2637              	.LASF59:
 2638 029a 43617053 		.ascii	"CapSense_analogSwitchDivider\000"
 2638      656E7365 
 2638      5F616E61 
 2638      6C6F6753 
 2638      77697463 
 2639              	.LASF19:
 2640 02b7 73697A65 		.ascii	"sizetype\000"
 2640      74797065 
 2640      00
 2641              	.LASF56:
 2642 02c0 43617053 		.ascii	"CapSense_csTable\000"
 2642      656E7365 
 2642      5F637354 
 2642      61626C65 
 2642      00
 2643              	.LASF18:
 2644 02d1 6C6F6E67 		.ascii	"long double\000"
 2644      20646F75 
 2644      626C6500 
 2645              	.LASF24:
 2646 02dd 43617053 		.ascii	"CapSense_Stop\000"
 2646      656E7365 
 2646      5F53746F 
 2646      7000
 2647              	.LASF46:
 2648 02eb 7363616E 		.ascii	"scanSpeed\000"
 2648      53706565 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 85


 2648      6400
 2649              	.LASF25:
 2650 02f5 656E4D61 		.ascii	"enMask\000"
 2650      736B00
 2651              	.LASF57:
 2652 02fc 43617053 		.ascii	"CapSense_idacSettings\000"
 2652      656E7365 
 2652      5F696461 
 2652      63536574 
 2652      74696E67 
 2653              	.LASF12:
 2654 0312 666C6F61 		.ascii	"float\000"
 2654      7400
 2655              	.LASF43:
 2656 0318 70726573 		.ascii	"prescaler\000"
 2656      63616C65 
 2656      7200
 2657              	.LASF15:
 2658 0322 72656738 		.ascii	"reg8\000"
 2658      00
 2659              	.LASF33:
 2660 0327 43617053 		.ascii	"CapSense_FindNextSensor\000"
 2660      656E7365 
 2660      5F46696E 
 2660      644E6578 
 2660      7453656E 
 2661              	.LASF39:
 2662 033f 43617053 		.ascii	"CapSense_DisableSensor\000"
 2662      656E7365 
 2662      5F446973 
 2662      61626C65 
 2662      53656E73 
 2663              	.LASF1:
 2664 0356 756E7369 		.ascii	"unsigned char\000"
 2664      676E6564 
 2664      20636861 
 2664      7200
 2665              	.LASF58:
 2666 0364 43617053 		.ascii	"CapSense_widgetResolution\000"
 2666      656E7365 
 2666      5F776964 
 2666      67657452 
 2666      65736F6C 
 2667              	.LASF2:
 2668 037e 73686F72 		.ascii	"short int\000"
 2668      7420696E 
 2668      7400
 2669              	.LASF29:
 2670 0388 77696467 		.ascii	"widget\000"
 2670      657400
 2671              	.LASF44:
 2672 038f 43617053 		.ascii	"CapSense_GetPrescaler\000"
 2672      656E7365 
 2672      5F476574 
 2672      50726573 
 2672      63616C65 
 2673              	.LASF14:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 86


 2674 03a5 63686172 		.ascii	"char\000"
 2674      00
 2675              	.LASF45:
 2676 03aa 43617053 		.ascii	"CapSense_SetScanSpeed\000"
 2676      656E7365 
 2676      5F536574 
 2676      5363616E 
 2676      53706565 
 2677              	.LASF23:
 2678 03c0 43617053 		.ascii	"CapSense_Start\000"
 2678      656E7365 
 2678      5F537461 
 2678      727400
 2679              	.LASF41:
 2680 03cf 43617053 		.ascii	"CapSense_PostScan\000"
 2680      656E7365 
 2680      5F506F73 
 2680      74536361 
 2680      6E00
 2681              	.LASF22:
 2682 03e1 656E6162 		.ascii	"enableInterrupts\000"
 2682      6C65496E 
 2682      74657272 
 2682      75707473 
 2682      00
 2683              	.LASF26:
 2684 03f2 43617053 		.ascii	"CapSense_SetScanSlotSettings\000"
 2684      656E7365 
 2684      5F536574 
 2684      5363616E 
 2684      536C6F74 
 2685              	.LASF63:
 2686 040f 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Desktop\\PSOC5_electrosteel_"
 2686      73657273 
 2686      5C4A6566 
 2686      66536E79 
 2686      6465725C 
 2687 043e 73747269 		.ascii	"stringsensors - Copy\\CE210514_PSOC3_5_Thermistor.c"
 2687      6E677365 
 2687      6E736F72 
 2687      73202D20 
 2687      436F7079 
 2688 0470 7964736E 		.ascii	"ydsn\000"
 2688      00
 2689              	.LASF40:
 2690 0475 43617053 		.ascii	"CapSense_PreScan\000"
 2690      656E7365 
 2690      5F507265 
 2690      5363616E 
 2690      00
 2691              	.LASF20:
 2692 0486 43617053 		.ascii	"CapSense_Init\000"
 2692      656E7365 
 2692      5F496E69 
 2692      7400
 2693              	.LASF51:
 2694 0494 43617053 		.ascii	"CapSense_sensorRaw\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccwnyKIB.s 			page 87


 2694      656E7365 
 2694      5F73656E 
 2694      736F7252 
 2694      617700
 2695              	.LASF32:
 2696 04a7 43617053 		.ascii	"CapSense_ScanEnabledWidgets\000"
 2696      656E7365 
 2696      5F536361 
 2696      6E456E61 
 2696      626C6564 
 2697              	.LASF64:
 2698 04c3 43617053 		.ascii	"CapSense_IsBusy\000"
 2698      656E7365 
 2698      5F497342 
 2698      75737900 
 2699              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
