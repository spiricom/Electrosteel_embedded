ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_SAR_1_initVar
  20              		.bss
  21              		.type	ADC_SAR_1_initVar, %object
  22              		.size	ADC_SAR_1_initVar, 1
  23              	ADC_SAR_1_initVar:
  24 0000 00       		.space	1
  25              		.comm	ADC_SAR_1_offset,2,2
  26              		.comm	ADC_SAR_1_countsPerVolt,2,2
  27              		.comm	ADC_SAR_1_countsPer10Volt,4,4
  28              		.comm	ADC_SAR_1_shift,2,2
  29              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
  30              		.align	2
  31              		.global	ADC_SAR_1_Start
  32              		.thumb
  33              		.thumb_func
  34              		.type	ADC_SAR_1_Start, %function
  35              	ADC_SAR_1_Start:
  36              	.LFB0:
  37              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 2


  21:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  32:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  38              		.loc 1 75 0
  39              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 3


  40              		@ args = 0, pretend = 0, frame = 0
  41              		@ frame_needed = 1, uses_anonymous_args = 0
  42 0000 80B5     		push	{r7, lr}
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 00AF     		add	r7, sp, #0
  47              		.cfi_def_cfa_register 7
  76:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  48              		.loc 1 78 0
  49 0004 064B     		ldr	r3, .L3
  50 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  51 0008 002B     		cmp	r3, #0
  52 000a 04D1     		bne	.L2
  79:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  53              		.loc 1 80 0
  54 000c FFF7FEFF 		bl	ADC_SAR_1_Init
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  55              		.loc 1 81 0
  56 0010 034B     		ldr	r3, .L3
  57 0012 0122     		movs	r2, #1
  58 0014 1A70     		strb	r2, [r3]
  59              	.L2:
  82:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  60              		.loc 1 83 0
  61 0016 FFF7FEFF 		bl	ADC_SAR_1_Enable
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** }
  62              		.loc 1 84 0
  63 001a 00BF     		nop
  64 001c 80BD     		pop	{r7, pc}
  65              	.L4:
  66 001e 00BF     		.align	2
  67              	.L3:
  68 0020 00000000 		.word	ADC_SAR_1_initVar
  69              		.cfi_endproc
  70              	.LFE0:
  71              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
  72              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
  73              		.align	2
  74              		.global	ADC_SAR_1_Init
  75              		.thumb
  76              		.thumb_func
  77              		.type	ADC_SAR_1_Init, %function
  78              	ADC_SAR_1_Init:
  79              	.LFB1:
  85:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
  89:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 4


  93:Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  80              		.loc 1 107 0
  81              		.cfi_startproc
  82              		@ args = 0, pretend = 0, frame = 0
  83              		@ frame_needed = 1, uses_anonymous_args = 0
  84 0000 80B5     		push	{r7, lr}
  85              		.cfi_def_cfa_offset 8
  86              		.cfi_offset 7, -8
  87              		.cfi_offset 14, -4
  88 0002 00AF     		add	r7, sp, #0
  89              		.cfi_def_cfa_register 7
 108:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
  90              		.loc 1 111 0
  91 0004 1020     		movs	r0, #16
  92 0006 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 112:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
  93              		.loc 1 116 0
  94 000a 0721     		movs	r1, #7
  95 000c 0020     		movs	r0, #0
  96 000e FFF7FEFF 		bl	CyIntSetPriority
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
  97              		.loc 1 117 0
  98 0012 0A49     		ldr	r1, .L6
  99 0014 0020     		movs	r0, #0
 100 0016 FFF7FEFF 		bl	CyIntSetVector
 118:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 101              		.loc 1 121 0
 102 001a 094A     		ldr	r2, .L6+4
 103 001c 084B     		ldr	r3, .L6+4
 104 001e 1B78     		ldrb	r3, [r3]
 105 0020 DBB2     		uxtb	r3, r3
 106 0022 43F00603 		orr	r3, r3, #6
 107 0026 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 5


 108 0028 1370     		strb	r3, [r2]
 122:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 109              		.loc 1 124 0
 110 002a 0C20     		movs	r0, #12
 111 002c FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 125:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 112              		.loc 1 125 0
 113 0030 044B     		ldr	r3, .L6+8
 114 0032 0022     		movs	r2, #0
 115 0034 1A80     		strh	r2, [r3]	@ movhi
 126:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 116              		.loc 1 126 0
 117 0036 00BF     		nop
 118 0038 80BD     		pop	{r7, pc}
 119              	.L7:
 120 003a 00BF     		.align	2
 121              	.L6:
 122 003c 00000000 		.word	ADC_SAR_1_ISR
 123 0040 01590040 		.word	1073764609
 124 0044 00000000 		.word	ADC_SAR_1_offset
 125              		.cfi_endproc
 126              	.LFE1:
 127              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 128              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 129              		.align	2
 130              		.global	ADC_SAR_1_Enable
 131              		.thumb
 132              		.thumb_func
 133              		.type	ADC_SAR_1_Enable, %function
 134              	ADC_SAR_1_Enable:
 135              	.LFB2:
 127:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 136              		.loc 1 144 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 8
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 6


 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 82B0     		sub	sp, sp, #8
 145              		.cfi_def_cfa_offset 16
 146 0004 00AF     		add	r7, sp, #0
 147              		.cfi_def_cfa_register 7
 145:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 146:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 148              		.loc 1 147 0
 149 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 150 000a 0346     		mov	r3, r0
 151 000c FB71     		strb	r3, [r7, #7]
 148:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 152              		.loc 1 150 0
 153 000e 2E4A     		ldr	r2, .L9
 154 0010 2D4B     		ldr	r3, .L9
 155 0012 1B78     		ldrb	r3, [r3]
 156 0014 DBB2     		uxtb	r3, r3
 157 0016 43F00103 		orr	r3, r3, #1
 158 001a DBB2     		uxtb	r3, r3
 159 001c 1370     		strb	r3, [r2]
 151:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 160              		.loc 1 153 0
 161 001e 2B4A     		ldr	r2, .L9+4
 162 0020 2A4B     		ldr	r3, .L9+4
 163 0022 1B78     		ldrb	r3, [r3]
 164 0024 DBB2     		uxtb	r3, r3
 165 0026 43F00103 		orr	r3, r3, #1
 166 002a DBB2     		uxtb	r3, r3
 167 002c 1370     		strb	r3, [r2]
 154:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 168              		.loc 1 157 0
 169 002e 284A     		ldr	r2, .L9+8
 170 0030 274B     		ldr	r3, .L9+8
 171 0032 1B78     		ldrb	r3, [r3]
 172 0034 DBB2     		uxtb	r3, r3
 173 0036 43F00103 		orr	r3, r3, #1
 174 003a DBB2     		uxtb	r3, r3
 175 003c 1370     		strb	r3, [r2]
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 176              		.loc 1 158 0
 177 003e 254A     		ldr	r2, .L9+12
 178 0040 244B     		ldr	r3, .L9+12
 179 0042 1B78     		ldrb	r3, [r3]
 180 0044 DBB2     		uxtb	r3, r3
 181 0046 43F00103 		orr	r3, r3, #1
 182 004a DBB2     		uxtb	r3, r3
 183 004c 1370     		strb	r3, [r2]
 159:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 7


 160:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 184              		.loc 1 162 0
 185 004e 224B     		ldr	r3, .L9+16
 186 0050 1B78     		ldrb	r3, [r3]
 187 0052 BB71     		strb	r3, [r7, #6]
 163:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 188              		.loc 1 163 0
 189 0054 BB79     		ldrb	r3, [r7, #6]
 190 0056 43F00203 		orr	r3, r3, #2
 191 005a BB71     		strb	r3, [r7, #6]
 164:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 192              		.loc 1 169 0
 193 005c BB79     		ldrb	r3, [r7, #6]
 194 005e 43F00103 		orr	r3, r3, #1
 195 0062 BB71     		strb	r3, [r7, #6]
 170:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 196              		.loc 1 171 0
 197 0064 1C4A     		ldr	r2, .L9+16
 198 0066 BB79     		ldrb	r3, [r7, #6]
 199 0068 1370     		strb	r3, [r2]
 172:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 200              		.loc 1 184 0
 201 006a 1C4B     		ldr	r3, .L9+20
 202 006c 0422     		movs	r2, #4
 203 006e 1A70     		strb	r2, [r3]
 185:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 204              		.loc 1 192 0
 205 0070 1B4A     		ldr	r2, .L9+24
 206 0072 1B4B     		ldr	r3, .L9+24
 207 0074 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 8


 208 0076 DBB2     		uxtb	r3, r3
 209 0078 43F04003 		orr	r3, r3, #64
 210 007c DBB2     		uxtb	r3, r3
 211 007e 1370     		strb	r3, [r2]
 193:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 212              		.loc 1 202 0
 213 0080 174A     		ldr	r2, .L9+24
 214 0082 174B     		ldr	r3, .L9+24
 215 0084 1B78     		ldrb	r3, [r3]
 216 0086 DBB2     		uxtb	r3, r3
 217 0088 23F00303 		bic	r3, r3, #3
 218 008c DBB2     		uxtb	r3, r3
 219 008e 1370     		strb	r3, [r2]
 203:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 220              		.loc 1 206 0
 221 0090 144B     		ldr	r3, .L9+28
 222 0092 C822     		movs	r2, #200
 223 0094 1A70     		strb	r2, [r3]
 207:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 224              		.loc 1 218 0
 225 0096 144B     		ldr	r3, .L9+32
 226 0098 0222     		movs	r2, #2
 227 009a 1A70     		strb	r2, [r3]
 219:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 228              		.loc 1 221 0
 229 009c 134A     		ldr	r2, .L9+36
 230 009e 134B     		ldr	r3, .L9+36
 231 00a0 1B78     		ldrb	r3, [r3]
 232 00a2 DBB2     		uxtb	r3, r3
 233 00a4 43F00803 		orr	r3, r3, #8
 234 00a8 DBB2     		uxtb	r3, r3
 235 00aa 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 9


 222:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 236              		.loc 1 223 0
 237 00ac 0A20     		movs	r0, #10
 238 00ae FFF7FEFF 		bl	CyDelayUs
 224:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 239              		.loc 1 227 0
 240 00b2 0F4B     		ldr	r3, .L9+40
 241 00b4 0122     		movs	r2, #1
 242 00b6 1A60     		str	r2, [r3]
 228:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 243              		.loc 1 230 0
 244 00b8 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 245 00ba 1846     		mov	r0, r3
 246 00bc FFF7FEFF 		bl	CyExitCriticalSection
 231:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 247              		.loc 1 231 0
 248 00c0 00BF     		nop
 249 00c2 0837     		adds	r7, r7, #8
 250              		.cfi_def_cfa_offset 8
 251 00c4 BD46     		mov	sp, r7
 252              		.cfi_def_cfa_register 13
 253              		@ sp needed
 254 00c6 80BD     		pop	{r7, pc}
 255              	.L10:
 256              		.align	2
 257              	.L9:
 258 00c8 AB430040 		.word	1073759147
 259 00cc BB430040 		.word	1073759163
 260 00d0 A1430040 		.word	1073759137
 261 00d4 B1430040 		.word	1073759153
 262 00d8 03590040 		.word	1073764611
 263 00dc 06590040 		.word	1073764614
 264 00e0 05590040 		.word	1073764613
 265 00e4 00590040 		.word	1073764608
 266 00e8 14460040 		.word	1073759764
 267 00ec 275B0040 		.word	1073765159
 268 00f0 80E200E0 		.word	-536812928
 269              		.cfi_endproc
 270              	.LFE2:
 271              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 272              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 273              		.align	2
 274              		.global	ADC_SAR_1_Stop
 275              		.thumb
 276              		.thumb_func
 277              		.type	ADC_SAR_1_Stop, %function
 278              	ADC_SAR_1_Stop:
 279              	.LFB3:
 232:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 10


 235:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 280              		.loc 1 249 0
 281              		.cfi_startproc
 282              		@ args = 0, pretend = 0, frame = 8
 283              		@ frame_needed = 1, uses_anonymous_args = 0
 284 0000 80B5     		push	{r7, lr}
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 7, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              		.cfi_def_cfa_offset 16
 290 0004 00AF     		add	r7, sp, #0
 291              		.cfi_def_cfa_register 7
 250:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 292              		.loc 1 251 0
 293 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 294 000a 0346     		mov	r3, r0
 295 000c FB71     		strb	r3, [r7, #7]
 252:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 296              		.loc 1 254 0
 297 000e 184A     		ldr	r2, .L12
 298 0010 174B     		ldr	r3, .L12
 299 0012 1B78     		ldrb	r3, [r3]
 300 0014 DBB2     		uxtb	r3, r3
 301 0016 23F00103 		bic	r3, r3, #1
 302 001a DBB2     		uxtb	r3, r3
 303 001c 1370     		strb	r3, [r2]
 255:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 304              		.loc 1 256 0
 305 001e 154A     		ldr	r2, .L12+4
 306 0020 144B     		ldr	r3, .L12+4
 307 0022 1B78     		ldrb	r3, [r3]
 308 0024 DBB2     		uxtb	r3, r3
 309 0026 23F00103 		bic	r3, r3, #1
 310 002a DBB2     		uxtb	r3, r3
 311 002c 1370     		strb	r3, [r2]
 257:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 312              		.loc 1 258 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 11


 313 002e 124A     		ldr	r2, .L12+8
 314 0030 114B     		ldr	r3, .L12+8
 315 0032 1B78     		ldrb	r3, [r3]
 316 0034 DBB2     		uxtb	r3, r3
 317 0036 23F00103 		bic	r3, r3, #1
 318 003a DBB2     		uxtb	r3, r3
 319 003c 1370     		strb	r3, [r2]
 259:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 260:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 320              		.loc 1 262 0
 321 003e 0F4A     		ldr	r2, .L12+12
 322 0040 0E4B     		ldr	r3, .L12+12
 323 0042 1B78     		ldrb	r3, [r3]
 324 0044 DBB2     		uxtb	r3, r3
 325 0046 23F00103 		bic	r3, r3, #1
 326 004a DBB2     		uxtb	r3, r3
 327 004c 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 328              		.loc 1 263 0
 329 004e 0C4A     		ldr	r2, .L12+16
 330 0050 0B4B     		ldr	r3, .L12+16
 331 0052 1B78     		ldrb	r3, [r3]
 332 0054 DBB2     		uxtb	r3, r3
 333 0056 23F00103 		bic	r3, r3, #1
 334 005a DBB2     		uxtb	r3, r3
 335 005c 1370     		strb	r3, [r2]
 264:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 336              		.loc 1 266 0
 337 005e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 338 0060 1846     		mov	r0, r3
 339 0062 FFF7FEFF 		bl	CyExitCriticalSection
 267:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 340              		.loc 1 268 0
 341 0066 00BF     		nop
 342 0068 0837     		adds	r7, r7, #8
 343              		.cfi_def_cfa_offset 8
 344 006a BD46     		mov	sp, r7
 345              		.cfi_def_cfa_register 13
 346              		@ sp needed
 347 006c 80BD     		pop	{r7, pc}
 348              	.L13:
 349 006e 00BF     		.align	2
 350              	.L12:
 351 0070 00590040 		.word	1073764608
 352 0074 AB430040 		.word	1073759147
 353 0078 BB430040 		.word	1073759163
 354 007c A1430040 		.word	1073759137
 355 0080 B1430040 		.word	1073759153
 356              		.cfi_endproc
 357              	.LFE3:
 358              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 359              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 12


 360              		.align	2
 361              		.global	ADC_SAR_1_SetPower
 362              		.thumb
 363              		.thumb_func
 364              		.type	ADC_SAR_1_SetPower, %function
 365              	ADC_SAR_1_SetPower:
 366              	.LFB4:
 269:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 367              		.loc 1 291 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 16
 370              		@ frame_needed = 1, uses_anonymous_args = 0
 371              		@ link register save eliminated.
 372 0000 80B4     		push	{r7}
 373              		.cfi_def_cfa_offset 4
 374              		.cfi_offset 7, -4
 375 0002 85B0     		sub	sp, sp, #20
 376              		.cfi_def_cfa_offset 24
 377 0004 00AF     		add	r7, sp, #0
 378              		.cfi_def_cfa_register 7
 379 0006 0346     		mov	r3, r0
 380 0008 FB71     		strb	r3, [r7, #7]
 292:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 381              		.loc 1 295 0
 382 000a FB79     		ldrb	r3, [r7, #7]
 383 000c 03F00303 		and	r3, r3, #3
 384 0010 FB71     		strb	r3, [r7, #7]
 296:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 385              		.loc 1 298 0
 386 0012 0A4B     		ldr	r3, .L15
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 13


 387 0014 1B78     		ldrb	r3, [r3]
 388 0016 DBB2     		uxtb	r3, r3
 389 0018 03F03F03 		and	r3, r3, #63
 390 001c FB73     		strb	r3, [r7, #15]
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 391              		.loc 1 299 0
 392 001e FB79     		ldrb	r3, [r7, #7]
 393 0020 9B01     		lsls	r3, r3, #6
 394 0022 DAB2     		uxtb	r2, r3
 395 0024 FB7B     		ldrb	r3, [r7, #15]
 396 0026 1343     		orrs	r3, r3, r2
 397 0028 FB73     		strb	r3, [r7, #15]
 300:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 398              		.loc 1 300 0
 399 002a 044A     		ldr	r2, .L15
 400 002c FB7B     		ldrb	r3, [r7, #15]
 401 002e 1370     		strb	r3, [r2]
 301:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 402              		.loc 1 301 0
 403 0030 00BF     		nop
 404 0032 1437     		adds	r7, r7, #20
 405              		.cfi_def_cfa_offset 4
 406 0034 BD46     		mov	sp, r7
 407              		.cfi_def_cfa_register 13
 408              		@ sp needed
 409 0036 80BC     		pop	{r7}
 410              		.cfi_restore 7
 411              		.cfi_def_cfa_offset 0
 412 0038 7047     		bx	lr
 413              	.L16:
 414 003a 00BF     		.align	2
 415              	.L15:
 416 003c 00590040 		.word	1073764608
 417              		.cfi_endproc
 418              	.LFE4:
 419              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 420              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 421              		.align	2
 422              		.global	ADC_SAR_1_SetResolution
 423              		.thumb
 424              		.thumb_func
 425              		.type	ADC_SAR_1_SetResolution, %function
 426              	ADC_SAR_1_SetResolution:
 427              	.LFB5:
 302:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 14


 315:Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 317:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 428              		.loc 1 341 0
 429              		.cfi_startproc
 430              		@ args = 0, pretend = 0, frame = 16
 431              		@ frame_needed = 1, uses_anonymous_args = 0
 432 0000 80B5     		push	{r7, lr}
 433              		.cfi_def_cfa_offset 8
 434              		.cfi_offset 7, -8
 435              		.cfi_offset 14, -4
 436 0002 84B0     		sub	sp, sp, #16
 437              		.cfi_def_cfa_offset 24
 438 0004 00AF     		add	r7, sp, #0
 439              		.cfi_def_cfa_register 7
 440 0006 0346     		mov	r3, r0
 441 0008 FB71     		strb	r3, [r7, #7]
 342:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 442              		.loc 1 345 0
 443 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 444 000c 0A2B     		cmp	r3, #10
 445 000e 07D0     		beq	.L19
 446 0010 0C2B     		cmp	r3, #12
 447 0012 02D0     		beq	.L20
 448 0014 082B     		cmp	r3, #8
 449 0016 06D0     		beq	.L21
 450 0018 08E0     		b	.L23
 451              	.L20:
 346:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 15


 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 452              		.loc 1 348 0
 453 001a C423     		movs	r3, #196
 454 001c FB73     		strb	r3, [r7, #15]
 349:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 455              		.loc 1 349 0
 456 001e 0BE0     		b	.L22
 457              	.L19:
 350:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 458              		.loc 1 351 0
 459 0020 8423     		movs	r3, #132
 460 0022 FB73     		strb	r3, [r7, #15]
 352:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 461              		.loc 1 352 0
 462 0024 08E0     		b	.L22
 463              	.L21:
 353:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 464              		.loc 1 354 0
 465 0026 4423     		movs	r3, #68
 466 0028 FB73     		strb	r3, [r7, #15]
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 467              		.loc 1 355 0
 468 002a 05E0     		b	.L22
 469              	.L23:
 356:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 470              		.loc 1 357 0
 471 002c C423     		movs	r3, #196
 472 002e FB73     		strb	r3, [r7, #15]
 358:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 473              		.loc 1 359 0
 474 0030 0020     		movs	r0, #0
 475 0032 FFF7FEFF 		bl	CyHalt
 360:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 476              		.loc 1 360 0
 477 0036 00BF     		nop
 478              	.L22:
 361:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 479              		.loc 1 362 0
 480 0038 054A     		ldr	r2, .L24
 481 003a FB7B     		ldrb	r3, [r7, #15]
 482 003c 1370     		strb	r3, [r2]
 363:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 483              		.loc 1 365 0
 484 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 485 0040 1846     		mov	r0, r3
 486 0042 FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 366:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 487              		.loc 1 366 0
 488 0046 00BF     		nop
 489 0048 1037     		adds	r7, r7, #16
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 16


 490              		.cfi_def_cfa_offset 8
 491 004a BD46     		mov	sp, r7
 492              		.cfi_def_cfa_register 13
 493              		@ sp needed
 494 004c 80BD     		pop	{r7, pc}
 495              	.L25:
 496 004e 00BF     		.align	2
 497              	.L24:
 498 0050 02590040 		.word	1073764610
 499              		.cfi_endproc
 500              	.LFE5:
 501              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 502              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 503              		.align	2
 504              		.global	ADC_SAR_1_StartConvert
 505              		.thumb
 506              		.thumb_func
 507              		.type	ADC_SAR_1_StartConvert, %function
 508              	ADC_SAR_1_StartConvert:
 509              	.LFB6:
 367:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
 374:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 510              		.loc 1 402 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 17


 511              		.cfi_startproc
 512              		@ args = 0, pretend = 0, frame = 0
 513              		@ frame_needed = 1, uses_anonymous_args = 0
 514              		@ link register save eliminated.
 515 0000 80B4     		push	{r7}
 516              		.cfi_def_cfa_offset 4
 517              		.cfi_offset 7, -4
 518 0002 00AF     		add	r7, sp, #0
 519              		.cfi_def_cfa_register 7
 403:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 520              		.loc 1 408 0
 521 0004 054A     		ldr	r2, .L27
 522 0006 054B     		ldr	r3, .L27
 523 0008 1B78     		ldrb	r3, [r3]
 524 000a DBB2     		uxtb	r3, r3
 525 000c 43F00103 		orr	r3, r3, #1
 526 0010 DBB2     		uxtb	r3, r3
 527 0012 1370     		strb	r3, [r2]
 409:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 528              		.loc 1 409 0
 529 0014 00BF     		nop
 530 0016 BD46     		mov	sp, r7
 531              		.cfi_def_cfa_register 13
 532              		@ sp needed
 533 0018 80BC     		pop	{r7}
 534              		.cfi_restore 7
 535              		.cfi_def_cfa_offset 0
 536 001a 7047     		bx	lr
 537              	.L28:
 538              		.align	2
 539              	.L27:
 540 001c 00590040 		.word	1073764608
 541              		.cfi_endproc
 542              	.LFE6:
 543              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 544              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 545              		.align	2
 546              		.global	ADC_SAR_1_StopConvert
 547              		.thumb
 548              		.thumb_func
 549              		.type	ADC_SAR_1_StopConvert, %function
 550              	ADC_SAR_1_StopConvert:
 551              	.LFB7:
 410:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 18


 419:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 431:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 552              		.loc 1 436 0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 0
 555              		@ frame_needed = 1, uses_anonymous_args = 0
 556              		@ link register save eliminated.
 557 0000 80B4     		push	{r7}
 558              		.cfi_def_cfa_offset 4
 559              		.cfi_offset 7, -4
 560 0002 00AF     		add	r7, sp, #0
 561              		.cfi_def_cfa_register 7
 437:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 562              		.loc 1 438 0
 563 0004 054A     		ldr	r2, .L30
 564 0006 054B     		ldr	r3, .L30
 565 0008 1B78     		ldrb	r3, [r3]
 566 000a DBB2     		uxtb	r3, r3
 567 000c 23F00103 		bic	r3, r3, #1
 568 0010 DBB2     		uxtb	r3, r3
 569 0012 1370     		strb	r3, [r2]
 439:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 570              		.loc 1 445 0
 571 0014 00BF     		nop
 572 0016 BD46     		mov	sp, r7
 573              		.cfi_def_cfa_register 13
 574              		@ sp needed
 575 0018 80BC     		pop	{r7}
 576              		.cfi_restore 7
 577              		.cfi_def_cfa_offset 0
 578 001a 7047     		bx	lr
 579              	.L31:
 580              		.align	2
 581              	.L30:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 19


 582 001c 00590040 		.word	1073764608
 583              		.cfi_endproc
 584              	.LFE7:
 585              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 586              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 587              		.align	2
 588              		.global	ADC_SAR_1_IsEndConversion
 589              		.thumb
 590              		.thumb_func
 591              		.type	ADC_SAR_1_IsEndConversion, %function
 592              	ADC_SAR_1_IsEndConversion:
 593              	.LFB8:
 446:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 594              		.loc 1 476 0
 595              		.cfi_startproc
 596              		@ args = 0, pretend = 0, frame = 16
 597              		@ frame_needed = 1, uses_anonymous_args = 0
 598 0000 80B5     		push	{r7, lr}
 599              		.cfi_def_cfa_offset 8
 600              		.cfi_offset 7, -8
 601              		.cfi_offset 14, -4
 602 0002 84B0     		sub	sp, sp, #16
 603              		.cfi_def_cfa_offset 24
 604 0004 00AF     		add	r7, sp, #0
 605              		.cfi_def_cfa_register 7
 606 0006 0346     		mov	r3, r0
 607 0008 FB71     		strb	r3, [r7, #7]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 20


 608              	.L34:
 477:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 609              		.loc 1 481 0 discriminator 2
 610 000a 0C4B     		ldr	r3, .L37
 611 000c 1B78     		ldrb	r3, [r3]
 612 000e DBB2     		uxtb	r3, r3
 613 0010 03F00103 		and	r3, r3, #1
 614 0014 FB73     		strb	r3, [r7, #15]
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 615              		.loc 1 482 0 discriminator 2
 616 0016 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 617 0018 012B     		cmp	r3, #1
 618 001a 02D0     		beq	.L33
 619              		.loc 1 482 0 is_stmt 0 discriminator 1
 620 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 621 001e 002B     		cmp	r3, #0
 622 0020 F3D0     		beq	.L34
 623              	.L33:
 483:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 624              		.loc 1 484 0 is_stmt 1
 625 0022 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 626 0024 012B     		cmp	r3, #1
 627 0026 04D1     		bne	.L35
 485:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
 628              		.loc 1 487 0
 629 0028 0120     		movs	r0, #1
 630 002a FFF7FEFF 		bl	CyDelayUs
 488:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 631              		.loc 1 489 0
 632 002e 034B     		ldr	r3, .L37
 633 0030 1B78     		ldrb	r3, [r3]
 634              	.L35:
 490:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 635              		.loc 1 492 0
 636 0032 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 637              		.loc 1 493 0
 638 0034 1846     		mov	r0, r3
 639 0036 1037     		adds	r7, r7, #16
 640              		.cfi_def_cfa_offset 8
 641 0038 BD46     		mov	sp, r7
 642              		.cfi_def_cfa_register 13
 643              		@ sp needed
 644 003a 80BD     		pop	{r7, pc}
 645              	.L38:
 646              		.align	2
 647              	.L37:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 21


 648 003c 01590040 		.word	1073764609
 649              		.cfi_endproc
 650              	.LFE8:
 651              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 652              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 653              		.align	2
 654              		.global	ADC_SAR_1_GetResult8
 655              		.thumb
 656              		.thumb_func
 657              		.type	ADC_SAR_1_GetResult8, %function
 658              	ADC_SAR_1_GetResult8:
 659              	.LFB9:
 494:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 660              		.loc 1 521 0
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 0
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 80B4     		push	{r7}
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 7, -4
 668 0002 00AF     		add	r7, sp, #0
 669              		.cfi_def_cfa_register 7
 522:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 670              		.loc 1 522 0
 671 0004 064B     		ldr	r3, .L41
 672 0006 1B78     		ldrb	r3, [r3]
 673 0008 DAB2     		uxtb	r2, r3
 674 000a 064B     		ldr	r3, .L41+4
 675 000c 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 22


 676 000e 1BB2     		sxth	r3, r3
 677 0010 DBB2     		uxtb	r3, r3
 678 0012 D31A     		subs	r3, r2, r3
 679 0014 DBB2     		uxtb	r3, r3
 680 0016 5BB2     		sxtb	r3, r3
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 681              		.loc 1 523 0
 682 0018 1846     		mov	r0, r3
 683 001a BD46     		mov	sp, r7
 684              		.cfi_def_cfa_register 13
 685              		@ sp needed
 686 001c 80BC     		pop	{r7}
 687              		.cfi_restore 7
 688              		.cfi_def_cfa_offset 0
 689 001e 7047     		bx	lr
 690              	.L42:
 691              		.align	2
 692              	.L41:
 693 0020 A05B0040 		.word	1073765280
 694 0024 00000000 		.word	ADC_SAR_1_shift
 695              		.cfi_endproc
 696              	.LFE9:
 697              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 698              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 699              		.align	2
 700              		.global	ADC_SAR_1_GetResult16
 701              		.thumb
 702              		.thumb_func
 703              		.type	ADC_SAR_1_GetResult16, %function
 704              	ADC_SAR_1_GetResult16:
 705              	.LFB10:
 524:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 545:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 23


 550:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 706              		.loc 1 551 0
 707              		.cfi_startproc
 708              		@ args = 0, pretend = 0, frame = 8
 709              		@ frame_needed = 1, uses_anonymous_args = 0
 710              		@ link register save eliminated.
 711 0000 80B4     		push	{r7}
 712              		.cfi_def_cfa_offset 4
 713              		.cfi_offset 7, -4
 714 0002 83B0     		sub	sp, sp, #12
 715              		.cfi_def_cfa_offset 16
 716 0004 00AF     		add	r7, sp, #0
 717              		.cfi_def_cfa_register 7
 552:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 718              		.loc 1 554 0
 719 0006 084B     		ldr	r3, .L45
 720 0008 1B88     		ldrh	r3, [r3]	@ movhi
 721 000a FB80     		strh	r3, [r7, #6]	@ movhi
 555:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 722              		.loc 1 556 0
 723 000c 074B     		ldr	r3, .L45+4
 724 000e 1B88     		ldrh	r3, [r3]	@ movhi
 725 0010 1BB2     		sxth	r3, r3
 726 0012 9BB2     		uxth	r3, r3
 727 0014 FA88     		ldrh	r2, [r7, #6]	@ movhi
 728 0016 D31A     		subs	r3, r2, r3
 729 0018 9BB2     		uxth	r3, r3
 730 001a 1BB2     		sxth	r3, r3
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 731              		.loc 1 557 0
 732 001c 1846     		mov	r0, r3
 733 001e 0C37     		adds	r7, r7, #12
 734              		.cfi_def_cfa_offset 4
 735 0020 BD46     		mov	sp, r7
 736              		.cfi_def_cfa_register 13
 737              		@ sp needed
 738 0022 80BC     		pop	{r7}
 739              		.cfi_restore 7
 740              		.cfi_def_cfa_offset 0
 741 0024 7047     		bx	lr
 742              	.L46:
 743 0026 00BF     		.align	2
 744              	.L45:
 745 0028 A05B0040 		.word	1073765280
 746 002c 00000000 		.word	ADC_SAR_1_shift
 747              		.cfi_endproc
 748              	.LFE10:
 749              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 750              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 751              		.align	2
 752              		.global	ADC_SAR_1_SetOffset
 753              		.thumb
 754              		.thumb_func
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 24


 755              		.type	ADC_SAR_1_SetOffset, %function
 756              	ADC_SAR_1_SetOffset:
 757              	.LFB11:
 558:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 758              		.loc 1 586 0
 759              		.cfi_startproc
 760              		@ args = 0, pretend = 0, frame = 8
 761              		@ frame_needed = 1, uses_anonymous_args = 0
 762              		@ link register save eliminated.
 763 0000 80B4     		push	{r7}
 764              		.cfi_def_cfa_offset 4
 765              		.cfi_offset 7, -4
 766 0002 83B0     		sub	sp, sp, #12
 767              		.cfi_def_cfa_offset 16
 768 0004 00AF     		add	r7, sp, #0
 769              		.cfi_def_cfa_register 7
 770 0006 0346     		mov	r3, r0
 771 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 587:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 772              		.loc 1 587 0
 773 000a 044A     		ldr	r2, .L48
 774 000c FB88     		ldrh	r3, [r7, #6]	@ movhi
 775 000e 1380     		strh	r3, [r2]	@ movhi
 588:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 776              		.loc 1 588 0
 777 0010 00BF     		nop
 778 0012 0C37     		adds	r7, r7, #12
 779              		.cfi_def_cfa_offset 4
 780 0014 BD46     		mov	sp, r7
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 25


 781              		.cfi_def_cfa_register 13
 782              		@ sp needed
 783 0016 80BC     		pop	{r7}
 784              		.cfi_restore 7
 785              		.cfi_def_cfa_offset 0
 786 0018 7047     		bx	lr
 787              	.L49:
 788 001a 00BF     		.align	2
 789              	.L48:
 790 001c 00000000 		.word	ADC_SAR_1_offset
 791              		.cfi_endproc
 792              	.LFE11:
 793              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 794              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
 795              		.align	2
 796              		.thumb
 797              		.thumb_func
 798              		.type	ADC_SAR_1_CalcGain, %function
 799              	ADC_SAR_1_CalcGain:
 800              	.LFB12:
 589:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 602:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 801              		.loc 1 612 0
 802              		.cfi_startproc
 803              		@ args = 0, pretend = 0, frame = 16
 804              		@ frame_needed = 1, uses_anonymous_args = 0
 805 0000 80B5     		push	{r7, lr}
 806              		.cfi_def_cfa_offset 8
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 809 0002 84B0     		sub	sp, sp, #16
 810              		.cfi_def_cfa_offset 24
 811 0004 00AF     		add	r7, sp, #0
 812              		.cfi_def_cfa_register 7
 813 0006 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 26


 814 0008 FB71     		strb	r3, [r7, #7]
 613:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 815              		.loc 1 620 0
 816 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 817 000c 0A2B     		cmp	r3, #10
 818 000e 08D0     		beq	.L52
 819 0010 0C2B     		cmp	r3, #12
 820 0012 02D0     		beq	.L53
 821 0014 082B     		cmp	r3, #8
 822 0016 08D0     		beq	.L54
 823 0018 0BE0     		b	.L56
 824              	.L53:
 621:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
 825              		.loc 1 623 0
 826 001a 4FF48053 		mov	r3, #4096
 827 001e FB60     		str	r3, [r7, #12]
 624:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 828              		.loc 1 629 0
 829 0020 0DE0     		b	.L55
 830              	.L52:
 630:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 831              		.loc 1 631 0
 832 0022 4FF48063 		mov	r3, #1024
 833 0026 FB60     		str	r3, [r7, #12]
 632:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
 636:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 834              		.loc 1 637 0
 835 0028 09E0     		b	.L55
 836              	.L54:
 638:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
 837              		.loc 1 639 0
 838 002a 4FF48073 		mov	r3, #256
 839 002e FB60     		str	r3, [r7, #12]
 640:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 27


 644:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 840              		.loc 1 645 0
 841 0030 05E0     		b	.L55
 842              	.L56:
 646:Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 843              		.loc 1 647 0
 844 0032 0023     		movs	r3, #0
 845 0034 FB60     		str	r3, [r7, #12]
 648:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 846              		.loc 1 653 0
 847 0036 0020     		movs	r0, #0
 848 0038 FFF7FEFF 		bl	CyHalt
 654:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 849              		.loc 1 654 0
 850 003c 00BF     		nop
 851              	.L55:
 655:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
 852              		.loc 1 656 0
 853 003e 0D4B     		ldr	r3, .L57
 854 0040 0022     		movs	r2, #0
 855 0042 1A80     		strh	r2, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
 856              		.loc 1 658 0
 857 0044 FB68     		ldr	r3, [r7, #12]
 858 0046 42F21072 		movw	r2, #10000
 859 004a 02FB03F3 		mul	r3, r2, r3
 860 004e 03F27263 		addw	r3, r3, #1650
 659:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 861              		.loc 1 659 0
 862 0052 094A     		ldr	r2, .L57+4
 863 0054 82FB0312 		smull	r1, r2, r2, r3
 864 0058 1A44     		add	r2, r2, r3
 865 005a D212     		asrs	r2, r2, #11
 866 005c DB17     		asrs	r3, r3, #31
 867 005e D31A     		subs	r3, r2, r3
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
 868              		.loc 1 658 0
 869 0060 064A     		ldr	r2, .L57+8
 870 0062 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
 871              		.loc 1 664 0
 872 0064 064B     		ldr	r3, .L57+12
 873 0066 0022     		movs	r2, #0
 874 0068 1A80     		strh	r2, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 28


 665:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 875              		.loc 1 668 0
 876 006a 00BF     		nop
 877 006c 1037     		adds	r7, r7, #16
 878              		.cfi_def_cfa_offset 8
 879 006e BD46     		mov	sp, r7
 880              		.cfi_def_cfa_register 13
 881              		@ sp needed
 882 0070 80BD     		pop	{r7, pc}
 883              	.L58:
 884 0072 00BF     		.align	2
 885              	.L57:
 886 0074 00000000 		.word	ADC_SAR_1_countsPerVolt
 887 0078 EF09E09E 		.word	-1629484561
 888 007c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 889 0080 00000000 		.word	ADC_SAR_1_shift
 890              		.cfi_endproc
 891              	.LFE12:
 892              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 893              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 894              		.align	2
 895              		.global	ADC_SAR_1_SetGain
 896              		.thumb
 897              		.thumb_func
 898              		.type	ADC_SAR_1_SetGain, %function
 899              	ADC_SAR_1_SetGain:
 900              	.LFB13:
 669:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 901              		.loc 1 693 0
 902              		.cfi_startproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 29


 903              		@ args = 0, pretend = 0, frame = 8
 904              		@ frame_needed = 1, uses_anonymous_args = 0
 905              		@ link register save eliminated.
 906 0000 80B4     		push	{r7}
 907              		.cfi_def_cfa_offset 4
 908              		.cfi_offset 7, -4
 909 0002 83B0     		sub	sp, sp, #12
 910              		.cfi_def_cfa_offset 16
 911 0004 00AF     		add	r7, sp, #0
 912              		.cfi_def_cfa_register 7
 913 0006 0346     		mov	r3, r0
 914 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 694:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 915              		.loc 1 694 0
 916 000a B7F90620 		ldrsh	r2, [r7, #6]
 917 000e 1346     		mov	r3, r2
 918 0010 9B00     		lsls	r3, r3, #2
 919 0012 1344     		add	r3, r3, r2
 920 0014 5B00     		lsls	r3, r3, #1
 921 0016 1A46     		mov	r2, r3
 922 0018 034B     		ldr	r3, .L60
 923 001a 1A60     		str	r2, [r3]
 695:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 924              		.loc 1 695 0
 925 001c 00BF     		nop
 926 001e 0C37     		adds	r7, r7, #12
 927              		.cfi_def_cfa_offset 4
 928 0020 BD46     		mov	sp, r7
 929              		.cfi_def_cfa_register 13
 930              		@ sp needed
 931 0022 80BC     		pop	{r7}
 932              		.cfi_restore 7
 933              		.cfi_def_cfa_offset 0
 934 0024 7047     		bx	lr
 935              	.L61:
 936 0026 00BF     		.align	2
 937              	.L60:
 938 0028 00000000 		.word	ADC_SAR_1_countsPer10Volt
 939              		.cfi_endproc
 940              	.LFE13:
 941              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 942              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 943              		.align	2
 944              		.global	ADC_SAR_1_SetScaledGain
 945              		.thumb
 946              		.thumb_func
 947              		.type	ADC_SAR_1_SetScaledGain, %function
 948              	ADC_SAR_1_SetScaledGain:
 949              	.LFB14:
 696:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 30


 704:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 950              		.loc 1 720 0
 951              		.cfi_startproc
 952              		@ args = 0, pretend = 0, frame = 8
 953              		@ frame_needed = 1, uses_anonymous_args = 0
 954              		@ link register save eliminated.
 955 0000 80B4     		push	{r7}
 956              		.cfi_def_cfa_offset 4
 957              		.cfi_offset 7, -4
 958 0002 83B0     		sub	sp, sp, #12
 959              		.cfi_def_cfa_offset 16
 960 0004 00AF     		add	r7, sp, #0
 961              		.cfi_def_cfa_register 7
 962 0006 7860     		str	r0, [r7, #4]
 721:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 963              		.loc 1 721 0
 964 0008 034A     		ldr	r2, .L63
 965 000a 7B68     		ldr	r3, [r7, #4]
 966 000c 1360     		str	r3, [r2]
 722:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 967              		.loc 1 722 0
 968 000e 00BF     		nop
 969 0010 0C37     		adds	r7, r7, #12
 970              		.cfi_def_cfa_offset 4
 971 0012 BD46     		mov	sp, r7
 972              		.cfi_def_cfa_register 13
 973              		@ sp needed
 974 0014 80BC     		pop	{r7}
 975              		.cfi_restore 7
 976              		.cfi_def_cfa_offset 0
 977 0016 7047     		bx	lr
 978              	.L64:
 979              		.align	2
 980              	.L63:
 981 0018 00000000 		.word	ADC_SAR_1_countsPer10Volt
 982              		.cfi_endproc
 983              	.LFE14:
 984              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 985              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 986              		.align	2
 987              		.global	ADC_SAR_1_CountsTo_mVolts
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 31


 988              		.thumb
 989              		.thumb_func
 990              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 991              	ADC_SAR_1_CountsTo_mVolts:
 992              	.LFB15:
 723:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 993              		.loc 1 744 0
 994              		.cfi_startproc
 995              		@ args = 0, pretend = 0, frame = 16
 996              		@ frame_needed = 1, uses_anonymous_args = 0
 997              		@ link register save eliminated.
 998 0000 80B4     		push	{r7}
 999              		.cfi_def_cfa_offset 4
 1000              		.cfi_offset 7, -4
 1001 0002 85B0     		sub	sp, sp, #20
 1002              		.cfi_def_cfa_offset 24
 1003 0004 00AF     		add	r7, sp, #0
 1004              		.cfi_def_cfa_register 7
 1005 0006 0346     		mov	r3, r0
 1006 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 745:Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 747:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 1007              		.loc 1 748 0
 1008 000a 1D4B     		ldr	r3, .L71
 1009 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1010 000e 1BB2     		sxth	r3, r3
 1011 0010 002B     		cmp	r3, #0
 1012 0012 09D0     		beq	.L66
 749:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1013              		.loc 1 750 0
 1014 0014 1A4B     		ldr	r3, .L71
 1015 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1016 0018 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 32


 1017 001a 1A46     		mov	r2, r3
 1018 001c 1346     		mov	r3, r2
 1019 001e 9B00     		lsls	r3, r3, #2
 1020 0020 1344     		add	r3, r3, r2
 1021 0022 5B00     		lsls	r3, r3, #1
 1022 0024 FB60     		str	r3, [r7, #12]
 1023 0026 02E0     		b	.L67
 1024              	.L66:
 751:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1025              		.loc 1 754 0
 1026 0028 164B     		ldr	r3, .L71+4
 1027 002a 1B68     		ldr	r3, [r3]
 1028 002c FB60     		str	r3, [r7, #12]
 1029              	.L67:
 755:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1030              		.loc 1 758 0
 1031 002e 164B     		ldr	r3, .L71+8
 1032 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1033 0032 1BB2     		sxth	r3, r3
 1034 0034 FA88     		ldrh	r2, [r7, #6]
 1035 0036 9BB2     		uxth	r3, r3
 1036 0038 D31A     		subs	r3, r2, r3
 1037 003a 9BB2     		uxth	r3, r3
 1038 003c FB80     		strh	r3, [r7, #6]	@ movhi
 759:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 1039              		.loc 1 760 0
 1040 003e B7F90630 		ldrsh	r3, [r7, #6]
 1041 0042 42F21072 		movw	r2, #10000
 1042 0046 02FB03F2 		mul	r2, r2, r3
 761:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1043              		.loc 1 761 0
 1044 004a B7F90630 		ldrsh	r3, [r7, #6]
 1045 004e 002B     		cmp	r3, #0
 1046 0050 04DD     		ble	.L68
 1047              		.loc 1 761 0 is_stmt 0 discriminator 1
 1048 0052 FB68     		ldr	r3, [r7, #12]
 1049 0054 D90F     		lsrs	r1, r3, #31
 1050 0056 0B44     		add	r3, r3, r1
 1051 0058 5B10     		asrs	r3, r3, #1
 1052 005a 04E0     		b	.L69
 1053              	.L68:
 1054              		.loc 1 761 0 discriminator 2
 1055 005c FB68     		ldr	r3, [r7, #12]
 1056 005e D90F     		lsrs	r1, r3, #31
 1057 0060 0B44     		add	r3, r3, r1
 1058 0062 5B10     		asrs	r3, r3, #1
 1059 0064 5B42     		negs	r3, r3
 1060              	.L69:
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1061              		.loc 1 760 0 is_stmt 1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 33


 1062 0066 1A44     		add	r2, r2, r3
 1063              		.loc 1 761 0
 1064 0068 FB68     		ldr	r3, [r7, #12]
 1065 006a 92FBF3F3 		sdiv	r3, r2, r3
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 1066              		.loc 1 760 0
 1067 006e 7B81     		strh	r3, [r7, #10]	@ movhi
 762:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 1068              		.loc 1 763 0
 1069 0070 B7F90A30 		ldrsh	r3, [r7, #10]
 764:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1070              		.loc 1 764 0
 1071 0074 1846     		mov	r0, r3
 1072 0076 1437     		adds	r7, r7, #20
 1073              		.cfi_def_cfa_offset 4
 1074 0078 BD46     		mov	sp, r7
 1075              		.cfi_def_cfa_register 13
 1076              		@ sp needed
 1077 007a 80BC     		pop	{r7}
 1078              		.cfi_restore 7
 1079              		.cfi_def_cfa_offset 0
 1080 007c 7047     		bx	lr
 1081              	.L72:
 1082 007e 00BF     		.align	2
 1083              	.L71:
 1084 0080 00000000 		.word	ADC_SAR_1_countsPerVolt
 1085 0084 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1086 0088 00000000 		.word	ADC_SAR_1_offset
 1087              		.cfi_endproc
 1088              	.LFE15:
 1089              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 1090              		.global	__aeabi_ldivmod
 1091              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 1092              		.align	2
 1093              		.global	ADC_SAR_1_CountsTo_uVolts
 1094              		.thumb
 1095              		.thumb_func
 1096              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 1097              	ADC_SAR_1_CountsTo_uVolts:
 1098              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 34


 781:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1099              		.loc 1 786 0
 1100              		.cfi_startproc
 1101              		@ args = 0, pretend = 0, frame = 24
 1102              		@ frame_needed = 1, uses_anonymous_args = 0
 1103 0000 90B5     		push	{r4, r7, lr}
 1104              		.cfi_def_cfa_offset 12
 1105              		.cfi_offset 4, -12
 1106              		.cfi_offset 7, -8
 1107              		.cfi_offset 14, -4
 1108 0002 87B0     		sub	sp, sp, #28
 1109              		.cfi_def_cfa_offset 40
 1110 0004 00AF     		add	r7, sp, #0
 1111              		.cfi_def_cfa_register 7
 1112 0006 0346     		mov	r3, r0
 1113 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 787:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 1114              		.loc 1 791 0
 1115 000a 1D4B     		ldr	r3, .L77
 1116 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1117 000e 1BB2     		sxth	r3, r3
 1118 0010 002B     		cmp	r3, #0
 1119 0012 09D0     		beq	.L74
 792:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1120              		.loc 1 793 0
 1121 0014 1A4B     		ldr	r3, .L77
 1122 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1123 0018 1BB2     		sxth	r3, r3
 1124 001a 1A46     		mov	r2, r3
 1125 001c 1346     		mov	r3, r2
 1126 001e 9B00     		lsls	r3, r3, #2
 1127 0020 1344     		add	r3, r3, r2
 1128 0022 5B00     		lsls	r3, r3, #1
 1129 0024 7B61     		str	r3, [r7, #20]
 1130 0026 02E0     		b	.L75
 1131              	.L74:
 794:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1132              		.loc 1 797 0
 1133 0028 164B     		ldr	r3, .L77+4
 1134 002a 1B68     		ldr	r3, [r3]
 1135 002c 7B61     		str	r3, [r7, #20]
 1136              	.L75:
 798:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 35


 800:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1137              		.loc 1 801 0
 1138 002e 164B     		ldr	r3, .L77+8
 1139 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1140 0032 1BB2     		sxth	r3, r3
 1141 0034 FA88     		ldrh	r2, [r7, #6]
 1142 0036 9BB2     		uxth	r3, r3
 1143 0038 D31A     		subs	r3, r2, r3
 1144 003a 9BB2     		uxth	r3, r3
 1145 003c FB80     		strh	r3, [r7, #6]	@ movhi
 802:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 1146              		.loc 1 805 0
 1147 003e B7F90630 		ldrsh	r3, [r7, #6]
 1148 0042 4FEAE374 		asr	r4, r3, #31
 1149 0046 114A     		ldr	r2, .L77+12
 1150 0048 02FB04F1 		mul	r1, r2, r4
 1151 004c 0022     		movs	r2, #0
 1152 004e 02FB03F2 		mul	r2, r2, r3
 1153 0052 0A44     		add	r2, r2, r1
 1154 0054 0D49     		ldr	r1, .L77+12
 1155 0056 A3FB0101 		umull	r0, r1, r3, r1
 1156 005a 5318     		adds	r3, r2, r1
 1157 005c 1946     		mov	r1, r3
 1158 005e 7B69     		ldr	r3, [r7, #20]
 1159 0060 4FEAE374 		asr	r4, r3, #31
 1160 0064 1A46     		mov	r2, r3
 1161 0066 2346     		mov	r3, r4
 1162 0068 FFF7FEFF 		bl	__aeabi_ldivmod
 1163 006c 0346     		mov	r3, r0
 1164 006e 0C46     		mov	r4, r1
 1165 0070 C7E90234 		strd	r3, [r7, #8]
 806:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_1.c ****     return((int32) uVolts );
 1166              		.loc 1 807 0
 1167 0074 BB68     		ldr	r3, [r7, #8]
 808:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1168              		.loc 1 808 0
 1169 0076 1846     		mov	r0, r3
 1170 0078 1C37     		adds	r7, r7, #28
 1171              		.cfi_def_cfa_offset 12
 1172 007a BD46     		mov	sp, r7
 1173              		.cfi_def_cfa_register 13
 1174              		@ sp needed
 1175 007c 90BD     		pop	{r4, r7, pc}
 1176              	.L78:
 1177 007e 00BF     		.align	2
 1178              	.L77:
 1179 0080 00000000 		.word	ADC_SAR_1_countsPerVolt
 1180 0084 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1181 0088 00000000 		.word	ADC_SAR_1_offset
 1182 008c 80969800 		.word	10000000
 1183              		.cfi_endproc
 1184              	.LFE16:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 36


 1185              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 1186              		.global	__aeabi_i2f
 1187              		.global	__aeabi_fmul
 1188              		.global	__aeabi_fdiv
 1189              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 1190              		.align	2
 1191              		.global	ADC_SAR_1_CountsTo_Volts
 1192              		.thumb
 1193              		.thumb_func
 1194              		.type	ADC_SAR_1_CountsTo_Volts, %function
 1195              	ADC_SAR_1_CountsTo_Volts:
 1196              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 1197              		.loc 1 830 0
 1198              		.cfi_startproc
 1199              		@ args = 0, pretend = 0, frame = 16
 1200              		@ frame_needed = 1, uses_anonymous_args = 0
 1201 0000 90B5     		push	{r4, r7, lr}
 1202              		.cfi_def_cfa_offset 12
 1203              		.cfi_offset 4, -12
 1204              		.cfi_offset 7, -8
 1205              		.cfi_offset 14, -4
 1206 0002 85B0     		sub	sp, sp, #20
 1207              		.cfi_def_cfa_offset 32
 1208 0004 00AF     		add	r7, sp, #0
 1209              		.cfi_def_cfa_register 7
 1210 0006 0346     		mov	r3, r0
 1211 0008 FB80     		strh	r3, [r7, #6]	@ movhi
 831:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 1212              		.loc 1 834 0
 1213 000a 1A4B     		ldr	r3, .L83
 1214 000c 1B88     		ldrh	r3, [r3]	@ movhi
 1215 000e 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 37


 1216 0010 002B     		cmp	r3, #0
 1217 0012 09D0     		beq	.L80
 835:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 1218              		.loc 1 836 0
 1219 0014 174B     		ldr	r3, .L83
 1220 0016 1B88     		ldrh	r3, [r3]	@ movhi
 1221 0018 1BB2     		sxth	r3, r3
 1222 001a 1A46     		mov	r2, r3
 1223 001c 1346     		mov	r3, r2
 1224 001e 9B00     		lsls	r3, r3, #2
 1225 0020 1344     		add	r3, r3, r2
 1226 0022 5B00     		lsls	r3, r3, #1
 1227 0024 FB60     		str	r3, [r7, #12]
 1228 0026 02E0     		b	.L81
 1229              	.L80:
 837:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 1230              		.loc 1 840 0
 1231 0028 134B     		ldr	r3, .L83+4
 1232 002a 1B68     		ldr	r3, [r3]
 1233 002c FB60     		str	r3, [r7, #12]
 1234              	.L81:
 841:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 1235              		.loc 1 844 0
 1236 002e 134B     		ldr	r3, .L83+8
 1237 0030 1B88     		ldrh	r3, [r3]	@ movhi
 1238 0032 1BB2     		sxth	r3, r3
 1239 0034 FA88     		ldrh	r2, [r7, #6]
 1240 0036 9BB2     		uxth	r3, r3
 1241 0038 D31A     		subs	r3, r2, r3
 1242 003a 9BB2     		uxth	r3, r3
 1243 003c FB80     		strh	r3, [r7, #6]	@ movhi
 845:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 1244              		.loc 1 846 0
 1245 003e B7F90630 		ldrsh	r3, [r7, #6]
 1246 0042 1846     		mov	r0, r3
 1247 0044 FFF7FEFF 		bl	__aeabi_i2f
 1248 0048 0346     		mov	r3, r0
 1249 004a 0D49     		ldr	r1, .L83+12
 1250 004c 1846     		mov	r0, r3
 1251 004e FFF7FEFF 		bl	__aeabi_fmul
 1252 0052 0346     		mov	r3, r0
 1253 0054 1C46     		mov	r4, r3
 1254 0056 F868     		ldr	r0, [r7, #12]
 1255 0058 FFF7FEFF 		bl	__aeabi_i2f
 1256 005c 0346     		mov	r3, r0
 1257 005e 1946     		mov	r1, r3
 1258 0060 2046     		mov	r0, r4
 1259 0062 FFF7FEFF 		bl	__aeabi_fdiv
 1260 0066 0346     		mov	r3, r0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 38


 1261 0068 BB60     		str	r3, [r7, #8]	@ float
 847:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 1262              		.loc 1 848 0
 1263 006a BB68     		ldr	r3, [r7, #8]	@ float
 849:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 1264              		.loc 1 849 0
 1265 006c 1846     		mov	r0, r3
 1266 006e 1437     		adds	r7, r7, #20
 1267              		.cfi_def_cfa_offset 12
 1268 0070 BD46     		mov	sp, r7
 1269              		.cfi_def_cfa_register 13
 1270              		@ sp needed
 1271 0072 90BD     		pop	{r4, r7, pc}
 1272              	.L84:
 1273              		.align	2
 1274              	.L83:
 1275 0074 00000000 		.word	ADC_SAR_1_countsPerVolt
 1276 0078 00000000 		.word	ADC_SAR_1_countsPer10Volt
 1277 007c 00000000 		.word	ADC_SAR_1_offset
 1278 0080 00002041 		.word	1092616192
 1279              		.cfi_endproc
 1280              	.LFE17:
 1281              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 1282              		.text
 1283              	.Letext0:
 1284              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 1285              		.section	.debug_info,"",%progbits
 1286              	.Ldebug_info0:
 1287 0000 7B040000 		.4byte	0x47b
 1288 0004 0400     		.2byte	0x4
 1289 0006 00000000 		.4byte	.Ldebug_abbrev0
 1290 000a 04       		.byte	0x4
 1291 000b 01       		.uleb128 0x1
 1292 000c 36000000 		.4byte	.LASF60
 1293 0010 0C       		.byte	0xc
 1294 0011 3E030000 		.4byte	.LASF61
 1295 0015 73010000 		.4byte	.LASF62
 1296 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1297 001d 00000000 		.4byte	0
 1298 0021 00000000 		.4byte	.Ldebug_line0
 1299 0025 02       		.uleb128 0x2
 1300 0026 04       		.byte	0x4
 1301 0027 05       		.byte	0x5
 1302 0028 696E7400 		.ascii	"int\000"
 1303 002c 03       		.uleb128 0x3
 1304 002d 04       		.byte	0x4
 1305 002e 07       		.byte	0x7
 1306 002f 47010000 		.4byte	.LASF0
 1307 0033 03       		.uleb128 0x3
 1308 0034 08       		.byte	0x8
 1309 0035 05       		.byte	0x5
 1310 0036 DB000000 		.4byte	.LASF1
 1311 003a 03       		.uleb128 0x3
 1312 003b 08       		.byte	0x8
 1313 003c 04       		.byte	0x4
 1314 003d 2F020000 		.4byte	.LASF2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 39


 1315 0041 03       		.uleb128 0x3
 1316 0042 01       		.byte	0x1
 1317 0043 06       		.byte	0x6
 1318 0044 E9000000 		.4byte	.LASF3
 1319 0048 03       		.uleb128 0x3
 1320 0049 01       		.byte	0x1
 1321 004a 08       		.byte	0x8
 1322 004b BA020000 		.4byte	.LASF4
 1323 004f 03       		.uleb128 0x3
 1324 0050 02       		.byte	0x2
 1325 0051 05       		.byte	0x5
 1326 0052 E2020000 		.4byte	.LASF5
 1327 0056 03       		.uleb128 0x3
 1328 0057 02       		.byte	0x2
 1329 0058 07       		.byte	0x7
 1330 0059 D2010000 		.4byte	.LASF6
 1331 005d 03       		.uleb128 0x3
 1332 005e 04       		.byte	0x4
 1333 005f 05       		.byte	0x5
 1334 0060 FB000000 		.4byte	.LASF7
 1335 0064 03       		.uleb128 0x3
 1336 0065 04       		.byte	0x4
 1337 0066 07       		.byte	0x7
 1338 0067 5B010000 		.4byte	.LASF8
 1339 006b 03       		.uleb128 0x3
 1340 006c 08       		.byte	0x8
 1341 006d 07       		.byte	0x7
 1342 006e C4000000 		.4byte	.LASF9
 1343 0072 03       		.uleb128 0x3
 1344 0073 04       		.byte	0x4
 1345 0074 07       		.byte	0x7
 1346 0075 26020000 		.4byte	.LASF10
 1347 0079 03       		.uleb128 0x3
 1348 007a 01       		.byte	0x1
 1349 007b 08       		.byte	0x8
 1350 007c 61030000 		.4byte	.LASF11
 1351 0080 04       		.uleb128 0x4
 1352 0081 1B010000 		.4byte	.LASF12
 1353 0085 02       		.byte	0x2
 1354 0086 E401     		.2byte	0x1e4
 1355 0088 48000000 		.4byte	0x48
 1356 008c 04       		.uleb128 0x4
 1357 008d 00000000 		.4byte	.LASF13
 1358 0091 02       		.byte	0x2
 1359 0092 E501     		.2byte	0x1e5
 1360 0094 56000000 		.4byte	0x56
 1361 0098 04       		.uleb128 0x4
 1362 0099 28010000 		.4byte	.LASF14
 1363 009d 02       		.byte	0x2
 1364 009e E601     		.2byte	0x1e6
 1365 00a0 64000000 		.4byte	0x64
 1366 00a4 04       		.uleb128 0x4
 1367 00a5 F4010000 		.4byte	.LASF15
 1368 00a9 02       		.byte	0x2
 1369 00aa E701     		.2byte	0x1e7
 1370 00ac 41000000 		.4byte	0x41
 1371 00b0 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 40


 1372 00b1 FD030000 		.4byte	.LASF16
 1373 00b5 02       		.byte	0x2
 1374 00b6 E801     		.2byte	0x1e8
 1375 00b8 4F000000 		.4byte	0x4f
 1376 00bc 04       		.uleb128 0x4
 1377 00bd F5000000 		.4byte	.LASF17
 1378 00c1 02       		.byte	0x2
 1379 00c2 E901     		.2byte	0x1e9
 1380 00c4 5D000000 		.4byte	0x5d
 1381 00c8 04       		.uleb128 0x4
 1382 00c9 1E020000 		.4byte	.LASF18
 1383 00cd 02       		.byte	0x2
 1384 00ce EA01     		.2byte	0x1ea
 1385 00d0 D4000000 		.4byte	0xd4
 1386 00d4 03       		.uleb128 0x3
 1387 00d5 04       		.byte	0x4
 1388 00d6 04       		.byte	0x4
 1389 00d7 97020000 		.4byte	.LASF19
 1390 00db 03       		.uleb128 0x3
 1391 00dc 08       		.byte	0x8
 1392 00dd 04       		.byte	0x4
 1393 00de 21010000 		.4byte	.LASF20
 1394 00e2 04       		.uleb128 0x4
 1395 00e3 7D020000 		.4byte	.LASF21
 1396 00e7 02       		.byte	0x2
 1397 00e8 EF01     		.2byte	0x1ef
 1398 00ea 33000000 		.4byte	0x33
 1399 00ee 04       		.uleb128 0x4
 1400 00ef B5020000 		.4byte	.LASF22
 1401 00f3 02       		.byte	0x2
 1402 00f4 8E02     		.2byte	0x28e
 1403 00f6 FA000000 		.4byte	0xfa
 1404 00fa 05       		.uleb128 0x5
 1405 00fb 80000000 		.4byte	0x80
 1406 00ff 04       		.uleb128 0x4
 1407 0100 15010000 		.4byte	.LASF23
 1408 0104 02       		.byte	0x2
 1409 0105 8F02     		.2byte	0x28f
 1410 0107 0B010000 		.4byte	0x10b
 1411 010b 05       		.uleb128 0x5
 1412 010c 8C000000 		.4byte	0x8c
 1413 0110 04       		.uleb128 0x4
 1414 0111 00020000 		.4byte	.LASF24
 1415 0115 02       		.byte	0x2
 1416 0116 9002     		.2byte	0x290
 1417 0118 1C010000 		.4byte	0x11c
 1418 011c 05       		.uleb128 0x5
 1419 011d 98000000 		.4byte	0x98
 1420 0121 06       		.uleb128 0x6
 1421 0122 6D020000 		.4byte	.LASF25
 1422 0126 01       		.byte	0x1
 1423 0127 4A       		.byte	0x4a
 1424 0128 00000000 		.4byte	.LFB0
 1425 012c 24000000 		.4byte	.LFE0-.LFB0
 1426 0130 01       		.uleb128 0x1
 1427 0131 9C       		.byte	0x9c
 1428 0132 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 41


 1429 0133 E5010000 		.4byte	.LASF26
 1430 0137 01       		.byte	0x1
 1431 0138 6A       		.byte	0x6a
 1432 0139 00000000 		.4byte	.LFB1
 1433 013d 48000000 		.4byte	.LFE1-.LFB1
 1434 0141 01       		.uleb128 0x1
 1435 0142 9C       		.byte	0x9c
 1436 0143 07       		.uleb128 0x7
 1437 0144 F4020000 		.4byte	.LASF29
 1438 0148 01       		.byte	0x1
 1439 0149 8F       		.byte	0x8f
 1440 014a 00000000 		.4byte	.LFB2
 1441 014e F4000000 		.4byte	.LFE2-.LFB2
 1442 0152 01       		.uleb128 0x1
 1443 0153 9C       		.byte	0x9c
 1444 0154 75010000 		.4byte	0x175
 1445 0158 08       		.uleb128 0x8
 1446 0159 34040000 		.4byte	.LASF27
 1447 015d 01       		.byte	0x1
 1448 015e 91       		.byte	0x91
 1449 015f 80000000 		.4byte	0x80
 1450 0163 02       		.uleb128 0x2
 1451 0164 91       		.byte	0x91
 1452 0165 76       		.sleb128 -10
 1453 0166 08       		.uleb128 0x8
 1454 0167 A6030000 		.4byte	.LASF28
 1455 016b 01       		.byte	0x1
 1456 016c 92       		.byte	0x92
 1457 016d 80000000 		.4byte	0x80
 1458 0171 02       		.uleb128 0x2
 1459 0172 91       		.byte	0x91
 1460 0173 77       		.sleb128 -9
 1461 0174 00       		.byte	0
 1462 0175 07       		.uleb128 0x7
 1463 0176 4B040000 		.4byte	.LASF30
 1464 017a 01       		.byte	0x1
 1465 017b F8       		.byte	0xf8
 1466 017c 00000000 		.4byte	.LFB3
 1467 0180 84000000 		.4byte	.LFE3-.LFB3
 1468 0184 01       		.uleb128 0x1
 1469 0185 9C       		.byte	0x9c
 1470 0186 99010000 		.4byte	0x199
 1471 018a 08       		.uleb128 0x8
 1472 018b A6030000 		.4byte	.LASF28
 1473 018f 01       		.byte	0x1
 1474 0190 FA       		.byte	0xfa
 1475 0191 80000000 		.4byte	0x80
 1476 0195 02       		.uleb128 0x2
 1477 0196 91       		.byte	0x91
 1478 0197 77       		.sleb128 -9
 1479 0198 00       		.byte	0
 1480 0199 09       		.uleb128 0x9
 1481 019a D8030000 		.4byte	.LASF31
 1482 019e 01       		.byte	0x1
 1483 019f 2201     		.2byte	0x122
 1484 01a1 00000000 		.4byte	.LFB4
 1485 01a5 40000000 		.4byte	.LFE4-.LFB4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 42


 1486 01a9 01       		.uleb128 0x1
 1487 01aa 9C       		.byte	0x9c
 1488 01ab CE010000 		.4byte	0x1ce
 1489 01af 0A       		.uleb128 0xa
 1490 01b0 AF020000 		.4byte	.LASF33
 1491 01b4 01       		.byte	0x1
 1492 01b5 2201     		.2byte	0x122
 1493 01b7 80000000 		.4byte	0x80
 1494 01bb 02       		.uleb128 0x2
 1495 01bc 91       		.byte	0x91
 1496 01bd 6F       		.sleb128 -17
 1497 01be 0B       		.uleb128 0xb
 1498 01bf 34040000 		.4byte	.LASF27
 1499 01c3 01       		.byte	0x1
 1500 01c4 2401     		.2byte	0x124
 1501 01c6 80000000 		.4byte	0x80
 1502 01ca 02       		.uleb128 0x2
 1503 01cb 91       		.byte	0x91
 1504 01cc 77       		.sleb128 -9
 1505 01cd 00       		.byte	0
 1506 01ce 0C       		.uleb128 0xc
 1507 01cf 3B020000 		.4byte	.LASF32
 1508 01d3 01       		.byte	0x1
 1509 01d4 5401     		.2byte	0x154
 1510 01d6 00000000 		.4byte	.LFB5
 1511 01da 54000000 		.4byte	.LFE5-.LFB5
 1512 01de 01       		.uleb128 0x1
 1513 01df 9C       		.byte	0x9c
 1514 01e0 03020000 		.4byte	0x203
 1515 01e4 0A       		.uleb128 0xa
 1516 01e5 33030000 		.4byte	.LASF34
 1517 01e9 01       		.byte	0x1
 1518 01ea 5401     		.2byte	0x154
 1519 01ec 80000000 		.4byte	0x80
 1520 01f0 02       		.uleb128 0x2
 1521 01f1 91       		.byte	0x91
 1522 01f2 6F       		.sleb128 -17
 1523 01f3 0B       		.uleb128 0xb
 1524 01f4 34040000 		.4byte	.LASF27
 1525 01f8 01       		.byte	0x1
 1526 01f9 5601     		.2byte	0x156
 1527 01fb 80000000 		.4byte	0x80
 1528 01ff 02       		.uleb128 0x2
 1529 0200 91       		.byte	0x91
 1530 0201 77       		.sleb128 -9
 1531 0202 00       		.byte	0
 1532 0203 0D       		.uleb128 0xd
 1533 0204 1D040000 		.4byte	.LASF35
 1534 0208 01       		.byte	0x1
 1535 0209 9101     		.2byte	0x191
 1536 020b 00000000 		.4byte	.LFB6
 1537 020f 20000000 		.4byte	.LFE6-.LFB6
 1538 0213 01       		.uleb128 0x1
 1539 0214 9C       		.byte	0x9c
 1540 0215 0D       		.uleb128 0xd
 1541 0216 86030000 		.4byte	.LASF36
 1542 021a 01       		.byte	0x1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 43


 1543 021b B301     		.2byte	0x1b3
 1544 021d 00000000 		.4byte	.LFB7
 1545 0221 20000000 		.4byte	.LFE7-.LFB7
 1546 0225 01       		.uleb128 0x1
 1547 0226 9C       		.byte	0x9c
 1548 0227 0E       		.uleb128 0xe
 1549 0228 BE030000 		.4byte	.LASF39
 1550 022c 01       		.byte	0x1
 1551 022d DB01     		.2byte	0x1db
 1552 022f 80000000 		.4byte	0x80
 1553 0233 00000000 		.4byte	.LFB8
 1554 0237 40000000 		.4byte	.LFE8-.LFB8
 1555 023b 01       		.uleb128 0x1
 1556 023c 9C       		.byte	0x9c
 1557 023d 60020000 		.4byte	0x260
 1558 0241 0A       		.uleb128 0xa
 1559 0242 3F010000 		.4byte	.LASF37
 1560 0246 01       		.byte	0x1
 1561 0247 DB01     		.2byte	0x1db
 1562 0249 80000000 		.4byte	0x80
 1563 024d 02       		.uleb128 0x2
 1564 024e 91       		.byte	0x91
 1565 024f 6F       		.sleb128 -17
 1566 0250 0B       		.uleb128 0xb
 1567 0251 B7030000 		.4byte	.LASF38
 1568 0255 01       		.byte	0x1
 1569 0256 DD01     		.2byte	0x1dd
 1570 0258 80000000 		.4byte	0x80
 1571 025c 02       		.uleb128 0x2
 1572 025d 91       		.byte	0x91
 1573 025e 77       		.sleb128 -9
 1574 025f 00       		.byte	0
 1575 0260 0F       		.uleb128 0xf
 1576 0261 07000000 		.4byte	.LASF63
 1577 0265 01       		.byte	0x1
 1578 0266 0802     		.2byte	0x208
 1579 0268 A4000000 		.4byte	0xa4
 1580 026c 00000000 		.4byte	.LFB9
 1581 0270 28000000 		.4byte	.LFE9-.LFB9
 1582 0274 01       		.uleb128 0x1
 1583 0275 9C       		.byte	0x9c
 1584 0276 10       		.uleb128 0x10
 1585 0277 1D030000 		.4byte	.LASF40
 1586 027b 01       		.byte	0x1
 1587 027c 2602     		.2byte	0x226
 1588 027e B0000000 		.4byte	0xb0
 1589 0282 00000000 		.4byte	.LFB10
 1590 0286 30000000 		.4byte	.LFE10-.LFB10
 1591 028a 01       		.uleb128 0x1
 1592 028b 9C       		.byte	0x9c
 1593 028c A0020000 		.4byte	0x2a0
 1594 0290 11       		.uleb128 0x11
 1595 0291 72657300 		.ascii	"res\000"
 1596 0295 01       		.byte	0x1
 1597 0296 2802     		.2byte	0x228
 1598 0298 8C000000 		.4byte	0x8c
 1599 029c 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 44


 1600 029d 91       		.byte	0x91
 1601 029e 76       		.sleb128 -10
 1602 029f 00       		.byte	0
 1603 02a0 09       		.uleb128 0x9
 1604 02a1 83020000 		.4byte	.LASF41
 1605 02a5 01       		.byte	0x1
 1606 02a6 4902     		.2byte	0x249
 1607 02a8 00000000 		.4byte	.LFB11
 1608 02ac 20000000 		.4byte	.LFE11-.LFB11
 1609 02b0 01       		.uleb128 0x1
 1610 02b1 9C       		.byte	0x9c
 1611 02b2 C6020000 		.4byte	0x2c6
 1612 02b6 0A       		.uleb128 0xa
 1613 02b7 7F030000 		.4byte	.LASF42
 1614 02bb 01       		.byte	0x1
 1615 02bc 4902     		.2byte	0x249
 1616 02be B0000000 		.4byte	0xb0
 1617 02c2 02       		.uleb128 0x2
 1618 02c3 91       		.byte	0x91
 1619 02c4 76       		.sleb128 -10
 1620 02c5 00       		.byte	0
 1621 02c6 12       		.uleb128 0x12
 1622 02c7 23000000 		.4byte	.LASF64
 1623 02cb 01       		.byte	0x1
 1624 02cc 6302     		.2byte	0x263
 1625 02ce 00000000 		.4byte	.LFB12
 1626 02d2 84000000 		.4byte	.LFE12-.LFB12
 1627 02d6 01       		.uleb128 0x1
 1628 02d7 9C       		.byte	0x9c
 1629 02d8 FB020000 		.4byte	0x2fb
 1630 02dc 0A       		.uleb128 0xa
 1631 02dd 33030000 		.4byte	.LASF34
 1632 02e1 01       		.byte	0x1
 1633 02e2 6302     		.2byte	0x263
 1634 02e4 80000000 		.4byte	0x80
 1635 02e8 02       		.uleb128 0x2
 1636 02e9 91       		.byte	0x91
 1637 02ea 6F       		.sleb128 -17
 1638 02eb 0B       		.uleb128 0xb
 1639 02ec 1C000000 		.4byte	.LASF43
 1640 02f0 01       		.byte	0x1
 1641 02f1 6502     		.2byte	0x265
 1642 02f3 BC000000 		.4byte	0xbc
 1643 02f7 02       		.uleb128 0x2
 1644 02f8 91       		.byte	0x91
 1645 02f9 74       		.sleb128 -12
 1646 02fa 00       		.byte	0
 1647 02fb 09       		.uleb128 0x9
 1648 02fc EB030000 		.4byte	.LASF44
 1649 0300 01       		.byte	0x1
 1650 0301 B402     		.2byte	0x2b4
 1651 0303 00000000 		.4byte	.LFB13
 1652 0307 2C000000 		.4byte	.LFE13-.LFB13
 1653 030b 01       		.uleb128 0x1
 1654 030c 9C       		.byte	0x9c
 1655 030d 21030000 		.4byte	0x321
 1656 0311 0A       		.uleb128 0xa
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 45


 1657 0312 EC020000 		.4byte	.LASF45
 1658 0316 01       		.byte	0x1
 1659 0317 B402     		.2byte	0x2b4
 1660 0319 B0000000 		.4byte	0xb0
 1661 031d 02       		.uleb128 0x2
 1662 031e 91       		.byte	0x91
 1663 031f 76       		.sleb128 -10
 1664 0320 00       		.byte	0
 1665 0321 09       		.uleb128 0x9
 1666 0322 05030000 		.4byte	.LASF46
 1667 0326 01       		.byte	0x1
 1668 0327 CF02     		.2byte	0x2cf
 1669 0329 00000000 		.4byte	.LFB14
 1670 032d 1C000000 		.4byte	.LFE14-.LFB14
 1671 0331 01       		.uleb128 0x1
 1672 0332 9C       		.byte	0x9c
 1673 0333 47030000 		.4byte	0x347
 1674 0337 0A       		.uleb128 0xa
 1675 0338 EC020000 		.4byte	.LASF45
 1676 033c 01       		.byte	0x1
 1677 033d CF02     		.2byte	0x2cf
 1678 033f BC000000 		.4byte	0xbc
 1679 0343 02       		.uleb128 0x2
 1680 0344 91       		.byte	0x91
 1681 0345 74       		.sleb128 -12
 1682 0346 00       		.byte	0
 1683 0347 10       		.uleb128 0x10
 1684 0348 C8020000 		.4byte	.LASF47
 1685 034c 01       		.byte	0x1
 1686 034d E702     		.2byte	0x2e7
 1687 034f B0000000 		.4byte	0xb0
 1688 0353 00000000 		.4byte	.LFB15
 1689 0357 8C000000 		.4byte	.LFE15-.LFB15
 1690 035b 01       		.uleb128 0x1
 1691 035c 9C       		.byte	0x9c
 1692 035d 8F030000 		.4byte	0x38f
 1693 0361 0A       		.uleb128 0xa
 1694 0362 9C030000 		.4byte	.LASF48
 1695 0366 01       		.byte	0x1
 1696 0367 E702     		.2byte	0x2e7
 1697 0369 B0000000 		.4byte	0xb0
 1698 036d 02       		.uleb128 0x2
 1699 036e 91       		.byte	0x91
 1700 036f 6E       		.sleb128 -18
 1701 0370 0B       		.uleb128 0xb
 1702 0371 F9010000 		.4byte	.LASF49
 1703 0375 01       		.byte	0x1
 1704 0376 E902     		.2byte	0x2e9
 1705 0378 B0000000 		.4byte	0xb0
 1706 037c 02       		.uleb128 0x2
 1707 037d 91       		.byte	0x91
 1708 037e 72       		.sleb128 -14
 1709 037f 0B       		.uleb128 0xb
 1710 0380 2F010000 		.4byte	.LASF50
 1711 0384 01       		.byte	0x1
 1712 0385 EA02     		.2byte	0x2ea
 1713 0387 BC000000 		.4byte	0xbc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 46


 1714 038b 02       		.uleb128 0x2
 1715 038c 91       		.byte	0x91
 1716 038d 74       		.sleb128 -12
 1717 038e 00       		.byte	0
 1718 038f 0E       		.uleb128 0xe
 1719 0390 53020000 		.4byte	.LASF51
 1720 0394 01       		.byte	0x1
 1721 0395 1103     		.2byte	0x311
 1722 0397 BC000000 		.4byte	0xbc
 1723 039b 00000000 		.4byte	.LFB16
 1724 039f 90000000 		.4byte	.LFE16-.LFB16
 1725 03a3 01       		.uleb128 0x1
 1726 03a4 9C       		.byte	0x9c
 1727 03a5 D7030000 		.4byte	0x3d7
 1728 03a9 0A       		.uleb128 0xa
 1729 03aa 9C030000 		.4byte	.LASF48
 1730 03ae 01       		.byte	0x1
 1731 03af 1103     		.2byte	0x311
 1732 03b1 B0000000 		.4byte	0xb0
 1733 03b5 02       		.uleb128 0x2
 1734 03b6 91       		.byte	0x91
 1735 03b7 5E       		.sleb128 -34
 1736 03b8 0B       		.uleb128 0xb
 1737 03b9 54010000 		.4byte	.LASF52
 1738 03bd 01       		.byte	0x1
 1739 03be 1403     		.2byte	0x314
 1740 03c0 E2000000 		.4byte	0xe2
 1741 03c4 02       		.uleb128 0x2
 1742 03c5 91       		.byte	0x91
 1743 03c6 60       		.sleb128 -32
 1744 03c7 0B       		.uleb128 0xb
 1745 03c8 2F010000 		.4byte	.LASF50
 1746 03cc 01       		.byte	0x1
 1747 03cd 1503     		.2byte	0x315
 1748 03cf BC000000 		.4byte	0xbc
 1749 03d3 02       		.uleb128 0x2
 1750 03d4 91       		.byte	0x91
 1751 03d5 6C       		.sleb128 -20
 1752 03d6 00       		.byte	0
 1753 03d7 0E       		.uleb128 0xe
 1754 03d8 66030000 		.4byte	.LASF53
 1755 03dc 01       		.byte	0x1
 1756 03dd 3D03     		.2byte	0x33d
 1757 03df C8000000 		.4byte	0xc8
 1758 03e3 00000000 		.4byte	.LFB17
 1759 03e7 84000000 		.4byte	.LFE17-.LFB17
 1760 03eb 01       		.uleb128 0x1
 1761 03ec 9C       		.byte	0x9c
 1762 03ed 1F040000 		.4byte	0x41f
 1763 03f1 0A       		.uleb128 0xa
 1764 03f2 9C030000 		.4byte	.LASF48
 1765 03f6 01       		.byte	0x1
 1766 03f7 3D03     		.2byte	0x33d
 1767 03f9 B0000000 		.4byte	0xb0
 1768 03fd 02       		.uleb128 0x2
 1769 03fe 91       		.byte	0x91
 1770 03ff 66       		.sleb128 -26
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 47


 1771 0400 0B       		.uleb128 0xb
 1772 0401 6D010000 		.4byte	.LASF54
 1773 0405 01       		.byte	0x1
 1774 0406 3F03     		.2byte	0x33f
 1775 0408 C8000000 		.4byte	0xc8
 1776 040c 02       		.uleb128 0x2
 1777 040d 91       		.byte	0x91
 1778 040e 68       		.sleb128 -24
 1779 040f 0B       		.uleb128 0xb
 1780 0410 2F010000 		.4byte	.LASF50
 1781 0414 01       		.byte	0x1
 1782 0415 4003     		.2byte	0x340
 1783 0417 BC000000 		.4byte	0xbc
 1784 041b 02       		.uleb128 0x2
 1785 041c 91       		.byte	0x91
 1786 041d 6C       		.sleb128 -20
 1787 041e 00       		.byte	0
 1788 041f 13       		.uleb128 0x13
 1789 0420 9D020000 		.4byte	.LASF55
 1790 0424 01       		.byte	0x1
 1791 0425 23       		.byte	0x23
 1792 0426 80000000 		.4byte	0x80
 1793 042a 05       		.uleb128 0x5
 1794 042b 03       		.byte	0x3
 1795 042c 00000000 		.4byte	ADC_SAR_1_initVar
 1796 0430 13       		.uleb128 0x13
 1797 0431 04010000 		.4byte	.LASF56
 1798 0435 01       		.byte	0x1
 1799 0436 24       		.byte	0x24
 1800 0437 41040000 		.4byte	0x441
 1801 043b 05       		.uleb128 0x5
 1802 043c 03       		.byte	0x3
 1803 043d 00000000 		.4byte	ADC_SAR_1_offset
 1804 0441 05       		.uleb128 0x5
 1805 0442 B0000000 		.4byte	0xb0
 1806 0446 13       		.uleb128 0x13
 1807 0447 06020000 		.4byte	.LASF57
 1808 044b 01       		.byte	0x1
 1809 044c 25       		.byte	0x25
 1810 044d 41040000 		.4byte	0x441
 1811 0451 05       		.uleb128 0x5
 1812 0452 03       		.byte	0x3
 1813 0453 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1814 0457 13       		.uleb128 0x13
 1815 0458 03040000 		.4byte	.LASF58
 1816 045c 01       		.byte	0x1
 1817 045d 26       		.byte	0x26
 1818 045e 68040000 		.4byte	0x468
 1819 0462 05       		.uleb128 0x5
 1820 0463 03       		.byte	0x3
 1821 0464 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1822 0468 05       		.uleb128 0x5
 1823 0469 BC000000 		.4byte	0xbc
 1824 046d 13       		.uleb128 0x13
 1825 046e 3B040000 		.4byte	.LASF59
 1826 0472 01       		.byte	0x1
 1827 0473 27       		.byte	0x27
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 48


 1828 0474 41040000 		.4byte	0x441
 1829 0478 05       		.uleb128 0x5
 1830 0479 03       		.byte	0x3
 1831 047a 00000000 		.4byte	ADC_SAR_1_shift
 1832 047e 00       		.byte	0
 1833              		.section	.debug_abbrev,"",%progbits
 1834              	.Ldebug_abbrev0:
 1835 0000 01       		.uleb128 0x1
 1836 0001 11       		.uleb128 0x11
 1837 0002 01       		.byte	0x1
 1838 0003 25       		.uleb128 0x25
 1839 0004 0E       		.uleb128 0xe
 1840 0005 13       		.uleb128 0x13
 1841 0006 0B       		.uleb128 0xb
 1842 0007 03       		.uleb128 0x3
 1843 0008 0E       		.uleb128 0xe
 1844 0009 1B       		.uleb128 0x1b
 1845 000a 0E       		.uleb128 0xe
 1846 000b 55       		.uleb128 0x55
 1847 000c 17       		.uleb128 0x17
 1848 000d 11       		.uleb128 0x11
 1849 000e 01       		.uleb128 0x1
 1850 000f 10       		.uleb128 0x10
 1851 0010 17       		.uleb128 0x17
 1852 0011 00       		.byte	0
 1853 0012 00       		.byte	0
 1854 0013 02       		.uleb128 0x2
 1855 0014 24       		.uleb128 0x24
 1856 0015 00       		.byte	0
 1857 0016 0B       		.uleb128 0xb
 1858 0017 0B       		.uleb128 0xb
 1859 0018 3E       		.uleb128 0x3e
 1860 0019 0B       		.uleb128 0xb
 1861 001a 03       		.uleb128 0x3
 1862 001b 08       		.uleb128 0x8
 1863 001c 00       		.byte	0
 1864 001d 00       		.byte	0
 1865 001e 03       		.uleb128 0x3
 1866 001f 24       		.uleb128 0x24
 1867 0020 00       		.byte	0
 1868 0021 0B       		.uleb128 0xb
 1869 0022 0B       		.uleb128 0xb
 1870 0023 3E       		.uleb128 0x3e
 1871 0024 0B       		.uleb128 0xb
 1872 0025 03       		.uleb128 0x3
 1873 0026 0E       		.uleb128 0xe
 1874 0027 00       		.byte	0
 1875 0028 00       		.byte	0
 1876 0029 04       		.uleb128 0x4
 1877 002a 16       		.uleb128 0x16
 1878 002b 00       		.byte	0
 1879 002c 03       		.uleb128 0x3
 1880 002d 0E       		.uleb128 0xe
 1881 002e 3A       		.uleb128 0x3a
 1882 002f 0B       		.uleb128 0xb
 1883 0030 3B       		.uleb128 0x3b
 1884 0031 05       		.uleb128 0x5
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 49


 1885 0032 49       		.uleb128 0x49
 1886 0033 13       		.uleb128 0x13
 1887 0034 00       		.byte	0
 1888 0035 00       		.byte	0
 1889 0036 05       		.uleb128 0x5
 1890 0037 35       		.uleb128 0x35
 1891 0038 00       		.byte	0
 1892 0039 49       		.uleb128 0x49
 1893 003a 13       		.uleb128 0x13
 1894 003b 00       		.byte	0
 1895 003c 00       		.byte	0
 1896 003d 06       		.uleb128 0x6
 1897 003e 2E       		.uleb128 0x2e
 1898 003f 00       		.byte	0
 1899 0040 3F       		.uleb128 0x3f
 1900 0041 19       		.uleb128 0x19
 1901 0042 03       		.uleb128 0x3
 1902 0043 0E       		.uleb128 0xe
 1903 0044 3A       		.uleb128 0x3a
 1904 0045 0B       		.uleb128 0xb
 1905 0046 3B       		.uleb128 0x3b
 1906 0047 0B       		.uleb128 0xb
 1907 0048 27       		.uleb128 0x27
 1908 0049 19       		.uleb128 0x19
 1909 004a 11       		.uleb128 0x11
 1910 004b 01       		.uleb128 0x1
 1911 004c 12       		.uleb128 0x12
 1912 004d 06       		.uleb128 0x6
 1913 004e 40       		.uleb128 0x40
 1914 004f 18       		.uleb128 0x18
 1915 0050 9642     		.uleb128 0x2116
 1916 0052 19       		.uleb128 0x19
 1917 0053 00       		.byte	0
 1918 0054 00       		.byte	0
 1919 0055 07       		.uleb128 0x7
 1920 0056 2E       		.uleb128 0x2e
 1921 0057 01       		.byte	0x1
 1922 0058 3F       		.uleb128 0x3f
 1923 0059 19       		.uleb128 0x19
 1924 005a 03       		.uleb128 0x3
 1925 005b 0E       		.uleb128 0xe
 1926 005c 3A       		.uleb128 0x3a
 1927 005d 0B       		.uleb128 0xb
 1928 005e 3B       		.uleb128 0x3b
 1929 005f 0B       		.uleb128 0xb
 1930 0060 27       		.uleb128 0x27
 1931 0061 19       		.uleb128 0x19
 1932 0062 11       		.uleb128 0x11
 1933 0063 01       		.uleb128 0x1
 1934 0064 12       		.uleb128 0x12
 1935 0065 06       		.uleb128 0x6
 1936 0066 40       		.uleb128 0x40
 1937 0067 18       		.uleb128 0x18
 1938 0068 9642     		.uleb128 0x2116
 1939 006a 19       		.uleb128 0x19
 1940 006b 01       		.uleb128 0x1
 1941 006c 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 50


 1942 006d 00       		.byte	0
 1943 006e 00       		.byte	0
 1944 006f 08       		.uleb128 0x8
 1945 0070 34       		.uleb128 0x34
 1946 0071 00       		.byte	0
 1947 0072 03       		.uleb128 0x3
 1948 0073 0E       		.uleb128 0xe
 1949 0074 3A       		.uleb128 0x3a
 1950 0075 0B       		.uleb128 0xb
 1951 0076 3B       		.uleb128 0x3b
 1952 0077 0B       		.uleb128 0xb
 1953 0078 49       		.uleb128 0x49
 1954 0079 13       		.uleb128 0x13
 1955 007a 02       		.uleb128 0x2
 1956 007b 18       		.uleb128 0x18
 1957 007c 00       		.byte	0
 1958 007d 00       		.byte	0
 1959 007e 09       		.uleb128 0x9
 1960 007f 2E       		.uleb128 0x2e
 1961 0080 01       		.byte	0x1
 1962 0081 3F       		.uleb128 0x3f
 1963 0082 19       		.uleb128 0x19
 1964 0083 03       		.uleb128 0x3
 1965 0084 0E       		.uleb128 0xe
 1966 0085 3A       		.uleb128 0x3a
 1967 0086 0B       		.uleb128 0xb
 1968 0087 3B       		.uleb128 0x3b
 1969 0088 05       		.uleb128 0x5
 1970 0089 27       		.uleb128 0x27
 1971 008a 19       		.uleb128 0x19
 1972 008b 11       		.uleb128 0x11
 1973 008c 01       		.uleb128 0x1
 1974 008d 12       		.uleb128 0x12
 1975 008e 06       		.uleb128 0x6
 1976 008f 40       		.uleb128 0x40
 1977 0090 18       		.uleb128 0x18
 1978 0091 9742     		.uleb128 0x2117
 1979 0093 19       		.uleb128 0x19
 1980 0094 01       		.uleb128 0x1
 1981 0095 13       		.uleb128 0x13
 1982 0096 00       		.byte	0
 1983 0097 00       		.byte	0
 1984 0098 0A       		.uleb128 0xa
 1985 0099 05       		.uleb128 0x5
 1986 009a 00       		.byte	0
 1987 009b 03       		.uleb128 0x3
 1988 009c 0E       		.uleb128 0xe
 1989 009d 3A       		.uleb128 0x3a
 1990 009e 0B       		.uleb128 0xb
 1991 009f 3B       		.uleb128 0x3b
 1992 00a0 05       		.uleb128 0x5
 1993 00a1 49       		.uleb128 0x49
 1994 00a2 13       		.uleb128 0x13
 1995 00a3 02       		.uleb128 0x2
 1996 00a4 18       		.uleb128 0x18
 1997 00a5 00       		.byte	0
 1998 00a6 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 51


 1999 00a7 0B       		.uleb128 0xb
 2000 00a8 34       		.uleb128 0x34
 2001 00a9 00       		.byte	0
 2002 00aa 03       		.uleb128 0x3
 2003 00ab 0E       		.uleb128 0xe
 2004 00ac 3A       		.uleb128 0x3a
 2005 00ad 0B       		.uleb128 0xb
 2006 00ae 3B       		.uleb128 0x3b
 2007 00af 05       		.uleb128 0x5
 2008 00b0 49       		.uleb128 0x49
 2009 00b1 13       		.uleb128 0x13
 2010 00b2 02       		.uleb128 0x2
 2011 00b3 18       		.uleb128 0x18
 2012 00b4 00       		.byte	0
 2013 00b5 00       		.byte	0
 2014 00b6 0C       		.uleb128 0xc
 2015 00b7 2E       		.uleb128 0x2e
 2016 00b8 01       		.byte	0x1
 2017 00b9 3F       		.uleb128 0x3f
 2018 00ba 19       		.uleb128 0x19
 2019 00bb 03       		.uleb128 0x3
 2020 00bc 0E       		.uleb128 0xe
 2021 00bd 3A       		.uleb128 0x3a
 2022 00be 0B       		.uleb128 0xb
 2023 00bf 3B       		.uleb128 0x3b
 2024 00c0 05       		.uleb128 0x5
 2025 00c1 27       		.uleb128 0x27
 2026 00c2 19       		.uleb128 0x19
 2027 00c3 11       		.uleb128 0x11
 2028 00c4 01       		.uleb128 0x1
 2029 00c5 12       		.uleb128 0x12
 2030 00c6 06       		.uleb128 0x6
 2031 00c7 40       		.uleb128 0x40
 2032 00c8 18       		.uleb128 0x18
 2033 00c9 9642     		.uleb128 0x2116
 2034 00cb 19       		.uleb128 0x19
 2035 00cc 01       		.uleb128 0x1
 2036 00cd 13       		.uleb128 0x13
 2037 00ce 00       		.byte	0
 2038 00cf 00       		.byte	0
 2039 00d0 0D       		.uleb128 0xd
 2040 00d1 2E       		.uleb128 0x2e
 2041 00d2 00       		.byte	0
 2042 00d3 3F       		.uleb128 0x3f
 2043 00d4 19       		.uleb128 0x19
 2044 00d5 03       		.uleb128 0x3
 2045 00d6 0E       		.uleb128 0xe
 2046 00d7 3A       		.uleb128 0x3a
 2047 00d8 0B       		.uleb128 0xb
 2048 00d9 3B       		.uleb128 0x3b
 2049 00da 05       		.uleb128 0x5
 2050 00db 27       		.uleb128 0x27
 2051 00dc 19       		.uleb128 0x19
 2052 00dd 11       		.uleb128 0x11
 2053 00de 01       		.uleb128 0x1
 2054 00df 12       		.uleb128 0x12
 2055 00e0 06       		.uleb128 0x6
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 52


 2056 00e1 40       		.uleb128 0x40
 2057 00e2 18       		.uleb128 0x18
 2058 00e3 9742     		.uleb128 0x2117
 2059 00e5 19       		.uleb128 0x19
 2060 00e6 00       		.byte	0
 2061 00e7 00       		.byte	0
 2062 00e8 0E       		.uleb128 0xe
 2063 00e9 2E       		.uleb128 0x2e
 2064 00ea 01       		.byte	0x1
 2065 00eb 3F       		.uleb128 0x3f
 2066 00ec 19       		.uleb128 0x19
 2067 00ed 03       		.uleb128 0x3
 2068 00ee 0E       		.uleb128 0xe
 2069 00ef 3A       		.uleb128 0x3a
 2070 00f0 0B       		.uleb128 0xb
 2071 00f1 3B       		.uleb128 0x3b
 2072 00f2 05       		.uleb128 0x5
 2073 00f3 27       		.uleb128 0x27
 2074 00f4 19       		.uleb128 0x19
 2075 00f5 49       		.uleb128 0x49
 2076 00f6 13       		.uleb128 0x13
 2077 00f7 11       		.uleb128 0x11
 2078 00f8 01       		.uleb128 0x1
 2079 00f9 12       		.uleb128 0x12
 2080 00fa 06       		.uleb128 0x6
 2081 00fb 40       		.uleb128 0x40
 2082 00fc 18       		.uleb128 0x18
 2083 00fd 9642     		.uleb128 0x2116
 2084 00ff 19       		.uleb128 0x19
 2085 0100 01       		.uleb128 0x1
 2086 0101 13       		.uleb128 0x13
 2087 0102 00       		.byte	0
 2088 0103 00       		.byte	0
 2089 0104 0F       		.uleb128 0xf
 2090 0105 2E       		.uleb128 0x2e
 2091 0106 00       		.byte	0
 2092 0107 3F       		.uleb128 0x3f
 2093 0108 19       		.uleb128 0x19
 2094 0109 03       		.uleb128 0x3
 2095 010a 0E       		.uleb128 0xe
 2096 010b 3A       		.uleb128 0x3a
 2097 010c 0B       		.uleb128 0xb
 2098 010d 3B       		.uleb128 0x3b
 2099 010e 05       		.uleb128 0x5
 2100 010f 27       		.uleb128 0x27
 2101 0110 19       		.uleb128 0x19
 2102 0111 49       		.uleb128 0x49
 2103 0112 13       		.uleb128 0x13
 2104 0113 11       		.uleb128 0x11
 2105 0114 01       		.uleb128 0x1
 2106 0115 12       		.uleb128 0x12
 2107 0116 06       		.uleb128 0x6
 2108 0117 40       		.uleb128 0x40
 2109 0118 18       		.uleb128 0x18
 2110 0119 9742     		.uleb128 0x2117
 2111 011b 19       		.uleb128 0x19
 2112 011c 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 53


 2113 011d 00       		.byte	0
 2114 011e 10       		.uleb128 0x10
 2115 011f 2E       		.uleb128 0x2e
 2116 0120 01       		.byte	0x1
 2117 0121 3F       		.uleb128 0x3f
 2118 0122 19       		.uleb128 0x19
 2119 0123 03       		.uleb128 0x3
 2120 0124 0E       		.uleb128 0xe
 2121 0125 3A       		.uleb128 0x3a
 2122 0126 0B       		.uleb128 0xb
 2123 0127 3B       		.uleb128 0x3b
 2124 0128 05       		.uleb128 0x5
 2125 0129 27       		.uleb128 0x27
 2126 012a 19       		.uleb128 0x19
 2127 012b 49       		.uleb128 0x49
 2128 012c 13       		.uleb128 0x13
 2129 012d 11       		.uleb128 0x11
 2130 012e 01       		.uleb128 0x1
 2131 012f 12       		.uleb128 0x12
 2132 0130 06       		.uleb128 0x6
 2133 0131 40       		.uleb128 0x40
 2134 0132 18       		.uleb128 0x18
 2135 0133 9742     		.uleb128 0x2117
 2136 0135 19       		.uleb128 0x19
 2137 0136 01       		.uleb128 0x1
 2138 0137 13       		.uleb128 0x13
 2139 0138 00       		.byte	0
 2140 0139 00       		.byte	0
 2141 013a 11       		.uleb128 0x11
 2142 013b 34       		.uleb128 0x34
 2143 013c 00       		.byte	0
 2144 013d 03       		.uleb128 0x3
 2145 013e 08       		.uleb128 0x8
 2146 013f 3A       		.uleb128 0x3a
 2147 0140 0B       		.uleb128 0xb
 2148 0141 3B       		.uleb128 0x3b
 2149 0142 05       		.uleb128 0x5
 2150 0143 49       		.uleb128 0x49
 2151 0144 13       		.uleb128 0x13
 2152 0145 02       		.uleb128 0x2
 2153 0146 18       		.uleb128 0x18
 2154 0147 00       		.byte	0
 2155 0148 00       		.byte	0
 2156 0149 12       		.uleb128 0x12
 2157 014a 2E       		.uleb128 0x2e
 2158 014b 01       		.byte	0x1
 2159 014c 03       		.uleb128 0x3
 2160 014d 0E       		.uleb128 0xe
 2161 014e 3A       		.uleb128 0x3a
 2162 014f 0B       		.uleb128 0xb
 2163 0150 3B       		.uleb128 0x3b
 2164 0151 05       		.uleb128 0x5
 2165 0152 27       		.uleb128 0x27
 2166 0153 19       		.uleb128 0x19
 2167 0154 11       		.uleb128 0x11
 2168 0155 01       		.uleb128 0x1
 2169 0156 12       		.uleb128 0x12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 54


 2170 0157 06       		.uleb128 0x6
 2171 0158 40       		.uleb128 0x40
 2172 0159 18       		.uleb128 0x18
 2173 015a 9642     		.uleb128 0x2116
 2174 015c 19       		.uleb128 0x19
 2175 015d 01       		.uleb128 0x1
 2176 015e 13       		.uleb128 0x13
 2177 015f 00       		.byte	0
 2178 0160 00       		.byte	0
 2179 0161 13       		.uleb128 0x13
 2180 0162 34       		.uleb128 0x34
 2181 0163 00       		.byte	0
 2182 0164 03       		.uleb128 0x3
 2183 0165 0E       		.uleb128 0xe
 2184 0166 3A       		.uleb128 0x3a
 2185 0167 0B       		.uleb128 0xb
 2186 0168 3B       		.uleb128 0x3b
 2187 0169 0B       		.uleb128 0xb
 2188 016a 49       		.uleb128 0x49
 2189 016b 13       		.uleb128 0x13
 2190 016c 3F       		.uleb128 0x3f
 2191 016d 19       		.uleb128 0x19
 2192 016e 02       		.uleb128 0x2
 2193 016f 18       		.uleb128 0x18
 2194 0170 00       		.byte	0
 2195 0171 00       		.byte	0
 2196 0172 00       		.byte	0
 2197              		.section	.debug_aranges,"",%progbits
 2198 0000 A4000000 		.4byte	0xa4
 2199 0004 0200     		.2byte	0x2
 2200 0006 00000000 		.4byte	.Ldebug_info0
 2201 000a 04       		.byte	0x4
 2202 000b 00       		.byte	0
 2203 000c 0000     		.2byte	0
 2204 000e 0000     		.2byte	0
 2205 0010 00000000 		.4byte	.LFB0
 2206 0014 24000000 		.4byte	.LFE0-.LFB0
 2207 0018 00000000 		.4byte	.LFB1
 2208 001c 48000000 		.4byte	.LFE1-.LFB1
 2209 0020 00000000 		.4byte	.LFB2
 2210 0024 F4000000 		.4byte	.LFE2-.LFB2
 2211 0028 00000000 		.4byte	.LFB3
 2212 002c 84000000 		.4byte	.LFE3-.LFB3
 2213 0030 00000000 		.4byte	.LFB4
 2214 0034 40000000 		.4byte	.LFE4-.LFB4
 2215 0038 00000000 		.4byte	.LFB5
 2216 003c 54000000 		.4byte	.LFE5-.LFB5
 2217 0040 00000000 		.4byte	.LFB6
 2218 0044 20000000 		.4byte	.LFE6-.LFB6
 2219 0048 00000000 		.4byte	.LFB7
 2220 004c 20000000 		.4byte	.LFE7-.LFB7
 2221 0050 00000000 		.4byte	.LFB8
 2222 0054 40000000 		.4byte	.LFE8-.LFB8
 2223 0058 00000000 		.4byte	.LFB9
 2224 005c 28000000 		.4byte	.LFE9-.LFB9
 2225 0060 00000000 		.4byte	.LFB10
 2226 0064 30000000 		.4byte	.LFE10-.LFB10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 55


 2227 0068 00000000 		.4byte	.LFB11
 2228 006c 20000000 		.4byte	.LFE11-.LFB11
 2229 0070 00000000 		.4byte	.LFB12
 2230 0074 84000000 		.4byte	.LFE12-.LFB12
 2231 0078 00000000 		.4byte	.LFB13
 2232 007c 2C000000 		.4byte	.LFE13-.LFB13
 2233 0080 00000000 		.4byte	.LFB14
 2234 0084 1C000000 		.4byte	.LFE14-.LFB14
 2235 0088 00000000 		.4byte	.LFB15
 2236 008c 8C000000 		.4byte	.LFE15-.LFB15
 2237 0090 00000000 		.4byte	.LFB16
 2238 0094 90000000 		.4byte	.LFE16-.LFB16
 2239 0098 00000000 		.4byte	.LFB17
 2240 009c 84000000 		.4byte	.LFE17-.LFB17
 2241 00a0 00000000 		.4byte	0
 2242 00a4 00000000 		.4byte	0
 2243              		.section	.debug_ranges,"",%progbits
 2244              	.Ldebug_ranges0:
 2245 0000 00000000 		.4byte	.LFB0
 2246 0004 24000000 		.4byte	.LFE0
 2247 0008 00000000 		.4byte	.LFB1
 2248 000c 48000000 		.4byte	.LFE1
 2249 0010 00000000 		.4byte	.LFB2
 2250 0014 F4000000 		.4byte	.LFE2
 2251 0018 00000000 		.4byte	.LFB3
 2252 001c 84000000 		.4byte	.LFE3
 2253 0020 00000000 		.4byte	.LFB4
 2254 0024 40000000 		.4byte	.LFE4
 2255 0028 00000000 		.4byte	.LFB5
 2256 002c 54000000 		.4byte	.LFE5
 2257 0030 00000000 		.4byte	.LFB6
 2258 0034 20000000 		.4byte	.LFE6
 2259 0038 00000000 		.4byte	.LFB7
 2260 003c 20000000 		.4byte	.LFE7
 2261 0040 00000000 		.4byte	.LFB8
 2262 0044 40000000 		.4byte	.LFE8
 2263 0048 00000000 		.4byte	.LFB9
 2264 004c 28000000 		.4byte	.LFE9
 2265 0050 00000000 		.4byte	.LFB10
 2266 0054 30000000 		.4byte	.LFE10
 2267 0058 00000000 		.4byte	.LFB11
 2268 005c 20000000 		.4byte	.LFE11
 2269 0060 00000000 		.4byte	.LFB12
 2270 0064 84000000 		.4byte	.LFE12
 2271 0068 00000000 		.4byte	.LFB13
 2272 006c 2C000000 		.4byte	.LFE13
 2273 0070 00000000 		.4byte	.LFB14
 2274 0074 1C000000 		.4byte	.LFE14
 2275 0078 00000000 		.4byte	.LFB15
 2276 007c 8C000000 		.4byte	.LFE15
 2277 0080 00000000 		.4byte	.LFB16
 2278 0084 90000000 		.4byte	.LFE16
 2279 0088 00000000 		.4byte	.LFB17
 2280 008c 84000000 		.4byte	.LFE17
 2281 0090 00000000 		.4byte	0
 2282 0094 00000000 		.4byte	0
 2283              		.section	.debug_line,"",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 56


 2284              	.Ldebug_line0:
 2285 0000 07020000 		.section	.debug_str,"MS",%progbits,1
 2285      02004600 
 2285      00000201 
 2285      FB0E0D00 
 2285      01010101 
 2286              	.LASF13:
 2287 0000 75696E74 		.ascii	"uint16\000"
 2287      313600
 2288              	.LASF63:
 2289 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2289      5341525F 
 2289      315F4765 
 2289      74526573 
 2289      756C7438 
 2290              	.LASF43:
 2291 001c 636F756E 		.ascii	"counts\000"
 2291      747300
 2292              	.LASF64:
 2293 0023 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2293      5341525F 
 2293      315F4361 
 2293      6C634761 
 2293      696E00
 2294              	.LASF60:
 2295 0036 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2295      43313120 
 2295      352E342E 
 2295      31203230 
 2295      31363036 
 2296 0069 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2296      20726576 
 2296      6973696F 
 2296      6E203233 
 2296      37373135 
 2297 009c 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2297      66756E63 
 2297      74696F6E 
 2297      2D736563 
 2297      74696F6E 
 2298              	.LASF9:
 2299 00c4 6C6F6E67 		.ascii	"long long unsigned int\000"
 2299      206C6F6E 
 2299      6720756E 
 2299      7369676E 
 2299      65642069 
 2300              	.LASF1:
 2301 00db 6C6F6E67 		.ascii	"long long int\000"
 2301      206C6F6E 
 2301      6720696E 
 2301      7400
 2302              	.LASF3:
 2303 00e9 7369676E 		.ascii	"signed char\000"
 2303      65642063 
 2303      68617200 
 2304              	.LASF17:
 2305 00f5 696E7433 		.ascii	"int32\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 57


 2305      3200
 2306              	.LASF7:
 2307 00fb 6C6F6E67 		.ascii	"long int\000"
 2307      20696E74 
 2307      00
 2308              	.LASF56:
 2309 0104 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2309      5341525F 
 2309      315F6F66 
 2309      66736574 
 2309      00
 2310              	.LASF23:
 2311 0115 72656731 		.ascii	"reg16\000"
 2311      3600
 2312              	.LASF12:
 2313 011b 75696E74 		.ascii	"uint8\000"
 2313      3800
 2314              	.LASF20:
 2315 0121 646F7562 		.ascii	"double\000"
 2315      6C6500
 2316              	.LASF14:
 2317 0128 75696E74 		.ascii	"uint32\000"
 2317      333200
 2318              	.LASF50:
 2319 012f 636F756E 		.ascii	"countsPer10Volt\000"
 2319      74735065 
 2319      72313056 
 2319      6F6C7400 
 2320              	.LASF37:
 2321 013f 7265744D 		.ascii	"retMode\000"
 2321      6F646500 
 2322              	.LASF0:
 2323 0147 756E7369 		.ascii	"unsigned int\000"
 2323      676E6564 
 2323      20696E74 
 2323      00
 2324              	.LASF52:
 2325 0154 75566F6C 		.ascii	"uVolts\000"
 2325      747300
 2326              	.LASF8:
 2327 015b 6C6F6E67 		.ascii	"long unsigned int\000"
 2327      20756E73 
 2327      69676E65 
 2327      6420696E 
 2327      7400
 2328              	.LASF54:
 2329 016d 766F6C74 		.ascii	"volts\000"
 2329      7300
 2330              	.LASF62:
 2331 0173 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Desktop\\PSOC5_electrosteel_"
 2331      73657273 
 2331      5C4A6566 
 2331      66536E79 
 2331      6465725C 
 2332 01a2 73747269 		.ascii	"stringsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 2332      6E677365 
 2332      6E736F72 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 58


 2332      735C4345 
 2332      32313035 
 2333              	.LASF6:
 2334 01d2 73686F72 		.ascii	"short unsigned int\000"
 2334      7420756E 
 2334      7369676E 
 2334      65642069 
 2334      6E7400
 2335              	.LASF26:
 2336 01e5 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2336      5341525F 
 2336      315F496E 
 2336      697400
 2337              	.LASF15:
 2338 01f4 696E7438 		.ascii	"int8\000"
 2338      00
 2339              	.LASF49:
 2340 01f9 6D566F6C 		.ascii	"mVolts\000"
 2340      747300
 2341              	.LASF24:
 2342 0200 72656733 		.ascii	"reg32\000"
 2342      3200
 2343              	.LASF57:
 2344 0206 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2344      5341525F 
 2344      315F636F 
 2344      756E7473 
 2344      50657256 
 2345              	.LASF18:
 2346 021e 666C6F61 		.ascii	"float32\000"
 2346      74333200 
 2347              	.LASF10:
 2348 0226 73697A65 		.ascii	"sizetype\000"
 2348      74797065 
 2348      00
 2349              	.LASF2:
 2350 022f 6C6F6E67 		.ascii	"long double\000"
 2350      20646F75 
 2350      626C6500 
 2351              	.LASF32:
 2352 023b 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2352      5341525F 
 2352      315F5365 
 2352      74526573 
 2352      6F6C7574 
 2353              	.LASF51:
 2354 0253 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2354      5341525F 
 2354      315F436F 
 2354      756E7473 
 2354      546F5F75 
 2355              	.LASF25:
 2356 026d 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2356      5341525F 
 2356      315F5374 
 2356      61727400 
 2357              	.LASF21:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 59


 2358 027d 696E7436 		.ascii	"int64\000"
 2358      3400
 2359              	.LASF41:
 2360 0283 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2360      5341525F 
 2360      315F5365 
 2360      744F6666 
 2360      73657400 
 2361              	.LASF19:
 2362 0297 666C6F61 		.ascii	"float\000"
 2362      7400
 2363              	.LASF55:
 2364 029d 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2364      5341525F 
 2364      315F696E 
 2364      69745661 
 2364      7200
 2365              	.LASF33:
 2366 02af 706F7765 		.ascii	"power\000"
 2366      7200
 2367              	.LASF22:
 2368 02b5 72656738 		.ascii	"reg8\000"
 2368      00
 2369              	.LASF4:
 2370 02ba 756E7369 		.ascii	"unsigned char\000"
 2370      676E6564 
 2370      20636861 
 2370      7200
 2371              	.LASF47:
 2372 02c8 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2372      5341525F 
 2372      315F436F 
 2372      756E7473 
 2372      546F5F6D 
 2373              	.LASF5:
 2374 02e2 73686F72 		.ascii	"short int\000"
 2374      7420696E 
 2374      7400
 2375              	.LASF45:
 2376 02ec 61646347 		.ascii	"adcGain\000"
 2376      61696E00 
 2377              	.LASF29:
 2378 02f4 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2378      5341525F 
 2378      315F456E 
 2378      61626C65 
 2378      00
 2379              	.LASF46:
 2380 0305 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2380      5341525F 
 2380      315F5365 
 2380      74536361 
 2380      6C656447 
 2381              	.LASF40:
 2382 031d 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2382      5341525F 
 2382      315F4765 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 60


 2382      74526573 
 2382      756C7431 
 2383              	.LASF34:
 2384 0333 7265736F 		.ascii	"resolution\000"
 2384      6C757469 
 2384      6F6E00
 2385              	.LASF61:
 2386 033e 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2386      72617465 
 2386      645F536F 
 2386      75726365 
 2386      5C50536F 
 2387              	.LASF11:
 2388 0361 63686172 		.ascii	"char\000"
 2388      00
 2389              	.LASF53:
 2390 0366 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2390      5341525F 
 2390      315F436F 
 2390      756E7473 
 2390      546F5F56 
 2391              	.LASF42:
 2392 037f 6F666673 		.ascii	"offset\000"
 2392      657400
 2393              	.LASF36:
 2394 0386 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2394      5341525F 
 2394      315F5374 
 2394      6F70436F 
 2394      6E766572 
 2395              	.LASF48:
 2396 039c 61646343 		.ascii	"adcCounts\000"
 2396      6F756E74 
 2396      7300
 2397              	.LASF28:
 2398 03a6 656E6162 		.ascii	"enableInterrupts\000"
 2398      6C65496E 
 2398      74657272 
 2398      75707473 
 2398      00
 2399              	.LASF38:
 2400 03b7 73746174 		.ascii	"status\000"
 2400      757300
 2401              	.LASF39:
 2402 03be 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2402      5341525F 
 2402      315F4973 
 2402      456E6443 
 2402      6F6E7665 
 2403              	.LASF31:
 2404 03d8 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2404      5341525F 
 2404      315F5365 
 2404      74506F77 
 2404      657200
 2405              	.LASF44:
 2406 03eb 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\ccyY9Bh2.s 			page 61


 2406      5341525F 
 2406      315F5365 
 2406      74476169 
 2406      6E00
 2407              	.LASF16:
 2408 03fd 696E7431 		.ascii	"int16\000"
 2408      3600
 2409              	.LASF58:
 2410 0403 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2410      5341525F 
 2410      315F636F 
 2410      756E7473 
 2410      50657231 
 2411              	.LASF35:
 2412 041d 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2412      5341525F 
 2412      315F5374 
 2412      61727443 
 2412      6F6E7665 
 2413              	.LASF27:
 2414 0434 746D7052 		.ascii	"tmpReg\000"
 2414      656700
 2415              	.LASF59:
 2416 043b 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2416      5341525F 
 2416      315F7368 
 2416      69667400 
 2417              	.LASF30:
 2418 044b 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2418      5341525F 
 2418      315F5374 
 2418      6F7000
 2419              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
