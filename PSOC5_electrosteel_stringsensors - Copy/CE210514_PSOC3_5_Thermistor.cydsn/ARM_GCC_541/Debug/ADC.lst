ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	ADC_convDone
  20              		.bss
  21              		.type	ADC_convDone, %object
  22              		.size	ADC_convDone, 1
  23              	ADC_convDone:
  24 0000 00       		.space	1
  25              		.global	ADC_stopConversion
  26              		.type	ADC_stopConversion, %object
  27              		.size	ADC_stopConversion, 1
  28              	ADC_stopConversion:
  29 0001 00       		.space	1
  30              		.global	ADC_initVar
  31              		.type	ADC_initVar, %object
  32              		.size	ADC_initVar, 1
  33              	ADC_initVar:
  34 0002 00       		.space	1
  35              		.global	ADC_started
  36              		.type	ADC_started, %object
  37              		.size	ADC_started, 1
  38              	ADC_started:
  39 0003 00       		.space	1
  40              		.global	ADC_Config
  41              		.data
  42              		.type	ADC_Config, %object
  43              		.size	ADC_Config, 1
  44              	ADC_Config:
  45 0000 01       		.byte	1
  46              		.global	ADC_Offset
  47              		.bss
  48              		.align	2
  49              		.type	ADC_Offset, %object
  50              		.size	ADC_Offset, 4
  51              	ADC_Offset:
  52 0004 00000000 		.space	4
  53              		.comm	ADC_CountsPerVolt,4,4
  54              		.align	2
  55              	ADC_gcor:
  56 0008 00000000 		.space	4
  57              		.section	.text.ADC_Init,"ax",%progbits
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 2


  58              		.align	2
  59              		.global	ADC_Init
  60              		.thumb
  61              		.thumb_func
  62              		.type	ADC_Init, %function
  63              	ADC_Init:
  64              	.LFB0:
  65              		.file 1 "Generated_Source\\PSoC5\\ADC.c"
   1:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC.c **** * File Name: ADC.c
   3:Generated_Source\PSoC5/ADC.c **** * Version 3.30
   4:Generated_Source\PSoC5/ADC.c **** *
   5:Generated_Source\PSoC5/ADC.c **** * Description:
   6:Generated_Source\PSoC5/ADC.c **** *  This file provides the source code to the API for the Delta-Sigma ADC
   7:Generated_Source\PSoC5/ADC.c **** *  Component.
   8:Generated_Source\PSoC5/ADC.c **** *
   9:Generated_Source\PSoC5/ADC.c **** * Note:
  10:Generated_Source\PSoC5/ADC.c **** *
  11:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC.c **** 
  18:Generated_Source\PSoC5/ADC.c **** #include "ADC.h"
  19:Generated_Source\PSoC5/ADC.c **** 
  20:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INTERNAL_CLK)
  21:Generated_Source\PSoC5/ADC.c ****     #include "ADC_theACLK.h"
  22:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INTERNAL_CLK */
  23:Generated_Source\PSoC5/ADC.c **** 
  24:Generated_Source\PSoC5/ADC.c **** #include "ADC_Ext_CP_Clk.h"
  25:Generated_Source\PSoC5/ADC.c **** 
  26:Generated_Source\PSoC5/ADC.c **** #if(ADC_DEFAULT_INPUT_MODE)
  27:Generated_Source\PSoC5/ADC.c ****     #include "ADC_AMux.h"
  28:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_DEFAULT_INPUT_MODE */
  29:Generated_Source\PSoC5/ADC.c **** 
  30:Generated_Source\PSoC5/ADC.c **** 
  31:Generated_Source\PSoC5/ADC.c **** /***************************************
  32:Generated_Source\PSoC5/ADC.c **** * Global data allocation
  33:Generated_Source\PSoC5/ADC.c **** ***************************************/
  34:Generated_Source\PSoC5/ADC.c **** 
  35:Generated_Source\PSoC5/ADC.c **** /* Software flag for checking conversion completed or not */
  36:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_convDone = 0u;
  37:Generated_Source\PSoC5/ADC.c **** 
  38:Generated_Source\PSoC5/ADC.c **** /* Software flag to stop conversion for single sample conversion mode
  39:Generated_Source\PSoC5/ADC.c **** *   with resolution above 16 bits 
  40:Generated_Source\PSoC5/ADC.c **** */
  41:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_stopConversion = 0u;
  42:Generated_Source\PSoC5/ADC.c **** 
  43:Generated_Source\PSoC5/ADC.c **** /* To run the initialization block only at the start up */
  44:Generated_Source\PSoC5/ADC.c **** uint8 ADC_initVar = 0u;
  45:Generated_Source\PSoC5/ADC.c **** 
  46:Generated_Source\PSoC5/ADC.c **** /* To check whether ADC started or not before switching the configuration */
  47:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_started = 0u;
  48:Generated_Source\PSoC5/ADC.c **** 
  49:Generated_Source\PSoC5/ADC.c **** /* Flag to hold ADC config number. By default active config is 1. */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 3


  50:Generated_Source\PSoC5/ADC.c **** volatile uint8 ADC_Config = 1u;
  51:Generated_Source\PSoC5/ADC.c **** 
  52:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_Offset = 0;
  53:Generated_Source\PSoC5/ADC.c **** volatile int32 ADC_CountsPerVolt;
  54:Generated_Source\PSoC5/ADC.c **** 
  55:Generated_Source\PSoC5/ADC.c **** 
  56:Generated_Source\PSoC5/ADC.c **** /***************************************
  57:Generated_Source\PSoC5/ADC.c **** * Local data allocation
  58:Generated_Source\PSoC5/ADC.c **** ***************************************/
  59:Generated_Source\PSoC5/ADC.c **** 
  60:Generated_Source\PSoC5/ADC.c **** /* The array with precalculated gain compensation coefficients */
  61:Generated_Source\PSoC5/ADC.c **** static ADC_GCOR_STRUCT ADC_gcor[ADC_DEFAULT_NUM_CONFIGS];
  62:Generated_Source\PSoC5/ADC.c **** 
  63:Generated_Source\PSoC5/ADC.c **** 
  64:Generated_Source\PSoC5/ADC.c **** 
  65:Generated_Source\PSoC5/ADC.c **** /***************************************
  66:Generated_Source\PSoC5/ADC.c **** * Forward function references
  67:Generated_Source\PSoC5/ADC.c **** ***************************************/
  68:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) ;
  69:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain, 
  70:Generated_Source\PSoC5/ADC.c ****                             uint8 resolution, uint8 config) ;
  71:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) ;
  72:Generated_Source\PSoC5/ADC.c **** 
  73:Generated_Source\PSoC5/ADC.c **** 
  74:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
  75:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Init
  76:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
  77:Generated_Source\PSoC5/ADC.c **** *
  78:Generated_Source\PSoC5/ADC.c **** * Summary:
  79:Generated_Source\PSoC5/ADC.c **** *  Initialize component's parameters to the parameters set by user in the
  80:Generated_Source\PSoC5/ADC.c **** *  customizer of the component placed onto schematic. Usually called in
  81:Generated_Source\PSoC5/ADC.c **** * ADC_Start().
  82:Generated_Source\PSoC5/ADC.c **** *
  83:Generated_Source\PSoC5/ADC.c **** *
  84:Generated_Source\PSoC5/ADC.c **** * Parameters:
  85:Generated_Source\PSoC5/ADC.c **** *  None
  86:Generated_Source\PSoC5/ADC.c **** *
  87:Generated_Source\PSoC5/ADC.c **** * Return:
  88:Generated_Source\PSoC5/ADC.c **** *  None
  89:Generated_Source\PSoC5/ADC.c **** *
  90:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
  91:Generated_Source\PSoC5/ADC.c **** void ADC_Init(void) 
  92:Generated_Source\PSoC5/ADC.c **** {
  66              		.loc 1 92 0
  67              		.cfi_startproc
  68              		@ args = 0, pretend = 0, frame = 0
  69              		@ frame_needed = 1, uses_anonymous_args = 0
  70 0000 80B5     		push	{r7, lr}
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 7, -8
  73              		.cfi_offset 14, -4
  74 0002 82B0     		sub	sp, sp, #8
  75              		.cfi_def_cfa_offset 16
  76 0004 02AF     		add	r7, sp, #8
  77              		.cfi_def_cfa 7, 8
  93:Generated_Source\PSoC5/ADC.c **** 
  94:Generated_Source\PSoC5/ADC.c ****     ADC_Config = 1u;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 4


  78              		.loc 1 94 0
  79 0006 324B     		ldr	r3, .L2
  80 0008 0122     		movs	r2, #1
  81 000a 1A70     		strb	r2, [r3]
  95:Generated_Source\PSoC5/ADC.c ****     ADC_convDone = 0u;
  82              		.loc 1 95 0
  83 000c 314B     		ldr	r3, .L2+4
  84 000e 0022     		movs	r2, #0
  85 0010 1A70     		strb	r2, [r3]
  96:Generated_Source\PSoC5/ADC.c **** 
  97:Generated_Source\PSoC5/ADC.c ****     ADC_Ext_CP_Clk_SetMode(CYCLK_DUTY);
  86              		.loc 1 97 0
  87 0012 1020     		movs	r0, #16
  88 0014 FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetModeRegister
  98:Generated_Source\PSoC5/ADC.c **** 
  99:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 100:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 101:Generated_Source\PSoC5/ADC.c ****         ADC_theACLK_SetMode(CYCLK_DUTY);
  89              		.loc 1 101 0
  90 0018 1020     		movs	r0, #16
  91 001a FFF7FEFF 		bl	ADC_theACLK_SetModeRegister
 102:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 103:Generated_Source\PSoC5/ADC.c **** 
 104:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 105:Generated_Source\PSoC5/ADC.c ****         /* Set interrupt priority */
 106:Generated_Source\PSoC5/ADC.c ****         CyIntSetPriority(ADC_INTC_NUMBER, ADC_INTC_PRIOR_NUMBER);
  92              		.loc 1 106 0
  93 001e 0721     		movs	r1, #7
  94 0020 1D20     		movs	r0, #29
  95 0022 FFF7FEFF 		bl	CyIntSetPriority
 107:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 108:Generated_Source\PSoC5/ADC.c **** 
 109:Generated_Source\PSoC5/ADC.c ****     /* Init static registers with common configuration */
 110:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM0_REG    = ADC_CFG1_DSM_DEM0;
  96              		.loc 1 110 0
  97 0026 2C4B     		ldr	r3, .L2+8
  98 0028 0422     		movs	r2, #4
  99 002a 1A70     		strb	r2, [r3]
 111:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_DEM1_REG    = ADC_CFG1_DSM_DEM1;
 100              		.loc 1 111 0
 101 002c 2B4B     		ldr	r3, .L2+12
 102 002e 0022     		movs	r2, #0
 103 0030 1A70     		strb	r2, [r3]
 112:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_MISC_REG    = ADC_CFG1_DSM_MISC;
 104              		.loc 1 112 0
 105 0032 2B4B     		ldr	r3, .L2+16
 106 0034 0022     		movs	r2, #0
 107 0036 1A70     		strb	r2, [r3]
 113:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CLK_REG    |= ADC_CFG1_DSM_CLK;
 108              		.loc 1 113 0
 109 0038 2A4A     		ldr	r2, .L2+20
 110 003a 2A4B     		ldr	r3, .L2+20
 111 003c 1B78     		ldrb	r3, [r3]
 112 003e DBB2     		uxtb	r3, r3
 113 0040 43F01803 		orr	r3, r3, #24
 114 0044 DBB2     		uxtb	r3, r3
 115 0046 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 5


 114:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF1_REG    = ADC_CFG1_DSM_REF1;
 116              		.loc 1 114 0
 117 0048 274B     		ldr	r3, .L2+24
 118 004a 0022     		movs	r2, #0
 119 004c 1A70     		strb	r2, [r3]
 115:Generated_Source\PSoC5/ADC.c **** 
 116:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT0_REG    = ADC_CFG1_DSM_OUT0;
 120              		.loc 1 116 0
 121 004e 274B     		ldr	r3, .L2+28
 122 0050 0022     		movs	r2, #0
 123 0052 1A70     		strb	r2, [r3]
 117:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_OUT1_REG    = ADC_CFG1_DSM_OUT1;
 124              		.loc 1 117 0
 125 0054 264B     		ldr	r3, .L2+32
 126 0056 0022     		movs	r2, #0
 127 0058 1A70     		strb	r2, [r3]
 118:Generated_Source\PSoC5/ADC.c **** 
 119:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR0_REG     = ADC_CFG1_DSM_CR0;
 128              		.loc 1 119 0
 129 005a 264B     		ldr	r3, .L2+36
 130 005c 0A22     		movs	r2, #10
 131 005e 1A70     		strb	r2, [r3]
 120:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR1_REG     = ADC_CFG1_DSM_CR1;
 132              		.loc 1 120 0
 133 0060 254B     		ldr	r3, .L2+40
 134 0062 0022     		movs	r2, #0
 135 0064 1A70     		strb	r2, [r3]
 121:Generated_Source\PSoC5/ADC.c **** #if(ADC_MI_ENABLE != 0u) /* Enable Modulator Input */
 122:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     |= ADC_DSM_MODBIT_EN;
 123:Generated_Source\PSoC5/ADC.c **** #else
 124:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR3_REG     = ADC_CFG1_DSM_CR3;
 136              		.loc 1 124 0
 137 0066 254B     		ldr	r3, .L2+44
 138 0068 0022     		movs	r2, #0
 139 006a 1A70     		strb	r2, [r3]
 125:Generated_Source\PSoC5/ADC.c **** #endif /* ADC_MI_ENABLE != 0u*/    
 126:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR8_REG     = ADC_CFG1_DSM_CR8;
 140              		.loc 1 126 0
 141 006c 244B     		ldr	r3, .L2+48
 142 006e 5B22     		movs	r2, #91
 143 0070 1A70     		strb	r2, [r3]
 127:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR9_REG     = ADC_CFG1_DSM_CR9;
 144              		.loc 1 127 0
 145 0072 244B     		ldr	r3, .L2+52
 146 0074 5E22     		movs	r2, #94
 147 0076 1A70     		strb	r2, [r3]
 128:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR13_REG    = ADC_CFG1_DSM_CR13;
 148              		.loc 1 128 0
 149 0078 234B     		ldr	r3, .L2+56
 150 007a 0022     		movs	r2, #0
 151 007c 1A70     		strb	r2, [r3]
 129:Generated_Source\PSoC5/ADC.c **** 
 130:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG      = ADC_CFG1_DEC_SR;
 152              		.loc 1 130 0
 153 007e 234B     		ldr	r3, .L2+60
 154 0080 1422     		movs	r2, #20
 155 0082 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 6


 131:Generated_Source\PSoC5/ADC.c **** 
 132:Generated_Source\PSoC5/ADC.c ****     /* Calculate Gain compensation coefficients for all configurations */
 133:Generated_Source\PSoC5/ADC.c ****     ADC_GainCompensation(ADC_CFG1_INPUT_RANGE,
 156              		.loc 1 133 0
 157 0084 0123     		movs	r3, #1
 158 0086 0093     		str	r3, [sp]
 159 0088 1023     		movs	r3, #16
 160 008a 4FF40042 		mov	r2, #32768
 161 008e 49F25B11 		movw	r1, #37211
 162 0092 0520     		movs	r0, #5
 163 0094 FFF7FEFF 		bl	ADC_GainCompensation
 134:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_DEC_GAIN,
 135:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_IDEAL_ODDDEC_GAIN,
 136:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1_RESOLUTION,
 137:Generated_Source\PSoC5/ADC.c ****                                       ADC_CFG1);
 138:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
 139:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG2_INPUT_RANGE,
 140:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_DEC_GAIN,
 141:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_IDEAL_ODDDEC_GAIN,
 142:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2_RESOLUTION,
 143:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG2);
 144:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
 145:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
 146:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG3_INPUT_RANGE,
 147:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_DEC_GAIN,
 148:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_IDEAL_ODDDEC_GAIN,
 149:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3_RESOLUTION,
 150:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG3);
 151:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
 152:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
 153:Generated_Source\PSoC5/ADC.c ****         ADC_GainCompensation(ADC_CFG4_INPUT_RANGE,
 154:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_DEC_GAIN,
 155:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_IDEAL_ODDDEC_GAIN,
 156:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4_RESOLUTION,
 157:Generated_Source\PSoC5/ADC.c ****                                           ADC_CFG4);
 158:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
 159:Generated_Source\PSoC5/ADC.c **** 
 160:Generated_Source\PSoC5/ADC.c ****     /* Set GCOR register for config1 */
 161:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_GVAL_REG = ADC_gcor[ADC_Config - 1u].gval;
 164              		.loc 1 161 0
 165 0098 1D4A     		ldr	r2, .L2+64
 166 009a 0D4B     		ldr	r3, .L2
 167 009c 1B78     		ldrb	r3, [r3]
 168 009e DBB2     		uxtb	r3, r3
 169 00a0 013B     		subs	r3, r3, #1
 170 00a2 1C49     		ldr	r1, .L2+68
 171 00a4 9B00     		lsls	r3, r3, #2
 172 00a6 0B44     		add	r3, r3, r1
 173 00a8 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 174 00aa 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC.c ****     CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[ADC_Config - 1u].gcor);
 175              		.loc 1 162 0
 176 00ac 1A4A     		ldr	r2, .L2+72
 177 00ae 084B     		ldr	r3, .L2
 178 00b0 1B78     		ldrb	r3, [r3]
 179 00b2 DBB2     		uxtb	r3, r3
 180 00b4 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 7


 181 00b6 1749     		ldr	r1, .L2+68
 182 00b8 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 183 00bc 1380     		strh	r3, [r2]	@ movhi
 163:Generated_Source\PSoC5/ADC.c **** 
 164:Generated_Source\PSoC5/ADC.c ****     /* Initialize the registers with default customizer settings for config1 */
 165:Generated_Source\PSoC5/ADC.c ****     ADC_InitConfig(ADC_Config);
 184              		.loc 1 165 0
 185 00be 044B     		ldr	r3, .L2
 186 00c0 1B78     		ldrb	r3, [r3]
 187 00c2 DBB2     		uxtb	r3, r3
 188 00c4 1846     		mov	r0, r3
 189 00c6 FFF7FEFF 		bl	ADC_InitConfig
 166:Generated_Source\PSoC5/ADC.c **** }
 190              		.loc 1 166 0
 191 00ca 00BF     		nop
 192 00cc BD46     		mov	sp, r7
 193              		.cfi_def_cfa_register 13
 194              		@ sp needed
 195 00ce 80BD     		pop	{r7, pc}
 196              	.L3:
 197              		.align	2
 198              	.L2:
 199 00d0 00000000 		.word	ADC_Config
 200 00d4 00000000 		.word	ADC_convDone
 201 00d8 96580040 		.word	1073764502
 202 00dc 97580040 		.word	1073764503
 203 00e0 9E580040 		.word	1073764510
 204 00e4 075B0040 		.word	1073765127
 205 00e8 93580040 		.word	1073764499
 206 00ec 885B0040 		.word	1073765256
 207 00f0 895B0040 		.word	1073765257
 208 00f4 80580040 		.word	1073764480
 209 00f8 81580040 		.word	1073764481
 210 00fc 83580040 		.word	1073764483
 211 0100 88580040 		.word	1073764488
 212 0104 89580040 		.word	1073764489
 213 0108 8D580040 		.word	1073764493
 214 010c 014E0040 		.word	1073761793
 215 0110 0E4E0040 		.word	1073761806
 216 0114 08000000 		.word	ADC_gcor
 217 0118 0C4E0040 		.word	1073761804
 218              		.cfi_endproc
 219              	.LFE0:
 220              		.size	ADC_Init, .-ADC_Init
 221              		.section	.text.ADC_Enable,"ax",%progbits
 222              		.align	2
 223              		.global	ADC_Enable
 224              		.thumb
 225              		.thumb_func
 226              		.type	ADC_Enable, %function
 227              	ADC_Enable:
 228              	.LFB1:
 167:Generated_Source\PSoC5/ADC.c **** 
 168:Generated_Source\PSoC5/ADC.c **** 
 169:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 170:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Enable
 171:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 8


 172:Generated_Source\PSoC5/ADC.c **** *
 173:Generated_Source\PSoC5/ADC.c **** * Summary:
 174:Generated_Source\PSoC5/ADC.c **** *  Enables the ADC DelSig block operation.
 175:Generated_Source\PSoC5/ADC.c **** *
 176:Generated_Source\PSoC5/ADC.c **** * Parameters:
 177:Generated_Source\PSoC5/ADC.c **** *  None
 178:Generated_Source\PSoC5/ADC.c **** *
 179:Generated_Source\PSoC5/ADC.c **** * Return:
 180:Generated_Source\PSoC5/ADC.c **** *  None
 181:Generated_Source\PSoC5/ADC.c **** *
 182:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 183:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 184:Generated_Source\PSoC5/ADC.c **** *
 185:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 186:Generated_Source\PSoC5/ADC.c **** void ADC_Enable(void) 
 187:Generated_Source\PSoC5/ADC.c **** {
 229              		.loc 1 187 0
 230              		.cfi_startproc
 231              		@ args = 0, pretend = 0, frame = 8
 232              		@ frame_needed = 1, uses_anonymous_args = 0
 233 0000 80B5     		push	{r7, lr}
 234              		.cfi_def_cfa_offset 8
 235              		.cfi_offset 7, -8
 236              		.cfi_offset 14, -4
 237 0002 82B0     		sub	sp, sp, #8
 238              		.cfi_def_cfa_offset 16
 239 0004 00AF     		add	r7, sp, #0
 240              		.cfi_def_cfa_register 7
 188:Generated_Source\PSoC5/ADC.c **** 	uint8 config;
 189:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 190:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 241              		.loc 1 190 0
 242 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 243 000a 0346     		mov	r3, r0
 244 000c FB71     		strb	r3, [r7, #7]
 191:Generated_Source\PSoC5/ADC.c **** 
 192:Generated_Source\PSoC5/ADC.c ****     /* Read volatile variable to the local variable */
 193:Generated_Source\PSoC5/ADC.c ****     config = ADC_Config;
 245              		.loc 1 193 0
 246 000e 444B     		ldr	r3, .L5
 247 0010 1B78     		ldrb	r3, [r3]
 248 0012 BB71     		strb	r3, [r7, #6]
 194:Generated_Source\PSoC5/ADC.c ****     
 195:Generated_Source\PSoC5/ADC.c ****     /* Enable active mode power for ADC */
 196:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG |= ADC_ACT_PWR_DEC_EN;
 249              		.loc 1 196 0
 250 0014 434A     		ldr	r2, .L5+4
 251 0016 434B     		ldr	r3, .L5+4
 252 0018 1B78     		ldrb	r3, [r3]
 253 001a DBB2     		uxtb	r3, r3
 254 001c 43F00103 		orr	r3, r3, #1
 255 0020 DBB2     		uxtb	r3, r3
 256 0022 1370     		strb	r3, [r2]
 197:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG |= ADC_ACT_PWR_DSM_EN;
 257              		.loc 1 197 0
 258 0024 3F4A     		ldr	r2, .L5+4
 259 0026 3F4B     		ldr	r3, .L5+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 9


 260 0028 1B78     		ldrb	r3, [r3]
 261 002a DBB2     		uxtb	r3, r3
 262 002c 43F01003 		orr	r3, r3, #16
 263 0030 DBB2     		uxtb	r3, r3
 264 0032 1370     		strb	r3, [r2]
 198:Generated_Source\PSoC5/ADC.c **** 
 199:Generated_Source\PSoC5/ADC.c ****      /* Enable alternative active mode power for ADC */
 200:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG |= ADC_STBY_PWR_DEC_EN;
 265              		.loc 1 200 0
 266 0034 3C4A     		ldr	r2, .L5+8
 267 0036 3C4B     		ldr	r3, .L5+8
 268 0038 1B78     		ldrb	r3, [r3]
 269 003a DBB2     		uxtb	r3, r3
 270 003c 43F00103 		orr	r3, r3, #1
 271 0040 DBB2     		uxtb	r3, r3
 272 0042 1370     		strb	r3, [r2]
 201:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG |= ADC_STBY_PWR_DSM_EN;
 273              		.loc 1 201 0
 274 0044 384A     		ldr	r2, .L5+8
 275 0046 384B     		ldr	r3, .L5+8
 276 0048 1B78     		ldrb	r3, [r3]
 277 004a DBB2     		uxtb	r3, r3
 278 004c 43F01003 		orr	r3, r3, #16
 279 0050 DBB2     		uxtb	r3, r3
 280 0052 1370     		strb	r3, [r2]
 202:Generated_Source\PSoC5/ADC.c **** 
 203:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
 204:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 281              		.loc 1 204 0
 282 0054 354A     		ldr	r2, .L5+12
 283 0056 354B     		ldr	r3, .L5+12
 284 0058 1B78     		ldrb	r3, [r3]
 285 005a DBB2     		uxtb	r3, r3
 286 005c 43F00203 		orr	r3, r3, #2
 287 0060 DBB2     		uxtb	r3, r3
 288 0062 1370     		strb	r3, [r2]
 205:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 289              		.loc 1 205 0
 290 0064 324A     		ldr	r2, .L5+16
 291 0066 324B     		ldr	r3, .L5+16
 292 0068 1B78     		ldrb	r3, [r3]
 293 006a DBB2     		uxtb	r3, r3
 294 006c 43F00203 		orr	r3, r3, #2
 295 0070 DBB2     		uxtb	r3, r3
 296 0072 1370     		strb	r3, [r2]
 206:Generated_Source\PSoC5/ADC.c **** 
 207:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG |= (ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 297              		.loc 1 207 0
 298 0074 2F4A     		ldr	r2, .L5+20
 299 0076 2F4B     		ldr	r3, .L5+20
 300 0078 1B78     		ldrb	r3, [r3]
 301 007a DBB2     		uxtb	r3, r3
 302 007c 43F00303 		orr	r3, r3, #3
 303 0080 DBB2     		uxtb	r3, r3
 304 0082 1370     		strb	r3, [r2]
 208:Generated_Source\PSoC5/ADC.c **** 
 209:Generated_Source\PSoC5/ADC.c ****     /* Code to disable the REFBUF0 if reference chosen is External ref */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 10


 210:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) || \
 211:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32)) || \
 212:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 213:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 214:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 215:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 216:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||  \
 217:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) || \
 218:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 219:Generated_Source\PSoC5/ADC.c ****           ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) || \
 220:Generated_Source\PSoC5/ADC.c ****            (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 221:Generated_Source\PSoC5/ADC.c ****         if (((config == 1u) &&
 222:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P03) ||
 223:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 224:Generated_Source\PSoC5/ADC.c ****             ((config == 2u) &&
 225:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P03) ||
 226:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 227:Generated_Source\PSoC5/ADC.c ****             ((config == 3u) &&
 228:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P03) ||
 229:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE == ADC_EXT_REF_ON_P32))) ||
 230:Generated_Source\PSoC5/ADC.c ****             ((config == 4u) &&
 231:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P03) ||
 232:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE == ADC_EXT_REF_ON_P32))))
 233:Generated_Source\PSoC5/ADC.c ****         {
 234:Generated_Source\PSoC5/ADC.c ****             /* Disable the REFBUF0 */
 235:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG &= (uint8)~ADC_DSM_EN_BUF_VREF;
 236:Generated_Source\PSoC5/ADC.c ****         }
 237:Generated_Source\PSoC5/ADC.c ****     #endif /* External ref */
 238:Generated_Source\PSoC5/ADC.c **** 
 239:Generated_Source\PSoC5/ADC.c ****     #if (((ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) || \
 240:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 1) && \
 241:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 242:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 2) && \
 243:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)) || \
 244:Generated_Source\PSoC5/ADC.c ****          ((ADC_DEFAULT_NUM_CONFIGS > 3) && \
 245:Generated_Source\PSoC5/ADC.c ****           (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF))))
 246:Generated_Source\PSoC5/ADC.c ****         if(((config == 1u) &&
 247:Generated_Source\PSoC5/ADC.c ****             (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 248:Generated_Source\PSoC5/ADC.c ****             ((ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P03) &&
 249:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG1_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 250:Generated_Source\PSoC5/ADC.c ****              ((config == 2u) &&
 251:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 252:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P03) &&
 253:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 254:Generated_Source\PSoC5/ADC.c ****              ((config == 3u) &&
 255:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 256:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P03) &&
 257:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_REFERENCE != ADC_EXT_REF_ON_P32))) ||
 258:Generated_Source\PSoC5/ADC.c ****              ((config == 4u) &&
 259:Generated_Source\PSoC5/ADC.c ****               (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF) &&
 260:Generated_Source\PSoC5/ADC.c ****              ((ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P03) &&
 261:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_REFERENCE != ADC_EXT_REF_ON_P32))))
 262:Generated_Source\PSoC5/ADC.c ****         {
 263:Generated_Source\PSoC5/ADC.c ****             /* Enable the REFBUF1 */
 264:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF0_REG |= ADC_DSM_EN_BUF_VREF_INN;
 265:Generated_Source\PSoC5/ADC.c ****         }
 266:Generated_Source\PSoC5/ADC.c ****     #endif /* VSSA_TO_2VREF */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 11


 267:Generated_Source\PSoC5/ADC.c ****     if(config != 0u)
 268:Generated_Source\PSoC5/ADC.c ****     {
 269:Generated_Source\PSoC5/ADC.c ****         /* Suppress compiler warning */
 270:Generated_Source\PSoC5/ADC.c ****     }
 271:Generated_Source\PSoC5/ADC.c **** 
 272:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
 273:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 305              		.loc 1 273 0
 306 0084 0320     		movs	r0, #3
 307 0086 FFF7FEFF 		bl	CyDelayUs
 274:Generated_Source\PSoC5/ADC.c **** 
 275:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 276:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 308              		.loc 1 276 0
 309 008a 284A     		ldr	r2, .L5+12
 310 008c 274B     		ldr	r3, .L5+12
 311 008e 1B78     		ldrb	r3, [r3]
 312 0090 DBB2     		uxtb	r3, r3
 313 0092 23F00203 		bic	r3, r3, #2
 314 0096 DBB2     		uxtb	r3, r3
 315 0098 1370     		strb	r3, [r2]
 277:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 316              		.loc 1 277 0
 317 009a 254A     		ldr	r2, .L5+16
 318 009c 244B     		ldr	r3, .L5+16
 319 009e 1B78     		ldrb	r3, [r3]
 320 00a0 DBB2     		uxtb	r3, r3
 321 00a2 23F00203 		bic	r3, r3, #2
 322 00a6 DBB2     		uxtb	r3, r3
 323 00a8 1370     		strb	r3, [r2]
 278:Generated_Source\PSoC5/ADC.c **** 
 279:Generated_Source\PSoC5/ADC.c ****     /* Enable negative pumps for DSM  */
 280:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG  |= ( ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 324              		.loc 1 280 0
 325 00aa 234A     		ldr	r2, .L5+24
 326 00ac 224B     		ldr	r3, .L5+24
 327 00ae 1B78     		ldrb	r3, [r3]
 328 00b0 DBB2     		uxtb	r3, r3
 329 00b2 43F00603 		orr	r3, r3, #6
 330 00b6 DBB2     		uxtb	r3, r3
 331 00b8 1370     		strb	r3, [r2]
 281:Generated_Source\PSoC5/ADC.c **** 
 282:Generated_Source\PSoC5/ADC.c ****     /* Enable Modulator Chopping if required */
 283:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG = ADC_CFG1_DSM_CR2;
 332              		.loc 1 283 0
 333 00ba 204B     		ldr	r3, .L5+28
 334 00bc 7A22     		movs	r2, #122
 335 00be 1A70     		strb	r2, [r3]
 284:Generated_Source\PSoC5/ADC.c **** 
 285:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 286:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 287:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG |= ADC_ACT_PWR_CLK_EN;
 336              		.loc 1 287 0
 337 00c0 1F4A     		ldr	r2, .L5+32
 338 00c2 1F4B     		ldr	r3, .L5+32
 339 00c4 1B78     		ldrb	r3, [r3]
 340 00c6 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 12


 341 00c8 43F00103 		orr	r3, r3, #1
 342 00cc DBB2     		uxtb	r3, r3
 343 00ce 1370     		strb	r3, [r2]
 288:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG |= ADC_STBY_PWR_CLK_EN;
 344              		.loc 1 288 0
 345 00d0 1C4A     		ldr	r2, .L5+36
 346 00d2 1C4B     		ldr	r3, .L5+36
 347 00d4 1B78     		ldrb	r3, [r3]
 348 00d6 DBB2     		uxtb	r3, r3
 349 00d8 43F00103 		orr	r3, r3, #1
 350 00dc DBB2     		uxtb	r3, r3
 351 00de 1370     		strb	r3, [r2]
 289:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 290:Generated_Source\PSoC5/ADC.c **** 
 291:Generated_Source\PSoC5/ADC.c ****     /* Enable the active and alternate active power for charge pump clock */
 292:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 352              		.loc 1 292 0
 353 00e0 194A     		ldr	r2, .L5+40
 354 00e2 194B     		ldr	r3, .L5+40
 355 00e4 1B78     		ldrb	r3, [r3]
 356 00e6 DBB2     		uxtb	r3, r3
 357 00e8 43F00103 		orr	r3, r3, #1
 358 00ec DBB2     		uxtb	r3, r3
 359 00ee 1370     		strb	r3, [r2]
 293:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG |= ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 360              		.loc 1 293 0
 361 00f0 164A     		ldr	r2, .L5+44
 362 00f2 164B     		ldr	r3, .L5+44
 363 00f4 1B78     		ldrb	r3, [r3]
 364 00f6 DBB2     		uxtb	r3, r3
 365 00f8 43F00103 		orr	r3, r3, #1
 366 00fc DBB2     		uxtb	r3, r3
 367 00fe 1370     		strb	r3, [r2]
 294:Generated_Source\PSoC5/ADC.c **** 
 295:Generated_Source\PSoC5/ADC.c ****     #if(ADC_IRQ_REMOVE == 0u)
 296:Generated_Source\PSoC5/ADC.c ****         /* Clear a pending interrupt */
 297:Generated_Source\PSoC5/ADC.c ****         CyIntClearPending(ADC_INTC_NUMBER);
 368              		.loc 1 297 0
 369 0100 134B     		ldr	r3, .L5+48
 370 0102 4FF00052 		mov	r2, #536870912
 371 0106 1A60     		str	r2, [r3]
 298:Generated_Source\PSoC5/ADC.c ****         /* Enable interrupt */
 299:Generated_Source\PSoC5/ADC.c ****         CyIntEnable(ADC_INTC_NUMBER);
 372              		.loc 1 299 0
 373 0108 124B     		ldr	r3, .L5+52
 374 010a 4FF00052 		mov	r2, #536870912
 375 010e 1A60     		str	r2, [r3]
 300:Generated_Source\PSoC5/ADC.c ****     #endif   /* End ADC_IRQ_REMOVE */
 301:Generated_Source\PSoC5/ADC.c **** 
 302:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 376              		.loc 1 302 0
 377 0110 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 378 0112 1846     		mov	r0, r3
 379 0114 FFF7FEFF 		bl	CyExitCriticalSection
 303:Generated_Source\PSoC5/ADC.c **** 
 304:Generated_Source\PSoC5/ADC.c **** }
 380              		.loc 1 304 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 13


 381 0118 00BF     		nop
 382 011a 0837     		adds	r7, r7, #8
 383              		.cfi_def_cfa_offset 8
 384 011c BD46     		mov	sp, r7
 385              		.cfi_def_cfa_register 13
 386              		@ sp needed
 387 011e 80BD     		pop	{r7, pc}
 388              	.L6:
 389              		.align	2
 390              	.L5:
 391 0120 00000000 		.word	ADC_Config
 392 0124 AA430040 		.word	1073759146
 393 0128 BA430040 		.word	1073759162
 394 012c F8460040 		.word	1073759992
 395 0130 F9460040 		.word	1073759993
 396 0134 91580040 		.word	1073764497
 397 0138 77580040 		.word	1073764471
 398 013c 82580040 		.word	1073764482
 399 0140 A1430040 		.word	1073759137
 400 0144 B1430040 		.word	1073759153
 401 0148 A2430040 		.word	1073759138
 402 014c B2430040 		.word	1073759154
 403 0150 80E200E0 		.word	-536812928
 404 0154 00E100E0 		.word	-536813312
 405              		.cfi_endproc
 406              	.LFE1:
 407              		.size	ADC_Enable, .-ADC_Enable
 408              		.section	.text.ADC_Start,"ax",%progbits
 409              		.align	2
 410              		.global	ADC_Start
 411              		.thumb
 412              		.thumb_func
 413              		.type	ADC_Start, %function
 414              	ADC_Start:
 415              	.LFB2:
 305:Generated_Source\PSoC5/ADC.c **** 
 306:Generated_Source\PSoC5/ADC.c **** 
 307:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 308:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Start
 309:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 310:Generated_Source\PSoC5/ADC.c **** *
 311:Generated_Source\PSoC5/ADC.c **** * Summary:
 312:Generated_Source\PSoC5/ADC.c **** *  Performs all required initialization for this component and enables
 313:Generated_Source\PSoC5/ADC.c **** *  the power. It configure all the register the first time it is called.
 314:Generated_Source\PSoC5/ADC.c **** *  Subsequent calls of the Start function only enable the ADC and turn
 315:Generated_Source\PSoC5/ADC.c **** *  on the power. If multiple configurations are selected, it will
 316:Generated_Source\PSoC5/ADC.c **** *  configure the ADC for configuration 1 by default, unless the
 317:Generated_Source\PSoC5/ADC.c **** *  ADC_SelectConfiguration( ) function has been called to change
 318:Generated_Source\PSoC5/ADC.c **** *  the default setting.
 319:Generated_Source\PSoC5/ADC.c **** *
 320:Generated_Source\PSoC5/ADC.c **** * Parameters:
 321:Generated_Source\PSoC5/ADC.c **** *  None
 322:Generated_Source\PSoC5/ADC.c **** *
 323:Generated_Source\PSoC5/ADC.c **** * Return:
 324:Generated_Source\PSoC5/ADC.c **** *  None
 325:Generated_Source\PSoC5/ADC.c **** *
 326:Generated_Source\PSoC5/ADC.c **** * Global variables:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 14


 327:Generated_Source\PSoC5/ADC.c **** *  ADC_initVar:  Used to check the initial configuration,
 328:Generated_Source\PSoC5/ADC.c **** *  modified when this function is called for the first time.
 329:Generated_Source\PSoC5/ADC.c **** *
 330:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
 331:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
 332:Generated_Source\PSoC5/ADC.c **** *
 333:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 334:Generated_Source\PSoC5/ADC.c **** void ADC_Start(void) 
 335:Generated_Source\PSoC5/ADC.c **** {
 416              		.loc 1 335 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420 0000 80B5     		push	{r7, lr}
 421              		.cfi_def_cfa_offset 8
 422              		.cfi_offset 7, -8
 423              		.cfi_offset 14, -4
 424 0002 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 336:Generated_Source\PSoC5/ADC.c ****     if(ADC_initVar == 0u)
 426              		.loc 1 336 0
 427 0004 084B     		ldr	r3, .L10
 428 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 429 0008 002B     		cmp	r3, #0
 430 000a 09D1     		bne	.L8
 337:Generated_Source\PSoC5/ADC.c ****     {
 338:Generated_Source\PSoC5/ADC.c ****         if(ADC_started == 0u)
 431              		.loc 1 338 0
 432 000c 074B     		ldr	r3, .L10+4
 433 000e 1B78     		ldrb	r3, [r3]
 434 0010 DBB2     		uxtb	r3, r3
 435 0012 002B     		cmp	r3, #0
 436 0014 01D1     		bne	.L9
 339:Generated_Source\PSoC5/ADC.c ****         {
 340:Generated_Source\PSoC5/ADC.c ****             ADC_Init();
 437              		.loc 1 340 0
 438 0016 FFF7FEFF 		bl	ADC_Init
 439              	.L9:
 341:Generated_Source\PSoC5/ADC.c ****         }
 342:Generated_Source\PSoC5/ADC.c ****         ADC_initVar = 1u;
 440              		.loc 1 342 0
 441 001a 034B     		ldr	r3, .L10
 442 001c 0122     		movs	r2, #1
 443 001e 1A70     		strb	r2, [r3]
 444              	.L8:
 343:Generated_Source\PSoC5/ADC.c ****     }
 344:Generated_Source\PSoC5/ADC.c **** 
 345:Generated_Source\PSoC5/ADC.c ****     /* Enable the ADC */
 346:Generated_Source\PSoC5/ADC.c ****     ADC_Enable();
 445              		.loc 1 346 0
 446 0020 FFF7FEFF 		bl	ADC_Enable
 347:Generated_Source\PSoC5/ADC.c **** }
 447              		.loc 1 347 0
 448 0024 00BF     		nop
 449 0026 80BD     		pop	{r7, pc}
 450              	.L11:
 451              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 15


 452              	.L10:
 453 0028 00000000 		.word	ADC_initVar
 454 002c 00000000 		.word	ADC_started
 455              		.cfi_endproc
 456              	.LFE2:
 457              		.size	ADC_Start, .-ADC_Start
 458              		.section	.text.ADC_Stop,"ax",%progbits
 459              		.align	2
 460              		.global	ADC_Stop
 461              		.thumb
 462              		.thumb_func
 463              		.type	ADC_Stop, %function
 464              	ADC_Stop:
 465              	.LFB3:
 348:Generated_Source\PSoC5/ADC.c **** 
 349:Generated_Source\PSoC5/ADC.c **** 
 350:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 351:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Stop
 352:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 353:Generated_Source\PSoC5/ADC.c **** *
 354:Generated_Source\PSoC5/ADC.c **** * Summary:
 355:Generated_Source\PSoC5/ADC.c **** *  This function stops and powers down the ADC component and the internal
 356:Generated_Source\PSoC5/ADC.c **** *  clock if the external clock is not selected. If an external clock is
 357:Generated_Source\PSoC5/ADC.c **** *  used, it is up to the designer to power down the external clock it
 358:Generated_Source\PSoC5/ADC.c **** *  required.
 359:Generated_Source\PSoC5/ADC.c **** *
 360:Generated_Source\PSoC5/ADC.c **** * Parameters:
 361:Generated_Source\PSoC5/ADC.c **** *  None
 362:Generated_Source\PSoC5/ADC.c **** *
 363:Generated_Source\PSoC5/ADC.c **** * Return:
 364:Generated_Source\PSoC5/ADC.c **** *  None
 365:Generated_Source\PSoC5/ADC.c **** *
 366:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 367:Generated_Source\PSoC5/ADC.c **** void ADC_Stop(void) 
 368:Generated_Source\PSoC5/ADC.c **** {
 466              		.loc 1 368 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 8
 469              		@ frame_needed = 1, uses_anonymous_args = 0
 470 0000 80B5     		push	{r7, lr}
 471              		.cfi_def_cfa_offset 8
 472              		.cfi_offset 7, -8
 473              		.cfi_offset 14, -4
 474 0002 82B0     		sub	sp, sp, #8
 475              		.cfi_def_cfa_offset 16
 476 0004 00AF     		add	r7, sp, #0
 477              		.cfi_def_cfa_register 7
 369:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
 370:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 478              		.loc 1 370 0
 479 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 480 000a 0346     		mov	r3, r0
 481 000c FB71     		strb	r3, [r7, #7]
 371:Generated_Source\PSoC5/ADC.c **** 
 372:Generated_Source\PSoC5/ADC.c ****     /* Stop conversions */
 373:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 482              		.loc 1 373 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 16


 483 000e 4D4A     		ldr	r2, .L13
 484 0010 4C4B     		ldr	r3, .L13
 485 0012 1B78     		ldrb	r3, [r3]
 486 0014 DBB2     		uxtb	r3, r3
 487 0016 23F00103 		bic	r3, r3, #1
 488 001a DBB2     		uxtb	r3, r3
 489 001c 1370     		strb	r3, [r2]
 374:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |=  ADC_DEC_INTR_CLEAR;
 490              		.loc 1 374 0
 491 001e 4A4A     		ldr	r2, .L13+4
 492 0020 494B     		ldr	r3, .L13+4
 493 0022 1B78     		ldrb	r3, [r3]
 494 0024 DBB2     		uxtb	r3, r3
 495 0026 43F00403 		orr	r3, r3, #4
 496 002a DBB2     		uxtb	r3, r3
 497 002c 1370     		strb	r3, [r2]
 375:Generated_Source\PSoC5/ADC.c **** 
 376:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Disable power to VCMBUF0, REFBUF0 and REFBUF1,
 377:Generated_Source\PSoC5/ADC.c ****        enable PRES */
 378:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= ADC_IGNORE_PRESA1;
 498              		.loc 1 378 0
 499 002e 474A     		ldr	r2, .L13+8
 500 0030 464B     		ldr	r3, .L13+8
 501 0032 1B78     		ldrb	r3, [r3]
 502 0034 DBB2     		uxtb	r3, r3
 503 0036 43F00203 		orr	r3, r3, #2
 504 003a DBB2     		uxtb	r3, r3
 505 003c 1370     		strb	r3, [r2]
 379:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= ADC_IGNORE_PRESA2;
 506              		.loc 1 379 0
 507 003e 444A     		ldr	r2, .L13+12
 508 0040 434B     		ldr	r3, .L13+12
 509 0042 1B78     		ldrb	r3, [r3]
 510 0044 DBB2     		uxtb	r3, r3
 511 0046 43F00203 		orr	r3, r3, #2
 512 004a DBB2     		uxtb	r3, r3
 513 004c 1370     		strb	r3, [r2]
 380:Generated_Source\PSoC5/ADC.c **** 
 381:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR17_REG &= (uint8)~(ADC_DSM_EN_BUF_VREF | ADC_DSM_EN_BUF_VCM);
 514              		.loc 1 381 0
 515 004e 414A     		ldr	r2, .L13+16
 516 0050 404B     		ldr	r3, .L13+16
 517 0052 1B78     		ldrb	r3, [r3]
 518 0054 DBB2     		uxtb	r3, r3
 519 0056 23F00303 		bic	r3, r3, #3
 520 005a DBB2     		uxtb	r3, r3
 521 005c 1370     		strb	r3, [r2]
 382:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG &= (uint8)~ADC_DSM_EN_BUF_VREF_INN;
 522              		.loc 1 382 0
 523 005e 3E4A     		ldr	r2, .L13+20
 524 0060 3D4B     		ldr	r3, .L13+20
 525 0062 1B78     		ldrb	r3, [r3]
 526 0064 DBB2     		uxtb	r3, r3
 527 0066 23F00803 		bic	r3, r3, #8
 528 006a DBB2     		uxtb	r3, r3
 529 006c 1370     		strb	r3, [r2]
 383:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 17


 384:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds. */
 385:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 530              		.loc 1 385 0
 531 006e 0320     		movs	r0, #3
 532 0070 FFF7FEFF 		bl	CyDelayUs
 386:Generated_Source\PSoC5/ADC.c **** 
 387:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
 388:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~ADC_IGNORE_PRESA1;
 533              		.loc 1 388 0
 534 0074 354A     		ldr	r2, .L13+8
 535 0076 354B     		ldr	r3, .L13+8
 536 0078 1B78     		ldrb	r3, [r3]
 537 007a DBB2     		uxtb	r3, r3
 538 007c 23F00203 		bic	r3, r3, #2
 539 0080 DBB2     		uxtb	r3, r3
 540 0082 1370     		strb	r3, [r2]
 389:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~ADC_IGNORE_PRESA2;
 541              		.loc 1 389 0
 542 0084 324A     		ldr	r2, .L13+12
 543 0086 324B     		ldr	r3, .L13+12
 544 0088 1B78     		ldrb	r3, [r3]
 545 008a DBB2     		uxtb	r3, r3
 546 008c 23F00203 		bic	r3, r3, #2
 547 0090 DBB2     		uxtb	r3, r3
 548 0092 1370     		strb	r3, [r2]
 390:Generated_Source\PSoC5/ADC.c **** 
 391:Generated_Source\PSoC5/ADC.c ****     /* Disable power to the ADC */
 392:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DSM_REG &= (uint8)~ADC_ACT_PWR_DSM_EN;
 549              		.loc 1 392 0
 550 0094 314A     		ldr	r2, .L13+24
 551 0096 314B     		ldr	r3, .L13+24
 552 0098 1B78     		ldrb	r3, [r3]
 553 009a DBB2     		uxtb	r3, r3
 554 009c 23F01003 		bic	r3, r3, #16
 555 00a0 DBB2     		uxtb	r3, r3
 556 00a2 1370     		strb	r3, [r2]
 393:Generated_Source\PSoC5/ADC.c **** 
 394:Generated_Source\PSoC5/ADC.c ****     /* Disable power to Decimator block */
 395:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_DEC_REG &= (uint8)~ADC_ACT_PWR_DEC_EN;
 557              		.loc 1 395 0
 558 00a4 2D4A     		ldr	r2, .L13+24
 559 00a6 2D4B     		ldr	r3, .L13+24
 560 00a8 1B78     		ldrb	r3, [r3]
 561 00aa DBB2     		uxtb	r3, r3
 562 00ac 23F00103 		bic	r3, r3, #1
 563 00b0 DBB2     		uxtb	r3, r3
 564 00b2 1370     		strb	r3, [r2]
 396:Generated_Source\PSoC5/ADC.c **** 
 397:Generated_Source\PSoC5/ADC.c ****     /* Disable alternative active power to the ADC */
 398:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DEC_REG &= (uint8)~ADC_STBY_PWR_DEC_EN;
 565              		.loc 1 398 0
 566 00b4 2A4A     		ldr	r2, .L13+28
 567 00b6 2A4B     		ldr	r3, .L13+28
 568 00b8 1B78     		ldrb	r3, [r3]
 569 00ba DBB2     		uxtb	r3, r3
 570 00bc 23F00103 		bic	r3, r3, #1
 571 00c0 DBB2     		uxtb	r3, r3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 18


 572 00c2 1370     		strb	r3, [r2]
 399:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_DSM_REG &= (uint8)~ADC_STBY_PWR_DSM_EN;
 573              		.loc 1 399 0
 574 00c4 264A     		ldr	r2, .L13+28
 575 00c6 264B     		ldr	r3, .L13+28
 576 00c8 1B78     		ldrb	r3, [r3]
 577 00ca DBB2     		uxtb	r3, r3
 578 00cc 23F01003 		bic	r3, r3, #16
 579 00d0 DBB2     		uxtb	r3, r3
 580 00d2 1370     		strb	r3, [r2]
 400:Generated_Source\PSoC5/ADC.c **** 
 401:Generated_Source\PSoC5/ADC.c ****    /* Disable negative pumps for DSM  */
 402:Generated_Source\PSoC5/ADC.c ****     ADC_PUMP_CR1_REG &= (uint8)~(ADC_PUMP_CR1_CLKSEL | ADC_PUMP_CR1_FORCE );
 581              		.loc 1 402 0
 582 00d4 234A     		ldr	r2, .L13+32
 583 00d6 234B     		ldr	r3, .L13+32
 584 00d8 1B78     		ldrb	r3, [r3]
 585 00da DBB2     		uxtb	r3, r3
 586 00dc 23F00603 		bic	r3, r3, #6
 587 00e0 DBB2     		uxtb	r3, r3
 588 00e2 1370     		strb	r3, [r2]
 403:Generated_Source\PSoC5/ADC.c **** 
 404:Generated_Source\PSoC5/ADC.c ****     /* This is only valid if there is an internal clock */
 405:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_INTERNAL_CLK)
 406:Generated_Source\PSoC5/ADC.c ****         ADC_PWRMGR_CLK_REG &= (uint8)~ADC_ACT_PWR_CLK_EN;
 589              		.loc 1 406 0
 590 00e4 204A     		ldr	r2, .L13+36
 591 00e6 204B     		ldr	r3, .L13+36
 592 00e8 1B78     		ldrb	r3, [r3]
 593 00ea DBB2     		uxtb	r3, r3
 594 00ec 23F00103 		bic	r3, r3, #1
 595 00f0 DBB2     		uxtb	r3, r3
 596 00f2 1370     		strb	r3, [r2]
 407:Generated_Source\PSoC5/ADC.c ****         ADC_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_STBY_PWR_CLK_EN;
 597              		.loc 1 407 0
 598 00f4 1D4A     		ldr	r2, .L13+40
 599 00f6 1D4B     		ldr	r3, .L13+40
 600 00f8 1B78     		ldrb	r3, [r3]
 601 00fa DBB2     		uxtb	r3, r3
 602 00fc 23F00103 		bic	r3, r3, #1
 603 0100 DBB2     		uxtb	r3, r3
 604 0102 1370     		strb	r3, [r2]
 408:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_INTERNAL_CLK */
 409:Generated_Source\PSoC5/ADC.c **** 
 410:Generated_Source\PSoC5/ADC.c ****     /* Disable Modulator Chopping */
 411:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_CR2_REG &= (uint8)~ADC_DSM_MOD_CHOP_EN;
 605              		.loc 1 411 0
 606 0104 1A4A     		ldr	r2, .L13+44
 607 0106 1A4B     		ldr	r3, .L13+44
 608 0108 1B78     		ldrb	r3, [r3]
 609 010a DBB2     		uxtb	r3, r3
 610 010c 23F00803 		bic	r3, r3, #8
 611 0110 DBB2     		uxtb	r3, r3
 612 0112 1370     		strb	r3, [r2]
 412:Generated_Source\PSoC5/ADC.c ****     /* Disable power to charge pump clock */
 413:Generated_Source\PSoC5/ADC.c ****     ADC_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_ACT_PWR_CHARGE_PUMP_CLK_EN;
 613              		.loc 1 413 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 19


 614 0114 174A     		ldr	r2, .L13+48
 615 0116 174B     		ldr	r3, .L13+48
 616 0118 1B78     		ldrb	r3, [r3]
 617 011a DBB2     		uxtb	r3, r3
 618 011c 23F00103 		bic	r3, r3, #1
 619 0120 DBB2     		uxtb	r3, r3
 620 0122 1370     		strb	r3, [r2]
 414:Generated_Source\PSoC5/ADC.c ****     ADC_STBY_PWRMGR_CHARGE_PUMP_CLK_REG &= (uint8)~ADC_STBY_PWR_CHARGE_PUMP_CLK_EN;
 621              		.loc 1 414 0
 622 0124 144A     		ldr	r2, .L13+52
 623 0126 144B     		ldr	r3, .L13+52
 624 0128 1B78     		ldrb	r3, [r3]
 625 012a DBB2     		uxtb	r3, r3
 626 012c 23F00103 		bic	r3, r3, #1
 627 0130 DBB2     		uxtb	r3, r3
 628 0132 1370     		strb	r3, [r2]
 415:Generated_Source\PSoC5/ADC.c ****     
 416:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 629              		.loc 1 416 0
 630 0134 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 631 0136 1846     		mov	r0, r3
 632 0138 FFF7FEFF 		bl	CyExitCriticalSection
 417:Generated_Source\PSoC5/ADC.c **** }
 633              		.loc 1 417 0
 634 013c 00BF     		nop
 635 013e 0837     		adds	r7, r7, #8
 636              		.cfi_def_cfa_offset 8
 637 0140 BD46     		mov	sp, r7
 638              		.cfi_def_cfa_register 13
 639              		@ sp needed
 640 0142 80BD     		pop	{r7, pc}
 641              	.L14:
 642              		.align	2
 643              	.L13:
 644 0144 004E0040 		.word	1073761792
 645 0148 014E0040 		.word	1073761793
 646 014c F8460040 		.word	1073759992
 647 0150 F9460040 		.word	1073759993
 648 0154 91580040 		.word	1073764497
 649 0158 92580040 		.word	1073764498
 650 015c AA430040 		.word	1073759146
 651 0160 BA430040 		.word	1073759162
 652 0164 77580040 		.word	1073764471
 653 0168 A1430040 		.word	1073759137
 654 016c B1430040 		.word	1073759153
 655 0170 82580040 		.word	1073764482
 656 0174 A2430040 		.word	1073759138
 657 0178 B2430040 		.word	1073759154
 658              		.cfi_endproc
 659              	.LFE3:
 660              		.size	ADC_Stop, .-ADC_Stop
 661              		.section	.text.ADC_SetBufferGain,"ax",%progbits
 662              		.align	2
 663              		.global	ADC_SetBufferGain
 664              		.thumb
 665              		.thumb_func
 666              		.type	ADC_SetBufferGain, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 20


 667              	ADC_SetBufferGain:
 668              	.LFB4:
 418:Generated_Source\PSoC5/ADC.c **** 
 419:Generated_Source\PSoC5/ADC.c **** 
 420:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 421:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetBufferGain
 422:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 423:Generated_Source\PSoC5/ADC.c **** *
 424:Generated_Source\PSoC5/ADC.c **** * Summary:
 425:Generated_Source\PSoC5/ADC.c **** *  Sets input buffer gain.
 426:Generated_Source\PSoC5/ADC.c **** *
 427:Generated_Source\PSoC5/ADC.c **** * Parameters:
 428:Generated_Source\PSoC5/ADC.c **** *  gain:  Two bit value to select a gain of 1, 2, 4, or 8.
 429:Generated_Source\PSoC5/ADC.c **** *
 430:Generated_Source\PSoC5/ADC.c **** * Return:
 431:Generated_Source\PSoC5/ADC.c **** *  None
 432:Generated_Source\PSoC5/ADC.c **** *
 433:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 434:Generated_Source\PSoC5/ADC.c **** void ADC_SetBufferGain(uint8 gain) 
 435:Generated_Source\PSoC5/ADC.c **** {
 669              		.loc 1 435 0
 670              		.cfi_startproc
 671              		@ args = 0, pretend = 0, frame = 16
 672              		@ frame_needed = 1, uses_anonymous_args = 0
 673              		@ link register save eliminated.
 674 0000 80B4     		push	{r7}
 675              		.cfi_def_cfa_offset 4
 676              		.cfi_offset 7, -4
 677 0002 85B0     		sub	sp, sp, #20
 678              		.cfi_def_cfa_offset 24
 679 0004 00AF     		add	r7, sp, #0
 680              		.cfi_def_cfa_register 7
 681 0006 0346     		mov	r3, r0
 682 0008 FB71     		strb	r3, [r7, #7]
 436:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 437:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DSM_BUF1_REG & (uint8)~ADC_DSM_GAIN_MASK;
 683              		.loc 1 437 0
 684 000a 0B4B     		ldr	r3, .L16
 685 000c 1B78     		ldrb	r3, [r3]
 686 000e DBB2     		uxtb	r3, r3
 687 0010 23F00C03 		bic	r3, r3, #12
 688 0014 FB73     		strb	r3, [r7, #15]
 438:Generated_Source\PSoC5/ADC.c ****     tmpReg |= (uint8)(gain << ADC_DSM_GAIN_SHIFT) & ADC_DSM_GAIN_MASK;
 689              		.loc 1 438 0
 690 0016 FB79     		ldrb	r3, [r7, #7]
 691 0018 9B00     		lsls	r3, r3, #2
 692 001a DBB2     		uxtb	r3, r3
 693 001c 03F00C03 		and	r3, r3, #12
 694 0020 DAB2     		uxtb	r2, r3
 695 0022 FB7B     		ldrb	r3, [r7, #15]
 696 0024 1343     		orrs	r3, r3, r2
 697 0026 FB73     		strb	r3, [r7, #15]
 439:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_BUF1_REG = tmpReg;
 698              		.loc 1 439 0
 699 0028 034A     		ldr	r2, .L16
 700 002a FB7B     		ldrb	r3, [r7, #15]
 701 002c 1370     		strb	r3, [r2]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 21


 440:Generated_Source\PSoC5/ADC.c **** }
 702              		.loc 1 440 0
 703 002e 00BF     		nop
 704 0030 1437     		adds	r7, r7, #20
 705              		.cfi_def_cfa_offset 4
 706 0032 BD46     		mov	sp, r7
 707              		.cfi_def_cfa_register 13
 708              		@ sp needed
 709 0034 80BC     		pop	{r7}
 710              		.cfi_restore 7
 711              		.cfi_def_cfa_offset 0
 712 0036 7047     		bx	lr
 713              	.L17:
 714              		.align	2
 715              	.L16:
 716 0038 9B580040 		.word	1073764507
 717              		.cfi_endproc
 718              	.LFE4:
 719              		.size	ADC_SetBufferGain, .-ADC_SetBufferGain
 720              		.section	.text.ADC_SetCoherency,"ax",%progbits
 721              		.align	2
 722              		.global	ADC_SetCoherency
 723              		.thumb
 724              		.thumb_func
 725              		.type	ADC_SetCoherency, %function
 726              	ADC_SetCoherency:
 727              	.LFB5:
 441:Generated_Source\PSoC5/ADC.c **** 
 442:Generated_Source\PSoC5/ADC.c **** 
 443:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 444:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetCoherency
 445:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 446:Generated_Source\PSoC5/ADC.c **** *
 447:Generated_Source\PSoC5/ADC.c **** * Summary:
 448:Generated_Source\PSoC5/ADC.c **** *  This function allows the user to change which of the ADC's 3 word
 449:Generated_Source\PSoC5/ADC.c **** *  result will trigger a coherency unlock. The ADC's result will not be
 450:Generated_Source\PSoC5/ADC.c **** *  updated until the set byte is read either by the ADC or DMA. 
 451:Generated_Source\PSoC5/ADC.c **** *  By default the LSB is the coherency byte for right alignment data format. 
 452:Generated_Source\PSoC5/ADC.c **** *  The middle or high byte is set automatically depend on left alignment 
 453:Generated_Source\PSoC5/ADC.c **** *  configuration for DMA data transfer.
 454:Generated_Source\PSoC5/ADC.c **** *  If DMA or if a custom API requires different byte to be read the last,
 455:Generated_Source\PSoC5/ADC.c **** *  this API should be used to set the last byte of the ADC result that is read. 
 456:Generated_Source\PSoC5/ADC.c **** *  If a multibyte read is performed either by DMA or the ARM processor, the
 457:Generated_Source\PSoC5/ADC.c **** *  coherency can be set to any byte in the last word read.
 458:Generated_Source\PSoC5/ADC.c **** *
 459:Generated_Source\PSoC5/ADC.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC.c **** *  coherency:  Two bit value to set the coherency bit.
 461:Generated_Source\PSoC5/ADC.c **** *           00-Coherency checking off
 462:Generated_Source\PSoC5/ADC.c **** *           01-low byte is key byte
 463:Generated_Source\PSoC5/ADC.c **** *           02-middle byte is the key byte
 464:Generated_Source\PSoC5/ADC.c **** *           03-high byte is the key byte
 465:Generated_Source\PSoC5/ADC.c **** *
 466:Generated_Source\PSoC5/ADC.c **** * Return:
 467:Generated_Source\PSoC5/ADC.c **** *  None
 468:Generated_Source\PSoC5/ADC.c **** *
 469:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 470:Generated_Source\PSoC5/ADC.c **** void ADC_SetCoherency(uint8 coherency) 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 22


 471:Generated_Source\PSoC5/ADC.c **** {
 728              		.loc 1 471 0
 729              		.cfi_startproc
 730              		@ args = 0, pretend = 0, frame = 16
 731              		@ frame_needed = 1, uses_anonymous_args = 0
 732              		@ link register save eliminated.
 733 0000 80B4     		push	{r7}
 734              		.cfi_def_cfa_offset 4
 735              		.cfi_offset 7, -4
 736 0002 85B0     		sub	sp, sp, #20
 737              		.cfi_def_cfa_offset 24
 738 0004 00AF     		add	r7, sp, #0
 739              		.cfi_def_cfa_register 7
 740 0006 0346     		mov	r3, r0
 741 0008 FB71     		strb	r3, [r7, #7]
 472:Generated_Source\PSoC5/ADC.c ****     uint8 tmpReg;
 473:Generated_Source\PSoC5/ADC.c **** 
 474:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_DEC_COHER_REG & (uint8)~ADC_DEC_SAMP_KEY_MASK;
 742              		.loc 1 474 0
 743 000a 0A4B     		ldr	r3, .L19
 744 000c 1B78     		ldrb	r3, [r3]
 745 000e DBB2     		uxtb	r3, r3
 746 0010 23F00303 		bic	r3, r3, #3
 747 0014 FB73     		strb	r3, [r7, #15]
 475:Generated_Source\PSoC5/ADC.c ****     tmpReg |= coherency & ADC_DEC_SAMP_KEY_MASK;
 748              		.loc 1 475 0
 749 0016 FB79     		ldrb	r3, [r7, #7]
 750 0018 03F00303 		and	r3, r3, #3
 751 001c DAB2     		uxtb	r2, r3
 752 001e FB7B     		ldrb	r3, [r7, #15]
 753 0020 1343     		orrs	r3, r3, r2
 754 0022 FB73     		strb	r3, [r7, #15]
 476:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_COHER_REG = tmpReg;
 755              		.loc 1 476 0
 756 0024 034A     		ldr	r2, .L19
 757 0026 FB7B     		ldrb	r3, [r7, #15]
 758 0028 1370     		strb	r3, [r2]
 477:Generated_Source\PSoC5/ADC.c **** }
 759              		.loc 1 477 0
 760 002a 00BF     		nop
 761 002c 1437     		adds	r7, r7, #20
 762              		.cfi_def_cfa_offset 4
 763 002e BD46     		mov	sp, r7
 764              		.cfi_def_cfa_register 13
 765              		@ sp needed
 766 0030 80BC     		pop	{r7}
 767              		.cfi_restore 7
 768              		.cfi_def_cfa_offset 0
 769 0032 7047     		bx	lr
 770              	.L20:
 771              		.align	2
 772              	.L19:
 773 0034 144E0040 		.word	1073761812
 774              		.cfi_endproc
 775              	.LFE5:
 776              		.size	ADC_SetCoherency, .-ADC_SetCoherency
 777              		.global	__aeabi_ui2f
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 23


 778              		.global	__aeabi_fdiv
 779              		.global	__aeabi_fmul
 780              		.global	__aeabi_f2d
 781              		.global	__aeabi_dcmpgt
 782              		.global	__aeabi_f2uiz
 783              		.section	.text.ADC_SetGCOR,"ax",%progbits
 784              		.align	2
 785              		.global	ADC_SetGCOR
 786              		.thumb
 787              		.thumb_func
 788              		.type	ADC_SetGCOR, %function
 789              	ADC_SetGCOR:
 790              	.LFB6:
 478:Generated_Source\PSoC5/ADC.c **** 
 479:Generated_Source\PSoC5/ADC.c **** 
 480:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 481:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGCOR
 482:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 483:Generated_Source\PSoC5/ADC.c **** *
 484:Generated_Source\PSoC5/ADC.c **** * Summary:
 485:Generated_Source\PSoC5/ADC.c **** *  Calculates a new GCOR value and writes it into the GCOR register. 
 486:Generated_Source\PSoC5/ADC.c **** *  The GCOR value is a 16-bit value that represents a gain of 0 to 2. 
 487:Generated_Source\PSoC5/ADC.c **** *  The ADC result is multiplied by this value before it is placed in the ADC 
 488:Generated_Source\PSoC5/ADC.c **** *  output registers. The numerical format for the GCOR value is:
 489:Generated_Source\PSoC5/ADC.c **** *  0x0000 -> 0.000
 490:Generated_Source\PSoC5/ADC.c **** *  0x8000 -> 1.000
 491:Generated_Source\PSoC5/ADC.c **** *  0xFFFF -> 1.99997
 492:Generated_Source\PSoC5/ADC.c **** *  When executing the function, the old GCOR value is multiplied by
 493:Generated_Source\PSoC5/ADC.c **** *  gainAdjust and reloaded into the GCOR register.
 494:Generated_Source\PSoC5/ADC.c **** *
 495:Generated_Source\PSoC5/ADC.c **** * Parameters:
 496:Generated_Source\PSoC5/ADC.c **** *  gainAdjust:  floating point value to set GCOR registers.
 497:Generated_Source\PSoC5/ADC.c **** *
 498:Generated_Source\PSoC5/ADC.c **** * Return:
 499:Generated_Source\PSoC5/ADC.c **** *  uint8: 0 - if GCOR value is within the expected range.
 500:Generated_Source\PSoC5/ADC.c **** *         1 - the correction value is outside GCOR value range of
 501:Generated_Source\PSoC5/ADC.c **** *             0.00 to 1.9999.
 502:Generated_Source\PSoC5/ADC.c **** *
 503:Generated_Source\PSoC5/ADC.c **** * Side Effects:  The GVAL register is set to the amount of valid bits in the
 504:Generated_Source\PSoC5/ADC.c **** *                GCOR  register minus one. If GVAL is 15 (0x0F), all 16 bits
 505:Generated_Source\PSoC5/ADC.c **** *                of the GCOR registers will be valid. If for example GVAL is
 506:Generated_Source\PSoC5/ADC.c **** *                11 (0x0B) only 12 bits will be valid. The least 4 bits will
 507:Generated_Source\PSoC5/ADC.c **** *                be lost when the GCOR value is shifted 4 places to the right.
 508:Generated_Source\PSoC5/ADC.c **** *
 509:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
 510:Generated_Source\PSoC5/ADC.c **** uint8 ADC_SetGCOR(float32 gainAdjust) 
 511:Generated_Source\PSoC5/ADC.c **** {
 791              		.loc 1 511 0
 792              		.cfi_startproc
 793              		@ args = 0, pretend = 0, frame = 16
 794              		@ frame_needed = 1, uses_anonymous_args = 0
 795 0000 80B5     		push	{r7, lr}
 796              		.cfi_def_cfa_offset 8
 797              		.cfi_offset 7, -8
 798              		.cfi_offset 14, -4
 799 0002 84B0     		sub	sp, sp, #16
 800              		.cfi_def_cfa_offset 24
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 24


 801 0004 00AF     		add	r7, sp, #0
 802              		.cfi_def_cfa_register 7
 803 0006 7860     		str	r0, [r7, #4]	@ float
 512:Generated_Source\PSoC5/ADC.c ****     uint16 tmpReg;
 513:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 514:Generated_Source\PSoC5/ADC.c ****     float32 tmpValue;
 515:Generated_Source\PSoC5/ADC.c **** 
 516:Generated_Source\PSoC5/ADC.c ****     tmpReg = ADC_gcor[ADC_Config - 1u].gcor;
 804              		.loc 1 516 0
 805 0008 254B     		ldr	r3, .L28+8
 806 000a 1B78     		ldrb	r3, [r3]
 807 000c DBB2     		uxtb	r3, r3
 808 000e 013B     		subs	r3, r3, #1
 809 0010 244A     		ldr	r2, .L28+12
 810 0012 32F82330 		ldrh	r3, [r2, r3, lsl #2]	@ movhi
 811 0016 BB81     		strh	r3, [r7, #12]	@ movhi
 517:Generated_Source\PSoC5/ADC.c ****     tmpValue = ((float32)tmpReg / (float32)ADC_IDEAL_GAIN_CONST);
 812              		.loc 1 517 0
 813 0018 BB89     		ldrh	r3, [r7, #12]
 814 001a 1846     		mov	r0, r3
 815 001c FFF7FEFF 		bl	__aeabi_ui2f
 816 0020 0346     		mov	r3, r0
 817 0022 4FF08E41 		mov	r1, #1191182336
 818 0026 1846     		mov	r0, r3
 819 0028 FFF7FEFF 		bl	__aeabi_fdiv
 820 002c 0346     		mov	r3, r0
 821 002e BB60     		str	r3, [r7, #8]	@ float
 518:Generated_Source\PSoC5/ADC.c ****     tmpValue = tmpValue * gainAdjust;
 822              		.loc 1 518 0
 823 0030 7968     		ldr	r1, [r7, #4]	@ float
 824 0032 B868     		ldr	r0, [r7, #8]	@ float
 825 0034 FFF7FEFF 		bl	__aeabi_fmul
 826 0038 0346     		mov	r3, r0
 827 003a BB60     		str	r3, [r7, #8]	@ float
 519:Generated_Source\PSoC5/ADC.c **** 
 520:Generated_Source\PSoC5/ADC.c ****     if (tmpValue > 1.9999)
 828              		.loc 1 520 0
 829 003c B868     		ldr	r0, [r7, #8]	@ float
 830 003e FFF7FEFF 		bl	__aeabi_f2d
 831 0042 15A3     		adr	r3, .L28
 832 0044 D3E90023 		ldrd	r2, [r3]
 833 0048 FFF7FEFF 		bl	__aeabi_dcmpgt
 834 004c 0346     		mov	r3, r0
 835 004e 002B     		cmp	r3, #0
 836 0050 02D0     		beq	.L27
 521:Generated_Source\PSoC5/ADC.c ****     {
 522:Generated_Source\PSoC5/ADC.c ****         status = 1u;
 837              		.loc 1 522 0
 838 0052 0123     		movs	r3, #1
 839 0054 FB73     		strb	r3, [r7, #15]
 840 0056 18E0     		b	.L24
 841              	.L27:
 523:Generated_Source\PSoC5/ADC.c ****     }
 524:Generated_Source\PSoC5/ADC.c ****     else
 525:Generated_Source\PSoC5/ADC.c ****     {
 526:Generated_Source\PSoC5/ADC.c ****         tmpValue *= (float32)ADC_IDEAL_GAIN_CONST;
 842              		.loc 1 526 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 25


 843 0058 4FF08E41 		mov	r1, #1191182336
 844 005c B868     		ldr	r0, [r7, #8]	@ float
 845 005e FFF7FEFF 		bl	__aeabi_fmul
 846 0062 0346     		mov	r3, r0
 847 0064 BB60     		str	r3, [r7, #8]	@ float
 527:Generated_Source\PSoC5/ADC.c **** 		tmpReg = (uint16)tmpValue;
 848              		.loc 1 527 0
 849 0066 B868     		ldr	r0, [r7, #8]	@ float
 850 0068 FFF7FEFF 		bl	__aeabi_f2uiz
 851 006c 0346     		mov	r3, r0
 852 006e BB81     		strh	r3, [r7, #12]	@ movhi
 528:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, tmpReg);
 853              		.loc 1 528 0
 854 0070 0D4A     		ldr	r2, .L28+16
 855 0072 BB89     		ldrh	r3, [r7, #12]	@ movhi
 856 0074 1380     		strh	r3, [r2]	@ movhi
 529:Generated_Source\PSoC5/ADC.c ****         /* Update gain array to be used by SelectConfiguration() API */
 530:Generated_Source\PSoC5/ADC.c ****        ADC_gcor[ADC_Config - 1u].gcor = tmpReg;
 857              		.loc 1 530 0
 858 0076 0A4B     		ldr	r3, .L28+8
 859 0078 1B78     		ldrb	r3, [r3]
 860 007a DBB2     		uxtb	r3, r3
 861 007c 013B     		subs	r3, r3, #1
 862 007e 0949     		ldr	r1, .L28+12
 863 0080 BA89     		ldrh	r2, [r7, #12]	@ movhi
 864 0082 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 531:Generated_Source\PSoC5/ADC.c **** 
 532:Generated_Source\PSoC5/ADC.c ****         status = 0u;
 865              		.loc 1 532 0
 866 0086 0023     		movs	r3, #0
 867 0088 FB73     		strb	r3, [r7, #15]
 868              	.L24:
 533:Generated_Source\PSoC5/ADC.c **** 
 534:Generated_Source\PSoC5/ADC.c ****     }
 535:Generated_Source\PSoC5/ADC.c ****     return(status);
 869              		.loc 1 535 0
 870 008a FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 536:Generated_Source\PSoC5/ADC.c **** }
 871              		.loc 1 536 0
 872 008c 1846     		mov	r0, r3
 873 008e 1037     		adds	r7, r7, #16
 874              		.cfi_def_cfa_offset 8
 875 0090 BD46     		mov	sp, r7
 876              		.cfi_def_cfa_register 13
 877              		@ sp needed
 878 0092 80BD     		pop	{r7, pc}
 879              	.L29:
 880 0094 AFF30080 		.align	3
 881              	.L28:
 882 0098 8F537424 		.word	611603343
 883 009c 97FFFF3F 		.word	1073741719
 884 00a0 00000000 		.word	ADC_Config
 885 00a4 08000000 		.word	ADC_gcor
 886 00a8 0C4E0040 		.word	1073761804
 887              		.cfi_endproc
 888              	.LFE6:
 889              		.size	ADC_SetGCOR, .-ADC_SetGCOR
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 26


 890              		.section	.text.ADC_ReadGCOR,"ax",%progbits
 891              		.align	2
 892              		.global	ADC_ReadGCOR
 893              		.thumb
 894              		.thumb_func
 895              		.type	ADC_ReadGCOR, %function
 896              	ADC_ReadGCOR:
 897              	.LFB7:
 537:Generated_Source\PSoC5/ADC.c **** 
 538:Generated_Source\PSoC5/ADC.c **** 
 539:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
 540:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_ReadGCOR
 541:Generated_Source\PSoC5/ADC.c **** *******************************************************************************
 542:Generated_Source\PSoC5/ADC.c **** *
 543:Generated_Source\PSoC5/ADC.c **** * Summary:
 544:Generated_Source\PSoC5/ADC.c **** *  This API returns the current GCOR register value, normalized based on the
 545:Generated_Source\PSoC5/ADC.c **** *  GVAL register settings.
 546:Generated_Source\PSoC5/ADC.c **** *  For example, if the GCOR value is 0x0812 and the GVAL register is set to 
 547:Generated_Source\PSoC5/ADC.c **** *  11 (0x0B) then the returned value will be shifted by for bits to the left.
 548:Generated_Source\PSoC5/ADC.c **** *  (Actual GCOR value = 0x0812, returned value = 0x8120)
 549:Generated_Source\PSoC5/ADC.c **** *
 550:Generated_Source\PSoC5/ADC.c **** * Parameters:
 551:Generated_Source\PSoC5/ADC.c **** *  None
 552:Generated_Source\PSoC5/ADC.c **** *
 553:Generated_Source\PSoC5/ADC.c **** * Return:
 554:Generated_Source\PSoC5/ADC.c **** *  uint16:  Normalized GCOR value.
 555:Generated_Source\PSoC5/ADC.c **** *
 556:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 557:Generated_Source\PSoC5/ADC.c **** uint16 ADC_ReadGCOR(void) 
 558:Generated_Source\PSoC5/ADC.c **** {
 898              		.loc 1 558 0
 899              		.cfi_startproc
 900              		@ args = 0, pretend = 0, frame = 8
 901              		@ frame_needed = 1, uses_anonymous_args = 0
 902              		@ link register save eliminated.
 903 0000 80B4     		push	{r7}
 904              		.cfi_def_cfa_offset 4
 905              		.cfi_offset 7, -4
 906 0002 83B0     		sub	sp, sp, #12
 907              		.cfi_def_cfa_offset 16
 908 0004 00AF     		add	r7, sp, #0
 909              		.cfi_def_cfa_register 7
 559:Generated_Source\PSoC5/ADC.c ****     uint8 gValue;
 560:Generated_Source\PSoC5/ADC.c ****     uint16 gcorValue;
 561:Generated_Source\PSoC5/ADC.c **** 
 562:Generated_Source\PSoC5/ADC.c ****     gValue = ADC_DEC_GVAL_REG;
 910              		.loc 1 562 0
 911 0006 0B4B     		ldr	r3, .L33
 912 0008 1B78     		ldrb	r3, [r3]
 913 000a 7B71     		strb	r3, [r7, #5]
 563:Generated_Source\PSoC5/ADC.c ****     gcorValue = CY_GET_REG16(ADC_DEC_GCOR_16B_PTR);
 914              		.loc 1 563 0
 915 000c 0A4B     		ldr	r3, .L33+4
 916 000e 1B88     		ldrh	r3, [r3]	@ movhi
 917 0010 FB80     		strh	r3, [r7, #6]	@ movhi
 564:Generated_Source\PSoC5/ADC.c **** 
 565:Generated_Source\PSoC5/ADC.c ****     if (gValue < ADC_MAX_GVAL)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 27


 918              		.loc 1 565 0
 919 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 920 0014 0E2B     		cmp	r3, #14
 921 0016 06D8     		bhi	.L31
 566:Generated_Source\PSoC5/ADC.c ****     {
 567:Generated_Source\PSoC5/ADC.c ****         gcorValue <<= ADC_MAX_GVAL - gValue;
 922              		.loc 1 567 0
 923 0018 FA88     		ldrh	r2, [r7, #6]
 924 001a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 925 001c C3F10F03 		rsb	r3, r3, #15
 926 0020 02FA03F3 		lsl	r3, r2, r3
 927 0024 FB80     		strh	r3, [r7, #6]	@ movhi
 928              	.L31:
 568:Generated_Source\PSoC5/ADC.c ****     }
 569:Generated_Source\PSoC5/ADC.c **** 
 570:Generated_Source\PSoC5/ADC.c ****     return gcorValue;
 929              		.loc 1 570 0
 930 0026 FB88     		ldrh	r3, [r7, #6]
 571:Generated_Source\PSoC5/ADC.c **** }
 931              		.loc 1 571 0
 932 0028 1846     		mov	r0, r3
 933 002a 0C37     		adds	r7, r7, #12
 934              		.cfi_def_cfa_offset 4
 935 002c BD46     		mov	sp, r7
 936              		.cfi_def_cfa_register 13
 937              		@ sp needed
 938 002e 80BC     		pop	{r7}
 939              		.cfi_restore 7
 940              		.cfi_def_cfa_offset 0
 941 0030 7047     		bx	lr
 942              	.L34:
 943 0032 00BF     		.align	2
 944              	.L33:
 945 0034 0E4E0040 		.word	1073761806
 946 0038 0C4E0040 		.word	1073761804
 947              		.cfi_endproc
 948              	.LFE7:
 949              		.size	ADC_ReadGCOR, .-ADC_ReadGCOR
 950              		.section	.text.ADC_StartConvert,"ax",%progbits
 951              		.align	2
 952              		.global	ADC_StartConvert
 953              		.thumb
 954              		.thumb_func
 955              		.type	ADC_StartConvert, %function
 956              	ADC_StartConvert:
 957              	.LFB8:
 572:Generated_Source\PSoC5/ADC.c **** 
 573:Generated_Source\PSoC5/ADC.c **** 
 574:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 575:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StartConvert
 576:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 577:Generated_Source\PSoC5/ADC.c **** *
 578:Generated_Source\PSoC5/ADC.c **** * Summary:
 579:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to initiate a conversion. If in the "Single Sample"
 580:Generated_Source\PSoC5/ADC.c **** *  mode, one conversion will be performed then the ADC will halt. If in
 581:Generated_Source\PSoC5/ADC.c **** *  one of the other three conversion modes, the ADC will run
 582:Generated_Source\PSoC5/ADC.c **** *  continuously until the ADC_Stop() or ADC_StopConvert() is called.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 28


 583:Generated_Source\PSoC5/ADC.c **** *
 584:Generated_Source\PSoC5/ADC.c **** * Parameters:
 585:Generated_Source\PSoC5/ADC.c **** *  None
 586:Generated_Source\PSoC5/ADC.c **** *
 587:Generated_Source\PSoC5/ADC.c **** * Return:
 588:Generated_Source\PSoC5/ADC.c **** *  None
 589:Generated_Source\PSoC5/ADC.c **** *
 590:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 591:Generated_Source\PSoC5/ADC.c **** void ADC_StartConvert(void) 
 592:Generated_Source\PSoC5/ADC.c **** {
 958              		.loc 1 592 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 1, uses_anonymous_args = 0
 962              		@ link register save eliminated.
 963 0000 80B4     		push	{r7}
 964              		.cfi_def_cfa_offset 4
 965              		.cfi_offset 7, -4
 966 0002 00AF     		add	r7, sp, #0
 967              		.cfi_def_cfa_register 7
 593:Generated_Source\PSoC5/ADC.c ****     /* Start the conversion */
 594:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG |= ADC_DEC_START_CONV;
 968              		.loc 1 594 0
 969 0004 054A     		ldr	r2, .L36
 970 0006 054B     		ldr	r3, .L36
 971 0008 1B78     		ldrb	r3, [r3]
 972 000a DBB2     		uxtb	r3, r3
 973 000c 43F00103 		orr	r3, r3, #1
 974 0010 DBB2     		uxtb	r3, r3
 975 0012 1370     		strb	r3, [r2]
 595:Generated_Source\PSoC5/ADC.c **** }
 976              		.loc 1 595 0
 977 0014 00BF     		nop
 978 0016 BD46     		mov	sp, r7
 979              		.cfi_def_cfa_register 13
 980              		@ sp needed
 981 0018 80BC     		pop	{r7}
 982              		.cfi_restore 7
 983              		.cfi_def_cfa_offset 0
 984 001a 7047     		bx	lr
 985              	.L37:
 986              		.align	2
 987              	.L36:
 988 001c 004E0040 		.word	1073761792
 989              		.cfi_endproc
 990              	.LFE8:
 991              		.size	ADC_StartConvert, .-ADC_StartConvert
 992              		.section	.text.ADC_StopConvert,"ax",%progbits
 993              		.align	2
 994              		.global	ADC_StopConvert
 995              		.thumb
 996              		.thumb_func
 997              		.type	ADC_StopConvert, %function
 998              	ADC_StopConvert:
 999              	.LFB9:
 596:Generated_Source\PSoC5/ADC.c **** 
 597:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 29


 598:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 599:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_StopConvert
 600:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 601:Generated_Source\PSoC5/ADC.c **** *
 602:Generated_Source\PSoC5/ADC.c **** * Summary:
 603:Generated_Source\PSoC5/ADC.c **** *  Forces the ADC to stop all conversions. If the ADC is in the middle of a
 604:Generated_Source\PSoC5/ADC.c **** *  conversion, the ADC will be reset and not provide a result for that partial
 605:Generated_Source\PSoC5/ADC.c **** *  conversion.
 606:Generated_Source\PSoC5/ADC.c **** *
 607:Generated_Source\PSoC5/ADC.c **** * Parameters:
 608:Generated_Source\PSoC5/ADC.c **** *  None
 609:Generated_Source\PSoC5/ADC.c **** *
 610:Generated_Source\PSoC5/ADC.c **** * Return:
 611:Generated_Source\PSoC5/ADC.c **** *  None
 612:Generated_Source\PSoC5/ADC.c **** *
 613:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 614:Generated_Source\PSoC5/ADC.c **** void ADC_StopConvert(void) 
 615:Generated_Source\PSoC5/ADC.c **** {
 1000              		.loc 1 615 0
 1001              		.cfi_startproc
 1002              		@ args = 0, pretend = 0, frame = 0
 1003              		@ frame_needed = 1, uses_anonymous_args = 0
 1004              		@ link register save eliminated.
 1005 0000 80B4     		push	{r7}
 1006              		.cfi_def_cfa_offset 4
 1007              		.cfi_offset 7, -4
 1008 0002 00AF     		add	r7, sp, #0
 1009              		.cfi_def_cfa_register 7
 616:Generated_Source\PSoC5/ADC.c ****     /* Stop all conversions */
 617:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_CR_REG &= (uint8)~ADC_DEC_START_CONV;
 1010              		.loc 1 617 0
 1011 0004 054A     		ldr	r2, .L39
 1012 0006 054B     		ldr	r3, .L39
 1013 0008 1B78     		ldrb	r3, [r3]
 1014 000a DBB2     		uxtb	r3, r3
 1015 000c 23F00103 		bic	r3, r3, #1
 1016 0010 DBB2     		uxtb	r3, r3
 1017 0012 1370     		strb	r3, [r2]
 618:Generated_Source\PSoC5/ADC.c **** }
 1018              		.loc 1 618 0
 1019 0014 00BF     		nop
 1020 0016 BD46     		mov	sp, r7
 1021              		.cfi_def_cfa_register 13
 1022              		@ sp needed
 1023 0018 80BC     		pop	{r7}
 1024              		.cfi_restore 7
 1025              		.cfi_def_cfa_offset 0
 1026 001a 7047     		bx	lr
 1027              	.L40:
 1028              		.align	2
 1029              	.L39:
 1030 001c 004E0040 		.word	1073761792
 1031              		.cfi_endproc
 1032              	.LFE9:
 1033              		.size	ADC_StopConvert, .-ADC_StopConvert
 1034              		.section	.text.ADC_IsEndConversion,"ax",%progbits
 1035              		.align	2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 30


 1036              		.global	ADC_IsEndConversion
 1037              		.thumb
 1038              		.thumb_func
 1039              		.type	ADC_IsEndConversion, %function
 1040              	ADC_IsEndConversion:
 1041              	.LFB10:
 619:Generated_Source\PSoC5/ADC.c **** 
 620:Generated_Source\PSoC5/ADC.c **** 
 621:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 622:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_IsEndConversion
 623:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 624:Generated_Source\PSoC5/ADC.c **** *
 625:Generated_Source\PSoC5/ADC.c **** * Summary:
 626:Generated_Source\PSoC5/ADC.c **** *  Checks the status that the most recently started conversion has completed.
 627:Generated_Source\PSoC5/ADC.c **** *  The status is cleared by any of ADC_GetResult8(), ADC_GetResult16() or 
 628:Generated_Source\PSoC5/ADC.c **** *  ADC_GetResult32() API.
 629:Generated_Source\PSoC5/ADC.c **** *  This function provides the programmer with two options. In one mode this 
 630:Generated_Source\PSoC5/ADC.c **** *  function immediately returns with the conversion status. In the other mode,
 631:Generated_Source\PSoC5/ADC.c **** *  the function does not return (blocking) until the conversion has completed.
 632:Generated_Source\PSoC5/ADC.c **** *
 633:Generated_Source\PSoC5/ADC.c **** * Parameters:
 634:Generated_Source\PSoC5/ADC.c **** *  retMode: Check conversion return mode. See the following table for options.
 635:Generated_Source\PSoC5/ADC.c **** *   ADC_RETURN_STATUS -   Immediately returns conversion result
 636:Generated_Source\PSoC5/ADC.c **** *                                      status.
 637:Generated_Source\PSoC5/ADC.c **** *   ADC_WAIT_FOR_RESULT - Does not return until ADC conversion
 638:Generated_Source\PSoC5/ADC.c **** *                                      is complete.
 639:Generated_Source\PSoC5/ADC.c **** *
 640:Generated_Source\PSoC5/ADC.c **** * Return:
 641:Generated_Source\PSoC5/ADC.c **** *  If a nonzero value is returned, the last conversion has completed.
 642:Generated_Source\PSoC5/ADC.c **** *  If the returned value is zero, the ADC is still calculating the last result.
 643:Generated_Source\PSoC5/ADC.c **** *
 644:Generated_Source\PSoC5/ADC.c **** * Global variables:
 645:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Used to check whether conversion is complete
 646:Generated_Source\PSoC5/ADC.c **** *  or not for single sample mode with resolution is above 16
 647:Generated_Source\PSoC5/ADC.c **** *
 648:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 649:Generated_Source\PSoC5/ADC.c **** uint8 ADC_IsEndConversion(uint8 retMode) 
 650:Generated_Source\PSoC5/ADC.c **** {
 1042              		.loc 1 650 0
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 16
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              		.cfi_def_cfa_offset 4
 1049              		.cfi_offset 7, -4
 1050 0002 85B0     		sub	sp, sp, #20
 1051              		.cfi_def_cfa_offset 24
 1052 0004 00AF     		add	r7, sp, #0
 1053              		.cfi_def_cfa_register 7
 1054 0006 0346     		mov	r3, r0
 1055 0008 FB71     		strb	r3, [r7, #7]
 1056              	.L45:
 651:Generated_Source\PSoC5/ADC.c ****     uint8 status;
 652:Generated_Source\PSoC5/ADC.c **** 
 653:Generated_Source\PSoC5/ADC.c ****     do
 654:Generated_Source\PSoC5/ADC.c ****     {
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 31


 655:Generated_Source\PSoC5/ADC.c ****         /* Check for stop convert if conversion mode is Single Sample with
 656:Generated_Source\PSoC5/ADC.c ****         *   resolution above 16 bit
 657:Generated_Source\PSoC5/ADC.c ****         */
 658:Generated_Source\PSoC5/ADC.c ****         if(ADC_stopConversion != 0u)
 1057              		.loc 1 658 0
 1058 000a 0D4B     		ldr	r3, .L47
 1059 000c 1B78     		ldrb	r3, [r3]
 1060 000e DBB2     		uxtb	r3, r3
 1061 0010 002B     		cmp	r3, #0
 1062 0012 03D0     		beq	.L42
 659:Generated_Source\PSoC5/ADC.c ****         {
 660:Generated_Source\PSoC5/ADC.c ****             status = ADC_convDone;
 1063              		.loc 1 660 0
 1064 0014 0B4B     		ldr	r3, .L47+4
 1065 0016 1B78     		ldrb	r3, [r3]
 1066 0018 FB73     		strb	r3, [r7, #15]
 1067 001a 05E0     		b	.L43
 1068              	.L42:
 661:Generated_Source\PSoC5/ADC.c ****         }
 662:Generated_Source\PSoC5/ADC.c ****         else
 663:Generated_Source\PSoC5/ADC.c ****         {
 664:Generated_Source\PSoC5/ADC.c ****             status = ADC_DEC_SR_REG & ADC_DEC_CONV_DONE;
 1069              		.loc 1 664 0
 1070 001c 0A4B     		ldr	r3, .L47+8
 1071 001e 1B78     		ldrb	r3, [r3]
 1072 0020 DBB2     		uxtb	r3, r3
 1073 0022 03F00103 		and	r3, r3, #1
 1074 0026 FB73     		strb	r3, [r7, #15]
 1075              	.L43:
 665:Generated_Source\PSoC5/ADC.c ****         }
 666:Generated_Source\PSoC5/ADC.c ****     }while((status != ADC_DEC_CONV_DONE) && (retMode == ADC_WAIT_FOR_RESULT));
 1076              		.loc 1 666 0
 1077 0028 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1078 002a 012B     		cmp	r3, #1
 1079 002c 02D0     		beq	.L44
 1080              		.loc 1 666 0 is_stmt 0 discriminator 1
 1081 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1082 0030 002B     		cmp	r3, #0
 1083 0032 EAD0     		beq	.L45
 1084              	.L44:
 667:Generated_Source\PSoC5/ADC.c **** 
 668:Generated_Source\PSoC5/ADC.c ****     return(status);
 1085              		.loc 1 668 0 is_stmt 1
 1086 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 669:Generated_Source\PSoC5/ADC.c **** }
 1087              		.loc 1 669 0
 1088 0036 1846     		mov	r0, r3
 1089 0038 1437     		adds	r7, r7, #20
 1090              		.cfi_def_cfa_offset 4
 1091 003a BD46     		mov	sp, r7
 1092              		.cfi_def_cfa_register 13
 1093              		@ sp needed
 1094 003c 80BC     		pop	{r7}
 1095              		.cfi_restore 7
 1096              		.cfi_def_cfa_offset 0
 1097 003e 7047     		bx	lr
 1098              	.L48:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 32


 1099              		.align	2
 1100              	.L47:
 1101 0040 00000000 		.word	ADC_stopConversion
 1102 0044 00000000 		.word	ADC_convDone
 1103 0048 014E0040 		.word	1073761793
 1104              		.cfi_endproc
 1105              	.LFE10:
 1106              		.size	ADC_IsEndConversion, .-ADC_IsEndConversion
 1107              		.section	.text.ADC_GetResult8,"ax",%progbits
 1108              		.align	2
 1109              		.global	ADC_GetResult8
 1110              		.thumb
 1111              		.thumb_func
 1112              		.type	ADC_GetResult8, %function
 1113              	ADC_GetResult8:
 1114              	.LFB11:
 670:Generated_Source\PSoC5/ADC.c **** 
 671:Generated_Source\PSoC5/ADC.c **** 
 672:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 673:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult8
 674:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 675:Generated_Source\PSoC5/ADC.c **** *
 676:Generated_Source\PSoC5/ADC.c **** * Summary:
 677:Generated_Source\PSoC5/ADC.c **** *  This function returns the result of an 8-bit conversion. If the
 678:Generated_Source\PSoC5/ADC.c **** *  resolution is set greater than 8-bits, the LSB of the result will be
 679:Generated_Source\PSoC5/ADC.c **** *  returned. When the ADC is configured for 8-bit single ended mode,
 680:Generated_Source\PSoC5/ADC.c **** *  the ADC_GetResult16() function should be used instead. This
 681:Generated_Source\PSoC5/ADC.c **** *  function returns only signed 8-bit values. The maximum positive
 682:Generated_Source\PSoC5/ADC.c **** *  signed 8-bit value is 127, but in singled ended 8-bit mode, the
 683:Generated_Source\PSoC5/ADC.c **** *  maximum positive value is 255.
 684:Generated_Source\PSoC5/ADC.c **** *
 685:Generated_Source\PSoC5/ADC.c **** * Parameters:
 686:Generated_Source\PSoC5/ADC.c **** *  None
 687:Generated_Source\PSoC5/ADC.c **** *
 688:Generated_Source\PSoC5/ADC.c **** * Return:
 689:Generated_Source\PSoC5/ADC.c **** *  int8: The LSB of the last ADC conversion.
 690:Generated_Source\PSoC5/ADC.c **** *
 691:Generated_Source\PSoC5/ADC.c **** * Global variables:
 692:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 693:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 694:Generated_Source\PSoC5/ADC.c **** *
 695:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 696:Generated_Source\PSoC5/ADC.c **** int8 ADC_GetResult8( void ) 
 697:Generated_Source\PSoC5/ADC.c **** {
 1115              		.loc 1 697 0
 1116              		.cfi_startproc
 1117              		@ args = 0, pretend = 0, frame = 8
 1118              		@ frame_needed = 1, uses_anonymous_args = 0
 1119              		@ link register save eliminated.
 1120 0000 80B4     		push	{r7}
 1121              		.cfi_def_cfa_offset 4
 1122              		.cfi_offset 7, -4
 1123 0002 83B0     		sub	sp, sp, #12
 1124              		.cfi_def_cfa_offset 16
 1125 0004 00AF     		add	r7, sp, #0
 1126              		.cfi_def_cfa_register 7
 698:Generated_Source\PSoC5/ADC.c ****     int8 result;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 33


 699:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 700:Generated_Source\PSoC5/ADC.c **** 
 701:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 702:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1127              		.loc 1 702 0
 1128 0006 124B     		ldr	r3, .L54
 1129 0008 1B78     		ldrb	r3, [r3]
 1130 000a DBB2     		uxtb	r3, r3
 1131 000c 03F00303 		and	r3, r3, #3
 1132 0010 FB71     		strb	r3, [r7, #7]
 703:Generated_Source\PSoC5/ADC.c **** 
 704:Generated_Source\PSoC5/ADC.c ****     result = (int8)ADC_DEC_SAMP_REG;
 1133              		.loc 1 704 0
 1134 0012 104B     		ldr	r3, .L54+4
 1135 0014 1B78     		ldrb	r3, [r3]
 1136 0016 DBB2     		uxtb	r3, r3
 1137 0018 BB71     		strb	r3, [r7, #6]
 705:Generated_Source\PSoC5/ADC.c **** 
 706:Generated_Source\PSoC5/ADC.c ****     if(coherency == ADC_DEC_SAMP_KEY_MID)
 1138              		.loc 1 706 0
 1139 001a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1140 001c 022B     		cmp	r3, #2
 1141 001e 02D1     		bne	.L50
 707:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the middle byte to unlock the coherency */
 708:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPM_REG;
 1142              		.loc 1 708 0
 1143 0020 0D4B     		ldr	r3, .L54+8
 1144 0022 1B78     		ldrb	r3, [r3]
 1145 0024 04E0     		b	.L51
 1146              	.L50:
 709:Generated_Source\PSoC5/ADC.c ****     }
 710:Generated_Source\PSoC5/ADC.c ****     else  if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1147              		.loc 1 710 0
 1148 0026 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1149 0028 032B     		cmp	r3, #3
 1150 002a 01D1     		bne	.L51
 711:Generated_Source\PSoC5/ADC.c ****     {   /* Dummy read of the MSB byte to unlock the coherency */
 712:Generated_Source\PSoC5/ADC.c ****         (void)ADC_DEC_SAMPH_REG;
 1151              		.loc 1 712 0
 1152 002c 0B4B     		ldr	r3, .L54+12
 1153 002e 1B78     		ldrb	r3, [r3]
 1154              	.L51:
 713:Generated_Source\PSoC5/ADC.c ****     }
 714:Generated_Source\PSoC5/ADC.c ****     else /*No action required for other coherency */
 715:Generated_Source\PSoC5/ADC.c ****     {
 716:Generated_Source\PSoC5/ADC.c ****     }
 717:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 718:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1155              		.loc 1 718 0
 1156 0030 0B4B     		ldr	r3, .L54+16
 1157 0032 1B78     		ldrb	r3, [r3]
 1158 0034 DBB2     		uxtb	r3, r3
 1159 0036 002B     		cmp	r3, #0
 1160 0038 02D0     		beq	.L52
 719:Generated_Source\PSoC5/ADC.c ****     {
 720:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1161              		.loc 1 720 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 34


 1162 003a 0A4B     		ldr	r3, .L54+20
 1163 003c 0022     		movs	r2, #0
 1164 003e 1A70     		strb	r2, [r3]
 1165              	.L52:
 721:Generated_Source\PSoC5/ADC.c ****     }
 722:Generated_Source\PSoC5/ADC.c ****     return (result);
 1166              		.loc 1 722 0
 1167 0040 97F90630 		ldrsb	r3, [r7, #6]
 723:Generated_Source\PSoC5/ADC.c **** }
 1168              		.loc 1 723 0
 1169 0044 1846     		mov	r0, r3
 1170 0046 0C37     		adds	r7, r7, #12
 1171              		.cfi_def_cfa_offset 4
 1172 0048 BD46     		mov	sp, r7
 1173              		.cfi_def_cfa_register 13
 1174              		@ sp needed
 1175 004a 80BC     		pop	{r7}
 1176              		.cfi_restore 7
 1177              		.cfi_def_cfa_offset 0
 1178 004c 7047     		bx	lr
 1179              	.L55:
 1180 004e 00BF     		.align	2
 1181              	.L54:
 1182 0050 144E0040 		.word	1073761812
 1183 0054 104E0040 		.word	1073761808
 1184 0058 114E0040 		.word	1073761809
 1185 005c 124E0040 		.word	1073761810
 1186 0060 00000000 		.word	ADC_stopConversion
 1187 0064 00000000 		.word	ADC_convDone
 1188              		.cfi_endproc
 1189              	.LFE11:
 1190              		.size	ADC_GetResult8, .-ADC_GetResult8
 1191              		.section	.text.ADC_GetResult16,"ax",%progbits
 1192              		.align	2
 1193              		.global	ADC_GetResult16
 1194              		.thumb
 1195              		.thumb_func
 1196              		.type	ADC_GetResult16, %function
 1197              	ADC_GetResult16:
 1198              	.LFB12:
 724:Generated_Source\PSoC5/ADC.c **** 
 725:Generated_Source\PSoC5/ADC.c **** 
 726:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 727:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult16
 728:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 729:Generated_Source\PSoC5/ADC.c **** *
 730:Generated_Source\PSoC5/ADC.c **** * Summary:
 731:Generated_Source\PSoC5/ADC.c **** *  Returns a 16-bit result for a conversion with a result that has a
 732:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 16 bits. If the resolution is set greater than 16-bits,
 733:Generated_Source\PSoC5/ADC.c **** *  it will return the 16 least significant bits of the result. When the ADC
 734:Generated_Source\PSoC5/ADC.c **** *  is configured for 16-bit single ended mode, the ADC_GetResult32()
 735:Generated_Source\PSoC5/ADC.c **** *  function should be used instead. This function returns only signed
 736:Generated_Source\PSoC5/ADC.c **** *  16-bit result, which allows a maximum positive value of 32767, not 65535.
 737:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 738:Generated_Source\PSoC5/ADC.c **** *
 739:Generated_Source\PSoC5/ADC.c **** * Parameters:
 740:Generated_Source\PSoC5/ADC.c **** *   void
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 35


 741:Generated_Source\PSoC5/ADC.c **** *
 742:Generated_Source\PSoC5/ADC.c **** * Return:
 743:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
 744:Generated_Source\PSoC5/ADC.c **** *
 745:Generated_Source\PSoC5/ADC.c **** * Global variables:
 746:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 747:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 748:Generated_Source\PSoC5/ADC.c **** *
 749:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 750:Generated_Source\PSoC5/ADC.c **** int16 ADC_GetResult16(void) 
 751:Generated_Source\PSoC5/ADC.c **** {
 1199              		.loc 1 751 0
 1200              		.cfi_startproc
 1201              		@ args = 0, pretend = 0, frame = 8
 1202              		@ frame_needed = 1, uses_anonymous_args = 0
 1203              		@ link register save eliminated.
 1204 0000 80B4     		push	{r7}
 1205              		.cfi_def_cfa_offset 4
 1206              		.cfi_offset 7, -4
 1207 0002 83B0     		sub	sp, sp, #12
 1208              		.cfi_def_cfa_offset 16
 1209 0004 00AF     		add	r7, sp, #0
 1210              		.cfi_def_cfa_register 7
 752:Generated_Source\PSoC5/ADC.c ****     uint16 result;
 753:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 754:Generated_Source\PSoC5/ADC.c **** 
 755:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 756:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1211              		.loc 1 756 0
 1212 0006 174B     		ldr	r3, .L61
 1213 0008 1B78     		ldrb	r3, [r3]
 1214 000a DBB2     		uxtb	r3, r3
 1215 000c 03F00303 		and	r3, r3, #3
 1216 0010 7B71     		strb	r3, [r7, #5]
 757:Generated_Source\PSoC5/ADC.c **** 
 758:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1217              		.loc 1 758 0
 1218 0012 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1219 0014 012B     		cmp	r3, #1
 1220 0016 03D8     		bhi	.L57
 759:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 760:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 761:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPM_REG;
 762:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 763:Generated_Source\PSoC5/ADC.c ****         #else
 764:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1221              		.loc 1 764 0
 1222 0018 134B     		ldr	r3, .L61+4
 1223 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1224 001c FB80     		strh	r3, [r7, #6]	@ movhi
 1225 001e 11E0     		b	.L58
 1226              	.L57:
 765:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 766:Generated_Source\PSoC5/ADC.c ****     }
 767:Generated_Source\PSoC5/ADC.c ****     else /* MID or HIGH */
 768:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 769:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 36


 770:Generated_Source\PSoC5/ADC.c ****             result = (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 771:Generated_Source\PSoC5/ADC.c ****         #else
 772:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMP_REG;
 1227              		.loc 1 772 0
 1228 0020 114B     		ldr	r3, .L61+4
 1229 0022 1B78     		ldrb	r3, [r3]
 1230 0024 DBB2     		uxtb	r3, r3
 1231 0026 FB80     		strh	r3, [r7, #6]	@ movhi
 773:Generated_Source\PSoC5/ADC.c ****             result |=  (uint16)((uint16)ADC_DEC_SAMPM_REG << 8u);
 1232              		.loc 1 773 0
 1233 0028 104B     		ldr	r3, .L61+8
 1234 002a 1B78     		ldrb	r3, [r3]
 1235 002c DBB2     		uxtb	r3, r3
 1236 002e 9BB2     		uxth	r3, r3
 1237 0030 1B02     		lsls	r3, r3, #8
 1238 0032 9AB2     		uxth	r2, r3
 1239 0034 FB88     		ldrh	r3, [r7, #6]	@ movhi
 1240 0036 1343     		orrs	r3, r3, r2
 1241 0038 FB80     		strh	r3, [r7, #6]	@ movhi
 774:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 775:Generated_Source\PSoC5/ADC.c ****         if(coherency == ADC_DEC_SAMP_KEY_HIGH)
 1242              		.loc 1 775 0
 1243 003a 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 1244 003c 032B     		cmp	r3, #3
 1245 003e 01D1     		bne	.L58
 776:Generated_Source\PSoC5/ADC.c ****         {   /* Dummy read of the MSB byte to unlock the coherency */
 777:Generated_Source\PSoC5/ADC.c ****             (void)ADC_DEC_SAMPH_REG;
 1246              		.loc 1 777 0
 1247 0040 0B4B     		ldr	r3, .L61+12
 1248 0042 1B78     		ldrb	r3, [r3]
 1249              	.L58:
 778:Generated_Source\PSoC5/ADC.c ****         }
 779:Generated_Source\PSoC5/ADC.c ****     }
 780:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 781:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1250              		.loc 1 781 0
 1251 0044 0B4B     		ldr	r3, .L61+16
 1252 0046 1B78     		ldrb	r3, [r3]
 1253 0048 DBB2     		uxtb	r3, r3
 1254 004a 002B     		cmp	r3, #0
 1255 004c 02D0     		beq	.L59
 782:Generated_Source\PSoC5/ADC.c ****     {
 783:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1256              		.loc 1 783 0
 1257 004e 0A4B     		ldr	r3, .L61+20
 1258 0050 0022     		movs	r2, #0
 1259 0052 1A70     		strb	r2, [r3]
 1260              	.L59:
 784:Generated_Source\PSoC5/ADC.c ****     }
 785:Generated_Source\PSoC5/ADC.c **** 
 786:Generated_Source\PSoC5/ADC.c ****     return ((int16)result);
 1261              		.loc 1 786 0
 1262 0054 B7F90630 		ldrsh	r3, [r7, #6]
 787:Generated_Source\PSoC5/ADC.c **** }
 1263              		.loc 1 787 0
 1264 0058 1846     		mov	r0, r3
 1265 005a 0C37     		adds	r7, r7, #12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 37


 1266              		.cfi_def_cfa_offset 4
 1267 005c BD46     		mov	sp, r7
 1268              		.cfi_def_cfa_register 13
 1269              		@ sp needed
 1270 005e 80BC     		pop	{r7}
 1271              		.cfi_restore 7
 1272              		.cfi_def_cfa_offset 0
 1273 0060 7047     		bx	lr
 1274              	.L62:
 1275 0062 00BF     		.align	2
 1276              	.L61:
 1277 0064 144E0040 		.word	1073761812
 1278 0068 104E0040 		.word	1073761808
 1279 006c 114E0040 		.word	1073761809
 1280 0070 124E0040 		.word	1073761810
 1281 0074 00000000 		.word	ADC_stopConversion
 1282 0078 00000000 		.word	ADC_convDone
 1283              		.cfi_endproc
 1284              	.LFE12:
 1285              		.size	ADC_GetResult16, .-ADC_GetResult16
 1286              		.section	.text.ADC_GetResult32,"ax",%progbits
 1287              		.align	2
 1288              		.global	ADC_GetResult32
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	ADC_GetResult32, %function
 1292              	ADC_GetResult32:
 1293              	.LFB13:
 788:Generated_Source\PSoC5/ADC.c **** 
 789:Generated_Source\PSoC5/ADC.c **** 
 790:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 791:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GetResult32
 792:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 793:Generated_Source\PSoC5/ADC.c **** *
 794:Generated_Source\PSoC5/ADC.c **** * Summary:
 795:Generated_Source\PSoC5/ADC.c **** *  Returns a 32-bit result for a conversion with a result that has a
 796:Generated_Source\PSoC5/ADC.c **** *  resolution of 8 to 20 bits.
 797:Generated_Source\PSoC5/ADC.c **** *  This function supports different coherency settings.
 798:Generated_Source\PSoC5/ADC.c **** *
 799:Generated_Source\PSoC5/ADC.c **** * Parameters:
 800:Generated_Source\PSoC5/ADC.c **** *  None
 801:Generated_Source\PSoC5/ADC.c **** *
 802:Generated_Source\PSoC5/ADC.c **** * Return:
 803:Generated_Source\PSoC5/ADC.c **** *  int32: Result of the last ADC conversion.
 804:Generated_Source\PSoC5/ADC.c **** *
 805:Generated_Source\PSoC5/ADC.c **** * Global variables:
 806:Generated_Source\PSoC5/ADC.c **** *  ADC_convDone:  Cleared in single sample mode with resolution
 807:Generated_Source\PSoC5/ADC.c **** *                              above 16 bits
 808:Generated_Source\PSoC5/ADC.c **** *
 809:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 810:Generated_Source\PSoC5/ADC.c **** int32 ADC_GetResult32(void) 
 811:Generated_Source\PSoC5/ADC.c **** {
 1294              		.loc 1 811 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 8
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 38


 1299 0000 80B4     		push	{r7}
 1300              		.cfi_def_cfa_offset 4
 1301              		.cfi_offset 7, -4
 1302 0002 83B0     		sub	sp, sp, #12
 1303              		.cfi_def_cfa_offset 16
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 812:Generated_Source\PSoC5/ADC.c ****     uint32 result;
 813:Generated_Source\PSoC5/ADC.c ****     uint8 coherency;
 814:Generated_Source\PSoC5/ADC.c ****     #if (CY_PSOC3)
 815:Generated_Source\PSoC5/ADC.c **** 	    uint16 tmp;
 816:Generated_Source\PSoC5/ADC.c ****     #endif /* CY_PSOC3 */
 817:Generated_Source\PSoC5/ADC.c **** 
 818:Generated_Source\PSoC5/ADC.c ****     /* Read active coherency configuration */
 819:Generated_Source\PSoC5/ADC.c ****     coherency = ADC_DEC_COHER_REG & ADC_DEC_SAMP_KEY_MASK;
 1306              		.loc 1 819 0
 1307 0006 224B     		ldr	r3, .L69
 1308 0008 1B78     		ldrb	r3, [r3]
 1309 000a DBB2     		uxtb	r3, r3
 1310 000c 03F00303 		and	r3, r3, #3
 1311 0010 FB70     		strb	r3, [r7, #3]
 820:Generated_Source\PSoC5/ADC.c **** 
 821:Generated_Source\PSoC5/ADC.c ****     if(coherency <= ADC_DEC_SAMP_KEY_LOW)
 1312              		.loc 1 821 0
 1313 0012 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1314 0014 012B     		cmp	r3, #1
 1315 0016 0BD8     		bhi	.L64
 822:Generated_Source\PSoC5/ADC.c ****     {   /*  Use default method to read result registers i.e. LSB byte read at the end*/
 823:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 824:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 825:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 826:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 827:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 828:Generated_Source\PSoC5/ADC.c ****             }
 829:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMPM_REG;
 830:Generated_Source\PSoC5/ADC.c ****             result = (result << 8u) | ADC_DEC_SAMP_REG;
 831:Generated_Source\PSoC5/ADC.c ****         #else
 832:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1316              		.loc 1 832 0
 1317 0018 1E4B     		ldr	r3, .L69+4
 1318 001a 1B88     		ldrh	r3, [r3]	@ movhi
 1319 001c 9BB2     		uxth	r3, r3
 1320 001e 7B60     		str	r3, [r7, #4]
 833:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 1321              		.loc 1 833 0
 1322 0020 7B68     		ldr	r3, [r7, #4]
 1323 0022 1B04     		lsls	r3, r3, #16
 1324 0024 1C4A     		ldr	r2, .L69+8
 1325 0026 1288     		ldrh	r2, [r2]	@ movhi
 1326 0028 92B2     		uxth	r2, r2
 1327 002a 1343     		orrs	r3, r3, r2
 1328 002c 7B60     		str	r3, [r7, #4]
 1329 002e 20E0     		b	.L65
 1330              	.L64:
 834:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 835:Generated_Source\PSoC5/ADC.c ****     }
 836:Generated_Source\PSoC5/ADC.c ****     else if(coherency == ADC_DEC_SAMP_KEY_MID)
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 39


 1331              		.loc 1 836 0
 1332 0030 FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
 1333 0032 022B     		cmp	r3, #2
 1334 0034 12D1     		bne	.L66
 837:Generated_Source\PSoC5/ADC.c ****     {   /* Read middle byte at the end */
 838:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 839:Generated_Source\PSoC5/ADC.c ****             result = ADC_DEC_SAMPH_REG;
 840:Generated_Source\PSoC5/ADC.c ****             if((result & 0x80u) != 0u)
 841:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 842:Generated_Source\PSoC5/ADC.c ****                 result |= 0xFF00u;
 843:Generated_Source\PSoC5/ADC.c ****             }
 844:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | (CY_GET_REG16(ADC_DEC_SAMP_16B_PTR));
 845:Generated_Source\PSoC5/ADC.c ****         #else
 846:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR);
 1335              		.loc 1 846 0
 1336 0036 174B     		ldr	r3, .L69+4
 1337 0038 1B88     		ldrh	r3, [r3]	@ movhi
 1338 003a 9BB2     		uxth	r3, r3
 1339 003c 7B60     		str	r3, [r7, #4]
 847:Generated_Source\PSoC5/ADC.c ****             result = (result << 16u) | ADC_DEC_SAMP_REG;
 1340              		.loc 1 847 0
 1341 003e 7B68     		ldr	r3, [r7, #4]
 1342 0040 1B04     		lsls	r3, r3, #16
 1343 0042 154A     		ldr	r2, .L69+8
 1344 0044 1278     		ldrb	r2, [r2]
 1345 0046 D2B2     		uxtb	r2, r2
 1346 0048 1343     		orrs	r3, r3, r2
 1347 004a 7B60     		str	r3, [r7, #4]
 848:Generated_Source\PSoC5/ADC.c ****             result |=  (uint32)((uint32)ADC_DEC_SAMPM_REG << 8u);
 1348              		.loc 1 848 0
 1349 004c 134B     		ldr	r3, .L69+12
 1350 004e 1B78     		ldrb	r3, [r3]
 1351 0050 DBB2     		uxtb	r3, r3
 1352 0052 1B02     		lsls	r3, r3, #8
 1353 0054 7A68     		ldr	r2, [r7, #4]
 1354 0056 1343     		orrs	r3, r3, r2
 1355 0058 7B60     		str	r3, [r7, #4]
 1356 005a 0AE0     		b	.L65
 1357              	.L66:
 849:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 850:Generated_Source\PSoC5/ADC.c ****     }
 851:Generated_Source\PSoC5/ADC.c ****     else /*ADC_DEC_SAMP_KEY_HIGH */
 852:Generated_Source\PSoC5/ADC.c ****     {
 853:Generated_Source\PSoC5/ADC.c ****         /* Read MSB byte at the end */
 854:Generated_Source\PSoC5/ADC.c ****         #if (CY_PSOC3)
 855:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 856:Generated_Source\PSoC5/ADC.c **** 			tmp = ADC_DEC_SAMPH_REG;
 857:Generated_Source\PSoC5/ADC.c ****             if((tmp & 0x80u) != 0u)
 858:Generated_Source\PSoC5/ADC.c ****             {   /* Sign extend */
 859:Generated_Source\PSoC5/ADC.c ****                 tmp |= 0xFF00u;
 860:Generated_Source\PSoC5/ADC.c ****             }
 861:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)tmp << 16u;
 862:Generated_Source\PSoC5/ADC.c ****         #else
 863:Generated_Source\PSoC5/ADC.c ****             result = CY_GET_REG16(ADC_DEC_SAMP_16B_PTR);
 1358              		.loc 1 863 0
 1359 005c 0E4B     		ldr	r3, .L69+8
 1360 005e 1B88     		ldrh	r3, [r3]	@ movhi
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 40


 1361 0060 9BB2     		uxth	r3, r3
 1362 0062 7B60     		str	r3, [r7, #4]
 864:Generated_Source\PSoC5/ADC.c ****             result |= (uint32)((uint32)CY_GET_REG16(ADC_DEC_SAMPH_16B_PTR) << 16u);
 1363              		.loc 1 864 0
 1364 0064 0B4B     		ldr	r3, .L69+4
 1365 0066 1B88     		ldrh	r3, [r3]	@ movhi
 1366 0068 9BB2     		uxth	r3, r3
 1367 006a 1B04     		lsls	r3, r3, #16
 1368 006c 7A68     		ldr	r2, [r7, #4]
 1369 006e 1343     		orrs	r3, r3, r2
 1370 0070 7B60     		str	r3, [r7, #4]
 1371              	.L65:
 865:Generated_Source\PSoC5/ADC.c ****         #endif /* CY_PSOC3 */
 866:Generated_Source\PSoC5/ADC.c ****     }
 867:Generated_Source\PSoC5/ADC.c ****     /* Clear conversion complete status in Single Sample mode with resolution above 16 bit */
 868:Generated_Source\PSoC5/ADC.c ****     if(ADC_stopConversion != 0u)
 1372              		.loc 1 868 0
 1373 0072 0B4B     		ldr	r3, .L69+16
 1374 0074 1B78     		ldrb	r3, [r3]
 1375 0076 DBB2     		uxtb	r3, r3
 1376 0078 002B     		cmp	r3, #0
 1377 007a 02D0     		beq	.L67
 869:Generated_Source\PSoC5/ADC.c ****     {
 870:Generated_Source\PSoC5/ADC.c ****         ADC_convDone = 0u;
 1378              		.loc 1 870 0
 1379 007c 094B     		ldr	r3, .L69+20
 1380 007e 0022     		movs	r2, #0
 1381 0080 1A70     		strb	r2, [r3]
 1382              	.L67:
 871:Generated_Source\PSoC5/ADC.c ****     }
 872:Generated_Source\PSoC5/ADC.c **** 
 873:Generated_Source\PSoC5/ADC.c ****     return ((int32)result);
 1383              		.loc 1 873 0
 1384 0082 7B68     		ldr	r3, [r7, #4]
 874:Generated_Source\PSoC5/ADC.c **** }
 1385              		.loc 1 874 0
 1386 0084 1846     		mov	r0, r3
 1387 0086 0C37     		adds	r7, r7, #12
 1388              		.cfi_def_cfa_offset 4
 1389 0088 BD46     		mov	sp, r7
 1390              		.cfi_def_cfa_register 13
 1391              		@ sp needed
 1392 008a 80BC     		pop	{r7}
 1393              		.cfi_restore 7
 1394              		.cfi_def_cfa_offset 0
 1395 008c 7047     		bx	lr
 1396              	.L70:
 1397 008e 00BF     		.align	2
 1398              	.L69:
 1399 0090 144E0040 		.word	1073761812
 1400 0094 124E0040 		.word	1073761810
 1401 0098 104E0040 		.word	1073761808
 1402 009c 114E0040 		.word	1073761809
 1403 00a0 00000000 		.word	ADC_stopConversion
 1404 00a4 00000000 		.word	ADC_convDone
 1405              		.cfi_endproc
 1406              	.LFE13:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 41


 1407              		.size	ADC_GetResult32, .-ADC_GetResult32
 1408              		.section	.text.ADC_SetOffset,"ax",%progbits
 1409              		.align	2
 1410              		.global	ADC_SetOffset
 1411              		.thumb
 1412              		.thumb_func
 1413              		.type	ADC_SetOffset, %function
 1414              	ADC_SetOffset:
 1415              	.LFB14:
 875:Generated_Source\PSoC5/ADC.c **** 
 876:Generated_Source\PSoC5/ADC.c **** 
 877:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 878:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetOffset
 879:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 880:Generated_Source\PSoC5/ADC.c **** *
 881:Generated_Source\PSoC5/ADC.c **** * Summary:
 882:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC offset which is used by the functions ADC_CountsTo_uVolts, 
 883:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, and ADC_CountsTo_Volts to subtract the offset from the 
 884:Generated_Source\PSoC5/ADC.c **** *  given reading before calculating the voltage conversion.
 885:Generated_Source\PSoC5/ADC.c **** *
 886:Generated_Source\PSoC5/ADC.c **** * Parameters:
 887:Generated_Source\PSoC5/ADC.c **** *  int32:  This value is a measured value when the inputs are shorted or 
 888:Generated_Source\PSoC5/ADC.c **** *          connected to the same input voltage.
 889:Generated_Source\PSoC5/ADC.c **** *
 890:Generated_Source\PSoC5/ADC.c **** * Return:
 891:Generated_Source\PSoC5/ADC.c **** *  None
 892:Generated_Source\PSoC5/ADC.c **** *
 893:Generated_Source\PSoC5/ADC.c **** * Global variables:
 894:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Modified to set the user provided offset. This
 895:Generated_Source\PSoC5/ADC.c **** *  variable is used for offset calibration purpose.
 896:Generated_Source\PSoC5/ADC.c **** *
 897:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 898:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 899:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 900:Generated_Source\PSoC5/ADC.c **** *  by subtracting the given offset.
 901:Generated_Source\PSoC5/ADC.c **** *
 902:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 903:Generated_Source\PSoC5/ADC.c **** void ADC_SetOffset(int32 offset) 
 904:Generated_Source\PSoC5/ADC.c **** {
 1416              		.loc 1 904 0
 1417              		.cfi_startproc
 1418              		@ args = 0, pretend = 0, frame = 8
 1419              		@ frame_needed = 1, uses_anonymous_args = 0
 1420              		@ link register save eliminated.
 1421 0000 80B4     		push	{r7}
 1422              		.cfi_def_cfa_offset 4
 1423              		.cfi_offset 7, -4
 1424 0002 83B0     		sub	sp, sp, #12
 1425              		.cfi_def_cfa_offset 16
 1426 0004 00AF     		add	r7, sp, #0
 1427              		.cfi_def_cfa_register 7
 1428 0006 7860     		str	r0, [r7, #4]
 905:Generated_Source\PSoC5/ADC.c **** 
 906:Generated_Source\PSoC5/ADC.c ****     ADC_Offset = offset;
 1429              		.loc 1 906 0
 1430 0008 034A     		ldr	r2, .L72
 1431 000a 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 42


 1432 000c 1360     		str	r3, [r2]
 907:Generated_Source\PSoC5/ADC.c **** }
 1433              		.loc 1 907 0
 1434 000e 00BF     		nop
 1435 0010 0C37     		adds	r7, r7, #12
 1436              		.cfi_def_cfa_offset 4
 1437 0012 BD46     		mov	sp, r7
 1438              		.cfi_def_cfa_register 13
 1439              		@ sp needed
 1440 0014 80BC     		pop	{r7}
 1441              		.cfi_restore 7
 1442              		.cfi_def_cfa_offset 0
 1443 0016 7047     		bx	lr
 1444              	.L73:
 1445              		.align	2
 1446              	.L72:
 1447 0018 00000000 		.word	ADC_Offset
 1448              		.cfi_endproc
 1449              	.LFE14:
 1450              		.size	ADC_SetOffset, .-ADC_SetOffset
 1451              		.section	.text.ADC_SetGain,"ax",%progbits
 1452              		.align	2
 1453              		.global	ADC_SetGain
 1454              		.thumb
 1455              		.thumb_func
 1456              		.type	ADC_SetGain, %function
 1457              	ADC_SetGain:
 1458              	.LFB15:
 908:Generated_Source\PSoC5/ADC.c **** 
 909:Generated_Source\PSoC5/ADC.c **** 
 910:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 911:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetGain
 912:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 913:Generated_Source\PSoC5/ADC.c **** *
 914:Generated_Source\PSoC5/ADC.c **** * Summary:
 915:Generated_Source\PSoC5/ADC.c **** *  Sets the ADC gain in counts per volt for the voltage conversion
 916:Generated_Source\PSoC5/ADC.c **** *  functions below. This value is set by default by the reference and
 917:Generated_Source\PSoC5/ADC.c **** *  input range settings. It should only be used to further calibrate the
 918:Generated_Source\PSoC5/ADC.c **** *  ADC with a known input or if an external reference is used. This
 919:Generated_Source\PSoC5/ADC.c **** *  function may also be used to calibrate an entire signal chain, not
 920:Generated_Source\PSoC5/ADC.c **** *  just the ADC.
 921:Generated_Source\PSoC5/ADC.c **** *
 922:Generated_Source\PSoC5/ADC.c **** * Parameters:
 923:Generated_Source\PSoC5/ADC.c **** *  int32: ADC gain in counts per volt.
 924:Generated_Source\PSoC5/ADC.c **** *
 925:Generated_Source\PSoC5/ADC.c **** * Return:
 926:Generated_Source\PSoC5/ADC.c **** *  None
 927:Generated_Source\PSoC5/ADC.c **** *
 928:Generated_Source\PSoC5/ADC.c **** * Global variables:
 929:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  modified to set the ADC gain in counts
 930:Generated_Source\PSoC5/ADC.c **** *   per volt.
 931:Generated_Source\PSoC5/ADC.c **** *
 932:Generated_Source\PSoC5/ADC.c **** * Side Effects:
 933:Generated_Source\PSoC5/ADC.c **** *  Affects the ADC_CountsTo_Volts,
 934:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsTo_mVolts, ADC_CountsTo_uVolts functions
 935:Generated_Source\PSoC5/ADC.c **** *  supplying the correct conversion between ADC counts and voltage.
 936:Generated_Source\PSoC5/ADC.c **** *
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 43


 937:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 938:Generated_Source\PSoC5/ADC.c **** void ADC_SetGain(int32 adcGain) 
 939:Generated_Source\PSoC5/ADC.c **** {
 1459              		.loc 1 939 0
 1460              		.cfi_startproc
 1461              		@ args = 0, pretend = 0, frame = 8
 1462              		@ frame_needed = 1, uses_anonymous_args = 0
 1463              		@ link register save eliminated.
 1464 0000 80B4     		push	{r7}
 1465              		.cfi_def_cfa_offset 4
 1466              		.cfi_offset 7, -4
 1467 0002 83B0     		sub	sp, sp, #12
 1468              		.cfi_def_cfa_offset 16
 1469 0004 00AF     		add	r7, sp, #0
 1470              		.cfi_def_cfa_register 7
 1471 0006 7860     		str	r0, [r7, #4]
 940:Generated_Source\PSoC5/ADC.c ****     ADC_CountsPerVolt = adcGain;
 1472              		.loc 1 940 0
 1473 0008 034A     		ldr	r2, .L75
 1474 000a 7B68     		ldr	r3, [r7, #4]
 1475 000c 1360     		str	r3, [r2]
 941:Generated_Source\PSoC5/ADC.c **** }
 1476              		.loc 1 941 0
 1477 000e 00BF     		nop
 1478 0010 0C37     		adds	r7, r7, #12
 1479              		.cfi_def_cfa_offset 4
 1480 0012 BD46     		mov	sp, r7
 1481              		.cfi_def_cfa_register 13
 1482              		@ sp needed
 1483 0014 80BC     		pop	{r7}
 1484              		.cfi_restore 7
 1485              		.cfi_def_cfa_offset 0
 1486 0016 7047     		bx	lr
 1487              	.L76:
 1488              		.align	2
 1489              	.L75:
 1490 0018 00000000 		.word	ADC_CountsPerVolt
 1491              		.cfi_endproc
 1492              	.LFE15:
 1493              		.size	ADC_SetGain, .-ADC_SetGain
 1494              		.section	.text.ADC_CountsTo_mVolts,"ax",%progbits
 1495              		.align	2
 1496              		.global	ADC_CountsTo_mVolts
 1497              		.thumb
 1498              		.thumb_func
 1499              		.type	ADC_CountsTo_mVolts, %function
 1500              	ADC_CountsTo_mVolts:
 1501              	.LFB16:
 942:Generated_Source\PSoC5/ADC.c **** 
 943:Generated_Source\PSoC5/ADC.c **** 
 944:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
 945:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_mVolts
 946:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
 947:Generated_Source\PSoC5/ADC.c **** *
 948:Generated_Source\PSoC5/ADC.c **** * Summary:
 949:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC counts output to mVolts as a 16-bit integer. For
 950:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measured 0.534 volts, the return value would
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 44


 951:Generated_Source\PSoC5/ADC.c **** *  be 534 mVolts.
 952:Generated_Source\PSoC5/ADC.c **** *
 953:Generated_Source\PSoC5/ADC.c **** * Parameters:
 954:Generated_Source\PSoC5/ADC.c **** *  int32: adcCounts Result from the ADC conversion.
 955:Generated_Source\PSoC5/ADC.c **** *
 956:Generated_Source\PSoC5/ADC.c **** * Return:
 957:Generated_Source\PSoC5/ADC.c **** *  int16:  Result in mVolts
 958:Generated_Source\PSoC5/ADC.c **** *
 959:Generated_Source\PSoC5/ADC.c **** * Global variables:
 960:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
 961:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
 962:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
 963:Generated_Source\PSoC5/ADC.c **** *
 964:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
 965:Generated_Source\PSoC5/ADC.c **** int16 ADC_CountsTo_mVolts(int32 adcCounts) 
 966:Generated_Source\PSoC5/ADC.c **** {
 1502              		.loc 1 966 0
 1503              		.cfi_startproc
 1504              		@ args = 0, pretend = 0, frame = 16
 1505              		@ frame_needed = 1, uses_anonymous_args = 0
 1506              		@ link register save eliminated.
 1507 0000 80B4     		push	{r7}
 1508              		.cfi_def_cfa_offset 4
 1509              		.cfi_offset 7, -4
 1510 0002 85B0     		sub	sp, sp, #20
 1511              		.cfi_def_cfa_offset 24
 1512 0004 00AF     		add	r7, sp, #0
 1513              		.cfi_def_cfa_register 7
 1514 0006 7860     		str	r0, [r7, #4]
 967:Generated_Source\PSoC5/ADC.c **** 
 968:Generated_Source\PSoC5/ADC.c ****     int16 mVolts;
 969:Generated_Source\PSoC5/ADC.c **** 
 970:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
 971:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
 972:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
 973:Generated_Source\PSoC5/ADC.c ****         {
 974:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
 975:Generated_Source\PSoC5/ADC.c ****         }
 976:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
 977:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
 978:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
 979:Generated_Source\PSoC5/ADC.c ****         {
 980:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
 981:Generated_Source\PSoC5/ADC.c ****         }
 982:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 983:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
 984:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
 985:Generated_Source\PSoC5/ADC.c ****         {
 986:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
 987:Generated_Source\PSoC5/ADC.c ****         }
 988:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
 989:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
 990:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
 991:Generated_Source\PSoC5/ADC.c ****         {
 992:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
 993:Generated_Source\PSoC5/ADC.c ****         }
 994:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 45


 995:Generated_Source\PSoC5/ADC.c **** 
 996:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
 997:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1515              		.loc 1 997 0
 1516 0008 0A4B     		ldr	r3, .L79
 1517 000a 1B68     		ldr	r3, [r3]
 1518 000c 7A68     		ldr	r2, [r7, #4]
 1519 000e D31A     		subs	r3, r2, r3
 1520 0010 7B60     		str	r3, [r7, #4]
 998:Generated_Source\PSoC5/ADC.c **** 
 999:Generated_Source\PSoC5/ADC.c ****     mVolts = (int16)(( adcCounts * ADC_1MV_COUNTS ) / ADC_CountsPerVolt) ;
 1521              		.loc 1 999 0
 1522 0012 7B68     		ldr	r3, [r7, #4]
 1523 0014 4FF47A72 		mov	r2, #1000
 1524 0018 02FB03F2 		mul	r2, r2, r3
 1525 001c 064B     		ldr	r3, .L79+4
 1526 001e 1B68     		ldr	r3, [r3]
 1527 0020 92FBF3F3 		sdiv	r3, r2, r3
 1528 0024 FB81     		strh	r3, [r7, #14]	@ movhi
1000:Generated_Source\PSoC5/ADC.c **** 
1001:Generated_Source\PSoC5/ADC.c ****     return(mVolts);
 1529              		.loc 1 1001 0
 1530 0026 B7F90E30 		ldrsh	r3, [r7, #14]
1002:Generated_Source\PSoC5/ADC.c **** }
 1531              		.loc 1 1002 0
 1532 002a 1846     		mov	r0, r3
 1533 002c 1437     		adds	r7, r7, #20
 1534              		.cfi_def_cfa_offset 4
 1535 002e BD46     		mov	sp, r7
 1536              		.cfi_def_cfa_register 13
 1537              		@ sp needed
 1538 0030 80BC     		pop	{r7}
 1539              		.cfi_restore 7
 1540              		.cfi_def_cfa_offset 0
 1541 0032 7047     		bx	lr
 1542              	.L80:
 1543              		.align	2
 1544              	.L79:
 1545 0034 00000000 		.word	ADC_Offset
 1546 0038 00000000 		.word	ADC_CountsPerVolt
 1547              		.cfi_endproc
 1548              	.LFE16:
 1549              		.size	ADC_CountsTo_mVolts, .-ADC_CountsTo_mVolts
 1550              		.global	__aeabi_i2f
 1551              		.section	.text.ADC_CountsTo_Volts,"ax",%progbits
 1552              		.align	2
 1553              		.global	ADC_CountsTo_Volts
 1554              		.thumb
 1555              		.thumb_func
 1556              		.type	ADC_CountsTo_Volts, %function
 1557              	ADC_CountsTo_Volts:
 1558              	.LFB17:
1003:Generated_Source\PSoC5/ADC.c **** 
1004:Generated_Source\PSoC5/ADC.c **** 
1005:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1006:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_Volts
1007:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 46


1008:Generated_Source\PSoC5/ADC.c **** *
1009:Generated_Source\PSoC5/ADC.c **** * Summary:
1010:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to Volts as a floating point number. For
1011:Generated_Source\PSoC5/ADC.c **** *  example, if the ADC measure a voltage of 1.2345 Volts, the
1012:Generated_Source\PSoC5/ADC.c **** *  returned result would be +1.2345 Volts.
1013:Generated_Source\PSoC5/ADC.c **** *
1014:Generated_Source\PSoC5/ADC.c **** * Parameters:
1015:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts:  Result from the ADC conversion.
1016:Generated_Source\PSoC5/ADC.c **** *
1017:Generated_Source\PSoC5/ADC.c **** * Return:
1018:Generated_Source\PSoC5/ADC.c **** *  float32: Result in Volts
1019:Generated_Source\PSoC5/ADC.c **** *
1020:Generated_Source\PSoC5/ADC.c **** * Global variables:
1021:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert to Volts.
1022:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1023:Generated_Source\PSoC5/ADC.c **** *   to Volts.
1024:Generated_Source\PSoC5/ADC.c **** *
1025:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1026:Generated_Source\PSoC5/ADC.c **** float32 ADC_CountsTo_Volts(int32 adcCounts) 
1027:Generated_Source\PSoC5/ADC.c **** {
 1559              		.loc 1 1027 0
 1560              		.cfi_startproc
 1561              		@ args = 0, pretend = 0, frame = 16
 1562              		@ frame_needed = 1, uses_anonymous_args = 0
 1563 0000 90B5     		push	{r4, r7, lr}
 1564              		.cfi_def_cfa_offset 12
 1565              		.cfi_offset 4, -12
 1566              		.cfi_offset 7, -8
 1567              		.cfi_offset 14, -4
 1568 0002 85B0     		sub	sp, sp, #20
 1569              		.cfi_def_cfa_offset 32
 1570 0004 00AF     		add	r7, sp, #0
 1571              		.cfi_def_cfa_register 7
 1572 0006 7860     		str	r0, [r7, #4]
1028:Generated_Source\PSoC5/ADC.c **** 
1029:Generated_Source\PSoC5/ADC.c ****     float32 Volts;
1030:Generated_Source\PSoC5/ADC.c **** 
1031:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1032:Generated_Source\PSoC5/ADC.c ****     #if(ADC_CFG1_DEC_DIV != 0)
1033:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG1)
1034:Generated_Source\PSoC5/ADC.c ****         {
1035:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1036:Generated_Source\PSoC5/ADC.c ****         }
1037:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG1_DEC_DIV */
1038:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG2_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 1))
1039:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG2)
1040:Generated_Source\PSoC5/ADC.c ****         {
1041:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1042:Generated_Source\PSoC5/ADC.c ****         }
1043:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1044:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG3_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 2))
1045:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG3)
1046:Generated_Source\PSoC5/ADC.c ****         {
1047:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1048:Generated_Source\PSoC5/ADC.c ****         }
1049:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1050:Generated_Source\PSoC5/ADC.c ****     #if((ADC_CFG4_DEC_DIV != 0) && (ADC_DEFAULT_NUM_CONFIGS > 3))
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 47


1051:Generated_Source\PSoC5/ADC.c ****         if(ADC_Config == ADC_CFG4)
1052:Generated_Source\PSoC5/ADC.c ****         {
1053:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1054:Generated_Source\PSoC5/ADC.c ****         }
1055:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_CFG2_DEC_DIV */
1056:Generated_Source\PSoC5/ADC.c **** 
1057:Generated_Source\PSoC5/ADC.c ****     /* Subtract ADC offset */
1058:Generated_Source\PSoC5/ADC.c ****     adcCounts -= ADC_Offset;
 1573              		.loc 1 1058 0
 1574 0008 0C4B     		ldr	r3, .L83
 1575 000a 1B68     		ldr	r3, [r3]
 1576 000c 7A68     		ldr	r2, [r7, #4]
 1577 000e D31A     		subs	r3, r2, r3
 1578 0010 7B60     		str	r3, [r7, #4]
1059:Generated_Source\PSoC5/ADC.c **** 
1060:Generated_Source\PSoC5/ADC.c ****     Volts = (float32)adcCounts / (float32)ADC_CountsPerVolt;
 1579              		.loc 1 1060 0
 1580 0012 7868     		ldr	r0, [r7, #4]
 1581 0014 FFF7FEFF 		bl	__aeabi_i2f
 1582 0018 0446     		mov	r4, r0
 1583 001a 094B     		ldr	r3, .L83+4
 1584 001c 1B68     		ldr	r3, [r3]
 1585 001e 1846     		mov	r0, r3
 1586 0020 FFF7FEFF 		bl	__aeabi_i2f
 1587 0024 0346     		mov	r3, r0
 1588 0026 1946     		mov	r1, r3
 1589 0028 2046     		mov	r0, r4
 1590 002a FFF7FEFF 		bl	__aeabi_fdiv
 1591 002e 0346     		mov	r3, r0
 1592 0030 FB60     		str	r3, [r7, #12]	@ float
1061:Generated_Source\PSoC5/ADC.c **** 
1062:Generated_Source\PSoC5/ADC.c ****     return( Volts );
 1593              		.loc 1 1062 0
 1594 0032 FB68     		ldr	r3, [r7, #12]	@ float
1063:Generated_Source\PSoC5/ADC.c **** }
 1595              		.loc 1 1063 0
 1596 0034 1846     		mov	r0, r3
 1597 0036 1437     		adds	r7, r7, #20
 1598              		.cfi_def_cfa_offset 12
 1599 0038 BD46     		mov	sp, r7
 1600              		.cfi_def_cfa_register 13
 1601              		@ sp needed
 1602 003a 90BD     		pop	{r4, r7, pc}
 1603              	.L84:
 1604              		.align	2
 1605              	.L83:
 1606 003c 00000000 		.word	ADC_Offset
 1607 0040 00000000 		.word	ADC_CountsPerVolt
 1608              		.cfi_endproc
 1609              	.LFE17:
 1610              		.size	ADC_CountsTo_Volts, .-ADC_CountsTo_Volts
 1611              		.section	.text.ADC_CountsTo_uVolts,"ax",%progbits
 1612              		.align	2
 1613              		.global	ADC_CountsTo_uVolts
 1614              		.thumb
 1615              		.thumb_func
 1616              		.type	ADC_CountsTo_uVolts, %function
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 48


 1617              	ADC_CountsTo_uVolts:
 1618              	.LFB18:
1064:Generated_Source\PSoC5/ADC.c **** 
1065:Generated_Source\PSoC5/ADC.c **** 
1066:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1067:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_CountsTo_uVolts
1068:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1069:Generated_Source\PSoC5/ADC.c **** *
1070:Generated_Source\PSoC5/ADC.c **** * Summary:
1071:Generated_Source\PSoC5/ADC.c **** *  Converts the ADC output to uVolts as a 32-bit integer. For example,
1072:Generated_Source\PSoC5/ADC.c **** *  if the ADC measured -0.02345 Volts, the return value would be -23450 uVolts.
1073:Generated_Source\PSoC5/ADC.c **** *
1074:Generated_Source\PSoC5/ADC.c **** * Parameters:
1075:Generated_Source\PSoC5/ADC.c **** *  int32 adcCounts: Result from the ADC conversion.
1076:Generated_Source\PSoC5/ADC.c **** *
1077:Generated_Source\PSoC5/ADC.c **** * Return:
1078:Generated_Source\PSoC5/ADC.c **** *  int32:  Result in uVolts
1079:Generated_Source\PSoC5/ADC.c **** *
1080:Generated_Source\PSoC5/ADC.c **** * Global variables:
1081:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  used to convert ADC counts to mVolts.
1082:Generated_Source\PSoC5/ADC.c **** *  ADC_Offset:  Used as the offset while converting ADC counts
1083:Generated_Source\PSoC5/ADC.c **** *   to mVolts.
1084:Generated_Source\PSoC5/ADC.c **** *
1085:Generated_Source\PSoC5/ADC.c **** * Theory:
1086:Generated_Source\PSoC5/ADC.c **** *  Care must be taken to not exceed the maximum value for a 31 bit signed
1087:Generated_Source\PSoC5/ADC.c **** *  number in the conversion to uVolts and at the same time not lose resolution.
1088:Generated_Source\PSoC5/ADC.c **** *
1089:Generated_Source\PSoC5/ADC.c **** *  uVolts = ((A * adcCounts) / ((int32)ADC_CountsPerVolt / B));
1090:Generated_Source\PSoC5/ADC.c **** *
1091:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1092:Generated_Source\PSoC5/ADC.c **** int32 ADC_CountsTo_uVolts(int32 adcCounts) 
1093:Generated_Source\PSoC5/ADC.c **** {
 1619              		.loc 1 1093 0
 1620              		.cfi_startproc
 1621              		@ args = 0, pretend = 0, frame = 24
 1622              		@ frame_needed = 1, uses_anonymous_args = 0
 1623              		@ link register save eliminated.
 1624 0000 80B4     		push	{r7}
 1625              		.cfi_def_cfa_offset 4
 1626              		.cfi_offset 7, -4
 1627 0002 87B0     		sub	sp, sp, #28
 1628              		.cfi_def_cfa_offset 32
 1629 0004 00AF     		add	r7, sp, #0
 1630              		.cfi_def_cfa_register 7
 1631 0006 7860     		str	r0, [r7, #4]
1094:Generated_Source\PSoC5/ADC.c **** 
1095:Generated_Source\PSoC5/ADC.c ****     int32 uVolts;
1096:Generated_Source\PSoC5/ADC.c ****     int32 coefA;
1097:Generated_Source\PSoC5/ADC.c ****     int32 coefB;
1098:Generated_Source\PSoC5/ADC.c ****     uint8 resolution;
1099:Generated_Source\PSoC5/ADC.c **** 
1100:Generated_Source\PSoC5/ADC.c ****     /* Set the resolution based on the configuration */
1101:Generated_Source\PSoC5/ADC.c ****     /* Convert adcCounts to the right align if left option selected */
1102:Generated_Source\PSoC5/ADC.c ****     if (ADC_Config == ADC_CFG1)
 1632              		.loc 1 1102 0
 1633 0008 224B     		ldr	r3, .L95
 1634 000a 1B78     		ldrb	r3, [r3]
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 49


 1635 000c DBB2     		uxtb	r3, r3
 1636 000e 012B     		cmp	r3, #1
 1637 0010 02D1     		bne	.L86
1103:Generated_Source\PSoC5/ADC.c ****     {
1104:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG1_RESOLUTION;
 1638              		.loc 1 1104 0
 1639 0012 1023     		movs	r3, #16
 1640 0014 FB73     		strb	r3, [r7, #15]
 1641 0016 11E0     		b	.L87
 1642              	.L86:
1105:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_DEC_DIV != 0)
1106:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG1_DEC_DIV;
1107:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG1_DEC_DIV */
1108:Generated_Source\PSoC5/ADC.c ****     }
1109:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG2)
 1643              		.loc 1 1109 0
 1644 0018 1E4B     		ldr	r3, .L95
 1645 001a 1B78     		ldrb	r3, [r3]
 1646 001c DBB2     		uxtb	r3, r3
 1647 001e 022B     		cmp	r3, #2
 1648 0020 02D1     		bne	.L88
1110:Generated_Source\PSoC5/ADC.c ****     {
1111:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG2_RESOLUTION;
 1649              		.loc 1 1111 0
 1650 0022 1023     		movs	r3, #16
 1651 0024 FB73     		strb	r3, [r7, #15]
 1652 0026 09E0     		b	.L87
 1653              	.L88:
1112:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG2_DEC_DIV != 0)
1113:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG2_DEC_DIV;
1114:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG2_DEC_DIV */
1115:Generated_Source\PSoC5/ADC.c ****     }
1116:Generated_Source\PSoC5/ADC.c ****     else if (ADC_Config == ADC_CFG3)
 1654              		.loc 1 1116 0
 1655 0028 1A4B     		ldr	r3, .L95
 1656 002a 1B78     		ldrb	r3, [r3]
 1657 002c DBB2     		uxtb	r3, r3
 1658 002e 032B     		cmp	r3, #3
 1659 0030 02D1     		bne	.L89
1117:Generated_Source\PSoC5/ADC.c ****     {
1118:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG3_RESOLUTION;
 1660              		.loc 1 1118 0
 1661 0032 1023     		movs	r3, #16
 1662 0034 FB73     		strb	r3, [r7, #15]
 1663 0036 01E0     		b	.L87
 1664              	.L89:
1119:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG3_DEC_DIV != 0)
1120:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG3_DEC_DIV;
1121:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG3_DEC_DIV */
1122:Generated_Source\PSoC5/ADC.c ****     }
1123:Generated_Source\PSoC5/ADC.c ****     else
1124:Generated_Source\PSoC5/ADC.c ****     {
1125:Generated_Source\PSoC5/ADC.c ****         resolution = ADC_CFG4_RESOLUTION;
 1665              		.loc 1 1125 0
 1666 0038 1023     		movs	r3, #16
 1667 003a FB73     		strb	r3, [r7, #15]
 1668              	.L87:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 50


1126:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG4_DEC_DIV != 0)
1127:Generated_Source\PSoC5/ADC.c ****             adcCounts /= ADC_CFG4_DEC_DIV;
1128:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_CFG4_DEC_DIV */
1129:Generated_Source\PSoC5/ADC.c ****     }
1130:Generated_Source\PSoC5/ADC.c **** 
1131:Generated_Source\PSoC5/ADC.c ****     switch (resolution)
 1669              		.loc 1 1131 0
 1670 003c FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 1671 003e 102B     		cmp	r3, #16
 1672 0040 05D1     		bne	.L94
1132:Generated_Source\PSoC5/ADC.c ****     {
1133:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_12) || \
1134:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_12) || \
1135:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_12) || \
1136:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_12) )
1137:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_12:
1138:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_2;
1139:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_2;
1140:Generated_Source\PSoC5/ADC.c ****                 break;
1141:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_12 */    
1142:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_13) || \
1143:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_13) || \
1144:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_13) || \
1145:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_13) )
1146:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_13:
1147:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_4;
1148:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_4;
1149:Generated_Source\PSoC5/ADC.c ****                 break;
1150:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_13 */    
1151:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_14) || \
1152:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_14) || \
1153:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_14) || \
1154:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_14) )
1155:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_14:
1156:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_8;
1157:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_8;
1158:Generated_Source\PSoC5/ADC.c ****                 break;
1159:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_14 */    
1160:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_15) || \
1161:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_15) || \
1162:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_15) || \
1163:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_15) )
1164:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_15:
1165:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_16;
1166:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_16;
1167:Generated_Source\PSoC5/ADC.c ****                 break;
1168:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_15 */    
1169:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_16) || \
1170:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_16) || \
1171:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_16) || \
1172:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_16) )
1173:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_16:
1174:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_32;
 1673              		.loc 1 1174 0
 1674 0042 47F61223 		movw	r3, #31250
 1675 0046 7B61     		str	r3, [r7, #20]
1175:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_32;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 51


 1676              		.loc 1 1175 0
 1677 0048 2023     		movs	r3, #32
 1678 004a 3B61     		str	r3, [r7, #16]
1176:Generated_Source\PSoC5/ADC.c ****                 break;
 1679              		.loc 1 1176 0
 1680 004c 04E0     		b	.L92
 1681              	.L94:
1177:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_16 */    
1178:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_17) || \
1179:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_17) || \
1180:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_17) || \
1181:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_17) )
1182:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_17:
1183:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_64;
1184:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_64;
1185:Generated_Source\PSoC5/ADC.c ****                 break;
1186:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_17 */    
1187:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_18) || \
1188:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_18) || \
1189:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_18) || \
1190:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_18) )
1191:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_18:
1192:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_125;
1193:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_125;
1194:Generated_Source\PSoC5/ADC.c ****                 break;
1195:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_18 */    
1196:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_19) || \
1197:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_19) || \
1198:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_19) || \
1199:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_19) )
1200:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_19:
1201:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_250;
1202:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_250;
1203:Generated_Source\PSoC5/ADC.c ****                 break;
1204:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_19 */    
1205:Generated_Source\PSoC5/ADC.c ****         #if( (ADC_CFG1_RESOLUTION == ADC__BITS_20) || \
1206:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG2_RESOLUTION == ADC__BITS_20) || \
1207:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG3_RESOLUTION == ADC__BITS_20) || \
1208:Generated_Source\PSoC5/ADC.c ****              (ADC_CFG4_RESOLUTION == ADC__BITS_20) )
1209:Generated_Source\PSoC5/ADC.c ****             case (uint8)ADC__BITS_20:
1210:Generated_Source\PSoC5/ADC.c ****                 coefA = ADC_1UV_COUNTS / ADC_DIVISOR_500;
1211:Generated_Source\PSoC5/ADC.c ****                 coefB = ADC_DIVISOR_500;
1212:Generated_Source\PSoC5/ADC.c ****                 break;
1213:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC__BITS_20 */    
1214:Generated_Source\PSoC5/ADC.c ****         default:    /* resolution < 12 */
1215:Generated_Source\PSoC5/ADC.c ****             /* 11 bits ADC + 2^20(1048576) = 31 bits */
1216:Generated_Source\PSoC5/ADC.c ****             coefA = ADC_1UV_COUNTS;
 1682              		.loc 1 1216 0
 1683 004e 124B     		ldr	r3, .L95+4
 1684 0050 7B61     		str	r3, [r7, #20]
1217:Generated_Source\PSoC5/ADC.c ****             coefB = ADC_DIVISOR_1;
 1685              		.loc 1 1217 0
 1686 0052 0123     		movs	r3, #1
 1687 0054 3B61     		str	r3, [r7, #16]
1218:Generated_Source\PSoC5/ADC.c ****             break;
 1688              		.loc 1 1218 0
 1689 0056 00BF     		nop
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 52


 1690              	.L92:
1219:Generated_Source\PSoC5/ADC.c ****     }
1220:Generated_Source\PSoC5/ADC.c ****     coefB = ADC_CountsPerVolt / coefB;
 1691              		.loc 1 1220 0
 1692 0058 104B     		ldr	r3, .L95+8
 1693 005a 1A68     		ldr	r2, [r3]
 1694 005c 3B69     		ldr	r3, [r7, #16]
 1695 005e 92FBF3F3 		sdiv	r3, r2, r3
 1696 0062 3B61     		str	r3, [r7, #16]
1221:Generated_Source\PSoC5/ADC.c ****     uVolts = ((coefA * adcCounts) / coefB) - ((coefA * ADC_Offset) / coefB);
 1697              		.loc 1 1221 0
 1698 0064 7B69     		ldr	r3, [r7, #20]
 1699 0066 7A68     		ldr	r2, [r7, #4]
 1700 0068 02FB03F2 		mul	r2, r2, r3
 1701 006c 3B69     		ldr	r3, [r7, #16]
 1702 006e 92FBF3F2 		sdiv	r2, r2, r3
 1703 0072 0B4B     		ldr	r3, .L95+12
 1704 0074 1B68     		ldr	r3, [r3]
 1705 0076 7969     		ldr	r1, [r7, #20]
 1706 0078 01FB03F1 		mul	r1, r1, r3
 1707 007c 3B69     		ldr	r3, [r7, #16]
 1708 007e 91FBF3F3 		sdiv	r3, r1, r3
 1709 0082 D31A     		subs	r3, r2, r3
 1710 0084 BB60     		str	r3, [r7, #8]
1222:Generated_Source\PSoC5/ADC.c **** 
1223:Generated_Source\PSoC5/ADC.c ****     return( uVolts );
 1711              		.loc 1 1223 0
 1712 0086 BB68     		ldr	r3, [r7, #8]
1224:Generated_Source\PSoC5/ADC.c **** }
 1713              		.loc 1 1224 0
 1714 0088 1846     		mov	r0, r3
 1715 008a 1C37     		adds	r7, r7, #28
 1716              		.cfi_def_cfa_offset 4
 1717 008c BD46     		mov	sp, r7
 1718              		.cfi_def_cfa_register 13
 1719              		@ sp needed
 1720 008e 80BC     		pop	{r7}
 1721              		.cfi_restore 7
 1722              		.cfi_def_cfa_offset 0
 1723 0090 7047     		bx	lr
 1724              	.L96:
 1725 0092 00BF     		.align	2
 1726              	.L95:
 1727 0094 00000000 		.word	ADC_Config
 1728 0098 40420F00 		.word	1000000
 1729 009c 00000000 		.word	ADC_CountsPerVolt
 1730 00a0 00000000 		.word	ADC_Offset
 1731              		.cfi_endproc
 1732              	.LFE18:
 1733              		.size	ADC_CountsTo_uVolts, .-ADC_CountsTo_uVolts
 1734              		.section	.text.ADC_InitConfig,"ax",%progbits
 1735              		.align	2
 1736              		.thumb
 1737              		.thumb_func
 1738              		.type	ADC_InitConfig, %function
 1739              	ADC_InitConfig:
 1740              	.LFB19:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 53


1225:Generated_Source\PSoC5/ADC.c **** 
1226:Generated_Source\PSoC5/ADC.c **** 
1227:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1228:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_InitConfig(uint8 config)
1229:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1230:Generated_Source\PSoC5/ADC.c **** *
1231:Generated_Source\PSoC5/ADC.c **** * Summary:
1232:Generated_Source\PSoC5/ADC.c **** *  Initializes all registers based on customizer settings
1233:Generated_Source\PSoC5/ADC.c **** *
1234:Generated_Source\PSoC5/ADC.c **** * Parameters:
1235:Generated_Source\PSoC5/ADC.c **** *   void
1236:Generated_Source\PSoC5/ADC.c **** *
1237:Generated_Source\PSoC5/ADC.c **** * Return:
1238:Generated_Source\PSoC5/ADC.c **** *  None
1239:Generated_Source\PSoC5/ADC.c **** *
1240:Generated_Source\PSoC5/ADC.c **** * Global variables:
1241:Generated_Source\PSoC5/ADC.c **** *  ADC_CountsPerVolt:  Used to set the default counts per volt.
1242:Generated_Source\PSoC5/ADC.c **** *
1243:Generated_Source\PSoC5/ADC.c **** * Side Effects: Rewrites the coherency set by ADC_SetCoherency()
1244:Generated_Source\PSoC5/ADC.c **** *   API to the default value.
1245:Generated_Source\PSoC5/ADC.c **** *
1246:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1247:Generated_Source\PSoC5/ADC.c **** static void ADC_InitConfig(uint8 config) 
1248:Generated_Source\PSoC5/ADC.c **** {
 1741              		.loc 1 1248 0
 1742              		.cfi_startproc
 1743              		@ args = 0, pretend = 0, frame = 8
 1744              		@ frame_needed = 1, uses_anonymous_args = 0
 1745 0000 80B5     		push	{r7, lr}
 1746              		.cfi_def_cfa_offset 8
 1747              		.cfi_offset 7, -8
 1748              		.cfi_offset 14, -4
 1749 0002 82B0     		sub	sp, sp, #8
 1750              		.cfi_def_cfa_offset 16
 1751 0004 00AF     		add	r7, sp, #0
 1752              		.cfi_def_cfa_register 7
 1753 0006 0346     		mov	r3, r0
 1754 0008 FB71     		strb	r3, [r7, #7]
1249:Generated_Source\PSoC5/ADC.c ****     ADC_stopConversion = 0u;
 1755              		.loc 1 1249 0
 1756 000a 374B     		ldr	r3, .L100
 1757 000c 0022     		movs	r2, #0
 1758 000e 1A70     		strb	r2, [r3]
1250:Generated_Source\PSoC5/ADC.c **** 
1251:Generated_Source\PSoC5/ADC.c ****     if (config == 1u)
 1759              		.loc 1 1251 0
 1760 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1761 0012 012B     		cmp	r3, #1
 1762 0014 63D1     		bne	.L99
1252:Generated_Source\PSoC5/ADC.c ****     {
1253:Generated_Source\PSoC5/ADC.c ****         /* Default Config */
1254:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_CR_REG      = ADC_CFG1_DEC_CR;
 1763              		.loc 1 1254 0
 1764 0016 354B     		ldr	r3, .L100+4
 1765 0018 3022     		movs	r2, #48
 1766 001a 1A70     		strb	r2, [r3]
1255:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT1_REG  = ADC_CFG1_DEC_SHIFT1;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 54


 1767              		.loc 1 1255 0
 1768 001c 344B     		ldr	r3, .L100+8
 1769 001e 0422     		movs	r2, #4
 1770 0020 1A70     		strb	r2, [r3]
1256:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_SHIFT2_REG  = ADC_CFG1_DEC_SHIFT2;
 1771              		.loc 1 1256 0
 1772 0022 344B     		ldr	r3, .L100+12
 1773 0024 0722     		movs	r2, #7
 1774 0026 1A70     		strb	r2, [r3]
1257:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2_REG     = ADC_CFG1_DEC_DR2;
 1775              		.loc 1 1257 0
 1776 0028 334B     		ldr	r3, .L100+16
 1777 002a 0022     		movs	r2, #0
 1778 002c 1A70     		strb	r2, [r3]
1258:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR2H_REG    = ADC_CFG1_DEC_DR2H;
 1779              		.loc 1 1258 0
 1780 002e 334B     		ldr	r3, .L100+20
 1781 0030 0022     		movs	r2, #0
 1782 0032 1A70     		strb	r2, [r3]
1259:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_DR1_REG     = ADC_CFG1_DEC_DR1;
 1783              		.loc 1 1259 0
 1784 0034 324B     		ldr	r3, .L100+24
 1785 0036 3F22     		movs	r2, #63
 1786 0038 1A70     		strb	r2, [r3]
1260:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCOR_REG    = ADC_CFG1_DEC_OCOR;
 1787              		.loc 1 1260 0
 1788 003a 324B     		ldr	r3, .L100+28
 1789 003c 0022     		movs	r2, #0
 1790 003e 1A70     		strb	r2, [r3]
1261:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORM_REG   = ADC_CFG1_DEC_OCORM;
 1791              		.loc 1 1261 0
 1792 0040 314B     		ldr	r3, .L100+32
 1793 0042 0022     		movs	r2, #0
 1794 0044 1A70     		strb	r2, [r3]
1262:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_OCORH_REG   = ADC_CFG1_DEC_OCORH;
 1795              		.loc 1 1262 0
 1796 0046 314B     		ldr	r3, .L100+36
 1797 0048 0022     		movs	r2, #0
 1798 004a 1A70     		strb	r2, [r3]
1263:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_COHER_REG   = ADC_CFG1_DEC_COHER;
 1799              		.loc 1 1263 0
 1800 004c 304B     		ldr	r3, .L100+40
 1801 004e 0122     		movs	r2, #1
 1802 0050 1A70     		strb	r2, [r3]
1264:Generated_Source\PSoC5/ADC.c **** 
1265:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR4_REG     = ADC_CFG1_DSM_CR4;
 1803              		.loc 1 1265 0
 1804 0052 304B     		ldr	r3, .L100+44
 1805 0054 5022     		movs	r2, #80
 1806 0056 1A70     		strb	r2, [r3]
1266:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR5_REG     = ADC_CFG1_DSM_CR5;
 1807              		.loc 1 1266 0
 1808 0058 2F4B     		ldr	r3, .L100+48
 1809 005a 1322     		movs	r2, #19
 1810 005c 1A70     		strb	r2, [r3]
1267:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR6_REG     = ADC_CFG1_DSM_CR6;
 1811              		.loc 1 1267 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 55


 1812 005e 2F4B     		ldr	r3, .L100+52
 1813 0060 2B22     		movs	r2, #43
 1814 0062 1A70     		strb	r2, [r3]
1268:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR7_REG     = ADC_CFG1_DSM_CR7;
 1815              		.loc 1 1268 0
 1816 0064 2E4B     		ldr	r3, .L100+56
 1817 0066 0022     		movs	r2, #0
 1818 0068 1A70     		strb	r2, [r3]
1269:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR10_REG    = ADC_CFG1_DSM_CR10;
 1819              		.loc 1 1269 0
 1820 006a 2E4B     		ldr	r3, .L100+60
 1821 006c 4422     		movs	r2, #68
 1822 006e 1A70     		strb	r2, [r3]
1270:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR11_REG    = ADC_CFG1_DSM_CR11;
 1823              		.loc 1 1270 0
 1824 0070 2D4B     		ldr	r3, .L100+64
 1825 0072 4822     		movs	r2, #72
 1826 0074 1A70     		strb	r2, [r3]
1271:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR12_REG    = ADC_CFG1_DSM_CR12;
 1827              		.loc 1 1271 0
 1828 0076 2D4B     		ldr	r3, .L100+68
 1829 0078 0222     		movs	r2, #2
 1830 007a 1A70     		strb	r2, [r3]
1272:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR14_REG    = ADC_CFG1_DSM_CR14;
 1831              		.loc 1 1272 0
 1832 007c 2C4B     		ldr	r3, .L100+72
 1833 007e 0022     		movs	r2, #0
 1834 0080 1A70     		strb	r2, [r3]
1273:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR15_REG    = ADC_CFG1_DSM_CR15;
 1835              		.loc 1 1273 0
 1836 0082 2C4B     		ldr	r3, .L100+76
 1837 0084 0022     		movs	r2, #0
 1838 0086 1A70     		strb	r2, [r3]
1274:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR16_REG    = ADC_CFG1_DSM_CR16;
 1839              		.loc 1 1274 0
 1840 0088 2B4B     		ldr	r3, .L100+80
 1841 008a 0A22     		movs	r2, #10
 1842 008c 1A70     		strb	r2, [r3]
1275:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_CR17_REG    = ADC_CFG1_DSM_CR17;
 1843              		.loc 1 1275 0
 1844 008e 2B4B     		ldr	r3, .L100+84
 1845 0090 4322     		movs	r2, #67
 1846 0092 1A70     		strb	r2, [r3]
1276:Generated_Source\PSoC5/ADC.c ****         /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1277:Generated_Source\PSoC5/ADC.c ****         ADC_SetDSMRef0Reg(ADC_CFG1_DSM_REF0);
 1847              		.loc 1 1277 0
 1848 0094 4420     		movs	r0, #68
 1849 0096 FFF7FEFF 		bl	ADC_SetDSMRef0Reg
1278:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF2_REG    = ADC_CFG1_DSM_REF2;
 1850              		.loc 1 1278 0
 1851 009a 294B     		ldr	r3, .L100+88
 1852 009c C022     		movs	r2, #192
 1853 009e 1A70     		strb	r2, [r3]
1279:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_REF3_REG    = ADC_CFG1_DSM_REF3;
 1854              		.loc 1 1279 0
 1855 00a0 284B     		ldr	r3, .L100+92
 1856 00a2 0322     		movs	r2, #3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 56


 1857 00a4 1A70     		strb	r2, [r3]
1280:Generated_Source\PSoC5/ADC.c **** 
1281:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF0_REG    = ADC_CFG1_DSM_BUF0;
 1858              		.loc 1 1281 0
 1859 00a6 284B     		ldr	r3, .L100+96
 1860 00a8 0122     		movs	r2, #1
 1861 00aa 1A70     		strb	r2, [r3]
1282:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF1_REG    = ADC_CFG1_DSM_BUF1;
 1862              		.loc 1 1282 0
 1863 00ac 274B     		ldr	r3, .L100+100
 1864 00ae 0122     		movs	r2, #1
 1865 00b0 1A70     		strb	r2, [r3]
1283:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF2_REG    = ADC_CFG1_DSM_BUF2;
 1866              		.loc 1 1283 0
 1867 00b2 274B     		ldr	r3, .L100+104
 1868 00b4 0022     		movs	r2, #0
 1869 00b6 1A70     		strb	r2, [r3]
1284:Generated_Source\PSoC5/ADC.c ****         ADC_DSM_BUF3_REG    = ADC_CFG1_DSM_BUF3;
 1870              		.loc 1 1284 0
 1871 00b8 264B     		ldr	r3, .L100+108
 1872 00ba 0A22     		movs	r2, #10
 1873 00bc 1A70     		strb	r2, [r3]
1285:Generated_Source\PSoC5/ADC.c **** 
1286:Generated_Source\PSoC5/ADC.c ****         /* To select either Vssa or Vref to -ve input of DSM depending on
1287:Generated_Source\PSoC5/ADC.c ****         *  the input  range selected.
1288:Generated_Source\PSoC5/ADC.c ****         */
1289:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INPUT_MODE)
1290:Generated_Source\PSoC5/ADC.c ****             #if (ADC_CFG1_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1291:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(1u);
1292:Generated_Source\PSoC5/ADC.c ****             #else
1293:Generated_Source\PSoC5/ADC.c ****                 ADC_AMux_Select(0u);
1294:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_IR_VSSA_TO_2VREF) */
1295:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INPUT_MODE */
1296:Generated_Source\PSoC5/ADC.c **** 
1297:Generated_Source\PSoC5/ADC.c ****         /* Set the Conversion stop if resolution is above 16 bit and conversion
1298:Generated_Source\PSoC5/ADC.c ****         *   mode is Single sample
1299:Generated_Source\PSoC5/ADC.c ****         */
1300:Generated_Source\PSoC5/ADC.c ****         #if(ADC_CFG1_RESOLUTION > 16 && \
1301:Generated_Source\PSoC5/ADC.c ****             ADC_CFG1_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1302:Generated_Source\PSoC5/ADC.c ****             ADC_stopConversion = 1u;
1303:Generated_Source\PSoC5/ADC.c ****         #endif /* Single sample with resolution above 16 bits. */
1304:Generated_Source\PSoC5/ADC.c **** 
1305:Generated_Source\PSoC5/ADC.c ****         ADC_CountsPerVolt = (int32)ADC_CFG1_COUNTS_PER_VOLT;
 1874              		.loc 1 1305 0
 1875 00be 264B     		ldr	r3, .L100+112
 1876 00c0 4FF47A52 		mov	r2, #16000
 1877 00c4 1A60     		str	r2, [r3]
1306:Generated_Source\PSoC5/ADC.c **** 
1307:Generated_Source\PSoC5/ADC.c ****         ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG1_CP_CLK_DIVIDER, 1u);
 1878              		.loc 1 1307 0
 1879 00c6 0121     		movs	r1, #1
 1880 00c8 0520     		movs	r0, #5
 1881 00ca FFF7FEFF 		bl	ADC_Ext_CP_Clk_SetDividerRegister
1308:Generated_Source\PSoC5/ADC.c **** 
1309:Generated_Source\PSoC5/ADC.c ****         /* This is only valid if there is an internal clock */
1310:Generated_Source\PSoC5/ADC.c ****         #if(ADC_DEFAULT_INTERNAL_CLK)
1311:Generated_Source\PSoC5/ADC.c ****             ADC_theACLK_SetDividerRegister(ADC_CFG1_ADC_CLK_DIVIDER, 1u);
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 57


 1882              		.loc 1 1311 0
 1883 00ce 0121     		movs	r1, #1
 1884 00d0 BA20     		movs	r0, #186
 1885 00d2 FFF7FEFF 		bl	ADC_theACLK_SetDividerRegister
1312:Generated_Source\PSoC5/ADC.c ****         #endif /* ADC_DEFAULT_INTERNAL_CLK */
1313:Generated_Source\PSoC5/ADC.c **** 
1314:Generated_Source\PSoC5/ADC.c ****         #if(ADC_IRQ_REMOVE == 0u)
1315:Generated_Source\PSoC5/ADC.c ****             /* Set interrupt vector */
1316:Generated_Source\PSoC5/ADC.c ****             (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR1);
 1886              		.loc 1 1316 0
 1887 00d6 2149     		ldr	r1, .L100+116
 1888 00d8 1D20     		movs	r0, #29
 1889 00da FFF7FEFF 		bl	CyIntSetVector
 1890              	.L99:
1317:Generated_Source\PSoC5/ADC.c ****         #endif   /* End ADC_IRQ_REMOVE */
1318:Generated_Source\PSoC5/ADC.c ****     }
1319:Generated_Source\PSoC5/ADC.c **** 
1320:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 1)
1321:Generated_Source\PSoC5/ADC.c ****         if(config == 2u)
1322:Generated_Source\PSoC5/ADC.c ****         {
1323:Generated_Source\PSoC5/ADC.c ****             /* Second Config */
1324:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG2_DEC_CR;
1325:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG2_DEC_SHIFT1;
1326:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG2_DEC_SHIFT2;
1327:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG2_DEC_DR2;
1328:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG2_DEC_DR2H;
1329:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG2_DEC_DR1;
1330:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG2_DEC_OCOR;
1331:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG2_DEC_OCORM;
1332:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG2_DEC_OCORH;
1333:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG2_DEC_COHER;
1334:Generated_Source\PSoC5/ADC.c **** 
1335:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG2_DSM_CR4;
1336:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG2_DSM_CR5;
1337:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG2_DSM_CR6;
1338:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG2_DSM_CR7;
1339:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG2_DSM_CR10;
1340:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG2_DSM_CR11;
1341:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG2_DSM_CR12;
1342:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG2_DSM_CR14;
1343:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG2_DSM_CR15;
1344:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG2_DSM_CR16;
1345:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG2_DSM_CR17;
1346:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS cirucit */
1347:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG2_DSM_REF0);
1348:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG2_DSM_REF2;
1349:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG2_DSM_REF3;
1350:Generated_Source\PSoC5/ADC.c **** 
1351:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG2_DSM_BUF0;
1352:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG2_DSM_BUF1;
1353:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG2_DSM_BUF2;
1354:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG2_DSM_BUF3;
1355:Generated_Source\PSoC5/ADC.c **** 
1356:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1357:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1358:Generated_Source\PSoC5/ADC.c ****             */
1359:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 58


1360:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1361:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG2_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1362:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1363:Generated_Source\PSoC5/ADC.c ****                 #else
1364:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1365:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1366:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1367:Generated_Source\PSoC5/ADC.c **** 
1368:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1369:Generated_Source\PSoC5/ADC.c ****             *   conversion mode is Single sample
1370:Generated_Source\PSoC5/ADC.c ****             */
1371:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG2_RESOLUTION > 16 && \
1372:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG2_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1373:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1374:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits. */
1375:Generated_Source\PSoC5/ADC.c **** 
1376:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG2_COUNTS_PER_VOLT;
1377:Generated_Source\PSoC5/ADC.c **** 
1378:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG2_CP_CLK_DIVIDER, 1u);
1379:Generated_Source\PSoC5/ADC.c **** 
1380:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1381:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1382:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG2_ADC_CLK_DIVIDER, 1u);
1383:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1384:Generated_Source\PSoC5/ADC.c **** 
1385:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1386:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1387:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR2);
1388:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1389:Generated_Source\PSoC5/ADC.c ****         }
1390:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 1 */
1391:Generated_Source\PSoC5/ADC.c **** 
1392:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 2)
1393:Generated_Source\PSoC5/ADC.c ****         if(config == 3u)
1394:Generated_Source\PSoC5/ADC.c ****         {
1395:Generated_Source\PSoC5/ADC.c ****             /* Third Config */
1396:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG3_DEC_CR;
1397:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG3_DEC_SHIFT1;
1398:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG3_DEC_SHIFT2;
1399:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG3_DEC_DR2;
1400:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG3_DEC_DR2H;
1401:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG3_DEC_DR1;
1402:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG3_DEC_OCOR;
1403:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG3_DEC_OCORM;
1404:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG3_DEC_OCORH;
1405:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG3_DEC_COHER;
1406:Generated_Source\PSoC5/ADC.c **** 
1407:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG3_DSM_CR4;
1408:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG3_DSM_CR5;
1409:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG3_DSM_CR6;
1410:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG3_DSM_CR7;
1411:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG3_DSM_CR10;
1412:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG3_DSM_CR11;
1413:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG3_DSM_CR12;
1414:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG3_DSM_CR14;
1415:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG3_DSM_CR15;
1416:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG3_DSM_CR16;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 59


1417:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG3_DSM_CR17;
1418:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1419:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG3_DSM_REF0);
1420:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG3_DSM_REF2;
1421:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG3_DSM_REF3;
1422:Generated_Source\PSoC5/ADC.c **** 
1423:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG3_DSM_BUF0;
1424:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG3_DSM_BUF1;
1425:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG3_DSM_BUF2;
1426:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG3_DSM_BUF3;
1427:Generated_Source\PSoC5/ADC.c **** 
1428:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1429:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1430:Generated_Source\PSoC5/ADC.c ****             */
1431:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1432:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG3_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1433:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1434:Generated_Source\PSoC5/ADC.c ****                 #else
1435:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1436:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1437:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1438:Generated_Source\PSoC5/ADC.c **** 
1439:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1440:Generated_Source\PSoC5/ADC.c ****                conversion  mode is Single sample */
1441:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG3_RESOLUTION > 16 && \
1442:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG3_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1443:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1444:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1445:Generated_Source\PSoC5/ADC.c **** 
1446:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG3_COUNTS_PER_VOLT;
1447:Generated_Source\PSoC5/ADC.c **** 
1448:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG3_CP_CLK_DIVIDER, 1u);
1449:Generated_Source\PSoC5/ADC.c **** 
1450:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1451:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1452:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG3_ADC_CLK_DIVIDER, 1u);
1453:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1454:Generated_Source\PSoC5/ADC.c **** 
1455:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1456:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1457:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR3);
1458:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1459:Generated_Source\PSoC5/ADC.c ****         }
1460:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 2 */
1461:Generated_Source\PSoC5/ADC.c **** 
1462:Generated_Source\PSoC5/ADC.c ****     #if(ADC_DEFAULT_NUM_CONFIGS > 3)
1463:Generated_Source\PSoC5/ADC.c ****         if (config == 4u)
1464:Generated_Source\PSoC5/ADC.c ****         {
1465:Generated_Source\PSoC5/ADC.c ****             /* Fourth Config */
1466:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_CR_REG      = ADC_CFG4_DEC_CR;
1467:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT1_REG  = ADC_CFG4_DEC_SHIFT1;
1468:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_SHIFT2_REG  = ADC_CFG4_DEC_SHIFT2;
1469:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2_REG     = ADC_CFG4_DEC_DR2;
1470:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR2H_REG    = ADC_CFG4_DEC_DR2H;
1471:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_DR1_REG     = ADC_CFG4_DEC_DR1;
1472:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCOR_REG    = ADC_CFG4_DEC_OCOR;
1473:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORM_REG   = ADC_CFG4_DEC_OCORM;
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 60


1474:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_OCORH_REG   = ADC_CFG4_DEC_OCORH;
1475:Generated_Source\PSoC5/ADC.c ****             ADC_DEC_COHER_REG   = ADC_CFG4_DEC_COHER;
1476:Generated_Source\PSoC5/ADC.c **** 
1477:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR4_REG     = ADC_CFG4_DSM_CR4;
1478:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR5_REG     = ADC_CFG4_DSM_CR5;
1479:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR6_REG     = ADC_CFG4_DSM_CR6;
1480:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR7_REG     = ADC_CFG4_DSM_CR7;
1481:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR10_REG    = ADC_CFG4_DSM_CR10;
1482:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR11_REG    = ADC_CFG4_DSM_CR11;
1483:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR12_REG    = ADC_CFG4_DSM_CR12;
1484:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR14_REG    = ADC_CFG4_DSM_CR14;
1485:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR15_REG    = ADC_CFG4_DSM_CR15;
1486:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR16_REG    = ADC_CFG4_DSM_CR16;
1487:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_CR17_REG    = ADC_CFG4_DSM_CR17;
1488:Generated_Source\PSoC5/ADC.c ****             /* Set DSM_REF0_REG by disabling and enabling the PRESS circuit */
1489:Generated_Source\PSoC5/ADC.c ****             ADC_SetDSMRef0Reg(ADC_CFG4_DSM_REF0);
1490:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF2_REG    = ADC_CFG4_DSM_REF2;
1491:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_REF3_REG    = ADC_CFG4_DSM_REF3;
1492:Generated_Source\PSoC5/ADC.c **** 
1493:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF0_REG    = ADC_CFG4_DSM_BUF0;
1494:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF1_REG    = ADC_CFG4_DSM_BUF1;
1495:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF2_REG    = ADC_CFG4_DSM_BUF2;
1496:Generated_Source\PSoC5/ADC.c ****             ADC_DSM_BUF3_REG    = ADC_CFG4_DSM_BUF3;
1497:Generated_Source\PSoC5/ADC.c **** 
1498:Generated_Source\PSoC5/ADC.c ****             /* To select either Vssa or Vref to -ve input of DSM depending on
1499:Generated_Source\PSoC5/ADC.c ****             *  the input range selected.
1500:Generated_Source\PSoC5/ADC.c ****             */
1501:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INPUT_MODE)
1502:Generated_Source\PSoC5/ADC.c ****                 #if (ADC_CFG4_INPUT_RANGE == ADC_IR_VSSA_TO_2VREF)
1503:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(1u);
1504:Generated_Source\PSoC5/ADC.c ****                 #else
1505:Generated_Source\PSoC5/ADC.c ****                     ADC_AMux_Select(0u);
1506:Generated_Source\PSoC5/ADC.c ****                 #endif /* ADC_IR_VSSA_TO_2VREF) */
1507:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INPUT_MODE */
1508:Generated_Source\PSoC5/ADC.c **** 
1509:Generated_Source\PSoC5/ADC.c ****             /* Set the Conversion stop if resolution is above 16 bit and
1510:Generated_Source\PSoC5/ADC.c ****                conversion mode is Single sample */
1511:Generated_Source\PSoC5/ADC.c ****             #if(ADC_CFG4_RESOLUTION > 16 && \
1512:Generated_Source\PSoC5/ADC.c ****                 ADC_CFG4_CONV_MODE == ADC_MODE_SINGLE_SAMPLE)
1513:Generated_Source\PSoC5/ADC.c ****                 ADC_stopConversion = 1u;
1514:Generated_Source\PSoC5/ADC.c ****             #endif /* Single sample with resolution above 16 bits */
1515:Generated_Source\PSoC5/ADC.c **** 
1516:Generated_Source\PSoC5/ADC.c ****             ADC_CountsPerVolt = (int32)ADC_CFG4_COUNTS_PER_VOLT;
1517:Generated_Source\PSoC5/ADC.c **** 
1518:Generated_Source\PSoC5/ADC.c ****             ADC_Ext_CP_Clk_SetDividerRegister(ADC_CFG4_CP_CLK_DIVIDER, 1u);
1519:Generated_Source\PSoC5/ADC.c **** 
1520:Generated_Source\PSoC5/ADC.c ****             /* This is only valid if there is an internal clock */
1521:Generated_Source\PSoC5/ADC.c ****             #if(ADC_DEFAULT_INTERNAL_CLK)
1522:Generated_Source\PSoC5/ADC.c ****                 ADC_theACLK_SetDividerRegister(ADC_CFG4_ADC_CLK_DIVIDER, 1u);
1523:Generated_Source\PSoC5/ADC.c ****             #endif /* ADC_DEFAULT_INTERNAL_CLK */
1524:Generated_Source\PSoC5/ADC.c **** 
1525:Generated_Source\PSoC5/ADC.c ****             #if(ADC_IRQ_REMOVE == 0u)
1526:Generated_Source\PSoC5/ADC.c ****                 /* Set interrupt vector */
1527:Generated_Source\PSoC5/ADC.c ****                 (void)CyIntSetVector(ADC_INTC_NUMBER, &ADC_ISR4);
1528:Generated_Source\PSoC5/ADC.c ****             #endif   /* End ADC_IRQ_REMOVE */
1529:Generated_Source\PSoC5/ADC.c ****         }
1530:Generated_Source\PSoC5/ADC.c ****     #endif /* ADC_DEFAULT_NUM_CONFIGS > 3 */
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 61


1531:Generated_Source\PSoC5/ADC.c **** }
 1891              		.loc 1 1531 0
 1892 00de 00BF     		nop
 1893 00e0 0837     		adds	r7, r7, #8
 1894              		.cfi_def_cfa_offset 8
 1895 00e2 BD46     		mov	sp, r7
 1896              		.cfi_def_cfa_register 13
 1897              		@ sp needed
 1898 00e4 80BD     		pop	{r7, pc}
 1899              	.L101:
 1900 00e6 00BF     		.align	2
 1901              	.L100:
 1902 00e8 00000000 		.word	ADC_stopConversion
 1903 00ec 004E0040 		.word	1073761792
 1904 00f0 024E0040 		.word	1073761794
 1905 00f4 034E0040 		.word	1073761795
 1906 00f8 044E0040 		.word	1073761796
 1907 00fc 054E0040 		.word	1073761797
 1908 0100 064E0040 		.word	1073761798
 1909 0104 084E0040 		.word	1073761800
 1910 0108 094E0040 		.word	1073761801
 1911 010c 0A4E0040 		.word	1073761802
 1912 0110 144E0040 		.word	1073761812
 1913 0114 84580040 		.word	1073764484
 1914 0118 85580040 		.word	1073764485
 1915 011c 86580040 		.word	1073764486
 1916 0120 87580040 		.word	1073764487
 1917 0124 8A580040 		.word	1073764490
 1918 0128 8B580040 		.word	1073764491
 1919 012c 8C580040 		.word	1073764492
 1920 0130 8E580040 		.word	1073764494
 1921 0134 8F580040 		.word	1073764495
 1922 0138 90580040 		.word	1073764496
 1923 013c 91580040 		.word	1073764497
 1924 0140 94580040 		.word	1073764500
 1925 0144 95580040 		.word	1073764501
 1926 0148 9A580040 		.word	1073764506
 1927 014c 9B580040 		.word	1073764507
 1928 0150 9C580040 		.word	1073764508
 1929 0154 9D580040 		.word	1073764509
 1930 0158 00000000 		.word	ADC_CountsPerVolt
 1931 015c 00000000 		.word	ADC_ISR1
 1932              		.cfi_endproc
 1933              	.LFE19:
 1934              		.size	ADC_InitConfig, .-ADC_InitConfig
 1935              		.section	.text.ADC_SelectConfiguration,"ax",%progbits
 1936              		.align	2
 1937              		.global	ADC_SelectConfiguration
 1938              		.thumb
 1939              		.thumb_func
 1940              		.type	ADC_SelectConfiguration, %function
 1941              	ADC_SelectConfiguration:
 1942              	.LFB20:
1532:Generated_Source\PSoC5/ADC.c **** 
1533:Generated_Source\PSoC5/ADC.c **** 
1534:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1535:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SelectCofiguration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 62


1536:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1537:Generated_Source\PSoC5/ADC.c **** *
1538:Generated_Source\PSoC5/ADC.c **** * Summary:
1539:Generated_Source\PSoC5/ADC.c **** *  Sets one of up to four ADC configurations. Before setting the new
1540:Generated_Source\PSoC5/ADC.c **** *  configuration, the ADC is stopped and powered down. After setting
1541:Generated_Source\PSoC5/ADC.c **** *  the new configuration, the ADC can be powered and conversion
1542:Generated_Source\PSoC5/ADC.c **** *  can be restarted depending up on the value of second parameter
1543:Generated_Source\PSoC5/ADC.c **** *  restart. If the value of this parameter is 1, then ADC will be
1544:Generated_Source\PSoC5/ADC.c **** *  restarted. If this value is zero, then user must call ADC_Start
1545:Generated_Source\PSoC5/ADC.c **** *  and ADC_StartConvert() to restart the conversion.
1546:Generated_Source\PSoC5/ADC.c **** *
1547:Generated_Source\PSoC5/ADC.c **** * Parameters:
1548:Generated_Source\PSoC5/ADC.c **** *  config:  configuration user wants to select.
1549:Generated_Source\PSoC5/ADC.c **** *           Valid range: 1..4
1550:Generated_Source\PSoC5/ADC.c **** *  restart:  Restart option. 1 means start the ADC and restart the conversion.
1551:Generated_Source\PSoC5/ADC.c **** *                            0 means do not start the ADC and conversion.
1552:Generated_Source\PSoC5/ADC.c **** *
1553:Generated_Source\PSoC5/ADC.c **** * Return:
1554:Generated_Source\PSoC5/ADC.c **** *  None
1555:Generated_Source\PSoC5/ADC.c **** *
1556:Generated_Source\PSoC5/ADC.c **** * Side Effects: 
1557:Generated_Source\PSoC5/ADC.c **** *  Enables internal interrupt.
1558:Generated_Source\PSoC5/ADC.c **** *
1559:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1560:Generated_Source\PSoC5/ADC.c **** void ADC_SelectConfiguration(uint8 config, uint8 restart)
1561:Generated_Source\PSoC5/ADC.c ****                                               
1562:Generated_Source\PSoC5/ADC.c **** {
 1943              		.loc 1 1562 0
 1944              		.cfi_startproc
 1945              		@ args = 0, pretend = 0, frame = 8
 1946              		@ frame_needed = 1, uses_anonymous_args = 0
 1947 0000 80B5     		push	{r7, lr}
 1948              		.cfi_def_cfa_offset 8
 1949              		.cfi_offset 7, -8
 1950              		.cfi_offset 14, -4
 1951 0002 82B0     		sub	sp, sp, #8
 1952              		.cfi_def_cfa_offset 16
 1953 0004 00AF     		add	r7, sp, #0
 1954              		.cfi_def_cfa_register 7
 1955 0006 0346     		mov	r3, r0
 1956 0008 0A46     		mov	r2, r1
 1957 000a FB71     		strb	r3, [r7, #7]
 1958 000c 1346     		mov	r3, r2
 1959 000e BB71     		strb	r3, [r7, #6]
1563:Generated_Source\PSoC5/ADC.c ****     /* Check whether the configuration number is valid or not */
1564:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 1960              		.loc 1 1564 0
 1961 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1962 0012 002B     		cmp	r3, #0
 1963 0014 29D0     		beq	.L103
 1964              		.loc 1 1564 0 is_stmt 0 discriminator 1
 1965 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1966 0018 012B     		cmp	r3, #1
 1967 001a 26D8     		bhi	.L103
1565:Generated_Source\PSoC5/ADC.c ****     {
1566:Generated_Source\PSoC5/ADC.c ****         /* Set the flag to ensure Start() API doesn't override the 
1567:Generated_Source\PSoC5/ADC.c **** 		*  selected configuration
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 63


1568:Generated_Source\PSoC5/ADC.c **** 		*/
1569:Generated_Source\PSoC5/ADC.c ****         if(ADC_initVar == 0u)
 1968              		.loc 1 1569 0 is_stmt 1
 1969 001c 164B     		ldr	r3, .L107
 1970 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1971 0020 002B     		cmp	r3, #0
 1972 0022 02D1     		bne	.L104
1570:Generated_Source\PSoC5/ADC.c ****         {
1571:Generated_Source\PSoC5/ADC.c ****             ADC_started = 1u;
 1973              		.loc 1 1571 0
 1974 0024 154B     		ldr	r3, .L107+4
 1975 0026 0122     		movs	r2, #1
 1976 0028 1A70     		strb	r2, [r3]
 1977              	.L104:
1572:Generated_Source\PSoC5/ADC.c ****         }
1573:Generated_Source\PSoC5/ADC.c **** 
1574:Generated_Source\PSoC5/ADC.c ****         /* Update the config flag */
1575:Generated_Source\PSoC5/ADC.c ****         ADC_Config = config;
 1978              		.loc 1 1575 0
 1979 002a 154A     		ldr	r2, .L107+8
 1980 002c FB79     		ldrb	r3, [r7, #7]
 1981 002e 1370     		strb	r3, [r2]
1576:Generated_Source\PSoC5/ADC.c **** 
1577:Generated_Source\PSoC5/ADC.c ****         /* Stop the ADC  */
1578:Generated_Source\PSoC5/ADC.c ****         ADC_Stop();
 1982              		.loc 1 1578 0
 1983 0030 FFF7FEFF 		bl	ADC_Stop
1579:Generated_Source\PSoC5/ADC.c **** 
1580:Generated_Source\PSoC5/ADC.c ****         /* Set the  ADC registers based on the configuration */
1581:Generated_Source\PSoC5/ADC.c ****         ADC_InitConfig(config);
 1984              		.loc 1 1581 0
 1985 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1986 0036 1846     		mov	r0, r3
 1987 0038 FFF7FEFF 		bl	ADC_InitConfig
1582:Generated_Source\PSoC5/ADC.c **** 
1583:Generated_Source\PSoC5/ADC.c ****         /* Compensate the gain */
1584:Generated_Source\PSoC5/ADC.c ****         ADC_DEC_GVAL_REG = ADC_gcor[config - 1u].gval;
 1988              		.loc 1 1584 0
 1989 003c 114A     		ldr	r2, .L107+12
 1990 003e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1991 0040 013B     		subs	r3, r3, #1
 1992 0042 1149     		ldr	r1, .L107+16
 1993 0044 9B00     		lsls	r3, r3, #2
 1994 0046 0B44     		add	r3, r3, r1
 1995 0048 9B78     		ldrb	r3, [r3, #2]	@ zero_extendqisi2
 1996 004a 1370     		strb	r3, [r2]
1585:Generated_Source\PSoC5/ADC.c ****         CY_SET_REG16(ADC_DEC_GCOR_16B_PTR, ADC_gcor[config - 1u].gcor);
 1997              		.loc 1 1585 0
 1998 004c 0F4A     		ldr	r2, .L107+20
 1999 004e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2000 0050 013B     		subs	r3, r3, #1
 2001 0052 0D49     		ldr	r1, .L107+16
 2002 0054 31F82330 		ldrh	r3, [r1, r3, lsl #2]
 2003 0058 1380     		strh	r3, [r2]	@ movhi
1586:Generated_Source\PSoC5/ADC.c **** 
1587:Generated_Source\PSoC5/ADC.c ****         if(restart == 1u)
 2004              		.loc 1 1587 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 64


 2005 005a BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2006 005c 012B     		cmp	r3, #1
 2007 005e 07D1     		bne	.L106
1588:Generated_Source\PSoC5/ADC.c ****         {
1589:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC */
1590:Generated_Source\PSoC5/ADC.c ****             ADC_Start();
 2008              		.loc 1 1590 0
 2009 0060 FFF7FEFF 		bl	ADC_Start
1591:Generated_Source\PSoC5/ADC.c **** 
1592:Generated_Source\PSoC5/ADC.c ****             /* Restart the ADC conversion */
1593:Generated_Source\PSoC5/ADC.c ****             ADC_StartConvert();
 2010              		.loc 1 1593 0
 2011 0064 FFF7FEFF 		bl	ADC_StartConvert
1587:Generated_Source\PSoC5/ADC.c ****         {
 2012              		.loc 1 1587 0
 2013 0068 02E0     		b	.L106
 2014              	.L103:
1594:Generated_Source\PSoC5/ADC.c ****         }
1595:Generated_Source\PSoC5/ADC.c ****     }
1596:Generated_Source\PSoC5/ADC.c ****     else
1597:Generated_Source\PSoC5/ADC.c ****     {
1598:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1599:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2015              		.loc 1 1599 0 discriminator 1
 2016 006a 0020     		movs	r0, #0
 2017 006c FFF7FEFF 		bl	CyHalt
 2018              	.L106:
1600:Generated_Source\PSoC5/ADC.c ****     }
1601:Generated_Source\PSoC5/ADC.c **** }
 2019              		.loc 1 1601 0
 2020 0070 00BF     		nop
 2021 0072 0837     		adds	r7, r7, #8
 2022              		.cfi_def_cfa_offset 8
 2023 0074 BD46     		mov	sp, r7
 2024              		.cfi_def_cfa_register 13
 2025              		@ sp needed
 2026 0076 80BD     		pop	{r7, pc}
 2027              	.L108:
 2028              		.align	2
 2029              	.L107:
 2030 0078 00000000 		.word	ADC_initVar
 2031 007c 00000000 		.word	ADC_started
 2032 0080 00000000 		.word	ADC_Config
 2033 0084 0E4E0040 		.word	1073761806
 2034 0088 08000000 		.word	ADC_gcor
 2035 008c 0C4E0040 		.word	1073761804
 2036              		.cfi_endproc
 2037              	.LFE20:
 2038              		.size	ADC_SelectConfiguration, .-ADC_SelectConfiguration
 2039              		.section	.text.ADC_GainCompensation,"ax",%progbits
 2040              		.align	2
 2041              		.thumb
 2042              		.thumb_func
 2043              		.type	ADC_GainCompensation, %function
 2044              	ADC_GainCompensation:
 2045              	.LFB21:
1602:Generated_Source\PSoC5/ADC.c **** 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 65


1603:Generated_Source\PSoC5/ADC.c **** 
1604:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1605:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_GainCompensation
1606:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1607:Generated_Source\PSoC5/ADC.c **** *
1608:Generated_Source\PSoC5/ADC.c **** * Summary:
1609:Generated_Source\PSoC5/ADC.c **** *  This API calculates the trim value and then store this to gcor structure.
1610:Generated_Source\PSoC5/ADC.c **** *
1611:Generated_Source\PSoC5/ADC.c **** * Parameters:
1612:Generated_Source\PSoC5/ADC.c **** *  inputRange:  input range for which trim value is to be calculated.
1613:Generated_Source\PSoC5/ADC.c **** *  IdealDecGain:  Ideal Decimator gain for the selected resolution and
1614:Generated_Source\PSoC5/ADC.c **** *                 conversion  mode.
1615:Generated_Source\PSoC5/ADC.c **** *  IdealOddDecGain:  Ideal odd decimation gain for the selected resolution and
1616:Generated_Source\PSoC5/ADC.c ****                      conversion mode.
1617:Generated_Source\PSoC5/ADC.c **** *  resolution:  Resolution to select the proper flash location for trim value.
1618:Generated_Source\PSoC5/ADC.c **** *  config:      Specifies the configuration number
1619:Generated_Source\PSoC5/ADC.c **** *               Valid range: 1..4
1620:Generated_Source\PSoC5/ADC.c **** *
1621:Generated_Source\PSoC5/ADC.c **** * Return:
1622:Generated_Source\PSoC5/ADC.c **** *  None
1623:Generated_Source\PSoC5/ADC.c **** *
1624:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1625:Generated_Source\PSoC5/ADC.c **** static void ADC_GainCompensation(uint8 inputRange, uint16 idealDecGain, uint16 idealOddDecGain,
1626:Generated_Source\PSoC5/ADC.c ****                               uint8 resolution, uint8 config) 
1627:Generated_Source\PSoC5/ADC.c **** {
 2046              		.loc 1 1627 0
 2047              		.cfi_startproc
 2048              		@ args = 4, pretend = 0, frame = 24
 2049              		@ frame_needed = 1, uses_anonymous_args = 0
 2050 0000 90B5     		push	{r4, r7, lr}
 2051              		.cfi_def_cfa_offset 12
 2052              		.cfi_offset 4, -12
 2053              		.cfi_offset 7, -8
 2054              		.cfi_offset 14, -4
 2055 0002 87B0     		sub	sp, sp, #28
 2056              		.cfi_def_cfa_offset 40
 2057 0004 00AF     		add	r7, sp, #0
 2058              		.cfi_def_cfa_register 7
 2059 0006 0446     		mov	r4, r0
 2060 0008 0846     		mov	r0, r1
 2061 000a 1146     		mov	r1, r2
 2062 000c 1A46     		mov	r2, r3
 2063 000e 2346     		mov	r3, r4
 2064 0010 FB71     		strb	r3, [r7, #7]
 2065 0012 0346     		mov	r3, r0	@ movhi
 2066 0014 BB80     		strh	r3, [r7, #4]	@ movhi
 2067 0016 0B46     		mov	r3, r1	@ movhi
 2068 0018 7B80     		strh	r3, [r7, #2]	@ movhi
 2069 001a 1346     		mov	r3, r2
 2070 001c BB71     		strb	r3, [r7, #6]
1628:Generated_Source\PSoC5/ADC.c ****     int8 flash;
1629:Generated_Source\PSoC5/ADC.c **** 	int32 normalised;
1630:Generated_Source\PSoC5/ADC.c **** 	uint16 gcorValue;
1631:Generated_Source\PSoC5/ADC.c ****     uint32 gcorTmp;
1632:Generated_Source\PSoC5/ADC.c **** 
1633:Generated_Source\PSoC5/ADC.c ****     if((config > 0u) && (config <= ADC_DEFAULT_NUM_CONFIGS))
 2071              		.loc 1 1633 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 66


 2072 001e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2073 0022 002B     		cmp	r3, #0
 2074 0024 00F08B80 		beq	.L110
 2075              		.loc 1 1633 0 is_stmt 0 discriminator 1
 2076 0028 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2077 002c 012B     		cmp	r3, #1
 2078 002e 00F28680 		bhi	.L110
1634:Generated_Source\PSoC5/ADC.c ****     {
1635:Generated_Source\PSoC5/ADC.c ****         switch(inputRange)
 2079              		.loc 1 1635 0 is_stmt 1
 2080 0032 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 2081 0034 013B     		subs	r3, r3, #1
 2082 0036 092B     		cmp	r3, #9
 2083 0038 4AD8     		bhi	.L111
 2084 003a 01A2     		adr	r2, .L113
 2085 003c 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 2086              		.p2align 2
 2087              	.L113:
 2088 0040 69000000 		.word	.L112+1
 2089 0044 D1000000 		.word	.L111+1
 2090 0048 D1000000 		.word	.L111+1
 2091 004c 69000000 		.word	.L112+1
 2092 0050 D1000000 		.word	.L111+1
 2093 0054 D1000000 		.word	.L111+1
 2094 0058 83000000 		.word	.L114+1
 2095 005c 9D000000 		.word	.L115+1
 2096 0060 D1000000 		.word	.L111+1
 2097 0064 B7000000 		.word	.L116+1
 2098              		.p2align 1
 2099              	.L112:
1636:Generated_Source\PSoC5/ADC.c ****         {
1637:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_DIFF:
1638:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VSSA_TO_2VREF:
1639:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1640:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2100              		.loc 1 1640 0
 2101 0068 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2102 006a 0F2B     		cmp	r3, #15
 2103 006c 04D9     		bls	.L117
1641:Generated_Source\PSoC5/ADC.c ****                 {
1642:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_16_20;
 2104              		.loc 1 1642 0
 2105 006e 374B     		ldr	r3, .L129
 2106 0070 1B78     		ldrb	r3, [r3]
 2107 0072 DBB2     		uxtb	r3, r3
 2108 0074 FB75     		strb	r3, [r7, #23]
1643:Generated_Source\PSoC5/ADC.c ****                 }
1644:Generated_Source\PSoC5/ADC.c ****                 else
1645:Generated_Source\PSoC5/ADC.c ****                 {
1646:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_DIFF_8_15;
1647:Generated_Source\PSoC5/ADC.c ****                 }
1648:Generated_Source\PSoC5/ADC.c ****                 break;
 2109              		.loc 1 1648 0
 2110 0076 2EE0     		b	.L119
 2111              	.L117:
1646:Generated_Source\PSoC5/ADC.c ****                 }
 2112              		.loc 1 1646 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 67


 2113 0078 354B     		ldr	r3, .L129+4
 2114 007a 1B78     		ldrb	r3, [r3]
 2115 007c DBB2     		uxtb	r3, r3
 2116 007e FB75     		strb	r3, [r7, #23]
 2117              		.loc 1 1648 0
 2118 0080 29E0     		b	.L119
 2119              	.L114:
1649:Generated_Source\PSoC5/ADC.c **** 
1650:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_2_DIFF:
1651:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1652:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2120              		.loc 1 1652 0
 2121 0082 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2122 0084 0F2B     		cmp	r3, #15
 2123 0086 04D9     		bls	.L120
1653:Generated_Source\PSoC5/ADC.c ****                 {
1654:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_16_20;
 2124              		.loc 1 1654 0
 2125 0088 324B     		ldr	r3, .L129+8
 2126 008a 1B78     		ldrb	r3, [r3]
 2127 008c DBB2     		uxtb	r3, r3
 2128 008e FB75     		strb	r3, [r7, #23]
1655:Generated_Source\PSoC5/ADC.c ****                 }
1656:Generated_Source\PSoC5/ADC.c ****                 else
1657:Generated_Source\PSoC5/ADC.c ****                 {
1658:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_2_DIFF_8_15;
1659:Generated_Source\PSoC5/ADC.c ****                 }
1660:Generated_Source\PSoC5/ADC.c ****                 break;
 2129              		.loc 1 1660 0
 2130 0090 21E0     		b	.L119
 2131              	.L120:
1658:Generated_Source\PSoC5/ADC.c ****                 }
 2132              		.loc 1 1658 0
 2133 0092 314B     		ldr	r3, .L129+12
 2134 0094 1B78     		ldrb	r3, [r3]
 2135 0096 DBB2     		uxtb	r3, r3
 2136 0098 FB75     		strb	r3, [r7, #23]
 2137              		.loc 1 1660 0
 2138 009a 1CE0     		b	.L119
 2139              	.L115:
1661:Generated_Source\PSoC5/ADC.c **** 
1662:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_4_DIFF:
1663:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1664:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2140              		.loc 1 1664 0
 2141 009c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2142 009e 0F2B     		cmp	r3, #15
 2143 00a0 04D9     		bls	.L122
1665:Generated_Source\PSoC5/ADC.c ****                 {
1666:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_16_20;
 2144              		.loc 1 1666 0
 2145 00a2 2E4B     		ldr	r3, .L129+16
 2146 00a4 1B78     		ldrb	r3, [r3]
 2147 00a6 DBB2     		uxtb	r3, r3
 2148 00a8 FB75     		strb	r3, [r7, #23]
1667:Generated_Source\PSoC5/ADC.c ****                 }
1668:Generated_Source\PSoC5/ADC.c ****                 else
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 68


1669:Generated_Source\PSoC5/ADC.c ****                 {
1670:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_4_DIFF_8_15;
1671:Generated_Source\PSoC5/ADC.c ****                 }
1672:Generated_Source\PSoC5/ADC.c ****                 break;
 2149              		.loc 1 1672 0
 2150 00aa 14E0     		b	.L119
 2151              	.L122:
1670:Generated_Source\PSoC5/ADC.c ****                 }
 2152              		.loc 1 1670 0
 2153 00ac 2C4B     		ldr	r3, .L129+20
 2154 00ae 1B78     		ldrb	r3, [r3]
 2155 00b0 DBB2     		uxtb	r3, r3
 2156 00b2 FB75     		strb	r3, [r7, #23]
 2157              		.loc 1 1672 0
 2158 00b4 0FE0     		b	.L119
 2159              	.L116:
1673:Generated_Source\PSoC5/ADC.c **** 
1674:Generated_Source\PSoC5/ADC.c ****             case ADC_IR_VNEG_VREF_16_DIFF:
1675:Generated_Source\PSoC5/ADC.c ****                 /* Normalize the flash Value */
1676:Generated_Source\PSoC5/ADC.c ****                 if(resolution > 15u)
 2160              		.loc 1 1676 0
 2161 00b6 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2162 00b8 0F2B     		cmp	r3, #15
 2163 00ba 04D9     		bls	.L124
1677:Generated_Source\PSoC5/ADC.c ****                 {
1678:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_16_20;
 2164              		.loc 1 1678 0
 2165 00bc 294B     		ldr	r3, .L129+24
 2166 00be 1B78     		ldrb	r3, [r3]
 2167 00c0 DBB2     		uxtb	r3, r3
 2168 00c2 FB75     		strb	r3, [r7, #23]
1679:Generated_Source\PSoC5/ADC.c ****                 }
1680:Generated_Source\PSoC5/ADC.c ****                 else
1681:Generated_Source\PSoC5/ADC.c ****                 {
1682:Generated_Source\PSoC5/ADC.c ****                     flash = ADC_DEC_TRIM_VREF_16_DIFF_8_15;
1683:Generated_Source\PSoC5/ADC.c ****                 }
1684:Generated_Source\PSoC5/ADC.c ****                 break;
 2169              		.loc 1 1684 0
 2170 00c4 07E0     		b	.L119
 2171              	.L124:
1682:Generated_Source\PSoC5/ADC.c ****                 }
 2172              		.loc 1 1682 0
 2173 00c6 284B     		ldr	r3, .L129+28
 2174 00c8 1B78     		ldrb	r3, [r3]
 2175 00ca DBB2     		uxtb	r3, r3
 2176 00cc FB75     		strb	r3, [r7, #23]
 2177              		.loc 1 1684 0
 2178 00ce 02E0     		b	.L119
 2179              	.L111:
1685:Generated_Source\PSoC5/ADC.c **** 
1686:Generated_Source\PSoC5/ADC.c ****             default:
1687:Generated_Source\PSoC5/ADC.c ****                 flash = 0;
 2180              		.loc 1 1687 0
 2181 00d0 0023     		movs	r3, #0
 2182 00d2 FB75     		strb	r3, [r7, #23]
1688:Generated_Source\PSoC5/ADC.c ****                 break;
 2183              		.loc 1 1688 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 69


 2184 00d4 00BF     		nop
 2185              	.L119:
1689:Generated_Source\PSoC5/ADC.c ****         }
1690:Generated_Source\PSoC5/ADC.c **** 
1691:Generated_Source\PSoC5/ADC.c ****         /* Add two values */
1692:Generated_Source\PSoC5/ADC.c **** 		normalised = (int32)idealDecGain + ((int32)flash * 32);
 2186              		.loc 1 1692 0
 2187 00d6 BA88     		ldrh	r2, [r7, #4]
 2188 00d8 97F91730 		ldrsb	r3, [r7, #23]
 2189 00dc 5B01     		lsls	r3, r3, #5
 2190 00de 1344     		add	r3, r3, r2
 2191 00e0 3B61     		str	r3, [r7, #16]
1693:Generated_Source\PSoC5/ADC.c ****         gcorTmp = (uint32)normalised * (uint32)idealOddDecGain;
 2192              		.loc 1 1693 0
 2193 00e2 7B88     		ldrh	r3, [r7, #2]
 2194 00e4 3A69     		ldr	r2, [r7, #16]
 2195 00e6 02FB03F3 		mul	r3, r2, r3
 2196 00ea FB60     		str	r3, [r7, #12]
1694:Generated_Source\PSoC5/ADC.c ****         gcorValue = (uint16)(gcorTmp / ADC_IDEAL_GAIN_CONST);
 2197              		.loc 1 1694 0
 2198 00ec FB68     		ldr	r3, [r7, #12]
 2199 00ee DB0B     		lsrs	r3, r3, #15
 2200 00f0 BB82     		strh	r3, [r7, #20]	@ movhi
1695:Generated_Source\PSoC5/ADC.c **** 
1696:Generated_Source\PSoC5/ADC.c ****         if (resolution < (ADC_MAX_GVAL - 1u))
 2201              		.loc 1 1696 0
 2202 00f2 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2203 00f4 0D2B     		cmp	r3, #13
 2204 00f6 12D8     		bhi	.L126
1697:Generated_Source\PSoC5/ADC.c ****         {
1698:Generated_Source\PSoC5/ADC.c ****             gcorValue = (gcorValue >> (ADC_MAX_GVAL - (resolution + 1u)));
 2205              		.loc 1 1698 0
 2206 00f8 BA8A     		ldrh	r2, [r7, #20]
 2207 00fa BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 2208 00fc C3F10E03 		rsb	r3, r3, #14
 2209 0100 42FA03F3 		asr	r3, r2, r3
 2210 0104 BB82     		strh	r3, [r7, #20]	@ movhi
1699:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = (resolution + 1u);
 2211              		.loc 1 1699 0
 2212 0106 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2213 010a 013B     		subs	r3, r3, #1
 2214 010c BA79     		ldrb	r2, [r7, #6]
 2215 010e 0132     		adds	r2, r2, #1
 2216 0110 D1B2     		uxtb	r1, r2
 2217 0112 164A     		ldr	r2, .L129+32
 2218 0114 9B00     		lsls	r3, r3, #2
 2219 0116 1344     		add	r3, r3, r2
 2220 0118 0A46     		mov	r2, r1
 2221 011a 9A70     		strb	r2, [r3, #2]
 2222 011c 07E0     		b	.L127
 2223              	.L126:
1700:Generated_Source\PSoC5/ADC.c ****         }
1701:Generated_Source\PSoC5/ADC.c ****         else
1702:Generated_Source\PSoC5/ADC.c ****         {
1703:Generated_Source\PSoC5/ADC.c ****             /* Use all 16 bits */
1704:Generated_Source\PSoC5/ADC.c ****             ADC_gcor[config - 1u].gval = ADC_MAX_GVAL;
 2224              		.loc 1 1704 0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 70


 2225 011e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2226 0122 013B     		subs	r3, r3, #1
 2227 0124 114A     		ldr	r2, .L129+32
 2228 0126 9B00     		lsls	r3, r3, #2
 2229 0128 1344     		add	r3, r3, r2
 2230 012a 0F22     		movs	r2, #15
 2231 012c 9A70     		strb	r2, [r3, #2]
 2232              	.L127:
1705:Generated_Source\PSoC5/ADC.c ****         }
1706:Generated_Source\PSoC5/ADC.c **** 
1707:Generated_Source\PSoC5/ADC.c ****         /* Save the gain correction register value */
1708:Generated_Source\PSoC5/ADC.c ****         ADC_gcor[config - 1u].gcor = gcorValue;
 2233              		.loc 1 1708 0
 2234 012e 97F82830 		ldrb	r3, [r7, #40]	@ zero_extendqisi2
 2235 0132 013B     		subs	r3, r3, #1
 2236 0134 0D49     		ldr	r1, .L129+32
 2237 0136 BA8A     		ldrh	r2, [r7, #20]	@ movhi
 2238 0138 21F82320 		strh	r2, [r1, r3, lsl #2]	@ movhi
 2239 013c 02E0     		b	.L128
 2240              	.L110:
1709:Generated_Source\PSoC5/ADC.c ****     }
1710:Generated_Source\PSoC5/ADC.c ****     else
1711:Generated_Source\PSoC5/ADC.c ****     {
1712:Generated_Source\PSoC5/ADC.c ****         /* Halt CPU in debug mode if config is out of valid range */
1713:Generated_Source\PSoC5/ADC.c ****         CYASSERT(0u != 0u);
 2241              		.loc 1 1713 0 discriminator 1
 2242 013e 0020     		movs	r0, #0
 2243 0140 FFF7FEFF 		bl	CyHalt
 2244              	.L128:
1714:Generated_Source\PSoC5/ADC.c ****     }
1715:Generated_Source\PSoC5/ADC.c **** }
 2245              		.loc 1 1715 0
 2246 0144 00BF     		nop
 2247 0146 1C37     		adds	r7, r7, #28
 2248              		.cfi_def_cfa_offset 12
 2249 0148 BD46     		mov	sp, r7
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed
 2252 014a 90BD     		pop	{r4, r7, pc}
 2253              	.L130:
 2254              		.align	2
 2255              	.L129:
 2256 014c 18010049 		.word	1224737048
 2257 0150 1C010049 		.word	1224737052
 2258 0154 19010049 		.word	1224737049
 2259 0158 1D010049 		.word	1224737053
 2260 015c 1A010049 		.word	1224737050
 2261 0160 1E010049 		.word	1224737054
 2262 0164 1B010049 		.word	1224737051
 2263 0168 1F010049 		.word	1224737055
 2264 016c 08000000 		.word	ADC_gcor
 2265              		.cfi_endproc
 2266              	.LFE21:
 2267              		.size	ADC_GainCompensation, .-ADC_GainCompensation
 2268              		.section	.text.ADC_SetDSMRef0Reg,"ax",%progbits
 2269              		.align	2
 2270              		.thumb
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 71


 2271              		.thumb_func
 2272              		.type	ADC_SetDSMRef0Reg, %function
 2273              	ADC_SetDSMRef0Reg:
 2274              	.LFB22:
1716:Generated_Source\PSoC5/ADC.c **** 
1717:Generated_Source\PSoC5/ADC.c **** 
1718:Generated_Source\PSoC5/ADC.c **** /******************************************************************************
1719:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_SetDSMRef0Reg(uint8)
1720:Generated_Source\PSoC5/ADC.c **** ******************************************************************************
1721:Generated_Source\PSoC5/ADC.c **** *
1722:Generated_Source\PSoC5/ADC.c **** * Summary:
1723:Generated_Source\PSoC5/ADC.c **** *  This API sets the DSM_REF0 register. This is written for internal use.
1724:Generated_Source\PSoC5/ADC.c **** *
1725:Generated_Source\PSoC5/ADC.c **** * Parameters:
1726:Generated_Source\PSoC5/ADC.c **** *  value:  Value to be written to DSM_REF0 register.
1727:Generated_Source\PSoC5/ADC.c **** *
1728:Generated_Source\PSoC5/ADC.c **** * Return:
1729:Generated_Source\PSoC5/ADC.c **** *  None
1730:Generated_Source\PSoC5/ADC.c **** *
1731:Generated_Source\PSoC5/ADC.c **** ******************************************************************************/
1732:Generated_Source\PSoC5/ADC.c **** static void ADC_SetDSMRef0Reg(uint8 value) 
1733:Generated_Source\PSoC5/ADC.c **** {
 2275              		.loc 1 1733 0
 2276              		.cfi_startproc
 2277              		@ args = 0, pretend = 0, frame = 16
 2278              		@ frame_needed = 1, uses_anonymous_args = 0
 2279 0000 80B5     		push	{r7, lr}
 2280              		.cfi_def_cfa_offset 8
 2281              		.cfi_offset 7, -8
 2282              		.cfi_offset 14, -4
 2283 0002 84B0     		sub	sp, sp, #16
 2284              		.cfi_def_cfa_offset 24
 2285 0004 00AF     		add	r7, sp, #0
 2286              		.cfi_def_cfa_register 7
 2287 0006 0346     		mov	r3, r0
 2288 0008 FB71     		strb	r3, [r7, #7]
1734:Generated_Source\PSoC5/ADC.c ****     uint8 enableInterrupts;
1735:Generated_Source\PSoC5/ADC.c ****     enableInterrupts = CyEnterCriticalSection();
 2289              		.loc 1 1735 0
 2290 000a FFF7FEFF 		bl	CyEnterCriticalSection
 2291 000e 0346     		mov	r3, r0
 2292 0010 FB73     		strb	r3, [r7, #15]
1736:Generated_Source\PSoC5/ADC.c **** 
1737:Generated_Source\PSoC5/ADC.c ****     /* Disable PRES, Enable power to VCMBUF0, REFBUF0 and REFBUF1, enable PRES */
1738:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG |= (ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2293              		.loc 1 1738 0
 2294 0012 174A     		ldr	r2, .L132
 2295 0014 164B     		ldr	r3, .L132
 2296 0016 1B78     		ldrb	r3, [r3]
 2297 0018 DBB2     		uxtb	r3, r3
 2298 001a 43F00303 		orr	r3, r3, #3
 2299 001e DBB2     		uxtb	r3, r3
 2300 0020 1370     		strb	r3, [r2]
1739:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG |= (ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2301              		.loc 1 1739 0
 2302 0022 144A     		ldr	r2, .L132+4
 2303 0024 134B     		ldr	r3, .L132+4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 72


 2304 0026 1B78     		ldrb	r3, [r3]
 2305 0028 DBB2     		uxtb	r3, r3
 2306 002a 43F00303 		orr	r3, r3, #3
 2307 002e DBB2     		uxtb	r3, r3
 2308 0030 1370     		strb	r3, [r2]
1740:Generated_Source\PSoC5/ADC.c ****     ADC_DSM_REF0_REG = value;
 2309              		.loc 1 1740 0
 2310 0032 114A     		ldr	r2, .L132+8
 2311 0034 FB79     		ldrb	r3, [r7, #7]
 2312 0036 1370     		strb	r3, [r2]
1741:Generated_Source\PSoC5/ADC.c **** 
1742:Generated_Source\PSoC5/ADC.c ****     /* Wait for 3 microseconds */
1743:Generated_Source\PSoC5/ADC.c ****     CyDelayUs(ADC_PRES_DELAY_TIME);
 2313              		.loc 1 1743 0
 2314 0038 0320     		movs	r0, #3
 2315 003a FFF7FEFF 		bl	CyDelayUs
1744:Generated_Source\PSoC5/ADC.c ****     /* Enable the press circuit */
1745:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR4_REG &= (uint8)~(ADC_IGNORE_PRESA1 | ADC_IGNORE_PRESD1);
 2316              		.loc 1 1745 0
 2317 003e 0C4A     		ldr	r2, .L132
 2318 0040 0B4B     		ldr	r3, .L132
 2319 0042 1B78     		ldrb	r3, [r3]
 2320 0044 DBB2     		uxtb	r3, r3
 2321 0046 23F00303 		bic	r3, r3, #3
 2322 004a DBB2     		uxtb	r3, r3
 2323 004c 1370     		strb	r3, [r2]
1746:Generated_Source\PSoC5/ADC.c ****     ADC_RESET_CR5_REG &= (uint8)~(ADC_IGNORE_PRESA2 | ADC_IGNORE_PRESD2);
 2324              		.loc 1 1746 0
 2325 004e 094A     		ldr	r2, .L132+4
 2326 0050 084B     		ldr	r3, .L132+4
 2327 0052 1B78     		ldrb	r3, [r3]
 2328 0054 DBB2     		uxtb	r3, r3
 2329 0056 23F00303 		bic	r3, r3, #3
 2330 005a DBB2     		uxtb	r3, r3
 2331 005c 1370     		strb	r3, [r2]
1747:Generated_Source\PSoC5/ADC.c **** 
1748:Generated_Source\PSoC5/ADC.c ****     CyExitCriticalSection(enableInterrupts);
 2332              		.loc 1 1748 0
 2333 005e FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
 2334 0060 1846     		mov	r0, r3
 2335 0062 FFF7FEFF 		bl	CyExitCriticalSection
1749:Generated_Source\PSoC5/ADC.c **** }
 2336              		.loc 1 1749 0
 2337 0066 00BF     		nop
 2338 0068 1037     		adds	r7, r7, #16
 2339              		.cfi_def_cfa_offset 8
 2340 006a BD46     		mov	sp, r7
 2341              		.cfi_def_cfa_register 13
 2342              		@ sp needed
 2343 006c 80BD     		pop	{r7, pc}
 2344              	.L133:
 2345 006e 00BF     		.align	2
 2346              	.L132:
 2347 0070 F8460040 		.word	1073759992
 2348 0074 F9460040 		.word	1073759993
 2349 0078 92580040 		.word	1073764498
 2350              		.cfi_endproc
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 73


 2351              	.LFE22:
 2352              		.size	ADC_SetDSMRef0Reg, .-ADC_SetDSMRef0Reg
 2353              		.section	.text.ADC_Read8,"ax",%progbits
 2354              		.align	2
 2355              		.global	ADC_Read8
 2356              		.thumb
 2357              		.thumb_func
 2358              		.type	ADC_Read8, %function
 2359              	ADC_Read8:
 2360              	.LFB23:
1750:Generated_Source\PSoC5/ADC.c **** 
1751:Generated_Source\PSoC5/ADC.c **** 
1752:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1753:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read8
1754:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1755:Generated_Source\PSoC5/ADC.c **** *
1756:Generated_Source\PSoC5/ADC.c **** * Summary:
1757:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1758:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1759:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1760:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1761:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1762:Generated_Source\PSoC5/ADC.c **** *
1763:Generated_Source\PSoC5/ADC.c **** * Parameters:
1764:Generated_Source\PSoC5/ADC.c **** *  None
1765:Generated_Source\PSoC5/ADC.c **** *
1766:Generated_Source\PSoC5/ADC.c **** * Return:
1767:Generated_Source\PSoC5/ADC.c **** *  int8:  ADC result.
1768:Generated_Source\PSoC5/ADC.c **** *
1769:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1770:Generated_Source\PSoC5/ADC.c **** int8 ADC_Read8(void) 
1771:Generated_Source\PSoC5/ADC.c **** {
 2361              		.loc 1 1771 0
 2362              		.cfi_startproc
 2363              		@ args = 0, pretend = 0, frame = 8
 2364              		@ frame_needed = 1, uses_anonymous_args = 0
 2365 0000 80B5     		push	{r7, lr}
 2366              		.cfi_def_cfa_offset 8
 2367              		.cfi_offset 7, -8
 2368              		.cfi_offset 14, -4
 2369 0002 82B0     		sub	sp, sp, #8
 2370              		.cfi_def_cfa_offset 16
 2371 0004 00AF     		add	r7, sp, #0
 2372              		.cfi_def_cfa_register 7
1772:Generated_Source\PSoC5/ADC.c ****     int8 result;
1773:Generated_Source\PSoC5/ADC.c **** 
1774:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1775:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2373              		.loc 1 1775 0
 2374 0006 0C4A     		ldr	r2, .L136
 2375 0008 0B4B     		ldr	r3, .L136
 2376 000a 1B78     		ldrb	r3, [r3]
 2377 000c DBB2     		uxtb	r3, r3
 2378 000e 43F00403 		orr	r3, r3, #4
 2379 0012 DBB2     		uxtb	r3, r3
 2380 0014 1370     		strb	r3, [r2]
1776:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 74


 2381              		.loc 1 1776 0
 2382 0016 FFF7FEFF 		bl	ADC_StartConvert
1777:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2383              		.loc 1 1777 0
 2384 001a 0020     		movs	r0, #0
 2385 001c FFF7FEFF 		bl	ADC_IsEndConversion
1778:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult8();
 2386              		.loc 1 1778 0
 2387 0020 FFF7FEFF 		bl	ADC_GetResult8
 2388 0024 0346     		mov	r3, r0
 2389 0026 FB71     		strb	r3, [r7, #7]
1779:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2390              		.loc 1 1779 0
 2391 0028 FFF7FEFF 		bl	ADC_StopConvert
1780:Generated_Source\PSoC5/ADC.c ****     
1781:Generated_Source\PSoC5/ADC.c ****      return(result);
 2392              		.loc 1 1781 0
 2393 002c 97F90730 		ldrsb	r3, [r7, #7]
1782:Generated_Source\PSoC5/ADC.c **** }
 2394              		.loc 1 1782 0
 2395 0030 1846     		mov	r0, r3
 2396 0032 0837     		adds	r7, r7, #8
 2397              		.cfi_def_cfa_offset 8
 2398 0034 BD46     		mov	sp, r7
 2399              		.cfi_def_cfa_register 13
 2400              		@ sp needed
 2401 0036 80BD     		pop	{r7, pc}
 2402              	.L137:
 2403              		.align	2
 2404              	.L136:
 2405 0038 014E0040 		.word	1073761793
 2406              		.cfi_endproc
 2407              	.LFE23:
 2408              		.size	ADC_Read8, .-ADC_Read8
 2409              		.section	.text.ADC_Read16,"ax",%progbits
 2410              		.align	2
 2411              		.global	ADC_Read16
 2412              		.thumb
 2413              		.thumb_func
 2414              		.type	ADC_Read16, %function
 2415              	ADC_Read16:
 2416              	.LFB24:
1783:Generated_Source\PSoC5/ADC.c **** 
1784:Generated_Source\PSoC5/ADC.c **** 
1785:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1786:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read16
1787:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1788:Generated_Source\PSoC5/ADC.c **** *
1789:Generated_Source\PSoC5/ADC.c **** * Summary:
1790:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1791:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1792:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1793:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1794:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1795:Generated_Source\PSoC5/ADC.c **** *
1796:Generated_Source\PSoC5/ADC.c **** * Parameters:
1797:Generated_Source\PSoC5/ADC.c **** *   void
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 75


1798:Generated_Source\PSoC5/ADC.c **** *
1799:Generated_Source\PSoC5/ADC.c **** * Return:
1800:Generated_Source\PSoC5/ADC.c **** *  int16:  ADC result.
1801:Generated_Source\PSoC5/ADC.c **** *
1802:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1803:Generated_Source\PSoC5/ADC.c **** int16 ADC_Read16(void) 
1804:Generated_Source\PSoC5/ADC.c **** {
 2417              		.loc 1 1804 0
 2418              		.cfi_startproc
 2419              		@ args = 0, pretend = 0, frame = 8
 2420              		@ frame_needed = 1, uses_anonymous_args = 0
 2421 0000 80B5     		push	{r7, lr}
 2422              		.cfi_def_cfa_offset 8
 2423              		.cfi_offset 7, -8
 2424              		.cfi_offset 14, -4
 2425 0002 82B0     		sub	sp, sp, #8
 2426              		.cfi_def_cfa_offset 16
 2427 0004 00AF     		add	r7, sp, #0
 2428              		.cfi_def_cfa_register 7
1805:Generated_Source\PSoC5/ADC.c ****     int16 result;
1806:Generated_Source\PSoC5/ADC.c **** 
1807:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1808:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2429              		.loc 1 1808 0
 2430 0006 0C4A     		ldr	r2, .L140
 2431 0008 0B4B     		ldr	r3, .L140
 2432 000a 1B78     		ldrb	r3, [r3]
 2433 000c DBB2     		uxtb	r3, r3
 2434 000e 43F00403 		orr	r3, r3, #4
 2435 0012 DBB2     		uxtb	r3, r3
 2436 0014 1370     		strb	r3, [r2]
1809:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2437              		.loc 1 1809 0
 2438 0016 FFF7FEFF 		bl	ADC_StartConvert
1810:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2439              		.loc 1 1810 0
 2440 001a 0020     		movs	r0, #0
 2441 001c FFF7FEFF 		bl	ADC_IsEndConversion
1811:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult16();
 2442              		.loc 1 1811 0
 2443 0020 FFF7FEFF 		bl	ADC_GetResult16
 2444 0024 0346     		mov	r3, r0
 2445 0026 FB80     		strh	r3, [r7, #6]	@ movhi
1812:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2446              		.loc 1 1812 0
 2447 0028 FFF7FEFF 		bl	ADC_StopConvert
1813:Generated_Source\PSoC5/ADC.c ****     
1814:Generated_Source\PSoC5/ADC.c ****      return(result);
 2448              		.loc 1 1814 0
 2449 002c B7F90630 		ldrsh	r3, [r7, #6]
1815:Generated_Source\PSoC5/ADC.c **** }
 2450              		.loc 1 1815 0
 2451 0030 1846     		mov	r0, r3
 2452 0032 0837     		adds	r7, r7, #8
 2453              		.cfi_def_cfa_offset 8
 2454 0034 BD46     		mov	sp, r7
 2455              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 76


 2456              		@ sp needed
 2457 0036 80BD     		pop	{r7, pc}
 2458              	.L141:
 2459              		.align	2
 2460              	.L140:
 2461 0038 014E0040 		.word	1073761793
 2462              		.cfi_endproc
 2463              	.LFE24:
 2464              		.size	ADC_Read16, .-ADC_Read16
 2465              		.section	.text.ADC_Read32,"ax",%progbits
 2466              		.align	2
 2467              		.global	ADC_Read32
 2468              		.thumb
 2469              		.thumb_func
 2470              		.type	ADC_Read32, %function
 2471              	ADC_Read32:
 2472              	.LFB25:
1816:Generated_Source\PSoC5/ADC.c **** 
1817:Generated_Source\PSoC5/ADC.c **** 
1818:Generated_Source\PSoC5/ADC.c **** /*******************************************************************************
1819:Generated_Source\PSoC5/ADC.c **** * Function Name: ADC_Read32
1820:Generated_Source\PSoC5/ADC.c **** ********************************************************************************
1821:Generated_Source\PSoC5/ADC.c **** *
1822:Generated_Source\PSoC5/ADC.c **** * Summary:
1823:Generated_Source\PSoC5/ADC.c **** *  This function simplifies getting results from the ADC when only a
1824:Generated_Source\PSoC5/ADC.c **** *  single reading is required. When called, it will start ADC
1825:Generated_Source\PSoC5/ADC.c **** *  conversions, wait for the conversion to be complete, stop ADC
1826:Generated_Source\PSoC5/ADC.c **** *  conversion and return the result. This is a blocking function and will
1827:Generated_Source\PSoC5/ADC.c **** *  not return until the result is ready.
1828:Generated_Source\PSoC5/ADC.c **** *
1829:Generated_Source\PSoC5/ADC.c **** * Parameters:
1830:Generated_Source\PSoC5/ADC.c **** *  None
1831:Generated_Source\PSoC5/ADC.c **** *
1832:Generated_Source\PSoC5/ADC.c **** * Return:
1833:Generated_Source\PSoC5/ADC.c **** *  int32: ADC result.
1834:Generated_Source\PSoC5/ADC.c **** *
1835:Generated_Source\PSoC5/ADC.c **** *******************************************************************************/
1836:Generated_Source\PSoC5/ADC.c **** int32 ADC_Read32(void) 
1837:Generated_Source\PSoC5/ADC.c **** {
 2473              		.loc 1 1837 0
 2474              		.cfi_startproc
 2475              		@ args = 0, pretend = 0, frame = 8
 2476              		@ frame_needed = 1, uses_anonymous_args = 0
 2477 0000 80B5     		push	{r7, lr}
 2478              		.cfi_def_cfa_offset 8
 2479              		.cfi_offset 7, -8
 2480              		.cfi_offset 14, -4
 2481 0002 82B0     		sub	sp, sp, #8
 2482              		.cfi_def_cfa_offset 16
 2483 0004 00AF     		add	r7, sp, #0
 2484              		.cfi_def_cfa_register 7
1838:Generated_Source\PSoC5/ADC.c ****     int32 result;
1839:Generated_Source\PSoC5/ADC.c ****     
1840:Generated_Source\PSoC5/ADC.c ****     /* Clear pending conversion done status */
1841:Generated_Source\PSoC5/ADC.c ****     ADC_DEC_SR_REG |= ADC_DEC_INTR_CLEAR;
 2485              		.loc 1 1841 0
 2486 0006 0B4A     		ldr	r2, .L144
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 77


 2487 0008 0A4B     		ldr	r3, .L144
 2488 000a 1B78     		ldrb	r3, [r3]
 2489 000c DBB2     		uxtb	r3, r3
 2490 000e 43F00403 		orr	r3, r3, #4
 2491 0012 DBB2     		uxtb	r3, r3
 2492 0014 1370     		strb	r3, [r2]
1842:Generated_Source\PSoC5/ADC.c ****     ADC_StartConvert();
 2493              		.loc 1 1842 0
 2494 0016 FFF7FEFF 		bl	ADC_StartConvert
1843:Generated_Source\PSoC5/ADC.c ****     (void)ADC_IsEndConversion(ADC_WAIT_FOR_RESULT);
 2495              		.loc 1 1843 0
 2496 001a 0020     		movs	r0, #0
 2497 001c FFF7FEFF 		bl	ADC_IsEndConversion
1844:Generated_Source\PSoC5/ADC.c ****      result = ADC_GetResult32();
 2498              		.loc 1 1844 0
 2499 0020 FFF7FEFF 		bl	ADC_GetResult32
 2500 0024 7860     		str	r0, [r7, #4]
1845:Generated_Source\PSoC5/ADC.c ****     ADC_StopConvert();
 2501              		.loc 1 1845 0
 2502 0026 FFF7FEFF 		bl	ADC_StopConvert
1846:Generated_Source\PSoC5/ADC.c ****     
1847:Generated_Source\PSoC5/ADC.c ****      return(result);
 2503              		.loc 1 1847 0
 2504 002a 7B68     		ldr	r3, [r7, #4]
1848:Generated_Source\PSoC5/ADC.c **** }
 2505              		.loc 1 1848 0
 2506 002c 1846     		mov	r0, r3
 2507 002e 0837     		adds	r7, r7, #8
 2508              		.cfi_def_cfa_offset 8
 2509 0030 BD46     		mov	sp, r7
 2510              		.cfi_def_cfa_register 13
 2511              		@ sp needed
 2512 0032 80BD     		pop	{r7, pc}
 2513              	.L145:
 2514              		.align	2
 2515              	.L144:
 2516 0034 014E0040 		.word	1073761793
 2517              		.cfi_endproc
 2518              	.LFE25:
 2519              		.size	ADC_Read32, .-ADC_Read32
 2520              		.text
 2521              	.Letext0:
 2522              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 2523              		.file 3 "Generated_Source\\PSoC5\\ADC.h"
 2524              		.section	.debug_info,"",%progbits
 2525              	.Ldebug_info0:
 2526 0000 28070000 		.4byte	0x728
 2527 0004 0400     		.2byte	0x4
 2528 0006 00000000 		.4byte	.Ldebug_abbrev0
 2529 000a 04       		.byte	0x4
 2530 000b 01       		.uleb128 0x1
 2531 000c 5C000000 		.4byte	.LASF90
 2532 0010 0C       		.byte	0xc
 2533 0011 0A010000 		.4byte	.LASF91
 2534 0015 1A030000 		.4byte	.LASF92
 2535 0019 00000000 		.4byte	.Ldebug_ranges0+0
 2536 001d 00000000 		.4byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 78


 2537 0021 00000000 		.4byte	.Ldebug_line0
 2538 0025 02       		.uleb128 0x2
 2539 0026 01       		.byte	0x1
 2540 0027 06       		.byte	0x6
 2541 0028 61010000 		.4byte	.LASF0
 2542 002c 02       		.uleb128 0x2
 2543 002d 01       		.byte	0x1
 2544 002e 08       		.byte	0x8
 2545 002f EE030000 		.4byte	.LASF1
 2546 0033 02       		.uleb128 0x2
 2547 0034 02       		.byte	0x2
 2548 0035 05       		.byte	0x5
 2549 0036 14040000 		.4byte	.LASF2
 2550 003a 02       		.uleb128 0x2
 2551 003b 02       		.byte	0x2
 2552 003c 07       		.byte	0x7
 2553 003d 52020000 		.4byte	.LASF3
 2554 0041 02       		.uleb128 0x2
 2555 0042 04       		.byte	0x4
 2556 0043 05       		.byte	0x5
 2557 0044 A3010000 		.4byte	.LASF4
 2558 0048 02       		.uleb128 0x2
 2559 0049 04       		.byte	0x4
 2560 004a 07       		.byte	0x7
 2561 004b 30020000 		.4byte	.LASF5
 2562 004f 02       		.uleb128 0x2
 2563 0050 08       		.byte	0x8
 2564 0051 05       		.byte	0x5
 2565 0052 53010000 		.4byte	.LASF6
 2566 0056 02       		.uleb128 0x2
 2567 0057 08       		.byte	0x8
 2568 0058 07       		.byte	0x7
 2569 0059 F3000000 		.4byte	.LASF7
 2570 005d 03       		.uleb128 0x3
 2571 005e 04       		.byte	0x4
 2572 005f 05       		.byte	0x5
 2573 0060 696E7400 		.ascii	"int\000"
 2574 0064 02       		.uleb128 0x2
 2575 0065 04       		.byte	0x4
 2576 0066 07       		.byte	0x7
 2577 0067 1C020000 		.4byte	.LASF8
 2578 006b 04       		.uleb128 0x4
 2579 006c C6010000 		.4byte	.LASF9
 2580 0070 02       		.byte	0x2
 2581 0071 E401     		.2byte	0x1e4
 2582 0073 2C000000 		.4byte	0x2c
 2583 0077 04       		.uleb128 0x4
 2584 0078 00000000 		.4byte	.LASF10
 2585 007c 02       		.byte	0x2
 2586 007d E501     		.2byte	0x1e5
 2587 007f 3A000000 		.4byte	0x3a
 2588 0083 04       		.uleb128 0x4
 2589 0084 E9010000 		.4byte	.LASF11
 2590 0088 02       		.byte	0x2
 2591 0089 E601     		.2byte	0x1e6
 2592 008b 48000000 		.4byte	0x48
 2593 008f 04       		.uleb128 0x4
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 79


 2594 0090 65020000 		.4byte	.LASF12
 2595 0094 02       		.byte	0x2
 2596 0095 E701     		.2byte	0x1e7
 2597 0097 25000000 		.4byte	0x25
 2598 009b 04       		.uleb128 0x4
 2599 009c E5040000 		.4byte	.LASF13
 2600 00a0 02       		.byte	0x2
 2601 00a1 E801     		.2byte	0x1e8
 2602 00a3 33000000 		.4byte	0x33
 2603 00a7 04       		.uleb128 0x4
 2604 00a8 86010000 		.4byte	.LASF14
 2605 00ac 02       		.byte	0x2
 2606 00ad E901     		.2byte	0x1e9
 2607 00af 41000000 		.4byte	0x41
 2608 00b3 04       		.uleb128 0x4
 2609 00b4 AC020000 		.4byte	.LASF15
 2610 00b8 02       		.byte	0x2
 2611 00b9 EA01     		.2byte	0x1ea
 2612 00bb BF000000 		.4byte	0xbf
 2613 00bf 02       		.uleb128 0x2
 2614 00c0 04       		.byte	0x4
 2615 00c1 04       		.byte	0x4
 2616 00c2 B7030000 		.4byte	.LASF16
 2617 00c6 02       		.uleb128 0x2
 2618 00c7 08       		.byte	0x8
 2619 00c8 04       		.byte	0x4
 2620 00c9 CC010000 		.4byte	.LASF17
 2621 00cd 02       		.uleb128 0x2
 2622 00ce 01       		.byte	0x1
 2623 00cf 08       		.byte	0x8
 2624 00d0 51040000 		.4byte	.LASF18
 2625 00d4 04       		.uleb128 0x4
 2626 00d5 D1030000 		.4byte	.LASF19
 2627 00d9 02       		.byte	0x2
 2628 00da 8E02     		.2byte	0x28e
 2629 00dc E0000000 		.4byte	0xe0
 2630 00e0 05       		.uleb128 0x5
 2631 00e1 6B000000 		.4byte	0x6b
 2632 00e5 04       		.uleb128 0x4
 2633 00e6 C0010000 		.4byte	.LASF20
 2634 00ea 02       		.byte	0x2
 2635 00eb 8F02     		.2byte	0x28f
 2636 00ed F1000000 		.4byte	0xf1
 2637 00f1 05       		.uleb128 0x5
 2638 00f2 77000000 		.4byte	0x77
 2639 00f6 04       		.uleb128 0x4
 2640 00f7 91020000 		.4byte	.LASF21
 2641 00fb 02       		.byte	0x2
 2642 00fc 9002     		.2byte	0x290
 2643 00fe 02010000 		.4byte	0x102
 2644 0102 05       		.uleb128 0x5
 2645 0103 83000000 		.4byte	0x83
 2646 0107 02       		.uleb128 0x2
 2647 0108 08       		.byte	0x8
 2648 0109 04       		.byte	0x4
 2649 010a BD020000 		.4byte	.LASF22
 2650 010e 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 80


 2651 010f 04       		.byte	0x4
 2652 0110 07       		.byte	0x7
 2653 0111 B4020000 		.4byte	.LASF23
 2654 0115 06       		.uleb128 0x6
 2655 0116 04       		.byte	0x4
 2656 0117 03       		.byte	0x3
 2657 0118 2F       		.byte	0x2f
 2658 0119 36010000 		.4byte	0x136
 2659 011d 07       		.uleb128 0x7
 2660 011e 57000000 		.4byte	.LASF24
 2661 0122 03       		.byte	0x3
 2662 0123 31       		.byte	0x31
 2663 0124 77000000 		.4byte	0x77
 2664 0128 00       		.byte	0
 2665 0129 07       		.uleb128 0x7
 2666 012a 64040000 		.4byte	.LASF25
 2667 012e 03       		.byte	0x3
 2668 012f 32       		.byte	0x32
 2669 0130 6B000000 		.4byte	0x6b
 2670 0134 02       		.byte	0x2
 2671 0135 00       		.byte	0
 2672 0136 08       		.uleb128 0x8
 2673 0137 42020000 		.4byte	.LASF26
 2674 013b 03       		.byte	0x3
 2675 013c 33       		.byte	0x33
 2676 013d 15010000 		.4byte	0x115
 2677 0141 09       		.uleb128 0x9
 2678 0142 EA000000 		.4byte	.LASF29
 2679 0146 01       		.byte	0x1
 2680 0147 5B       		.byte	0x5b
 2681 0148 00000000 		.4byte	.LFB0
 2682 014c 1C010000 		.4byte	.LFE0-.LFB0
 2683 0150 01       		.uleb128 0x1
 2684 0151 9C       		.byte	0x9c
 2685 0152 0A       		.uleb128 0xa
 2686 0153 C2040000 		.4byte	.LASF31
 2687 0157 01       		.byte	0x1
 2688 0158 BA       		.byte	0xba
 2689 0159 00000000 		.4byte	.LFB1
 2690 015d 58010000 		.4byte	.LFE1-.LFB1
 2691 0161 01       		.uleb128 0x1
 2692 0162 9C       		.byte	0x9c
 2693 0163 84010000 		.4byte	0x184
 2694 0167 0B       		.uleb128 0xb
 2695 0168 5D040000 		.4byte	.LASF27
 2696 016c 01       		.byte	0x1
 2697 016d BC       		.byte	0xbc
 2698 016e 6B000000 		.4byte	0x6b
 2699 0172 02       		.uleb128 0x2
 2700 0173 91       		.byte	0x91
 2701 0174 76       		.sleb128 -10
 2702 0175 0B       		.uleb128 0xb
 2703 0176 B1040000 		.4byte	.LASF28
 2704 017a 01       		.byte	0x1
 2705 017b BD       		.byte	0xbd
 2706 017c 6B000000 		.4byte	0x6b
 2707 0180 02       		.uleb128 0x2
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 81


 2708 0181 91       		.byte	0x91
 2709 0182 77       		.sleb128 -9
 2710 0183 00       		.byte	0
 2711 0184 0C       		.uleb128 0xc
 2712 0185 8C010000 		.4byte	.LASF30
 2713 0189 01       		.byte	0x1
 2714 018a 4E01     		.2byte	0x14e
 2715 018c 00000000 		.4byte	.LFB2
 2716 0190 30000000 		.4byte	.LFE2-.LFB2
 2717 0194 01       		.uleb128 0x1
 2718 0195 9C       		.byte	0x9c
 2719 0196 0D       		.uleb128 0xd
 2720 0197 1E040000 		.4byte	.LASF32
 2721 019b 01       		.byte	0x1
 2722 019c 6F01     		.2byte	0x16f
 2723 019e 00000000 		.4byte	.LFB3
 2724 01a2 7C010000 		.4byte	.LFE3-.LFB3
 2725 01a6 01       		.uleb128 0x1
 2726 01a7 9C       		.byte	0x9c
 2727 01a8 BC010000 		.4byte	0x1bc
 2728 01ac 0E       		.uleb128 0xe
 2729 01ad B1040000 		.4byte	.LASF28
 2730 01b1 01       		.byte	0x1
 2731 01b2 7101     		.2byte	0x171
 2732 01b4 6B000000 		.4byte	0x6b
 2733 01b8 02       		.uleb128 0x2
 2734 01b9 91       		.byte	0x91
 2735 01ba 77       		.sleb128 -9
 2736 01bb 00       		.byte	0
 2737 01bc 0F       		.uleb128 0xf
 2738 01bd 74010000 		.4byte	.LASF33
 2739 01c1 01       		.byte	0x1
 2740 01c2 B201     		.2byte	0x1b2
 2741 01c4 00000000 		.4byte	.LFB4
 2742 01c8 3C000000 		.4byte	.LFE4-.LFB4
 2743 01cc 01       		.uleb128 0x1
 2744 01cd 9C       		.byte	0x9c
 2745 01ce F1010000 		.4byte	0x1f1
 2746 01d2 10       		.uleb128 0x10
 2747 01d3 A6030000 		.4byte	.LASF36
 2748 01d7 01       		.byte	0x1
 2749 01d8 B201     		.2byte	0x1b2
 2750 01da 6B000000 		.4byte	0x6b
 2751 01de 02       		.uleb128 0x2
 2752 01df 91       		.byte	0x91
 2753 01e0 6F       		.sleb128 -17
 2754 01e1 0E       		.uleb128 0xe
 2755 01e2 0B050000 		.4byte	.LASF34
 2756 01e6 01       		.byte	0x1
 2757 01e7 B401     		.2byte	0x1b4
 2758 01e9 6B000000 		.4byte	0x6b
 2759 01ed 02       		.uleb128 0x2
 2760 01ee 91       		.byte	0x91
 2761 01ef 77       		.sleb128 -9
 2762 01f0 00       		.byte	0
 2763 01f1 0F       		.uleb128 0xf
 2764 01f2 81040000 		.4byte	.LASF35
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 82


 2765 01f6 01       		.byte	0x1
 2766 01f7 D601     		.2byte	0x1d6
 2767 01f9 00000000 		.4byte	.LFB5
 2768 01fd 38000000 		.4byte	.LFE5-.LFB5
 2769 0201 01       		.uleb128 0x1
 2770 0202 9C       		.byte	0x9c
 2771 0203 26020000 		.4byte	0x226
 2772 0207 10       		.uleb128 0x10
 2773 0208 10030000 		.4byte	.LASF37
 2774 020c 01       		.byte	0x1
 2775 020d D601     		.2byte	0x1d6
 2776 020f 6B000000 		.4byte	0x6b
 2777 0213 02       		.uleb128 0x2
 2778 0214 91       		.byte	0x91
 2779 0215 6F       		.sleb128 -17
 2780 0216 0E       		.uleb128 0xe
 2781 0217 0B050000 		.4byte	.LASF34
 2782 021b 01       		.byte	0x1
 2783 021c D801     		.2byte	0x1d8
 2784 021e 6B000000 		.4byte	0x6b
 2785 0222 02       		.uleb128 0x2
 2786 0223 91       		.byte	0x91
 2787 0224 77       		.sleb128 -9
 2788 0225 00       		.byte	0
 2789 0226 11       		.uleb128 0x11
 2790 0227 C9020000 		.4byte	.LASF41
 2791 022b 01       		.byte	0x1
 2792 022c FE01     		.2byte	0x1fe
 2793 022e 6B000000 		.4byte	0x6b
 2794 0232 00000000 		.4byte	.LFB6
 2795 0236 AC000000 		.4byte	.LFE6-.LFB6
 2796 023a 01       		.uleb128 0x1
 2797 023b 9C       		.byte	0x9c
 2798 023c 7D020000 		.4byte	0x27d
 2799 0240 10       		.uleb128 0x10
 2800 0241 DA040000 		.4byte	.LASF38
 2801 0245 01       		.byte	0x1
 2802 0246 FE01     		.2byte	0x1fe
 2803 0248 B3000000 		.4byte	0xb3
 2804 024c 02       		.uleb128 0x2
 2805 024d 91       		.byte	0x91
 2806 024e 6C       		.sleb128 -20
 2807 024f 0E       		.uleb128 0xe
 2808 0250 0B050000 		.4byte	.LASF34
 2809 0254 01       		.byte	0x1
 2810 0255 0002     		.2byte	0x200
 2811 0257 77000000 		.4byte	0x77
 2812 025b 02       		.uleb128 0x2
 2813 025c 91       		.byte	0x91
 2814 025d 74       		.sleb128 -12
 2815 025e 0E       		.uleb128 0xe
 2816 025f 6D010000 		.4byte	.LASF39
 2817 0263 01       		.byte	0x1
 2818 0264 0102     		.2byte	0x201
 2819 0266 6B000000 		.4byte	0x6b
 2820 026a 02       		.uleb128 0x2
 2821 026b 91       		.byte	0x91
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 83


 2822 026c 77       		.sleb128 -9
 2823 026d 0E       		.uleb128 0xe
 2824 026e 71040000 		.4byte	.LASF40
 2825 0272 01       		.byte	0x1
 2826 0273 0202     		.2byte	0x202
 2827 0275 B3000000 		.4byte	0xb3
 2828 0279 02       		.uleb128 0x2
 2829 027a 91       		.byte	0x91
 2830 027b 70       		.sleb128 -16
 2831 027c 00       		.byte	0
 2832 027d 12       		.uleb128 0x12
 2833 027e CD040000 		.4byte	.LASF42
 2834 0282 01       		.byte	0x1
 2835 0283 2D02     		.2byte	0x22d
 2836 0285 77000000 		.4byte	0x77
 2837 0289 00000000 		.4byte	.LFB7
 2838 028d 3C000000 		.4byte	.LFE7-.LFB7
 2839 0291 01       		.uleb128 0x1
 2840 0292 9C       		.byte	0x9c
 2841 0293 B6020000 		.4byte	0x2b6
 2842 0297 0E       		.uleb128 0xe
 2843 0298 56040000 		.4byte	.LASF43
 2844 029c 01       		.byte	0x1
 2845 029d 2F02     		.2byte	0x22f
 2846 029f 6B000000 		.4byte	0x6b
 2847 02a3 02       		.uleb128 0x2
 2848 02a4 91       		.byte	0x91
 2849 02a5 75       		.sleb128 -11
 2850 02a6 0E       		.uleb128 0xe
 2851 02a7 7A020000 		.4byte	.LASF44
 2852 02ab 01       		.byte	0x1
 2853 02ac 3002     		.2byte	0x230
 2854 02ae 77000000 		.4byte	0x77
 2855 02b2 02       		.uleb128 0x2
 2856 02b3 91       		.byte	0x91
 2857 02b4 76       		.sleb128 -10
 2858 02b5 00       		.byte	0
 2859 02b6 13       		.uleb128 0x13
 2860 02b7 32010000 		.4byte	.LASF45
 2861 02bb 01       		.byte	0x1
 2862 02bc 4F02     		.2byte	0x24f
 2863 02be 00000000 		.4byte	.LFB8
 2864 02c2 20000000 		.4byte	.LFE8-.LFB8
 2865 02c6 01       		.uleb128 0x1
 2866 02c7 9C       		.byte	0x9c
 2867 02c8 13       		.uleb128 0x13
 2868 02c9 6A020000 		.4byte	.LASF46
 2869 02cd 01       		.byte	0x1
 2870 02ce 6602     		.2byte	0x266
 2871 02d0 00000000 		.4byte	.LFB9
 2872 02d4 20000000 		.4byte	.LFE9-.LFB9
 2873 02d8 01       		.uleb128 0x1
 2874 02d9 9C       		.byte	0x9c
 2875 02da 12       		.uleb128 0x12
 2876 02db D5020000 		.4byte	.LASF47
 2877 02df 01       		.byte	0x1
 2878 02e0 8902     		.2byte	0x289
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 84


 2879 02e2 6B000000 		.4byte	0x6b
 2880 02e6 00000000 		.4byte	.LFB10
 2881 02ea 4C000000 		.4byte	.LFE10-.LFB10
 2882 02ee 01       		.uleb128 0x1
 2883 02ef 9C       		.byte	0x9c
 2884 02f0 13030000 		.4byte	0x313
 2885 02f4 10       		.uleb128 0x10
 2886 02f5 14020000 		.4byte	.LASF48
 2887 02f9 01       		.byte	0x1
 2888 02fa 8902     		.2byte	0x289
 2889 02fc 6B000000 		.4byte	0x6b
 2890 0300 02       		.uleb128 0x2
 2891 0301 91       		.byte	0x91
 2892 0302 6F       		.sleb128 -17
 2893 0303 0E       		.uleb128 0xe
 2894 0304 6D010000 		.4byte	.LASF39
 2895 0308 01       		.byte	0x1
 2896 0309 8B02     		.2byte	0x28b
 2897 030b 6B000000 		.4byte	0x6b
 2898 030f 02       		.uleb128 0x2
 2899 0310 91       		.byte	0x91
 2900 0311 77       		.sleb128 -9
 2901 0312 00       		.byte	0
 2902 0313 12       		.uleb128 0x12
 2903 0314 01030000 		.4byte	.LASF49
 2904 0318 01       		.byte	0x1
 2905 0319 B802     		.2byte	0x2b8
 2906 031b 8F000000 		.4byte	0x8f
 2907 031f 00000000 		.4byte	.LFB11
 2908 0323 68000000 		.4byte	.LFE11-.LFB11
 2909 0327 01       		.uleb128 0x1
 2910 0328 9C       		.byte	0x9c
 2911 0329 4C030000 		.4byte	0x34c
 2912 032d 0E       		.uleb128 0xe
 2913 032e 12050000 		.4byte	.LASF50
 2914 0332 01       		.byte	0x1
 2915 0333 BA02     		.2byte	0x2ba
 2916 0335 8F000000 		.4byte	0x8f
 2917 0339 02       		.uleb128 0x2
 2918 033a 91       		.byte	0x91
 2919 033b 76       		.sleb128 -10
 2920 033c 0E       		.uleb128 0xe
 2921 033d 10030000 		.4byte	.LASF37
 2922 0341 01       		.byte	0x1
 2923 0342 BB02     		.2byte	0x2bb
 2924 0344 6B000000 		.4byte	0x6b
 2925 0348 02       		.uleb128 0x2
 2926 0349 91       		.byte	0x91
 2927 034a 77       		.sleb128 -9
 2928 034b 00       		.byte	0
 2929 034c 12       		.uleb128 0x12
 2930 034d 19050000 		.4byte	.LASF51
 2931 0351 01       		.byte	0x1
 2932 0352 EE02     		.2byte	0x2ee
 2933 0354 9B000000 		.4byte	0x9b
 2934 0358 00000000 		.4byte	.LFB12
 2935 035c 7C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 85


 2936 0360 01       		.uleb128 0x1
 2937 0361 9C       		.byte	0x9c
 2938 0362 85030000 		.4byte	0x385
 2939 0366 0E       		.uleb128 0xe
 2940 0367 12050000 		.4byte	.LASF50
 2941 036b 01       		.byte	0x1
 2942 036c F002     		.2byte	0x2f0
 2943 036e 77000000 		.4byte	0x77
 2944 0372 02       		.uleb128 0x2
 2945 0373 91       		.byte	0x91
 2946 0374 76       		.sleb128 -10
 2947 0375 0E       		.uleb128 0xe
 2948 0376 10030000 		.4byte	.LASF37
 2949 037a 01       		.byte	0x1
 2950 037b F102     		.2byte	0x2f1
 2951 037d 6B000000 		.4byte	0x6b
 2952 0381 02       		.uleb128 0x2
 2953 0382 91       		.byte	0x91
 2954 0383 75       		.sleb128 -11
 2955 0384 00       		.byte	0
 2956 0385 12       		.uleb128 0x12
 2957 0386 D3010000 		.4byte	.LASF52
 2958 038a 01       		.byte	0x1
 2959 038b 2A03     		.2byte	0x32a
 2960 038d A7000000 		.4byte	0xa7
 2961 0391 00000000 		.4byte	.LFB13
 2962 0395 A8000000 		.4byte	.LFE13-.LFB13
 2963 0399 01       		.uleb128 0x1
 2964 039a 9C       		.byte	0x9c
 2965 039b BE030000 		.4byte	0x3be
 2966 039f 0E       		.uleb128 0xe
 2967 03a0 12050000 		.4byte	.LASF50
 2968 03a4 01       		.byte	0x1
 2969 03a5 2C03     		.2byte	0x32c
 2970 03a7 83000000 		.4byte	0x83
 2971 03ab 02       		.uleb128 0x2
 2972 03ac 91       		.byte	0x91
 2973 03ad 74       		.sleb128 -12
 2974 03ae 0E       		.uleb128 0xe
 2975 03af 10030000 		.4byte	.LASF37
 2976 03b3 01       		.byte	0x1
 2977 03b4 2D03     		.2byte	0x32d
 2978 03b6 6B000000 		.4byte	0x6b
 2979 03ba 02       		.uleb128 0x2
 2980 03bb 91       		.byte	0x91
 2981 03bc 73       		.sleb128 -13
 2982 03bd 00       		.byte	0
 2983 03be 0F       		.uleb128 0xf
 2984 03bf EB040000 		.4byte	.LASF53
 2985 03c3 01       		.byte	0x1
 2986 03c4 8703     		.2byte	0x387
 2987 03c6 00000000 		.4byte	.LFB14
 2988 03ca 1C000000 		.4byte	.LFE14-.LFB14
 2989 03ce 01       		.uleb128 0x1
 2990 03cf 9C       		.byte	0x9c
 2991 03d0 E4030000 		.4byte	0x3e4
 2992 03d4 10       		.uleb128 0x10
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 86


 2993 03d5 7A040000 		.4byte	.LASF54
 2994 03d9 01       		.byte	0x1
 2995 03da 8703     		.2byte	0x387
 2996 03dc A7000000 		.4byte	0xa7
 2997 03e0 02       		.uleb128 0x2
 2998 03e1 91       		.byte	0x91
 2999 03e2 74       		.sleb128 -12
 3000 03e3 00       		.byte	0
 3001 03e4 0F       		.uleb128 0xf
 3002 03e5 AB030000 		.4byte	.LASF55
 3003 03e9 01       		.byte	0x1
 3004 03ea AA03     		.2byte	0x3aa
 3005 03ec 00000000 		.4byte	.LFB15
 3006 03f0 1C000000 		.4byte	.LFE15-.LFB15
 3007 03f4 01       		.uleb128 0x1
 3008 03f5 9C       		.byte	0x9c
 3009 03f6 0A040000 		.4byte	0x40a
 3010 03fa 10       		.uleb128 0x10
 3011 03fb 07000000 		.4byte	.LASF56
 3012 03ff 01       		.byte	0x1
 3013 0400 AA03     		.2byte	0x3aa
 3014 0402 A7000000 		.4byte	0xa7
 3015 0406 02       		.uleb128 0x2
 3016 0407 91       		.byte	0x91
 3017 0408 74       		.sleb128 -12
 3018 0409 00       		.byte	0
 3019 040a 12       		.uleb128 0x12
 3020 040b BD030000 		.4byte	.LASF57
 3021 040f 01       		.byte	0x1
 3022 0410 C503     		.2byte	0x3c5
 3023 0412 9B000000 		.4byte	0x9b
 3024 0416 00000000 		.4byte	.LFB16
 3025 041a 3C000000 		.4byte	.LFE16-.LFB16
 3026 041e 01       		.uleb128 0x1
 3027 041f 9C       		.byte	0x9c
 3028 0420 43040000 		.4byte	0x443
 3029 0424 10       		.uleb128 0x10
 3030 0425 9C040000 		.4byte	.LASF58
 3031 0429 01       		.byte	0x1
 3032 042a C503     		.2byte	0x3c5
 3033 042c A7000000 		.4byte	0xa7
 3034 0430 02       		.uleb128 0x2
 3035 0431 91       		.byte	0x91
 3036 0432 6C       		.sleb128 -20
 3037 0433 0E       		.uleb128 0xe
 3038 0434 84020000 		.4byte	.LASF59
 3039 0438 01       		.byte	0x1
 3040 0439 C803     		.2byte	0x3c8
 3041 043b 9B000000 		.4byte	0x9b
 3042 043f 02       		.uleb128 0x2
 3043 0440 91       		.byte	0x91
 3044 0441 76       		.sleb128 -10
 3045 0442 00       		.byte	0
 3046 0443 11       		.uleb128 0x11
 3047 0444 1A000000 		.4byte	.LASF60
 3048 0448 01       		.byte	0x1
 3049 0449 0204     		.2byte	0x402
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 87


 3050 044b B3000000 		.4byte	0xb3
 3051 044f 00000000 		.4byte	.LFB17
 3052 0453 44000000 		.4byte	.LFE17-.LFB17
 3053 0457 01       		.uleb128 0x1
 3054 0458 9C       		.byte	0x9c
 3055 0459 7C040000 		.4byte	0x47c
 3056 045d 10       		.uleb128 0x10
 3057 045e 9C040000 		.4byte	.LASF58
 3058 0462 01       		.byte	0x1
 3059 0463 0204     		.2byte	0x402
 3060 0465 A7000000 		.4byte	0xa7
 3061 0469 02       		.uleb128 0x2
 3062 046a 91       		.byte	0x91
 3063 046b 64       		.sleb128 -28
 3064 046c 0E       		.uleb128 0xe
 3065 046d E3010000 		.4byte	.LASF61
 3066 0471 01       		.byte	0x1
 3067 0472 0504     		.2byte	0x405
 3068 0474 B3000000 		.4byte	0xb3
 3069 0478 02       		.uleb128 0x2
 3070 0479 91       		.byte	0x91
 3071 047a 6C       		.sleb128 -20
 3072 047b 00       		.byte	0
 3073 047c 12       		.uleb128 0x12
 3074 047d AC010000 		.4byte	.LASF62
 3075 0481 01       		.byte	0x1
 3076 0482 4404     		.2byte	0x444
 3077 0484 A7000000 		.4byte	0xa7
 3078 0488 00000000 		.4byte	.LFB18
 3079 048c A4000000 		.4byte	.LFE18-.LFB18
 3080 0490 01       		.uleb128 0x1
 3081 0491 9C       		.byte	0x9c
 3082 0492 E2040000 		.4byte	0x4e2
 3083 0496 10       		.uleb128 0x10
 3084 0497 9C040000 		.4byte	.LASF58
 3085 049b 01       		.byte	0x1
 3086 049c 4404     		.2byte	0x444
 3087 049e A7000000 		.4byte	0xa7
 3088 04a2 02       		.uleb128 0x2
 3089 04a3 91       		.byte	0x91
 3090 04a4 64       		.sleb128 -28
 3091 04a5 0E       		.uleb128 0xe
 3092 04a6 29020000 		.4byte	.LASF63
 3093 04aa 01       		.byte	0x1
 3094 04ab 4704     		.2byte	0x447
 3095 04ad A7000000 		.4byte	0xa7
 3096 04b1 02       		.uleb128 0x2
 3097 04b2 91       		.byte	0x91
 3098 04b3 68       		.sleb128 -24
 3099 04b4 0E       		.uleb128 0xe
 3100 04b5 45040000 		.4byte	.LASF64
 3101 04b9 01       		.byte	0x1
 3102 04ba 4804     		.2byte	0x448
 3103 04bc A7000000 		.4byte	0xa7
 3104 04c0 02       		.uleb128 0x2
 3105 04c1 91       		.byte	0x91
 3106 04c2 74       		.sleb128 -12
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 88


 3107 04c3 0E       		.uleb128 0xe
 3108 04c4 4B040000 		.4byte	.LASF65
 3109 04c8 01       		.byte	0x1
 3110 04c9 4904     		.2byte	0x449
 3111 04cb A7000000 		.4byte	0xa7
 3112 04cf 02       		.uleb128 0x2
 3113 04d0 91       		.byte	0x91
 3114 04d1 70       		.sleb128 -16
 3115 04d2 0E       		.uleb128 0xe
 3116 04d3 2F040000 		.4byte	.LASF66
 3117 04d7 01       		.byte	0x1
 3118 04d8 4A04     		.2byte	0x44a
 3119 04da 6B000000 		.4byte	0x6b
 3120 04de 02       		.uleb128 0x2
 3121 04df 91       		.byte	0x91
 3122 04e0 6F       		.sleb128 -17
 3123 04e1 00       		.byte	0
 3124 04e2 14       		.uleb128 0x14
 3125 04e3 F2020000 		.4byte	.LASF69
 3126 04e7 01       		.byte	0x1
 3127 04e8 DF04     		.2byte	0x4df
 3128 04ea 00000000 		.4byte	.LFB19
 3129 04ee 60010000 		.4byte	.LFE19-.LFB19
 3130 04f2 01       		.uleb128 0x1
 3131 04f3 9C       		.byte	0x9c
 3132 04f4 08050000 		.4byte	0x508
 3133 04f8 10       		.uleb128 0x10
 3134 04f9 5D040000 		.4byte	.LASF27
 3135 04fd 01       		.byte	0x1
 3136 04fe DF04     		.2byte	0x4df
 3137 0500 6B000000 		.4byte	0x6b
 3138 0504 02       		.uleb128 0x2
 3139 0505 91       		.byte	0x91
 3140 0506 77       		.sleb128 -9
 3141 0507 00       		.byte	0
 3142 0508 0D       		.uleb128 0xd
 3143 0509 FC030000 		.4byte	.LASF67
 3144 050d 01       		.byte	0x1
 3145 050e 1806     		.2byte	0x618
 3146 0510 00000000 		.4byte	.LFB20
 3147 0514 90000000 		.4byte	.LFE20-.LFB20
 3148 0518 01       		.uleb128 0x1
 3149 0519 9C       		.byte	0x9c
 3150 051a 3D050000 		.4byte	0x53d
 3151 051e 10       		.uleb128 0x10
 3152 051f 5D040000 		.4byte	.LASF27
 3153 0523 01       		.byte	0x1
 3154 0524 1806     		.2byte	0x618
 3155 0526 6B000000 		.4byte	0x6b
 3156 052a 02       		.uleb128 0x2
 3157 052b 91       		.byte	0x91
 3158 052c 77       		.sleb128 -9
 3159 052d 10       		.uleb128 0x10
 3160 052e 69040000 		.4byte	.LASF68
 3161 0532 01       		.byte	0x1
 3162 0533 1806     		.2byte	0x618
 3163 0535 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 89


 3164 0539 02       		.uleb128 0x2
 3165 053a 91       		.byte	0x91
 3166 053b 76       		.sleb128 -10
 3167 053c 00       		.byte	0
 3168 053d 14       		.uleb128 0x14
 3169 053e 97020000 		.4byte	.LASF70
 3170 0542 01       		.byte	0x1
 3171 0543 5906     		.2byte	0x659
 3172 0545 00000000 		.4byte	.LFB21
 3173 0549 70010000 		.4byte	.LFE21-.LFB21
 3174 054d 01       		.uleb128 0x1
 3175 054e 9C       		.byte	0x9c
 3176 054f DB050000 		.4byte	0x5db
 3177 0553 10       		.uleb128 0x10
 3178 0554 0F000000 		.4byte	.LASF71
 3179 0558 01       		.byte	0x1
 3180 0559 5906     		.2byte	0x659
 3181 055b 6B000000 		.4byte	0x6b
 3182 055f 02       		.uleb128 0x2
 3183 0560 91       		.byte	0x91
 3184 0561 5F       		.sleb128 -33
 3185 0562 10       		.uleb128 0x10
 3186 0563 D6030000 		.4byte	.LASF72
 3187 0567 01       		.byte	0x1
 3188 0568 5906     		.2byte	0x659
 3189 056a 77000000 		.4byte	0x77
 3190 056e 02       		.uleb128 0x2
 3191 056f 91       		.byte	0x91
 3192 0570 5C       		.sleb128 -36
 3193 0571 10       		.uleb128 0x10
 3194 0572 43010000 		.4byte	.LASF73
 3195 0576 01       		.byte	0x1
 3196 0577 5906     		.2byte	0x659
 3197 0579 77000000 		.4byte	0x77
 3198 057d 02       		.uleb128 0x2
 3199 057e 91       		.byte	0x91
 3200 057f 5A       		.sleb128 -38
 3201 0580 10       		.uleb128 0x10
 3202 0581 2F040000 		.4byte	.LASF66
 3203 0585 01       		.byte	0x1
 3204 0586 5A06     		.2byte	0x65a
 3205 0588 6B000000 		.4byte	0x6b
 3206 058c 02       		.uleb128 0x2
 3207 058d 91       		.byte	0x91
 3208 058e 5E       		.sleb128 -34
 3209 058f 10       		.uleb128 0x10
 3210 0590 5D040000 		.4byte	.LASF27
 3211 0594 01       		.byte	0x1
 3212 0595 5A06     		.2byte	0x65a
 3213 0597 6B000000 		.4byte	0x6b
 3214 059b 02       		.uleb128 0x2
 3215 059c 91       		.byte	0x91
 3216 059d 00       		.sleb128 0
 3217 059e 0E       		.uleb128 0xe
 3218 059f 8B020000 		.4byte	.LASF74
 3219 05a3 01       		.byte	0x1
 3220 05a4 5C06     		.2byte	0x65c
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 90


 3221 05a6 8F000000 		.4byte	0x8f
 3222 05aa 02       		.uleb128 0x2
 3223 05ab 91       		.byte	0x91
 3224 05ac 6F       		.sleb128 -17
 3225 05ad 0E       		.uleb128 0xe
 3226 05ae E3030000 		.4byte	.LASF75
 3227 05b2 01       		.byte	0x1
 3228 05b3 5D06     		.2byte	0x65d
 3229 05b5 A7000000 		.4byte	0xa7
 3230 05b9 02       		.uleb128 0x2
 3231 05ba 91       		.byte	0x91
 3232 05bb 68       		.sleb128 -24
 3233 05bc 0E       		.uleb128 0xe
 3234 05bd 7A020000 		.4byte	.LASF44
 3235 05c1 01       		.byte	0x1
 3236 05c2 5E06     		.2byte	0x65e
 3237 05c4 77000000 		.4byte	0x77
 3238 05c8 02       		.uleb128 0x2
 3239 05c9 91       		.byte	0x91
 3240 05ca 6C       		.sleb128 -20
 3241 05cb 0E       		.uleb128 0xe
 3242 05cc 27040000 		.4byte	.LASF76
 3243 05d0 01       		.byte	0x1
 3244 05d1 5F06     		.2byte	0x65f
 3245 05d3 83000000 		.4byte	0x83
 3246 05d7 02       		.uleb128 0x2
 3247 05d8 91       		.byte	0x91
 3248 05d9 64       		.sleb128 -28
 3249 05da 00       		.byte	0
 3250 05db 14       		.uleb128 0x14
 3251 05dc FC010000 		.4byte	.LASF77
 3252 05e0 01       		.byte	0x1
 3253 05e1 C406     		.2byte	0x6c4
 3254 05e3 00000000 		.4byte	.LFB22
 3255 05e7 7C000000 		.4byte	.LFE22-.LFB22
 3256 05eb 01       		.uleb128 0x1
 3257 05ec 9C       		.byte	0x9c
 3258 05ed 10060000 		.4byte	0x610
 3259 05f1 10       		.uleb128 0x10
 3260 05f2 0E020000 		.4byte	.LASF78
 3261 05f6 01       		.byte	0x1
 3262 05f7 C406     		.2byte	0x6c4
 3263 05f9 6B000000 		.4byte	0x6b
 3264 05fd 02       		.uleb128 0x2
 3265 05fe 91       		.byte	0x91
 3266 05ff 6F       		.sleb128 -17
 3267 0600 0E       		.uleb128 0xe
 3268 0601 B1040000 		.4byte	.LASF28
 3269 0605 01       		.byte	0x1
 3270 0606 C606     		.2byte	0x6c6
 3271 0608 6B000000 		.4byte	0x6b
 3272 060c 02       		.uleb128 0x2
 3273 060d 91       		.byte	0x91
 3274 060e 77       		.sleb128 -9
 3275 060f 00       		.byte	0
 3276 0610 11       		.uleb128 0x11
 3277 0611 92040000 		.4byte	.LASF79
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 91


 3278 0615 01       		.byte	0x1
 3279 0616 EA06     		.2byte	0x6ea
 3280 0618 8F000000 		.4byte	0x8f
 3281 061c 00000000 		.4byte	.LFB23
 3282 0620 3C000000 		.4byte	.LFE23-.LFB23
 3283 0624 01       		.uleb128 0x1
 3284 0625 9C       		.byte	0x9c
 3285 0626 3A060000 		.4byte	0x63a
 3286 062a 0E       		.uleb128 0xe
 3287 062b 12050000 		.4byte	.LASF50
 3288 062f 01       		.byte	0x1
 3289 0630 EC06     		.2byte	0x6ec
 3290 0632 8F000000 		.4byte	0x8f
 3291 0636 02       		.uleb128 0x2
 3292 0637 91       		.byte	0x91
 3293 0638 77       		.sleb128 -9
 3294 0639 00       		.byte	0
 3295 063a 11       		.uleb128 0x11
 3296 063b 4C000000 		.4byte	.LASF80
 3297 063f 01       		.byte	0x1
 3298 0640 0B07     		.2byte	0x70b
 3299 0642 9B000000 		.4byte	0x9b
 3300 0646 00000000 		.4byte	.LFB24
 3301 064a 3C000000 		.4byte	.LFE24-.LFB24
 3302 064e 01       		.uleb128 0x1
 3303 064f 9C       		.byte	0x9c
 3304 0650 64060000 		.4byte	0x664
 3305 0654 0E       		.uleb128 0xe
 3306 0655 12050000 		.4byte	.LASF50
 3307 0659 01       		.byte	0x1
 3308 065a 0D07     		.2byte	0x70d
 3309 065c 9B000000 		.4byte	0x9b
 3310 0660 02       		.uleb128 0x2
 3311 0661 91       		.byte	0x91
 3312 0662 76       		.sleb128 -10
 3313 0663 00       		.byte	0
 3314 0664 11       		.uleb128 0x11
 3315 0665 A6040000 		.4byte	.LASF81
 3316 0669 01       		.byte	0x1
 3317 066a 2C07     		.2byte	0x72c
 3318 066c A7000000 		.4byte	0xa7
 3319 0670 00000000 		.4byte	.LFB25
 3320 0674 38000000 		.4byte	.LFE25-.LFB25
 3321 0678 01       		.uleb128 0x1
 3322 0679 9C       		.byte	0x9c
 3323 067a 8E060000 		.4byte	0x68e
 3324 067e 0E       		.uleb128 0xe
 3325 067f 12050000 		.4byte	.LASF50
 3326 0683 01       		.byte	0x1
 3327 0684 2E07     		.2byte	0x72e
 3328 0686 A7000000 		.4byte	0xa7
 3329 068a 02       		.uleb128 0x2
 3330 068b 91       		.byte	0x91
 3331 068c 74       		.sleb128 -12
 3332 068d 00       		.byte	0
 3333 068e 15       		.uleb128 0x15
 3334 068f 36010000 		.4byte	0x136
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 92


 3335 0693 9E060000 		.4byte	0x69e
 3336 0697 16       		.uleb128 0x16
 3337 0698 0E010000 		.4byte	0x10e
 3338 069c 00       		.byte	0
 3339 069d 00       		.byte	0
 3340 069e 0B       		.uleb128 0xb
 3341 069f E9020000 		.4byte	.LASF82
 3342 06a3 01       		.byte	0x1
 3343 06a4 3D       		.byte	0x3d
 3344 06a5 8E060000 		.4byte	0x68e
 3345 06a9 05       		.uleb128 0x5
 3346 06aa 03       		.byte	0x3
 3347 06ab 08000000 		.4byte	ADC_gcor
 3348 06af 17       		.uleb128 0x17
 3349 06b0 F0010000 		.4byte	.LASF83
 3350 06b4 01       		.byte	0x1
 3351 06b5 2C       		.byte	0x2c
 3352 06b6 6B000000 		.4byte	0x6b
 3353 06ba 05       		.uleb128 0x5
 3354 06bb 03       		.byte	0x3
 3355 06bc 00000000 		.4byte	ADC_initVar
 3356 06c0 17       		.uleb128 0x17
 3357 06c1 96010000 		.4byte	.LASF84
 3358 06c5 01       		.byte	0x1
 3359 06c6 24       		.byte	0x24
 3360 06c7 E0000000 		.4byte	0xe0
 3361 06cb 05       		.uleb128 0x5
 3362 06cc 03       		.byte	0x3
 3363 06cd 00000000 		.4byte	ADC_convDone
 3364 06d1 17       		.uleb128 0x17
 3365 06d2 2D000000 		.4byte	.LASF85
 3366 06d6 01       		.byte	0x1
 3367 06d7 29       		.byte	0x29
 3368 06d8 E0000000 		.4byte	0xe0
 3369 06dc 05       		.uleb128 0x5
 3370 06dd 03       		.byte	0x3
 3371 06de 00000000 		.4byte	ADC_stopConversion
 3372 06e2 17       		.uleb128 0x17
 3373 06e3 40000000 		.4byte	.LASF86
 3374 06e7 01       		.byte	0x1
 3375 06e8 2F       		.byte	0x2f
 3376 06e9 E0000000 		.4byte	0xe0
 3377 06ed 05       		.uleb128 0x5
 3378 06ee 03       		.byte	0x3
 3379 06ef 00000000 		.4byte	ADC_started
 3380 06f3 17       		.uleb128 0x17
 3381 06f4 27010000 		.4byte	.LASF87
 3382 06f8 01       		.byte	0x1
 3383 06f9 32       		.byte	0x32
 3384 06fa E0000000 		.4byte	0xe0
 3385 06fe 05       		.uleb128 0x5
 3386 06ff 03       		.byte	0x3
 3387 0700 00000000 		.4byte	ADC_Config
 3388 0704 17       		.uleb128 0x17
 3389 0705 3A040000 		.4byte	.LASF88
 3390 0709 01       		.byte	0x1
 3391 070a 34       		.byte	0x34
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 93


 3392 070b 15070000 		.4byte	0x715
 3393 070f 05       		.uleb128 0x5
 3394 0710 03       		.byte	0x3
 3395 0711 00000000 		.4byte	ADC_Offset
 3396 0715 05       		.uleb128 0x5
 3397 0716 A7000000 		.4byte	0xa7
 3398 071a 17       		.uleb128 0x17
 3399 071b F9040000 		.4byte	.LASF89
 3400 071f 01       		.byte	0x1
 3401 0720 35       		.byte	0x35
 3402 0721 15070000 		.4byte	0x715
 3403 0725 05       		.uleb128 0x5
 3404 0726 03       		.byte	0x3
 3405 0727 00000000 		.4byte	ADC_CountsPerVolt
 3406 072b 00       		.byte	0
 3407              		.section	.debug_abbrev,"",%progbits
 3408              	.Ldebug_abbrev0:
 3409 0000 01       		.uleb128 0x1
 3410 0001 11       		.uleb128 0x11
 3411 0002 01       		.byte	0x1
 3412 0003 25       		.uleb128 0x25
 3413 0004 0E       		.uleb128 0xe
 3414 0005 13       		.uleb128 0x13
 3415 0006 0B       		.uleb128 0xb
 3416 0007 03       		.uleb128 0x3
 3417 0008 0E       		.uleb128 0xe
 3418 0009 1B       		.uleb128 0x1b
 3419 000a 0E       		.uleb128 0xe
 3420 000b 55       		.uleb128 0x55
 3421 000c 17       		.uleb128 0x17
 3422 000d 11       		.uleb128 0x11
 3423 000e 01       		.uleb128 0x1
 3424 000f 10       		.uleb128 0x10
 3425 0010 17       		.uleb128 0x17
 3426 0011 00       		.byte	0
 3427 0012 00       		.byte	0
 3428 0013 02       		.uleb128 0x2
 3429 0014 24       		.uleb128 0x24
 3430 0015 00       		.byte	0
 3431 0016 0B       		.uleb128 0xb
 3432 0017 0B       		.uleb128 0xb
 3433 0018 3E       		.uleb128 0x3e
 3434 0019 0B       		.uleb128 0xb
 3435 001a 03       		.uleb128 0x3
 3436 001b 0E       		.uleb128 0xe
 3437 001c 00       		.byte	0
 3438 001d 00       		.byte	0
 3439 001e 03       		.uleb128 0x3
 3440 001f 24       		.uleb128 0x24
 3441 0020 00       		.byte	0
 3442 0021 0B       		.uleb128 0xb
 3443 0022 0B       		.uleb128 0xb
 3444 0023 3E       		.uleb128 0x3e
 3445 0024 0B       		.uleb128 0xb
 3446 0025 03       		.uleb128 0x3
 3447 0026 08       		.uleb128 0x8
 3448 0027 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 94


 3449 0028 00       		.byte	0
 3450 0029 04       		.uleb128 0x4
 3451 002a 16       		.uleb128 0x16
 3452 002b 00       		.byte	0
 3453 002c 03       		.uleb128 0x3
 3454 002d 0E       		.uleb128 0xe
 3455 002e 3A       		.uleb128 0x3a
 3456 002f 0B       		.uleb128 0xb
 3457 0030 3B       		.uleb128 0x3b
 3458 0031 05       		.uleb128 0x5
 3459 0032 49       		.uleb128 0x49
 3460 0033 13       		.uleb128 0x13
 3461 0034 00       		.byte	0
 3462 0035 00       		.byte	0
 3463 0036 05       		.uleb128 0x5
 3464 0037 35       		.uleb128 0x35
 3465 0038 00       		.byte	0
 3466 0039 49       		.uleb128 0x49
 3467 003a 13       		.uleb128 0x13
 3468 003b 00       		.byte	0
 3469 003c 00       		.byte	0
 3470 003d 06       		.uleb128 0x6
 3471 003e 13       		.uleb128 0x13
 3472 003f 01       		.byte	0x1
 3473 0040 0B       		.uleb128 0xb
 3474 0041 0B       		.uleb128 0xb
 3475 0042 3A       		.uleb128 0x3a
 3476 0043 0B       		.uleb128 0xb
 3477 0044 3B       		.uleb128 0x3b
 3478 0045 0B       		.uleb128 0xb
 3479 0046 01       		.uleb128 0x1
 3480 0047 13       		.uleb128 0x13
 3481 0048 00       		.byte	0
 3482 0049 00       		.byte	0
 3483 004a 07       		.uleb128 0x7
 3484 004b 0D       		.uleb128 0xd
 3485 004c 00       		.byte	0
 3486 004d 03       		.uleb128 0x3
 3487 004e 0E       		.uleb128 0xe
 3488 004f 3A       		.uleb128 0x3a
 3489 0050 0B       		.uleb128 0xb
 3490 0051 3B       		.uleb128 0x3b
 3491 0052 0B       		.uleb128 0xb
 3492 0053 49       		.uleb128 0x49
 3493 0054 13       		.uleb128 0x13
 3494 0055 38       		.uleb128 0x38
 3495 0056 0B       		.uleb128 0xb
 3496 0057 00       		.byte	0
 3497 0058 00       		.byte	0
 3498 0059 08       		.uleb128 0x8
 3499 005a 16       		.uleb128 0x16
 3500 005b 00       		.byte	0
 3501 005c 03       		.uleb128 0x3
 3502 005d 0E       		.uleb128 0xe
 3503 005e 3A       		.uleb128 0x3a
 3504 005f 0B       		.uleb128 0xb
 3505 0060 3B       		.uleb128 0x3b
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 95


 3506 0061 0B       		.uleb128 0xb
 3507 0062 49       		.uleb128 0x49
 3508 0063 13       		.uleb128 0x13
 3509 0064 00       		.byte	0
 3510 0065 00       		.byte	0
 3511 0066 09       		.uleb128 0x9
 3512 0067 2E       		.uleb128 0x2e
 3513 0068 00       		.byte	0
 3514 0069 3F       		.uleb128 0x3f
 3515 006a 19       		.uleb128 0x19
 3516 006b 03       		.uleb128 0x3
 3517 006c 0E       		.uleb128 0xe
 3518 006d 3A       		.uleb128 0x3a
 3519 006e 0B       		.uleb128 0xb
 3520 006f 3B       		.uleb128 0x3b
 3521 0070 0B       		.uleb128 0xb
 3522 0071 27       		.uleb128 0x27
 3523 0072 19       		.uleb128 0x19
 3524 0073 11       		.uleb128 0x11
 3525 0074 01       		.uleb128 0x1
 3526 0075 12       		.uleb128 0x12
 3527 0076 06       		.uleb128 0x6
 3528 0077 40       		.uleb128 0x40
 3529 0078 18       		.uleb128 0x18
 3530 0079 9642     		.uleb128 0x2116
 3531 007b 19       		.uleb128 0x19
 3532 007c 00       		.byte	0
 3533 007d 00       		.byte	0
 3534 007e 0A       		.uleb128 0xa
 3535 007f 2E       		.uleb128 0x2e
 3536 0080 01       		.byte	0x1
 3537 0081 3F       		.uleb128 0x3f
 3538 0082 19       		.uleb128 0x19
 3539 0083 03       		.uleb128 0x3
 3540 0084 0E       		.uleb128 0xe
 3541 0085 3A       		.uleb128 0x3a
 3542 0086 0B       		.uleb128 0xb
 3543 0087 3B       		.uleb128 0x3b
 3544 0088 0B       		.uleb128 0xb
 3545 0089 27       		.uleb128 0x27
 3546 008a 19       		.uleb128 0x19
 3547 008b 11       		.uleb128 0x11
 3548 008c 01       		.uleb128 0x1
 3549 008d 12       		.uleb128 0x12
 3550 008e 06       		.uleb128 0x6
 3551 008f 40       		.uleb128 0x40
 3552 0090 18       		.uleb128 0x18
 3553 0091 9642     		.uleb128 0x2116
 3554 0093 19       		.uleb128 0x19
 3555 0094 01       		.uleb128 0x1
 3556 0095 13       		.uleb128 0x13
 3557 0096 00       		.byte	0
 3558 0097 00       		.byte	0
 3559 0098 0B       		.uleb128 0xb
 3560 0099 34       		.uleb128 0x34
 3561 009a 00       		.byte	0
 3562 009b 03       		.uleb128 0x3
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 96


 3563 009c 0E       		.uleb128 0xe
 3564 009d 3A       		.uleb128 0x3a
 3565 009e 0B       		.uleb128 0xb
 3566 009f 3B       		.uleb128 0x3b
 3567 00a0 0B       		.uleb128 0xb
 3568 00a1 49       		.uleb128 0x49
 3569 00a2 13       		.uleb128 0x13
 3570 00a3 02       		.uleb128 0x2
 3571 00a4 18       		.uleb128 0x18
 3572 00a5 00       		.byte	0
 3573 00a6 00       		.byte	0
 3574 00a7 0C       		.uleb128 0xc
 3575 00a8 2E       		.uleb128 0x2e
 3576 00a9 00       		.byte	0
 3577 00aa 3F       		.uleb128 0x3f
 3578 00ab 19       		.uleb128 0x19
 3579 00ac 03       		.uleb128 0x3
 3580 00ad 0E       		.uleb128 0xe
 3581 00ae 3A       		.uleb128 0x3a
 3582 00af 0B       		.uleb128 0xb
 3583 00b0 3B       		.uleb128 0x3b
 3584 00b1 05       		.uleb128 0x5
 3585 00b2 27       		.uleb128 0x27
 3586 00b3 19       		.uleb128 0x19
 3587 00b4 11       		.uleb128 0x11
 3588 00b5 01       		.uleb128 0x1
 3589 00b6 12       		.uleb128 0x12
 3590 00b7 06       		.uleb128 0x6
 3591 00b8 40       		.uleb128 0x40
 3592 00b9 18       		.uleb128 0x18
 3593 00ba 9642     		.uleb128 0x2116
 3594 00bc 19       		.uleb128 0x19
 3595 00bd 00       		.byte	0
 3596 00be 00       		.byte	0
 3597 00bf 0D       		.uleb128 0xd
 3598 00c0 2E       		.uleb128 0x2e
 3599 00c1 01       		.byte	0x1
 3600 00c2 3F       		.uleb128 0x3f
 3601 00c3 19       		.uleb128 0x19
 3602 00c4 03       		.uleb128 0x3
 3603 00c5 0E       		.uleb128 0xe
 3604 00c6 3A       		.uleb128 0x3a
 3605 00c7 0B       		.uleb128 0xb
 3606 00c8 3B       		.uleb128 0x3b
 3607 00c9 05       		.uleb128 0x5
 3608 00ca 27       		.uleb128 0x27
 3609 00cb 19       		.uleb128 0x19
 3610 00cc 11       		.uleb128 0x11
 3611 00cd 01       		.uleb128 0x1
 3612 00ce 12       		.uleb128 0x12
 3613 00cf 06       		.uleb128 0x6
 3614 00d0 40       		.uleb128 0x40
 3615 00d1 18       		.uleb128 0x18
 3616 00d2 9642     		.uleb128 0x2116
 3617 00d4 19       		.uleb128 0x19
 3618 00d5 01       		.uleb128 0x1
 3619 00d6 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 97


 3620 00d7 00       		.byte	0
 3621 00d8 00       		.byte	0
 3622 00d9 0E       		.uleb128 0xe
 3623 00da 34       		.uleb128 0x34
 3624 00db 00       		.byte	0
 3625 00dc 03       		.uleb128 0x3
 3626 00dd 0E       		.uleb128 0xe
 3627 00de 3A       		.uleb128 0x3a
 3628 00df 0B       		.uleb128 0xb
 3629 00e0 3B       		.uleb128 0x3b
 3630 00e1 05       		.uleb128 0x5
 3631 00e2 49       		.uleb128 0x49
 3632 00e3 13       		.uleb128 0x13
 3633 00e4 02       		.uleb128 0x2
 3634 00e5 18       		.uleb128 0x18
 3635 00e6 00       		.byte	0
 3636 00e7 00       		.byte	0
 3637 00e8 0F       		.uleb128 0xf
 3638 00e9 2E       		.uleb128 0x2e
 3639 00ea 01       		.byte	0x1
 3640 00eb 3F       		.uleb128 0x3f
 3641 00ec 19       		.uleb128 0x19
 3642 00ed 03       		.uleb128 0x3
 3643 00ee 0E       		.uleb128 0xe
 3644 00ef 3A       		.uleb128 0x3a
 3645 00f0 0B       		.uleb128 0xb
 3646 00f1 3B       		.uleb128 0x3b
 3647 00f2 05       		.uleb128 0x5
 3648 00f3 27       		.uleb128 0x27
 3649 00f4 19       		.uleb128 0x19
 3650 00f5 11       		.uleb128 0x11
 3651 00f6 01       		.uleb128 0x1
 3652 00f7 12       		.uleb128 0x12
 3653 00f8 06       		.uleb128 0x6
 3654 00f9 40       		.uleb128 0x40
 3655 00fa 18       		.uleb128 0x18
 3656 00fb 9742     		.uleb128 0x2117
 3657 00fd 19       		.uleb128 0x19
 3658 00fe 01       		.uleb128 0x1
 3659 00ff 13       		.uleb128 0x13
 3660 0100 00       		.byte	0
 3661 0101 00       		.byte	0
 3662 0102 10       		.uleb128 0x10
 3663 0103 05       		.uleb128 0x5
 3664 0104 00       		.byte	0
 3665 0105 03       		.uleb128 0x3
 3666 0106 0E       		.uleb128 0xe
 3667 0107 3A       		.uleb128 0x3a
 3668 0108 0B       		.uleb128 0xb
 3669 0109 3B       		.uleb128 0x3b
 3670 010a 05       		.uleb128 0x5
 3671 010b 49       		.uleb128 0x49
 3672 010c 13       		.uleb128 0x13
 3673 010d 02       		.uleb128 0x2
 3674 010e 18       		.uleb128 0x18
 3675 010f 00       		.byte	0
 3676 0110 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 98


 3677 0111 11       		.uleb128 0x11
 3678 0112 2E       		.uleb128 0x2e
 3679 0113 01       		.byte	0x1
 3680 0114 3F       		.uleb128 0x3f
 3681 0115 19       		.uleb128 0x19
 3682 0116 03       		.uleb128 0x3
 3683 0117 0E       		.uleb128 0xe
 3684 0118 3A       		.uleb128 0x3a
 3685 0119 0B       		.uleb128 0xb
 3686 011a 3B       		.uleb128 0x3b
 3687 011b 05       		.uleb128 0x5
 3688 011c 27       		.uleb128 0x27
 3689 011d 19       		.uleb128 0x19
 3690 011e 49       		.uleb128 0x49
 3691 011f 13       		.uleb128 0x13
 3692 0120 11       		.uleb128 0x11
 3693 0121 01       		.uleb128 0x1
 3694 0122 12       		.uleb128 0x12
 3695 0123 06       		.uleb128 0x6
 3696 0124 40       		.uleb128 0x40
 3697 0125 18       		.uleb128 0x18
 3698 0126 9642     		.uleb128 0x2116
 3699 0128 19       		.uleb128 0x19
 3700 0129 01       		.uleb128 0x1
 3701 012a 13       		.uleb128 0x13
 3702 012b 00       		.byte	0
 3703 012c 00       		.byte	0
 3704 012d 12       		.uleb128 0x12
 3705 012e 2E       		.uleb128 0x2e
 3706 012f 01       		.byte	0x1
 3707 0130 3F       		.uleb128 0x3f
 3708 0131 19       		.uleb128 0x19
 3709 0132 03       		.uleb128 0x3
 3710 0133 0E       		.uleb128 0xe
 3711 0134 3A       		.uleb128 0x3a
 3712 0135 0B       		.uleb128 0xb
 3713 0136 3B       		.uleb128 0x3b
 3714 0137 05       		.uleb128 0x5
 3715 0138 27       		.uleb128 0x27
 3716 0139 19       		.uleb128 0x19
 3717 013a 49       		.uleb128 0x49
 3718 013b 13       		.uleb128 0x13
 3719 013c 11       		.uleb128 0x11
 3720 013d 01       		.uleb128 0x1
 3721 013e 12       		.uleb128 0x12
 3722 013f 06       		.uleb128 0x6
 3723 0140 40       		.uleb128 0x40
 3724 0141 18       		.uleb128 0x18
 3725 0142 9742     		.uleb128 0x2117
 3726 0144 19       		.uleb128 0x19
 3727 0145 01       		.uleb128 0x1
 3728 0146 13       		.uleb128 0x13
 3729 0147 00       		.byte	0
 3730 0148 00       		.byte	0
 3731 0149 13       		.uleb128 0x13
 3732 014a 2E       		.uleb128 0x2e
 3733 014b 00       		.byte	0
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 99


 3734 014c 3F       		.uleb128 0x3f
 3735 014d 19       		.uleb128 0x19
 3736 014e 03       		.uleb128 0x3
 3737 014f 0E       		.uleb128 0xe
 3738 0150 3A       		.uleb128 0x3a
 3739 0151 0B       		.uleb128 0xb
 3740 0152 3B       		.uleb128 0x3b
 3741 0153 05       		.uleb128 0x5
 3742 0154 27       		.uleb128 0x27
 3743 0155 19       		.uleb128 0x19
 3744 0156 11       		.uleb128 0x11
 3745 0157 01       		.uleb128 0x1
 3746 0158 12       		.uleb128 0x12
 3747 0159 06       		.uleb128 0x6
 3748 015a 40       		.uleb128 0x40
 3749 015b 18       		.uleb128 0x18
 3750 015c 9742     		.uleb128 0x2117
 3751 015e 19       		.uleb128 0x19
 3752 015f 00       		.byte	0
 3753 0160 00       		.byte	0
 3754 0161 14       		.uleb128 0x14
 3755 0162 2E       		.uleb128 0x2e
 3756 0163 01       		.byte	0x1
 3757 0164 03       		.uleb128 0x3
 3758 0165 0E       		.uleb128 0xe
 3759 0166 3A       		.uleb128 0x3a
 3760 0167 0B       		.uleb128 0xb
 3761 0168 3B       		.uleb128 0x3b
 3762 0169 05       		.uleb128 0x5
 3763 016a 27       		.uleb128 0x27
 3764 016b 19       		.uleb128 0x19
 3765 016c 11       		.uleb128 0x11
 3766 016d 01       		.uleb128 0x1
 3767 016e 12       		.uleb128 0x12
 3768 016f 06       		.uleb128 0x6
 3769 0170 40       		.uleb128 0x40
 3770 0171 18       		.uleb128 0x18
 3771 0172 9642     		.uleb128 0x2116
 3772 0174 19       		.uleb128 0x19
 3773 0175 01       		.uleb128 0x1
 3774 0176 13       		.uleb128 0x13
 3775 0177 00       		.byte	0
 3776 0178 00       		.byte	0
 3777 0179 15       		.uleb128 0x15
 3778 017a 01       		.uleb128 0x1
 3779 017b 01       		.byte	0x1
 3780 017c 49       		.uleb128 0x49
 3781 017d 13       		.uleb128 0x13
 3782 017e 01       		.uleb128 0x1
 3783 017f 13       		.uleb128 0x13
 3784 0180 00       		.byte	0
 3785 0181 00       		.byte	0
 3786 0182 16       		.uleb128 0x16
 3787 0183 21       		.uleb128 0x21
 3788 0184 00       		.byte	0
 3789 0185 49       		.uleb128 0x49
 3790 0186 13       		.uleb128 0x13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 100


 3791 0187 2F       		.uleb128 0x2f
 3792 0188 0B       		.uleb128 0xb
 3793 0189 00       		.byte	0
 3794 018a 00       		.byte	0
 3795 018b 17       		.uleb128 0x17
 3796 018c 34       		.uleb128 0x34
 3797 018d 00       		.byte	0
 3798 018e 03       		.uleb128 0x3
 3799 018f 0E       		.uleb128 0xe
 3800 0190 3A       		.uleb128 0x3a
 3801 0191 0B       		.uleb128 0xb
 3802 0192 3B       		.uleb128 0x3b
 3803 0193 0B       		.uleb128 0xb
 3804 0194 49       		.uleb128 0x49
 3805 0195 13       		.uleb128 0x13
 3806 0196 3F       		.uleb128 0x3f
 3807 0197 19       		.uleb128 0x19
 3808 0198 02       		.uleb128 0x2
 3809 0199 18       		.uleb128 0x18
 3810 019a 00       		.byte	0
 3811 019b 00       		.byte	0
 3812 019c 00       		.byte	0
 3813              		.section	.debug_aranges,"",%progbits
 3814 0000 E4000000 		.4byte	0xe4
 3815 0004 0200     		.2byte	0x2
 3816 0006 00000000 		.4byte	.Ldebug_info0
 3817 000a 04       		.byte	0x4
 3818 000b 00       		.byte	0
 3819 000c 0000     		.2byte	0
 3820 000e 0000     		.2byte	0
 3821 0010 00000000 		.4byte	.LFB0
 3822 0014 1C010000 		.4byte	.LFE0-.LFB0
 3823 0018 00000000 		.4byte	.LFB1
 3824 001c 58010000 		.4byte	.LFE1-.LFB1
 3825 0020 00000000 		.4byte	.LFB2
 3826 0024 30000000 		.4byte	.LFE2-.LFB2
 3827 0028 00000000 		.4byte	.LFB3
 3828 002c 7C010000 		.4byte	.LFE3-.LFB3
 3829 0030 00000000 		.4byte	.LFB4
 3830 0034 3C000000 		.4byte	.LFE4-.LFB4
 3831 0038 00000000 		.4byte	.LFB5
 3832 003c 38000000 		.4byte	.LFE5-.LFB5
 3833 0040 00000000 		.4byte	.LFB6
 3834 0044 AC000000 		.4byte	.LFE6-.LFB6
 3835 0048 00000000 		.4byte	.LFB7
 3836 004c 3C000000 		.4byte	.LFE7-.LFB7
 3837 0050 00000000 		.4byte	.LFB8
 3838 0054 20000000 		.4byte	.LFE8-.LFB8
 3839 0058 00000000 		.4byte	.LFB9
 3840 005c 20000000 		.4byte	.LFE9-.LFB9
 3841 0060 00000000 		.4byte	.LFB10
 3842 0064 4C000000 		.4byte	.LFE10-.LFB10
 3843 0068 00000000 		.4byte	.LFB11
 3844 006c 68000000 		.4byte	.LFE11-.LFB11
 3845 0070 00000000 		.4byte	.LFB12
 3846 0074 7C000000 		.4byte	.LFE12-.LFB12
 3847 0078 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 101


 3848 007c A8000000 		.4byte	.LFE13-.LFB13
 3849 0080 00000000 		.4byte	.LFB14
 3850 0084 1C000000 		.4byte	.LFE14-.LFB14
 3851 0088 00000000 		.4byte	.LFB15
 3852 008c 1C000000 		.4byte	.LFE15-.LFB15
 3853 0090 00000000 		.4byte	.LFB16
 3854 0094 3C000000 		.4byte	.LFE16-.LFB16
 3855 0098 00000000 		.4byte	.LFB17
 3856 009c 44000000 		.4byte	.LFE17-.LFB17
 3857 00a0 00000000 		.4byte	.LFB18
 3858 00a4 A4000000 		.4byte	.LFE18-.LFB18
 3859 00a8 00000000 		.4byte	.LFB19
 3860 00ac 60010000 		.4byte	.LFE19-.LFB19
 3861 00b0 00000000 		.4byte	.LFB20
 3862 00b4 90000000 		.4byte	.LFE20-.LFB20
 3863 00b8 00000000 		.4byte	.LFB21
 3864 00bc 70010000 		.4byte	.LFE21-.LFB21
 3865 00c0 00000000 		.4byte	.LFB22
 3866 00c4 7C000000 		.4byte	.LFE22-.LFB22
 3867 00c8 00000000 		.4byte	.LFB23
 3868 00cc 3C000000 		.4byte	.LFE23-.LFB23
 3869 00d0 00000000 		.4byte	.LFB24
 3870 00d4 3C000000 		.4byte	.LFE24-.LFB24
 3871 00d8 00000000 		.4byte	.LFB25
 3872 00dc 38000000 		.4byte	.LFE25-.LFB25
 3873 00e0 00000000 		.4byte	0
 3874 00e4 00000000 		.4byte	0
 3875              		.section	.debug_ranges,"",%progbits
 3876              	.Ldebug_ranges0:
 3877 0000 00000000 		.4byte	.LFB0
 3878 0004 1C010000 		.4byte	.LFE0
 3879 0008 00000000 		.4byte	.LFB1
 3880 000c 58010000 		.4byte	.LFE1
 3881 0010 00000000 		.4byte	.LFB2
 3882 0014 30000000 		.4byte	.LFE2
 3883 0018 00000000 		.4byte	.LFB3
 3884 001c 7C010000 		.4byte	.LFE3
 3885 0020 00000000 		.4byte	.LFB4
 3886 0024 3C000000 		.4byte	.LFE4
 3887 0028 00000000 		.4byte	.LFB5
 3888 002c 38000000 		.4byte	.LFE5
 3889 0030 00000000 		.4byte	.LFB6
 3890 0034 AC000000 		.4byte	.LFE6
 3891 0038 00000000 		.4byte	.LFB7
 3892 003c 3C000000 		.4byte	.LFE7
 3893 0040 00000000 		.4byte	.LFB8
 3894 0044 20000000 		.4byte	.LFE8
 3895 0048 00000000 		.4byte	.LFB9
 3896 004c 20000000 		.4byte	.LFE9
 3897 0050 00000000 		.4byte	.LFB10
 3898 0054 4C000000 		.4byte	.LFE10
 3899 0058 00000000 		.4byte	.LFB11
 3900 005c 68000000 		.4byte	.LFE11
 3901 0060 00000000 		.4byte	.LFB12
 3902 0064 7C000000 		.4byte	.LFE12
 3903 0068 00000000 		.4byte	.LFB13
 3904 006c A8000000 		.4byte	.LFE13
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 102


 3905 0070 00000000 		.4byte	.LFB14
 3906 0074 1C000000 		.4byte	.LFE14
 3907 0078 00000000 		.4byte	.LFB15
 3908 007c 1C000000 		.4byte	.LFE15
 3909 0080 00000000 		.4byte	.LFB16
 3910 0084 3C000000 		.4byte	.LFE16
 3911 0088 00000000 		.4byte	.LFB17
 3912 008c 44000000 		.4byte	.LFE17
 3913 0090 00000000 		.4byte	.LFB18
 3914 0094 A4000000 		.4byte	.LFE18
 3915 0098 00000000 		.4byte	.LFB19
 3916 009c 60010000 		.4byte	.LFE19
 3917 00a0 00000000 		.4byte	.LFB20
 3918 00a4 90000000 		.4byte	.LFE20
 3919 00a8 00000000 		.4byte	.LFB21
 3920 00ac 70010000 		.4byte	.LFE21
 3921 00b0 00000000 		.4byte	.LFB22
 3922 00b4 7C000000 		.4byte	.LFE22
 3923 00b8 00000000 		.4byte	.LFB23
 3924 00bc 3C000000 		.4byte	.LFE23
 3925 00c0 00000000 		.4byte	.LFB24
 3926 00c4 3C000000 		.4byte	.LFE24
 3927 00c8 00000000 		.4byte	.LFB25
 3928 00cc 38000000 		.4byte	.LFE25
 3929 00d0 00000000 		.4byte	0
 3930 00d4 00000000 		.4byte	0
 3931              		.section	.debug_line,"",%progbits
 3932              	.Ldebug_line0:
 3933 0000 4C030000 		.section	.debug_str,"MS",%progbits,1
 3933      02004900 
 3933      00000201 
 3933      FB0E0D00 
 3933      01010101 
 3934              	.LASF10:
 3935 0000 75696E74 		.ascii	"uint16\000"
 3935      313600
 3936              	.LASF56:
 3937 0007 61646347 		.ascii	"adcGain\000"
 3937      61696E00 
 3938              	.LASF71:
 3939 000f 696E7075 		.ascii	"inputRange\000"
 3939      7452616E 
 3939      676500
 3940              	.LASF60:
 3941 001a 4144435F 		.ascii	"ADC_CountsTo_Volts\000"
 3941      436F756E 
 3941      7473546F 
 3941      5F566F6C 
 3941      747300
 3942              	.LASF85:
 3943 002d 4144435F 		.ascii	"ADC_stopConversion\000"
 3943      73746F70 
 3943      436F6E76 
 3943      65727369 
 3943      6F6E00
 3944              	.LASF86:
 3945 0040 4144435F 		.ascii	"ADC_started\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 103


 3945      73746172 
 3945      74656400 
 3946              	.LASF80:
 3947 004c 4144435F 		.ascii	"ADC_Read16\000"
 3947      52656164 
 3947      313600
 3948              	.LASF24:
 3949 0057 67636F72 		.ascii	"gcor\000"
 3949      00
 3950              	.LASF90:
 3951 005c 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 3951      43313120 
 3951      352E342E 
 3951      31203230 
 3951      31363036 
 3952 008f 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 3952      20726576 
 3952      6973696F 
 3952      6E203233 
 3952      37373135 
 3953 00c2 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 3953      66756E63 
 3953      74696F6E 
 3953      2D736563 
 3953      74696F6E 
 3954              	.LASF29:
 3955 00ea 4144435F 		.ascii	"ADC_Init\000"
 3955      496E6974 
 3955      00
 3956              	.LASF7:
 3957 00f3 6C6F6E67 		.ascii	"long long unsigned int\000"
 3957      206C6F6E 
 3957      6720756E 
 3957      7369676E 
 3957      65642069 
 3958              	.LASF91:
 3959 010a 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC.c\000"
 3959      72617465 
 3959      645F536F 
 3959      75726365 
 3959      5C50536F 
 3960              	.LASF87:
 3961 0127 4144435F 		.ascii	"ADC_Config\000"
 3961      436F6E66 
 3961      696700
 3962              	.LASF45:
 3963 0132 4144435F 		.ascii	"ADC_StartConvert\000"
 3963      53746172 
 3963      74436F6E 
 3963      76657274 
 3963      00
 3964              	.LASF73:
 3965 0143 69646561 		.ascii	"idealOddDecGain\000"
 3965      6C4F6464 
 3965      44656347 
 3965      61696E00 
 3966              	.LASF6:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 104


 3967 0153 6C6F6E67 		.ascii	"long long int\000"
 3967      206C6F6E 
 3967      6720696E 
 3967      7400
 3968              	.LASF0:
 3969 0161 7369676E 		.ascii	"signed char\000"
 3969      65642063 
 3969      68617200 
 3970              	.LASF39:
 3971 016d 73746174 		.ascii	"status\000"
 3971      757300
 3972              	.LASF33:
 3973 0174 4144435F 		.ascii	"ADC_SetBufferGain\000"
 3973      53657442 
 3973      75666665 
 3973      72476169 
 3973      6E00
 3974              	.LASF14:
 3975 0186 696E7433 		.ascii	"int32\000"
 3975      3200
 3976              	.LASF30:
 3977 018c 4144435F 		.ascii	"ADC_Start\000"
 3977      53746172 
 3977      7400
 3978              	.LASF84:
 3979 0196 4144435F 		.ascii	"ADC_convDone\000"
 3979      636F6E76 
 3979      446F6E65 
 3979      00
 3980              	.LASF4:
 3981 01a3 6C6F6E67 		.ascii	"long int\000"
 3981      20696E74 
 3981      00
 3982              	.LASF62:
 3983 01ac 4144435F 		.ascii	"ADC_CountsTo_uVolts\000"
 3983      436F756E 
 3983      7473546F 
 3983      5F75566F 
 3983      6C747300 
 3984              	.LASF20:
 3985 01c0 72656731 		.ascii	"reg16\000"
 3985      3600
 3986              	.LASF9:
 3987 01c6 75696E74 		.ascii	"uint8\000"
 3987      3800
 3988              	.LASF17:
 3989 01cc 646F7562 		.ascii	"double\000"
 3989      6C6500
 3990              	.LASF52:
 3991 01d3 4144435F 		.ascii	"ADC_GetResult32\000"
 3991      47657452 
 3991      6573756C 
 3991      74333200 
 3992              	.LASF61:
 3993 01e3 566F6C74 		.ascii	"Volts\000"
 3993      7300
 3994              	.LASF11:
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 105


 3995 01e9 75696E74 		.ascii	"uint32\000"
 3995      333200
 3996              	.LASF83:
 3997 01f0 4144435F 		.ascii	"ADC_initVar\000"
 3997      696E6974 
 3997      56617200 
 3998              	.LASF77:
 3999 01fc 4144435F 		.ascii	"ADC_SetDSMRef0Reg\000"
 3999      53657444 
 3999      534D5265 
 3999      66305265 
 3999      6700
 4000              	.LASF78:
 4001 020e 76616C75 		.ascii	"value\000"
 4001      6500
 4002              	.LASF48:
 4003 0214 7265744D 		.ascii	"retMode\000"
 4003      6F646500 
 4004              	.LASF8:
 4005 021c 756E7369 		.ascii	"unsigned int\000"
 4005      676E6564 
 4005      20696E74 
 4005      00
 4006              	.LASF63:
 4007 0229 75566F6C 		.ascii	"uVolts\000"
 4007      747300
 4008              	.LASF5:
 4009 0230 6C6F6E67 		.ascii	"long unsigned int\000"
 4009      20756E73 
 4009      69676E65 
 4009      6420696E 
 4009      7400
 4010              	.LASF26:
 4011 0242 4144435F 		.ascii	"ADC_GCOR_STRUCT\000"
 4011      47434F52 
 4011      5F535452 
 4011      55435400 
 4012              	.LASF3:
 4013 0252 73686F72 		.ascii	"short unsigned int\000"
 4013      7420756E 
 4013      7369676E 
 4013      65642069 
 4013      6E7400
 4014              	.LASF12:
 4015 0265 696E7438 		.ascii	"int8\000"
 4015      00
 4016              	.LASF46:
 4017 026a 4144435F 		.ascii	"ADC_StopConvert\000"
 4017      53746F70 
 4017      436F6E76 
 4017      65727400 
 4018              	.LASF44:
 4019 027a 67636F72 		.ascii	"gcorValue\000"
 4019      56616C75 
 4019      6500
 4020              	.LASF59:
 4021 0284 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 106


 4021      747300
 4022              	.LASF74:
 4023 028b 666C6173 		.ascii	"flash\000"
 4023      6800
 4024              	.LASF21:
 4025 0291 72656733 		.ascii	"reg32\000"
 4025      3200
 4026              	.LASF70:
 4027 0297 4144435F 		.ascii	"ADC_GainCompensation\000"
 4027      4761696E 
 4027      436F6D70 
 4027      656E7361 
 4027      74696F6E 
 4028              	.LASF15:
 4029 02ac 666C6F61 		.ascii	"float32\000"
 4029      74333200 
 4030              	.LASF23:
 4031 02b4 73697A65 		.ascii	"sizetype\000"
 4031      74797065 
 4031      00
 4032              	.LASF22:
 4033 02bd 6C6F6E67 		.ascii	"long double\000"
 4033      20646F75 
 4033      626C6500 
 4034              	.LASF41:
 4035 02c9 4144435F 		.ascii	"ADC_SetGCOR\000"
 4035      53657447 
 4035      434F5200 
 4036              	.LASF47:
 4037 02d5 4144435F 		.ascii	"ADC_IsEndConversion\000"
 4037      4973456E 
 4037      64436F6E 
 4037      76657273 
 4037      696F6E00 
 4038              	.LASF82:
 4039 02e9 4144435F 		.ascii	"ADC_gcor\000"
 4039      67636F72 
 4039      00
 4040              	.LASF69:
 4041 02f2 4144435F 		.ascii	"ADC_InitConfig\000"
 4041      496E6974 
 4041      436F6E66 
 4041      696700
 4042              	.LASF49:
 4043 0301 4144435F 		.ascii	"ADC_GetResult8\000"
 4043      47657452 
 4043      6573756C 
 4043      743800
 4044              	.LASF37:
 4045 0310 636F6865 		.ascii	"coherency\000"
 4045      72656E63 
 4045      7900
 4046              	.LASF92:
 4047 031a 433A5C55 		.ascii	"C:\\Users\\JeffSnyder\\Downloads\\Electrobass_H7-ma"
 4047      73657273 
 4047      5C4A6566 
 4047      66536E79 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 107


 4047      6465725C 
 4048 0349 73746572 		.ascii	"ster\\Electrobass_H7-master\\PSOC5_electrobass_stri"
 4048      5C456C65 
 4048      6374726F 
 4048      62617373 
 4048      5F48372D 
 4049 037a 6E677365 		.ascii	"ngsensors\\CE210514_PSOC3_5_Thermistor.cydsn\000"
 4049      6E736F72 
 4049      735C4345 
 4049      32313035 
 4049      31345F50 
 4050              	.LASF36:
 4051 03a6 6761696E 		.ascii	"gain\000"
 4051      00
 4052              	.LASF55:
 4053 03ab 4144435F 		.ascii	"ADC_SetGain\000"
 4053      53657447 
 4053      61696E00 
 4054              	.LASF16:
 4055 03b7 666C6F61 		.ascii	"float\000"
 4055      7400
 4056              	.LASF57:
 4057 03bd 4144435F 		.ascii	"ADC_CountsTo_mVolts\000"
 4057      436F756E 
 4057      7473546F 
 4057      5F6D566F 
 4057      6C747300 
 4058              	.LASF19:
 4059 03d1 72656738 		.ascii	"reg8\000"
 4059      00
 4060              	.LASF72:
 4061 03d6 69646561 		.ascii	"idealDecGain\000"
 4061      6C446563 
 4061      4761696E 
 4061      00
 4062              	.LASF75:
 4063 03e3 6E6F726D 		.ascii	"normalised\000"
 4063      616C6973 
 4063      656400
 4064              	.LASF1:
 4065 03ee 756E7369 		.ascii	"unsigned char\000"
 4065      676E6564 
 4065      20636861 
 4065      7200
 4066              	.LASF67:
 4067 03fc 4144435F 		.ascii	"ADC_SelectConfiguration\000"
 4067      53656C65 
 4067      6374436F 
 4067      6E666967 
 4067      75726174 
 4068              	.LASF2:
 4069 0414 73686F72 		.ascii	"short int\000"
 4069      7420696E 
 4069      7400
 4070              	.LASF32:
 4071 041e 4144435F 		.ascii	"ADC_Stop\000"
 4071      53746F70 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 108


 4071      00
 4072              	.LASF76:
 4073 0427 67636F72 		.ascii	"gcorTmp\000"
 4073      546D7000 
 4074              	.LASF66:
 4075 042f 7265736F 		.ascii	"resolution\000"
 4075      6C757469 
 4075      6F6E00
 4076              	.LASF88:
 4077 043a 4144435F 		.ascii	"ADC_Offset\000"
 4077      4F666673 
 4077      657400
 4078              	.LASF64:
 4079 0445 636F6566 		.ascii	"coefA\000"
 4079      4100
 4080              	.LASF65:
 4081 044b 636F6566 		.ascii	"coefB\000"
 4081      4200
 4082              	.LASF18:
 4083 0451 63686172 		.ascii	"char\000"
 4083      00
 4084              	.LASF43:
 4085 0456 6756616C 		.ascii	"gValue\000"
 4085      756500
 4086              	.LASF27:
 4087 045d 636F6E66 		.ascii	"config\000"
 4087      696700
 4088              	.LASF25:
 4089 0464 6776616C 		.ascii	"gval\000"
 4089      00
 4090              	.LASF68:
 4091 0469 72657374 		.ascii	"restart\000"
 4091      61727400 
 4092              	.LASF40:
 4093 0471 746D7056 		.ascii	"tmpValue\000"
 4093      616C7565 
 4093      00
 4094              	.LASF54:
 4095 047a 6F666673 		.ascii	"offset\000"
 4095      657400
 4096              	.LASF35:
 4097 0481 4144435F 		.ascii	"ADC_SetCoherency\000"
 4097      53657443 
 4097      6F686572 
 4097      656E6379 
 4097      00
 4098              	.LASF79:
 4099 0492 4144435F 		.ascii	"ADC_Read8\000"
 4099      52656164 
 4099      3800
 4100              	.LASF58:
 4101 049c 61646343 		.ascii	"adcCounts\000"
 4101      6F756E74 
 4101      7300
 4102              	.LASF81:
 4103 04a6 4144435F 		.ascii	"ADC_Read32\000"
 4103      52656164 
ARM GAS  C:\Users\JEFFSN~1\AppData\Local\Temp\cc3ahjct.s 			page 109


 4103      333200
 4104              	.LASF28:
 4105 04b1 656E6162 		.ascii	"enableInterrupts\000"
 4105      6C65496E 
 4105      74657272 
 4105      75707473 
 4105      00
 4106              	.LASF31:
 4107 04c2 4144435F 		.ascii	"ADC_Enable\000"
 4107      456E6162 
 4107      6C6500
 4108              	.LASF42:
 4109 04cd 4144435F 		.ascii	"ADC_ReadGCOR\000"
 4109      52656164 
 4109      47434F52 
 4109      00
 4110              	.LASF38:
 4111 04da 6761696E 		.ascii	"gainAdjust\000"
 4111      41646A75 
 4111      737400
 4112              	.LASF13:
 4113 04e5 696E7431 		.ascii	"int16\000"
 4113      3600
 4114              	.LASF53:
 4115 04eb 4144435F 		.ascii	"ADC_SetOffset\000"
 4115      5365744F 
 4115      66667365 
 4115      7400
 4116              	.LASF89:
 4117 04f9 4144435F 		.ascii	"ADC_CountsPerVolt\000"
 4117      436F756E 
 4117      74735065 
 4117      72566F6C 
 4117      7400
 4118              	.LASF34:
 4119 050b 746D7052 		.ascii	"tmpReg\000"
 4119      656700
 4120              	.LASF50:
 4121 0512 72657375 		.ascii	"result\000"
 4121      6C7400
 4122              	.LASF51:
 4123 0519 4144435F 		.ascii	"ADC_GetResult16\000"
 4123      47657452 
 4123      6573756C 
 4123      74313600 
 4124              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
